{
    "type": "module",
    "label": "import pytest\n\nfrom backend.data import db\nfrom backend.executor import ExecutionScheduler\nfrom backend.server.model import CreateGraph\nfrom backend.usecases.sample import create_test_graph, create_test_user\nfrom backend.util.service import get_service_client\nfrom backend.util.test import SpinTestServer\n\n\n@pytest.mark.asyncio(scope=\"session\")\nasync def test_agent_schedule(server: SpinTestServer):\n    await db.connect()\n    test_user = await create_test_user()\n    test_graph = await server.agent_server.test_create_graph(\n        create_graph=CreateGraph(graph=create_test_graph()),\n        user_id=test_user.id,\n    )\n\n    scheduler = get_service_client(ExecutionScheduler)\n    schedules = scheduler.get_execution_schedules(test_graph.id, test_user.id)\n    assert len(schedules) == 0\n\n    schedule = scheduler.add_execution_schedule(\n        graph_id=test_graph.id,\n        user_id=test_user.id,\n        graph_version=1,\n        cron=\"0 0 * * *\",\n        input_data={\"input\": \"data\"},\n    )\n    assert schedule\n\n    schedules = scheduler.get_execution_schedules(test_graph.id, test_user.id)\n    assert len(schedules) == 1\n    assert schedules[0].cron == \"0 0 * * *\"\n\n    scheduler.delete_schedule(schedule.id, user_id=test_user.id)\n    schedules = scheduler.get_execution_schedules(test_graph.id, user_id=test_user.id)\n    assert len(schedules) == 0\n",
    "children": [
        {
            "type": "import_statement",
            "label": "import pytest",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "pytest",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "pytest",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.data import db",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.data",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "data",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "db",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "db",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.executor import ExecutionScheduler",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.executor",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "executor",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "ExecutionScheduler",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "ExecutionScheduler",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.server.model import CreateGraph",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.server.model",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "server",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "model",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "CreateGraph",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "CreateGraph",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.usecases.sample import create_test_graph, create_test_user",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.usecases.sample",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "usecases",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "sample",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "create_test_graph",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "create_test_graph",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "create_test_user",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "create_test_user",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.util.service import get_service_client",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.util.service",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "util",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "service",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "get_service_client",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "get_service_client",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.util.test import SpinTestServer",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.util.test",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "util",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "test",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "SpinTestServer",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "SpinTestServer",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "decorated_definition",
            "label": "@pytest.mark.asyncio(scope=\"session\")\nasync def test_agent_schedule(server: SpinTestServer):\n    await db.connect()\n    test_user = await create_test_user()\n    test_graph = await server.agent_server.test_create_graph(\n        create_graph=CreateGraph(graph=create_test_graph()),\n        user_id=test_user.id,\n    )\n\n    scheduler = get_service_client(ExecutionScheduler)\n    schedules = scheduler.get_execution_schedules(test_graph.id, test_user.id)\n    assert len(schedules) == 0\n\n    schedule = scheduler.add_execution_schedule(\n        graph_id=test_graph.id,\n        user_id=test_user.id,\n        graph_version=1,\n        cron=\"0 0 * * *\",\n        input_data={\"input\": \"data\"},\n    )\n    assert schedule\n\n    schedules = scheduler.get_execution_schedules(test_graph.id, test_user.id)\n    assert len(schedules) == 1\n    assert schedules[0].cron == \"0 0 * * *\"\n\n    scheduler.delete_schedule(schedule.id, user_id=test_user.id)\n    schedules = scheduler.get_execution_schedules(test_graph.id, user_id=test_user.id)\n    assert len(schedules) == 0",
            "children": [
                {
                    "type": "decorator",
                    "label": "@pytest.mark.asyncio(scope=\"session\")",
                    "children": [
                        {
                            "type": "call",
                            "label": "pytest.mark.asyncio(scope=\"session\")",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "pytest.mark.asyncio",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "pytest.mark",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "pytest",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "mark",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "asyncio",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(scope=\"session\")",
                                    "children": [
                                        {
                                            "type": "keyword_argument",
                                            "label": "scope=\"session\"",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "scope",
                                                    "children": []
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"session\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "session",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "function_definition",
                    "label": "async def test_agent_schedule(server: SpinTestServer):\n    await db.connect()\n    test_user = await create_test_user()\n    test_graph = await server.agent_server.test_create_graph(\n        create_graph=CreateGraph(graph=create_test_graph()),\n        user_id=test_user.id,\n    )\n\n    scheduler = get_service_client(ExecutionScheduler)\n    schedules = scheduler.get_execution_schedules(test_graph.id, test_user.id)\n    assert len(schedules) == 0\n\n    schedule = scheduler.add_execution_schedule(\n        graph_id=test_graph.id,\n        user_id=test_user.id,\n        graph_version=1,\n        cron=\"0 0 * * *\",\n        input_data={\"input\": \"data\"},\n    )\n    assert schedule\n\n    schedules = scheduler.get_execution_schedules(test_graph.id, test_user.id)\n    assert len(schedules) == 1\n    assert schedules[0].cron == \"0 0 * * *\"\n\n    scheduler.delete_schedule(schedule.id, user_id=test_user.id)\n    schedules = scheduler.get_execution_schedules(test_graph.id, user_id=test_user.id)\n    assert len(schedules) == 0",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "test_agent_schedule",
                            "children": []
                        },
                        {
                            "type": "parameters",
                            "label": "(server: SpinTestServer)",
                            "children": [
                                {
                                    "type": "typed_parameter",
                                    "label": "server: SpinTestServer",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "server",
                                            "children": []
                                        },
                                        {
                                            "type": "type",
                                            "label": "SpinTestServer",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "SpinTestServer",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "await db.connect()\n    test_user = await create_test_user()\n    test_graph = await server.agent_server.test_create_graph(\n        create_graph=CreateGraph(graph=create_test_graph()),\n        user_id=test_user.id,\n    )\n\n    scheduler = get_service_client(ExecutionScheduler)\n    schedules = scheduler.get_execution_schedules(test_graph.id, test_user.id)\n    assert len(schedules) == 0\n\n    schedule = scheduler.add_execution_schedule(\n        graph_id=test_graph.id,\n        user_id=test_user.id,\n        graph_version=1,\n        cron=\"0 0 * * *\",\n        input_data={\"input\": \"data\"},\n    )\n    assert schedule\n\n    schedules = scheduler.get_execution_schedules(test_graph.id, test_user.id)\n    assert len(schedules) == 1\n    assert schedules[0].cron == \"0 0 * * *\"\n\n    scheduler.delete_schedule(schedule.id, user_id=test_user.id)\n    schedules = scheduler.get_execution_schedules(test_graph.id, user_id=test_user.id)\n    assert len(schedules) == 0",
                            "children": [
                                {
                                    "type": "expression_statement",
                                    "label": "await db.connect()",
                                    "children": [
                                        {
                                            "type": "await",
                                            "label": "await db.connect()",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "db.connect()",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "db.connect",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "db",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "connect",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "()",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "test_user = await create_test_user()",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "test_user = await create_test_user()",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "test_user",
                                                    "children": []
                                                },
                                                {
                                                    "type": "await",
                                                    "label": "await create_test_user()",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "create_test_user()",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "create_test_user",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "test_graph = await server.agent_server.test_create_graph(\n        create_graph=CreateGraph(graph=create_test_graph()),\n        user_id=test_user.id,\n    )",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "test_graph = await server.agent_server.test_create_graph(\n        create_graph=CreateGraph(graph=create_test_graph()),\n        user_id=test_user.id,\n    )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "test_graph",
                                                    "children": []
                                                },
                                                {
                                                    "type": "await",
                                                    "label": "await server.agent_server.test_create_graph(\n        create_graph=CreateGraph(graph=create_test_graph()),\n        user_id=test_user.id,\n    )",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "server.agent_server.test_create_graph(\n        create_graph=CreateGraph(graph=create_test_graph()),\n        user_id=test_user.id,\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "server.agent_server.test_create_graph",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "server.agent_server",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "server",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "agent_server",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "test_create_graph",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n        create_graph=CreateGraph(graph=create_test_graph()),\n        user_id=test_user.id,\n    )",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "create_graph=CreateGraph(graph=create_test_graph())",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "create_graph",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "CreateGraph(graph=create_test_graph())",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "CreateGraph",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(graph=create_test_graph())",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "keyword_argument",
                                                                                                    "label": "graph=create_test_graph()",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "graph",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "call",
                                                                                                            "label": "create_test_graph()",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "create_test_graph",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "argument_list",
                                                                                                                    "label": "()",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "user_id=test_user.id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "test_user.id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "test_user",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "scheduler = get_service_client(ExecutionScheduler)",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "scheduler = get_service_client(ExecutionScheduler)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "scheduler",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "get_service_client(ExecutionScheduler)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "get_service_client",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(ExecutionScheduler)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "ExecutionScheduler",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "schedules = scheduler.get_execution_schedules(test_graph.id, test_user.id)",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "schedules = scheduler.get_execution_schedules(test_graph.id, test_user.id)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "schedules",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "scheduler.get_execution_schedules(test_graph.id, test_user.id)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "scheduler.get_execution_schedules",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "scheduler",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "get_execution_schedules",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(test_graph.id, test_user.id)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "test_graph.id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "test_graph",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "test_user.id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "test_user",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "assert_statement",
                                    "label": "assert len(schedules) == 0",
                                    "children": [
                                        {
                                            "type": "comparison_operator",
                                            "label": "len(schedules) == 0",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "len(schedules)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "len",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(schedules)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "schedules",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "integer",
                                                    "label": "0",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "schedule = scheduler.add_execution_schedule(\n        graph_id=test_graph.id,\n        user_id=test_user.id,\n        graph_version=1,\n        cron=\"0 0 * * *\",\n        input_data={\"input\": \"data\"},\n    )",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "schedule = scheduler.add_execution_schedule(\n        graph_id=test_graph.id,\n        user_id=test_user.id,\n        graph_version=1,\n        cron=\"0 0 * * *\",\n        input_data={\"input\": \"data\"},\n    )",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "schedule",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "scheduler.add_execution_schedule(\n        graph_id=test_graph.id,\n        user_id=test_user.id,\n        graph_version=1,\n        cron=\"0 0 * * *\",\n        input_data={\"input\": \"data\"},\n    )",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "scheduler.add_execution_schedule",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "scheduler",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "add_execution_schedule",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n        graph_id=test_graph.id,\n        user_id=test_user.id,\n        graph_version=1,\n        cron=\"0 0 * * *\",\n        input_data={\"input\": \"data\"},\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "graph_id=test_graph.id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "graph_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "test_graph.id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "test_graph",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "user_id=test_user.id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "user_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "test_user.id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "test_user",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "graph_version=1",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "graph_version",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "1",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "cron=\"0 0 * * *\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "cron",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"0 0 * * *\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "0 0 * * *",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "input_data={\"input\": \"data\"}",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "input_data",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "dictionary",
                                                                            "label": "{\"input\": \"data\"}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "pair",
                                                                                    "label": "\"input\": \"data\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"input\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "input",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"data\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "data",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "assert_statement",
                                    "label": "assert schedule",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "schedule",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "schedules = scheduler.get_execution_schedules(test_graph.id, test_user.id)",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "schedules = scheduler.get_execution_schedules(test_graph.id, test_user.id)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "schedules",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "scheduler.get_execution_schedules(test_graph.id, test_user.id)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "scheduler.get_execution_schedules",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "scheduler",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "get_execution_schedules",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(test_graph.id, test_user.id)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "test_graph.id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "test_graph",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "test_user.id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "test_user",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "assert_statement",
                                    "label": "assert len(schedules) == 1",
                                    "children": [
                                        {
                                            "type": "comparison_operator",
                                            "label": "len(schedules) == 1",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "len(schedules)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "len",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(schedules)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "schedules",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "integer",
                                                    "label": "1",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "assert_statement",
                                    "label": "assert schedules[0].cron == \"0 0 * * *\"",
                                    "children": [
                                        {
                                            "type": "comparison_operator",
                                            "label": "schedules[0].cron == \"0 0 * * *\"",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "schedules[0].cron",
                                                    "children": [
                                                        {
                                                            "type": "subscript",
                                                            "label": "schedules[0]",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "schedules",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "integer",
                                                                    "label": "0",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "cron",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "string",
                                                    "label": "\"0 0 * * *\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "0 0 * * *",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "scheduler.delete_schedule(schedule.id, user_id=test_user.id)",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "scheduler.delete_schedule(schedule.id, user_id=test_user.id)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "scheduler.delete_schedule",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "scheduler",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "delete_schedule",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(schedule.id, user_id=test_user.id)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "schedule.id",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "schedule",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "id",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "user_id=test_user.id",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "user_id",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "test_user.id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "test_user",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "expression_statement",
                                    "label": "schedules = scheduler.get_execution_schedules(test_graph.id, user_id=test_user.id)",
                                    "children": [
                                        {
                                            "type": "assignment",
                                            "label": "schedules = scheduler.get_execution_schedules(test_graph.id, user_id=test_user.id)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "schedules",
                                                    "children": []
                                                },
                                                {
                                                    "type": "call",
                                                    "label": "scheduler.get_execution_schedules(test_graph.id, user_id=test_user.id)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "scheduler.get_execution_schedules",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "scheduler",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "get_execution_schedules",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(test_graph.id, user_id=test_user.id)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "test_graph.id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "test_graph",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "id",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "user_id=test_user.id",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "user_id",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "test_user.id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "test_user",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "assert_statement",
                                    "label": "assert len(schedules) == 0",
                                    "children": [
                                        {
                                            "type": "comparison_operator",
                                            "label": "len(schedules) == 0",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "len(schedules)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "len",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(schedules)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "schedules",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "integer",
                                                    "label": "0",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}