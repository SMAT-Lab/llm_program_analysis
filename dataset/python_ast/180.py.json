{
    "type": "module",
    "label": "import logging\nfrom typing import Optional, cast\n\nfrom autogpt_libs.auth.models import DEFAULT_USER_ID\nfrom fastapi import HTTPException\nfrom prisma import Json\nfrom prisma.models import User\n\nfrom backend.data.db import prisma\nfrom backend.data.model import UserIntegrations, UserMetadata, UserMetadataRaw\nfrom backend.util.encryption import JSONCryptor\n\nlogger = logging.getLogger(__name__)\n\n\nasync def get_or_create_user(user_data: dict) -> User:\n    user_id = user_data.get(\"sub\")\n    if not user_id:\n        raise HTTPException(status_code=401, detail=\"User ID not found in token\")\n\n    user_email = user_data.get(\"email\")\n    if not user_email:\n        raise HTTPException(status_code=401, detail=\"Email not found in token\")\n\n    user = await prisma.user.find_unique(where={\"id\": user_id})\n    if not user:\n        user = await prisma.user.create(\n            data={\n                \"id\": user_id,\n                \"email\": user_email,\n                \"name\": user_data.get(\"user_metadata\", {}).get(\"name\"),\n            }\n        )\n    return User.model_validate(user)\n\n\nasync def get_user_by_id(user_id: str) -> Optional[User]:\n    user = await prisma.user.find_unique(where={\"id\": user_id})\n    return User.model_validate(user) if user else None\n\n\nasync def create_default_user() -> Optional[User]:\n    user = await prisma.user.find_unique(where={\"id\": DEFAULT_USER_ID})\n    if not user:\n        user = await prisma.user.create(\n            data={\n                \"id\": DEFAULT_USER_ID,\n                \"email\": \"default@example.com\",\n                \"name\": \"Default User\",\n            }\n        )\n    return User.model_validate(user)\n\n\nasync def get_user_metadata(user_id: str) -> UserMetadata:\n    user = await User.prisma().find_unique_or_raise(\n        where={\"id\": user_id},\n    )\n\n    metadata = cast(UserMetadataRaw, user.metadata)\n    return UserMetadata.model_validate(metadata)\n\n\nasync def update_user_metadata(user_id: str, metadata: UserMetadata):\n    await User.prisma().update(\n        where={\"id\": user_id},\n        data={\"metadata\": Json(metadata.model_dump())},\n    )\n\n\nasync def get_user_integrations(user_id: str) -> UserIntegrations:\n    user = await User.prisma().find_unique_or_raise(\n        where={\"id\": user_id},\n    )\n\n    encrypted_integrations = user.integrations\n    if not encrypted_integrations:\n        return UserIntegrations()\n    else:\n        return UserIntegrations.model_validate(\n            JSONCryptor().decrypt(encrypted_integrations)\n        )\n\n\nasync def update_user_integrations(user_id: str, data: UserIntegrations):\n    encrypted_data = JSONCryptor().encrypt(data.model_dump())\n    await User.prisma().update(\n        where={\"id\": user_id},\n        data={\"integrations\": encrypted_data},\n    )\n\n\nasync def migrate_and_encrypt_user_integrations():\n    \"\"\"Migrate integration credentials and OAuth states from metadata to integrations column.\"\"\"\n    users = await User.prisma().find_many(\n        where={\n            \"metadata\": {\n                \"path\": [\"integration_credentials\"],\n                \"not\": Json({\"a\": \"yolo\"}),  # bogus value works to check if key exists\n            }  # type: ignore\n        }\n    )\n    logger.info(f\"Migrating integration credentials for {len(users)} users\")\n\n    for user in users:\n        raw_metadata = cast(UserMetadataRaw, user.metadata)\n        metadata = UserMetadata.model_validate(raw_metadata)\n\n        # Get existing integrations data\n        integrations = await get_user_integrations(user_id=user.id)\n\n        # Copy credentials and oauth states from metadata if they exist\n        if metadata.integration_credentials and not integrations.credentials:\n            integrations.credentials = metadata.integration_credentials\n        if metadata.integration_oauth_states:\n            integrations.oauth_states = metadata.integration_oauth_states\n\n        # Save to integrations column\n        await update_user_integrations(user_id=user.id, data=integrations)\n\n        # Remove from metadata\n        raw_metadata = dict(raw_metadata)\n        raw_metadata.pop(\"integration_credentials\", None)\n        raw_metadata.pop(\"integration_oauth_states\", None)\n\n        # Update metadata without integration data\n        await User.prisma().update(\n            where={\"id\": user.id},\n            data={\"metadata\": Json(raw_metadata)},\n        )\n",
    "children": [
        {
            "type": "import_statement",
            "label": "import logging",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "logging",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "logging",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from typing import Optional, cast",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "typing",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "typing",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Optional",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Optional",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "cast",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "cast",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from autogpt_libs.auth.models import DEFAULT_USER_ID",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "autogpt_libs.auth.models",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "autogpt_libs",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "auth",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "models",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "DEFAULT_USER_ID",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "DEFAULT_USER_ID",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from fastapi import HTTPException",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "fastapi",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "fastapi",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "HTTPException",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "HTTPException",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from prisma import Json",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "prisma",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "prisma",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "Json",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Json",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from prisma.models import User",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "prisma.models",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "prisma",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "models",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "User",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "User",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.data.db import prisma",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.data.db",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "data",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "db",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "prisma",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "prisma",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.data.model import UserIntegrations, UserMetadata, UserMetadataRaw",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.data.model",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "data",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "model",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "UserIntegrations",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "UserIntegrations",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "UserMetadata",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "UserMetadata",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "UserMetadataRaw",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "UserMetadataRaw",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "import_from_statement",
            "label": "from backend.util.encryption import JSONCryptor",
            "children": [
                {
                    "type": "dotted_name",
                    "label": "backend.util.encryption",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "backend",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "util",
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "encryption",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "dotted_name",
                    "label": "JSONCryptor",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "JSONCryptor",
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "expression_statement",
            "label": "logger = logging.getLogger(__name__)",
            "children": [
                {
                    "type": "assignment",
                    "label": "logger = logging.getLogger(__name__)",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "logger",
                            "children": []
                        },
                        {
                            "type": "call",
                            "label": "logging.getLogger(__name__)",
                            "children": [
                                {
                                    "type": "attribute",
                                    "label": "logging.getLogger",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "logging",
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "getLogger",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argument_list",
                                    "label": "(__name__)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "__name__",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def get_or_create_user(user_data: dict) -> User:\n    user_id = user_data.get(\"sub\")\n    if not user_id:\n        raise HTTPException(status_code=401, detail=\"User ID not found in token\")\n\n    user_email = user_data.get(\"email\")\n    if not user_email:\n        raise HTTPException(status_code=401, detail=\"Email not found in token\")\n\n    user = await prisma.user.find_unique(where={\"id\": user_id})\n    if not user:\n        user = await prisma.user.create(\n            data={\n                \"id\": user_id,\n                \"email\": user_email,\n                \"name\": user_data.get(\"user_metadata\", {}).get(\"name\"),\n            }\n        )\n    return User.model_validate(user)",
            "children": [
                {
                    "type": "identifier",
                    "label": "get_or_create_user",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(user_data: dict)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "user_data: dict",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "user_data",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "dict",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "dict",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "User",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "User",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "user_id = user_data.get(\"sub\")\n    if not user_id:\n        raise HTTPException(status_code=401, detail=\"User ID not found in token\")\n\n    user_email = user_data.get(\"email\")\n    if not user_email:\n        raise HTTPException(status_code=401, detail=\"Email not found in token\")\n\n    user = await prisma.user.find_unique(where={\"id\": user_id})\n    if not user:\n        user = await prisma.user.create(\n            data={\n                \"id\": user_id,\n                \"email\": user_email,\n                \"name\": user_data.get(\"user_metadata\", {}).get(\"name\"),\n            }\n        )\n    return User.model_validate(user)",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "user_id = user_data.get(\"sub\")",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "user_id = user_data.get(\"sub\")",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_id",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "user_data.get(\"sub\")",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "user_data.get",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "user_data",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "get",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(\"sub\")",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"sub\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "sub",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if not user_id:\n        raise HTTPException(status_code=401, detail=\"User ID not found in token\")",
                            "children": [
                                {
                                    "type": "not_operator",
                                    "label": "not user_id",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_id",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "raise HTTPException(status_code=401, detail=\"User ID not found in token\")",
                                    "children": [
                                        {
                                            "type": "raise_statement",
                                            "label": "raise HTTPException(status_code=401, detail=\"User ID not found in token\")",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "HTTPException(status_code=401, detail=\"User ID not found in token\")",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "HTTPException",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(status_code=401, detail=\"User ID not found in token\")",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "status_code=401",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "status_code",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "401",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "detail=\"User ID not found in token\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "detail",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"User ID not found in token\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "User ID not found in token",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "user_email = user_data.get(\"email\")",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "user_email = user_data.get(\"email\")",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_email",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "user_data.get(\"email\")",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "user_data.get",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "user_data",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "get",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(\"email\")",
                                                    "children": [
                                                        {
                                                            "type": "string",
                                                            "label": "\"email\"",
                                                            "children": [
                                                                {
                                                                    "type": "string_start",
                                                                    "label": "\"",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_content",
                                                                    "label": "email",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "string_end",
                                                                    "label": "\"",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if not user_email:\n        raise HTTPException(status_code=401, detail=\"Email not found in token\")",
                            "children": [
                                {
                                    "type": "not_operator",
                                    "label": "not user_email",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user_email",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "raise HTTPException(status_code=401, detail=\"Email not found in token\")",
                                    "children": [
                                        {
                                            "type": "raise_statement",
                                            "label": "raise HTTPException(status_code=401, detail=\"Email not found in token\")",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "HTTPException(status_code=401, detail=\"Email not found in token\")",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "HTTPException",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(status_code=401, detail=\"Email not found in token\")",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "status_code=401",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "status_code",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "integer",
                                                                            "label": "401",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "detail=\"Email not found in token\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "detail",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string",
                                                                            "label": "\"Email not found in token\"",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string_start",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_content",
                                                                                    "label": "Email not found in token",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "string_end",
                                                                                    "label": "\"",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "user = await prisma.user.find_unique(where={\"id\": user_id})",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "user = await prisma.user.find_unique(where={\"id\": user_id})",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user",
                                            "children": []
                                        },
                                        {
                                            "type": "await",
                                            "label": "await prisma.user.find_unique(where={\"id\": user_id})",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "prisma.user.find_unique(where={\"id\": user_id})",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "prisma.user.find_unique",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "prisma.user",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "prisma",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "user",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "find_unique",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(where={\"id\": user_id})",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "where={\"id\": user_id}",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "where",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "dictionary",
                                                                            "label": "{\"id\": user_id}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "pair",
                                                                                    "label": "\"id\": user_id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"id\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "id",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if not user:\n        user = await prisma.user.create(\n            data={\n                \"id\": user_id,\n                \"email\": user_email,\n                \"name\": user_data.get(\"user_metadata\", {}).get(\"name\"),\n            }\n        )",
                            "children": [
                                {
                                    "type": "not_operator",
                                    "label": "not user",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "user = await prisma.user.create(\n            data={\n                \"id\": user_id,\n                \"email\": user_email,\n                \"name\": user_data.get(\"user_metadata\", {}).get(\"name\"),\n            }\n        )",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "user = await prisma.user.create(\n            data={\n                \"id\": user_id,\n                \"email\": user_email,\n                \"name\": user_data.get(\"user_metadata\", {}).get(\"name\"),\n            }\n        )",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "user = await prisma.user.create(\n            data={\n                \"id\": user_id,\n                \"email\": user_email,\n                \"name\": user_data.get(\"user_metadata\", {}).get(\"name\"),\n            }\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "user",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "await",
                                                            "label": "await prisma.user.create(\n            data={\n                \"id\": user_id,\n                \"email\": user_email,\n                \"name\": user_data.get(\"user_metadata\", {}).get(\"name\"),\n            }\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "prisma.user.create(\n            data={\n                \"id\": user_id,\n                \"email\": user_email,\n                \"name\": user_data.get(\"user_metadata\", {}).get(\"name\"),\n            }\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "prisma.user.create",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "prisma.user",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "prisma",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "user",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "create",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(\n            data={\n                \"id\": user_id,\n                \"email\": user_email,\n                \"name\": user_data.get(\"user_metadata\", {}).get(\"name\"),\n            }\n        )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "data={\n                \"id\": user_id,\n                \"email\": user_email,\n                \"name\": user_data.get(\"user_metadata\", {}).get(\"name\"),\n            }",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "data",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "dictionary",
                                                                                            "label": "{\n                \"id\": user_id,\n                \"email\": user_email,\n                \"name\": user_data.get(\"user_metadata\", {}).get(\"name\"),\n            }",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "pair",
                                                                                                    "label": "\"id\": user_id",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"id\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "id",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "user_id",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "pair",
                                                                                                    "label": "\"email\": user_email",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"email\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "email",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "user_email",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "pair",
                                                                                                    "label": "\"name\": user_data.get(\"user_metadata\", {}).get(\"name\")",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"name\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "name",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "call",
                                                                                                            "label": "user_data.get(\"user_metadata\", {}).get(\"name\")",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "attribute",
                                                                                                                    "label": "user_data.get(\"user_metadata\", {}).get",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "call",
                                                                                                                            "label": "user_data.get(\"user_metadata\", {})",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "attribute",
                                                                                                                                    "label": "user_data.get",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "user_data",
                                                                                                                                            "children": []
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "identifier",
                                                                                                                                            "label": "get",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "argument_list",
                                                                                                                                    "label": "(\"user_metadata\", {})",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "string",
                                                                                                                                            "label": "\"user_metadata\"",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "string_start",
                                                                                                                                                    "label": "\"",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "string_content",
                                                                                                                                                    "label": "user_metadata",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "string_end",
                                                                                                                                                    "label": "\"",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "dictionary",
                                                                                                                                            "label": "{}",
                                                                                                                                            "children": []
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "get",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "argument_list",
                                                                                                                    "label": "(\"name\")",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "string",
                                                                                                                            "label": "\"name\"",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "string_start",
                                                                                                                                    "label": "\"",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "string_content",
                                                                                                                                    "label": "name",
                                                                                                                                    "children": []
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "type": "string_end",
                                                                                                                                    "label": "\"",
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return User.model_validate(user)",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "User.model_validate(user)",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "User.model_validate",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "User",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "model_validate",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(user)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "user",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def get_user_by_id(user_id: str) -> Optional[User]:\n    user = await prisma.user.find_unique(where={\"id\": user_id})\n    return User.model_validate(user) if user else None",
            "children": [
                {
                    "type": "identifier",
                    "label": "get_user_by_id",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(user_id: str)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "user_id: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "user_id",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "Optional[User]",
                    "children": [
                        {
                            "type": "generic_type",
                            "label": "Optional[User]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "Optional",
                                    "children": []
                                },
                                {
                                    "type": "type_parameter",
                                    "label": "[User]",
                                    "children": [
                                        {
                                            "type": "type",
                                            "label": "User",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "User",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "user = await prisma.user.find_unique(where={\"id\": user_id})\n    return User.model_validate(user) if user else None",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "user = await prisma.user.find_unique(where={\"id\": user_id})",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "user = await prisma.user.find_unique(where={\"id\": user_id})",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user",
                                            "children": []
                                        },
                                        {
                                            "type": "await",
                                            "label": "await prisma.user.find_unique(where={\"id\": user_id})",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "prisma.user.find_unique(where={\"id\": user_id})",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "prisma.user.find_unique",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "prisma.user",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "prisma",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "user",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "find_unique",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(where={\"id\": user_id})",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "where={\"id\": user_id}",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "where",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "dictionary",
                                                                            "label": "{\"id\": user_id}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "pair",
                                                                                    "label": "\"id\": user_id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"id\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "id",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return User.model_validate(user) if user else None",
                            "children": [
                                {
                                    "type": "conditional_expression",
                                    "label": "User.model_validate(user) if user else None",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "User.model_validate(user)",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "User.model_validate",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "User",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "model_validate",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(user)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "user",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "user",
                                            "children": []
                                        },
                                        {
                                            "type": "none",
                                            "label": "None",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def create_default_user() -> Optional[User]:\n    user = await prisma.user.find_unique(where={\"id\": DEFAULT_USER_ID})\n    if not user:\n        user = await prisma.user.create(\n            data={\n                \"id\": DEFAULT_USER_ID,\n                \"email\": \"default@example.com\",\n                \"name\": \"Default User\",\n            }\n        )\n    return User.model_validate(user)",
            "children": [
                {
                    "type": "identifier",
                    "label": "create_default_user",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "()",
                    "children": []
                },
                {
                    "type": "type",
                    "label": "Optional[User]",
                    "children": [
                        {
                            "type": "generic_type",
                            "label": "Optional[User]",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "Optional",
                                    "children": []
                                },
                                {
                                    "type": "type_parameter",
                                    "label": "[User]",
                                    "children": [
                                        {
                                            "type": "type",
                                            "label": "User",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "User",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "user = await prisma.user.find_unique(where={\"id\": DEFAULT_USER_ID})\n    if not user:\n        user = await prisma.user.create(\n            data={\n                \"id\": DEFAULT_USER_ID,\n                \"email\": \"default@example.com\",\n                \"name\": \"Default User\",\n            }\n        )\n    return User.model_validate(user)",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "user = await prisma.user.find_unique(where={\"id\": DEFAULT_USER_ID})",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "user = await prisma.user.find_unique(where={\"id\": DEFAULT_USER_ID})",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user",
                                            "children": []
                                        },
                                        {
                                            "type": "await",
                                            "label": "await prisma.user.find_unique(where={\"id\": DEFAULT_USER_ID})",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "prisma.user.find_unique(where={\"id\": DEFAULT_USER_ID})",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "prisma.user.find_unique",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "prisma.user",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "prisma",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "user",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "find_unique",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(where={\"id\": DEFAULT_USER_ID})",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "where={\"id\": DEFAULT_USER_ID}",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "where",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "dictionary",
                                                                            "label": "{\"id\": DEFAULT_USER_ID}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "pair",
                                                                                    "label": "\"id\": DEFAULT_USER_ID",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"id\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "id",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "DEFAULT_USER_ID",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if not user:\n        user = await prisma.user.create(\n            data={\n                \"id\": DEFAULT_USER_ID,\n                \"email\": \"default@example.com\",\n                \"name\": \"Default User\",\n            }\n        )",
                            "children": [
                                {
                                    "type": "not_operator",
                                    "label": "not user",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "user = await prisma.user.create(\n            data={\n                \"id\": DEFAULT_USER_ID,\n                \"email\": \"default@example.com\",\n                \"name\": \"Default User\",\n            }\n        )",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "user = await prisma.user.create(\n            data={\n                \"id\": DEFAULT_USER_ID,\n                \"email\": \"default@example.com\",\n                \"name\": \"Default User\",\n            }\n        )",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "user = await prisma.user.create(\n            data={\n                \"id\": DEFAULT_USER_ID,\n                \"email\": \"default@example.com\",\n                \"name\": \"Default User\",\n            }\n        )",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "user",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "await",
                                                            "label": "await prisma.user.create(\n            data={\n                \"id\": DEFAULT_USER_ID,\n                \"email\": \"default@example.com\",\n                \"name\": \"Default User\",\n            }\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "prisma.user.create(\n            data={\n                \"id\": DEFAULT_USER_ID,\n                \"email\": \"default@example.com\",\n                \"name\": \"Default User\",\n            }\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "prisma.user.create",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "prisma.user",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "prisma",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "user",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "create",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(\n            data={\n                \"id\": DEFAULT_USER_ID,\n                \"email\": \"default@example.com\",\n                \"name\": \"Default User\",\n            }\n        )",
                                                                            "children": [
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "data={\n                \"id\": DEFAULT_USER_ID,\n                \"email\": \"default@example.com\",\n                \"name\": \"Default User\",\n            }",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "data",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "dictionary",
                                                                                            "label": "{\n                \"id\": DEFAULT_USER_ID,\n                \"email\": \"default@example.com\",\n                \"name\": \"Default User\",\n            }",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "pair",
                                                                                                    "label": "\"id\": DEFAULT_USER_ID",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"id\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "id",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "DEFAULT_USER_ID",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "pair",
                                                                                                    "label": "\"email\": \"default@example.com\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"email\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "email",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"default@example.com\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "default@example.com",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "pair",
                                                                                                    "label": "\"name\": \"Default User\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"name\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "name",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"Default User\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "Default User",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return User.model_validate(user)",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "User.model_validate(user)",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "User.model_validate",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "User",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "model_validate",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(user)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "user",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def get_user_metadata(user_id: str) -> UserMetadata:\n    user = await User.prisma().find_unique_or_raise(\n        where={\"id\": user_id},\n    )\n\n    metadata = cast(UserMetadataRaw, user.metadata)\n    return UserMetadata.model_validate(metadata)",
            "children": [
                {
                    "type": "identifier",
                    "label": "get_user_metadata",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(user_id: str)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "user_id: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "user_id",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "UserMetadata",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "UserMetadata",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "user = await User.prisma().find_unique_or_raise(\n        where={\"id\": user_id},\n    )\n\n    metadata = cast(UserMetadataRaw, user.metadata)\n    return UserMetadata.model_validate(metadata)",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "user = await User.prisma().find_unique_or_raise(\n        where={\"id\": user_id},\n    )",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "user = await User.prisma().find_unique_or_raise(\n        where={\"id\": user_id},\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user",
                                            "children": []
                                        },
                                        {
                                            "type": "await",
                                            "label": "await User.prisma().find_unique_or_raise(\n        where={\"id\": user_id},\n    )",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "User.prisma().find_unique_or_raise(\n        where={\"id\": user_id},\n    )",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "User.prisma().find_unique_or_raise",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "User.prisma()",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "User.prisma",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "User",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "prisma",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "find_unique_or_raise",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n        where={\"id\": user_id},\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "where={\"id\": user_id}",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "where",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "dictionary",
                                                                            "label": "{\"id\": user_id}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "pair",
                                                                                    "label": "\"id\": user_id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"id\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "id",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "metadata = cast(UserMetadataRaw, user.metadata)",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "metadata = cast(UserMetadataRaw, user.metadata)",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "metadata",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "cast(UserMetadataRaw, user.metadata)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "cast",
                                                    "children": []
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(UserMetadataRaw, user.metadata)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "UserMetadataRaw",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "attribute",
                                                            "label": "user.metadata",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "user",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "metadata",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "return_statement",
                            "label": "return UserMetadata.model_validate(metadata)",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "UserMetadata.model_validate(metadata)",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "UserMetadata.model_validate",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "UserMetadata",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "model_validate",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(metadata)",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "metadata",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def update_user_metadata(user_id: str, metadata: UserMetadata):\n    await User.prisma().update(\n        where={\"id\": user_id},\n        data={\"metadata\": Json(metadata.model_dump())},\n    )",
            "children": [
                {
                    "type": "identifier",
                    "label": "update_user_metadata",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(user_id: str, metadata: UserMetadata)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "user_id: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "user_id",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "metadata: UserMetadata",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "metadata",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "UserMetadata",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "UserMetadata",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "await User.prisma().update(\n        where={\"id\": user_id},\n        data={\"metadata\": Json(metadata.model_dump())},\n    )",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "await User.prisma().update(\n        where={\"id\": user_id},\n        data={\"metadata\": Json(metadata.model_dump())},\n    )",
                            "children": [
                                {
                                    "type": "await",
                                    "label": "await User.prisma().update(\n        where={\"id\": user_id},\n        data={\"metadata\": Json(metadata.model_dump())},\n    )",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "User.prisma().update(\n        where={\"id\": user_id},\n        data={\"metadata\": Json(metadata.model_dump())},\n    )",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "User.prisma().update",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "User.prisma()",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "User.prisma",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "User",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "prisma",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "update",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(\n        where={\"id\": user_id},\n        data={\"metadata\": Json(metadata.model_dump())},\n    )",
                                                    "children": [
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "where={\"id\": user_id}",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "where",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "dictionary",
                                                                    "label": "{\"id\": user_id}",
                                                                    "children": [
                                                                        {
                                                                            "type": "pair",
                                                                            "label": "\"id\": user_id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"id\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "id",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "data={\"metadata\": Json(metadata.model_dump())}",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "data",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "dictionary",
                                                                    "label": "{\"metadata\": Json(metadata.model_dump())}",
                                                                    "children": [
                                                                        {
                                                                            "type": "pair",
                                                                            "label": "\"metadata\": Json(metadata.model_dump())",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"metadata\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "metadata",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "call",
                                                                                    "label": "Json(metadata.model_dump())",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "Json",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argument_list",
                                                                                            "label": "(metadata.model_dump())",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "metadata.model_dump()",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "attribute",
                                                                                                            "label": "metadata.model_dump",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "metadata",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "model_dump",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "()",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def get_user_integrations(user_id: str) -> UserIntegrations:\n    user = await User.prisma().find_unique_or_raise(\n        where={\"id\": user_id},\n    )\n\n    encrypted_integrations = user.integrations\n    if not encrypted_integrations:\n        return UserIntegrations()\n    else:\n        return UserIntegrations.model_validate(\n            JSONCryptor().decrypt(encrypted_integrations)\n        )",
            "children": [
                {
                    "type": "identifier",
                    "label": "get_user_integrations",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(user_id: str)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "user_id: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "user_id",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "type",
                    "label": "UserIntegrations",
                    "children": [
                        {
                            "type": "identifier",
                            "label": "UserIntegrations",
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "user = await User.prisma().find_unique_or_raise(\n        where={\"id\": user_id},\n    )\n\n    encrypted_integrations = user.integrations\n    if not encrypted_integrations:\n        return UserIntegrations()\n    else:\n        return UserIntegrations.model_validate(\n            JSONCryptor().decrypt(encrypted_integrations)\n        )",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "user = await User.prisma().find_unique_or_raise(\n        where={\"id\": user_id},\n    )",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "user = await User.prisma().find_unique_or_raise(\n        where={\"id\": user_id},\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "user",
                                            "children": []
                                        },
                                        {
                                            "type": "await",
                                            "label": "await User.prisma().find_unique_or_raise(\n        where={\"id\": user_id},\n    )",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "User.prisma().find_unique_or_raise(\n        where={\"id\": user_id},\n    )",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "User.prisma().find_unique_or_raise",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "User.prisma()",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "User.prisma",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "User",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "prisma",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "find_unique_or_raise",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n        where={\"id\": user_id},\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "where={\"id\": user_id}",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "where",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "dictionary",
                                                                            "label": "{\"id\": user_id}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "pair",
                                                                                    "label": "\"id\": user_id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"id\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "id",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "user_id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "encrypted_integrations = user.integrations",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "encrypted_integrations = user.integrations",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "encrypted_integrations",
                                            "children": []
                                        },
                                        {
                                            "type": "attribute",
                                            "label": "user.integrations",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "user",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "integrations",
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "if_statement",
                            "label": "if not encrypted_integrations:\n        return UserIntegrations()\n    else:\n        return UserIntegrations.model_validate(\n            JSONCryptor().decrypt(encrypted_integrations)\n        )",
                            "children": [
                                {
                                    "type": "not_operator",
                                    "label": "not encrypted_integrations",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "encrypted_integrations",
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "return UserIntegrations()",
                                    "children": [
                                        {
                                            "type": "return_statement",
                                            "label": "return UserIntegrations()",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "UserIntegrations()",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "UserIntegrations",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "()",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "else_clause",
                                    "label": "else:\n        return UserIntegrations.model_validate(\n            JSONCryptor().decrypt(encrypted_integrations)\n        )",
                                    "children": [
                                        {
                                            "type": "block",
                                            "label": "return UserIntegrations.model_validate(\n            JSONCryptor().decrypt(encrypted_integrations)\n        )",
                                            "children": [
                                                {
                                                    "type": "return_statement",
                                                    "label": "return UserIntegrations.model_validate(\n            JSONCryptor().decrypt(encrypted_integrations)\n        )",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "UserIntegrations.model_validate(\n            JSONCryptor().decrypt(encrypted_integrations)\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "UserIntegrations.model_validate",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "UserIntegrations",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "model_validate",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n            JSONCryptor().decrypt(encrypted_integrations)\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "JSONCryptor().decrypt(encrypted_integrations)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "JSONCryptor().decrypt",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "call",
                                                                                            "label": "JSONCryptor()",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "JSONCryptor",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argument_list",
                                                                                                    "label": "()",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "decrypt",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "(encrypted_integrations)",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "encrypted_integrations",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def update_user_integrations(user_id: str, data: UserIntegrations):\n    encrypted_data = JSONCryptor().encrypt(data.model_dump())\n    await User.prisma().update(\n        where={\"id\": user_id},\n        data={\"integrations\": encrypted_data},\n    )",
            "children": [
                {
                    "type": "identifier",
                    "label": "update_user_integrations",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "(user_id: str, data: UserIntegrations)",
                    "children": [
                        {
                            "type": "typed_parameter",
                            "label": "user_id: str",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "user_id",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "str",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "str",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "typed_parameter",
                            "label": "data: UserIntegrations",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "data",
                                    "children": []
                                },
                                {
                                    "type": "type",
                                    "label": "UserIntegrations",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "UserIntegrations",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "encrypted_data = JSONCryptor().encrypt(data.model_dump())\n    await User.prisma().update(\n        where={\"id\": user_id},\n        data={\"integrations\": encrypted_data},\n    )",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "encrypted_data = JSONCryptor().encrypt(data.model_dump())",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "encrypted_data = JSONCryptor().encrypt(data.model_dump())",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "encrypted_data",
                                            "children": []
                                        },
                                        {
                                            "type": "call",
                                            "label": "JSONCryptor().encrypt(data.model_dump())",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "JSONCryptor().encrypt",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "JSONCryptor()",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "JSONCryptor",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "encrypt",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(data.model_dump())",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "data.model_dump()",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "data.model_dump",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "data",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "model_dump",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "await User.prisma().update(\n        where={\"id\": user_id},\n        data={\"integrations\": encrypted_data},\n    )",
                            "children": [
                                {
                                    "type": "await",
                                    "label": "await User.prisma().update(\n        where={\"id\": user_id},\n        data={\"integrations\": encrypted_data},\n    )",
                                    "children": [
                                        {
                                            "type": "call",
                                            "label": "User.prisma().update(\n        where={\"id\": user_id},\n        data={\"integrations\": encrypted_data},\n    )",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "User.prisma().update",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "User.prisma()",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "User.prisma",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "User",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "prisma",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "()",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "update",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argument_list",
                                                    "label": "(\n        where={\"id\": user_id},\n        data={\"integrations\": encrypted_data},\n    )",
                                                    "children": [
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "where={\"id\": user_id}",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "where",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "dictionary",
                                                                    "label": "{\"id\": user_id}",
                                                                    "children": [
                                                                        {
                                                                            "type": "pair",
                                                                            "label": "\"id\": user_id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"id\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "id",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "keyword_argument",
                                                            "label": "data={\"integrations\": encrypted_data}",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "data",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "dictionary",
                                                                    "label": "{\"integrations\": encrypted_data}",
                                                                    "children": [
                                                                        {
                                                                            "type": "pair",
                                                                            "label": "\"integrations\": encrypted_data",
                                                                            "children": [
                                                                                {
                                                                                    "type": "string",
                                                                                    "label": "\"integrations\"",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string_start",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_content",
                                                                                            "label": "integrations",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "string_end",
                                                                                            "label": "\"",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "encrypted_data",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "function_definition",
            "label": "async def migrate_and_encrypt_user_integrations():\n    \"\"\"Migrate integration credentials and OAuth states from metadata to integrations column.\"\"\"\n    users = await User.prisma().find_many(\n        where={\n            \"metadata\": {\n                \"path\": [\"integration_credentials\"],\n                \"not\": Json({\"a\": \"yolo\"}),  # bogus value works to check if key exists\n            }  # type: ignore\n        }\n    )\n    logger.info(f\"Migrating integration credentials for {len(users)} users\")\n\n    for user in users:\n        raw_metadata = cast(UserMetadataRaw, user.metadata)\n        metadata = UserMetadata.model_validate(raw_metadata)\n\n        # Get existing integrations data\n        integrations = await get_user_integrations(user_id=user.id)\n\n        # Copy credentials and oauth states from metadata if they exist\n        if metadata.integration_credentials and not integrations.credentials:\n            integrations.credentials = metadata.integration_credentials\n        if metadata.integration_oauth_states:\n            integrations.oauth_states = metadata.integration_oauth_states\n\n        # Save to integrations column\n        await update_user_integrations(user_id=user.id, data=integrations)\n\n        # Remove from metadata\n        raw_metadata = dict(raw_metadata)\n        raw_metadata.pop(\"integration_credentials\", None)\n        raw_metadata.pop(\"integration_oauth_states\", None)\n\n        # Update metadata without integration data\n        await User.prisma().update(\n            where={\"id\": user.id},\n            data={\"metadata\": Json(raw_metadata)},\n        )",
            "children": [
                {
                    "type": "identifier",
                    "label": "migrate_and_encrypt_user_integrations",
                    "children": []
                },
                {
                    "type": "parameters",
                    "label": "()",
                    "children": []
                },
                {
                    "type": "block",
                    "label": "\"\"\"Migrate integration credentials and OAuth states from metadata to integrations column.\"\"\"\n    users = await User.prisma().find_many(\n        where={\n            \"metadata\": {\n                \"path\": [\"integration_credentials\"],\n                \"not\": Json({\"a\": \"yolo\"}),  # bogus value works to check if key exists\n            }  # type: ignore\n        }\n    )\n    logger.info(f\"Migrating integration credentials for {len(users)} users\")\n\n    for user in users:\n        raw_metadata = cast(UserMetadataRaw, user.metadata)\n        metadata = UserMetadata.model_validate(raw_metadata)\n\n        # Get existing integrations data\n        integrations = await get_user_integrations(user_id=user.id)\n\n        # Copy credentials and oauth states from metadata if they exist\n        if metadata.integration_credentials and not integrations.credentials:\n            integrations.credentials = metadata.integration_credentials\n        if metadata.integration_oauth_states:\n            integrations.oauth_states = metadata.integration_oauth_states\n\n        # Save to integrations column\n        await update_user_integrations(user_id=user.id, data=integrations)\n\n        # Remove from metadata\n        raw_metadata = dict(raw_metadata)\n        raw_metadata.pop(\"integration_credentials\", None)\n        raw_metadata.pop(\"integration_oauth_states\", None)\n\n        # Update metadata without integration data\n        await User.prisma().update(\n            where={\"id\": user.id},\n            data={\"metadata\": Json(raw_metadata)},\n        )",
                    "children": [
                        {
                            "type": "expression_statement",
                            "label": "\"\"\"Migrate integration credentials and OAuth states from metadata to integrations column.\"\"\"",
                            "children": [
                                {
                                    "type": "string",
                                    "label": "\"\"\"Migrate integration credentials and OAuth states from metadata to integrations column.\"\"\"",
                                    "children": [
                                        {
                                            "type": "string_start",
                                            "label": "\"\"\"",
                                            "children": []
                                        },
                                        {
                                            "type": "string_content",
                                            "label": "Migrate integration credentials and OAuth states from metadata to integrations column.",
                                            "children": []
                                        },
                                        {
                                            "type": "string_end",
                                            "label": "\"\"\"",
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "users = await User.prisma().find_many(\n        where={\n            \"metadata\": {\n                \"path\": [\"integration_credentials\"],\n                \"not\": Json({\"a\": \"yolo\"}),  # bogus value works to check if key exists\n            }  # type: ignore\n        }\n    )",
                            "children": [
                                {
                                    "type": "assignment",
                                    "label": "users = await User.prisma().find_many(\n        where={\n            \"metadata\": {\n                \"path\": [\"integration_credentials\"],\n                \"not\": Json({\"a\": \"yolo\"}),  # bogus value works to check if key exists\n            }  # type: ignore\n        }\n    )",
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "users",
                                            "children": []
                                        },
                                        {
                                            "type": "await",
                                            "label": "await User.prisma().find_many(\n        where={\n            \"metadata\": {\n                \"path\": [\"integration_credentials\"],\n                \"not\": Json({\"a\": \"yolo\"}),  # bogus value works to check if key exists\n            }  # type: ignore\n        }\n    )",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "User.prisma().find_many(\n        where={\n            \"metadata\": {\n                \"path\": [\"integration_credentials\"],\n                \"not\": Json({\"a\": \"yolo\"}),  # bogus value works to check if key exists\n            }  # type: ignore\n        }\n    )",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "User.prisma().find_many",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "User.prisma()",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "User.prisma",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "User",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "prisma",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "()",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "find_many",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\n        where={\n            \"metadata\": {\n                \"path\": [\"integration_credentials\"],\n                \"not\": Json({\"a\": \"yolo\"}),  # bogus value works to check if key exists\n            }  # type: ignore\n        }\n    )",
                                                            "children": [
                                                                {
                                                                    "type": "keyword_argument",
                                                                    "label": "where={\n            \"metadata\": {\n                \"path\": [\"integration_credentials\"],\n                \"not\": Json({\"a\": \"yolo\"}),  # bogus value works to check if key exists\n            }  # type: ignore\n        }",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "where",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "dictionary",
                                                                            "label": "{\n            \"metadata\": {\n                \"path\": [\"integration_credentials\"],\n                \"not\": Json({\"a\": \"yolo\"}),  # bogus value works to check if key exists\n            }  # type: ignore\n        }",
                                                                            "children": [
                                                                                {
                                                                                    "type": "pair",
                                                                                    "label": "\"metadata\": {\n                \"path\": [\"integration_credentials\"],\n                \"not\": Json({\"a\": \"yolo\"}),  # bogus value works to check if key exists\n            }",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "string",
                                                                                            "label": "\"metadata\"",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string_start",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_content",
                                                                                                    "label": "metadata",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "string_end",
                                                                                                    "label": "\"",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "dictionary",
                                                                                            "label": "{\n                \"path\": [\"integration_credentials\"],\n                \"not\": Json({\"a\": \"yolo\"}),  # bogus value works to check if key exists\n            }",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "pair",
                                                                                                    "label": "\"path\": [\"integration_credentials\"]",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"path\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "path",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "list",
                                                                                                            "label": "[\"integration_credentials\"]",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string",
                                                                                                                    "label": "\"integration_credentials\"",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "string_start",
                                                                                                                            "label": "\"",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_content",
                                                                                                                            "label": "integration_credentials",
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "string_end",
                                                                                                                            "label": "\"",
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "pair",
                                                                                                    "label": "\"not\": Json({\"a\": \"yolo\"})",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string",
                                                                                                            "label": "\"not\"",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "string_start",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_content",
                                                                                                                    "label": "not",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "string_end",
                                                                                                                    "label": "\"",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "call",
                                                                                                            "label": "Json({\"a\": \"yolo\"})",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "Json",
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "argument_list",
                                                                                                                    "label": "({\"a\": \"yolo\"})",
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "dictionary",
                                                                                                                            "label": "{\"a\": \"yolo\"}",
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "pair",
                                                                                                                                    "label": "\"a\": \"yolo\"",
                                                                                                                                    "children": [
                                                                                                                                        {
                                                                                                                                            "type": "string",
                                                                                                                                            "label": "\"a\"",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "string_start",
                                                                                                                                                    "label": "\"",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "string_content",
                                                                                                                                                    "label": "a",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "string_end",
                                                                                                                                                    "label": "\"",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "type": "string",
                                                                                                                                            "label": "\"yolo\"",
                                                                                                                                            "children": [
                                                                                                                                                {
                                                                                                                                                    "type": "string_start",
                                                                                                                                                    "label": "\"",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "string_content",
                                                                                                                                                    "label": "yolo",
                                                                                                                                                    "children": []
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "type": "string_end",
                                                                                                                                                    "label": "\"",
                                                                                                                                                    "children": []
                                                                                                                                                }
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "comment",
                                                                                                    "label": "# bogus value works to check if key exists",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "comment",
                                                                                    "label": "# type: ignore",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "expression_statement",
                            "label": "logger.info(f\"Migrating integration credentials for {len(users)} users\")",
                            "children": [
                                {
                                    "type": "call",
                                    "label": "logger.info(f\"Migrating integration credentials for {len(users)} users\")",
                                    "children": [
                                        {
                                            "type": "attribute",
                                            "label": "logger.info",
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "logger",
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "info",
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argument_list",
                                            "label": "(f\"Migrating integration credentials for {len(users)} users\")",
                                            "children": [
                                                {
                                                    "type": "string",
                                                    "label": "f\"Migrating integration credentials for {len(users)} users\"",
                                                    "children": [
                                                        {
                                                            "type": "string_start",
                                                            "label": "f\"",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": "Migrating integration credentials for ",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "interpolation",
                                                            "label": "{len(users)}",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "len(users)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "len",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(users)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "users",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "string_content",
                                                            "label": " users",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "string_end",
                                                            "label": "\"",
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "for_statement",
                            "label": "for user in users:\n        raw_metadata = cast(UserMetadataRaw, user.metadata)\n        metadata = UserMetadata.model_validate(raw_metadata)\n\n        # Get existing integrations data\n        integrations = await get_user_integrations(user_id=user.id)\n\n        # Copy credentials and oauth states from metadata if they exist\n        if metadata.integration_credentials and not integrations.credentials:\n            integrations.credentials = metadata.integration_credentials\n        if metadata.integration_oauth_states:\n            integrations.oauth_states = metadata.integration_oauth_states\n\n        # Save to integrations column\n        await update_user_integrations(user_id=user.id, data=integrations)\n\n        # Remove from metadata\n        raw_metadata = dict(raw_metadata)\n        raw_metadata.pop(\"integration_credentials\", None)\n        raw_metadata.pop(\"integration_oauth_states\", None)\n\n        # Update metadata without integration data\n        await User.prisma().update(\n            where={\"id\": user.id},\n            data={\"metadata\": Json(raw_metadata)},\n        )",
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "user",
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "users",
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "label": "raw_metadata = cast(UserMetadataRaw, user.metadata)\n        metadata = UserMetadata.model_validate(raw_metadata)\n\n        # Get existing integrations data\n        integrations = await get_user_integrations(user_id=user.id)\n\n        # Copy credentials and oauth states from metadata if they exist\n        if metadata.integration_credentials and not integrations.credentials:\n            integrations.credentials = metadata.integration_credentials\n        if metadata.integration_oauth_states:\n            integrations.oauth_states = metadata.integration_oauth_states\n\n        # Save to integrations column\n        await update_user_integrations(user_id=user.id, data=integrations)\n\n        # Remove from metadata\n        raw_metadata = dict(raw_metadata)\n        raw_metadata.pop(\"integration_credentials\", None)\n        raw_metadata.pop(\"integration_oauth_states\", None)\n\n        # Update metadata without integration data\n        await User.prisma().update(\n            where={\"id\": user.id},\n            data={\"metadata\": Json(raw_metadata)},\n        )",
                                    "children": [
                                        {
                                            "type": "expression_statement",
                                            "label": "raw_metadata = cast(UserMetadataRaw, user.metadata)",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "raw_metadata = cast(UserMetadataRaw, user.metadata)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "raw_metadata",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "cast(UserMetadataRaw, user.metadata)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "cast",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(UserMetadataRaw, user.metadata)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "UserMetadataRaw",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "user.metadata",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "metadata",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "metadata = UserMetadata.model_validate(raw_metadata)",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "metadata = UserMetadata.model_validate(raw_metadata)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "metadata",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "UserMetadata.model_validate(raw_metadata)",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "UserMetadata.model_validate",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "UserMetadata",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "model_validate",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(raw_metadata)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "raw_metadata",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "label": "# Get existing integrations data",
                                            "children": []
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "integrations = await get_user_integrations(user_id=user.id)",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "integrations = await get_user_integrations(user_id=user.id)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "integrations",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "await",
                                                            "label": "await get_user_integrations(user_id=user.id)",
                                                            "children": [
                                                                {
                                                                    "type": "call",
                                                                    "label": "get_user_integrations(user_id=user.id)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "get_user_integrations",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argument_list",
                                                                            "label": "(user_id=user.id)",
                                                                            "children": [
                                                                                {
                                                                                    "type": "keyword_argument",
                                                                                    "label": "user_id=user.id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "user_id",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "attribute",
                                                                                            "label": "user.id",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "user",
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "id",
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "label": "# Copy credentials and oauth states from metadata if they exist",
                                            "children": []
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if metadata.integration_credentials and not integrations.credentials:\n            integrations.credentials = metadata.integration_credentials",
                                            "children": [
                                                {
                                                    "type": "boolean_operator",
                                                    "label": "metadata.integration_credentials and not integrations.credentials",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "metadata.integration_credentials",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "metadata",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "integration_credentials",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "not_operator",
                                                            "label": "not integrations.credentials",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "integrations.credentials",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "integrations",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "credentials",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "integrations.credentials = metadata.integration_credentials",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "integrations.credentials = metadata.integration_credentials",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "integrations.credentials = metadata.integration_credentials",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "integrations.credentials",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "integrations",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "credentials",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "metadata.integration_credentials",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "metadata",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "integration_credentials",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "if_statement",
                                            "label": "if metadata.integration_oauth_states:\n            integrations.oauth_states = metadata.integration_oauth_states",
                                            "children": [
                                                {
                                                    "type": "attribute",
                                                    "label": "metadata.integration_oauth_states",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "metadata",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "integration_oauth_states",
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "integrations.oauth_states = metadata.integration_oauth_states",
                                                    "children": [
                                                        {
                                                            "type": "expression_statement",
                                                            "label": "integrations.oauth_states = metadata.integration_oauth_states",
                                                            "children": [
                                                                {
                                                                    "type": "assignment",
                                                                    "label": "integrations.oauth_states = metadata.integration_oauth_states",
                                                                    "children": [
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "integrations.oauth_states",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "integrations",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "oauth_states",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "attribute",
                                                                            "label": "metadata.integration_oauth_states",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "metadata",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "integration_oauth_states",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "label": "# Save to integrations column",
                                            "children": []
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "await update_user_integrations(user_id=user.id, data=integrations)",
                                            "children": [
                                                {
                                                    "type": "await",
                                                    "label": "await update_user_integrations(user_id=user.id, data=integrations)",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "update_user_integrations(user_id=user.id, data=integrations)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "update_user_integrations",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(user_id=user.id, data=integrations)",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "user_id=user.id",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "user_id",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "user.id",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "user",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "id",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "data=integrations",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "data",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "integrations",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "label": "# Remove from metadata",
                                            "children": []
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "raw_metadata = dict(raw_metadata)",
                                            "children": [
                                                {
                                                    "type": "assignment",
                                                    "label": "raw_metadata = dict(raw_metadata)",
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "raw_metadata",
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "call",
                                                            "label": "dict(raw_metadata)",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "dict",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(raw_metadata)",
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "raw_metadata",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "raw_metadata.pop(\"integration_credentials\", None)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "raw_metadata.pop(\"integration_credentials\", None)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "raw_metadata.pop",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "raw_metadata",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "pop",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\"integration_credentials\", None)",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"integration_credentials\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "integration_credentials",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "none",
                                                                    "label": "None",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "raw_metadata.pop(\"integration_oauth_states\", None)",
                                            "children": [
                                                {
                                                    "type": "call",
                                                    "label": "raw_metadata.pop(\"integration_oauth_states\", None)",
                                                    "children": [
                                                        {
                                                            "type": "attribute",
                                                            "label": "raw_metadata.pop",
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "raw_metadata",
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "pop",
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argument_list",
                                                            "label": "(\"integration_oauth_states\", None)",
                                                            "children": [
                                                                {
                                                                    "type": "string",
                                                                    "label": "\"integration_oauth_states\"",
                                                                    "children": [
                                                                        {
                                                                            "type": "string_start",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_content",
                                                                            "label": "integration_oauth_states",
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "string_end",
                                                                            "label": "\"",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "none",
                                                                    "label": "None",
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "label": "# Update metadata without integration data",
                                            "children": []
                                        },
                                        {
                                            "type": "expression_statement",
                                            "label": "await User.prisma().update(\n            where={\"id\": user.id},\n            data={\"metadata\": Json(raw_metadata)},\n        )",
                                            "children": [
                                                {
                                                    "type": "await",
                                                    "label": "await User.prisma().update(\n            where={\"id\": user.id},\n            data={\"metadata\": Json(raw_metadata)},\n        )",
                                                    "children": [
                                                        {
                                                            "type": "call",
                                                            "label": "User.prisma().update(\n            where={\"id\": user.id},\n            data={\"metadata\": Json(raw_metadata)},\n        )",
                                                            "children": [
                                                                {
                                                                    "type": "attribute",
                                                                    "label": "User.prisma().update",
                                                                    "children": [
                                                                        {
                                                                            "type": "call",
                                                                            "label": "User.prisma()",
                                                                            "children": [
                                                                                {
                                                                                    "type": "attribute",
                                                                                    "label": "User.prisma",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "User",
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "prisma",
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argument_list",
                                                                                    "label": "()",
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "update",
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argument_list",
                                                                    "label": "(\n            where={\"id\": user.id},\n            data={\"metadata\": Json(raw_metadata)},\n        )",
                                                                    "children": [
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "where={\"id\": user.id}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "where",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "dictionary",
                                                                                    "label": "{\"id\": user.id}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "pair",
                                                                                            "label": "\"id\": user.id",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"id\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "id",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "attribute",
                                                                                                    "label": "user.id",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "user",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "id",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "keyword_argument",
                                                                            "label": "data={\"metadata\": Json(raw_metadata)}",
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "data",
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "dictionary",
                                                                                    "label": "{\"metadata\": Json(raw_metadata)}",
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "pair",
                                                                                            "label": "\"metadata\": Json(raw_metadata)",
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "string",
                                                                                                    "label": "\"metadata\"",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "string_start",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_content",
                                                                                                            "label": "metadata",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string_end",
                                                                                                            "label": "\"",
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "call",
                                                                                                    "label": "Json(raw_metadata)",
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "Json",
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argument_list",
                                                                                                            "label": "(raw_metadata)",
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "raw_metadata",
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}