[
  "Edge 0: [Source] public static func readLengthEncodedInteger(data: Array<Byte>): (UInt64, Bool, Int64) { ... => [Target] case 251 => return (0, true, 1)",
  "Edge 1: [Source] public static func readLengthEncodedInteger(data: Array<Byte>): (UInt64, Bool, Int64) { ... => [Target] case 252 => return (\n                    UInt64(data[1]) | UInt64(data[2])<<8, false, 3\n                )",
  "Edge 2: [Source] public static func readLengthEncodedInteger(data: Array<Byte>): (UInt64, Bool, Int64) { ... => [Target] case 253 => return (\n                    UInt64(data[1]) | UInt64(data[2])<<8 | UInt64(data[3])<<16, false, 4\n                )",
  "Edge 3: [Source] public static func readLengthEncodedInteger(data: Array<Byte>): (UInt64, Bool, Int64) { ... => [Target] case 254 => return (\n                    UInt64(data[1]) | UInt64(data[2])<<8 | UInt64(data[3])<<16 | UInt64(data[4]) << 24 |\n                    UInt64(data[5]) << 32 | UInt64(data[6]) << 40 | UInt64(data[7]) << 48 | UInt64(data[8]) << 56,\n                    false, 9\n                )",
  "Edge 4: [Source] public static func readLengthEncodedInteger(data: Array<Byte>): (UInt64, Bool, Int64) { ... => [Target] case _ => return (UInt64(data[0]), false , 1)\n        }\n    }",
  "Edge 5: [Source] public static func readLengthEncodedInteger(data: Array<Byte>): (UInt64, Bool, Int64) { ... => [Target] case 251 => return (0, true, 1)",
  "Edge 6: [Source] public static func readLengthEncodedInteger(data: Array<Byte>): (UInt64, Bool, Int64) { ... => [Target] case 252 => return (\n                    UInt64(data[1]) | UInt64(data[2])<<8, false, 3\n                )",
  "Edge 7: [Source] public static func readLengthEncodedInteger(data: Array<Byte>): (UInt64, Bool, Int64) { ... => [Target] case 253 => return (\n                    UInt64(data[1]) | UInt64(data[2])<<8 | UInt64(data[3])<<16, false, 4\n                )",
  "Edge 8: [Source] public static func readLengthEncodedInteger(data: Array<Byte>): (UInt64, Bool, Int64) { ... => [Target] case 254 => return (\n                    UInt64(data[1]) | UInt64(data[2])<<8 | UInt64(data[3])<<16 | UInt64(data[4]) << 24 |\n                    UInt64(data[5]) << 32 | UInt64(data[6]) << 40 | UInt64(data[7]) << 48 | UInt64(data[8]) << 56,\n                    false, 9\n                )",
  "Edge 9: [Source] public static func readLengthEncodedInteger(data: Array<Byte>): (UInt64, Bool, Int64) { ... => [Target] case _ => return (UInt64(data[0]), false , 1)\n        }\n    }"
]