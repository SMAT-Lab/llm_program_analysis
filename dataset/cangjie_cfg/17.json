[
  "Edge 0: [Source] init(attrs: Tokens, input: Tokens) { ... => [Target] case d: StructDecl => d",
  "Edge 1: [Source] init(attrs: Tokens, input: Tokens) { ... => [Target] case _ => diagReport(DiagReportLevel.ERROR, input, \"宏仅适用于结构体\", \"请检查宏是否作用在结构体上\")\n                throw Exception(\"不支持的类型\")\n        }\n        if (!findInterface(\"Serializable\", this.structDecl)) {\n            diagReport(DiagReportLevel.ERROR, input, \"结构体需要声明 Serializable 接口\", \"请检查结构体是否声明要实现 Serializable 接口\")\n            throw Exception(\"未声明 Serializable 接口\")\n        }\n        let visitor = StructDeclVisitor()\n        this.structDecl.traverse(visitor)\n        this.valDecls = visitor.varDecls.toArray()\n    }"
]