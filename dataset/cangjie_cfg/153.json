{
  "name": "153.cj",
  "type": "File",
  "blocks": [],
  "functions": [],
  "classes": [
    {
      "name": "_DEFAULT_CANG_CLASS",
      "type": "Class",
      "blocks": [],
      "functions": [],
      "classes": []
    },
    {
      "name": "ToStringUtils",
      "type": "Class",
      "blocks": [],
      "functions": [
        {
          "name": "listToString",
          "type": "Function",
          "blocks": [
            {
              "id": 133924170096288,
              "label": "",
              "successors": [
                {
                  "id": 133924152558304,
                  "label": "let str = values |> map<T, String>",
                  "successors": [
                    {
                      "id": 133924152558352,
                      "label": "{v => toString(v)} |> collectString<String>(delimiter: \", \")",
                      "successors": [
                        {
                          "id": 133924152558400,
                          "label": "return \"[\" + str + \"]\"",
                          "successors": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "mapToString",
          "type": "Function",
          "blocks": [
            {
              "id": 133924170097008,
              "label": "",
              "successors": [
                {
                  "id": 133924152558592,
                  "label": "let str = kvs |> map<(K, V), String>",
                  "successors": [
                    {
                      "id": 133924152558640,
                      "label": "{\n            kv =>\n            let k = toString(kv[0])\n            let v = toString(kv[1])\n            k + \":\" + v\n        } |> collectString<(String)>(delimiter: \", \")",
                      "successors": [
                        {
                          "id": 133924152558688,
                          "label": "return \"{\" + str + \"}\"",
                          "successors": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "mapToString2",
          "type": "Function",
          "blocks": [
            {
              "id": 133924170097824,
              "label": "",
              "successors": [
                {
                  "id": 133924152558832,
                  "label": "match (kvs )",
                  "successors": [
                    {
                      "id": 133924152559312,
                      "label": "mapToString(_kvs)",
                      "successors": [
                        {
                          "id": 133924152558976,
                          "label": "return match (kvs) {\n            case Some(_kvs) => mapToString(_kvs)\n            case None => None\n        }",
                          "successors": []
                        }
                      ]
                    },
                    {
                      "id": 133924152559600,
                      "label": "None",
                      "successors": [
                        {
                          "id": 133924152558976
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "toString",
          "type": "Function",
          "blocks": [
            {
              "id": 133924170098544,
              "label": "",
              "successors": [
                {
                  "id": 133924152559696,
                  "label": "match (v )",
                  "successors": [
                    {
                      "id": 133924152560176,
                      "label": "v1.toString()",
                      "successors": [
                        {
                          "id": 133924152560464,
                          "label": "\"[\" + (v2 |> collectString<String>(delimiter: \", \")) + \"]\"",
                          "successors": [
                            {
                              "id": 133924152559840,
                              "label": "return match (v) {\n            case v1: ToString => v1.toString()\n            // 主要给 S3MultiValueMap 使用, 现在也都是 Collection<String>\n            case v2: Iterable<String> => \"[\" + (v2 |> collectString<String>(delimiter: \", \")) + \"]\"\n            case _ => \"<!ToString(${TypeInfo.of(v)})>\"\n        }",
                              "successors": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": 133924152560464
                    },
                    {
                      "id": 133924152560752,
                      "label": "\"<!ToString(${TypeInfo.of(v)})>\"",
                      "successors": [
                        {
                          "id": 133924152559840
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "exceptionToString",
          "type": "Function",
          "blocks": [
            {
              "id": 133924170099264,
              "label": "",
              "successors": [
                {
                  "id": 133924152560896,
                  "label": "var sb = StringBuilder()",
                  "successors": [
                    {
                      "id": 133924152560944,
                      "label": "sb.append(ex.toString())",
                      "successors": [
                        {
                          "id": 133924152560992,
                          "label": "sb.append(IOUtils.LINE_SEPARATOR)",
                          "successors": [
                            {
                              "id": 133924152561040,
                              "label": "let stacks = ex.getStackTrace()",
                              "successors": [
                                {
                                  "id": 133924152561088,
                                  "label": "for (i in 0..stacks.size )",
                                  "successors": [
                                    {
                                      "id": 133924152561424,
                                      "label": "let stack = stacks[i]",
                                      "successors": [
                                        {
                                          "id": 133924152561472,
                                          "label": "sb.append(\"\\t at ${stack.declaringClass} ${stack.methodName} (${stack.fileName}:${stack.lineNumber})\")",
                                          "successors": [
                                            {
                                              "id": 133924152561520,
                                              "label": "sb.append(IOUtils.LINE_SEPARATOR)",
                                              "successors": [
                                                {
                                                  "id": 133924152561088
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "id": 133924152561232,
                                      "label": "return sb.toString()",
                                      "successors": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    }
  ]
}