{
  "name": "55.cj",
  "type": "File",
  "blocks": [],
  "functions": [],
  "classes": [
    {
      "name": "_DEFAULT_CANG_CLASS",
      "type": "Class",
      "blocks": [],
      "functions": [
        {
          "name": "unknown_method",
          "type": "Function",
          "blocks": [
            {
              "id": 133924158645024,
              "label": "",
              "successors": [
                {
                  "id": 133924144248096,
                  "label": "let vocab_path = \"./download/Qwen2-0.5B-Instruct/tokenizer.json\"",
                  "successors": [
                    {
                      "id": 133924144248144,
                      "label": "let system_prompt = \"You are a helpful assistant.\"",
                      "successors": [
                        {
                          "id": 133924144248192,
                          "label": "let tokenizer = HuggingfaceTokenizer()",
                          "successors": [
                            {
                              "id": 133924144248240,
                              "label": "tokenizer.load_vocab(file_path: vocab_path)",
                              "successors": [
                                {
                                  "id": 133924144248288,
                                  "label": "println(\"===== test1 ===== \")",
                                  "successors": [
                                    {
                                      "id": 133924144248336,
                                      "label": "let raw_text = \"世界你好，hello world!\"",
                                      "successors": [
                                        {
                                          "id": 133924144248384,
                                          "label": "let encode_tokens1 = tokenizer.encode(raw_text)",
                                          "successors": [
                                            {
                                              "id": 133924144248432,
                                              "label": "println(\"encode_tokens: ${encode_tokens1}\")",
                                              "successors": [
                                                {
                                                  "id": 133924144248480,
                                                  "label": "let decode_str1 = tokenizer.decode(encode_tokens1, skip_special_tokens: false)",
                                                  "successors": [
                                                    {
                                                      "id": 133924144248528,
                                                      "label": "println(\"deocode_str: ${decode_str1}\")",
                                                      "successors": [
                                                        {
                                                          "id": 133924144248576,
                                                          "label": "println(\"===== ===== ===== \")",
                                                          "successors": [
                                                            {
                                                              "id": 133924144248624,
                                                              "label": "println(\"===== test2 ===== \")",
                                                              "successors": [
                                                                {
                                                                  "id": 133924144248672,
                                                                  "label": "let raw_text2 = raw_text + \"<|im_end|>\"",
                                                                  "successors": [
                                                                    {
                                                                      "id": 133924144248720,
                                                                      "label": "let encode_tokens2 = tokenizer.encode(raw_text2)",
                                                                      "successors": [
                                                                        {
                                                                          "id": 133924144248768,
                                                                          "label": "println(\"encode_tokens: ${encode_tokens2}\")",
                                                                          "successors": [
                                                                            {
                                                                              "id": 133924144248816,
                                                                              "label": "let decode_str2 = tokenizer.decode(encode_tokens2, skip_special_tokens: false)",
                                                                              "successors": [
                                                                                {
                                                                                  "id": 133924144248864,
                                                                                  "label": "println(\"deocode_str(with special)    : ${decode_str2}\")",
                                                                                  "successors": [
                                                                                    {
                                                                                      "id": 133924144248912,
                                                                                      "label": "let decode_str3 = tokenizer.decode(encode_tokens2, skip_special_tokens: true)",
                                                                                      "successors": [
                                                                                        {
                                                                                          "id": 133924144248960,
                                                                                          "label": "println(\"deocode_str(without special) : ${decode_str3}\")",
                                                                                          "successors": [
                                                                                            {
                                                                                              "id": 133924144249008,
                                                                                              "label": "println(\"===== ===== ===== \")",
                                                                                              "successors": [
                                                                                                {
                                                                                                  "id": 133924144249056,
                                                                                                  "label": "println(\"===== test3 ===== \")",
                                                                                                  "successors": [
                                                                                                    {
                                                                                                      "id": 133924144249104,
                                                                                                      "label": "let messages = ArrayList<Message>([\n        Message(RoleType.System, system_prompt),\n        Message(RoleType.User, raw_text)\n    ])",
                                                                                                      "successors": [
                                                                                                        {
                                                                                                          "id": 133924144249152,
                                                                                                          "label": "let new_text = tokenizer.apply_chat_template(messages, add_generation_prompt: true)",
                                                                                                          "successors": [
                                                                                                            {
                                                                                                              "id": 133924144249200,
                                                                                                              "label": "println(\"new_text:\\n ${new_text}\")",
                                                                                                              "successors": [
                                                                                                                {
                                                                                                                  "id": 133924144249248,
                                                                                                                  "label": "return 0",
                                                                                                                  "successors": []
                                                                                                                }
                                                                                                              ]
                                                                                                            }
                                                                                                          ]
                                                                                                        }
                                                                                                      ]
                                                                                                    }
                                                                                                  ]
                                                                                                }
                                                                                              ]
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    }
  ]
}