{
  "name": "92.cj",
  "type": "File",
  "blocks": [],
  "functions": [],
  "classes": [
    {
      "name": "_DEFAULT_CANG_CLASS",
      "type": "Class",
      "blocks": [],
      "functions": [
        {
          "name": "readFile",
          "type": "Function",
          "blocks": [
            {
              "id": 133924175377552,
              "label": "",
              "successors": [
                {
                  "id": 133924152222736,
                  "label": "return String.fromUtf8(File.readFrom(path))",
                  "successors": []
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "unknown_method",
          "type": "Function",
          "blocks": [
            {
              "id": 133924175378848,
              "label": "",
              "successors": [
                {
                  "id": 133924152222928,
                  "label": "let server = HttpServer(\"127.0.0.1\", 8080)",
                  "successors": [
                    {
                      "id": 133924152222976,
                      "label": "server.route(\"/\", { req, res => \n        if (req.method == \"GET\") {\n            // 设置 http 响应头\n            let Headers = HttpHeaders()\n            Headers.add(\"Content-Type\", \"text/html;charset=utf-8;\")\n            res.setHeaders(Headers)\n            // 返回读取一个 html 文件，并返回给客户端\n            res.body(readFile(\"./index.html\"))\n        }\n    })",
                      "successors": [
                        {
                          "id": 133924152223024,
                          "label": "server.route(\"/testApi\", { req, res => \n        if (req.method == \"POST\") {\n            // 读取请求内容\n            let data = Array<UInt8>(1024, repeat: 0)\n            let length = req.body.read(data)\n            let content = String.fromUtf8(data.slice(0, length))\n            println(content)\n            let object = JsonValue.fromStr(content).asObject()\n\n            // 初始化一个空的 JsonObject，并添加键值和信息\n            let response = JsonObject()\n            response.put(\"code\", JsonValue.fromStr(\"\\\"ok\\\"\"))\n            let UserName = object.get(\"name\").getOrThrow().asString().getValue()\n            response.put(\"msg\", JsonValue.fromStr(\"\\\"Cangjie：Hello ${UserName}\\\"\"))\n\n            // 设置 http 响应头\n            let headers = HttpHeaders()\n            headers.add(\"Content-Type\", \"applications/json;charset=utf-8;\")\n            res.setHeaders(headers)\n\n            // 将 JsonObject 转为 Json 字符串文本并响应返回\n            res.body(response.toJsonString())\n        }\n    })",
                          "successors": [
                            {
                              "id": 133924152223072,
                              "label": "server.start()",
                              "successors": [
                                {
                                  "id": 133924175378896,
                                  "label": "return",
                                  "successors": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    },
    {
      "name": "HttpServer",
      "type": "Class",
      "blocks": [],
      "functions": [
        {
          "name": "constructor",
          "type": "Function",
          "blocks": [
            {
              "id": 133924175375392,
              "label": "",
              "successors": [
                {
                  "id": 133924152223168,
                  "label": "server = ServerBuilder().addr(ip).port(port).build()",
                  "successors": [
                    {
                      "id": 133924152223216,
                      "label": "println(\"http://${ip}:${port}\")",
                      "successors": [
                        {
                          "id": 133924175375440,
                          "label": "return",
                          "successors": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "route",
          "type": "Function",
          "blocks": [
            {
              "id": 133924175376256,
              "label": "",
              "successors": [
                {
                  "id": 133924152223360,
                  "label": "server.distributor.register(route, { context => \n            callback(context.request, context.responseBuilder)\n        })",
                  "successors": [
                    {
                      "id": 133924175376304,
                      "label": "return",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "start",
          "type": "Function",
          "blocks": [
            {
              "id": 133924175376880,
              "label": "",
              "successors": [
                {
                  "id": 133924152223504,
                  "label": "server.serve()",
                  "successors": [
                    {
                      "id": 133924175376928,
                      "label": "return",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    }
  ]
}