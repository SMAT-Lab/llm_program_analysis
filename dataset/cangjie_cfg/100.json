[
  "Edge 0: [Source] public static func fromJson(r: JsonReader): EnvInfo { ... => [Target] case BeginObject => r.startObject()\n          while(r.peek() != EndObject) {\n            let n = r.readName()\n            match (n) {",
  "Edge 1: [Source] public static func fromJson(r: JsonReader): EnvInfo { ... => [Target] case \"model\" => temp_model = r.readValue<String>()",
  "Edge 2: [Source] public static func fromJson(r: JsonReader): EnvInfo { ... => [Target] case \"api_key\" => temp_api_key = r.readValue<String>()",
  "Edge 3: [Source] public static func fromJson(r: JsonReader): EnvInfo { ... => [Target] case \"base_url\" => temp_base_url = r.readValue<String>()",
  "Edge 4: [Source] public static func fromJson(r: JsonReader): EnvInfo { ... => [Target] case \"system_prompt\" => temp_system_prompt = r.readValue<String>()",
  "Edge 5: [Source] public static func fromJson(r: JsonReader): EnvInfo { ... => [Target] case _ => ()\n            }\n          }\n          r.endObject()\n          break",
  "Edge 6: [Source] public static func fromJson(r: JsonReader): EnvInfo { ... => [Target] case _ => throw Exception()\n      }\n    }\n    return EnvInfo(temp_model, temp_api_key, temp_base_url, temp_system_prompt);\n  }",
  "Edge 7: [Source] public static func fromJson(r: JsonReader): EnvInfo { ... => [Target] case BeginObject => r.startObject()\n          while(r.peek() != EndObject) {\n            let n = r.readName()\n            match (n) {",
  "Edge 8: [Source] public static func fromJson(r: JsonReader): EnvInfo { ... => [Target] case \"model\" => temp_model = r.readValue<String>()",
  "Edge 9: [Source] public static func fromJson(r: JsonReader): EnvInfo { ... => [Target] case \"api_key\" => temp_api_key = r.readValue<String>()",
  "Edge 10: [Source] public static func fromJson(r: JsonReader): EnvInfo { ... => [Target] case \"base_url\" => temp_base_url = r.readValue<String>()",
  "Edge 11: [Source] public static func fromJson(r: JsonReader): EnvInfo { ... => [Target] case \"system_prompt\" => temp_system_prompt = r.readValue<String>()",
  "Edge 12: [Source] public static func fromJson(r: JsonReader): EnvInfo { ... => [Target] case _ => ()\n            }\n          }\n          r.endObject()\n          break",
  "Edge 13: [Source] public static func fromJson(r: JsonReader): EnvInfo { ... => [Target] case _ => throw Exception()\n      }\n    }\n    return EnvInfo(temp_model, temp_api_key, temp_base_url, temp_system_prompt);\n  }"
]