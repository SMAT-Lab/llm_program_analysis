{
  "name": "82.cj",
  "type": "File",
  "blocks": [],
  "functions": [],
  "classes": [
    {
      "name": "_DEFAULT_CANG_CLASS",
      "type": "Class",
      "blocks": [],
      "functions": [
        {
          "name": "pathLoad",
          "type": "Function",
          "blocks": [
            {
              "id": 133924164685344,
              "label": "",
              "successors": [
                {
                  "id": 133924146740048,
                  "label": "var pathMap = PathMap(\n        \"/opds/v2/series/:id\",\n        {\n            httpContext =>\n            let host = httpContext.request.headers.get(\"host\").toArray()[0]\n            let id = httpContext.request.url.path.split(\"/\")[4]\n            var page = 0\n            match (httpContext.request.url.query) {\n                case Some(x) => page = Int64.parse(x.trimStart(\"page=\"))\n                case None => ()\n            }\n            var cataLog = Series(id, host: host, page: page)\n            httpContext.responseBuilder.header(\"content-type\", \"application/json;charset:utf-8;\")\n            httpContext.responseBuilder.body(cataLog.toJson())\n        }\n    )",
                  "successors": [
                    {
                      "id": 133924146740192,
                      "label": "return pathMap",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    },
    {
      "name": "Series",
      "type": "Class",
      "blocks": [],
      "functions": [
        {
          "name": "constructor",
          "type": "Function",
          "blocks": [
            {
              "id": 133924164684240,
              "label": "",
              "successors": [
                {
                  "id": 133924146740480,
                  "label": "let series = BookSeries.fromId(id)",
                  "successors": [
                    {
                      "id": 133924146740528,
                      "label": "metadata = Metadata(series.name, itemsPerPage: 20, currentPage: page + 1,\n            numberOfItems: BookSeries.getCount(id: id), modified: series.lastModifiedDate)",
                      "successors": [
                        {
                          "id": 133924146740576,
                          "label": "metadata.addBookDesc(id)",
                          "successors": [
                            {
                              "id": 133924146740624,
                              "label": "links = Links(host, \"series/${id}\", page: page)",
                              "successors": [
                                {
                                  "id": 133924146740672,
                                  "label": "var obj = Books.formDatabase(baseConfig.database, page: page + 1, count: 20, seriesId: id)",
                                  "successors": [
                                    {
                                      "id": 133924146740720,
                                      "label": "for (i in obj )",
                                      "successors": [
                                        {
                                          "id": 133924146741008,
                                          "label": "publications.append(Publication(i, host))",
                                          "successors": [
                                            {
                                              "id": 133924146740720
                                            }
                                          ]
                                        },
                                        {
                                          "id": 133924164684288,
                                          "label": "return",
                                          "successors": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "toJson",
          "type": "Function",
          "blocks": [
            {
              "id": 133924164684720,
              "label": "",
              "successors": [
                {
                  "id": 133924146740960,
                  "label": "let stream = ByteBuffer()",
                  "successors": [
                    {
                      "id": 133924146741056,
                      "label": "let w = JsonWriter(stream)",
                      "successors": [
                        {
                          "id": 133924146741104,
                          "label": "w.startObject()",
                          "successors": [
                            {
                              "id": 133924146741152,
                              "label": "w.writeName(\"metadata\").writeValue(metadata)",
                              "successors": [
                                {
                                  "id": 133924146741200,
                                  "label": "w.writeName(\"links\").writeValue(links)",
                                  "successors": [
                                    {
                                      "id": 133924146888768,
                                      "label": "w.writeName(\"publications\").writeValue<ArrayList<Publication>>(publications)",
                                      "successors": [
                                        {
                                          "id": 133924146888816,
                                          "label": "w.endObject()",
                                          "successors": [
                                            {
                                              "id": 133924146888864,
                                              "label": "w.flush()",
                                              "successors": [
                                                {
                                                  "id": 133924146888912,
                                                  "label": "return String.fromUtf8(readToEnd(stream))",
                                                  "successors": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    }
  ]
}