[
  "Edge 0: [Source] public static func fromJson(r: JsonReader): BookSeries { ... => [Target] case BeginObject => r.startObject()\n                    while (r.peek() != EndObject) {\n                        let n = r.readName()\n                        match (n) {",
  "Edge 1: [Source] public static func fromJson(r: JsonReader): BookSeries { ... => [Target] case \"ID\" => res.id = r.readValue<String>()",
  "Edge 2: [Source] public static func fromJson(r: JsonReader): BookSeries { ... => [Target] case \"NAME\" => res.name = r.readValue<String>()",
  "Edge 3: [Source] public static func fromJson(r: JsonReader): BookSeries { ... => [Target] case \"BOOK_COUNT\" => res.bookCount = r.readValue<Int64>()",
  "Edge 4: [Source] public static func fromJson(r: JsonReader): BookSeries { ... => [Target] case \"URL\" => res.url = r.readValue<String>()",
  "Edge 5: [Source] public static func fromJson(r: JsonReader): BookSeries { ... => [Target] case \"CREATED_DATE\" => res.createdDate = r.readValue<String>()",
  "Edge 6: [Source] public static func fromJson(r: JsonReader): BookSeries { ... => [Target] case \"LAST_MODIFIED_DATE\" => res.lastModifiedDate = r.readValue<String>()",
  "Edge 7: [Source] public static func fromJson(r: JsonReader): BookSeries { ... => [Target] case \"FILE_LAST_MODIFIED\" => res.fileLastModified = r.readValue<String>()",
  "Edge 8: [Source] public static func fromJson(r: JsonReader): BookSeries { ... => [Target] case _ => ()\n                        }\n                    }\n                    r.endObject()\n                    break",
  "Edge 9: [Source] public static func fromJson(r: JsonReader): BookSeries { ... => [Target] case _ => throw Exception()\n            }\n        }\n        return res\n    }",
  "Edge 10: [Source] public static func fromJsonToArray(r: JsonReader): ArrayList<BookSeries> { ... => [Target] case BeginArray => r.startArray()\n                    while (r.peek() != EndArray) {\n                        res.append(BookSeries.fromJson(r))\n                    }\n                    r.endArray()\n                    break",
  "Edge 11: [Source] public static func fromJsonToArray(r: JsonReader): ArrayList<BookSeries> { ... => [Target] case _ => throw Exception()\n            }\n        }\n        return res\n    }",
  "Edge 12: [Source] public static func fromJson(r: JsonReader): BookSeries { ... => [Target] case BeginObject => r.startObject()\n                    while (r.peek() != EndObject) {\n                        let n = r.readName()\n                        match (n) {",
  "Edge 13: [Source] public static func fromJson(r: JsonReader): BookSeries { ... => [Target] case \"ID\" => res.id = r.readValue<String>()",
  "Edge 14: [Source] public static func fromJson(r: JsonReader): BookSeries { ... => [Target] case \"NAME\" => res.name = r.readValue<String>()",
  "Edge 15: [Source] public static func fromJson(r: JsonReader): BookSeries { ... => [Target] case \"BOOK_COUNT\" => res.bookCount = r.readValue<Int64>()",
  "Edge 16: [Source] public static func fromJson(r: JsonReader): BookSeries { ... => [Target] case \"URL\" => res.url = r.readValue<String>()",
  "Edge 17: [Source] public static func fromJson(r: JsonReader): BookSeries { ... => [Target] case \"CREATED_DATE\" => res.createdDate = r.readValue<String>()",
  "Edge 18: [Source] public static func fromJson(r: JsonReader): BookSeries { ... => [Target] case \"LAST_MODIFIED_DATE\" => res.lastModifiedDate = r.readValue<String>()",
  "Edge 19: [Source] public static func fromJson(r: JsonReader): BookSeries { ... => [Target] case \"FILE_LAST_MODIFIED\" => res.fileLastModified = r.readValue<String>()",
  "Edge 20: [Source] public static func fromJson(r: JsonReader): BookSeries { ... => [Target] case _ => ()\n                        }\n                    }\n                    r.endObject()\n                    break",
  "Edge 21: [Source] public static func fromJson(r: JsonReader): BookSeries { ... => [Target] case _ => throw Exception()\n            }\n        }\n        return res\n    }",
  "Edge 22: [Source] public static func fromJsonToArray(r: JsonReader): ArrayList<BookSeries> { ... => [Target] case BeginArray => r.startArray()\n                    while (r.peek() != EndArray) {\n                        res.append(BookSeries.fromJson(r))\n                    }\n                    r.endArray()\n                    break",
  "Edge 23: [Source] public static func fromJsonToArray(r: JsonReader): ArrayList<BookSeries> { ... => [Target] case _ => throw Exception()\n            }\n        }\n        return res\n    }",
  "Edge 24: [Source] public static func fromJson(r: JsonReader): Books { ... => [Target] case BeginObject => r.startObject()\n                    while (r.peek() != EndObject) {\n                        let n = r.readName()\n                        match (n) {",
  "Edge 25: [Source] public static func fromJson(r: JsonReader): Books { ... => [Target] case \"ID\" => res.id = r.readValue<String>()",
  "Edge 26: [Source] public static func fromJson(r: JsonReader): Books { ... => [Target] case \"SERIES_ID\" => res.seriesId = r.readValue<String>()",
  "Edge 27: [Source] public static func fromJson(r: JsonReader): Books { ... => [Target] case \"LIBRARY_ID\" => res.libraryId = r.readValue<String>()",
  "Edge 28: [Source] public static func fromJson(r: JsonReader): Books { ... => [Target] case \"NAME\" => res.name = r.readValue<String>()",
  "Edge 29: [Source] public static func fromJson(r: JsonReader): Books { ... => [Target] case \"NUMBER\" => res.number = r.readValue<Int64>()",
  "Edge 30: [Source] public static func fromJson(r: JsonReader): Books { ... => [Target] case \"URL\" => res.url = r.readValue<String>()",
  "Edge 31: [Source] public static func fromJson(r: JsonReader): Books { ... => [Target] case \"CREATED_DATE\" => res.createdDate = r.readValue<String>()",
  "Edge 32: [Source] public static func fromJson(r: JsonReader): Books { ... => [Target] case \"LAST_MODIFIED_DATE\" => res.lastModifiedDate = r.readValue<String>()",
  "Edge 33: [Source] public static func fromJson(r: JsonReader): Books { ... => [Target] case \"FILE_LAST_MODIFIED\" => res.fileLastModified = r.readValue<String>()",
  "Edge 34: [Source] public static func fromJson(r: JsonReader): Books { ... => [Target] case _ => ()\n                        }\n                    }\n                    r.endObject()\n                    break",
  "Edge 35: [Source] public static func fromJson(r: JsonReader): Books { ... => [Target] case _ => throw Exception()\n            }\n        }\n        res.pageCount = res.getPageCount()\n        return res\n    }",
  "Edge 36: [Source] public static func fromJsonToArray(r: JsonReader): ArrayList<Books> { ... => [Target] case BeginArray => r.startArray()\n                    while (r.peek() != EndArray) {\n                        res.append(Books.fromJson(r))\n                    }\n                    r.endArray()\n                    break",
  "Edge 37: [Source] public static func fromJsonToArray(r: JsonReader): ArrayList<Books> { ... => [Target] case _ => throw Exception()\n            }\n        }\n        return res\n    }",
  "Edge 38: [Source] public static func fromJson(r: JsonReader): Books { ... => [Target] case BeginObject => r.startObject()\n                    while (r.peek() != EndObject) {\n                        let n = r.readName()\n                        match (n) {",
  "Edge 39: [Source] public static func fromJson(r: JsonReader): Books { ... => [Target] case \"ID\" => res.id = r.readValue<String>()",
  "Edge 40: [Source] public static func fromJson(r: JsonReader): Books { ... => [Target] case \"SERIES_ID\" => res.seriesId = r.readValue<String>()",
  "Edge 41: [Source] public static func fromJson(r: JsonReader): Books { ... => [Target] case \"LIBRARY_ID\" => res.libraryId = r.readValue<String>()",
  "Edge 42: [Source] public static func fromJson(r: JsonReader): Books { ... => [Target] case \"NAME\" => res.name = r.readValue<String>()",
  "Edge 43: [Source] public static func fromJson(r: JsonReader): Books { ... => [Target] case \"NUMBER\" => res.number = r.readValue<Int64>()",
  "Edge 44: [Source] public static func fromJson(r: JsonReader): Books { ... => [Target] case \"URL\" => res.url = r.readValue<String>()",
  "Edge 45: [Source] public static func fromJson(r: JsonReader): Books { ... => [Target] case \"CREATED_DATE\" => res.createdDate = r.readValue<String>()",
  "Edge 46: [Source] public static func fromJson(r: JsonReader): Books { ... => [Target] case \"LAST_MODIFIED_DATE\" => res.lastModifiedDate = r.readValue<String>()",
  "Edge 47: [Source] public static func fromJson(r: JsonReader): Books { ... => [Target] case \"FILE_LAST_MODIFIED\" => res.fileLastModified = r.readValue<String>()",
  "Edge 48: [Source] public static func fromJson(r: JsonReader): Books { ... => [Target] case _ => ()\n                        }\n                    }\n                    r.endObject()\n                    break",
  "Edge 49: [Source] public static func fromJson(r: JsonReader): Books { ... => [Target] case _ => throw Exception()\n            }\n        }\n        res.pageCount = res.getPageCount()\n        return res\n    }",
  "Edge 50: [Source] public static func fromJsonToArray(r: JsonReader): ArrayList<Books> { ... => [Target] case BeginArray => r.startArray()\n                    while (r.peek() != EndArray) {\n                        res.append(Books.fromJson(r))\n                    }\n                    r.endArray()\n                    break",
  "Edge 51: [Source] public static func fromJsonToArray(r: JsonReader): ArrayList<Books> { ... => [Target] case _ => throw Exception()\n            }\n        }\n        return res\n    }",
  "Edge 52: [Source] public static func fromJson(r: JsonReader): Librarys { ... => [Target] case BeginObject => r.startObject()\n                    while (r.peek() != EndObject) {\n                        let n = r.readName()\n                        match (n) {",
  "Edge 53: [Source] public static func fromJson(r: JsonReader): Librarys { ... => [Target] case \"ID\" => res.id = r.readValue<String>()",
  "Edge 54: [Source] public static func fromJson(r: JsonReader): Librarys { ... => [Target] case \"NAME\" => res.name = r.readValue<String>()",
  "Edge 55: [Source] public static func fromJson(r: JsonReader): Librarys { ... => [Target] case \"ROOT\" => res.root = r.readValue<String>()",
  "Edge 56: [Source] public static func fromJson(r: JsonReader): Librarys { ... => [Target] case \"CREATED_DATE\" => res.createdDate = r.readValue<String>()",
  "Edge 57: [Source] public static func fromJson(r: JsonReader): Librarys { ... => [Target] case \"LAST_MODIFIED_DATE\" => res.lastModifiedDate = r.readValue<String>()",
  "Edge 58: [Source] public static func fromJson(r: JsonReader): Librarys { ... => [Target] case _ => ()\n                        }\n                    }\n                    r.endObject()\n                    break",
  "Edge 59: [Source] public static func fromJson(r: JsonReader): Librarys { ... => [Target] case _ => throw Exception()\n            }\n        }\n        return res\n    }",
  "Edge 60: [Source] public static func fromJsonToArray(r: JsonReader): ArrayList<Librarys> { ... => [Target] case BeginArray => r.startArray()\n                    while (r.peek() != EndArray) {\n                        res.append(Librarys.fromJson(r))\n                    }\n                    r.endArray()\n                    break",
  "Edge 61: [Source] public static func fromJsonToArray(r: JsonReader): ArrayList<Librarys> { ... => [Target] case _ => throw Exception()\n            }\n        }\n        return res\n    }",
  "Edge 62: [Source] public static func fromJson(r: JsonReader): Librarys { ... => [Target] case BeginObject => r.startObject()\n                    while (r.peek() != EndObject) {\n                        let n = r.readName()\n                        match (n) {",
  "Edge 63: [Source] public static func fromJson(r: JsonReader): Librarys { ... => [Target] case \"ID\" => res.id = r.readValue<String>()",
  "Edge 64: [Source] public static func fromJson(r: JsonReader): Librarys { ... => [Target] case \"NAME\" => res.name = r.readValue<String>()",
  "Edge 65: [Source] public static func fromJson(r: JsonReader): Librarys { ... => [Target] case \"ROOT\" => res.root = r.readValue<String>()",
  "Edge 66: [Source] public static func fromJson(r: JsonReader): Librarys { ... => [Target] case \"CREATED_DATE\" => res.createdDate = r.readValue<String>()",
  "Edge 67: [Source] public static func fromJson(r: JsonReader): Librarys { ... => [Target] case \"LAST_MODIFIED_DATE\" => res.lastModifiedDate = r.readValue<String>()",
  "Edge 68: [Source] public static func fromJson(r: JsonReader): Librarys { ... => [Target] case _ => ()\n                        }\n                    }\n                    r.endObject()\n                    break",
  "Edge 69: [Source] public static func fromJson(r: JsonReader): Librarys { ... => [Target] case _ => throw Exception()\n            }\n        }\n        return res\n    }",
  "Edge 70: [Source] public static func fromJsonToArray(r: JsonReader): ArrayList<Librarys> { ... => [Target] case BeginArray => r.startArray()\n                    while (r.peek() != EndArray) {\n                        res.append(Librarys.fromJson(r))\n                    }\n                    r.endArray()\n                    break",
  "Edge 71: [Source] public static func fromJsonToArray(r: JsonReader): ArrayList<Librarys> { ... => [Target] case _ => throw Exception()\n            }\n        }\n        return res\n    }"
]