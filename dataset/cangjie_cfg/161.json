[
  "Edge 0: [Source] public static func encode(input: InputStream, output: OutputStream): Unit { ... => [Target] case 0 => enc[0] = convertCharToByte(Int64(b) >> 2)\n                        tmp = Int64(b << 6) >> 2\n                        resultLen++",
  "Edge 1: [Source] public static func encode(input: InputStream, output: OutputStream): Unit { ... => [Target] case 1 => enc[1] = convertCharToByte(tmp | (Int64(b) >> 4))\n                        tmp == Int64(b << 4) >> 2\n                        resultLen++",
  "Edge 2: [Source] public static func encode(input: InputStream, output: OutputStream): Unit { ... => [Target] case 2 => enc[2] = convertCharToByte(tmp | (Int64(b) >> 6))\n                        tmp == Int64(b << 2) >> 2\n                        enc[3] = convertCharToByte(tmp)\n                        bufout.write(enc)\n                        resultLen += 2",
  "Edge 3: [Source] public static func encode(input: InputStream, output: OutputStream): Unit { ... => [Target] case _ => throw UnreachableException(\"${resultLen} ${tmp} ${enc}\")\n                }\n                i++\n            }\n            bufLen = input.read(buf)\n        }\n        match (resultLen % 4) {",
  "Edge 4: [Source] public static func encode(input: InputStream, output: OutputStream): Unit { ... => [Target] case 0 => ()",
  "Edge 5: [Source] public static func encode(input: InputStream, output: OutputStream): Unit { ... => [Target] case 1 => enc[1] = convertCharToByte(tmp)\n                enc[2] = tailSymbol\n                enc[3] = tailSymbol\n                bufout.write(enc)",
  "Edge 6: [Source] public static func encode(input: InputStream, output: OutputStream): Unit { ... => [Target] case 2 => enc[2] = convertCharToByte(tmp)\n                enc[3] = tailSymbol\n                bufout.write(enc)",
  "Edge 7: [Source] public static func encode(input: InputStream, output: OutputStream): Unit { ... => [Target] case _ => throw UnreachableException(\"${resultLen} ${tmp} ${enc}\")\n        }\n        bufout.flush()\n    }",
  "Edge 8: [Source] public static func decode(input: InputStream, output: OutputStream): Unit { ... => [Target] case 0 => dec[0] = idx << 2",
  "Edge 9: [Source] public static func decode(input: InputStream, output: OutputStream): Unit { ... => [Target] case 1 => dec[0] |= idx >> 4\n                        dec[1] = idx << 4",
  "Edge 10: [Source] public static func decode(input: InputStream, output: OutputStream): Unit { ... => [Target] case 2 => dec[1] |= idx >> 2\n                        dec[2] = idx << 6",
  "Edge 11: [Source] public static func decode(input: InputStream, output: OutputStream): Unit { ... => [Target] case 3 => dec[2] |= idx\n                        bufout.write(dec)",
  "Edge 12: [Source] public static func decode(input: InputStream, output: OutputStream): Unit { ... => [Target] case _ => throw UnreachableException()\n                }\n                i++\n                resultLen++\n            }\n            bufLen = input.read(buf)\n        }\n        bufout.flush()\n    }",
  "Edge 13: [Source] public static func encode(input: InputStream, output: OutputStream): Unit { ... => [Target] case 0 => enc[0] = convertCharToByte(Int64(b) >> 2)\n                        tmp = Int64(b << 6) >> 2\n                        resultLen++",
  "Edge 14: [Source] public static func encode(input: InputStream, output: OutputStream): Unit { ... => [Target] case 1 => enc[1] = convertCharToByte(tmp | (Int64(b) >> 4))\n                        tmp == Int64(b << 4) >> 2\n                        resultLen++",
  "Edge 15: [Source] public static func encode(input: InputStream, output: OutputStream): Unit { ... => [Target] case 2 => enc[2] = convertCharToByte(tmp | (Int64(b) >> 6))\n                        tmp == Int64(b << 2) >> 2\n                        enc[3] = convertCharToByte(tmp)\n                        bufout.write(enc)\n                        resultLen += 2",
  "Edge 16: [Source] public static func encode(input: InputStream, output: OutputStream): Unit { ... => [Target] case _ => throw UnreachableException(\"${resultLen} ${tmp} ${enc}\")\n                }\n                i++\n            }\n            bufLen = input.read(buf)\n        }\n        match (resultLen % 4) {",
  "Edge 17: [Source] public static func encode(input: InputStream, output: OutputStream): Unit { ... => [Target] case 0 => ()",
  "Edge 18: [Source] public static func encode(input: InputStream, output: OutputStream): Unit { ... => [Target] case 1 => enc[1] = convertCharToByte(tmp)\n                enc[2] = tailSymbol\n                enc[3] = tailSymbol\n                bufout.write(enc)",
  "Edge 19: [Source] public static func encode(input: InputStream, output: OutputStream): Unit { ... => [Target] case 2 => enc[2] = convertCharToByte(tmp)\n                enc[3] = tailSymbol\n                bufout.write(enc)",
  "Edge 20: [Source] public static func encode(input: InputStream, output: OutputStream): Unit { ... => [Target] case _ => throw UnreachableException(\"${resultLen} ${tmp} ${enc}\")\n        }\n        bufout.flush()\n    }",
  "Edge 21: [Source] public static func decode(input: InputStream, output: OutputStream): Unit { ... => [Target] case 0 => dec[0] = idx << 2",
  "Edge 22: [Source] public static func decode(input: InputStream, output: OutputStream): Unit { ... => [Target] case 1 => dec[0] |= idx >> 4\n                        dec[1] = idx << 4",
  "Edge 23: [Source] public static func decode(input: InputStream, output: OutputStream): Unit { ... => [Target] case 2 => dec[1] |= idx >> 2\n                        dec[2] = idx << 6",
  "Edge 24: [Source] public static func decode(input: InputStream, output: OutputStream): Unit { ... => [Target] case 3 => dec[2] |= idx\n                        bufout.write(dec)",
  "Edge 25: [Source] public static func decode(input: InputStream, output: OutputStream): Unit { ... => [Target] case _ => throw UnreachableException()\n                }\n                i++\n                resultLen++\n            }\n            bufLen = input.read(buf)\n        }\n        bufout.flush()\n    }"
]