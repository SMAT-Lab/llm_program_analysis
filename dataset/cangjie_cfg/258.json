[
  "Edge 0: [Source] func serve() { ... => [Target] case Some(msg) => w.sendBinary(\"客户端~ 我收到了你的消息 \\'${string_s}\\'\".toUtf8Array())",
  "Edge 1: [Source] func serve() { ... => [Target] case _ => w.close()\n                    return\n            }\n        }\n    }\n    ws.launch() // 启动监听\n}",
  "Edge 2: [Source] func call_fuzz(string_c:String, string_s2:String) { ... => [Target] case Some(msg) => Client_msg = \"${String.fromUtf8(msg)}\"\n                println(\"客户端:服务端~ 我收到了你的消息 \\\"${Client_msg}\\\"\")",
  "Edge 3: [Source] func call_fuzz(string_c:String, string_s2:String) { ... => [Target] case _ => WebSocket4cjClient_ck.getOrThrow().close()\n                return\n        }\n    } catch (e: Exception) {\n        Exception_message = \"Exception\"\n    }\n    return\n}"
]