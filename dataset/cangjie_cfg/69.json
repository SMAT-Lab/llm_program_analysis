[
  "Edge 0: [Source] public func pathLoad(): PathMap { ... => [Target] case Some(x) => convert = x.trimStart(\"convert=\")",
  "Edge 1: [Source] public func pathLoad(): PathMap { ... => [Target] case None => ()\n            }\n            let pageImage = Page.getPage(id, page, convert)\n            pageImage.readFile()\n            httpContext.responseBuilder.header(\"content-type\", \"image/${pageImage.format}\")\n            httpContext.responseBuilder.body(pageImage.data.toArray())\n        }\n    )\n    pathMap.add(\n        \"/api/v1/books/:id/manifest\",\n        {\n            httpContext =>\n            let host = httpContext.request.headers.get(\"host\").toArray()[0]\n            let id = httpContext.request.url.path.split(\"/\")[4]\n            var manifest= Manifest(id, host)\n            httpContext.responseBuilder.header(\"content-type\", \"application/json;charset:utf-8;\")\n            httpContext.responseBuilder.body(manifest.toJson())\n        }\n    )\n    return pathMap\n}"
]