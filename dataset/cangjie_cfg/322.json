{
  "name": "322.cj",
  "type": "File",
  "blocks": [],
  "functions": [],
  "classes": [
    {
      "name": "_DEFAULT_CANG_CLASS",
      "type": "Class",
      "blocks": [],
      "functions": [],
      "classes": []
    },
    {
      "name": "GrammarUtils",
      "type": "Class",
      "blocks": [],
      "functions": [
        {
          "name": "findToken",
          "type": "Function",
          "blocks": [
            {
              "id": 133924169461392,
              "label": "",
              "successors": [
                {
                  "id": 133924151488672,
                  "label": "let parts: Array<String> = path.split(\"/\")",
                  "successors": [
                    {
                      "id": 133924151488720,
                      "label": "return findToken(grammar, parts, 0)",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "findToken",
          "type": "Function",
          "blocks": [
            {
              "id": 133924169462208,
              "label": "",
              "successors": [
                {
                  "id": 133924151488960,
                  "label": "let part: String = parts[index]",
                  "successors": [
                    {
                      "id": 133924151489056,
                      "label": "let last: Bool = index == parts.size - 1",
                      "successors": [
                        {
                          "id": 133924151489104,
                          "label": "for (token in grammar.tokens() )",
                          "successors": [
                            {
                              "id": 133924151489392,
                              "label": "if (part == token.name() )",
                              "successors": [
                                {
                                  "id": 133924151489776,
                                  "label": "if (last )",
                                  "successors": [
                                    {
                                      "id": 133924151490160,
                                      "label": "return token",
                                      "successors": []
                                    },
                                    {
                                      "id": 133924151490352,
                                      "label": "let inside: ?Grammar = findFirstInsideGrammar(token)",
                                      "successors": [
                                        {
                                          "id": 133924151490400,
                                          "label": "if (let Some(v) < - inside )",
                                          "successors": [
                                            {
                                              "id": 133924151490784,
                                              "label": "return findToken(v, parts, index + 1)",
                                              "successors": []
                                            },
                                            {
                                              "id": 133924151489200,
                                              "label": "return None",
                                              "successors": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "id": 133924151489104
                                }
                              ]
                            },
                            {
                              "id": 133924151489200
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "insertBeforeToken",
          "type": "Function",
          "blocks": [
            {
              "id": 133924169463024,
              "label": "",
              "successors": [
                {
                  "id": 133924151489728,
                  "label": "let parts: Array<String> = path.split(\"/\")",
                  "successors": [
                    {
                      "id": 133924151489872,
                      "label": "insertBeforeToken(grammar, parts, 0, tokens.toArray())",
                      "successors": [
                        {
                          "id": 133924169463072,
                          "label": "return",
                          "successors": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "insertBeforeToken",
          "type": "Function",
          "blocks": [
            {
              "id": 133924169463888,
              "label": "",
              "successors": [
                {
                  "id": 133924151490544,
                  "label": "let part: String = parts[index]",
                  "successors": [
                    {
                      "id": 133924151490880,
                      "label": "let last: Bool = index == parts.size - 1",
                      "successors": [
                        {
                          "id": 133924151490976,
                          "label": "let grammarTokens: ArrayList<Token> = grammar.tokens()",
                          "successors": [
                            {
                              "id": 133924151491024,
                              "label": "var token: Token",
                              "successors": [
                                {
                                  "id": 133924151491072,
                                  "label": "for (i in 0..grammarTokens.size )",
                                  "successors": [
                                    {
                                      "id": 133924151491360,
                                      "label": "token = grammarTokens.get(i).getOrThrow()",
                                      "successors": [
                                        {
                                          "id": 133924151491408,
                                          "label": "if (part == token.name() )",
                                          "successors": [
                                            {
                                              "id": 133924151491840,
                                              "label": "if (last )",
                                              "successors": [
                                                {
                                                  "id": 133924151492224,
                                                  "label": "insertTokensAt(i, grammarTokens, tokens)",
                                                  "successors": [
                                                    {
                                                      "id": 133924169463936,
                                                      "label": "return",
                                                      "successors": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "id": 133924151492464,
                                                  "label": "let inside: ?Grammar = findFirstInsideGrammar(token)",
                                                  "successors": [
                                                    {
                                                      "id": 133924151492512,
                                                      "label": "if (let Some(v) < - inside )",
                                                      "successors": [
                                                        {
                                                          "id": 133924151624032,
                                                          "label": "insertBeforeToken(v, parts, index + 1, tokens)",
                                                          "successors": [
                                                            {
                                                              "id": 133924169463936
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "id": 133924169463936
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "id": 133924151491072
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "id": 133924169463936
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "findFirstInsideGrammar",
          "type": "Function",
          "blocks": [
            {
              "id": 133924169464608,
              "label": "",
              "successors": [
                {
                  "id": 133924151491600,
                  "label": "var grammar: ?Grammar = None",
                  "successors": [
                    {
                      "id": 133924151491648,
                      "label": "for (i in 0..token.patterns().size )",
                      "successors": [
                        {
                          "id": 133924151492368,
                          "label": "if (let Some(v) < - token.patterns()[i].inside() )",
                          "successors": [
                            {
                              "id": 133924151624272,
                              "label": "grammar = v",
                              "successors": [
                                {
                                  "id": 133924151491936,
                                  "label": "return grammar",
                                  "successors": []
                                }
                              ]
                            },
                            {
                              "id": 133924151491648
                            }
                          ]
                        },
                        {
                          "id": 133924151491936
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "insertTokensAt",
          "type": "Function",
          "blocks": [
            {
              "id": 133924169465568,
              "label": "",
              "successors": [
                {
                  "id": 133924151624080,
                  "label": "for (i in 0..tokens.size )",
                  "successors": [
                    {
                      "id": 133924151624512,
                      "label": "grammarTokens.insert(start + i, tokens[i])",
                      "successors": [
                        {
                          "id": 133924151624080
                        }
                      ]
                    },
                    {
                      "id": 133924169465616,
                      "label": "return",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "clone",
          "type": "Function",
          "blocks": [
            {
              "id": 133924169581040,
              "label": "",
              "successors": [
                {
                  "id": 133924151624560,
                  "label": "return CLONER.clone(grammar)",
                  "successors": []
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "clone",
          "type": "Function",
          "blocks": [
            {
              "id": 133924169581760,
              "label": "",
              "successors": [
                {
                  "id": 133924151624704,
                  "label": "return CLONER.clone(token)",
                  "successors": []
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "clone",
          "type": "Function",
          "blocks": [
            {
              "id": 133924169582480,
              "label": "",
              "successors": [
                {
                  "id": 133924151624848,
                  "label": "return CLONER.clone(pattern)",
                  "successors": []
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "extendGrammar",
          "type": "Function",
          "blocks": [
            {
              "id": 133924169583296,
              "label": "",
              "successors": [
                {
                  "id": 133924151625040,
                  "label": "if (let Some(v) < )",
                  "successors": [
                    {
                      "id": 133924151625424,
                      "label": "v.size",
                      "successors": [
                        {
                          "id": 133924151625136,
                          "label": "let size: Int64 = if (let Some(v) <- tokens) {\n            v.size\n        } else {\n            0\n        }",
                          "successors": [
                            {
                              "id": 133924151625184,
                              "label": "if (size == 0 )",
                              "successors": [
                                {
                                  "id": 133924151625856,
                                  "label": "return GrammarImpl(name, clone(grammar).tokens())",
                                  "successors": []
                                },
                                {
                                  "id": 133924151625664,
                                  "label": "let overrides: HashMap<String, Token> = HashMap<String, Token>(size)",
                                  "successors": [
                                    {
                                      "id": 133924151625808,
                                      "label": "if (let Some(v) < - tokens )",
                                      "successors": [
                                        {
                                          "id": 133924151626240,
                                          "label": "for (i in 0..v.size )",
                                          "successors": [
                                            {
                                              "id": 133924151626528,
                                              "label": "overrides.put(v[i].name(), v[i])",
                                              "successors": [
                                                {
                                                  "id": 133924151626240
                                                }
                                              ]
                                            },
                                            {
                                              "id": 133924151626048,
                                              "label": "let origins: ArrayList<Token> = grammar.tokens()",
                                              "successors": [
                                                {
                                                  "id": 133924151626336,
                                                  "label": "var out: ArrayList<Token> = ArrayList<Token>(origins.size)",
                                                  "successors": [
                                                    {
                                                      "id": 133924151626480,
                                                      "label": "var override: ?Token",
                                                      "successors": [
                                                        {
                                                          "id": 133924151626576,
                                                          "label": "for (i in 0..origins.size )",
                                                          "successors": [
                                                            {
                                                              "id": 133924151626912,
                                                              "label": "override = overrides",
                                                              "successors": [
                                                                {
                                                                  "id": 133924151626960,
                                                                  "label": ".get(origins[i].name())",
                                                                  "successors": [
                                                                    {
                                                                      "id": 133924151627008,
                                                                      "label": "if (let Some(v) < - override )",
                                                                      "successors": [
                                                                        {
                                                                          "id": 133924151627392,
                                                                          "label": "out.append(v)",
                                                                          "successors": [
                                                                            {
                                                                              "id": 133924151626576
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "id": 133924151627536,
                                                                          "label": "out.append(clone(origins[i]))",
                                                                          "successors": [
                                                                            {
                                                                              "id": 133924151626576
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "id": 133924151626720,
                                                              "label": "return GrammarImpl(name, out)",
                                                              "successors": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "id": 133924151626048
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": 133924151625568,
                      "label": "0",
                      "successors": [
                        {
                          "id": 133924151625136
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "extendGrammar",
          "type": "Function",
          "blocks": [
            {
              "id": 133924169584160,
              "label": "",
              "successors": [
                {
                  "id": 133924151627200,
                  "label": "if (let Some(v) < )",
                  "successors": [
                    {
                      "id": 133924151627872,
                      "label": "v.size",
                      "successors": [
                        {
                          "id": 133924151627584,
                          "label": "let size: Int64 = if (let Some(v) <- tokens) {\n            v.size\n        } else {\n            0\n        }",
                          "successors": [
                            {
                              "id": 133924151627632,
                              "label": "var overrides: HashMap<String, Token>",
                              "successors": [
                                {
                                  "id": 133924151627680,
                                  "label": "if (size == 0 )",
                                  "successors": [
                                    {
                                      "id": 133924151628352,
                                      "label": "overrides = HashMap<String, Token>()",
                                      "successors": [
                                        {
                                          "id": 133924151628112,
                                          "label": "let origins: ArrayList<Token> = grammar.tokens()",
                                          "successors": [
                                            {
                                              "id": 133924151628448,
                                              "label": "var out: ArrayList<Token> = ArrayList<Token>(origins.size)",
                                              "successors": [
                                                {
                                                  "id": 133924151628688,
                                                  "label": "var override: ?Token",
                                                  "successors": [
                                                    {
                                                      "id": 133924151628736,
                                                      "label": "for (i in 0..origins.size )",
                                                      "successors": [
                                                        {
                                                          "id": 133924151629408,
                                                          "label": "if (!filter.test(origins[i]) )",
                                                          "successors": [
                                                            {
                                                              "id": 133924151628736
                                                            },
                                                            {
                                                              "id": 133924151629792,
                                                              "label": "continue",
                                                              "successors": [
                                                                {
                                                                  "id": 133924151629552,
                                                                  "label": "override = overrides",
                                                                  "successors": [
                                                                    {
                                                                      "id": 133924151629600,
                                                                      "label": ".get(origins[i].name())",
                                                                      "successors": [
                                                                        {
                                                                          "id": 133924151629744,
                                                                          "label": "if (let Some(v) < - override )",
                                                                          "successors": [
                                                                            {
                                                                              "id": 133924151630176,
                                                                              "label": "out.append(v)",
                                                                              "successors": [
                                                                                {
                                                                                  "id": 133924151628736
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "id": 133924151630320,
                                                                              "label": "out.append(clone(origins[i]))",
                                                                              "successors": [
                                                                                {
                                                                                  "id": 133924151628736
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "id": 133924151629024,
                                                          "label": "return GrammarImpl(name, out)",
                                                          "successors": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "id": 133924151628496,
                                      "label": "overrides = HashMap<String, Token>(size)",
                                      "successors": [
                                        {
                                          "id": 133924151628544,
                                          "label": "if (let Some(v) < - tokens )",
                                          "successors": [
                                            {
                                              "id": 133924151628928,
                                              "label": "for (i in 0..v.size )",
                                              "successors": [
                                                {
                                                  "id": 133924151629216,
                                                  "label": "overrides.put(v[i].name(), v[i])",
                                                  "successors": [
                                                    {
                                                      "id": 133924151628928
                                                    }
                                                  ]
                                                },
                                                {
                                                  "id": 133924151628112
                                                }
                                              ]
                                            },
                                            {
                                              "id": 133924151628112
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": 133924151628016,
                      "label": "0",
                      "successors": [
                        {
                          "id": 133924151627584
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "require",
          "type": "Function",
          "blocks": [
            {
              "id": 133924169584928,
              "label": "",
              "successors": [
                {
                  "id": 133924151629984,
                  "label": "let requireGrammar: ?Grammar = prism.grammar(name)",
                  "successors": [
                    {
                      "id": 133924151630272,
                      "label": "if (requireGrammar.isNone() )",
                      "successors": [
                        {
                          "id": 133924151630704,
                          "label": "throw IllegalStateException(\"Unexpected state, requested language is not found: \" + name)",
                          "successors": [
                            {
                              "id": 133924151630464,
                              "label": "return requireGrammar.getOrThrow()",
                              "successors": []
                            }
                          ]
                        },
                        {
                          "id": 133924151630464
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    },
    {
      "name": "TokenFilter",
      "type": "Class",
      "blocks": [],
      "functions": [
        {
          "name": "test",
          "type": "Function",
          "blocks": [
            {
              "id": 133924169585984,
              "label": "",
              "successors": [
                {
                  "id": 133924151627104,
                  "label": "return;",
                  "successors": [
                    {
                      "id": 133924169586032,
                      "label": "return",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    }
  ]
}