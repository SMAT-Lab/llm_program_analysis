[
  "Edge 0: [Source] func edits(word: String): HashSet<String> { ... => [Target] case Some(fst) => let drop1 = right.dropFirst()\n\t\t\t\tmatch (drop1.first) {",
  "Edge 1: [Source] func edits(word: String): HashSet<String> { ... => [Target] case Some(snd) => result.append(left + snd + fst + drop1.dropFirst())",
  "Edge 2: [Source] func edits(word: String): HashSet<String> { ... => [Target] case _ => continue\n\t\t\t\t}",
  "Edge 3: [Source] func edits(word: String): HashSet<String> { ... => [Target] case _ => continue\n\t\t}\n\t\t// replace each character with another.\n\t\tfor (letter in alphabet) {\n\t\t\tresult.append(left + letter + right.dropFirst())\n\t\t}\n\t\t// insert rogue characters\n\t\tfor (letter in alphabet) {\n\t\t\tresult.append(left + letter + right)\n\t\t}\n\t}\n\treturn HashSet<String>(result)\n}"
]