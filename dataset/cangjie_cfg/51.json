[
  "Edge 0: [Source] public func map<U>(f: (T) -> U): Result<U, E> { ... => [Target] case Ok(v) => Ok(f(v))",
  "Edge 1: [Source] public func map<U>(f: (T) -> U): Result<U, E> { ... => [Target] case Err(e) => Err(e)\n        }\n    }",
  "Edge 2: [Source] public func mapErr<F>(f: (E) -> F): Result<T, F> { ... => [Target] case Ok(t) => Ok(t)",
  "Edge 3: [Source] public func mapErr<F>(f: (E) -> F): Result<T, F> { ... => [Target] case Err(e) => Err(f(e))\n        }\n    }",
  "Edge 4: [Source] public func andThen<U>(f: (T) -> Result<U, E>): Result<U, E> { ... => [Target] case Ok(v) => f(v)",
  "Edge 5: [Source] public func andThen<U>(f: (T) -> Result<U, E>): Result<U, E> { ... => [Target] case Err(e) => Err(e)\n        }\n    }"
]