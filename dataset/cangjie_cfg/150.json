{
  "name": "150.cj",
  "type": "File",
  "blocks": [],
  "functions": [],
  "classes": [
    {
      "name": "_DEFAULT_CANG_CLASS",
      "type": "Class",
      "blocks": [],
      "functions": [],
      "classes": []
    },
    {
      "name": "EAN13Reader",
      "type": "Class",
      "blocks": [],
      "functions": [
        {
          "name": "decodeMiddle",
          "type": "Function",
          "blocks": [
            {
              "id": 133924175005728,
              "label": "",
              "successors": [
                {
                  "id": 133924152022384,
                  "label": "let counters = decodeMiddleCounters",
                  "successors": [
                    {
                      "id": 133924152022480,
                      "label": "counters[0] = 0",
                      "successors": [
                        {
                          "id": 133924152022528,
                          "label": "counters[1] = 0",
                          "successors": [
                            {
                              "id": 133924152022576,
                              "label": "counters[2] = 0",
                              "successors": [
                                {
                                  "id": 133924152022624,
                                  "label": "counters[3] = 0",
                                  "successors": [
                                    {
                                      "id": 133924152022672,
                                      "label": "let end = row.size",
                                      "successors": [
                                        {
                                          "id": 133924152022720,
                                          "label": "var rowOffset = startRange[1]",
                                          "successors": [
                                            {
                                              "id": 133924152022768,
                                              "label": "var lgPatternFound = 0",
                                              "successors": [
                                                {
                                                  "id": 133924152022816,
                                                  "label": "for (x in 0..6 )",
                                                  "successors": [
                                                    {
                                                      "id": 133924152023152,
                                                      "label": "if (rowOffset >= end )",
                                                      "successors": [
                                                        {
                                                          "id": 133924152022912,
                                                          "label": "determineFirstDigit(resultString, lgPatternFound)",
                                                          "successors": [
                                                            {
                                                              "id": 133924152022960,
                                                              "label": "let middleRange = findGuardPattern(row, rowOffset, true, MIDDLE_PATTERN)",
                                                              "successors": [
                                                                {
                                                                  "id": 133924152023104,
                                                                  "label": "rowOffset = middleRange[1]",
                                                                  "successors": [
                                                                    {
                                                                      "id": 133924152023920,
                                                                      "label": "for (x in 0..6 )",
                                                                      "successors": [
                                                                        {
                                                                          "id": 133924152024400,
                                                                          "label": "if (rowOffset >= end )",
                                                                          "successors": [
                                                                            {
                                                                              "id": 133924152024208,
                                                                              "label": "rowOffset",
                                                                              "successors": [
                                                                                {
                                                                                  "id": 133924175005680,
                                                                                  "label": "return",
                                                                                  "successors": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "id": 133924152024544,
                                                                              "label": "let bestMatch = decodeDigit(row, counters, rowOffset, L_PATTERNS)",
                                                                              "successors": [
                                                                                {
                                                                                  "id": 133924152024592,
                                                                                  "label": "resultString.append(Char(UInt32('0') + UInt32(bestMatch)))",
                                                                                  "successors": [
                                                                                    {
                                                                                      "id": 133924152024736,
                                                                                      "label": "for (counter in counters )",
                                                                                      "successors": [
                                                                                        {
                                                                                          "id": 133924152025024,
                                                                                          "label": "rowOffset += counter",
                                                                                          "successors": [
                                                                                            {
                                                                                              "id": 133924152024736
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        {
                                                                                          "id": 133924152023920
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "id": 133924152024208
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "id": 133924152023296,
                                                          "label": "let bestMatch = decodeDigit(row, counters, rowOffset, L_AND_G_PATTERNS)",
                                                          "successors": [
                                                            {
                                                              "id": 133924152023344,
                                                              "label": "resultString.append(Char(UInt32('0') + UInt32(bestMatch % 10)))",
                                                              "successors": [
                                                                {
                                                                  "id": 133924152023536,
                                                                  "label": "for (counter in counters )",
                                                                  "successors": [
                                                                    {
                                                                      "id": 133924152023824,
                                                                      "label": "rowOffset += counter",
                                                                      "successors": [
                                                                        {
                                                                          "id": 133924152023536
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "id": 133924152023632,
                                                                      "label": "if (bestMatch >= 10 )",
                                                                      "successors": [
                                                                        {
                                                                          "id": 133924152024160,
                                                                          "label": "lgPatternFound |= 1 << (5 - x)",
                                                                          "successors": [
                                                                            {
                                                                              "id": 133924152022816
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "id": 133924152022816
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "id": 133924152022912
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "getBarcodeFormat",
          "type": "Function",
          "blocks": [
            {
              "id": 133924175006208,
              "label": "",
              "successors": [
                {
                  "id": 133924152024976,
                  "label": "return BarcodeFormat.EAN_13",
                  "successors": []
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "determineFirstDigit",
          "type": "Function",
          "blocks": [
            {
              "id": 133924175007024,
              "label": "",
              "successors": [
                {
                  "id": 133924152025168,
                  "label": "for (d in 0..10 )",
                  "successors": [
                    {
                      "id": 133924152025456,
                      "label": "if (lgPatternFound == FIRST_DIGIT_ENCODINGS[d] )",
                      "successors": [
                        {
                          "id": 133924152025792,
                          "label": "resultString.insert(0, Char(UInt32('0') + UInt32(d)))",
                          "successors": [
                            {
                              "id": 133924152025840,
                              "label": "return",
                              "successors": []
                            }
                          ]
                        },
                        {
                          "id": 133924152025168
                        }
                      ]
                    },
                    {
                      "id": 133924152025264,
                      "label": "throw NotFoundException()",
                      "successors": [
                        {
                          "id": 133924175007072,
                          "label": "return",
                          "successors": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    },
    {
      "name": "EAN13Writer",
      "type": "Class",
      "blocks": [],
      "functions": [
        {
          "name": "getSupportedWriteFormats",
          "type": "Function",
          "blocks": [
            {
              "id": 133924175008224,
              "label": "",
              "successors": [
                {
                  "id": 133924152025600,
                  "label": "HashSet<BarcodeFormat>([BarcodeFormat.EAN_13])",
                  "successors": [
                    {
                      "id": 133924175008272,
                      "label": "return",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "encode",
          "type": "Function",
          "blocks": [
            {
              "id": 133924175008848,
              "label": "",
              "successors": [
                {
                  "id": 133924152025936,
                  "label": "var contents = oContents",
                  "successors": [
                    {
                      "id": 133924152025984,
                      "label": "let length = contents.size",
                      "successors": [
                        {
                          "id": 133924152026032,
                          "label": "match (length )",
                          "successors": [
                            {
                              "id": 133924152026512,
                              "label": "let check = try {\n                    UPCEANReader.getStandardUPCEANChecksum(contents)\n                } catch (e: FormatException) {\n                    throw IllegalArgumentException(e.toString())\n                }",
                              "successors": [
                                {
                                  "id": 133924152026560,
                                  "label": "contents = \"${contents}${check}\"",
                                  "successors": [
                                    {
                                      "id": 133924152026176,
                                      "label": "checkNumeric(contents)",
                                      "successors": [
                                        {
                                          "id": 133924152027952,
                                          "label": "let firstDigit = charDigit(contents.charAt(0), 10)",
                                          "successors": [
                                            {
                                              "id": 133924152028000,
                                              "label": "let parities = EAN13Reader.FIRST_DIGIT_ENCODINGS[firstDigit]",
                                              "successors": [
                                                {
                                                  "id": 133924152028048,
                                                  "label": "let result = Array<Bool>(CODE_WIDTH, item: false)",
                                                  "successors": [
                                                    {
                                                      "id": 133924152028096,
                                                      "label": "var pos = appendPattern(result, 0, UPCEANReader.START_END_PATTERN, true)",
                                                      "successors": [
                                                        {
                                                          "id": 133924152028144,
                                                          "label": "for (i in 1..7 )",
                                                          "successors": [
                                                            {
                                                              "id": 133924152028480,
                                                              "label": "var digit = charDigit(contents.charAt(i), 10)",
                                                              "successors": [
                                                                {
                                                                  "id": 133924152028528,
                                                                  "label": "if ((parities >> (6 - i) & 1) == 1 )",
                                                                  "successors": [
                                                                    {
                                                                      "id": 133924152028912,
                                                                      "label": "digit += 10",
                                                                      "successors": [
                                                                        {
                                                                          "id": 133924152028672,
                                                                          "label": "pos += appendPattern(result, pos, UPCEANReader.L_AND_G_PATTERNS[digit], false)",
                                                                          "successors": [
                                                                            {
                                                                              "id": 133924152028144
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "id": 133924152028672
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "id": 133924152028288,
                                                              "label": "pos += appendPattern(result, pos, UPCEANReader.MIDDLE_PATTERN, false)",
                                                              "successors": [
                                                                {
                                                                  "id": 133924152028432,
                                                                  "label": "for (i in 7..13 )",
                                                                  "successors": [
                                                                    {
                                                                      "id": 133924152029104,
                                                                      "label": "let digit = charDigit(contents.charAt(i), 10)",
                                                                      "successors": [
                                                                        {
                                                                          "id": 133924152029152,
                                                                          "label": "pos += appendPattern(result, pos, UPCEANReader.L_PATTERNS[digit], true)",
                                                                          "successors": [
                                                                            {
                                                                              "id": 133924152028432
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "id": 133924152028864,
                                                                      "label": "appendPattern(result, pos, UPCEANReader.START_END_PATTERN, true)",
                                                                      "successors": [
                                                                        {
                                                                          "id": 133924152029056,
                                                                          "label": "result",
                                                                          "successors": [
                                                                            {
                                                                              "id": 133924175008896,
                                                                              "label": "return",
                                                                              "successors": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "id": 133924152026848,
                              "label": "try",
                              "successors": [
                                {
                                  "id": 133924152027136,
                                  "label": "if (!UPCEANReader.checkStandardUPCEANChecksum(contents) )",
                                  "successors": [
                                    {
                                      "id": 133924152027568,
                                      "label": "throw IllegalArgumentException(\"Contents do not pass checksum\")",
                                      "successors": [
                                        {
                                          "id": 133924152026176
                                        }
                                      ]
                                    },
                                    {
                                      "id": 133924152026176
                                    }
                                  ]
                                },
                                {
                                  "id": 133924152027280,
                                  "label": "catch( ( _: FormatException )",
                                  "successors": [
                                    {
                                      "id": 133924152027664,
                                      "label": "throw IllegalArgumentException(\"Illegal contents\")",
                                      "successors": [
                                        {
                                          "id": 133924152027088,
                                          "label": "",
                                          "successors": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "id": 133924152027904,
                              "label": "throw IllegalArgumentException(\"Requested contents should be 12 or 13 digits long, but got ${length}\")",
                              "successors": [
                                {
                                  "id": 133924152026176
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    }
  ]
}