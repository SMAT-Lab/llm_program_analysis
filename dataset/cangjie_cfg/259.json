{
  "name": "259.cj",
  "type": "File",
  "blocks": [],
  "functions": [],
  "classes": [
    {
      "name": "_DEFAULT_CANG_CLASS",
      "type": "Class",
      "blocks": [],
      "functions": [],
      "classes": []
    },
    {
      "name": "SentinelManager",
      "type": "Class",
      "blocks": [],
      "functions": [
        {
          "name": "getSentinelManager",
          "type": "Function",
          "blocks": [
            {
              "id": 133924170556768,
              "label": "",
              "successors": [
                {
                  "id": 133924152572080,
                  "label": "synchronized(initManagerLock) {\n            if (let Some(sentinelManager) <- sentinelManagers.get(sentinelConfig)) {\n                if (sentinelManager.retain()) {\n                    return sentinelManager\n                } else {\n                    sentinelManagers.remove(sentinelConfig)\n                }\n            }\n            let sentinelManager = SentinelManager(sentinelConfig)\n            sentinelManager.initialize()\n            sentinelManagers.put(sentinelConfig, sentinelManager)\n            // 新创建SentinelManager的也需要调用retain，确保引用计数正确\n            sentinelManager.retain()\n            return sentinelManager\n        }",
                  "successors": [
                    {
                      "id": 133924170556816,
                      "label": "return",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "constructor",
          "type": "Function",
          "blocks": [
            {
              "id": 133924170557440,
              "label": "",
              "successors": [
                {
                  "id": 133924152572224,
                  "label": "try",
                  "successors": [
                    {
                      "id": 133924152572560,
                      "label": "this.id = idGenerator.fetchAdd(1)",
                      "successors": [
                        {
                          "id": 133924152572608,
                          "label": "this.sentinelConfig = sentinelConfig",
                          "successors": [
                            {
                              "id": 133924152572656,
                              "label": "this.threadPool = RedisClientBuilder.buildThreadPool(sentinelConfig)",
                              "successors": [
                                {
                                  "id": 133924152572704,
                                  "label": "let master = getMaster(sentinelConfig, threadPool, sentinelSubscribers)",
                                  "successors": [
                                    {
                                      "id": 133924152572752,
                                      "label": "currentMaster = AtomicReference<HostAndPort>(master)",
                                      "successors": [
                                        {
                                          "id": 133924170557488,
                                          "label": "return",
                                          "successors": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": 133924152572512,
                      "label": "catch( ( ex: RedisException )",
                      "successors": [
                        {
                          "id": 133924152572944,
                          "label": "destorySentinels(sentinelSubscribers, sentinelListeners)",
                          "successors": [
                            {
                              "id": 133924152572992,
                              "label": "throw ex",
                              "successors": [
                                {
                                  "id": 133924152572368,
                                  "label": "",
                                  "successors": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "getSentinelConfig",
          "type": "Function",
          "blocks": [
            {
              "id": 133924170558112,
              "label": "",
              "successors": [
                {
                  "id": 133924152573088,
                  "label": "return this.sentinelConfig",
                  "successors": []
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "getThreadPool",
          "type": "Function",
          "blocks": [
            {
              "id": 133924170558784,
              "label": "",
              "successors": [
                {
                  "id": 133924152573232,
                  "label": "return this.threadPool",
                  "successors": []
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "getMasterName",
          "type": "Function",
          "blocks": [
            {
              "id": 133924170559456,
              "label": "",
              "successors": [
                {
                  "id": 133924152573376,
                  "label": "return sentinelConfig.masterName",
                  "successors": []
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "getCurrentMaster",
          "type": "Function",
          "blocks": [
            {
              "id": 133924170560032,
              "label": "",
              "successors": [
                {
                  "id": 133924152573520,
                  "label": "return currentMaster.load()",
                  "successors": []
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "checkOpen",
          "type": "Function",
          "blocks": [
            {
              "id": 133924170560608,
              "label": "",
              "successors": [
                {
                  "id": 133924152573664,
                  "label": "if (closed.load() )",
                  "successors": [
                    {
                      "id": 133924152688800,
                      "label": "throw RedisException(\"SentinelManager ${sentinelConfig.masterName} is already closed\")",
                      "successors": [
                        {
                          "id": 133924170560656,
                          "label": "return",
                          "successors": []
                        }
                      ]
                    },
                    {
                      "id": 133924170560656
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "addMasterProvider",
          "type": "Function",
          "blocks": [
            {
              "id": 133924170561520,
              "label": "",
              "successors": [
                {
                  "id": 133924152573856,
                  "label": "checkOpen()",
                  "successors": [
                    {
                      "id": 133924152688848,
                      "label": "synchronized(sentinelManagerMutex) {\n            if (!masterProviders.contains(masterProvider)) {\n                this.masterProviders.append(masterProvider)\n            }\n        }",
                      "successors": [
                        {
                          "id": 133924152688896,
                          "label": "if (logger.isDebugEnabled() )",
                          "successors": [
                            {
                              "id": 133924152689232,
                              "label": "logger.debug(\"SentinelManager::addMasterProvider, add ${masterProvider} to ${getSentinelManagerStatus()}\")",
                              "successors": [
                                {
                                  "id": 133924170561568,
                                  "label": "return",
                                  "successors": []
                                }
                              ]
                            },
                            {
                              "id": 133924170561568
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "removeMasterProvider",
          "type": "Function",
          "blocks": [
            {
              "id": 133924170562384,
              "label": "",
              "successors": [
                {
                  "id": 133924152689184,
                  "label": "func checkEquals(item: SentinelMasterProvider) {\n            if (refEq(masterProvider, item) || masterProvider == item) {\n                if (refCount.load() > 0) {\n                    refCount.fetchSub(1)\n                }\n                return true\n            }\n            return false\n        }",
                  "successors": [
                    {
                      "id": 133924152689280,
                      "label": "synchronized(sentinelManagerMutex) {\n            masterProviders.removeIf(checkEquals)\n            if (logger.isDebugEnabled()) {\n                logger.debug(\n                    \"SentinelManager::removeMasterProvider, remove ${masterProvider} from ${getSentinelManagerStatus()}\"\n                )\n            }\n            if (refCount.load() == 0 && masterProviders.isEmpty()) {\n                if (closeTaskRef.isNone()) {\n                    let closeTask = CloseSentinelManagerTask(this)\n                    closeTaskRef = closeTask\n                    if (logger.isDebugEnabled()) {\n                        logger.debug(\n                            \"SentinelManager::removeMasterProvider, create CloseSentinelManagerTask for ${getSentinelManagerStatus()}\"\n                        )\n                    }\n                    spawn {\n                        Thread.currentThread.name = \"SentinelManager-Destory\"\n                        closeTask.run()\n                    }\n                }\n            }\n        }",
                      "successors": [
                        {
                          "id": 133924170562432,
                          "label": "return",
                          "successors": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "retain",
          "type": "Function",
          "blocks": [
            {
              "id": 133924170562960,
              "label": "",
              "successors": [
                {
                  "id": 133924152689424,
                  "label": "synchronized(sentinelManagerMutex) {\n            if (!closed.load()) {\n                refCount.fetchAdd(1)\n                return true\n            }\n        }",
                  "successors": [
                    {
                      "id": 133924152689472,
                      "label": "return false",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "initialize",
          "type": "Function",
          "blocks": [
            {
              "id": 133924170711344,
              "label": "",
              "successors": [
                {
                  "id": 133924152689616,
                  "label": "if (initialized.compareAndSwap(false, true) )",
                  "successors": [
                    {
                      "id": 133924152689952,
                      "label": "if (logger.isDebugEnabled() )",
                      "successors": [
                        {
                          "id": 133924152690288,
                          "label": "logger.debug(\n                    \"SentinelManager::initialize, initialize SentinelManager{id: ${id}, masterName: ${sentinelConfig.masterName}}\"\n                )",
                          "successors": [
                            {
                              "id": 133924152690048,
                              "label": "initListeners()",
                              "successors": [
                                {
                                  "id": 133924170711392,
                                  "label": "return",
                                  "successors": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "id": 133924152690048
                        }
                      ]
                    },
                    {
                      "id": 133924170711392
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "initListeners",
          "type": "Function",
          "blocks": [
            {
              "id": 133924170712064,
              "label": "",
              "successors": [
                {
                  "id": 133924152689904,
                  "label": "for (sentinel in sentinelConfig.getSentinelHostAndPorts() )",
                  "successors": [
                    {
                      "id": 133924152690528,
                      "label": "let subscriber = getOrBuildSubscriber(sentinel, sentinelSubscribers, sentinelConfig, threadPool)",
                      "successors": [
                        {
                          "id": 133924152690576,
                          "label": "let masterName = sentinelConfig.masterName",
                          "successors": [
                            {
                              "id": 133924152690624,
                              "label": "let listener = SentinelListener(this, sentinel, subscriber)",
                              "successors": [
                                {
                                  "id": 133924152690672,
                                  "label": "sentinelListeners.append(listener)",
                                  "successors": [
                                    {
                                      "id": 133924152690720,
                                      "label": "spawn {\n                Thread.currentThread.name = \"Sentinel-${sentinel}-of-${masterName}\"\n                listener.run()\n            }",
                                      "successors": [
                                        {
                                          "id": 133924152689904
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": 133924152690240,
                      "label": "sentinelSubscribers.clear()",
                      "successors": [
                        {
                          "id": 133924170712112,
                          "label": "return",
                          "successors": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "switchMaster",
          "type": "Function",
          "blocks": [
            {
              "id": 133924170713120,
              "label": "",
              "successors": [
                {
                  "id": 133924152690816,
                  "label": "checkOpen()",
                  "successors": [
                    {
                      "id": 133924152690864,
                      "label": "let oldMaster = currentMaster.load()",
                      "successors": [
                        {
                          "id": 133924152690912,
                          "label": "var needSwitch = false",
                          "successors": [
                            {
                              "id": 133924152690960,
                              "label": "if (newMaster != oldMaster )",
                              "successors": [
                                {
                                  "id": 133924152691296,
                                  "label": "if (currentMaster.compareAndSwap(oldMaster, newMaster) )",
                                  "successors": [
                                    {
                                      "id": 133924152691632,
                                      "label": "needSwitch = true",
                                      "successors": [
                                        {
                                          "id": 133924152691680,
                                          "label": "logger.info(\"Switch to new master at ${newMaster}\")",
                                          "successors": [
                                            {
                                              "id": 133924152691056,
                                              "label": "if (needSwitch )",
                                              "successors": [
                                                {
                                                  "id": 133924152691776,
                                                  "label": "let switchMasterProviders = ArrayList<SentinelMasterProvider>()",
                                                  "successors": [
                                                    {
                                                      "id": 133924152691824,
                                                      "label": "synchronized(sentinelManagerMutex) {\n                switchMasterProviders.appendAll(masterProviders)\n            }",
                                                      "successors": [
                                                        {
                                                          "id": 133924152691872,
                                                          "label": "for (masterProvider in switchMasterProviders )",
                                                          "successors": [
                                                            {
                                                              "id": 133924152692160,
                                                              "label": "masterProvider.switchMaster(newMaster)",
                                                              "successors": [
                                                                {
                                                                  "id": 133924152691872
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "id": 133924170713168,
                                                              "label": "return",
                                                              "successors": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "id": 133924170713168
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "id": 133924152691056
                                    }
                                  ]
                                },
                                {
                                  "id": 133924152691056
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "buildMasterEndPoint",
          "type": "Function",
          "blocks": [
            {
              "id": 133924170713744,
              "label": "",
              "successors": [
                {
                  "id": 133924152691392,
                  "label": "let config = ClientEndpointConfig()",
                  "successors": [
                    {
                      "id": 133924152691728,
                      "label": "let hostAndPort = currentMaster.load()",
                      "successors": [
                        {
                          "id": 133924152691968,
                          "label": "config.host = hostAndPort.host",
                          "successors": [
                            {
                              "id": 133924152692112,
                              "label": "config.port = hostAndPort.port",
                              "successors": [
                                {
                                  "id": 133924152692208,
                                  "label": "sentinelConfig.configTcpEndpointOptions(config)",
                                  "successors": [
                                    {
                                      "id": 133924152692256,
                                      "label": "let tcpEndpoint = ClientTcpEndpoint(config, threadPool)",
                                      "successors": [
                                        {
                                          "id": 133924152692304,
                                          "label": "if (!isSubscribedMode )",
                                          "successors": [
                                            {
                                              "id": 133924152692688,
                                              "label": "RedisClientBuilder.configEndpoint(tcpEndpoint)",
                                              "successors": [
                                                {
                                                  "id": 133924152692400,
                                                  "label": "return tcpEndpoint",
                                                  "successors": []
                                                }
                                              ]
                                            },
                                            {
                                              "id": 133924152692832,
                                              "label": "RedisSubscriberBuilder.configEndpoint(tcpEndpoint, RedisSubscriberHandler.getInstance())",
                                              "successors": [
                                                {
                                                  "id": 133924152692400
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "getSentinelManagerStatus",
          "type": "Function",
          "blocks": [
            {
              "id": 133924170714320,
              "label": "",
              "successors": [
                {
                  "id": 133924152692784,
                  "label": "return \"SentinelManager{id: ${id}, masterName: ${sentinelConfig.masterName}, reference count: ${refCount.load()}}\"",
                  "successors": []
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "isClosed",
          "type": "Function",
          "blocks": [
            {
              "id": 133924170714992,
              "label": "",
              "successors": [
                {
                  "id": 133924152692976,
                  "label": "return closed.load()",
                  "successors": []
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "close",
          "type": "Function",
          "blocks": [
            {
              "id": 133924170715664,
              "label": "",
              "successors": [
                {
                  "id": 133924152693168,
                  "label": "var realClose = false",
                  "successors": [
                    {
                      "id": 133924152693216,
                      "label": "synchronized(sentinelManagerMutex) {\n            closeTaskRef = None\n            if (refCount.load() == 0 && masterProviders.isEmpty()) {\n                // 确保不被SentinelMasterProvider引用时，才关闭\n                if (closed.compareAndSwap(false, true)) {\n                    realClose = true\n                    if (logger.isDebugEnabled()) {\n                        logger.debug(\"SentinelManager::close, close ${getSentinelManagerStatus()}\")\n                    }\n                    destorySentinels(sentinelSubscribers, sentinelListeners)\n                }\n            } else {\n                if (logger.isDebugEnabled()) {\n                    logger.debug(\n                        \"SentinelManager::close, abandon CloseSentinelManagerTask, because the ${getSentinelManagerStatus()} is reused\"\n                    )\n                }\n            }\n        }",
                      "successors": [
                        {
                          "id": 133924152693264,
                          "label": "if (realClose )",
                          "successors": [
                            {
                              "id": 133924152693648,
                              "label": "synchronized(initManagerLock) {\n                // 从缓存中移除\n                sentinelManagers.remove(sentinelConfig)\n            }",
                              "successors": [
                                {
                                  "id": 133924170715712,
                                  "label": "return",
                                  "successors": []
                                }
                              ]
                            },
                            {
                              "id": 133924170715712
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "getMaster",
          "type": "Function",
          "blocks": [
            {
              "id": 133924170716480,
              "label": "",
              "successors": [
                {
                  "id": 133924152693696,
                  "label": "let hostAndPorts = sentinelConfig.getSentinelHostAndPorts()",
                  "successors": [
                    {
                      "id": 133924152693744,
                      "label": "let masterName = sentinelConfig.masterName",
                      "successors": [
                        {
                          "id": 133924152693792,
                          "label": "var sentinelAvailable = false",
                          "successors": [
                            {
                              "id": 133924152693840,
                              "label": "for (hostAndPort in hostAndPorts )",
                              "successors": [
                                {
                                  "id": 133924152694128,
                                  "label": "try",
                                  "successors": [
                                    {
                                      "id": 133924152694464,
                                      "label": "let subscriber = SentinelRedisClientBuilder.buildSentinelSubscriber(\n                    hostAndPort,\n                    sentinelConfig,\n                    threadPool\n                )",
                                      "successors": [
                                        {
                                          "id": 133924152694512,
                                          "label": "let command = RedisCommandBuilder.sentinelGetMasterAddrByName(masterName)",
                                          "successors": [
                                            {
                                              "id": 133924152694560,
                                              "label": "let getMasterResponse = subscriber.executeCommand<(String, String)>(command)",
                                              "successors": [
                                                {
                                                  "id": 133924152694608,
                                                  "label": "sentinelAvailable = true",
                                                  "successors": [
                                                    {
                                                      "id": 133924152694656,
                                                      "label": "sentinelSubscribers.put(hostAndPort, subscriber)",
                                                      "successors": [
                                                        {
                                                          "id": 133924152694704,
                                                          "label": "if (let Some((address, port)) < - getMasterResponse )",
                                                          "successors": [
                                                            {
                                                              "id": 133924152695088,
                                                              "label": "let master = HostAndPort(address, UInt16.parse(port))",
                                                              "successors": [
                                                                {
                                                                  "id": 133924152695136,
                                                                  "label": "return master",
                                                                  "successors": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "id": 133924152693840
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "id": 133924152694416,
                                      "label": "catch( ( ex: Exception )",
                                      "successors": [
                                        {
                                          "id": 133924152695184,
                                          "label": "logger.error(\"Could not get master address from ${hostAndPort}\", ex)",
                                          "successors": [
                                            {
                                              "id": 133924152694272,
                                              "label": "",
                                              "successors": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "id": 133924152693936,
                                  "label": "if (sentinelAvailable )",
                                  "successors": [
                                    {
                                      "id": 133924152695472,
                                      "label": "throw RedisException(\"Can connect to sentinel, but ${masterName} seems to be not monitored\")",
                                      "successors": [
                                        {
                                          "id": 133924170716528,
                                          "label": "return",
                                          "successors": []
                                        }
                                      ]
                                    },
                                    {
                                      "id": 133924152695616,
                                      "label": "throw RedisException(\"All sentinels down, cannot determine where ${masterName} is running\")",
                                      "successors": [
                                        {
                                          "id": 133924170716528
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "destorySentinels",
          "type": "Function",
          "blocks": [
            {
              "id": 133924170717392,
              "label": "",
              "successors": [
                {
                  "id": 133924152695232,
                  "label": "for (listenter in sentinelListeners )",
                  "successors": [
                    {
                      "id": 133924152695808,
                      "label": "listenter.stop()",
                      "successors": [
                        {
                          "id": 133924152695232
                        }
                      ]
                    },
                    {
                      "id": 133924152695568,
                      "label": "sentinelListeners.clear()",
                      "successors": [
                        {
                          "id": 133924152695760,
                          "label": "for (subscriber in sentinelSubscribers.values() )",
                          "successors": [
                            {
                              "id": 133924152696096,
                              "label": "subscriber.close()",
                              "successors": [
                                {
                                  "id": 133924152695760
                                }
                              ]
                            },
                            {
                              "id": 133924152695904,
                              "label": "sentinelSubscribers.clear()",
                              "successors": [
                                {
                                  "id": 133924170717440,
                                  "label": "return",
                                  "successors": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "getOrBuildSubscriber",
          "type": "Function",
          "blocks": [
            {
              "id": 133924170718256,
              "label": "",
              "successors": [
                {
                  "id": 133924152696192,
                  "label": "if (let Some(subscriber) < - subscribers.get(sentinel) )",
                  "successors": [
                    {
                      "id": 133924152696576,
                      "label": "return subscriber",
                      "successors": []
                    },
                    {
                      "id": 133924152696720,
                      "label": "return SentinelRedisClientBuilder.buildSentinelSubscriber(sentinel, sentinelConfig, threadPool)",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    },
    {
      "name": "CloseSentinelManagerTask",
      "type": "Class",
      "blocks": [],
      "functions": [
        {
          "name": "constructor",
          "type": "Function",
          "blocks": [
            {
              "id": 133924170719360,
              "label": "",
              "successors": [
                {
                  "id": 133924152696384,
                  "label": "this.sentinelManager = sentinelManager",
                  "successors": [
                    {
                      "id": 133924170719408,
                      "label": "return",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "run",
          "type": "Function",
          "blocks": [
            {
              "id": 133924170719936,
              "label": "",
              "successors": [
                {
                  "id": 133924152696816,
                  "label": "try",
                  "successors": [
                    {
                      "id": 133924152697104,
                      "label": "let sleepDuration = sentinelManager.getSentinelConfig().closeSentinelManagerDelayDuration",
                      "successors": [
                        {
                          "id": 133924152697152,
                          "label": "if (sleepDuration > Duration.Zero )",
                          "successors": [
                            {
                              "id": 133924152697536,
                              "label": "sleep(sleepDuration)",
                              "successors": [
                                {
                                  "id": 133924152697296,
                                  "label": "sentinelManager.close()",
                                  "successors": [
                                    {
                                      "id": 133924170719984,
                                      "label": "return",
                                      "successors": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "id": 133924152697296
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": 133924152697344,
                      "label": "catch( ( ex: Exception )",
                      "successors": [
                        {
                          "id": 133924152697680,
                          "label": "SentinelManager.logger.warn(\n                \"Failure to close SentinelManager ${sentinelManager.getMasterName()}\",\n                ex\n            )",
                          "successors": [
                            {
                              "id": 133924152697056,
                              "label": "",
                              "successors": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    },
    {
      "name": "SentinelListener",
      "type": "Class",
      "blocks": [],
      "functions": [
        {
          "name": "constructor",
          "type": "Function",
          "blocks": [
            {
              "id": 133924170721184,
              "label": "",
              "successors": [
                {
                  "id": 133924152697776,
                  "label": "this.sentinelManager = sentinelManager",
                  "successors": [
                    {
                      "id": 133924152697824,
                      "label": "this.sentinel = sentinel",
                      "successors": [
                        {
                          "id": 133924152697872,
                          "label": "this.redisSubscriberRef = AtomicOptionReference<RedisSubscriber>(redisSubscriber)",
                          "successors": [
                            {
                              "id": 133924152697920,
                              "label": "this.sentinelConfig = sentinelManager.getSentinelConfig()",
                              "successors": [
                                {
                                  "id": 133924152697968,
                                  "label": "let masterName = sentinelConfig.masterName",
                                  "successors": [
                                    {
                                      "id": 133924152698016,
                                      "label": "this.switchMasterListener = SwitchMasterListener(masterName, sentinel, sentinelManager)",
                                      "successors": [
                                        {
                                          "id": 133924152698064,
                                          "label": "redisSubscriber.setSubscriberListener(switchMasterListener)",
                                          "successors": [
                                            {
                                              "id": 133924170721232,
                                              "label": "return",
                                              "successors": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "run",
          "type": "Function",
          "blocks": [
            {
              "id": 133924170722240,
              "label": "",
              "successors": [
                {
                  "id": 133924152698208,
                  "label": "while (running.load() )",
                  "successors": [
                    {
                      "id": 133924152698496,
                      "label": "if (let Some(redisSubscriber) < - redisSubscriberRef.load() )",
                      "successors": [
                        {
                          "id": 133924152698832,
                          "label": "try",
                          "successors": [
                            {
                              "id": 133924152699120,
                              "label": "redisSubscriber.blockSubscribe(\"+switch-master\")",
                              "successors": [
                                {
                                  "id": 133924152699312,
                                  "label": "finally",
                                  "successors": [
                                    {
                                      "id": 133924152699696,
                                      "label": "redisSubscriber.close()",
                                      "successors": [
                                        {
                                          "id": 133924152698592,
                                          "label": "if (running.load() )",
                                          "successors": [
                                            {
                                              "id": 133924152699840,
                                              "label": "try",
                                              "successors": [
                                                {
                                                  "id": 133924152700128,
                                                  "label": "let redisSubscriber = SentinelRedisClientBuilder.buildSentinelSubscriber(\n                        sentinel,\n                        sentinelManager.getSentinelConfig(),\n                        sentinelManager.getThreadPool()\n                    )",
                                                  "successors": [
                                                    {
                                                      "id": 133924152700176,
                                                      "label": "redisSubscriber.setSubscriberListener(switchMasterListener)",
                                                      "successors": [
                                                        {
                                                          "id": 133924152700224,
                                                          "label": "let command = RedisCommandBuilder.sentinelGetMasterAddrByName(sentinelConfig.masterName)",
                                                          "successors": [
                                                            {
                                                              "id": 133924152700272,
                                                              "label": "let getMasterResponse = redisSubscriber.executeCommand<(String, String)>(command)",
                                                              "successors": [
                                                                {
                                                                  "id": 133924152700320,
                                                                  "label": "if (let Some((address, port)) < - getMasterResponse )",
                                                                  "successors": [
                                                                    {
                                                                      "id": 133924152700752,
                                                                      "label": "let master = HostAndPort(address, UInt16.parse(port))",
                                                                      "successors": [
                                                                        {
                                                                          "id": 133924152700800,
                                                                          "label": "sentinelManager.switchMaster(master)",
                                                                          "successors": [
                                                                            {
                                                                              "id": 133924152700464,
                                                                              "label": "redisSubscriberRef.store(redisSubscriber)",
                                                                              "successors": [
                                                                                {
                                                                                  "id": 133924152698208
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "id": 133924152700464
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "id": 133924152700512,
                                                  "label": "catch( ( ex: Exception )",
                                                  "successors": [
                                                    {
                                                      "id": 133924152700944,
                                                      "label": "SentinelManager.logger.warn(\"Could not get master address from ${sentinel}\", ex)",
                                                      "successors": [
                                                        {
                                                          "id": 133924152700992,
                                                          "label": "sleep(sentinelConfig.subscribeMasterRetryWaitTime)",
                                                          "successors": [
                                                            {
                                                              "id": 133924152700080,
                                                              "label": "",
                                                              "successors": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "id": 133924152698208
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "id": 133924152699168,
                              "label": "catch( ( ex: Exception )",
                              "successors": [
                                {
                                  "id": 133924152699360,
                                  "label": "SentinelManager.logger.warn(\"Could not subscriber +switch-master channel from ${sentinel}\")",
                                  "successors": [
                                    {
                                      "id": 133924152699408,
                                      "label": "redisSubscriberRef.store(None)",
                                      "successors": [
                                        {
                                          "id": 133924152699072,
                                          "label": "",
                                          "successors": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "id": 133924152699696
                            }
                          ]
                        },
                        {
                          "id": 133924152698592
                        }
                      ]
                    },
                    {
                      "id": 133924170722288,
                      "label": "return",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "stop",
          "type": "Function",
          "blocks": [
            {
              "id": 133924170723008,
              "label": "",
              "successors": [
                {
                  "id": 133924152698784,
                  "label": "if (running.compareAndSwap(true, false) )",
                  "successors": [
                    {
                      "id": 133924152701184,
                      "label": "if (let Some(redisSubscriber) < - redisSubscriberRef.load() )",
                      "successors": [
                        {
                          "id": 133924152701520,
                          "label": "redisSubscriber.close()",
                          "successors": [
                            {
                              "id": 133924152701568,
                              "label": "redisSubscriberRef.store(None)",
                              "successors": [
                                {
                                  "id": 133924170723056,
                                  "label": "return",
                                  "successors": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "id": 133924170723056
                        }
                      ]
                    },
                    {
                      "id": 133924170723056
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    },
    {
      "name": "SwitchMasterListener",
      "type": "Class",
      "blocks": [],
      "functions": [
        {
          "name": "constructor",
          "type": "Function",
          "blocks": [
            {
              "id": 133924170724352,
              "label": "",
              "successors": [
                {
                  "id": 133924152701136,
                  "label": "this.masterName = masterName",
                  "successors": [
                    {
                      "id": 133924152701280,
                      "label": "this.sentinel = sentinel",
                      "successors": [
                        {
                          "id": 133924152701328,
                          "label": "this.sentinelManager = sentinelManager",
                          "successors": [
                            {
                              "id": 133924170724400,
                              "label": "return",
                              "successors": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "onMessage",
          "type": "Function",
          "blocks": [
            {
              "id": 133924170725024,
              "label": "",
              "successors": [
                {
                  "id": 133924152701712,
                  "label": "if (logger.isDebugEnabled() )",
                  "successors": [
                    {
                      "id": 133924152702096,
                      "label": "logger.debug(\"Sentinel ${sentinel} published: ${message}\")",
                      "successors": [
                        {
                          "id": 133924152701856,
                          "label": "let switchMasterMsg = message.split(\" \")",
                          "successors": [
                            {
                              "id": 133924152701904,
                              "label": "if (switchMasterMsg.size > 3 )",
                              "successors": [
                                {
                                  "id": 133924152702432,
                                  "label": "if (masterName == switchMasterMsg[0] )",
                                  "successors": [
                                    {
                                      "id": 133924152702816,
                                      "label": "let newMaster = HostAndPort.toHostAndPort(switchMasterMsg[3], switchMasterMsg[4])",
                                      "successors": [
                                        {
                                          "id": 133924152702864,
                                          "label": "sentinelManager.switchMaster(newMaster)",
                                          "successors": [
                                            {
                                              "id": 133924170725072,
                                              "label": "return",
                                              "successors": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "id": 133924152703008,
                                      "label": "if (logger.isDebugEnabled() )",
                                      "successors": [
                                        {
                                          "id": 133924152703392,
                                          "label": "logger.debug(\n                        \"Ignoring message on +switch-master for master ${switchMasterMsg[0]}. Our master is ${masterName}\"\n                    )",
                                          "successors": [
                                            {
                                              "id": 133924170725072
                                            }
                                          ]
                                        },
                                        {
                                          "id": 133924170725072
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "id": 133924152702624,
                                  "label": "if (logger.isDebugEnabled() )",
                                  "successors": [
                                    {
                                      "id": 133924152703584,
                                      "label": "logger.debug(\n                    \"Invalid message received on sentinel ${sentinel} on channel +switch-master: ${masterName}\")",
                                      "successors": [
                                        {
                                          "id": 133924170725072
                                        }
                                      ]
                                    },
                                    {
                                      "id": 133924170725072
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": 133924152701856
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "onPMessage",
          "type": "Function",
          "blocks": [
            {
              "id": 133924170725744,
              "label": "",
              "successors": [
                {
                  "id": 133924152700896,
                  "label": "return;",
                  "successors": [
                    {
                      "id": 133924170725792,
                      "label": "return",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "onSubscribe",
          "type": "Function",
          "blocks": [
            {
              "id": 133924170726416,
              "label": "",
              "successors": [
                {
                  "id": 133924152702192,
                  "label": "return;",
                  "successors": [
                    {
                      "id": 133924170726464,
                      "label": "return",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "onUnsubscribe",
          "type": "Function",
          "blocks": [
            {
              "id": 133924170727088,
              "label": "",
              "successors": [
                {
                  "id": 133924152703200,
                  "label": "return;",
                  "successors": [
                    {
                      "id": 133924170727136,
                      "label": "return",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "onPSubscribe",
          "type": "Function",
          "blocks": [
            {
              "id": 133924168827280,
              "label": "",
              "successors": [
                {
                  "id": 133924152703632,
                  "label": "return;",
                  "successors": [
                    {
                      "id": 133924168827328,
                      "label": "return",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "onPUnsubscribe",
          "type": "Function",
          "blocks": [
            {
              "id": 133924168827952,
              "label": "",
              "successors": [
                {
                  "id": 133924152703776,
                  "label": "return;",
                  "successors": [
                    {
                      "id": 133924168828000,
                      "label": "return",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "onPong",
          "type": "Function",
          "blocks": [
            {
              "id": 133924168828576,
              "label": "",
              "successors": [
                {
                  "id": 133924152703920,
                  "label": "return;",
                  "successors": [
                    {
                      "id": 133924168828624,
                      "label": "return",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "onExceptionCaught",
          "type": "Function",
          "blocks": [
            {
              "id": 133924168829200,
              "label": "",
              "successors": [
                {
                  "id": 133924152704064,
                  "label": "return;",
                  "successors": [
                    {
                      "id": 133924168829248,
                      "label": "return",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    }
  ]
}