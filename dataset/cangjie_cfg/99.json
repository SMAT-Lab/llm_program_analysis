[
  "Edge 0: [Source] public func role_type_to_str(role: RoleType): Option<String> { ... => [Target] case RoleType.User => Some(\"user\")",
  "Edge 1: [Source] public func role_type_to_str(role: RoleType): Option<String> { ... => [Target] case RoleType.Assistant => Some(\"assistant\")",
  "Edge 2: [Source] public func role_type_to_str(role: RoleType): Option<String> { ... => [Target] case RoleType.System => Some(\"system\")",
  "Edge 3: [Source] public func role_type_to_str(role: RoleType): Option<String> { ... => [Target] case RoleType.Function => Some(\"function\")",
  "Edge 4: [Source] public func role_type_to_str(role: RoleType): Option<String> { ... => [Target] case RoleType.NULL => None\n  }\n}",
  "Edge 5: [Source] public func str_to_role_type(role_option_str: Option<String>): RoleType { ... => [Target] case Some(role_option) => match (role_option) {",
  "Edge 6: [Source] public func str_to_role_type(role_option_str: Option<String>): RoleType { ... => [Target] case \"user\" => RoleType.User",
  "Edge 7: [Source] public func str_to_role_type(role_option_str: Option<String>): RoleType { ... => [Target] case \"assistant\" => RoleType.Assistant",
  "Edge 8: [Source] public func str_to_role_type(role_option_str: Option<String>): RoleType { ... => [Target] case \"system\" => RoleType.System",
  "Edge 9: [Source] public func str_to_role_type(role_option_str: Option<String>): RoleType { ... => [Target] case \"function\" => RoleType.Function",
  "Edge 10: [Source] public func str_to_role_type(role_option_str: Option<String>): RoleType { ... => [Target] case x => throw Exception(\"unknow enum ${x} for RoleType\");\n      }",
  "Edge 11: [Source] public func str_to_role_type(role_option_str: Option<String>): RoleType { ... => [Target] case None => RoleType.NULL\n  }\n}",
  "Edge 12: [Source] public static func fromJson(r: JsonReader): FunctionCall { ... => [Target] case BeginObject => r.startObject();\n          while(r.peek() != EndObject) {\n              let n = r.readName()\n              match (n) {",
  "Edge 13: [Source] public static func fromJson(r: JsonReader): FunctionCall { ... => [Target] case \"name\" => temp_name = r.readValue<String>();",
  "Edge 14: [Source] public static func fromJson(r: JsonReader): FunctionCall { ... => [Target] case \"arguments\" => temp_arguments = r.readValue<String>();",
  "Edge 15: [Source] public static func fromJson(r: JsonReader): FunctionCall { ... => [Target] case unkow => println(\"unkow key ${unkow}\");\n              }\n          }\n          r.endObject();\n          break;",
  "Edge 16: [Source] public static func fromJson(r: JsonReader): FunctionCall { ... => [Target] case _ => throw Exception(\"can't deserialize for FunctionCall\");\n      }\n    }\n    return FunctionCall(temp_name, temp_arguments);\n  }",
  "Edge 17: [Source] public static func fromJson(r: JsonReader): FunctionCall { ... => [Target] case BeginObject => r.startObject();\n          while(r.peek() != EndObject) {\n              let n = r.readName()\n              match (n) {",
  "Edge 18: [Source] public static func fromJson(r: JsonReader): FunctionCall { ... => [Target] case \"name\" => temp_name = r.readValue<String>();",
  "Edge 19: [Source] public static func fromJson(r: JsonReader): FunctionCall { ... => [Target] case \"arguments\" => temp_arguments = r.readValue<String>();",
  "Edge 20: [Source] public static func fromJson(r: JsonReader): FunctionCall { ... => [Target] case unkow => println(\"unkow key ${unkow}\");\n              }\n          }\n          r.endObject();\n          break;",
  "Edge 21: [Source] public static func fromJson(r: JsonReader): FunctionCall { ... => [Target] case _ => throw Exception(\"can't deserialize for FunctionCall\");\n      }\n    }\n    return FunctionCall(temp_name, temp_arguments);\n  }",
  "Edge 22: [Source] public static func fromJson(r: JsonReader): Message { ... => [Target] case BeginObject => r.startObject();\n          while(r.peek() != EndObject) {\n              let n = r.readName()\n              match (n) {",
  "Edge 23: [Source] public static func fromJson(r: JsonReader): Message { ... => [Target] case \"role\" => temp_role = r.readValue<Option<String>>();",
  "Edge 24: [Source] public static func fromJson(r: JsonReader): Message { ... => [Target] case \"content\" => temp_content = r.readValue<String>();",
  "Edge 25: [Source] public static func fromJson(r: JsonReader): Message { ... => [Target] case \"function_call\" => temp_functional_call = r.readValue<Option<FunctionCall>>();",
  "Edge 26: [Source] public static func fromJson(r: JsonReader): Message { ... => [Target] case unkow => println(\"unkow key ${unkow}\");\n              }\n          }\n          r.endObject();\n          break;",
  "Edge 27: [Source] public static func fromJson(r: JsonReader): Message { ... => [Target] case _ => throw Exception(\"can't deserialize for Message\");\n      }\n    }\n    let role_type: RoleType = str_to_role_type(temp_role);\n    return Message(role_type, temp_content);\n  }",
  "Edge 28: [Source] public static func fromJson(r: JsonReader): Message { ... => [Target] case BeginObject => r.startObject();\n          while(r.peek() != EndObject) {\n              let n = r.readName()\n              match (n) {",
  "Edge 29: [Source] public static func fromJson(r: JsonReader): Message { ... => [Target] case \"role\" => temp_role = r.readValue<Option<String>>();",
  "Edge 30: [Source] public static func fromJson(r: JsonReader): Message { ... => [Target] case \"content\" => temp_content = r.readValue<String>();",
  "Edge 31: [Source] public static func fromJson(r: JsonReader): Message { ... => [Target] case \"function_call\" => temp_functional_call = r.readValue<Option<FunctionCall>>();",
  "Edge 32: [Source] public static func fromJson(r: JsonReader): Message { ... => [Target] case unkow => println(\"unkow key ${unkow}\");\n              }\n          }\n          r.endObject();\n          break;",
  "Edge 33: [Source] public static func fromJson(r: JsonReader): Message { ... => [Target] case _ => throw Exception(\"can't deserialize for Message\");\n      }\n    }\n    let role_type: RoleType = str_to_role_type(temp_role);\n    return Message(role_type, temp_content);\n  }",
  "Edge 34: [Source] public static func fromJson(r: JsonReader): Choice { ... => [Target] case BeginObject => r.startObject();\n          while(r.peek() != EndObject) {\n              let n = r.readName()\n              match (n) {",
  "Edge 35: [Source] public static func fromJson(r: JsonReader): Choice { ... => [Target] case \"index\" => temp_index = r.readValue<Int32>();",
  "Edge 36: [Source] public static func fromJson(r: JsonReader): Choice { ... => [Target] case \"message\" => temp_message = r.readValue<Option<Message>>();",
  "Edge 37: [Source] public static func fromJson(r: JsonReader): Choice { ... => [Target] case \"delta\" => temp_delta = r.readValue<Option<Message>>();",
  "Edge 38: [Source] public static func fromJson(r: JsonReader): Choice { ... => [Target] case \"finish_reason\" => temp_finish_reason = r.readValue<Option<String>>();",
  "Edge 39: [Source] public static func fromJson(r: JsonReader): Choice { ... => [Target] case \"logprobs\" => temp_logprobs = r.readValue<Option<Float64>>();",
  "Edge 40: [Source] public static func fromJson(r: JsonReader): Choice { ... => [Target] case unkow => println(\"unkow key ${unkow}\");\n              }\n          }\n          r.endObject();\n          break",
  "Edge 41: [Source] public static func fromJson(r: JsonReader): Choice { ... => [Target] case _ => throw Exception(\"can't deserialize for Choice\");\n      }\n    }\n    return Choice(temp_index, temp_message, temp_delta, temp_finish_reason, temp_logprobs);\n  }",
  "Edge 42: [Source] public static func fromJson(r: JsonReader): Choice { ... => [Target] case BeginObject => r.startObject();\n          while(r.peek() != EndObject) {\n              let n = r.readName()\n              match (n) {",
  "Edge 43: [Source] public static func fromJson(r: JsonReader): Choice { ... => [Target] case \"index\" => temp_index = r.readValue<Int32>();",
  "Edge 44: [Source] public static func fromJson(r: JsonReader): Choice { ... => [Target] case \"message\" => temp_message = r.readValue<Option<Message>>();",
  "Edge 45: [Source] public static func fromJson(r: JsonReader): Choice { ... => [Target] case \"delta\" => temp_delta = r.readValue<Option<Message>>();",
  "Edge 46: [Source] public static func fromJson(r: JsonReader): Choice { ... => [Target] case \"finish_reason\" => temp_finish_reason = r.readValue<Option<String>>();",
  "Edge 47: [Source] public static func fromJson(r: JsonReader): Choice { ... => [Target] case \"logprobs\" => temp_logprobs = r.readValue<Option<Float64>>();",
  "Edge 48: [Source] public static func fromJson(r: JsonReader): Choice { ... => [Target] case unkow => println(\"unkow key ${unkow}\");\n              }\n          }\n          r.endObject();\n          break",
  "Edge 49: [Source] public static func fromJson(r: JsonReader): Choice { ... => [Target] case _ => throw Exception(\"can't deserialize for Choice\");\n      }\n    }\n    return Choice(temp_index, temp_message, temp_delta, temp_finish_reason, temp_logprobs);\n  }",
  "Edge 50: [Source] public static func fromJson(r: JsonReader): Usage { ... => [Target] case BeginObject => r.startObject();\n          while(r.peek() != EndObject) {\n              let n = r.readName()\n              match (n) {",
  "Edge 51: [Source] public static func fromJson(r: JsonReader): Usage { ... => [Target] case \"prompt_tokens\" => temp_prompt_tokens = r.readValue<UInt64>();",
  "Edge 52: [Source] public static func fromJson(r: JsonReader): Usage { ... => [Target] case \"completion_tokens\" => temp_completion_tokens = r.readValue<UInt64>();",
  "Edge 53: [Source] public static func fromJson(r: JsonReader): Usage { ... => [Target] case \"total_tokens\" => temp_total_tokens = r.readValue<UInt64>();",
  "Edge 54: [Source] public static func fromJson(r: JsonReader): Usage { ... => [Target] case unkow => println(\"unkow key ${unkow}\");\n              }\n          }\n          r.endObject();\n          break",
  "Edge 55: [Source] public static func fromJson(r: JsonReader): Usage { ... => [Target] case _ => throw Exception(\"can't deserialize for Usage\");\n      }\n    }\n    return Usage(temp_prompt_tokens, temp_completion_tokens, temp_total_tokens);\n  }",
  "Edge 56: [Source] public static func fromJson(r: JsonReader): Usage { ... => [Target] case BeginObject => r.startObject();\n          while(r.peek() != EndObject) {\n              let n = r.readName()\n              match (n) {",
  "Edge 57: [Source] public static func fromJson(r: JsonReader): Usage { ... => [Target] case \"prompt_tokens\" => temp_prompt_tokens = r.readValue<UInt64>();",
  "Edge 58: [Source] public static func fromJson(r: JsonReader): Usage { ... => [Target] case \"completion_tokens\" => temp_completion_tokens = r.readValue<UInt64>();",
  "Edge 59: [Source] public static func fromJson(r: JsonReader): Usage { ... => [Target] case \"total_tokens\" => temp_total_tokens = r.readValue<UInt64>();",
  "Edge 60: [Source] public static func fromJson(r: JsonReader): Usage { ... => [Target] case unkow => println(\"unkow key ${unkow}\");\n              }\n          }\n          r.endObject();\n          break",
  "Edge 61: [Source] public static func fromJson(r: JsonReader): Usage { ... => [Target] case _ => throw Exception(\"can't deserialize for Usage\");\n      }\n    }\n    return Usage(temp_prompt_tokens, temp_completion_tokens, temp_total_tokens);\n  }",
  "Edge 62: [Source] public static func fromJson(r: JsonReader): ChatResponse { ... => [Target] case BeginObject => r.startObject();\n          while(r.peek() != EndObject) {\n              let n = r.readName()\n              match (n) {",
  "Edge 63: [Source] public static func fromJson(r: JsonReader): ChatResponse { ... => [Target] case \"id\" => temp_id = r.readValue<Option<String>>();",
  "Edge 64: [Source] public static func fromJson(r: JsonReader): ChatResponse { ... => [Target] case \"request_id\" => temp_request_id = r.readValue<Option<String>>();",
  "Edge 65: [Source] public static func fromJson(r: JsonReader): ChatResponse { ... => [Target] case \"system_fingerprint\" => temp_system_fingerprint = r.readValue<Option<String>>();",
  "Edge 66: [Source] public static func fromJson(r: JsonReader): ChatResponse { ... => [Target] case \"model\" => temp_model = r.readValue<String>();",
  "Edge 67: [Source] public static func fromJson(r: JsonReader): ChatResponse { ... => [Target] case \"object\" => temp_object = r.readValue<String>();",
  "Edge 68: [Source] public static func fromJson(r: JsonReader): ChatResponse { ... => [Target] case \"created\" => temp_created = r.readValue<UInt64>();",
  "Edge 69: [Source] public static func fromJson(r: JsonReader): ChatResponse { ... => [Target] case \"choices\" => temp_choices = r.readValue<ArrayList<Choice>>();",
  "Edge 70: [Source] public static func fromJson(r: JsonReader): ChatResponse { ... => [Target] case \"usage\" => temp_usage = r.readValue<Option<Usage>>();",
  "Edge 71: [Source] public static func fromJson(r: JsonReader): ChatResponse { ... => [Target] case unkow => println(\"unkow key ${unkow}\");\n              }\n          }\n          r.endObject();\n          break",
  "Edge 72: [Source] public static func fromJson(r: JsonReader): ChatResponse { ... => [Target] case _ => throw Exception(\"can't deserialize for ChatResponse\")\n      }\n    }\n    return ChatResponse(\n      temp_id,\n      temp_request_id,\n      temp_system_fingerprint,\n      temp_model,\n      temp_object,\n      temp_created,\n      temp_choices,\n      temp_usage\n    );\n  }",
  "Edge 73: [Source] public static func fromJson(r: JsonReader): ChatResponse { ... => [Target] case BeginObject => r.startObject();\n          while(r.peek() != EndObject) {\n              let n = r.readName()\n              match (n) {",
  "Edge 74: [Source] public static func fromJson(r: JsonReader): ChatResponse { ... => [Target] case \"id\" => temp_id = r.readValue<Option<String>>();",
  "Edge 75: [Source] public static func fromJson(r: JsonReader): ChatResponse { ... => [Target] case \"request_id\" => temp_request_id = r.readValue<Option<String>>();",
  "Edge 76: [Source] public static func fromJson(r: JsonReader): ChatResponse { ... => [Target] case \"system_fingerprint\" => temp_system_fingerprint = r.readValue<Option<String>>();",
  "Edge 77: [Source] public static func fromJson(r: JsonReader): ChatResponse { ... => [Target] case \"model\" => temp_model = r.readValue<String>();",
  "Edge 78: [Source] public static func fromJson(r: JsonReader): ChatResponse { ... => [Target] case \"object\" => temp_object = r.readValue<String>();",
  "Edge 79: [Source] public static func fromJson(r: JsonReader): ChatResponse { ... => [Target] case \"created\" => temp_created = r.readValue<UInt64>();",
  "Edge 80: [Source] public static func fromJson(r: JsonReader): ChatResponse { ... => [Target] case \"choices\" => temp_choices = r.readValue<ArrayList<Choice>>();",
  "Edge 81: [Source] public static func fromJson(r: JsonReader): ChatResponse { ... => [Target] case \"usage\" => temp_usage = r.readValue<Option<Usage>>();",
  "Edge 82: [Source] public static func fromJson(r: JsonReader): ChatResponse { ... => [Target] case unkow => println(\"unkow key ${unkow}\");\n              }\n          }\n          r.endObject();\n          break",
  "Edge 83: [Source] public static func fromJson(r: JsonReader): ChatResponse { ... => [Target] case _ => throw Exception(\"can't deserialize for ChatResponse\")\n      }\n    }\n    return ChatResponse(\n      temp_id,\n      temp_request_id,\n      temp_system_fingerprint,\n      temp_model,\n      temp_object,\n      temp_created,\n      temp_choices,\n      temp_usage\n    );\n  }"
]