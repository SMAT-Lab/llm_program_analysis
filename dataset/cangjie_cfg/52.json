{
  "name": "52.cj",
  "type": "File",
  "blocks": [],
  "functions": [],
  "classes": [
    {
      "name": "_DEFAULT_CANG_CLASS",
      "type": "Class",
      "blocks": [],
      "functions": [
        {
          "name": "unknown_method",
          "type": "Function",
          "blocks": [
            {
              "id": 133924153460192,
              "label": "",
              "successors": [
                {
                  "id": 133924139508992,
                  "label": "let cube = Cube()",
                  "successors": [
                    {
                      "id": 133924139509040,
                      "label": "cube.print()",
                      "successors": [
                        {
                          "id": 133924139509088,
                          "label": "for (r in [F, B, L, R, U, D] )",
                          "successors": [
                            {
                              "id": 133924139509376,
                              "label": "cube.transform(r)",
                              "successors": [
                                {
                                  "id": 133924139509088
                                }
                              ]
                            },
                            {
                              "id": 133924139509184,
                              "label": "Cube().transform(F * R * I(F * R))",
                              "successors": [
                                {
                                  "id": 133924139509328,
                                  "label": "Cube().transform((F * F * R * R) ** 6)",
                                  "successors": [
                                    {
                                      "id": 133924139509424,
                                      "label": "Cube().transform((F * U * L * L * R) ** 36)",
                                      "successors": [
                                        {
                                          "id": 133924139509472,
                                          "label": "Cube().transform((F * F * L * L * B * R) ** 90)",
                                          "successors": [
                                            {
                                              "id": 133924139509520,
                                              "label": "let G = I(R) * D * R * F * D * I(F)",
                                              "successors": [
                                                {
                                                  "id": 133924139509568,
                                                  "label": "Cube().transform(G)",
                                                  "successors": [
                                                    {
                                                      "id": 133924139509616,
                                                      "label": "let H = U * G * I(U)",
                                                      "successors": [
                                                        {
                                                          "id": 133924139509664,
                                                          "label": "Cube().transform(H)",
                                                          "successors": [
                                                            {
                                                              "id": 133924139509712,
                                                              "label": "let M = R * I(L) * F * F * L * I(R) * I(D) * R * I(L) * F * L * I(R)",
                                                              "successors": [
                                                                {
                                                                  "id": 133924139509760,
                                                                  "label": "Cube().transform(M)",
                                                                  "successors": [
                                                                    {
                                                                      "id": 133924139509808,
                                                                      "label": "let N = M * I(U) * I(M) * U",
                                                                      "successors": [
                                                                        {
                                                                          "id": 133924139509856,
                                                                          "label": "Cube().transform(N)",
                                                                          "successors": [
                                                                            {
                                                                              "id": 133924139509904,
                                                                              "label": "let P = N * U * I(N) * I(U)",
                                                                              "successors": [
                                                                                {
                                                                                  "id": 133924139509952,
                                                                                  "label": "Cube().transform(P)\n    ()",
                                                                                  "successors": [
                                                                                    {
                                                                                      "id": 133924153460240,
                                                                                      "label": "return",
                                                                                      "successors": []
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    },
    {
      "name": "Rotation",
      "type": "Class",
      "blocks": [],
      "functions": [],
      "classes": []
    },
    {
      "name": "Index",
      "type": "Class",
      "blocks": [],
      "functions": [],
      "classes": []
    },
    {
      "name": "Matrix",
      "type": "Class",
      "blocks": [],
      "functions": [
        {
          "name": "create",
          "type": "Function",
          "blocks": [
            {
              "id": 133924153267904,
              "label": "",
              "successors": [
                {
                  "id": 133924139510096,
                  "label": "Matrix(3, { i =>\n            Vector(3, { j => (face, 3 * i + j + 1)})\n        })",
                  "successors": [
                    {
                      "id": 133924153267952,
                      "label": "return",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "set",
          "type": "Function",
          "blocks": [
            {
              "id": 133924153268576,
              "label": "",
              "successors": [
                {
                  "id": 133924139510240,
                  "label": "match (index )",
                  "successors": [
                    {
                      "id": 133924139510720,
                      "label": "this[r] = value",
                      "successors": [
                        {
                          "id": 133924153268624,
                          "label": "return",
                          "successors": []
                        }
                      ]
                    },
                    {
                      "id": 133924139511008,
                      "label": "for (i in 0..value.size )",
                      "successors": [
                        {
                          "id": 133924139511296,
                          "label": "this[i][c] = value[i]",
                          "successors": [
                            {
                              "id": 133924139511008
                            }
                          ]
                        },
                        {
                          "id": 133924153268624
                        }
                      ]
                    },
                    {
                      "id": 133924139511488,
                      "label": "value.reverse()",
                      "successors": [
                        {
                          "id": 133924139511536,
                          "label": "this.set(i, value)",
                          "successors": [
                            {
                              "id": 133924153268624
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "print",
          "type": "Function",
          "blocks": [
            {
              "id": 133924153269344,
              "label": "",
              "successors": [
                {
                  "id": 133924139511584,
                  "label": "for ((face, id) in this[row] )",
                  "successors": [
                    {
                      "id": 133924139511872,
                      "label": "print(\"${face}${id} \")",
                      "successors": [
                        {
                          "id": 133924139511584
                        }
                      ]
                    },
                    {
                      "id": 133924153269392,
                      "label": "return",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "print",
          "type": "Function",
          "blocks": [
            {
              "id": 133924153270016,
              "label": "",
              "successors": [
                {
                  "id": 133924139511920,
                  "label": "for (row in 0..this.size )",
                  "successors": [
                    {
                      "id": 133924139512208,
                      "label": "print(\"         \")",
                      "successors": [
                        {
                          "id": 133924139512256,
                          "label": "print(row)",
                          "successors": [
                            {
                              "id": 133924139512304,
                              "label": "println()",
                              "successors": [
                                {
                                  "id": 133924139511920
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": 133924153270064,
                      "label": "return",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    },
    {
      "name": "Int64",
      "type": "Class",
      "blocks": [],
      "functions": [],
      "classes": []
    },
    {
      "name": "Permutation",
      "type": "Class",
      "blocks": [],
      "functions": [
        {
          "name": "inverse",
          "type": "Function",
          "blocks": [
            {
              "id": 133924153271888,
              "label": "",
              "successors": [
                {
                  "id": 133924139512352,
                  "label": "let perm = this.clone()",
                  "successors": [
                    {
                      "id": 133924139512400,
                      "label": "for (i in 0..perm.size )",
                      "successors": [
                        {
                          "id": 133924139512736,
                          "label": "let j = (i + 1) % perm.size",
                          "successors": [
                            {
                              "id": 133924139512784,
                              "label": "let (face, index) = this[i]",
                              "successors": [
                                {
                                  "id": 133924139512832,
                                  "label": "if (let Inv(_) < - this[j][1] )",
                                  "successors": [
                                    {
                                      "id": 133924139513216,
                                      "label": "perm[i] = (face, -(index.value()))",
                                      "successors": [
                                        {
                                          "id": 133924139512400
                                        }
                                      ]
                                    },
                                    {
                                      "id": 133924139513360,
                                      "label": "perm[i] = (face, index.value())",
                                      "successors": [
                                        {
                                          "id": 133924139512400
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "id": 133924139512544,
                          "label": "perm.reverse()",
                          "successors": [
                            {
                              "id": 133924139512688,
                              "label": "return perm",
                              "successors": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    },
    {
      "name": "Cube",
      "type": "Class",
      "blocks": [],
      "functions": [
        {
          "name": "constructor",
          "type": "Function",
          "blocks": [
            {
              "id": 133924153272848,
              "label": "",
              "successors": [
                {
                  "id": 133924139513024,
                  "label": "reset()",
                  "successors": [
                    {
                      "id": 133924153272896,
                      "label": "return",
                      "successors": []
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "constructor",
          "type": "Function",
          "blocks": [
            {
              "id": 133924153274576,
              "label": "",
              "successors": [
                {
                  "id": 133924139513456,
                  "label": "permutation[F] = [(L, 2.c), (U, -2.r), (R, 0.c), (D, -0.r)]",
                  "successors": [
                    {
                      "id": 133924139513504,
                      "label": "permutation[B] = [(L, -0.c), (D, 2.r), (R, -2.c), (U, 0.r)]",
                      "successors": [
                        {
                          "id": 133924139513552,
                          "label": "permutation[L] = [(U, 0.c), (F, 0.c), (D, 0.c), (B, 0.c)]",
                          "successors": [
                            {
                              "id": 133924139513600,
                              "label": "permutation[R] = [(B, 2.c), (D, 2.c), (F, 2.c), (U, 2.c)]",
                              "successors": [
                                {
                                  "id": 133924139513648,
                                  "label": "permutation[U] = [(L, 0.r), (B, -2.r), (R, -0.r), (F, 0.r)]",
                                  "successors": [
                                    {
                                      "id": 133924139513696,
                                      "label": "permutation[D] = [(R, 2.r), (B, -0.r), (L, -2.r), (F, 2.r)]",
                                      "successors": [
                                        {
                                          "id": 133924153274624,
                                          "label": "return",
                                          "successors": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "reset",
          "type": "Function",
          "blocks": [
            {
              "id": 133924153275200,
              "label": "",
              "successors": [
                {
                  "id": 133924139513840,
                  "label": "history = ArrayList<Rotation>()",
                  "successors": [
                    {
                      "id": 133924139513888,
                      "label": "for (face in [F, B, L, R, U, D] )",
                      "successors": [
                        {
                          "id": 133924139514176,
                          "label": "data[face] = Matrix.create(face)",
                          "successors": [
                            {
                              "id": 133924139513888
                            }
                          ]
                        },
                        {
                          "id": 133924153275248,
                          "label": "return",
                          "successors": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "rotate",
          "type": "Function",
          "blocks": [
            {
              "id": 133924153276208,
              "label": "",
              "successors": [
                {
                  "id": 133924139514272,
                  "label": "const N = 3",
                  "successors": [
                    {
                      "id": 133924139514320,
                      "label": "let matrix = Matrix.create(face)",
                      "successors": [
                        {
                          "id": 133924139514368,
                          "label": "",
                          "successors": [
                            {
                              "id": 133924139514752,
                              "label": "{ i: Int64, j: Int64 => (N - 1 - j, i) }",
                              "successors": [
                                {
                                  "id": 133924139514464,
                                  "label": "let map = if (inverse) {\n            { i: Int64, j: Int64 => (N - 1 - j, i) }\n        } else {\n            { i: Int64, j: Int64 => (j, N - 1 - i) }\n        }",
                                  "successors": [
                                    {
                                      "id": 133924139514512,
                                      "label": "for (i in 0..N )",
                                      "successors": [
                                        {
                                          "id": 133924139515088,
                                          "label": "for (j in 0..N )",
                                          "successors": [
                                            {
                                              "id": 133924139515376,
                                              "label": "let (u, v) = map(i, j)",
                                              "successors": [
                                                {
                                                  "id": 133924139515424,
                                                  "label": "matrix[u][v] = data[face][i][j]",
                                                  "successors": [
                                                    {
                                                      "id": 133924139515088
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "id": 133924139514512
                                            }
                                          ]
                                        },
                                        {
                                          "id": 133924139514848,
                                          "label": "data[face] = matrix",
                                          "successors": [
                                            {
                                              "id": 133924153276256,
                                              "label": "return",
                                              "successors": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "id": 133924139514896,
                              "label": "{ i: Int64, j: Int64 => (j, N - 1 - i) }",
                              "successors": [
                                {
                                  "id": 133924139514464
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "permute",
          "type": "Function",
          "blocks": [
            {
              "id": 133924153277216,
              "label": "",
              "successors": [
                {
                  "id": 133924139515328,
                  "label": "",
                  "successors": [
                    {
                      "id": 133924139515808,
                      "label": "perm.inverse()",
                      "successors": [
                        {
                          "id": 133924139515520,
                          "label": "let p = if (inverse) { perm.inverse() } else { perm.clone() }",
                          "successors": [
                            {
                              "id": 133924139515568,
                              "label": "p.reverse()",
                              "successors": [
                                {
                                  "id": 133924139515616,
                                  "label": "var (lastFace, lastIndex) = p[0]",
                                  "successors": [
                                    {
                                      "id": 133924139647040,
                                      "label": "let vector = data[lastFace][lastIndex]",
                                      "successors": [
                                        {
                                          "id": 133924139647136,
                                          "label": "for (i in 1..p.size )",
                                          "successors": [
                                            {
                                              "id": 133924139647424,
                                              "label": "let (face, index) = p[i]",
                                              "successors": [
                                                {
                                                  "id": 133924139647472,
                                                  "label": "data[lastFace].set(lastIndex, data[face][index])\n            (lastFace, lastIndex) = (face, index)",
                                                  "successors": [
                                                    {
                                                      "id": 133924139647136
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "id": 133924139647232,
                                              "label": "data[lastFace].set(lastIndex, vector)",
                                              "successors": [
                                                {
                                                  "id": 133924153277264,
                                                  "label": "return",
                                                  "successors": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": 133924139647088,
                      "label": "perm.clone()",
                      "successors": [
                        {
                          "id": 133924139515520
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "transform",
          "type": "Function",
          "blocks": [
            {
              "id": 133924153277888,
              "label": "",
              "successors": [
                {
                  "id": 133924139647520,
                  "label": "match (rotation )",
                  "successors": [
                    {
                      "id": 133924139648000,
                      "label": "transform(r, !inverse)",
                      "successors": [
                        {
                          "id": 133924153277936,
                          "label": "return",
                          "successors": []
                        }
                      ]
                    },
                    {
                      "id": 133924139648288,
                      "label": "if (inverse )",
                      "successors": [
                        {
                          "id": 133924139648720,
                          "label": "transform(r2, inverse)",
                          "successors": [
                            {
                              "id": 133924139648768,
                              "label": "transform(r1, inverse)",
                              "successors": [
                                {
                                  "id": 133924153277936
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "id": 133924139648912,
                          "label": "transform(r1, inverse)",
                          "successors": [
                            {
                              "id": 133924139648960,
                              "label": "transform(r2, inverse)",
                              "successors": [
                                {
                                  "id": 133924153277936
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": 133924139649056,
                      "label": "rotate(rotation, inverse)",
                      "successors": [
                        {
                          "id": 133924139649104,
                          "label": "permute(permutation[rotation], inverse)",
                          "successors": [
                            {
                              "id": 133924153277936
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "transform",
          "type": "Function",
          "blocks": [
            {
              "id": 133924153458944,
              "label": "",
              "successors": [
                {
                  "id": 133924139649152,
                  "label": "transform(rotation, false)",
                  "successors": [
                    {
                      "id": 133924139649200,
                      "label": "history.append(rotation)",
                      "successors": [
                        {
                          "id": 133924139649248,
                          "label": "print()",
                          "successors": [
                            {
                              "id": 133924139649296,
                              "label": "return this",
                              "successors": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        },
        {
          "name": "print",
          "type": "Function",
          "blocks": [
            {
              "id": 133924153459616,
              "label": "",
              "successors": [
                {
                  "id": 133924139649440,
                  "label": "var prompt = \">> \"",
                  "successors": [
                    {
                      "id": 133924139649488,
                      "label": "for (rotation in history )",
                      "successors": [
                        {
                          "id": 133924139649776,
                          "label": "prompt += rotation.toString()",
                          "successors": [
                            {
                              "id": 133924139649488
                            }
                          ]
                        },
                        {
                          "id": 133924139649584,
                          "label": "println(prompt)",
                          "successors": [
                            {
                              "id": 133924139649728,
                              "label": "data[U].print()",
                              "successors": [
                                {
                                  "id": 133924139649824,
                                  "label": "for (i in 0..3 )",
                                  "successors": [
                                    {
                                      "id": 133924139650112,
                                      "label": "for (face in [L, F, R] )",
                                      "successors": [
                                        {
                                          "id": 133924139650400,
                                          "label": "data[face].print(i)",
                                          "successors": [
                                            {
                                              "id": 133924139650112
                                            }
                                          ]
                                        },
                                        {
                                          "id": 133924139650208,
                                          "label": "println()",
                                          "successors": [
                                            {
                                              "id": 133924139649824
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "id": 133924139649920,
                                      "label": "data[D].print()",
                                      "successors": [
                                        {
                                          "id": 133924139650064,
                                          "label": "data[B].print()",
                                          "successors": [
                                            {
                                              "id": 133924139650352,
                                              "label": "println()",
                                              "successors": [
                                                {
                                                  "id": 133924153459664,
                                                  "label": "return",
                                                  "successors": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "functions": [],
          "classes": []
        }
      ],
      "classes": []
    }
  ]
}