{
    "type": "sourceFile",
    "label": "package bindings.clang.common\nfrom clang import libclang.*\nfrom cbindings import bindings.common.CTranslationContext\npublic func getName(cdecl: CXCursor): String {\n    let spelling = getCursorSpelling(cdecl)\n    match (cdecl.kind) {\n        case CXCursor_StructDecl | CXCursor_UnionDecl | CXCursor_EnumDecl =>\n            let name = if (spelling.isEmpty()) { getTypeSpelling(getCursorType(cdecl)) } else { spelling }\n            getParentPrefix(cdecl) + name\n        case _ => spelling\n    }\n}\nfunc getParentName(cursor: CXCursor, ctx!: ?CTranslationContext = None): ?String {\n    let parent = getCursorLexicalParent(cursor)\n    match (parent.kind) {\n        case CXCursor_TranslationUnit => None\n        case _ => match(ctx) {\n            case Some(ctx) => getUniqueName(parent, ctx: ctx)\n            case None => getName(parent)\n        }\n    }\n}\nfunc getParentPrefix(cursor: CXCursor, ctx!: ?CTranslationContext = None): String {\n    match (getParentName(cursor, ctx: ctx)) {\n        case Some(parentName) => \"${parentName}_\"\n        case None => \"\"\n    }\n}\npublic func getUniqueName(cdecl: CXCursor, ctx!: CTranslationContext) {\n    let parentPrefix = getParentPrefix(cdecl, ctx: ctx)\n    match (isAnonymousRecordDecl(cdecl) || isAnonymous(cdecl)) {\n        case true =>\n            let kindSpecifier = match (cdecl.kind) {\n                case CXCursor_StructDecl => \"Struct\"\n                case CXCursor_UnionDecl => \"Union\"\n                case CXCursor_EnumDecl => \"Enum\"\n                case _ => \"\"\n            }\n            \"${parentPrefix}${kindSpecifier}_Anon${ctx.getUniquieDeclId(cdecl)}\"\n        case false =>\n            let cursorSpelling = getCursorSpelling(cdecl)\n            let name = if (cursorSpelling.isEmpty()) { getTypeSpelling(getCursorType(cdecl)) } else { cursorSpelling }\n            parentPrefix + name\n    }\n}\nextend CTranslationContext {\n    func getUniquieDeclId(cdecl: CXCursor) {\n        getUniquieId(hashCursor(cdecl))\n    }\n}",
    "start_token": 0,
    "end_token": 391,
    "children": [
        {
            "type": "packageHeader",
            "label": "package bindings.clang.common",
            "start_token": 0,
            "end_token": 5,
            "children": [
                {
                    "type": "PACKAGE",
                    "label": "package",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "packageNameIdentifier",
                    "label": "bindings.clang.common",
                    "start_token": 1,
                    "end_token": 5,
                    "children": [
                        {
                            "type": "identifier",
                            "label": "bindings",
                            "start_token": 1,
                            "end_token": 1,
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "clang",
                            "start_token": 3,
                            "end_token": 3,
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "common",
                            "start_token": 5,
                            "end_token": 5,
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "importList",
            "label": "from clang import libclang.*",
            "start_token": 7,
            "end_token": 12,
            "children": [
                {
                    "type": "FROM",
                    "label": "from",
                    "start_token": 7,
                    "end_token": 7,
                    "children": []
                },
                {
                    "type": "identifier",
                    "label": "clang",
                    "start_token": 8,
                    "end_token": 8,
                    "children": []
                },
                {
                    "type": "IMPORT",
                    "label": "import",
                    "start_token": 9,
                    "end_token": 9,
                    "children": []
                },
                {
                    "type": "importContent",
                    "label": "libclang.*",
                    "start_token": 10,
                    "end_token": 12,
                    "children": [
                        {
                            "type": "importAll",
                            "label": "libclang.*",
                            "start_token": 10,
                            "end_token": 12,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "libclang",
                                    "start_token": 10,
                                    "end_token": 10,
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "importList",
            "label": "from cbindings import bindings.common.CTranslationContext",
            "start_token": 14,
            "end_token": 21,
            "children": [
                {
                    "type": "FROM",
                    "label": "from",
                    "start_token": 14,
                    "end_token": 14,
                    "children": []
                },
                {
                    "type": "identifier",
                    "label": "cbindings",
                    "start_token": 15,
                    "end_token": 15,
                    "children": []
                },
                {
                    "type": "IMPORT",
                    "label": "import",
                    "start_token": 16,
                    "end_token": 16,
                    "children": []
                },
                {
                    "type": "importContent",
                    "label": "bindings.common.CTranslationContext",
                    "start_token": 17,
                    "end_token": 21,
                    "children": [
                        {
                            "type": "importSpecified",
                            "label": "bindings.common.CTranslationContext",
                            "start_token": 17,
                            "end_token": 21,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "bindings",
                                    "start_token": 17,
                                    "end_token": 17,
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "common",
                                    "start_token": 19,
                                    "end_token": 19,
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "CTranslationContext",
                                    "start_token": 21,
                                    "end_token": 21,
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "functionDefinition",
            "label": "public func getName(cdecl: CXCursor): String {\n    let spelling = getCursorSpelling(cdecl)\n    match (cdecl.kind) {\n        case CXCursor_StructDecl | CXCursor_UnionDecl | CXCursor_EnumDecl =>\n            let name = if (spelling.isEmpty()) { getTypeSpelling(getCursorType(cdecl)) } else { spelling }\n            getParentPrefix(cdecl) + name\n        case _ => spelling\n    }\n}",
            "start_token": 23,
            "end_token": 100,
            "children": [
                {
                    "type": "modifiers",
                    "label": "public",
                    "start_token": 23,
                    "end_token": 23,
                    "children": [
                        {
                            "type": "PUBLIC",
                            "label": "public",
                            "start_token": 23,
                            "end_token": 23,
                            "children": []
                        }
                    ]
                },
                {
                    "type": "FUNC",
                    "label": "func",
                    "start_token": 24,
                    "end_token": 24,
                    "children": []
                },
                {
                    "type": "identifier",
                    "label": "getName",
                    "start_token": 25,
                    "end_token": 25,
                    "children": []
                },
                {
                    "type": "functionParameters",
                    "label": "(cdecl: CXCursor)",
                    "start_token": 26,
                    "end_token": 30,
                    "children": [
                        {
                            "type": "parameterList",
                            "label": "cdecl: CXCursor",
                            "start_token": 27,
                            "end_token": 29,
                            "children": [
                                {
                                    "type": "parameter",
                                    "label": "cdecl: CXCursor",
                                    "start_token": 27,
                                    "end_token": 29,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "cdecl",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": []
                                        },
                                        {
                                            "type": "userType",
                                            "label": "CXCursor",
                                            "start_token": 29,
                                            "end_token": 29,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "CXCursor",
                                                    "start_token": 29,
                                                    "end_token": 29,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "charLangTypes",
                    "label": "String",
                    "start_token": 32,
                    "end_token": 32,
                    "children": []
                },
                {
                    "type": "block",
                    "label": "{\n    let spelling = getCursorSpelling(cdecl)\n    match (cdecl.kind) {\n        case CXCursor_StructDecl | CXCursor_UnionDecl | CXCursor_EnumDecl =>\n            let name = if (spelling.isEmpty()) { getTypeSpelling(getCursorType(cdecl)) } else { spelling }\n            getParentPrefix(cdecl) + name\n        case _ => spelling\n    }\n}",
                    "start_token": 33,
                    "end_token": 100,
                    "children": [
                        {
                            "type": "variableDeclaration",
                            "label": "let spelling = getCursorSpelling(cdecl)",
                            "start_token": 35,
                            "end_token": 41,
                            "children": [
                                {
                                    "type": "LET",
                                    "label": "let",
                                    "start_token": 35,
                                    "end_token": 35,
                                    "children": []
                                },
                                {
                                    "type": "varBindingPattern",
                                    "label": "spelling",
                                    "start_token": 36,
                                    "end_token": 36,
                                    "children": []
                                },
                                {
                                    "type": "callExpression",
                                    "label": "getCursorSpelling(cdecl)",
                                    "start_token": 38,
                                    "end_token": 41,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "getCursorSpelling",
                                            "start_token": 38,
                                            "end_token": 38,
                                            "children": []
                                        },
                                        {
                                            "type": "argumentList",
                                            "label": "(cdecl)",
                                            "start_token": 39,
                                            "end_token": 41,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "cdecl",
                                                    "start_token": 40,
                                                    "end_token": 40,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "matchExpression",
                            "label": "match (cdecl.kind) {\n        case CXCursor_StructDecl | CXCursor_UnionDecl | CXCursor_EnumDecl =>\n            let name = if (spelling.isEmpty()) { getTypeSpelling(getCursorType(cdecl)) } else { spelling }\n            getParentPrefix(cdecl) + name\n        case _ => spelling\n    }",
                            "start_token": 43,
                            "end_token": 98,
                            "children": [
                                {
                                    "type": "MATCH",
                                    "label": "match",
                                    "start_token": 43,
                                    "end_token": 43,
                                    "children": []
                                },
                                {
                                    "type": "fieldExpression",
                                    "label": "cdecl.kind",
                                    "start_token": 45,
                                    "end_token": 47,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "cdecl",
                                            "start_token": 45,
                                            "end_token": 45,
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "kind",
                                            "start_token": 47,
                                            "end_token": 47,
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "matchCase",
                                    "label": " {\n        case CXCursor_StructDecl | CXCursor_UnionDecl | CXCursor_EnumDecl =>\n            let name = if (spelling.isEmpty()) { getTypeSpelling(getCursorType(cdecl)) } else { spelling }\n            getParentPrefix(cdecl) + name\n        case _ => spelling\n    }",
                                    "start_token": -1,
                                    "end_token": 98,
                                    "children": [
                                        {
                                            "type": "CASE",
                                            "label": "        case",
                                            "start_token": -1,
                                            "end_token": 51,
                                            "children": []
                                        },
                                        {
                                            "type": "enumPattern",
                                            "label": "CXCursor_StructDecl | CXCursor_UnionDecl | CXCursor_EnumDecl",
                                            "start_token": 52,
                                            "end_token": 56,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "CXCursor_StructDecl",
                                                    "start_token": 52,
                                                    "end_token": 52,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "CXCursor_UnionDecl",
                                                    "start_token": 54,
                                                    "end_token": 54,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "CXCursor_EnumDecl",
                                                    "start_token": 56,
                                                    "end_token": 56,
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "variableDeclaration",
                                            "label": "let name = if (spelling.isEmpty()) { getTypeSpelling(getCursorType(cdecl)) } else { spelling }",
                                            "start_token": 60,
                                            "end_token": 83,
                                            "children": [
                                                {
                                                    "type": "LET",
                                                    "label": "let",
                                                    "start_token": 60,
                                                    "end_token": 60,
                                                    "children": []
                                                },
                                                {
                                                    "type": "varBindingPattern",
                                                    "label": "name",
                                                    "start_token": 61,
                                                    "end_token": 61,
                                                    "children": []
                                                },
                                                {
                                                    "type": "ifExpression",
                                                    "label": "if (spelling.isEmpty()) { getTypeSpelling(getCursorType(cdecl)) } else { spelling }",
                                                    "start_token": 63,
                                                    "end_token": 83,
                                                    "children": [
                                                        {
                                                            "type": "IF",
                                                            "label": "if",
                                                            "start_token": 63,
                                                            "end_token": 63,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "callExpression",
                                                            "label": "spelling.isEmpty()",
                                                            "start_token": 65,
                                                            "end_token": 69,
                                                            "children": [
                                                                {
                                                                    "type": "fieldExpression",
                                                                    "label": "spelling.isEmpty",
                                                                    "start_token": 65,
                                                                    "end_token": 67,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "spelling",
                                                                            "start_token": 65,
                                                                            "end_token": 65,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "isEmpty",
                                                                            "start_token": 67,
                                                                            "end_token": 67,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argumentList",
                                                                    "label": "()",
                                                                    "start_token": 68,
                                                                    "end_token": 69,
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": " { getTypeSpelling(getCursorType(cdecl)) }",
                                                            "start_token": -1,
                                                            "end_token": 79,
                                                            "children": [
                                                                {
                                                                    "type": "callExpression",
                                                                    "label": "getTypeSpelling(getCursorType(cdecl))",
                                                                    "start_token": 72,
                                                                    "end_token": 78,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "getTypeSpelling",
                                                                            "start_token": 72,
                                                                            "end_token": 72,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argumentList",
                                                                            "label": "(getCursorType(cdecl))",
                                                                            "start_token": 73,
                                                                            "end_token": 78,
                                                                            "children": [
                                                                                {
                                                                                    "type": "callExpression",
                                                                                    "label": "getCursorType(cdecl)",
                                                                                    "start_token": 74,
                                                                                    "end_token": 77,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "getCursorType",
                                                                                            "start_token": 74,
                                                                                            "end_token": 74,
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argumentList",
                                                                                            "label": "(cdecl)",
                                                                                            "start_token": 75,
                                                                                            "end_token": 77,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "cdecl",
                                                                                                    "start_token": 76,
                                                                                                    "end_token": 76,
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "ELSE",
                                                            "label": "else",
                                                            "start_token": 80,
                                                            "end_token": 80,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": " { spelling }",
                                                            "start_token": -1,
                                                            "end_token": 83,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "spelling",
                                                                    "start_token": 82,
                                                                    "end_token": 82,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "binaryExpression",
                                            "label": "getParentPrefix(cdecl) + name",
                                            "start_token": 85,
                                            "end_token": 90,
                                            "children": [
                                                {
                                                    "type": "callExpression",
                                                    "label": "getParentPrefix(cdecl)",
                                                    "start_token": 85,
                                                    "end_token": 88,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "getParentPrefix",
                                                            "start_token": 85,
                                                            "end_token": 85,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argumentList",
                                                            "label": "(cdecl)",
                                                            "start_token": 86,
                                                            "end_token": 88,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "cdecl",
                                                                    "start_token": 87,
                                                                    "end_token": 87,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "name",
                                                    "start_token": 90,
                                                    "end_token": 90,
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "CASE",
                                            "label": "case",
                                            "start_token": 92,
                                            "end_token": 92,
                                            "children": []
                                        },
                                        {
                                            "type": "wildcardPattern",
                                            "label": "_",
                                            "start_token": 93,
                                            "end_token": 93,
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "spelling",
                                            "start_token": 96,
                                            "end_token": 96,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "functionDefinition",
            "label": "func getParentName(cursor: CXCursor, ctx!: ?CTranslationContext = None): ?String {\n    let parent = getCursorLexicalParent(cursor)\n    match (parent.kind) {\n        case CXCursor_TranslationUnit => None\n        case _ => match(ctx) {\n            case Some(ctx) => getUniqueName(parent, ctx: ctx)\n            case None => getName(parent)\n        }\n    }\n}",
            "start_token": 102,
            "end_token": 183,
            "children": [
                {
                    "type": "FUNC",
                    "label": "func",
                    "start_token": 102,
                    "end_token": 102,
                    "children": []
                },
                {
                    "type": "identifier",
                    "label": "getParentName",
                    "start_token": 103,
                    "end_token": 103,
                    "children": []
                },
                {
                    "type": "functionParameters",
                    "label": "(cursor: CXCursor, ctx!: ?CTranslationContext = None)",
                    "start_token": 104,
                    "end_token": 116,
                    "children": [
                        {
                            "type": "parameterList",
                            "label": "cursor: CXCursor, ctx!: ?CTranslationContext = None",
                            "start_token": 105,
                            "end_token": 115,
                            "children": [
                                {
                                    "type": "parameter",
                                    "label": "cursor: CXCursor",
                                    "start_token": 105,
                                    "end_token": 107,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "cursor",
                                            "start_token": 105,
                                            "end_token": 105,
                                            "children": []
                                        },
                                        {
                                            "type": "userType",
                                            "label": "CXCursor",
                                            "start_token": 107,
                                            "end_token": 107,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "CXCursor",
                                                    "start_token": 107,
                                                    "end_token": 107,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "parameter",
                                    "label": "ctx!: ?CTranslationContext = None",
                                    "start_token": 109,
                                    "end_token": 115,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "ctx",
                                            "start_token": 109,
                                            "end_token": 109,
                                            "children": []
                                        },
                                        {
                                            "type": "prefixType",
                                            "label": "?CTranslationContext",
                                            "start_token": 112,
                                            "end_token": 113,
                                            "children": [
                                                {
                                                    "type": "userType",
                                                    "label": "CTranslationContext",
                                                    "start_token": 113,
                                                    "end_token": 113,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "CTranslationContext",
                                                            "start_token": 113,
                                                            "end_token": 113,
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "None",
                                            "start_token": 115,
                                            "end_token": 115,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "prefixType",
                    "label": "?String",
                    "start_token": 118,
                    "end_token": 119,
                    "children": [
                        {
                            "type": "charLangTypes",
                            "label": "String",
                            "start_token": 119,
                            "end_token": 119,
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "{\n    let parent = getCursorLexicalParent(cursor)\n    match (parent.kind) {\n        case CXCursor_TranslationUnit => None\n        case _ => match(ctx) {\n            case Some(ctx) => getUniqueName(parent, ctx: ctx)\n            case None => getName(parent)\n        }\n    }\n}",
                    "start_token": 120,
                    "end_token": 183,
                    "children": [
                        {
                            "type": "variableDeclaration",
                            "label": "let parent = getCursorLexicalParent(cursor)",
                            "start_token": 122,
                            "end_token": 128,
                            "children": [
                                {
                                    "type": "LET",
                                    "label": "let",
                                    "start_token": 122,
                                    "end_token": 122,
                                    "children": []
                                },
                                {
                                    "type": "varBindingPattern",
                                    "label": "parent",
                                    "start_token": 123,
                                    "end_token": 123,
                                    "children": []
                                },
                                {
                                    "type": "callExpression",
                                    "label": "getCursorLexicalParent(cursor)",
                                    "start_token": 125,
                                    "end_token": 128,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "getCursorLexicalParent",
                                            "start_token": 125,
                                            "end_token": 125,
                                            "children": []
                                        },
                                        {
                                            "type": "argumentList",
                                            "label": "(cursor)",
                                            "start_token": 126,
                                            "end_token": 128,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "cursor",
                                                    "start_token": 127,
                                                    "end_token": 127,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "matchExpression",
                            "label": "match (parent.kind) {\n        case CXCursor_TranslationUnit => None\n        case _ => match(ctx) {\n            case Some(ctx) => getUniqueName(parent, ctx: ctx)\n            case None => getName(parent)\n        }\n    }",
                            "start_token": 130,
                            "end_token": 181,
                            "children": [
                                {
                                    "type": "MATCH",
                                    "label": "match",
                                    "start_token": 130,
                                    "end_token": 130,
                                    "children": []
                                },
                                {
                                    "type": "fieldExpression",
                                    "label": "parent.kind",
                                    "start_token": 132,
                                    "end_token": 134,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "parent",
                                            "start_token": 132,
                                            "end_token": 132,
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "kind",
                                            "start_token": 134,
                                            "end_token": 134,
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "matchCase",
                                    "label": " {\n        case CXCursor_TranslationUnit => None\n        case _ => match(ctx) {\n            case Some(ctx) => getUniqueName(parent, ctx: ctx)\n            case None => getName(parent)\n        }\n    }",
                                    "start_token": -1,
                                    "end_token": 181,
                                    "children": [
                                        {
                                            "type": "CASE",
                                            "label": "        case",
                                            "start_token": -1,
                                            "end_token": 138,
                                            "children": []
                                        },
                                        {
                                            "type": "varBindingPattern",
                                            "label": "CXCursor_TranslationUnit",
                                            "start_token": 139,
                                            "end_token": 139,
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "None",
                                            "start_token": 142,
                                            "end_token": 142,
                                            "children": []
                                        },
                                        {
                                            "type": "CASE",
                                            "label": "case",
                                            "start_token": 144,
                                            "end_token": 144,
                                            "children": []
                                        },
                                        {
                                            "type": "wildcardPattern",
                                            "label": "_",
                                            "start_token": 145,
                                            "end_token": 145,
                                            "children": []
                                        },
                                        {
                                            "type": "matchExpression",
                                            "label": "match(ctx) {\n            case Some(ctx) => getUniqueName(parent, ctx: ctx)\n            case None => getName(parent)\n        }",
                                            "start_token": 148,
                                            "end_token": 179,
                                            "children": [
                                                {
                                                    "type": "MATCH",
                                                    "label": "match",
                                                    "start_token": 148,
                                                    "end_token": 148,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "ctx",
                                                    "start_token": 150,
                                                    "end_token": 150,
                                                    "children": []
                                                },
                                                {
                                                    "type": "matchCase",
                                                    "label": " {\n            case Some(ctx) => getUniqueName(parent, ctx: ctx)\n            case None => getName(parent)\n        }",
                                                    "start_token": -1,
                                                    "end_token": 179,
                                                    "children": [
                                                        {
                                                            "type": "CASE",
                                                            "label": "            case",
                                                            "start_token": -1,
                                                            "end_token": 154,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "enumPattern",
                                                            "label": "Some(ctx)",
                                                            "start_token": 155,
                                                            "end_token": 158,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Some",
                                                                    "start_token": 155,
                                                                    "end_token": 155,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "enumPatternParameters",
                                                                    "label": "(ctx)",
                                                                    "start_token": 156,
                                                                    "end_token": 158,
                                                                    "children": [
                                                                        {
                                                                            "type": "varBindingPattern",
                                                                            "label": "ctx",
                                                                            "start_token": 157,
                                                                            "end_token": 157,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "callExpression",
                                                            "label": "getUniqueName(parent, ctx: ctx)",
                                                            "start_token": 161,
                                                            "end_token": 168,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "getUniqueName",
                                                                    "start_token": 161,
                                                                    "end_token": 161,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argumentList",
                                                                    "label": "(parent, ctx: ctx)",
                                                                    "start_token": 162,
                                                                    "end_token": 168,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "parent",
                                                                            "start_token": 163,
                                                                            "end_token": 163,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "ctx",
                                                                            "start_token": 165,
                                                                            "end_token": 165,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "ctx",
                                                                            "start_token": 167,
                                                                            "end_token": 167,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "CASE",
                                                            "label": "case",
                                                            "start_token": 170,
                                                            "end_token": 170,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "varBindingPattern",
                                                            "label": "None",
                                                            "start_token": 171,
                                                            "end_token": 171,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "callExpression",
                                                            "label": "getName(parent)",
                                                            "start_token": 174,
                                                            "end_token": 177,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "getName",
                                                                    "start_token": 174,
                                                                    "end_token": 174,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argumentList",
                                                                    "label": "(parent)",
                                                                    "start_token": 175,
                                                                    "end_token": 177,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "parent",
                                                                            "start_token": 176,
                                                                            "end_token": 176,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "functionDefinition",
            "label": "func getParentPrefix(cursor: CXCursor, ctx!: ?CTranslationContext = None): String {\n    match (getParentName(cursor, ctx: ctx)) {\n        case Some(parentName) => \"${parentName}_\"\n        case None => \"\"\n    }\n}",
            "start_token": 185,
            "end_token": 234,
            "children": [
                {
                    "type": "FUNC",
                    "label": "func",
                    "start_token": 185,
                    "end_token": 185,
                    "children": []
                },
                {
                    "type": "identifier",
                    "label": "getParentPrefix",
                    "start_token": 186,
                    "end_token": 186,
                    "children": []
                },
                {
                    "type": "functionParameters",
                    "label": "(cursor: CXCursor, ctx!: ?CTranslationContext = None)",
                    "start_token": 187,
                    "end_token": 199,
                    "children": [
                        {
                            "type": "parameterList",
                            "label": "cursor: CXCursor, ctx!: ?CTranslationContext = None",
                            "start_token": 188,
                            "end_token": 198,
                            "children": [
                                {
                                    "type": "parameter",
                                    "label": "cursor: CXCursor",
                                    "start_token": 188,
                                    "end_token": 190,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "cursor",
                                            "start_token": 188,
                                            "end_token": 188,
                                            "children": []
                                        },
                                        {
                                            "type": "userType",
                                            "label": "CXCursor",
                                            "start_token": 190,
                                            "end_token": 190,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "CXCursor",
                                                    "start_token": 190,
                                                    "end_token": 190,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "parameter",
                                    "label": "ctx!: ?CTranslationContext = None",
                                    "start_token": 192,
                                    "end_token": 198,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "ctx",
                                            "start_token": 192,
                                            "end_token": 192,
                                            "children": []
                                        },
                                        {
                                            "type": "prefixType",
                                            "label": "?CTranslationContext",
                                            "start_token": 195,
                                            "end_token": 196,
                                            "children": [
                                                {
                                                    "type": "userType",
                                                    "label": "CTranslationContext",
                                                    "start_token": 196,
                                                    "end_token": 196,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "CTranslationContext",
                                                            "start_token": 196,
                                                            "end_token": 196,
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "None",
                                            "start_token": 198,
                                            "end_token": 198,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "charLangTypes",
                    "label": "String",
                    "start_token": 201,
                    "end_token": 201,
                    "children": []
                },
                {
                    "type": "block",
                    "label": "{\n    match (getParentName(cursor, ctx: ctx)) {\n        case Some(parentName) => \"${parentName}_\"\n        case None => \"\"\n    }\n}",
                    "start_token": 202,
                    "end_token": 234,
                    "children": [
                        {
                            "type": "matchExpression",
                            "label": "match (getParentName(cursor, ctx: ctx)) {\n        case Some(parentName) => \"${parentName}_\"\n        case None => \"\"\n    }",
                            "start_token": 204,
                            "end_token": 232,
                            "children": [
                                {
                                    "type": "MATCH",
                                    "label": "match",
                                    "start_token": 204,
                                    "end_token": 204,
                                    "children": []
                                },
                                {
                                    "type": "callExpression",
                                    "label": "getParentName(cursor, ctx: ctx)",
                                    "start_token": 206,
                                    "end_token": 213,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "getParentName",
                                            "start_token": 206,
                                            "end_token": 206,
                                            "children": []
                                        },
                                        {
                                            "type": "argumentList",
                                            "label": "(cursor, ctx: ctx)",
                                            "start_token": 207,
                                            "end_token": 213,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "cursor",
                                                    "start_token": 208,
                                                    "end_token": 208,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "ctx",
                                                    "start_token": 210,
                                                    "end_token": 210,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "ctx",
                                                    "start_token": 212,
                                                    "end_token": 212,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "matchCase",
                                    "label": " {\n        case Some(parentName) => \"${parentName}_\"\n        case None => \"\"\n    }",
                                    "start_token": -1,
                                    "end_token": 232,
                                    "children": [
                                        {
                                            "type": "CASE",
                                            "label": "        case",
                                            "start_token": -1,
                                            "end_token": 217,
                                            "children": []
                                        },
                                        {
                                            "type": "enumPattern",
                                            "label": "Some(parentName)",
                                            "start_token": 218,
                                            "end_token": 221,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "Some",
                                                    "start_token": 218,
                                                    "end_token": 218,
                                                    "children": []
                                                },
                                                {
                                                    "type": "enumPatternParameters",
                                                    "label": "(parentName)",
                                                    "start_token": 219,
                                                    "end_token": 221,
                                                    "children": [
                                                        {
                                                            "type": "varBindingPattern",
                                                            "label": "parentName",
                                                            "start_token": 220,
                                                            "end_token": 220,
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "label": "\"${parentName}_\"",
                                            "start_token": 224,
                                            "end_token": 224,
                                            "children": [
                                                {
                                                    "type": "lineStringLiteral",
                                                    "label": "\"${parentName}_\"",
                                                    "start_token": 224,
                                                    "end_token": 224,
                                                    "children": [
                                                        {
                                                            "type": "quoteOpen",
                                                            "label": "\"",
                                                            "start_token": 224,
                                                            "end_token": 224,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "lineStringExpression",
                                                            "label": "${parentName}",
                                                            "start_token": 224,
                                                            "end_token": 224,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "parentName",
                                                                    "start_token": 224,
                                                                    "end_token": 224,
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "lineStringContent",
                                                            "label": "_",
                                                            "start_token": 224,
                                                            "end_token": 224,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "quoteClose",
                                                            "label": "\"",
                                                            "start_token": 224,
                                                            "end_token": 224,
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "CASE",
                                            "label": "case",
                                            "start_token": 226,
                                            "end_token": 226,
                                            "children": []
                                        },
                                        {
                                            "type": "varBindingPattern",
                                            "label": "None",
                                            "start_token": 227,
                                            "end_token": 227,
                                            "children": []
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "label": "\"\"",
                                            "start_token": 230,
                                            "end_token": 230,
                                            "children": [
                                                {
                                                    "type": "lineStringLiteral",
                                                    "label": "\"\"",
                                                    "start_token": 230,
                                                    "end_token": 230,
                                                    "children": [
                                                        {
                                                            "type": "quoteOpen",
                                                            "label": "\"",
                                                            "start_token": 230,
                                                            "end_token": 230,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "quoteClose",
                                                            "label": "\"",
                                                            "start_token": 230,
                                                            "end_token": 230,
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "functionDefinition",
            "label": "public func getUniqueName(cdecl: CXCursor, ctx!: CTranslationContext) {\n    let parentPrefix = getParentPrefix(cdecl, ctx: ctx)\n    match (isAnonymousRecordDecl(cdecl) || isAnonymous(cdecl)) {\n        case true =>\n            let kindSpecifier = match (cdecl.kind) {\n                case CXCursor_StructDecl => \"Struct\"\n                case CXCursor_UnionDecl => \"Union\"\n                case CXCursor_EnumDecl => \"Enum\"\n                case _ => \"\"\n            }\n            \"${parentPrefix}${kindSpecifier}_Anon${ctx.getUniquieDeclId(cdecl)}\"\n        case false =>\n            let cursorSpelling = getCursorSpelling(cdecl)\n            let name = if (cursorSpelling.isEmpty()) { getTypeSpelling(getCursorType(cdecl)) } else { cursorSpelling }\n            parentPrefix + name\n    }\n}",
            "start_token": 236,
            "end_token": 366,
            "children": [
                {
                    "type": "modifiers",
                    "label": "public",
                    "start_token": 236,
                    "end_token": 236,
                    "children": [
                        {
                            "type": "PUBLIC",
                            "label": "public",
                            "start_token": 236,
                            "end_token": 236,
                            "children": []
                        }
                    ]
                },
                {
                    "type": "FUNC",
                    "label": "func",
                    "start_token": 237,
                    "end_token": 237,
                    "children": []
                },
                {
                    "type": "identifier",
                    "label": "getUniqueName",
                    "start_token": 238,
                    "end_token": 238,
                    "children": []
                },
                {
                    "type": "functionParameters",
                    "label": "(cdecl: CXCursor, ctx!: CTranslationContext)",
                    "start_token": 239,
                    "end_token": 248,
                    "children": [
                        {
                            "type": "parameterList",
                            "label": "cdecl: CXCursor, ctx!: CTranslationContext",
                            "start_token": 240,
                            "end_token": 247,
                            "children": [
                                {
                                    "type": "parameter",
                                    "label": "cdecl: CXCursor",
                                    "start_token": 240,
                                    "end_token": 242,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "cdecl",
                                            "start_token": 240,
                                            "end_token": 240,
                                            "children": []
                                        },
                                        {
                                            "type": "userType",
                                            "label": "CXCursor",
                                            "start_token": 242,
                                            "end_token": 242,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "CXCursor",
                                                    "start_token": 242,
                                                    "end_token": 242,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "parameter",
                                    "label": "ctx!: CTranslationContext",
                                    "start_token": 244,
                                    "end_token": 247,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "ctx",
                                            "start_token": 244,
                                            "end_token": 244,
                                            "children": []
                                        },
                                        {
                                            "type": "userType",
                                            "label": "CTranslationContext",
                                            "start_token": 247,
                                            "end_token": 247,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "CTranslationContext",
                                                    "start_token": 247,
                                                    "end_token": 247,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "{\n    let parentPrefix = getParentPrefix(cdecl, ctx: ctx)\n    match (isAnonymousRecordDecl(cdecl) || isAnonymous(cdecl)) {\n        case true =>\n            let kindSpecifier = match (cdecl.kind) {\n                case CXCursor_StructDecl => \"Struct\"\n                case CXCursor_UnionDecl => \"Union\"\n                case CXCursor_EnumDecl => \"Enum\"\n                case _ => \"\"\n            }\n            \"${parentPrefix}${kindSpecifier}_Anon${ctx.getUniquieDeclId(cdecl)}\"\n        case false =>\n            let cursorSpelling = getCursorSpelling(cdecl)\n            let name = if (cursorSpelling.isEmpty()) { getTypeSpelling(getCursorType(cdecl)) } else { cursorSpelling }\n            parentPrefix + name\n    }\n}",
                    "start_token": 249,
                    "end_token": 366,
                    "children": [
                        {
                            "type": "variableDeclaration",
                            "label": "let parentPrefix = getParentPrefix(cdecl, ctx: ctx)",
                            "start_token": 251,
                            "end_token": 261,
                            "children": [
                                {
                                    "type": "LET",
                                    "label": "let",
                                    "start_token": 251,
                                    "end_token": 251,
                                    "children": []
                                },
                                {
                                    "type": "varBindingPattern",
                                    "label": "parentPrefix",
                                    "start_token": 252,
                                    "end_token": 252,
                                    "children": []
                                },
                                {
                                    "type": "callExpression",
                                    "label": "getParentPrefix(cdecl, ctx: ctx)",
                                    "start_token": 254,
                                    "end_token": 261,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "getParentPrefix",
                                            "start_token": 254,
                                            "end_token": 254,
                                            "children": []
                                        },
                                        {
                                            "type": "argumentList",
                                            "label": "(cdecl, ctx: ctx)",
                                            "start_token": 255,
                                            "end_token": 261,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "cdecl",
                                                    "start_token": 256,
                                                    "end_token": 256,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "ctx",
                                                    "start_token": 258,
                                                    "end_token": 258,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "ctx",
                                                    "start_token": 260,
                                                    "end_token": 260,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "matchExpression",
                            "label": "match (isAnonymousRecordDecl(cdecl) || isAnonymous(cdecl)) {\n        case true =>\n            let kindSpecifier = match (cdecl.kind) {\n                case CXCursor_StructDecl => \"Struct\"\n                case CXCursor_UnionDecl => \"Union\"\n                case CXCursor_EnumDecl => \"Enum\"\n                case _ => \"\"\n            }\n            \"${parentPrefix}${kindSpecifier}_Anon${ctx.getUniquieDeclId(cdecl)}\"\n        case false =>\n            let cursorSpelling = getCursorSpelling(cdecl)\n            let name = if (cursorSpelling.isEmpty()) { getTypeSpelling(getCursorType(cdecl)) } else { cursorSpelling }\n            parentPrefix + name\n    }",
                            "start_token": 263,
                            "end_token": 364,
                            "children": [
                                {
                                    "type": "MATCH",
                                    "label": "match",
                                    "start_token": 263,
                                    "end_token": 263,
                                    "children": []
                                },
                                {
                                    "type": "binaryExpression",
                                    "label": "isAnonymousRecordDecl(cdecl) || isAnonymous(cdecl)",
                                    "start_token": 265,
                                    "end_token": 274,
                                    "children": [
                                        {
                                            "type": "callExpression",
                                            "label": "isAnonymousRecordDecl(cdecl)",
                                            "start_token": 265,
                                            "end_token": 268,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "isAnonymousRecordDecl",
                                                    "start_token": 265,
                                                    "end_token": 265,
                                                    "children": []
                                                },
                                                {
                                                    "type": "argumentList",
                                                    "label": "(cdecl)",
                                                    "start_token": 266,
                                                    "end_token": 268,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "cdecl",
                                                            "start_token": 267,
                                                            "end_token": 267,
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "callExpression",
                                            "label": "isAnonymous(cdecl)",
                                            "start_token": 271,
                                            "end_token": 274,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "isAnonymous",
                                                    "start_token": 271,
                                                    "end_token": 271,
                                                    "children": []
                                                },
                                                {
                                                    "type": "argumentList",
                                                    "label": "(cdecl)",
                                                    "start_token": 272,
                                                    "end_token": 274,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "cdecl",
                                                            "start_token": 273,
                                                            "end_token": 273,
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "matchCase",
                                    "label": " {\n        case true =>\n            let kindSpecifier = match (cdecl.kind) {\n                case CXCursor_StructDecl => \"Struct\"\n                case CXCursor_UnionDecl => \"Union\"\n                case CXCursor_EnumDecl => \"Enum\"\n                case _ => \"\"\n            }\n            \"${parentPrefix}${kindSpecifier}_Anon${ctx.getUniquieDeclId(cdecl)}\"\n        case false =>\n            let cursorSpelling = getCursorSpelling(cdecl)\n            let name = if (cursorSpelling.isEmpty()) { getTypeSpelling(getCursorType(cdecl)) } else { cursorSpelling }\n            parentPrefix + name\n    }",
                                    "start_token": -1,
                                    "end_token": 364,
                                    "children": [
                                        {
                                            "type": "CASE",
                                            "label": "        case",
                                            "start_token": -1,
                                            "end_token": 278,
                                            "children": []
                                        },
                                        {
                                            "type": "constantPattern",
                                            "label": "true",
                                            "start_token": 279,
                                            "end_token": 279,
                                            "children": [
                                                {
                                                    "type": "booleanLiteral",
                                                    "label": "true",
                                                    "start_token": 279,
                                                    "end_token": 279,
                                                    "children": [
                                                        {
                                                            "type": "TRUE",
                                                            "label": "true",
                                                            "start_token": 279,
                                                            "end_token": 279,
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "variableDeclaration",
                                            "label": "let kindSpecifier = match (cdecl.kind) {\n                case CXCursor_StructDecl => \"Struct\"\n                case CXCursor_UnionDecl => \"Union\"\n                case CXCursor_EnumDecl => \"Enum\"\n                case _ => \"\"\n            }",
                                            "start_token": 283,
                                            "end_token": 318,
                                            "children": [
                                                {
                                                    "type": "LET",
                                                    "label": "let",
                                                    "start_token": 283,
                                                    "end_token": 283,
                                                    "children": []
                                                },
                                                {
                                                    "type": "varBindingPattern",
                                                    "label": "kindSpecifier",
                                                    "start_token": 284,
                                                    "end_token": 284,
                                                    "children": []
                                                },
                                                {
                                                    "type": "matchExpression",
                                                    "label": "match (cdecl.kind) {\n                case CXCursor_StructDecl => \"Struct\"\n                case CXCursor_UnionDecl => \"Union\"\n                case CXCursor_EnumDecl => \"Enum\"\n                case _ => \"\"\n            }",
                                                    "start_token": 286,
                                                    "end_token": 318,
                                                    "children": [
                                                        {
                                                            "type": "MATCH",
                                                            "label": "match",
                                                            "start_token": 286,
                                                            "end_token": 286,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "fieldExpression",
                                                            "label": "cdecl.kind",
                                                            "start_token": 288,
                                                            "end_token": 290,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "cdecl",
                                                                    "start_token": 288,
                                                                    "end_token": 288,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "kind",
                                                                    "start_token": 290,
                                                                    "end_token": 290,
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "matchCase",
                                                            "label": " {\n                case CXCursor_StructDecl => \"Struct\"\n                case CXCursor_UnionDecl => \"Union\"\n                case CXCursor_EnumDecl => \"Enum\"\n                case _ => \"\"\n            }",
                                                            "start_token": -1,
                                                            "end_token": 318,
                                                            "children": [
                                                                {
                                                                    "type": "CASE",
                                                                    "label": "                case",
                                                                    "start_token": -1,
                                                                    "end_token": 294,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "varBindingPattern",
                                                                    "label": "CXCursor_StructDecl",
                                                                    "start_token": 295,
                                                                    "end_token": 295,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "stringLiteral",
                                                                    "label": "\"Struct\"",
                                                                    "start_token": 298,
                                                                    "end_token": 298,
                                                                    "children": [
                                                                        {
                                                                            "type": "lineStringLiteral",
                                                                            "label": "\"Struct\"",
                                                                            "start_token": 298,
                                                                            "end_token": 298,
                                                                            "children": [
                                                                                {
                                                                                    "type": "quoteOpen",
                                                                                    "label": "\"",
                                                                                    "start_token": 298,
                                                                                    "end_token": 298,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "lineStringContent",
                                                                                    "label": "Struct",
                                                                                    "start_token": 298,
                                                                                    "end_token": 298,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "quoteClose",
                                                                                    "label": "\"",
                                                                                    "start_token": 298,
                                                                                    "end_token": 298,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "CASE",
                                                                    "label": "case",
                                                                    "start_token": 300,
                                                                    "end_token": 300,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "varBindingPattern",
                                                                    "label": "CXCursor_UnionDecl",
                                                                    "start_token": 301,
                                                                    "end_token": 301,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "stringLiteral",
                                                                    "label": "\"Union\"",
                                                                    "start_token": 304,
                                                                    "end_token": 304,
                                                                    "children": [
                                                                        {
                                                                            "type": "lineStringLiteral",
                                                                            "label": "\"Union\"",
                                                                            "start_token": 304,
                                                                            "end_token": 304,
                                                                            "children": [
                                                                                {
                                                                                    "type": "quoteOpen",
                                                                                    "label": "\"",
                                                                                    "start_token": 304,
                                                                                    "end_token": 304,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "lineStringContent",
                                                                                    "label": "Union",
                                                                                    "start_token": 304,
                                                                                    "end_token": 304,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "quoteClose",
                                                                                    "label": "\"",
                                                                                    "start_token": 304,
                                                                                    "end_token": 304,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "CASE",
                                                                    "label": "case",
                                                                    "start_token": 306,
                                                                    "end_token": 306,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "varBindingPattern",
                                                                    "label": "CXCursor_EnumDecl",
                                                                    "start_token": 307,
                                                                    "end_token": 307,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "stringLiteral",
                                                                    "label": "\"Enum\"",
                                                                    "start_token": 310,
                                                                    "end_token": 310,
                                                                    "children": [
                                                                        {
                                                                            "type": "lineStringLiteral",
                                                                            "label": "\"Enum\"",
                                                                            "start_token": 310,
                                                                            "end_token": 310,
                                                                            "children": [
                                                                                {
                                                                                    "type": "quoteOpen",
                                                                                    "label": "\"",
                                                                                    "start_token": 310,
                                                                                    "end_token": 310,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "lineStringContent",
                                                                                    "label": "Enum",
                                                                                    "start_token": 310,
                                                                                    "end_token": 310,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "quoteClose",
                                                                                    "label": "\"",
                                                                                    "start_token": 310,
                                                                                    "end_token": 310,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "CASE",
                                                                    "label": "case",
                                                                    "start_token": 312,
                                                                    "end_token": 312,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "wildcardPattern",
                                                                    "label": "_",
                                                                    "start_token": 313,
                                                                    "end_token": 313,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "stringLiteral",
                                                                    "label": "\"\"",
                                                                    "start_token": 316,
                                                                    "end_token": 316,
                                                                    "children": [
                                                                        {
                                                                            "type": "lineStringLiteral",
                                                                            "label": "\"\"",
                                                                            "start_token": 316,
                                                                            "end_token": 316,
                                                                            "children": [
                                                                                {
                                                                                    "type": "quoteOpen",
                                                                                    "label": "\"",
                                                                                    "start_token": 316,
                                                                                    "end_token": 316,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "quoteClose",
                                                                                    "label": "\"",
                                                                                    "start_token": 316,
                                                                                    "end_token": 316,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "label": "\"${parentPrefix}${kindSpecifier}_Anon${ctx.getUniquieDeclId(cdecl)}\"",
                                            "start_token": 320,
                                            "end_token": 320,
                                            "children": [
                                                {
                                                    "type": "lineStringLiteral",
                                                    "label": "\"${parentPrefix}${kindSpecifier}_Anon${ctx.getUniquieDeclId(cdecl)}\"",
                                                    "start_token": 320,
                                                    "end_token": 320,
                                                    "children": [
                                                        {
                                                            "type": "quoteOpen",
                                                            "label": "\"",
                                                            "start_token": 320,
                                                            "end_token": 320,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "lineStringExpression",
                                                            "label": "${parentPrefix}",
                                                            "start_token": 320,
                                                            "end_token": 320,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "parentPrefix",
                                                                    "start_token": 320,
                                                                    "end_token": 320,
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "lineStringExpression",
                                                            "label": "${kindSpecifier}",
                                                            "start_token": 320,
                                                            "end_token": 320,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "kindSpecifier",
                                                                    "start_token": 320,
                                                                    "end_token": 320,
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "lineStringContent",
                                                            "label": "_Anon",
                                                            "start_token": 320,
                                                            "end_token": 320,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "lineStringExpression",
                                                            "label": "${ctx.getUniquieDeclId(cdecl)}",
                                                            "start_token": 320,
                                                            "end_token": 320,
                                                            "children": [
                                                                {
                                                                    "type": "callExpression",
                                                                    "label": "ctx.getUniquieDeclId(cdecl)",
                                                                    "start_token": 320,
                                                                    "end_token": 320,
                                                                    "children": [
                                                                        {
                                                                            "type": "fieldExpression",
                                                                            "label": "ctx.getUniquieDeclId",
                                                                            "start_token": 320,
                                                                            "end_token": 320,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "ctx",
                                                                                    "start_token": 320,
                                                                                    "end_token": 320,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "getUniquieDeclId",
                                                                                    "start_token": 320,
                                                                                    "end_token": 320,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argumentList",
                                                                            "label": "(cdecl)",
                                                                            "start_token": 320,
                                                                            "end_token": 320,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "cdecl",
                                                                                    "start_token": 320,
                                                                                    "end_token": 320,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "quoteClose",
                                                            "label": "\"",
                                                            "start_token": 320,
                                                            "end_token": 320,
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "CASE",
                                            "label": "case",
                                            "start_token": 322,
                                            "end_token": 322,
                                            "children": []
                                        },
                                        {
                                            "type": "constantPattern",
                                            "label": "false",
                                            "start_token": 323,
                                            "end_token": 323,
                                            "children": [
                                                {
                                                    "type": "booleanLiteral",
                                                    "label": "false",
                                                    "start_token": 323,
                                                    "end_token": 323,
                                                    "children": [
                                                        {
                                                            "type": "FALSE",
                                                            "label": "false",
                                                            "start_token": 323,
                                                            "end_token": 323,
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "variableDeclaration",
                                            "label": "let cursorSpelling = getCursorSpelling(cdecl)",
                                            "start_token": 327,
                                            "end_token": 333,
                                            "children": [
                                                {
                                                    "type": "LET",
                                                    "label": "let",
                                                    "start_token": 327,
                                                    "end_token": 327,
                                                    "children": []
                                                },
                                                {
                                                    "type": "varBindingPattern",
                                                    "label": "cursorSpelling",
                                                    "start_token": 328,
                                                    "end_token": 328,
                                                    "children": []
                                                },
                                                {
                                                    "type": "callExpression",
                                                    "label": "getCursorSpelling(cdecl)",
                                                    "start_token": 330,
                                                    "end_token": 333,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "getCursorSpelling",
                                                            "start_token": 330,
                                                            "end_token": 330,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argumentList",
                                                            "label": "(cdecl)",
                                                            "start_token": 331,
                                                            "end_token": 333,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "cdecl",
                                                                    "start_token": 332,
                                                                    "end_token": 332,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "variableDeclaration",
                                            "label": "let name = if (cursorSpelling.isEmpty()) { getTypeSpelling(getCursorType(cdecl)) } else { cursorSpelling }",
                                            "start_token": 335,
                                            "end_token": 358,
                                            "children": [
                                                {
                                                    "type": "LET",
                                                    "label": "let",
                                                    "start_token": 335,
                                                    "end_token": 335,
                                                    "children": []
                                                },
                                                {
                                                    "type": "varBindingPattern",
                                                    "label": "name",
                                                    "start_token": 336,
                                                    "end_token": 336,
                                                    "children": []
                                                },
                                                {
                                                    "type": "ifExpression",
                                                    "label": "if (cursorSpelling.isEmpty()) { getTypeSpelling(getCursorType(cdecl)) } else { cursorSpelling }",
                                                    "start_token": 338,
                                                    "end_token": 358,
                                                    "children": [
                                                        {
                                                            "type": "IF",
                                                            "label": "if",
                                                            "start_token": 338,
                                                            "end_token": 338,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "callExpression",
                                                            "label": "cursorSpelling.isEmpty()",
                                                            "start_token": 340,
                                                            "end_token": 344,
                                                            "children": [
                                                                {
                                                                    "type": "fieldExpression",
                                                                    "label": "cursorSpelling.isEmpty",
                                                                    "start_token": 340,
                                                                    "end_token": 342,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "cursorSpelling",
                                                                            "start_token": 340,
                                                                            "end_token": 340,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "isEmpty",
                                                                            "start_token": 342,
                                                                            "end_token": 342,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argumentList",
                                                                    "label": "()",
                                                                    "start_token": 343,
                                                                    "end_token": 344,
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": " { getTypeSpelling(getCursorType(cdecl)) }",
                                                            "start_token": -1,
                                                            "end_token": 354,
                                                            "children": [
                                                                {
                                                                    "type": "callExpression",
                                                                    "label": "getTypeSpelling(getCursorType(cdecl))",
                                                                    "start_token": 347,
                                                                    "end_token": 353,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "getTypeSpelling",
                                                                            "start_token": 347,
                                                                            "end_token": 347,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argumentList",
                                                                            "label": "(getCursorType(cdecl))",
                                                                            "start_token": 348,
                                                                            "end_token": 353,
                                                                            "children": [
                                                                                {
                                                                                    "type": "callExpression",
                                                                                    "label": "getCursorType(cdecl)",
                                                                                    "start_token": 349,
                                                                                    "end_token": 352,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "getCursorType",
                                                                                            "start_token": 349,
                                                                                            "end_token": 349,
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argumentList",
                                                                                            "label": "(cdecl)",
                                                                                            "start_token": 350,
                                                                                            "end_token": 352,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "cdecl",
                                                                                                    "start_token": 351,
                                                                                                    "end_token": 351,
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "ELSE",
                                                            "label": "else",
                                                            "start_token": 355,
                                                            "end_token": 355,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": " { cursorSpelling }",
                                                            "start_token": -1,
                                                            "end_token": 358,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "cursorSpelling",
                                                                    "start_token": 357,
                                                                    "end_token": 357,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "binaryExpression",
                                            "label": "parentPrefix + name",
                                            "start_token": 360,
                                            "end_token": 362,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "parentPrefix",
                                                    "start_token": 360,
                                                    "end_token": 360,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "name",
                                                    "start_token": 362,
                                                    "end_token": 362,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "extendDefinition",
            "label": "extend CTranslationContext {\n    func getUniquieDeclId(cdecl: CXCursor) {\n        getUniquieId(hashCursor(cdecl))\n    }\n}",
            "start_token": 368,
            "end_token": 391,
            "children": [
                {
                    "type": "EXTEND",
                    "label": "extend",
                    "start_token": 368,
                    "end_token": 368,
                    "children": []
                },
                {
                    "type": "classType",
                    "label": "CTranslationContext",
                    "start_token": 369,
                    "end_token": 369,
                    "children": [
                        {
                            "type": "identifier",
                            "label": "CTranslationContext",
                            "start_token": 369,
                            "end_token": 369,
                            "children": []
                        }
                    ]
                },
                {
                    "type": "extendBody",
                    "label": "{\n    func getUniquieDeclId(cdecl: CXCursor) {\n        getUniquieId(hashCursor(cdecl))\n    }\n}",
                    "start_token": 370,
                    "end_token": 391,
                    "children": [
                        {
                            "type": "extendMemberDeclaration",
                            "label": "func getUniquieDeclId(cdecl: CXCursor) {\n        getUniquieId(hashCursor(cdecl))\n    }",
                            "start_token": 372,
                            "end_token": 389,
                            "children": [
                                {
                                    "type": "functionDefinition",
                                    "label": "func getUniquieDeclId(cdecl: CXCursor) {\n        getUniquieId(hashCursor(cdecl))\n    }",
                                    "start_token": 372,
                                    "end_token": 389,
                                    "children": [
                                        {
                                            "type": "FUNC",
                                            "label": "func",
                                            "start_token": 372,
                                            "end_token": 372,
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "getUniquieDeclId",
                                            "start_token": 373,
                                            "end_token": 373,
                                            "children": []
                                        },
                                        {
                                            "type": "functionParameters",
                                            "label": "(cdecl: CXCursor)",
                                            "start_token": 374,
                                            "end_token": 378,
                                            "children": [
                                                {
                                                    "type": "parameterList",
                                                    "label": "cdecl: CXCursor",
                                                    "start_token": 375,
                                                    "end_token": 377,
                                                    "children": [
                                                        {
                                                            "type": "parameter",
                                                            "label": "cdecl: CXCursor",
                                                            "start_token": 375,
                                                            "end_token": 377,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "cdecl",
                                                                    "start_token": 375,
                                                                    "end_token": 375,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "userType",
                                                                    "label": "CXCursor",
                                                                    "start_token": 377,
                                                                    "end_token": 377,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "CXCursor",
                                                                            "start_token": 377,
                                                                            "end_token": 377,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "{\n        getUniquieId(hashCursor(cdecl))\n    }",
                                            "start_token": 379,
                                            "end_token": 389,
                                            "children": [
                                                {
                                                    "type": "callExpression",
                                                    "label": "getUniquieId(hashCursor(cdecl))",
                                                    "start_token": 381,
                                                    "end_token": 387,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "getUniquieId",
                                                            "start_token": 381,
                                                            "end_token": 381,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argumentList",
                                                            "label": "(hashCursor(cdecl))",
                                                            "start_token": 382,
                                                            "end_token": 387,
                                                            "children": [
                                                                {
                                                                    "type": "callExpression",
                                                                    "label": "hashCursor(cdecl)",
                                                                    "start_token": 383,
                                                                    "end_token": 386,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "hashCursor",
                                                                            "start_token": 383,
                                                                            "end_token": 383,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argumentList",
                                                                            "label": "(cdecl)",
                                                                            "start_token": 384,
                                                                            "end_token": 386,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "cdecl",
                                                                                    "start_token": 385,
                                                                                    "end_token": 385,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}