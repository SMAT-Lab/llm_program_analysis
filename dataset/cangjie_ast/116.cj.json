{
    "type": "sourceFile",
    "label": "// 调用 C 标准库中的 rand 和 printf 函数\n// cjc version: 0.53.13\nforeign func rand(): Int32\nforeign func printf(fmt: CString, ...): Int32\n\nunsafe main() {\n    let text = LibC.mallocCString(\"random number: %d\\n\")\n    for (_ in 0..5) {\n        printf(text, rand()) \n    }\n    LibC.free(text)\n}",
    "start_token": 0,
    "end_token": -1,
    "children": [
        {
            "type": "comment",
            "label": "// 调用 C 标准库中的 rand 和 printf 函数",
            "start_token": 0,
            "end_token": 0,
            "children": []
        },
        {
            "type": "comment",
            "label": "// cjc version: 0.53.13",
            "start_token": 0,
            "end_token": 0,
            "children": []
        },
        {
            "type": "foreignDeclaration",
            "label": "foreign func rand(): Int32",
            "start_token": 0,
            "end_token": 0,
            "children": [
                {
                    "type": "FOREIGN",
                    "label": "foreign",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "foreignMemberDeclaration",
                    "label": "func rand(): Int32",
                    "start_token": 0,
                    "end_token": 0,
                    "children": [
                        {
                            "type": "functionDefinition",
                            "label": "func rand(): Int32",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "FUNC",
                                    "label": "func",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "rand",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "functionParameters",
                                    "label": "()",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "charLangTypes",
                                    "label": "Int32",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "foreignDeclaration",
            "label": "foreign func printf(fmt: CString, ...): Int32",
            "start_token": 0,
            "end_token": 0,
            "children": [
                {
                    "type": "FOREIGN",
                    "label": "foreign",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "foreignMemberDeclaration",
                    "label": "func printf(fmt: CString, ...): Int32",
                    "start_token": 0,
                    "end_token": 0,
                    "children": [
                        {
                            "type": "functionDefinition",
                            "label": "func printf(fmt: CString, ...): Int32",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "FUNC",
                                    "label": "func",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "printf",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "functionParameters",
                                    "label": "(fmt: CString, ...)",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "parameterList",
                                            "label": "fmt: CString",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "parameter",
                                                    "label": "fmt: CString",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "fmt",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "userType",
                                                            "label": "CString",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "CString",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "ERROR",
                                            "label": ", ...",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "charLangTypes",
                                    "label": "Int32",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "ERROR",
            "label": "unsafe",
            "start_token": 0,
            "end_token": 0,
            "children": [
                {
                    "type": "UNSAFE",
                    "label": "unsafe",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                }
            ]
        },
        {
            "type": "mainDefinition",
            "label": "main() {\n    let text = LibC.mallocCString(\"random number: %d\\n\")\n    for (_ in 0..5) {\n        printf(text, rand()) \n    }\n    LibC.free(text)\n}",
            "start_token": 0,
            "end_token": -1,
            "children": [
                {
                    "type": "MAIN",
                    "label": "main",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "functionParameters",
                    "label": "()",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "block",
                    "label": "{\n    let text = LibC.mallocCString(\"random number: %d\\n\")\n    for (_ in 0..5) {\n        printf(text, rand()) \n    }\n    LibC.free(text)\n}",
                    "start_token": 0,
                    "end_token": -1,
                    "children": [
                        {
                            "type": "variableDeclaration",
                            "label": "let text = LibC.mallocCString(\"random number: %d\\n\")",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "LET",
                                    "label": "let",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "varBindingPattern",
                                    "label": "text",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "callExpression",
                                    "label": "LibC.mallocCString(\"random number: %d\\n\")",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "fieldExpression",
                                            "label": "LibC.mallocCString",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "LibC",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "mallocCString",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argumentList",
                                            "label": "(\"random number: %d\\n\")",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "stringLiteral",
                                                    "label": "\"random number: %d\\n\"",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": [
                                                        {
                                                            "type": "lineStringLiteral",
                                                            "label": "\"random number: %d\\n\"",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "quoteOpen",
                                                                    "label": "\"",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "lineStringContent",
                                                                    "label": "random number: %d",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "escapeSeq",
                                                                    "label": "\\n",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "quoteClose",
                                                                    "label": "\"",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "forInExpression",
                            "label": "for (_ in 0..5) {\n        printf(text, rand()) \n    }",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "FOR",
                                    "label": "for",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "wildcardPattern",
                                    "label": "_",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "IN",
                                    "label": "in",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "rangeExpression",
                                    "label": "0..5",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "integerLiteral",
                                            "label": "0",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        },
                                        {
                                            "type": "integerLiteral",
                                            "label": "5",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": " {\n        printf(text, rand()) \n    }",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "callExpression",
                                            "label": "printf(text, rand())",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "printf",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "argumentList",
                                                    "label": "(text, rand())",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "text",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "callExpression",
                                                            "label": "rand()",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "rand",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argumentList",
                                                                    "label": "()",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "callExpression",
                            "label": "LibC.free(text)",
                            "start_token": -1,
                            "end_token": -1,
                            "children": [
                                {
                                    "type": "fieldExpression",
                                    "label": "LibC.free",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "LibC",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "free",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argumentList",
                                    "label": "(text)",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "text",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}