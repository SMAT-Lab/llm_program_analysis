{
    "type": "sourceFile",
    "label": "// 基于蒙特卡洛算法估算圆周率\n// 涉及特性：常量，变量，可变性，类型转换，幂运算符\n// cjc version: 0.53.13\nimport std.random.*\nimport std.math.*\n\nmain() {\n    // 常量定义是为编译期数据命名，可用于常量表达式中\n    const N = 100000u32\n    // 变量定义是为运行时数据存储单元命名，以便后续程序引用\n    // 如果需要对这份存储单元进行读/写，可使用 var 定义可变变量\n    var n: UInt32 = 0 // 可以显式指定变量的类型\n    let random = Random() // 如果省略类型标注，则以初值表达式的类型确定变量类型\n    for (_ in 0..N) {\n        // 如果对这份存储单元只读不写，可使用 let 定义不可变变量\n        let x = random.nextFloat64()\n        // 不可变变量的初值在运行时确定，这是它和常量的最大区别\n        let y = random.nextFloat64()\n        // 读取不可变变量的值\n        if ((x - 0.5) ** 2 + (y - 0.5) ** 2 < 0.25) {\n            n++ // 修改可变变量的值\n        }\n    }\n    let pi = Float64(n) / Float64(N) * 4.0\n    println(\"π ≈ ${pi}\")\n    println(\"deviation: ${abs(Float64.PI - pi)}\")\n}",
    "start_token": 0,
    "end_token": -1,
    "children": [
        {
            "type": "comment",
            "label": "// 基于蒙特卡洛算法估算圆周率",
            "start_token": 0,
            "end_token": 0,
            "children": []
        },
        {
            "type": "comment",
            "label": "// 涉及特性：常量，变量，可变性，类型转换，幂运算符",
            "start_token": 0,
            "end_token": 0,
            "children": []
        },
        {
            "type": "comment",
            "label": "// cjc version: 0.53.13",
            "start_token": 0,
            "end_token": 0,
            "children": []
        },
        {
            "type": "importList",
            "label": "import std.random.*",
            "start_token": 0,
            "end_token": 0,
            "children": [
                {
                    "type": "IMPORT",
                    "label": "import",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "importContent",
                    "label": "std.random.*",
                    "start_token": 0,
                    "end_token": 0,
                    "children": [
                        {
                            "type": "importAll",
                            "label": "std.random.*",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "std",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "random",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "importList",
            "label": "import std.math.*",
            "start_token": 0,
            "end_token": 0,
            "children": [
                {
                    "type": "IMPORT",
                    "label": "import",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "importContent",
                    "label": "std.math.*",
                    "start_token": 0,
                    "end_token": 0,
                    "children": [
                        {
                            "type": "importAll",
                            "label": "std.math.*",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "std",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "math",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "mainDefinition",
            "label": "main() {\n    // 常量定义是为编译期数据命名，可用于常量表达式中\n    const N = 100000u32\n    // 变量定义是为运行时数据存储单元命名，以便后续程序引用\n    // 如果需要对这份存储单元进行读/写，可使用 var 定义可变变量\n    var n: UInt32 = 0 // 可以显式指定变量的类型\n    let random = Random() // 如果省略类型标注，则以初值表达式的类型确定变量类型\n    for (_ in 0..N) {\n        // 如果对这份存储单元只读不写，可使用 let 定义不可变变量\n        let x = random.nextFloat64()\n        // 不可变变量的初值在运行时确定，这是它和常量的最大区别\n        let y = random.nextFloat64()\n        // 读取不可变变量的值\n        if ((x - 0.5) ** 2 + (y - 0.5) ** 2 < 0.25) {\n            n++ // 修改可变变量的值\n        }\n    }\n    let pi = Float64(n) / Float64(N) * 4.0\n    println(\"π ≈ ${pi}\")\n    println(\"deviation: ${abs(Float64.PI - pi)}\")\n}",
            "start_token": 0,
            "end_token": -1,
            "children": [
                {
                    "type": "MAIN",
                    "label": "main",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "functionParameters",
                    "label": "()",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "block",
                    "label": "{\n    // 常量定义是为编译期数据命名，可用于常量表达式中\n    const N = 100000u32\n    // 变量定义是为运行时数据存储单元命名，以便后续程序引用\n    // 如果需要对这份存储单元进行读/写，可使用 var 定义可变变量\n    var n: UInt32 = 0 // 可以显式指定变量的类型\n    let random = Random() // 如果省略类型标注，则以初值表达式的类型确定变量类型\n    for (_ in 0..N) {\n        // 如果对这份存储单元只读不写，可使用 let 定义不可变变量\n        let x = random.nextFloat64()\n        // 不可变变量的初值在运行时确定，这是它和常量的最大区别\n        let y = random.nextFloat64()\n        // 读取不可变变量的值\n        if ((x - 0.5) ** 2 + (y - 0.5) ** 2 < 0.25) {\n            n++ // 修改可变变量的值\n        }\n    }\n    let pi = Float64(n) / Float64(N) * 4.0\n    println(\"π ≈ ${pi}\")\n    println(\"deviation: ${abs(Float64.PI - pi)}\")\n}",
                    "start_token": 0,
                    "end_token": -1,
                    "children": [
                        {
                            "type": "comment",
                            "label": "// 常量定义是为编译期数据命名，可用于常量表达式中",
                            "start_token": 0,
                            "end_token": 0,
                            "children": []
                        },
                        {
                            "type": "variableDeclaration",
                            "label": "const N = 100000u32",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "CONST",
                                    "label": "const",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "varBindingPattern",
                                    "label": "N",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "integerLiteral",
                                    "label": "100000u32",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "// 变量定义是为运行时数据存储单元命名，以便后续程序引用",
                            "start_token": 0,
                            "end_token": 0,
                            "children": []
                        },
                        {
                            "type": "comment",
                            "label": "// 如果需要对这份存储单元进行读/写，可使用 var 定义可变变量",
                            "start_token": 0,
                            "end_token": 0,
                            "children": []
                        },
                        {
                            "type": "variableDeclaration",
                            "label": "var n: UInt32 = 0",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "VAR",
                                    "label": "var",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "varBindingPattern",
                                    "label": "n",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "charLangTypes",
                                    "label": "UInt32",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "integerLiteral",
                                    "label": "0",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "// 可以显式指定变量的类型",
                            "start_token": 0,
                            "end_token": 0,
                            "children": []
                        },
                        {
                            "type": "variableDeclaration",
                            "label": "let random = Random()",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "LET",
                                    "label": "let",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "varBindingPattern",
                                    "label": "random",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "callExpression",
                                    "label": "Random()",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "Random",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        },
                                        {
                                            "type": "argumentList",
                                            "label": "()",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "// 如果省略类型标注，则以初值表达式的类型确定变量类型",
                            "start_token": 0,
                            "end_token": 0,
                            "children": []
                        },
                        {
                            "type": "forInExpression",
                            "label": "for (_ in 0..N) {\n        // 如果对这份存储单元只读不写，可使用 let 定义不可变变量\n        let x = random.nextFloat64()\n        // 不可变变量的初值在运行时确定，这是它和常量的最大区别\n        let y = random.nextFloat64()\n        // 读取不可变变量的值\n        if ((x - 0.5) ** 2 + (y - 0.5) ** 2 < 0.25) {\n            n++ // 修改可变变量的值\n        }\n    }",
                            "start_token": 0,
                            "end_token": -1,
                            "children": [
                                {
                                    "type": "FOR",
                                    "label": "for",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "wildcardPattern",
                                    "label": "_",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "IN",
                                    "label": "in",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "rangeExpression",
                                    "label": "0..N",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "integerLiteral",
                                            "label": "0",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "N",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": " {\n        // 如果对这份存储单元只读不写，可使用 let 定义不可变变量\n        let x = random.nextFloat64()\n        // 不可变变量的初值在运行时确定，这是它和常量的最大区别\n        let y = random.nextFloat64()\n        // 读取不可变变量的值\n        if ((x - 0.5) ** 2 + (y - 0.5) ** 2 < 0.25) {\n            n++ // 修改可变变量的值\n        }\n    }",
                                    "start_token": 0,
                                    "end_token": -1,
                                    "children": [
                                        {
                                            "type": "comment",
                                            "label": "// 如果对这份存储单元只读不写，可使用 let 定义不可变变量",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        },
                                        {
                                            "type": "variableDeclaration",
                                            "label": "let x = random.nextFloat64()",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "children": [
                                                {
                                                    "type": "LET",
                                                    "label": "let",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "children": []
                                                },
                                                {
                                                    "type": "varBindingPattern",
                                                    "label": "x",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "children": []
                                                },
                                                {
                                                    "type": "callExpression",
                                                    "label": "random.nextFloat64()",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "children": [
                                                        {
                                                            "type": "fieldExpression",
                                                            "label": "random.nextFloat64",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "random",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "nextFloat64",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argumentList",
                                                            "label": "()",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "label": "// 不可变变量的初值在运行时确定，这是它和常量的最大区别",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "children": []
                                        },
                                        {
                                            "type": "variableDeclaration",
                                            "label": "let y = random.nextFloat64()",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "children": [
                                                {
                                                    "type": "LET",
                                                    "label": "let",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "children": []
                                                },
                                                {
                                                    "type": "varBindingPattern",
                                                    "label": "y",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "children": []
                                                },
                                                {
                                                    "type": "callExpression",
                                                    "label": "random.nextFloat64()",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "children": [
                                                        {
                                                            "type": "fieldExpression",
                                                            "label": "random.nextFloat64",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "random",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "nextFloat64",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argumentList",
                                                            "label": "()",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "label": "// 读取不可变变量的值",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "children": []
                                        },
                                        {
                                            "type": "ifExpression",
                                            "label": "if ((x - 0.5) ** 2 + (y - 0.5) ** 2 < 0.25) {\n            n++ // 修改可变变量的值\n        }",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "children": [
                                                {
                                                    "type": "IF",
                                                    "label": "if",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "children": []
                                                },
                                                {
                                                    "type": "binaryExpression",
                                                    "label": "(x - 0.5) ** 2 + (y - 0.5) ** 2 < 0.25",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "children": [
                                                        {
                                                            "type": "binaryExpression",
                                                            "label": "(x - 0.5) ** 2 + (y - 0.5) ** 2",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "children": [
                                                                {
                                                                    "type": "binaryExpression",
                                                                    "label": "(x - 0.5) ** 2",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "children": [
                                                                        {
                                                                            "type": "parenthesizedExpression",
                                                                            "label": "(x - 0.5)",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "children": [
                                                                                {
                                                                                    "type": "binaryExpression",
                                                                                    "label": "x - 0.5",
                                                                                    "start_token": -1,
                                                                                    "end_token": -1,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "x",
                                                                                            "start_token": -1,
                                                                                            "end_token": -1,
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "floatLiteral",
                                                                                            "label": "0.5",
                                                                                            "start_token": -1,
                                                                                            "end_token": -1,
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "integerLiteral",
                                                                            "label": "2",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "binaryExpression",
                                                                    "label": "(y - 0.5) ** 2",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "children": [
                                                                        {
                                                                            "type": "parenthesizedExpression",
                                                                            "label": "(y - 0.5)",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "children": [
                                                                                {
                                                                                    "type": "binaryExpression",
                                                                                    "label": "y - 0.5",
                                                                                    "start_token": -1,
                                                                                    "end_token": -1,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "y",
                                                                                            "start_token": -1,
                                                                                            "end_token": -1,
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "floatLiteral",
                                                                                            "label": "0.5",
                                                                                            "start_token": -1,
                                                                                            "end_token": -1,
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "integerLiteral",
                                                                            "label": "2",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "floatLiteral",
                                                            "label": "0.25",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": " {\n            n++ // 修改可变变量的值\n        }",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "children": [
                                                        {
                                                            "type": "incDecExpression",
                                                            "label": "n++",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "n",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "comment",
                                                            "label": "// 修改可变变量的值",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "variableDeclaration",
                            "label": "let pi = Float64(n) / Float64(N) * 4.0",
                            "start_token": -1,
                            "end_token": -1,
                            "children": [
                                {
                                    "type": "LET",
                                    "label": "let",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "children": []
                                },
                                {
                                    "type": "varBindingPattern",
                                    "label": "pi",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "children": []
                                },
                                {
                                    "type": "binaryExpression",
                                    "label": "Float64(n) / Float64(N) * 4.0",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "children": [
                                        {
                                            "type": "binaryExpression",
                                            "label": "Float64(n) / Float64(N)",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "children": [
                                                {
                                                    "type": "callExpression",
                                                    "label": "Float64(n)",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Float64",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argumentList",
                                                            "label": "(n)",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "n",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "callExpression",
                                                    "label": "Float64(N)",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "Float64",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argumentList",
                                                            "label": "(N)",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "N",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "floatLiteral",
                                            "label": "4.0",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "callExpression",
                            "label": "println(\"π ≈ ${pi}\")",
                            "start_token": -1,
                            "end_token": -1,
                            "children": [
                                {
                                    "type": "builtinFunction",
                                    "label": "println",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "children": []
                                },
                                {
                                    "type": "argumentList",
                                    "label": "(\"π ≈ ${pi}\")",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "children": [
                                        {
                                            "type": "stringLiteral",
                                            "label": "\"π ≈ ${pi}\"",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "children": [
                                                {
                                                    "type": "lineStringLiteral",
                                                    "label": "\"π ≈ ${pi}\"",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "children": [
                                                        {
                                                            "type": "quoteOpen",
                                                            "label": "\"",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "lineStringContent",
                                                            "label": "π ≈ ",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "lineStringExpression",
                                                            "label": "${pi}",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "pi",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "quoteClose",
                                                            "label": "\"",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "callExpression",
                            "label": "println(\"deviation: ${abs(Float64.PI - pi)}\")",
                            "start_token": -1,
                            "end_token": -1,
                            "children": [
                                {
                                    "type": "builtinFunction",
                                    "label": "println",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "children": []
                                },
                                {
                                    "type": "argumentList",
                                    "label": "(\"deviation: ${abs(Float64.PI - pi)}\")",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "children": [
                                        {
                                            "type": "stringLiteral",
                                            "label": "\"deviation: ${abs(Float64.PI - pi)}\"",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "children": [
                                                {
                                                    "type": "lineStringLiteral",
                                                    "label": "\"deviation: ${abs(Float64.PI - pi)}\"",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "children": [
                                                        {
                                                            "type": "quoteOpen",
                                                            "label": "\"",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "lineStringContent",
                                                            "label": "deviation: ",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "lineStringExpression",
                                                            "label": "${abs(Float64.PI - pi)}",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "children": [
                                                                {
                                                                    "type": "callExpression",
                                                                    "label": "abs(Float64.PI - pi)",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "abs",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argumentList",
                                                                            "label": "(Float64.PI - pi)",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "children": [
                                                                                {
                                                                                    "type": "binaryExpression",
                                                                                    "label": "Float64.PI - pi",
                                                                                    "start_token": -1,
                                                                                    "end_token": -1,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "fieldExpression",
                                                                                            "label": "Float64.PI",
                                                                                            "start_token": -1,
                                                                                            "end_token": -1,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "Float64",
                                                                                                    "start_token": -1,
                                                                                                    "end_token": -1,
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "PI",
                                                                                                    "start_token": -1,
                                                                                                    "end_token": -1,
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "pi",
                                                                                            "start_token": -1,
                                                                                            "end_token": -1,
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "quoteClose",
                                                            "label": "\"",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}