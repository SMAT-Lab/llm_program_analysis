{
    "type": "sourceFile",
    "label": "func main(){\n    // 遍历中的数字是不能被修改的\n    for(i in 0..10){\n        // 打印出数字0，1，2，3，4，5，6，7，8，9\n        println(i)\n        println(\"${i}\")\n    }\n    // 遍历中的数字条件选择\n    for( i in 0..16){\n        // 遍历的数字如果大于10打印i+2，否则打印i\n        if(i >10){\n            println(i+2)\n        }else{\n            println(i)\n        }\n    }\n    for( i in 0..16){\n        // 遍历出来的数字能被2整除\n        if(i %2 == 0){\n            println(i)\n        }\n    }\n}",
    "start_token": 0,
    "end_token": -1,
    "children": [
        {
            "type": "functionDefinition",
            "label": "func main(){\n    // 遍历中的数字是不能被修改的\n    for(i in 0..10){\n        // 打印出数字0，1，2，3，4，5，6，7，8，9\n        println(i)\n        println(\"${i}\")\n    }\n    // 遍历中的数字条件选择\n    for( i in 0..16){\n        // 遍历的数字如果大于10打印i+2，否则打印i\n        if(i >10){\n            println(i+2)\n        }else{\n            println(i)\n        }\n    }\n    for( i in 0..16){\n        // 遍历出来的数字能被2整除\n        if(i %2 == 0){\n            println(i)\n        }\n    }\n}",
            "start_token": 0,
            "end_token": -1,
            "children": [
                {
                    "type": "FUNC",
                    "label": "func",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "identifier",
                    "label": "main",
                    "start_token": 1,
                    "end_token": 1,
                    "children": []
                },
                {
                    "type": "functionParameters",
                    "label": "()",
                    "start_token": 2,
                    "end_token": 3,
                    "children": []
                },
                {
                    "type": "block",
                    "label": "{\n    // 遍历中的数字是不能被修改的\n    for(i in 0..10){\n        // 打印出数字0，1，2，3，4，5，6，7，8，9\n        println(i)\n        println(\"${i}\")\n    }\n    // 遍历中的数字条件选择\n    for( i in 0..16){\n        // 遍历的数字如果大于10打印i+2，否则打印i\n        if(i >10){\n            println(i+2)\n        }else{\n            println(i)\n        }\n    }\n    for( i in 0..16){\n        // 遍历出来的数字能被2整除\n        if(i %2 == 0){\n            println(i)\n        }\n    }\n}",
                    "start_token": 4,
                    "end_token": -1,
                    "children": [
                        {
                            "type": "comment",
                            "label": "// 遍历中的数字是不能被修改的",
                            "start_token": 6,
                            "end_token": 6,
                            "children": []
                        },
                        {
                            "type": "forInExpression",
                            "label": "for(i in 0..10){\n        // 打印出数字0，1，2，3，4，5，6，7，8，9\n        println(i)\n        println(\"${i}\")\n    }",
                            "start_token": 6,
                            "end_token": 6,
                            "children": [
                                {
                                    "type": "FOR",
                                    "label": "for",
                                    "start_token": 6,
                                    "end_token": 6,
                                    "children": []
                                },
                                {
                                    "type": "varBindingPattern",
                                    "label": "i",
                                    "start_token": 6,
                                    "end_token": 6,
                                    "children": []
                                },
                                {
                                    "type": "IN",
                                    "label": "in",
                                    "start_token": 6,
                                    "end_token": 6,
                                    "children": []
                                },
                                {
                                    "type": "rangeExpression",
                                    "label": "0..10",
                                    "start_token": 6,
                                    "end_token": 6,
                                    "children": [
                                        {
                                            "type": "integerLiteral",
                                            "label": "0",
                                            "start_token": 6,
                                            "end_token": 6,
                                            "children": []
                                        },
                                        {
                                            "type": "integerLiteral",
                                            "label": "10",
                                            "start_token": 6,
                                            "end_token": 6,
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "{\n        // 打印出数字0，1，2，3，4，5，6，7，8，9\n        println(i)\n        println(\"${i}\")\n    }",
                                    "start_token": 6,
                                    "end_token": 6,
                                    "children": [
                                        {
                                            "type": "comment",
                                            "label": "// 打印出数字0，1，2，3，4，5，6，7，8，9",
                                            "start_token": 6,
                                            "end_token": 6,
                                            "children": []
                                        },
                                        {
                                            "type": "callExpression",
                                            "label": "println(i)",
                                            "start_token": 6,
                                            "end_token": 6,
                                            "children": [
                                                {
                                                    "type": "builtinFunction",
                                                    "label": "println",
                                                    "start_token": 6,
                                                    "end_token": 6,
                                                    "children": []
                                                },
                                                {
                                                    "type": "argumentList",
                                                    "label": "(i)",
                                                    "start_token": 6,
                                                    "end_token": 6,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "i",
                                                            "start_token": 6,
                                                            "end_token": 6,
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "callExpression",
                                            "label": "println(\"${i}\")",
                                            "start_token": 6,
                                            "end_token": 6,
                                            "children": [
                                                {
                                                    "type": "builtinFunction",
                                                    "label": "println",
                                                    "start_token": 6,
                                                    "end_token": 6,
                                                    "children": []
                                                },
                                                {
                                                    "type": "argumentList",
                                                    "label": "(\"${i}\")",
                                                    "start_token": 6,
                                                    "end_token": 6,
                                                    "children": [
                                                        {
                                                            "type": "stringLiteral",
                                                            "label": "\"${i}\"",
                                                            "start_token": 6,
                                                            "end_token": 6,
                                                            "children": [
                                                                {
                                                                    "type": "lineStringLiteral",
                                                                    "label": "\"${i}\"",
                                                                    "start_token": 6,
                                                                    "end_token": 6,
                                                                    "children": [
                                                                        {
                                                                            "type": "quoteOpen",
                                                                            "label": "\"",
                                                                            "start_token": 6,
                                                                            "end_token": 6,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "lineStringExpression",
                                                                            "label": "${i}",
                                                                            "start_token": 6,
                                                                            "end_token": 6,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "i",
                                                                                    "start_token": 6,
                                                                                    "end_token": 6,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "quoteClose",
                                                                            "label": "\"",
                                                                            "start_token": 6,
                                                                            "end_token": 6,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "// 遍历中的数字条件选择",
                            "start_token": 6,
                            "end_token": 6,
                            "children": []
                        },
                        {
                            "type": "forInExpression",
                            "label": "for( i in 0..16){\n        // 遍历的数字如果大于10打印i+2，否则打印i\n        if(i >10){\n            println(i+2)\n        }else{\n            println(i)\n        }\n    }",
                            "start_token": 6,
                            "end_token": 6,
                            "children": [
                                {
                                    "type": "FOR",
                                    "label": "for",
                                    "start_token": 6,
                                    "end_token": 6,
                                    "children": []
                                },
                                {
                                    "type": "varBindingPattern",
                                    "label": "i",
                                    "start_token": 6,
                                    "end_token": 6,
                                    "children": []
                                },
                                {
                                    "type": "IN",
                                    "label": "in",
                                    "start_token": 6,
                                    "end_token": 6,
                                    "children": []
                                },
                                {
                                    "type": "rangeExpression",
                                    "label": "0..16",
                                    "start_token": 6,
                                    "end_token": 6,
                                    "children": [
                                        {
                                            "type": "integerLiteral",
                                            "label": "0",
                                            "start_token": 6,
                                            "end_token": 6,
                                            "children": []
                                        },
                                        {
                                            "type": "integerLiteral",
                                            "label": "16",
                                            "start_token": 6,
                                            "end_token": 6,
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "{\n        // 遍历的数字如果大于10打印i+2，否则打印i\n        if(i >10){\n            println(i+2)\n        }else{\n            println(i)\n        }\n    }",
                                    "start_token": 6,
                                    "end_token": 6,
                                    "children": [
                                        {
                                            "type": "comment",
                                            "label": "// 遍历的数字如果大于10打印i+2，否则打印i",
                                            "start_token": 6,
                                            "end_token": 6,
                                            "children": []
                                        },
                                        {
                                            "type": "ifExpression",
                                            "label": "if(i >10){\n            println(i+2)\n        }else{\n            println(i)\n        }",
                                            "start_token": 6,
                                            "end_token": 6,
                                            "children": [
                                                {
                                                    "type": "IF",
                                                    "label": "if",
                                                    "start_token": 6,
                                                    "end_token": 6,
                                                    "children": []
                                                },
                                                {
                                                    "type": "binaryExpression",
                                                    "label": "i >10",
                                                    "start_token": 6,
                                                    "end_token": 6,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "i",
                                                            "start_token": 6,
                                                            "end_token": 6,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "integerLiteral",
                                                            "label": "10",
                                                            "start_token": 6,
                                                            "end_token": 6,
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "{\n            println(i+2)\n        }",
                                                    "start_token": 6,
                                                    "end_token": 6,
                                                    "children": [
                                                        {
                                                            "type": "callExpression",
                                                            "label": "println(i+2)",
                                                            "start_token": 6,
                                                            "end_token": 6,
                                                            "children": [
                                                                {
                                                                    "type": "builtinFunction",
                                                                    "label": "println",
                                                                    "start_token": 6,
                                                                    "end_token": 6,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argumentList",
                                                                    "label": "(i+2)",
                                                                    "start_token": 6,
                                                                    "end_token": 6,
                                                                    "children": [
                                                                        {
                                                                            "type": "binaryExpression",
                                                                            "label": "i+2",
                                                                            "start_token": 6,
                                                                            "end_token": 6,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "i",
                                                                                    "start_token": 6,
                                                                                    "end_token": 6,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "integerLiteral",
                                                                                    "label": "2",
                                                                                    "start_token": 6,
                                                                                    "end_token": 6,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "ELSE",
                                                    "label": "else",
                                                    "start_token": 6,
                                                    "end_token": 6,
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "{\n            println(i)\n        }",
                                                    "start_token": 6,
                                                    "end_token": 6,
                                                    "children": [
                                                        {
                                                            "type": "callExpression",
                                                            "label": "println(i)",
                                                            "start_token": 6,
                                                            "end_token": 6,
                                                            "children": [
                                                                {
                                                                    "type": "builtinFunction",
                                                                    "label": "println",
                                                                    "start_token": 6,
                                                                    "end_token": 6,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argumentList",
                                                                    "label": "(i)",
                                                                    "start_token": 6,
                                                                    "end_token": 6,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "i",
                                                                            "start_token": 6,
                                                                            "end_token": 6,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "forInExpression",
                            "label": "for( i in 0..16){\n        // 遍历出来的数字能被2整除\n        if(i %2 == 0){\n            println(i)\n        }\n    }",
                            "start_token": -1,
                            "end_token": -1,
                            "children": [
                                {
                                    "type": "FOR",
                                    "label": "for",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "children": []
                                },
                                {
                                    "type": "varBindingPattern",
                                    "label": "i",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "children": []
                                },
                                {
                                    "type": "IN",
                                    "label": "in",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "children": []
                                },
                                {
                                    "type": "rangeExpression",
                                    "label": "0..16",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "children": [
                                        {
                                            "type": "integerLiteral",
                                            "label": "0",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "children": []
                                        },
                                        {
                                            "type": "integerLiteral",
                                            "label": "16",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": "{\n        // 遍历出来的数字能被2整除\n        if(i %2 == 0){\n            println(i)\n        }\n    }",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "children": [
                                        {
                                            "type": "comment",
                                            "label": "// 遍历出来的数字能被2整除",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "children": []
                                        },
                                        {
                                            "type": "ifExpression",
                                            "label": "if(i %2 == 0){\n            println(i)\n        }",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "children": [
                                                {
                                                    "type": "IF",
                                                    "label": "if",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "children": []
                                                },
                                                {
                                                    "type": "binaryExpression",
                                                    "label": "i %2 == 0",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "children": [
                                                        {
                                                            "type": "binaryExpression",
                                                            "label": "i %2",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "i",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "integerLiteral",
                                                                    "label": "2",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "integerLiteral",
                                                            "label": "0",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "{\n            println(i)\n        }",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "children": [
                                                        {
                                                            "type": "callExpression",
                                                            "label": "println(i)",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "children": [
                                                                {
                                                                    "type": "builtinFunction",
                                                                    "label": "println",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argumentList",
                                                                    "label": "(i)",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "i",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}