{
    "type": "sourceFile",
    "label": "// 测试 Windows API\n// 仓颉语言团队 刘俊杰 2024.11.04\n\nunsafe main() {\n    let instance = GetModuleHandleA(EMPTY_STRING)\n    // 注册窗口类\n    let className = LibC.mallocCString('Cangjie Window')\n    var windowClass = WNDCLASSEX(lpszClassName: className,\n        hInstance: instance,\n        lpfnWndProc: onMessage,\n        hbrBackground: CreateSolidBrush(0x0095D6C0) // 中国传统色 欧碧\n    )\n    if (RegisterClassExA(inout windowClass) == 0) {\n        println('RegisterClass Failed: ${GetLastError()}')\n        return\n    }\n    // 创建窗口实例\n    let windowName = LibC.mallocCString('Cangjie')\n    let window = CreateWindowExA(\n        0,                                   // 扩展样式\n        className,                           // 窗口类名\n        windowName,                          // 窗口标题\n        WS_OVERLAPPEDWINDOW,                 // 窗口风格\n        CW_USEDEFAULT, CW_USEDEFAULT,        // 窗口位置\n        640, 480,                            // 窗口大小\n        NULL,                                // 父窗口句柄\n        NULL,                                // 菜单句柄\n        instance,                            // 实例句柄\n        NULL                                 // 附加参数\n    )\n    if (window.isNull()) {\n        println('CreateWindow Failed: ${GetLastError()}')\n        return\n    }\n    // 显示窗口\n    ShowWindow(window, SW_SHOWNORMAL)\n    UpdateWindow(window)\n    // 启动消息循环\n    var message = MSG()\n    while (GetMessageA(inout message, NULL, 0, 0)) {\n        TranslateMessage(inout message)\n        DispatchMessageA(inout message)\n    }\n    // 退出消息循环\n    println('Out of Message Loop')\n    LibC.free(className)\n    LibC.free(windowName)\n}\n\n@C\n@CallingConv[STDCALL]\nfunc onMessage(hWnd: Handle, msg: UInt32, wParam: UIntNative, lParam: UIntNative): Int64 {\n    var result = 0\n    const VK_ESCAPE: UInt16 = 0x1B\n    if (msg == WM_KEYDOWN && wParam == UIntNative(VK_ESCAPE)) {\n        unsafe { DestroyWindow(hWnd) }\n    } else if (msg == WM_DESTROY) {\n        unsafe { PostQuitMessage(0) }\n    }\n    result = unsafe { DefWindowProcA(hWnd, msg, wParam, lParam) }\n    return result\n}",
    "start_token": 0,
    "end_token": -1,
    "children": [
        {
            "type": "comment",
            "label": "// 测试 Windows API",
            "start_token": 0,
            "end_token": 0,
            "children": []
        },
        {
            "type": "comment",
            "label": "// 仓颉语言团队 刘俊杰 2024.11.04",
            "start_token": 0,
            "end_token": 0,
            "children": []
        },
        {
            "type": "ERROR",
            "label": "unsafe",
            "start_token": 0,
            "end_token": 0,
            "children": [
                {
                    "type": "UNSAFE",
                    "label": "unsafe",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                }
            ]
        },
        {
            "type": "mainDefinition",
            "label": "main() {\n    let instance = GetModuleHandleA(EMPTY_STRING)\n    // 注册窗口类\n    let className = LibC.mallocCString('Cangjie Window')\n    var windowClass = WNDCLASSEX(lpszClassName: className,\n        hInstance: instance,\n        lpfnWndProc: onMessage,\n        hbrBackground: CreateSolidBrush(0x0095D6C0) // 中国传统色 欧碧\n    )\n    if (RegisterClassExA(inout windowClass) == 0) {\n        println('RegisterClass Failed: ${GetLastError()}')\n        return\n    }\n    // 创建窗口实例\n    let windowName = LibC.mallocCString('Cangjie')\n    let window = CreateWindowExA(\n        0,                                   // 扩展样式\n        className,                           // 窗口类名\n        windowName,                          // 窗口标题\n        WS_OVERLAPPEDWINDOW,                 // 窗口风格\n        CW_USEDEFAULT, CW_USEDEFAULT,        // 窗口位置\n        640, 480,                            // 窗口大小\n        NULL,                                // 父窗口句柄\n        NULL,                                // 菜单句柄\n        instance,                            // 实例句柄\n        NULL                                 // 附加参数\n    )\n    if (window.isNull()) {\n        println('CreateWindow Failed: ${GetLastError()}')\n        return\n    }\n    // 显示窗口\n    ShowWindow(window, SW_SHOWNORMAL)\n    UpdateWindow(window)\n    // 启动消息循环\n    var message = MSG()\n    while (GetMessageA(inout message, NULL, 0, 0)) {\n        TranslateMessage(inout message)\n        DispatchMessageA(inout message)\n    }\n    // 退出消息循环\n    println('Out of Message Loop')\n    LibC.free(className)\n    LibC.free(windowName)\n}",
            "start_token": 0,
            "end_token": 0,
            "children": [
                {
                    "type": "MAIN",
                    "label": "main",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "functionParameters",
                    "label": "()",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "block",
                    "label": "{\n    let instance = GetModuleHandleA(EMPTY_STRING)\n    // 注册窗口类\n    let className = LibC.mallocCString('Cangjie Window')\n    var windowClass = WNDCLASSEX(lpszClassName: className,\n        hInstance: instance,\n        lpfnWndProc: onMessage,\n        hbrBackground: CreateSolidBrush(0x0095D6C0) // 中国传统色 欧碧\n    )\n    if (RegisterClassExA(inout windowClass) == 0) {\n        println('RegisterClass Failed: ${GetLastError()}')\n        return\n    }\n    // 创建窗口实例\n    let windowName = LibC.mallocCString('Cangjie')\n    let window = CreateWindowExA(\n        0,                                   // 扩展样式\n        className,                           // 窗口类名\n        windowName,                          // 窗口标题\n        WS_OVERLAPPEDWINDOW,                 // 窗口风格\n        CW_USEDEFAULT, CW_USEDEFAULT,        // 窗口位置\n        640, 480,                            // 窗口大小\n        NULL,                                // 父窗口句柄\n        NULL,                                // 菜单句柄\n        instance,                            // 实例句柄\n        NULL                                 // 附加参数\n    )\n    if (window.isNull()) {\n        println('CreateWindow Failed: ${GetLastError()}')\n        return\n    }\n    // 显示窗口\n    ShowWindow(window, SW_SHOWNORMAL)\n    UpdateWindow(window)\n    // 启动消息循环\n    var message = MSG()\n    while (GetMessageA(inout message, NULL, 0, 0)) {\n        TranslateMessage(inout message)\n        DispatchMessageA(inout message)\n    }\n    // 退出消息循环\n    println('Out of Message Loop')\n    LibC.free(className)\n    LibC.free(windowName)\n}",
                    "start_token": 0,
                    "end_token": 0,
                    "children": [
                        {
                            "type": "variableDeclaration",
                            "label": "let instance = GetModuleHandleA(EMPTY_STRING)",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "LET",
                                    "label": "let",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "varBindingPattern",
                                    "label": "instance",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "callExpression",
                                    "label": "GetModuleHandleA(EMPTY_STRING)",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "GetModuleHandleA",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        },
                                        {
                                            "type": "argumentList",
                                            "label": "(EMPTY_STRING)",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "EMPTY_STRING",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "// 注册窗口类",
                            "start_token": 0,
                            "end_token": 0,
                            "children": []
                        },
                        {
                            "type": "variableDeclaration",
                            "label": "let className = LibC.mallocCString('Cangjie Window')",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "LET",
                                    "label": "let",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "varBindingPattern",
                                    "label": "className",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "callExpression",
                                    "label": "LibC.mallocCString('Cangjie Window')",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "fieldExpression",
                                            "label": "LibC.mallocCString",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "LibC",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "mallocCString",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argumentList",
                                            "label": "('Cangjie Window')",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "characterLiteral",
                                                    "label": "'Cangjie Window'",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": [
                                                        {
                                                            "type": "ERROR",
                                                            "label": "angjie Window",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "ERROR",
                                                                    "label": "angjie W",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "IN",
                                                                    "label": "in",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "DO",
                                                                    "label": "do",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "ERROR",
                                                                    "label": "w",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "variableDeclaration",
                            "label": "var windowClass = WNDCLASSEX(lpszClassName: className,\n        hInstance: instance,\n        lpfnWndProc: onMessage,\n        hbrBackground: CreateSolidBrush(0x0095D6C0) // 中国传统色 欧碧\n    )",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "VAR",
                                    "label": "var",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "varBindingPattern",
                                    "label": "windowClass",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "callExpression",
                                    "label": "WNDCLASSEX(lpszClassName: className,\n        hInstance: instance,\n        lpfnWndProc: onMessage,\n        hbrBackground: CreateSolidBrush(0x0095D6C0) // 中国传统色 欧碧\n    )",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "WNDCLASSEX",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        },
                                        {
                                            "type": "argumentList",
                                            "label": "(lpszClassName: className,\n        hInstance: instance,\n        lpfnWndProc: onMessage,\n        hbrBackground: CreateSolidBrush(0x0095D6C0) // 中国传统色 欧碧\n    )",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "lpszClassName",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "className",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "hInstance",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "instance",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "lpfnWndProc",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "onMessage",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "hbrBackground",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "callExpression",
                                                    "label": "CreateSolidBrush(0x0095D6C0)",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "CreateSolidBrush",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argumentList",
                                                            "label": "(0x0095D6C0)",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "integerLiteral",
                                                                    "label": "0x0095D6C0",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "comment",
                                                    "label": "// 中国传统色 欧碧",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "ifExpression",
                            "label": "if (RegisterClassExA(inout windowClass) == 0) {\n        println('RegisterClass Failed: ${GetLastError()}')\n        return\n    }",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "IF",
                                    "label": "if",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "binaryExpression",
                                    "label": "RegisterClassExA(inout windowClass) == 0",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "callExpression",
                                            "label": "RegisterClassExA(inout windowClass)",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "RegisterClassExA",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "argumentList",
                                                    "label": "(inout windowClass)",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": [
                                                        {
                                                            "type": "INOUT",
                                                            "label": "inout",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "windowClass",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "integerLiteral",
                                            "label": "0",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": " {\n        println('RegisterClass Failed: ${GetLastError()}')\n        return\n    }",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "ERROR",
                                            "label": "println('RegisterClass Failed: ${GetLastError()}')\n        return",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "builtinFunction",
                                                    "label": "println",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "ERROR",
                                                    "label": "'RegisterClass Failed: ${GetLastError()}",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": [
                                                        {
                                                            "type": "ERROR",
                                                            "label": "eg",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "IS",
                                                            "label": "is",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "ERROR",
                                                            "label": "terCl",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "AS",
                                                            "label": "as",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "ERROR",
                                                            "label": "s Failed",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "ERROR",
                                                            "label": "GetL",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "AS",
                                                            "label": "as",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "ERROR",
                                                            "label": "tError",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "unitLiteral",
                                                            "label": "()",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "RETURN",
                                                    "label": "        return",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "// 创建窗口实例",
                            "start_token": 0,
                            "end_token": 0,
                            "children": []
                        },
                        {
                            "type": "variableDeclaration",
                            "label": "let windowName = LibC.mallocCString('Cangjie')",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "LET",
                                    "label": "let",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "varBindingPattern",
                                    "label": "windowName",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "callExpression",
                                    "label": "LibC.mallocCString('Cangjie')",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "fieldExpression",
                                            "label": "LibC.mallocCString",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "LibC",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "mallocCString",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argumentList",
                                            "label": "('Cangjie')",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "characterLiteral",
                                                    "label": "'Cangjie'",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": [
                                                        {
                                                            "type": "ERROR",
                                                            "label": "angjie",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "ERROR",
                                                                    "label": "angjie",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "variableDeclaration",
                            "label": "let window = CreateWindowExA(\n        0,                                   // 扩展样式\n        className,                           // 窗口类名\n        windowName,                          // 窗口标题\n        WS_OVERLAPPEDWINDOW,                 // 窗口风格\n        CW_USEDEFAULT, CW_USEDEFAULT,        // 窗口位置\n        640, 480,                            // 窗口大小\n        NULL,                                // 父窗口句柄\n        NULL,                                // 菜单句柄\n        instance,                            // 实例句柄\n        NULL                                 // 附加参数\n    )",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "LET",
                                    "label": "let",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "varBindingPattern",
                                    "label": "window",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "callExpression",
                                    "label": "CreateWindowExA(\n        0,                                   // 扩展样式\n        className,                           // 窗口类名\n        windowName,                          // 窗口标题\n        WS_OVERLAPPEDWINDOW,                 // 窗口风格\n        CW_USEDEFAULT, CW_USEDEFAULT,        // 窗口位置\n        640, 480,                            // 窗口大小\n        NULL,                                // 父窗口句柄\n        NULL,                                // 菜单句柄\n        instance,                            // 实例句柄\n        NULL                                 // 附加参数\n    )",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "CreateWindowExA",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        },
                                        {
                                            "type": "argumentList",
                                            "label": "(\n        0,                                   // 扩展样式\n        className,                           // 窗口类名\n        windowName,                          // 窗口标题\n        WS_OVERLAPPEDWINDOW,                 // 窗口风格\n        CW_USEDEFAULT, CW_USEDEFAULT,        // 窗口位置\n        640, 480,                            // 窗口大小\n        NULL,                                // 父窗口句柄\n        NULL,                                // 菜单句柄\n        instance,                            // 实例句柄\n        NULL                                 // 附加参数\n    )",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "integerLiteral",
                                                    "label": "0",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "comment",
                                                    "label": "// 扩展样式",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "className",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "comment",
                                                    "label": "// 窗口类名",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "windowName",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "comment",
                                                    "label": "// 窗口标题",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "WS_OVERLAPPEDWINDOW",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "comment",
                                                    "label": "// 窗口风格",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "CW_USEDEFAULT",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "CW_USEDEFAULT",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "comment",
                                                    "label": "// 窗口位置",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "integerLiteral",
                                                    "label": "640",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "integerLiteral",
                                                    "label": "480",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "comment",
                                                    "label": "// 窗口大小",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "NULL",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "comment",
                                                    "label": "// 父窗口句柄",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "NULL",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "comment",
                                                    "label": "// 菜单句柄",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "instance",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "comment",
                                                    "label": "// 实例句柄",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "NULL",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "comment",
                                                    "label": "// 附加参数",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "ifExpression",
                            "label": "if (window.isNull()) {\n        println('CreateWindow Failed: ${GetLastError()}')\n        return\n    }",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "IF",
                                    "label": "if",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "callExpression",
                                    "label": "window.isNull()",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "fieldExpression",
                                            "label": "window.isNull",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "window",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "isNull",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argumentList",
                                            "label": "()",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": " {\n        println('CreateWindow Failed: ${GetLastError()}')\n        return\n    }",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "ERROR",
                                            "label": "println('CreateWindow Failed: ${GetLastError()}')\n        return",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "builtinFunction",
                                                    "label": "println",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "ERROR",
                                                    "label": "'CreateWindow Failed: ${GetLastError()}",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": [
                                                        {
                                                            "type": "ERROR",
                                                            "label": "reateW",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "IN",
                                                            "label": "in",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "DO",
                                                            "label": "do",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "ERROR",
                                                            "label": "w Failed",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "ERROR",
                                                            "label": "GetL",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "AS",
                                                            "label": "as",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "ERROR",
                                                            "label": "tError",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "unitLiteral",
                                                            "label": "()",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "RETURN",
                                                    "label": "        return",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "// 显示窗口",
                            "start_token": 0,
                            "end_token": 0,
                            "children": []
                        },
                        {
                            "type": "callExpression",
                            "label": "ShowWindow(window, SW_SHOWNORMAL)",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "ShowWindow",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "argumentList",
                                    "label": "(window, SW_SHOWNORMAL)",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "window",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "SW_SHOWNORMAL",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "callExpression",
                            "label": "UpdateWindow(window)",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "UpdateWindow",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "argumentList",
                                    "label": "(window)",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "window",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "// 启动消息循环",
                            "start_token": 0,
                            "end_token": 0,
                            "children": []
                        },
                        {
                            "type": "variableDeclaration",
                            "label": "var message = MSG()",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "VAR",
                                    "label": "var",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "varBindingPattern",
                                    "label": "message",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "callExpression",
                                    "label": "MSG()",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "MSG",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        },
                                        {
                                            "type": "argumentList",
                                            "label": "()",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "whileExpression",
                            "label": "while (GetMessageA(inout message, NULL, 0, 0)) {\n        TranslateMessage(inout message)\n        DispatchMessageA(inout message)\n    }",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "WHILE",
                                    "label": "while",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "callExpression",
                                    "label": "GetMessageA(inout message, NULL, 0, 0)",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "GetMessageA",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        },
                                        {
                                            "type": "argumentList",
                                            "label": "(inout message, NULL, 0, 0)",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "INOUT",
                                                    "label": "inout",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "message",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "NULL",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "integerLiteral",
                                                    "label": "0",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "integerLiteral",
                                                    "label": "0",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": " {\n        TranslateMessage(inout message)\n        DispatchMessageA(inout message)\n    }",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "callExpression",
                                            "label": "TranslateMessage(inout message)",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "TranslateMessage",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "argumentList",
                                                    "label": "(inout message)",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": [
                                                        {
                                                            "type": "INOUT",
                                                            "label": "inout",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "message",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "callExpression",
                                            "label": "DispatchMessageA(inout message)",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "DispatchMessageA",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "argumentList",
                                                    "label": "(inout message)",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": [
                                                        {
                                                            "type": "INOUT",
                                                            "label": "inout",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "message",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "// 退出消息循环",
                            "start_token": 0,
                            "end_token": 0,
                            "children": []
                        },
                        {
                            "type": "callExpression",
                            "label": "println('Out of Message Loop')",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "builtinFunction",
                                    "label": "println",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "argumentList",
                                    "label": "('Out of Message Loop')",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "characterLiteral",
                                            "label": "'Out of Message Loop'",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "ERROR",
                                                    "label": "ut of Message Loop",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": [
                                                        {
                                                            "type": "ERROR",
                                                            "label": "ut of Message Loop",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "callExpression",
                            "label": "LibC.free(className)",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "fieldExpression",
                                    "label": "LibC.free",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "LibC",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "free",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argumentList",
                                    "label": "(className)",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "className",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "callExpression",
                            "label": "LibC.free(windowName)",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "fieldExpression",
                                    "label": "LibC.free",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "LibC",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "free",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argumentList",
                                    "label": "(windowName)",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "windowName",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "macroExpression",
            "label": "@C\n@CallingConv[STDCALL]\nfunc onMessage(hWnd: Handle, msg: UInt32, wParam: UIntNative, lParam: UIntNative): Int64 {\n    var result = 0\n    const VK_ESCAPE: UInt16 = 0x1B\n    if (msg == WM_KEYDOWN && wParam == UIntNative(VK_ESCAPE)) {\n        unsafe { DestroyWindow(hWnd) }\n    } else if (msg == WM_DESTROY) {\n        unsafe { PostQuitMessage(0) }\n    }\n    result = unsafe { DefWindowProcA(hWnd, msg, wParam, lParam) }\n    return result\n}",
            "start_token": 0,
            "end_token": -1,
            "children": [
                {
                    "type": "identifier",
                    "label": "C",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "macroInputExprWithoutParens",
                    "label": "@CallingConv[STDCALL]\nfunc onMessage(hWnd: Handle, msg: UInt32, wParam: UIntNative, lParam: UIntNative): Int64 {\n    var result = 0\n    const VK_ESCAPE: UInt16 = 0x1B\n    if (msg == WM_KEYDOWN && wParam == UIntNative(VK_ESCAPE)) {\n        unsafe { DestroyWindow(hWnd) }\n    } else if (msg == WM_DESTROY) {\n        unsafe { PostQuitMessage(0) }\n    }\n    result = unsafe { DefWindowProcA(hWnd, msg, wParam, lParam) }\n    return result\n}",
                    "start_token": 0,
                    "end_token": -1,
                    "children": [
                        {
                            "type": "macroExpression",
                            "label": "@CallingConv[STDCALL]\nfunc onMessage(hWnd: Handle, msg: UInt32, wParam: UIntNative, lParam: UIntNative): Int64 {\n    var result = 0\n    const VK_ESCAPE: UInt16 = 0x1B\n    if (msg == WM_KEYDOWN && wParam == UIntNative(VK_ESCAPE)) {\n        unsafe { DestroyWindow(hWnd) }\n    } else if (msg == WM_DESTROY) {\n        unsafe { PostQuitMessage(0) }\n    }\n    result = unsafe { DefWindowProcA(hWnd, msg, wParam, lParam) }\n    return result\n}",
                            "start_token": 0,
                            "end_token": -1,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "CallingConv",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "macroAttrExpr",
                                    "label": "[STDCALL]",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "quoteToken",
                                            "label": "STDCALL",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "STDCALL",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "macroInputExprWithoutParens",
                                    "label": "func onMessage(hWnd: Handle, msg: UInt32, wParam: UIntNative, lParam: UIntNative): Int64 {\n    var result = 0\n    const VK_ESCAPE: UInt16 = 0x1B\n    if (msg == WM_KEYDOWN && wParam == UIntNative(VK_ESCAPE)) {\n        unsafe { DestroyWindow(hWnd) }\n    } else if (msg == WM_DESTROY) {\n        unsafe { PostQuitMessage(0) }\n    }\n    result = unsafe { DefWindowProcA(hWnd, msg, wParam, lParam) }\n    return result\n}",
                                    "start_token": 0,
                                    "end_token": -1,
                                    "children": [
                                        {
                                            "type": "functionDefinition",
                                            "label": "func onMessage(hWnd: Handle, msg: UInt32, wParam: UIntNative, lParam: UIntNative): Int64 {\n    var result = 0\n    const VK_ESCAPE: UInt16 = 0x1B\n    if (msg == WM_KEYDOWN && wParam == UIntNative(VK_ESCAPE)) {\n        unsafe { DestroyWindow(hWnd) }\n    } else if (msg == WM_DESTROY) {\n        unsafe { PostQuitMessage(0) }\n    }\n    result = unsafe { DefWindowProcA(hWnd, msg, wParam, lParam) }\n    return result\n}",
                                            "start_token": 0,
                                            "end_token": -1,
                                            "children": [
                                                {
                                                    "type": "FUNC",
                                                    "label": "func",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "onMessage",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "functionParameters",
                                                    "label": "(hWnd: Handle, msg: UInt32, wParam: UIntNative, lParam: UIntNative)",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": [
                                                        {
                                                            "type": "parameterList",
                                                            "label": "hWnd: Handle, msg: UInt32, wParam: UIntNative, lParam: UIntNative",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "parameter",
                                                                    "label": "hWnd: Handle",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "hWnd",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "userType",
                                                                            "label": "Handle",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "Handle",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "parameter",
                                                                    "label": "msg: UInt32",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "msg",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "charLangTypes",
                                                                            "label": "UInt32",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "parameter",
                                                                    "label": "wParam: UIntNative",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "wParam",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "charLangTypes",
                                                                            "label": "UIntNative",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": [
                                                                                {
                                                                                    "type": "UINTNATIVE",
                                                                                    "label": "UIntNative",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "parameter",
                                                                    "label": "lParam: UIntNative",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "lParam",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "charLangTypes",
                                                                            "label": "UIntNative",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": [
                                                                                {
                                                                                    "type": "UINTNATIVE",
                                                                                    "label": "UIntNative",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "charLangTypes",
                                                    "label": "Int64",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "label": "{\n    var result = 0\n    const VK_ESCAPE: UInt16 = 0x1B\n    if (msg == WM_KEYDOWN && wParam == UIntNative(VK_ESCAPE)) {\n        unsafe { DestroyWindow(hWnd) }\n    } else if (msg == WM_DESTROY) {\n        unsafe { PostQuitMessage(0) }\n    }\n    result = unsafe { DefWindowProcA(hWnd, msg, wParam, lParam) }\n    return result\n}",
                                                    "start_token": 0,
                                                    "end_token": -1,
                                                    "children": [
                                                        {
                                                            "type": "variableDeclaration",
                                                            "label": "var result = 0",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "VAR",
                                                                    "label": "var",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "varBindingPattern",
                                                                    "label": "result",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "integerLiteral",
                                                                    "label": "0",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "variableDeclaration",
                                                            "label": "const VK_ESCAPE: UInt16 = 0x1B",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "CONST",
                                                                    "label": "const",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "varBindingPattern",
                                                                    "label": "VK_ESCAPE",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "charLangTypes",
                                                                    "label": "UInt16",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "integerLiteral",
                                                                    "label": "0x1B",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "ifExpression",
                                                            "label": "if (msg == WM_KEYDOWN && wParam == UIntNative(VK_ESCAPE)) {\n        unsafe { DestroyWindow(hWnd) }\n    } else if (msg == WM_DESTROY) {\n        unsafe { PostQuitMessage(0) }\n    }",
                                                            "start_token": 0,
                                                            "end_token": -1,
                                                            "children": [
                                                                {
                                                                    "type": "IF",
                                                                    "label": "if",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "binaryExpression",
                                                                    "label": "msg == WM_KEYDOWN && wParam == UIntNative(VK_ESCAPE)",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "binaryExpression",
                                                                            "label": "msg == WM_KEYDOWN",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "msg",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "WM_KEYDOWN",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "binaryExpression",
                                                                            "label": "wParam == UIntNative(VK_ESCAPE)",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "wParam",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "callExpression",
                                                                                    "label": "UIntNative(VK_ESCAPE)",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "UIntNative",
                                                                                            "start_token": 0,
                                                                                            "end_token": 0,
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argumentList",
                                                                                            "label": "(VK_ESCAPE)",
                                                                                            "start_token": 0,
                                                                                            "end_token": 0,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "VK_ESCAPE",
                                                                                                    "start_token": 0,
                                                                                                    "end_token": 0,
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": " {\n        unsafe { DestroyWindow(hWnd) }\n    }",
                                                                    "start_token": 0,
                                                                    "end_token": -1,
                                                                    "children": [
                                                                        {
                                                                            "type": "unsafeExpression",
                                                                            "label": "unsafe { DestroyWindow(hWnd) }",
                                                                            "start_token": 0,
                                                                            "end_token": -1,
                                                                            "children": [
                                                                                {
                                                                                    "type": "UNSAFE",
                                                                                    "label": "unsafe",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "block",
                                                                                    "label": " { DestroyWindow(hWnd) }",
                                                                                    "start_token": 0,
                                                                                    "end_token": -1,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "callExpression",
                                                                                            "label": "DestroyWindow(hWnd)",
                                                                                            "start_token": 0,
                                                                                            "end_token": -1,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "DestroyWindow",
                                                                                                    "start_token": 0,
                                                                                                    "end_token": 0,
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argumentList",
                                                                                                    "label": "(hWnd)",
                                                                                                    "start_token": 0,
                                                                                                    "end_token": -1,
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "hWnd",
                                                                                                            "start_token": 0,
                                                                                                            "end_token": -1,
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "ELSE",
                                                                    "label": "else",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "ifExpression",
                                                                    "label": " if (msg == WM_DESTROY) {\n        unsafe { PostQuitMessage(0) }\n    }",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "children": [
                                                                        {
                                                                            "type": "IF",
                                                                            "label": " if",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "binaryExpression",
                                                                            "label": "msg == WM_DESTROY",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "msg",
                                                                                    "start_token": -1,
                                                                                    "end_token": -1,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "WM_DESTROY",
                                                                                    "start_token": -1,
                                                                                    "end_token": -1,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "block",
                                                                            "label": " {\n        unsafe { PostQuitMessage(0) }\n    }",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "children": [
                                                                                {
                                                                                    "type": "unsafeExpression",
                                                                                    "label": "unsafe { PostQuitMessage(0) }",
                                                                                    "start_token": -1,
                                                                                    "end_token": -1,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "UNSAFE",
                                                                                            "label": "unsafe",
                                                                                            "start_token": -1,
                                                                                            "end_token": -1,
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "block",
                                                                                            "label": " { PostQuitMessage(0) }",
                                                                                            "start_token": -1,
                                                                                            "end_token": -1,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "callExpression",
                                                                                                    "label": "PostQuitMessage(0)",
                                                                                                    "start_token": -1,
                                                                                                    "end_token": -1,
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "PostQuitMessage",
                                                                                                            "start_token": -1,
                                                                                                            "end_token": -1,
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argumentList",
                                                                                                            "label": "(0)",
                                                                                                            "start_token": -1,
                                                                                                            "end_token": -1,
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "integerLiteral",
                                                                                                                    "label": "0",
                                                                                                                    "start_token": -1,
                                                                                                                    "end_token": -1,
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "assignmentExpression",
                                                            "label": "result = unsafe { DefWindowProcA(hWnd, msg, wParam, lParam) }",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "result",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "unsafeExpression",
                                                                    "label": "unsafe { DefWindowProcA(hWnd, msg, wParam, lParam) }",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "children": [
                                                                        {
                                                                            "type": "UNSAFE",
                                                                            "label": "unsafe",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "block",
                                                                            "label": " { DefWindowProcA(hWnd, msg, wParam, lParam) }",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "children": [
                                                                                {
                                                                                    "type": "callExpression",
                                                                                    "label": "DefWindowProcA(hWnd, msg, wParam, lParam)",
                                                                                    "start_token": -1,
                                                                                    "end_token": -1,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "DefWindowProcA",
                                                                                            "start_token": -1,
                                                                                            "end_token": -1,
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "argumentList",
                                                                                            "label": "(hWnd, msg, wParam, lParam)",
                                                                                            "start_token": -1,
                                                                                            "end_token": -1,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "hWnd",
                                                                                                    "start_token": -1,
                                                                                                    "end_token": -1,
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "msg",
                                                                                                    "start_token": -1,
                                                                                                    "end_token": -1,
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "wParam",
                                                                                                    "start_token": -1,
                                                                                                    "end_token": -1,
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "lParam",
                                                                                                    "start_token": -1,
                                                                                                    "end_token": -1,
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "returnExpression",
                                                            "label": "return result",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "children": [
                                                                {
                                                                    "type": "RETURN",
                                                                    "label": "return",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "result",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}