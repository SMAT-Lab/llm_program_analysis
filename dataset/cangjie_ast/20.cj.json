{
    "type": "sourceFile",
    "label": "macro package cj_easy_data.macros\n\nimport std.ast.*\nimport std.collection.*\n\nconst NO_TO_STRING = \"NoToString\"\n//加在类上\npublic macro ToStringClass(input: Tokens): Tokens {\n    var classDecl = getClassDecl(input)\n    return addToString(classDecl).toTokens()\n}\n//加在字段上,避免没有toString方法的类编译错误\npublic macro NoToString(input: Tokens): Tokens {\n    //当判断外部宏不存在Data或ToStringClass注解时会报错\n    if (!insideParentContext(\"Data\") && !insideParentContext(\"ToStringClass\")) {\n            throw MacroContextException (\"NoToString need Data or ToStringClass\")\n    }\n    let decl = VarDecl(input)\n    setItem(decl.identifier.value, true)\n    return input\n}\n\n//添加toString方法\nfunc addToString(clazz: ClassDecl): ClassDecl {\n    let types = clazz.superTypes\n    if (!isSuperToString(types)) {\n        if (clazz.upperBound.value != \"<:\") {\n            clazz.upperBound = Token(UPPERBOUND, \"<:\")\n        }\n        types.append(RefType(quote(ToString)))\n    }\n    if (isFuncToString(clazz)) {\n        return clazz\n    }\n    var sb = StringBuilder()\n    //接受内部宏NoToString消息\n    let msg = getChildMessages(NO_TO_STRING)\n    for (d in clazz.body.decls) {\n        if (isFunc(d.keyword)) {\n            continue;\n        }\n        var kind = match (d) {\n            case m: MacroExpandDecl =>\n                let vd = (m.macroInputDecl as VarDecl).getOrThrow()\n                Some(vd.identifier.value)\n            case v: VarDecl => Some(v.identifier.value)\n            case _ => None<String>\n        }\n\n        if (let Some(value) <- kind) {\n            let hasKey = msg |> any {m => m.hasItem(value)}\n            if (!hasKey) {\n                sb.append(\"${value}:\\${${value}},\")\n            }\n        }\n    }\n    let str = sb.toString().trimRight(\",\")\n    let funDecl = FuncDecl(quote(public func toString():String{\n        return $(str)\n    }))\n    clazz.body.decls.append(funDecl)\n    return clazz\n}\n\nfunc isFuncToString(clazz: ClassDecl): Bool {\n    return clazz.body.decls |> filter {d => isFunc(d.keyword)} |> any {\n        d => d.identifier.value == \"toString\"\n    }\n}\n\nfunc isSuperToString(superTypes: ArrayList<TypeNode>): Bool {\n    return superTypes |>\n        any {x: TypeNode => x is RefType && (x as RefType).getOrThrow().identifier.value.indexOf(\"ToString\") != None}\n}\n",
    "start_token": 0,
    "end_token": -1,
    "children": [
        {
            "type": "packageHeader",
            "label": "macro package cj_easy_data.macros",
            "start_token": 0,
            "end_token": 4,
            "children": [
                {
                    "type": "MACRO",
                    "label": "macro",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "PACKAGE",
                    "label": " package",
                    "start_token": -1,
                    "end_token": 1,
                    "children": []
                },
                {
                    "type": "packageNameIdentifier",
                    "label": "cj_easy_data.macros",
                    "start_token": 2,
                    "end_token": 4,
                    "children": [
                        {
                            "type": "identifier",
                            "label": "cj_easy_data",
                            "start_token": 2,
                            "end_token": 2,
                            "children": []
                        },
                        {
                            "type": "identifier",
                            "label": "macros",
                            "start_token": 4,
                            "end_token": 4,
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "importList",
            "label": "import std.ast.*",
            "start_token": 7,
            "end_token": 12,
            "children": [
                {
                    "type": "IMPORT",
                    "label": "import",
                    "start_token": 7,
                    "end_token": 7,
                    "children": []
                },
                {
                    "type": "importContent",
                    "label": "std.ast.*",
                    "start_token": 8,
                    "end_token": 12,
                    "children": [
                        {
                            "type": "importAll",
                            "label": "std.ast.*",
                            "start_token": 8,
                            "end_token": 12,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "std",
                                    "start_token": 8,
                                    "end_token": 8,
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "ast",
                                    "start_token": 10,
                                    "end_token": 10,
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "importList",
            "label": "import std.collection.*",
            "start_token": 14,
            "end_token": 19,
            "children": [
                {
                    "type": "IMPORT",
                    "label": "import",
                    "start_token": 14,
                    "end_token": 14,
                    "children": []
                },
                {
                    "type": "importContent",
                    "label": "std.collection.*",
                    "start_token": 15,
                    "end_token": 19,
                    "children": [
                        {
                            "type": "importAll",
                            "label": "std.collection.*",
                            "start_token": 15,
                            "end_token": 19,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "std",
                                    "start_token": 15,
                                    "end_token": 15,
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "collection",
                                    "start_token": 17,
                                    "end_token": 17,
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "variableDeclaration",
            "label": "const NO_TO_STRING = \"NoToString\"",
            "start_token": 22,
            "end_token": 25,
            "children": [
                {
                    "type": "CONST",
                    "label": "const",
                    "start_token": 22,
                    "end_token": 22,
                    "children": []
                },
                {
                    "type": "varBindingPattern",
                    "label": "NO_TO_STRING",
                    "start_token": 23,
                    "end_token": 23,
                    "children": []
                },
                {
                    "type": "stringLiteral",
                    "label": "\"NoToString\"",
                    "start_token": 25,
                    "end_token": 25,
                    "children": [
                        {
                            "type": "lineStringLiteral",
                            "label": "\"NoToString\"",
                            "start_token": 25,
                            "end_token": 25,
                            "children": [
                                {
                                    "type": "quoteOpen",
                                    "label": "\"",
                                    "start_token": 25,
                                    "end_token": 25,
                                    "children": []
                                },
                                {
                                    "type": "lineStringContent",
                                    "label": "NoToString",
                                    "start_token": 25,
                                    "end_token": 25,
                                    "children": []
                                },
                                {
                                    "type": "quoteClose",
                                    "label": "\"",
                                    "start_token": 25,
                                    "end_token": 25,
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "comment",
            "label": "//加在类上",
            "start_token": 27,
            "end_token": 27,
            "children": []
        },
        {
            "type": "macroDefinition",
            "label": "public macro ToStringClass(input: Tokens): Tokens {\n    var classDecl = getClassDecl(input)\n    return addToString(classDecl).toTokens()\n}",
            "start_token": 27,
            "end_token": 27,
            "children": [
                {
                    "type": "PUBLIC",
                    "label": "public",
                    "start_token": 27,
                    "end_token": 27,
                    "children": []
                },
                {
                    "type": "MACRO",
                    "label": "macro",
                    "start_token": 27,
                    "end_token": 27,
                    "children": []
                },
                {
                    "type": "identifier",
                    "label": "ToStringClass",
                    "start_token": 27,
                    "end_token": 27,
                    "children": []
                },
                {
                    "type": "macroWithoutAttrParam",
                    "label": "(input: Tokens)",
                    "start_token": 27,
                    "end_token": 27,
                    "children": [
                        {
                            "type": "macroDecl",
                            "label": "input: Tokens",
                            "start_token": 27,
                            "end_token": 27,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "input",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "Tokens",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "identifier",
                    "label": "Tokens",
                    "start_token": 27,
                    "end_token": 27,
                    "children": []
                },
                {
                    "type": "block",
                    "label": "{\n    var classDecl = getClassDecl(input)\n    return addToString(classDecl).toTokens()\n}",
                    "start_token": 27,
                    "end_token": 27,
                    "children": [
                        {
                            "type": "variableDeclaration",
                            "label": "var classDecl = getClassDecl(input)",
                            "start_token": 27,
                            "end_token": 27,
                            "children": [
                                {
                                    "type": "VAR",
                                    "label": "var",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": []
                                },
                                {
                                    "type": "varBindingPattern",
                                    "label": "classDecl",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": []
                                },
                                {
                                    "type": "callExpression",
                                    "label": "getClassDecl(input)",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "getClassDecl",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": []
                                        },
                                        {
                                            "type": "argumentList",
                                            "label": "(input)",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "input",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "returnExpression",
                            "label": "return addToString(classDecl).toTokens()",
                            "start_token": 27,
                            "end_token": 27,
                            "children": [
                                {
                                    "type": "RETURN",
                                    "label": "return",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": []
                                },
                                {
                                    "type": "callExpression",
                                    "label": "addToString(classDecl).toTokens()",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": [
                                        {
                                            "type": "fieldExpression",
                                            "label": "addToString(classDecl).toTokens",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": [
                                                {
                                                    "type": "callExpression",
                                                    "label": "addToString(classDecl)",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "addToString",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argumentList",
                                                            "label": "(classDecl)",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "classDecl",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "toTokens",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argumentList",
                                            "label": "()",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "comment",
            "label": "//加在字段上,避免没有toString方法的类编译错误",
            "start_token": 27,
            "end_token": 27,
            "children": []
        },
        {
            "type": "macroDefinition",
            "label": "public macro NoToString(input: Tokens): Tokens {\n    //当判断外部宏不存在Data或ToStringClass注解时会报错\n    if (!insideParentContext(\"Data\") && !insideParentContext(\"ToStringClass\")) {\n            throw MacroContextException (\"NoToString need Data or ToStringClass\")\n    }\n    let decl = VarDecl(input)\n    setItem(decl.identifier.value, true)\n    return input\n}",
            "start_token": 27,
            "end_token": 27,
            "children": [
                {
                    "type": "PUBLIC",
                    "label": "public",
                    "start_token": 27,
                    "end_token": 27,
                    "children": []
                },
                {
                    "type": "MACRO",
                    "label": "macro",
                    "start_token": 27,
                    "end_token": 27,
                    "children": []
                },
                {
                    "type": "identifier",
                    "label": "NoToString",
                    "start_token": 27,
                    "end_token": 27,
                    "children": []
                },
                {
                    "type": "macroWithoutAttrParam",
                    "label": "(input: Tokens)",
                    "start_token": 27,
                    "end_token": 27,
                    "children": [
                        {
                            "type": "macroDecl",
                            "label": "input: Tokens",
                            "start_token": 27,
                            "end_token": 27,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "input",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "Tokens",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": []
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "identifier",
                    "label": "Tokens",
                    "start_token": 27,
                    "end_token": 27,
                    "children": []
                },
                {
                    "type": "block",
                    "label": "{\n    //当判断外部宏不存在Data或ToStringClass注解时会报错\n    if (!insideParentContext(\"Data\") && !insideParentContext(\"ToStringClass\")) {\n            throw MacroContextException (\"NoToString need Data or ToStringClass\")\n    }\n    let decl = VarDecl(input)\n    setItem(decl.identifier.value, true)\n    return input\n}",
                    "start_token": 27,
                    "end_token": 27,
                    "children": [
                        {
                            "type": "comment",
                            "label": "//当判断外部宏不存在Data或ToStringClass注解时会报错",
                            "start_token": 27,
                            "end_token": 27,
                            "children": []
                        },
                        {
                            "type": "ifExpression",
                            "label": "if (!insideParentContext(\"Data\") && !insideParentContext(\"ToStringClass\")) {\n            throw MacroContextException (\"NoToString need Data or ToStringClass\")\n    }",
                            "start_token": 27,
                            "end_token": 27,
                            "children": [
                                {
                                    "type": "IF",
                                    "label": "if",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": []
                                },
                                {
                                    "type": "binaryExpression",
                                    "label": "!insideParentContext(\"Data\") && !insideParentContext(\"ToStringClass\")",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": [
                                        {
                                            "type": "unaryExpression",
                                            "label": "!insideParentContext(\"Data\")",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": [
                                                {
                                                    "type": "callExpression",
                                                    "label": "insideParentContext(\"Data\")",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "insideParentContext",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argumentList",
                                                            "label": "(\"Data\")",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": [
                                                                {
                                                                    "type": "stringLiteral",
                                                                    "label": "\"Data\"",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": [
                                                                        {
                                                                            "type": "lineStringLiteral",
                                                                            "label": "\"Data\"",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": [
                                                                                {
                                                                                    "type": "quoteOpen",
                                                                                    "label": "\"",
                                                                                    "start_token": 27,
                                                                                    "end_token": 27,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "lineStringContent",
                                                                                    "label": "Data",
                                                                                    "start_token": 27,
                                                                                    "end_token": 27,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "quoteClose",
                                                                                    "label": "\"",
                                                                                    "start_token": 27,
                                                                                    "end_token": 27,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "unaryExpression",
                                            "label": "!insideParentContext(\"ToStringClass\")",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": [
                                                {
                                                    "type": "callExpression",
                                                    "label": "insideParentContext(\"ToStringClass\")",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "insideParentContext",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argumentList",
                                                            "label": "(\"ToStringClass\")",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": [
                                                                {
                                                                    "type": "stringLiteral",
                                                                    "label": "\"ToStringClass\"",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": [
                                                                        {
                                                                            "type": "lineStringLiteral",
                                                                            "label": "\"ToStringClass\"",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": [
                                                                                {
                                                                                    "type": "quoteOpen",
                                                                                    "label": "\"",
                                                                                    "start_token": 27,
                                                                                    "end_token": 27,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "lineStringContent",
                                                                                    "label": "ToStringClass",
                                                                                    "start_token": 27,
                                                                                    "end_token": 27,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "quoteClose",
                                                                                    "label": "\"",
                                                                                    "start_token": 27,
                                                                                    "end_token": 27,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": " {\n            throw MacroContextException (\"NoToString need Data or ToStringClass\")\n    }",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": [
                                        {
                                            "type": "throwExpression",
                                            "label": "throw MacroContextException (\"NoToString need Data or ToStringClass\")",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": [
                                                {
                                                    "type": "THROW",
                                                    "label": "throw",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": []
                                                },
                                                {
                                                    "type": "callExpression",
                                                    "label": "MacroContextException (\"NoToString need Data or ToStringClass\")",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "MacroContextException",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argumentList",
                                                            "label": "(\"NoToString need Data or ToStringClass\")",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": [
                                                                {
                                                                    "type": "stringLiteral",
                                                                    "label": "\"NoToString need Data or ToStringClass\"",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": [
                                                                        {
                                                                            "type": "lineStringLiteral",
                                                                            "label": "\"NoToString need Data or ToStringClass\"",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": [
                                                                                {
                                                                                    "type": "quoteOpen",
                                                                                    "label": "\"",
                                                                                    "start_token": 27,
                                                                                    "end_token": 27,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "lineStringContent",
                                                                                    "label": "NoToString need Data or ToStringClass",
                                                                                    "start_token": 27,
                                                                                    "end_token": 27,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "quoteClose",
                                                                                    "label": "\"",
                                                                                    "start_token": 27,
                                                                                    "end_token": 27,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "variableDeclaration",
                            "label": "let decl = VarDecl(input)",
                            "start_token": 27,
                            "end_token": 27,
                            "children": [
                                {
                                    "type": "LET",
                                    "label": "let",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": []
                                },
                                {
                                    "type": "varBindingPattern",
                                    "label": "decl",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": []
                                },
                                {
                                    "type": "callExpression",
                                    "label": "VarDecl(input)",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "VarDecl",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": []
                                        },
                                        {
                                            "type": "argumentList",
                                            "label": "(input)",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "input",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "callExpression",
                            "label": "setItem(decl.identifier.value, true)",
                            "start_token": 27,
                            "end_token": 27,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "setItem",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": []
                                },
                                {
                                    "type": "argumentList",
                                    "label": "(decl.identifier.value, true)",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": [
                                        {
                                            "type": "fieldExpression",
                                            "label": "decl.identifier.value",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": [
                                                {
                                                    "type": "fieldExpression",
                                                    "label": "decl.identifier",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "decl",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "identifier",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "value",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "booleanLiteral",
                                            "label": "true",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": [
                                                {
                                                    "type": "TRUE",
                                                    "label": "true",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "returnExpression",
                            "label": "return input",
                            "start_token": 27,
                            "end_token": 27,
                            "children": [
                                {
                                    "type": "RETURN",
                                    "label": "return",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "input",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "comment",
            "label": "//添加toString方法",
            "start_token": 27,
            "end_token": 27,
            "children": []
        },
        {
            "type": "functionDefinition",
            "label": "func addToString(clazz: ClassDecl): ClassDecl {\n    let types = clazz.superTypes\n    if (!isSuperToString(types)) {\n        if (clazz.upperBound.value != \"<:\") {\n            clazz.upperBound = Token(UPPERBOUND, \"<:\")\n        }\n        types.append(RefType(quote(ToString)))\n    }\n    if (isFuncToString(clazz)) {\n        return clazz\n    }\n    var sb = StringBuilder()\n    //接受内部宏NoToString消息\n    let msg = getChildMessages(NO_TO_STRING)\n    for (d in clazz.body.decls) {\n        if (isFunc(d.keyword)) {\n            continue;\n        }\n        var kind = match (d) {\n            case m: MacroExpandDecl =>\n                let vd = (m.macroInputDecl as VarDecl).getOrThrow()\n                Some(vd.identifier.value)\n            case v: VarDecl => Some(v.identifier.value)\n            case _ => None<String>\n        }\n\n        if (let Some(value) <- kind) {\n            let hasKey = msg |> any {m => m.hasItem(value)}\n            if (!hasKey) {\n                sb.append(\"${value}:\\${${value}},\")\n            }\n        }\n    }\n    let str = sb.toString().trimRight(\",\")\n    let funDecl = FuncDecl(quote(public func toString():String{\n        return $(str)\n    }))\n    clazz.body.decls.append(funDecl)\n    return clazz\n}",
            "start_token": 27,
            "end_token": 27,
            "children": [
                {
                    "type": "FUNC",
                    "label": "func",
                    "start_token": 27,
                    "end_token": 27,
                    "children": []
                },
                {
                    "type": "identifier",
                    "label": "addToString",
                    "start_token": 27,
                    "end_token": 27,
                    "children": []
                },
                {
                    "type": "functionParameters",
                    "label": "(clazz: ClassDecl)",
                    "start_token": 27,
                    "end_token": 27,
                    "children": [
                        {
                            "type": "parameterList",
                            "label": "clazz: ClassDecl",
                            "start_token": 27,
                            "end_token": 27,
                            "children": [
                                {
                                    "type": "parameter",
                                    "label": "clazz: ClassDecl",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "clazz",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": []
                                        },
                                        {
                                            "type": "userType",
                                            "label": "ClassDecl",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "ClassDecl",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "userType",
                    "label": "ClassDecl",
                    "start_token": 27,
                    "end_token": 27,
                    "children": [
                        {
                            "type": "identifier",
                            "label": "ClassDecl",
                            "start_token": 27,
                            "end_token": 27,
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "{\n    let types = clazz.superTypes\n    if (!isSuperToString(types)) {\n        if (clazz.upperBound.value != \"<:\") {\n            clazz.upperBound = Token(UPPERBOUND, \"<:\")\n        }\n        types.append(RefType(quote(ToString)))\n    }\n    if (isFuncToString(clazz)) {\n        return clazz\n    }\n    var sb = StringBuilder()\n    //接受内部宏NoToString消息\n    let msg = getChildMessages(NO_TO_STRING)\n    for (d in clazz.body.decls) {\n        if (isFunc(d.keyword)) {\n            continue;\n        }\n        var kind = match (d) {\n            case m: MacroExpandDecl =>\n                let vd = (m.macroInputDecl as VarDecl).getOrThrow()\n                Some(vd.identifier.value)\n            case v: VarDecl => Some(v.identifier.value)\n            case _ => None<String>\n        }\n\n        if (let Some(value) <- kind) {\n            let hasKey = msg |> any {m => m.hasItem(value)}\n            if (!hasKey) {\n                sb.append(\"${value}:\\${${value}},\")\n            }\n        }\n    }\n    let str = sb.toString().trimRight(\",\")\n    let funDecl = FuncDecl(quote(public func toString():String{\n        return $(str)\n    }))\n    clazz.body.decls.append(funDecl)\n    return clazz\n}",
                    "start_token": 27,
                    "end_token": 27,
                    "children": [
                        {
                            "type": "variableDeclaration",
                            "label": "let types = clazz.superTypes",
                            "start_token": 27,
                            "end_token": 27,
                            "children": [
                                {
                                    "type": "LET",
                                    "label": "let",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": []
                                },
                                {
                                    "type": "varBindingPattern",
                                    "label": "types",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": []
                                },
                                {
                                    "type": "fieldExpression",
                                    "label": "clazz.superTypes",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "clazz",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "superTypes",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "ifExpression",
                            "label": "if (!isSuperToString(types)) {\n        if (clazz.upperBound.value != \"<:\") {\n            clazz.upperBound = Token(UPPERBOUND, \"<:\")\n        }\n        types.append(RefType(quote(ToString)))\n    }",
                            "start_token": 27,
                            "end_token": 27,
                            "children": [
                                {
                                    "type": "IF",
                                    "label": "if",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": []
                                },
                                {
                                    "type": "unaryExpression",
                                    "label": "!isSuperToString(types)",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": [
                                        {
                                            "type": "callExpression",
                                            "label": "isSuperToString(types)",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "isSuperToString",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": []
                                                },
                                                {
                                                    "type": "argumentList",
                                                    "label": "(types)",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "types",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": " {\n        if (clazz.upperBound.value != \"<:\") {\n            clazz.upperBound = Token(UPPERBOUND, \"<:\")\n        }\n        types.append(RefType(quote(ToString)))\n    }",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": [
                                        {
                                            "type": "ifExpression",
                                            "label": "if (clazz.upperBound.value != \"<:\") {\n            clazz.upperBound = Token(UPPERBOUND, \"<:\")\n        }",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": [
                                                {
                                                    "type": "IF",
                                                    "label": "if",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": []
                                                },
                                                {
                                                    "type": "binaryExpression",
                                                    "label": "clazz.upperBound.value != \"<:\"",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": [
                                                        {
                                                            "type": "fieldExpression",
                                                            "label": "clazz.upperBound.value",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": [
                                                                {
                                                                    "type": "fieldExpression",
                                                                    "label": "clazz.upperBound",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "clazz",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "upperBound",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "value",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "stringLiteral",
                                                            "label": "\"<:\"",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": [
                                                                {
                                                                    "type": "lineStringLiteral",
                                                                    "label": "\"<:\"",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": [
                                                                        {
                                                                            "type": "quoteOpen",
                                                                            "label": "\"",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "lineStringContent",
                                                                            "label": "<:",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "quoteClose",
                                                                            "label": "\"",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": " {\n            clazz.upperBound = Token(UPPERBOUND, \"<:\")\n        }",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": [
                                                        {
                                                            "type": "assignmentExpression",
                                                            "label": "clazz.upperBound = Token(UPPERBOUND, \"<:\")",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": [
                                                                {
                                                                    "type": "fieldExpression",
                                                                    "label": "clazz.upperBound",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "clazz",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "upperBound",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "callExpression",
                                                                    "label": "Token(UPPERBOUND, \"<:\")",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "Token",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argumentList",
                                                                            "label": "(UPPERBOUND, \"<:\")",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "UPPERBOUND",
                                                                                    "start_token": 27,
                                                                                    "end_token": 27,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "stringLiteral",
                                                                                    "label": "\"<:\"",
                                                                                    "start_token": 27,
                                                                                    "end_token": 27,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "lineStringLiteral",
                                                                                            "label": "\"<:\"",
                                                                                            "start_token": 27,
                                                                                            "end_token": 27,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "quoteOpen",
                                                                                                    "label": "\"",
                                                                                                    "start_token": 27,
                                                                                                    "end_token": 27,
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "lineStringContent",
                                                                                                    "label": "<:",
                                                                                                    "start_token": 27,
                                                                                                    "end_token": 27,
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "quoteClose",
                                                                                                    "label": "\"",
                                                                                                    "start_token": 27,
                                                                                                    "end_token": 27,
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "callExpression",
                                            "label": "types.append(RefType(quote(ToString)))",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": [
                                                {
                                                    "type": "fieldExpression",
                                                    "label": "types.append",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "types",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "append",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argumentList",
                                                    "label": "(RefType(quote(ToString)))",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": [
                                                        {
                                                            "type": "callExpression",
                                                            "label": "RefType(quote(ToString))",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "RefType",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argumentList",
                                                                    "label": "(quote(ToString))",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": [
                                                                        {
                                                                            "type": "quoteExpression",
                                                                            "label": "quote(ToString)",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": [
                                                                                {
                                                                                    "type": "QUOTE",
                                                                                    "label": "quote",
                                                                                    "start_token": 27,
                                                                                    "end_token": 27,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "quoteParameters",
                                                                                    "label": "ToString",
                                                                                    "start_token": 27,
                                                                                    "end_token": 27,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "ToString",
                                                                                            "start_token": 27,
                                                                                            "end_token": 27,
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "ifExpression",
                            "label": "if (isFuncToString(clazz)) {\n        return clazz\n    }",
                            "start_token": 27,
                            "end_token": 27,
                            "children": [
                                {
                                    "type": "IF",
                                    "label": "if",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": []
                                },
                                {
                                    "type": "callExpression",
                                    "label": "isFuncToString(clazz)",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "isFuncToString",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": []
                                        },
                                        {
                                            "type": "argumentList",
                                            "label": "(clazz)",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "clazz",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": " {\n        return clazz\n    }",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": [
                                        {
                                            "type": "returnExpression",
                                            "label": "return clazz",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": [
                                                {
                                                    "type": "RETURN",
                                                    "label": "return",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "clazz",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "variableDeclaration",
                            "label": "var sb = StringBuilder()",
                            "start_token": 27,
                            "end_token": 27,
                            "children": [
                                {
                                    "type": "VAR",
                                    "label": "var",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": []
                                },
                                {
                                    "type": "varBindingPattern",
                                    "label": "sb",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": []
                                },
                                {
                                    "type": "callExpression",
                                    "label": "StringBuilder()",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "StringBuilder",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": []
                                        },
                                        {
                                            "type": "argumentList",
                                            "label": "()",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "//接受内部宏NoToString消息",
                            "start_token": 27,
                            "end_token": 27,
                            "children": []
                        },
                        {
                            "type": "variableDeclaration",
                            "label": "let msg = getChildMessages(NO_TO_STRING)",
                            "start_token": 27,
                            "end_token": 27,
                            "children": [
                                {
                                    "type": "LET",
                                    "label": "let",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": []
                                },
                                {
                                    "type": "varBindingPattern",
                                    "label": "msg",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": []
                                },
                                {
                                    "type": "callExpression",
                                    "label": "getChildMessages(NO_TO_STRING)",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "getChildMessages",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": []
                                        },
                                        {
                                            "type": "argumentList",
                                            "label": "(NO_TO_STRING)",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "NO_TO_STRING",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "forInExpression",
                            "label": "for (d in clazz.body.decls) {\n        if (isFunc(d.keyword)) {\n            continue;\n        }\n        var kind = match (d) {\n            case m: MacroExpandDecl =>\n                let vd = (m.macroInputDecl as VarDecl).getOrThrow()\n                Some(vd.identifier.value)\n            case v: VarDecl => Some(v.identifier.value)\n            case _ => None<String>\n        }\n\n        if (let Some(value) <- kind) {\n            let hasKey = msg |> any {m => m.hasItem(value)}\n            if (!hasKey) {\n                sb.append(\"${value}:\\${${value}},\")\n            }\n        }\n    }",
                            "start_token": 27,
                            "end_token": 27,
                            "children": [
                                {
                                    "type": "FOR",
                                    "label": "for",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": []
                                },
                                {
                                    "type": "varBindingPattern",
                                    "label": "d",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": []
                                },
                                {
                                    "type": "IN",
                                    "label": "in",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": []
                                },
                                {
                                    "type": "fieldExpression",
                                    "label": "clazz.body.decls",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": [
                                        {
                                            "type": "fieldExpression",
                                            "label": "clazz.body",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "clazz",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "body",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "decls",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": " {\n        if (isFunc(d.keyword)) {\n            continue;\n        }\n        var kind = match (d) {\n            case m: MacroExpandDecl =>\n                let vd = (m.macroInputDecl as VarDecl).getOrThrow()\n                Some(vd.identifier.value)\n            case v: VarDecl => Some(v.identifier.value)\n            case _ => None<String>\n        }\n\n        if (let Some(value) <- kind) {\n            let hasKey = msg |> any {m => m.hasItem(value)}\n            if (!hasKey) {\n                sb.append(\"${value}:\\${${value}},\")\n            }\n        }\n    }",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": [
                                        {
                                            "type": "ifExpression",
                                            "label": "if (isFunc(d.keyword)) {\n            continue;\n        }",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": [
                                                {
                                                    "type": "IF",
                                                    "label": "if",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": []
                                                },
                                                {
                                                    "type": "callExpression",
                                                    "label": "isFunc(d.keyword)",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "isFunc",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "argumentList",
                                                            "label": "(d.keyword)",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": [
                                                                {
                                                                    "type": "fieldExpression",
                                                                    "label": "d.keyword",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "d",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "keyword",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": " {\n            continue;\n        }",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": [
                                                        {
                                                            "type": "continueExpression",
                                                            "label": "continue",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": [
                                                                {
                                                                    "type": "CONTINUE",
                                                                    "label": "continue",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "variableDeclaration",
                                            "label": "var kind = match (d) {\n            case m: MacroExpandDecl =>\n                let vd = (m.macroInputDecl as VarDecl).getOrThrow()\n                Some(vd.identifier.value)\n            case v: VarDecl => Some(v.identifier.value)\n            case _ => None<String>\n        }",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": [
                                                {
                                                    "type": "VAR",
                                                    "label": "var",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": []
                                                },
                                                {
                                                    "type": "varBindingPattern",
                                                    "label": "kind",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": []
                                                },
                                                {
                                                    "type": "matchExpression",
                                                    "label": "match (d) {\n            case m: MacroExpandDecl =>\n                let vd = (m.macroInputDecl as VarDecl).getOrThrow()\n                Some(vd.identifier.value)\n            case v: VarDecl => Some(v.identifier.value)\n            case _ => None<String>\n        }",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": [
                                                        {
                                                            "type": "MATCH",
                                                            "label": "match",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "d",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "matchCase",
                                                            "label": " {\n            case m: MacroExpandDecl =>\n                let vd = (m.macroInputDecl as VarDecl).getOrThrow()\n                Some(vd.identifier.value)\n            case v: VarDecl => Some(v.identifier.value)\n            case _ => None<String>\n        }",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": [
                                                                {
                                                                    "type": "CASE",
                                                                    "label": "            case",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "typePattern",
                                                                    "label": "m: MacroExpandDecl",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "m",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "userType",
                                                                            "label": "MacroExpandDecl",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "MacroExpandDecl",
                                                                                    "start_token": 27,
                                                                                    "end_token": 27,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "variableDeclaration",
                                                                    "label": "let vd = (m.macroInputDecl as VarDecl).getOrThrow()",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": [
                                                                        {
                                                                            "type": "LET",
                                                                            "label": "let",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "varBindingPattern",
                                                                            "label": "vd",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "callExpression",
                                                                            "label": "(m.macroInputDecl as VarDecl).getOrThrow()",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": [
                                                                                {
                                                                                    "type": "fieldExpression",
                                                                                    "label": "(m.macroInputDecl as VarDecl).getOrThrow",
                                                                                    "start_token": 27,
                                                                                    "end_token": 27,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "parenthesizedExpression",
                                                                                            "label": "(m.macroInputDecl as VarDecl)",
                                                                                            "start_token": 27,
                                                                                            "end_token": 27,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "typeExpression",
                                                                                                    "label": "m.macroInputDecl as VarDecl",
                                                                                                    "start_token": 27,
                                                                                                    "end_token": 27,
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "fieldExpression",
                                                                                                            "label": "m.macroInputDecl",
                                                                                                            "start_token": 27,
                                                                                                            "end_token": 27,
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "m",
                                                                                                                    "start_token": 27,
                                                                                                                    "end_token": 27,
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "macroInputDecl",
                                                                                                                    "start_token": 27,
                                                                                                                    "end_token": 27,
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "AS",
                                                                                                            "label": "as",
                                                                                                            "start_token": 27,
                                                                                                            "end_token": 27,
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "userType",
                                                                                                            "label": "VarDecl",
                                                                                                            "start_token": 27,
                                                                                                            "end_token": 27,
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "VarDecl",
                                                                                                                    "start_token": 27,
                                                                                                                    "end_token": 27,
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "getOrThrow",
                                                                                            "start_token": 27,
                                                                                            "end_token": 27,
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argumentList",
                                                                                    "label": "()",
                                                                                    "start_token": 27,
                                                                                    "end_token": 27,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "callExpression",
                                                                    "label": "Some(vd.identifier.value)",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "Some",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argumentList",
                                                                            "label": "(vd.identifier.value)",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": [
                                                                                {
                                                                                    "type": "fieldExpression",
                                                                                    "label": "vd.identifier.value",
                                                                                    "start_token": 27,
                                                                                    "end_token": 27,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "fieldExpression",
                                                                                            "label": "vd.identifier",
                                                                                            "start_token": 27,
                                                                                            "end_token": 27,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "vd",
                                                                                                    "start_token": 27,
                                                                                                    "end_token": 27,
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "identifier",
                                                                                                    "start_token": 27,
                                                                                                    "end_token": 27,
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "value",
                                                                                            "start_token": 27,
                                                                                            "end_token": 27,
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "CASE",
                                                                    "label": "case",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "typePattern",
                                                                    "label": "v: VarDecl",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "v",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "userType",
                                                                            "label": "VarDecl",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "VarDecl",
                                                                                    "start_token": 27,
                                                                                    "end_token": 27,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "callExpression",
                                                                    "label": "Some(v.identifier.value)",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "Some",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "argumentList",
                                                                            "label": "(v.identifier.value)",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": [
                                                                                {
                                                                                    "type": "fieldExpression",
                                                                                    "label": "v.identifier.value",
                                                                                    "start_token": 27,
                                                                                    "end_token": 27,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "fieldExpression",
                                                                                            "label": "v.identifier",
                                                                                            "start_token": 27,
                                                                                            "end_token": 27,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "v",
                                                                                                    "start_token": 27,
                                                                                                    "end_token": 27,
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "identifier",
                                                                                                    "start_token": 27,
                                                                                                    "end_token": 27,
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "value",
                                                                                            "start_token": 27,
                                                                                            "end_token": 27,
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "CASE",
                                                                    "label": "case",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "wildcardPattern",
                                                                    "label": "_",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "genericsType",
                                                                    "label": "None<String>",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": [
                                                                        {
                                                                            "type": "typeIdentifier",
                                                                            "label": "None",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "typeArguments",
                                                                            "label": "<String>",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": [
                                                                                {
                                                                                    "type": "charLangTypes",
                                                                                    "label": "String",
                                                                                    "start_token": 27,
                                                                                    "end_token": 27,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "ifExpression",
                                            "label": "if (let Some(value) <- kind) {\n            let hasKey = msg |> any {m => m.hasItem(value)}\n            if (!hasKey) {\n                sb.append(\"${value}:\\${${value}},\")\n            }\n        }",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": [
                                                {
                                                    "type": "IF",
                                                    "label": "if",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": []
                                                },
                                                {
                                                    "type": "ERROR",
                                                    "label": "let Some(value) <",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": [
                                                        {
                                                            "type": "LET",
                                                            "label": "let",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "enumPattern",
                                                            "label": "Some(value)",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Some",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "enumPatternParameters",
                                                                    "label": "(value)",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": [
                                                                        {
                                                                            "type": "varBindingPattern",
                                                                            "label": "value",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "unaryExpression",
                                                    "label": "- kind",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "kind",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": " {\n            let hasKey = msg |> any {m => m.hasItem(value)}\n            if (!hasKey) {\n                sb.append(\"${value}:\\${${value}},\")\n            }\n        }",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": [
                                                        {
                                                            "type": "variableDeclaration",
                                                            "label": "let hasKey = msg |> any",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": [
                                                                {
                                                                    "type": "LET",
                                                                    "label": "let",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "varBindingPattern",
                                                                    "label": "hasKey",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "binaryExpression",
                                                                    "label": "msg |> any",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "msg",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "any",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "lambdaExpression",
                                                            "label": "{m => m.hasItem(value)}",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": [
                                                                {
                                                                    "type": "lambdaParameters",
                                                                    "label": "m",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": [
                                                                        {
                                                                            "type": "lambdaParameter",
                                                                            "label": "m",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "m",
                                                                                    "start_token": 27,
                                                                                    "end_token": 27,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "callExpression",
                                                                    "label": "m.hasItem(value)",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": [
                                                                        {
                                                                            "type": "fieldExpression",
                                                                            "label": "m.hasItem",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "m",
                                                                                    "start_token": 27,
                                                                                    "end_token": 27,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "hasItem",
                                                                                    "start_token": 27,
                                                                                    "end_token": 27,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argumentList",
                                                                            "label": "(value)",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "value",
                                                                                    "start_token": 27,
                                                                                    "end_token": 27,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "ifExpression",
                                                            "label": "if (!hasKey) {\n                sb.append(\"${value}:\\${${value}},\")\n            }",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": [
                                                                {
                                                                    "type": "IF",
                                                                    "label": "if",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "unaryExpression",
                                                                    "label": "!hasKey",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "hasKey",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": " {\n                sb.append(\"${value}:\\${${value}},\")\n            }",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": [
                                                                        {
                                                                            "type": "callExpression",
                                                                            "label": "sb.append(\"${value}:\\${${value}},\")",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": [
                                                                                {
                                                                                    "type": "fieldExpression",
                                                                                    "label": "sb.append",
                                                                                    "start_token": 27,
                                                                                    "end_token": 27,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "sb",
                                                                                            "start_token": 27,
                                                                                            "end_token": 27,
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "append",
                                                                                            "start_token": 27,
                                                                                            "end_token": 27,
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argumentList",
                                                                                    "label": "(\"${value}:\\${${value}},\")",
                                                                                    "start_token": 27,
                                                                                    "end_token": 27,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "stringLiteral",
                                                                                            "label": "\"${value}:\\${${value}},\"",
                                                                                            "start_token": 27,
                                                                                            "end_token": 27,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "lineStringLiteral",
                                                                                                    "label": "\"${value}:\\${${value}},\"",
                                                                                                    "start_token": 27,
                                                                                                    "end_token": 27,
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "quoteOpen",
                                                                                                            "label": "\"",
                                                                                                            "start_token": 27,
                                                                                                            "end_token": 27,
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "lineStringExpression",
                                                                                                            "label": "${value}",
                                                                                                            "start_token": 27,
                                                                                                            "end_token": 27,
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "value",
                                                                                                                    "start_token": 27,
                                                                                                                    "end_token": 27,
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "lineStringContent",
                                                                                                            "label": ":",
                                                                                                            "start_token": 27,
                                                                                                            "end_token": 27,
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "escapeSeq",
                                                                                                            "label": "\\$",
                                                                                                            "start_token": 27,
                                                                                                            "end_token": 27,
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "lineStringContent",
                                                                                                            "label": "{",
                                                                                                            "start_token": 27,
                                                                                                            "end_token": 27,
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "lineStringExpression",
                                                                                                            "label": "${value}",
                                                                                                            "start_token": 27,
                                                                                                            "end_token": 27,
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "value",
                                                                                                                    "start_token": 27,
                                                                                                                    "end_token": 27,
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "lineStringContent",
                                                                                                            "label": "},",
                                                                                                            "start_token": 27,
                                                                                                            "end_token": 27,
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "quoteClose",
                                                                                                            "label": "\"",
                                                                                                            "start_token": 27,
                                                                                                            "end_token": 27,
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "variableDeclaration",
                            "label": "let str = sb.toString().trimRight(\",\")",
                            "start_token": 27,
                            "end_token": 27,
                            "children": [
                                {
                                    "type": "LET",
                                    "label": "let",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": []
                                },
                                {
                                    "type": "varBindingPattern",
                                    "label": "str",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": []
                                },
                                {
                                    "type": "callExpression",
                                    "label": "sb.toString().trimRight(\",\")",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": [
                                        {
                                            "type": "fieldExpression",
                                            "label": "sb.toString().trimRight",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": [
                                                {
                                                    "type": "callExpression",
                                                    "label": "sb.toString()",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": [
                                                        {
                                                            "type": "fieldExpression",
                                                            "label": "sb.toString",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "sb",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "toString",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argumentList",
                                                            "label": "()",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "trimRight",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argumentList",
                                            "label": "(\",\")",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": [
                                                {
                                                    "type": "stringLiteral",
                                                    "label": "\",\"",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": [
                                                        {
                                                            "type": "lineStringLiteral",
                                                            "label": "\",\"",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": [
                                                                {
                                                                    "type": "quoteOpen",
                                                                    "label": "\"",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "lineStringContent",
                                                                    "label": ",",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "quoteClose",
                                                                    "label": "\"",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "variableDeclaration",
                            "label": "let funDecl = FuncDecl(quote(public func toString():String{\n        return $(str)\n    }))",
                            "start_token": 27,
                            "end_token": 27,
                            "children": [
                                {
                                    "type": "LET",
                                    "label": "let",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": []
                                },
                                {
                                    "type": "varBindingPattern",
                                    "label": "funDecl",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": []
                                },
                                {
                                    "type": "callExpression",
                                    "label": "FuncDecl(quote(public func toString():String{\n        return $(str)\n    }))",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "FuncDecl",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": []
                                        },
                                        {
                                            "type": "argumentList",
                                            "label": "(quote(public func toString():String{\n        return $(str)\n    }))",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": [
                                                {
                                                    "type": "quoteExpression",
                                                    "label": "quote(public func toString():String{\n        return $(str)\n    })",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": [
                                                        {
                                                            "type": "QUOTE",
                                                            "label": "quote",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "quoteParameters",
                                                            "label": "public func toString():String{\n        return $(str)\n    }",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": [
                                                                {
                                                                    "type": "functionDefinition",
                                                                    "label": "public func toString():String{\n        return $(str)\n    }",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": [
                                                                        {
                                                                            "type": "modifiers",
                                                                            "label": "public",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": [
                                                                                {
                                                                                    "type": "PUBLIC",
                                                                                    "label": "public",
                                                                                    "start_token": 27,
                                                                                    "end_token": 27,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "FUNC",
                                                                            "label": "func",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "toString",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "functionParameters",
                                                                            "label": "()",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "charLangTypes",
                                                                            "label": "String",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "block",
                                                                            "label": "{\n        return $(str)\n    }",
                                                                            "start_token": 27,
                                                                            "end_token": 27,
                                                                            "children": [
                                                                                {
                                                                                    "type": "returnExpression",
                                                                                    "label": "return",
                                                                                    "start_token": 27,
                                                                                    "end_token": 27,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "RETURN",
                                                                                            "label": "return",
                                                                                            "start_token": 27,
                                                                                            "end_token": 27,
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "ERROR",
                                                                                    "label": "$(str)",
                                                                                    "start_token": 27,
                                                                                    "end_token": 27,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "dollarIdentifier",
                                                                                            "label": "$(str)",
                                                                                            "start_token": 27,
                                                                                            "end_token": 27,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "str",
                                                                                                    "start_token": 27,
                                                                                                    "end_token": 27,
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "callExpression",
                            "label": "clazz.body.decls.append(funDecl)",
                            "start_token": 27,
                            "end_token": 27,
                            "children": [
                                {
                                    "type": "fieldExpression",
                                    "label": "clazz.body.decls.append",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": [
                                        {
                                            "type": "fieldExpression",
                                            "label": "clazz.body.decls",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": [
                                                {
                                                    "type": "fieldExpression",
                                                    "label": "clazz.body",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "clazz",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "body",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "decls",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "append",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argumentList",
                                    "label": "(funDecl)",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "funDecl",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "returnExpression",
                            "label": "return clazz",
                            "start_token": 27,
                            "end_token": 27,
                            "children": [
                                {
                                    "type": "RETURN",
                                    "label": "return",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "clazz",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "functionDefinition",
            "label": "func isFuncToString(clazz: ClassDecl): Bool {\n    return clazz.body.decls |> filter {d => isFunc(d.keyword)} |> any {\n        d => d.identifier.value == \"toString\"\n    }\n}",
            "start_token": 27,
            "end_token": 27,
            "children": [
                {
                    "type": "FUNC",
                    "label": "func",
                    "start_token": 27,
                    "end_token": 27,
                    "children": []
                },
                {
                    "type": "identifier",
                    "label": "isFuncToString",
                    "start_token": 27,
                    "end_token": 27,
                    "children": []
                },
                {
                    "type": "functionParameters",
                    "label": "(clazz: ClassDecl)",
                    "start_token": 27,
                    "end_token": 27,
                    "children": [
                        {
                            "type": "parameterList",
                            "label": "clazz: ClassDecl",
                            "start_token": 27,
                            "end_token": 27,
                            "children": [
                                {
                                    "type": "parameter",
                                    "label": "clazz: ClassDecl",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "clazz",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": []
                                        },
                                        {
                                            "type": "userType",
                                            "label": "ClassDecl",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "ClassDecl",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "charLangTypes",
                    "label": "Bool",
                    "start_token": 27,
                    "end_token": 27,
                    "children": [
                        {
                            "type": "BOOLEAN",
                            "label": "Bool",
                            "start_token": 27,
                            "end_token": 27,
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "{\n    return clazz.body.decls |> filter {d => isFunc(d.keyword)} |> any {\n        d => d.identifier.value == \"toString\"\n    }\n}",
                    "start_token": 27,
                    "end_token": 27,
                    "children": [
                        {
                            "type": "returnExpression",
                            "label": "return clazz.body.decls |> filter",
                            "start_token": 27,
                            "end_token": 27,
                            "children": [
                                {
                                    "type": "RETURN",
                                    "label": "return",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": []
                                },
                                {
                                    "type": "binaryExpression",
                                    "label": "clazz.body.decls |> filter",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": [
                                        {
                                            "type": "fieldExpression",
                                            "label": "clazz.body.decls",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": [
                                                {
                                                    "type": "fieldExpression",
                                                    "label": "clazz.body",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "clazz",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "body",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "decls",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "filter",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "binaryExpression",
                            "label": "{d => isFunc(d.keyword)} |> any",
                            "start_token": 27,
                            "end_token": 27,
                            "children": [
                                {
                                    "type": "lambdaExpression",
                                    "label": "{d => isFunc(d.keyword)}",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": [
                                        {
                                            "type": "lambdaParameters",
                                            "label": "d",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": [
                                                {
                                                    "type": "lambdaParameter",
                                                    "label": "d",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "d",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "callExpression",
                                            "label": "isFunc(d.keyword)",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "isFunc",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": []
                                                },
                                                {
                                                    "type": "argumentList",
                                                    "label": "(d.keyword)",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": [
                                                        {
                                                            "type": "fieldExpression",
                                                            "label": "d.keyword",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "d",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "keyword",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "identifier",
                                    "label": "any",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "lambdaExpression",
                            "label": "{\n        d => d.identifier.value == \"toString\"\n    }",
                            "start_token": 27,
                            "end_token": 27,
                            "children": [
                                {
                                    "type": "lambdaParameters",
                                    "label": "d",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": [
                                        {
                                            "type": "lambdaParameter",
                                            "label": "d",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "d",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "binaryExpression",
                                    "label": "d.identifier.value == \"toString\"",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": [
                                        {
                                            "type": "fieldExpression",
                                            "label": "d.identifier.value",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": [
                                                {
                                                    "type": "fieldExpression",
                                                    "label": "d.identifier",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "d",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "identifier",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "value",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "label": "\"toString\"",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": [
                                                {
                                                    "type": "lineStringLiteral",
                                                    "label": "\"toString\"",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": [
                                                        {
                                                            "type": "quoteOpen",
                                                            "label": "\"",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "lineStringContent",
                                                            "label": "toString",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "quoteClose",
                                                            "label": "\"",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "functionDefinition",
            "label": "func isSuperToString(superTypes: ArrayList<TypeNode>): Bool {\n    return superTypes |>\n        any {x: TypeNode => x is RefType && (x as RefType).getOrThrow().identifier.value.indexOf(\"ToString\") != None}\n}",
            "start_token": 27,
            "end_token": -1,
            "children": [
                {
                    "type": "FUNC",
                    "label": "func",
                    "start_token": 27,
                    "end_token": 27,
                    "children": []
                },
                {
                    "type": "identifier",
                    "label": "isSuperToString",
                    "start_token": 27,
                    "end_token": 27,
                    "children": []
                },
                {
                    "type": "functionParameters",
                    "label": "(superTypes: ArrayList<TypeNode>)",
                    "start_token": 27,
                    "end_token": 27,
                    "children": [
                        {
                            "type": "parameterList",
                            "label": "superTypes: ArrayList<TypeNode>",
                            "start_token": 27,
                            "end_token": 27,
                            "children": [
                                {
                                    "type": "parameter",
                                    "label": "superTypes: ArrayList<TypeNode>",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "superTypes",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": []
                                        },
                                        {
                                            "type": "userType",
                                            "label": "ArrayList<TypeNode>",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "ArrayList",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": []
                                                },
                                                {
                                                    "type": "typeArguments",
                                                    "label": "<TypeNode>",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": [
                                                        {
                                                            "type": "userType",
                                                            "label": "TypeNode",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "TypeNode",
                                                                    "start_token": 27,
                                                                    "end_token": 27,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "charLangTypes",
                    "label": "Bool",
                    "start_token": 27,
                    "end_token": 27,
                    "children": [
                        {
                            "type": "BOOLEAN",
                            "label": "Bool",
                            "start_token": 27,
                            "end_token": 27,
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "{\n    return superTypes |>\n        any {x: TypeNode => x is RefType && (x as RefType).getOrThrow().identifier.value.indexOf(\"ToString\") != None}\n}",
                    "start_token": 27,
                    "end_token": -1,
                    "children": [
                        {
                            "type": "returnExpression",
                            "label": "return superTypes |>\n        any",
                            "start_token": 27,
                            "end_token": 27,
                            "children": [
                                {
                                    "type": "RETURN",
                                    "label": "return",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": []
                                },
                                {
                                    "type": "binaryExpression",
                                    "label": "superTypes |>\n        any",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "superTypes",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "any",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "lambdaExpression",
                            "label": "{x: TypeNode => x is RefType && (x as RefType).getOrThrow().identifier.value.indexOf(\"ToString\") != None}",
                            "start_token": 27,
                            "end_token": -1,
                            "children": [
                                {
                                    "type": "lambdaParameters",
                                    "label": "x: TypeNode",
                                    "start_token": 27,
                                    "end_token": 27,
                                    "children": [
                                        {
                                            "type": "lambdaParameter",
                                            "label": "x: TypeNode",
                                            "start_token": 27,
                                            "end_token": 27,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "x",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": []
                                                },
                                                {
                                                    "type": "userType",
                                                    "label": "TypeNode",
                                                    "start_token": 27,
                                                    "end_token": 27,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "TypeNode",
                                                            "start_token": 27,
                                                            "end_token": 27,
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "binaryExpression",
                                    "label": "x is RefType && (x as RefType).getOrThrow().identifier.value.indexOf(\"ToString\") != None",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "children": [
                                        {
                                            "type": "typeExpression",
                                            "label": "x is RefType",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "x",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "children": []
                                                },
                                                {
                                                    "type": "IS",
                                                    "label": "is",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "children": []
                                                },
                                                {
                                                    "type": "userType",
                                                    "label": "RefType",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "RefType",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "binaryExpression",
                                            "label": "(x as RefType).getOrThrow().identifier.value.indexOf(\"ToString\") != None",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "children": [
                                                {
                                                    "type": "callExpression",
                                                    "label": "(x as RefType).getOrThrow().identifier.value.indexOf(\"ToString\")",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "children": [
                                                        {
                                                            "type": "fieldExpression",
                                                            "label": "(x as RefType).getOrThrow().identifier.value.indexOf",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "children": [
                                                                {
                                                                    "type": "fieldExpression",
                                                                    "label": "(x as RefType).getOrThrow().identifier.value",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "children": [
                                                                        {
                                                                            "type": "fieldExpression",
                                                                            "label": "(x as RefType).getOrThrow().identifier",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "children": [
                                                                                {
                                                                                    "type": "callExpression",
                                                                                    "label": "(x as RefType).getOrThrow()",
                                                                                    "start_token": -1,
                                                                                    "end_token": -1,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "fieldExpression",
                                                                                            "label": "(x as RefType).getOrThrow",
                                                                                            "start_token": -1,
                                                                                            "end_token": -1,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "parenthesizedExpression",
                                                                                                    "label": "(x as RefType)",
                                                                                                    "start_token": -1,
                                                                                                    "end_token": -1,
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "typeExpression",
                                                                                                            "label": "x as RefType",
                                                                                                            "start_token": -1,
                                                                                                            "end_token": -1,
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "x",
                                                                                                                    "start_token": -1,
                                                                                                                    "end_token": -1,
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "AS",
                                                                                                                    "label": "as",
                                                                                                                    "start_token": -1,
                                                                                                                    "end_token": -1,
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "userType",
                                                                                                                    "label": "RefType",
                                                                                                                    "start_token": -1,
                                                                                                                    "end_token": -1,
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "RefType",
                                                                                                                            "start_token": -1,
                                                                                                                            "end_token": -1,
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "getOrThrow",
                                                                                                    "start_token": -1,
                                                                                                    "end_token": -1,
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argumentList",
                                                                                            "label": "()",
                                                                                            "start_token": -1,
                                                                                            "end_token": -1,
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "identifier",
                                                                                    "start_token": -1,
                                                                                    "end_token": -1,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "value",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "indexOf",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argumentList",
                                                            "label": "(\"ToString\")",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "children": [
                                                                {
                                                                    "type": "stringLiteral",
                                                                    "label": "\"ToString\"",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "children": [
                                                                        {
                                                                            "type": "lineStringLiteral",
                                                                            "label": "\"ToString\"",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "children": [
                                                                                {
                                                                                    "type": "quoteOpen",
                                                                                    "label": "\"",
                                                                                    "start_token": -1,
                                                                                    "end_token": -1,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "lineStringContent",
                                                                                    "label": "ToString",
                                                                                    "start_token": -1,
                                                                                    "end_token": -1,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "quoteClose",
                                                                                    "label": "\"",
                                                                                    "start_token": -1,
                                                                                    "end_token": -1,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "None",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}