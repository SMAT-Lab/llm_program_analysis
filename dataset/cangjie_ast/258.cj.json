{
    "type": "sourceFile",
    "label": "// 3rd_party_lib:websocket4cj/build/websocket4cj\n//正常场景:建立连接 通信 2进制传输\n//验证 服务端WsConn readMsg()sendBinary() 客户端WsConnClient readMsg()sendBinary()\nimport secodeFuzz.*\nfrom std import unittest.*\nfrom std import unittest.testmacro.*\nfrom websocket4cj import client.*\nfrom std import collection.*\nfrom websocket4cj import server.*\nvar port: UInt16 = 1452\nvar Client_msg :String = \"\"\nvar hasConnect = false\nlet rawUrl = \"ws://127.0.0.1:${port}\"\nlet headerMap = HashMap<String, String>()\nvar wsclient = WebSocket4cjClient(rawUrl,headerMap)\nvar Exception_message = \"\"\nvar WebSocket4cjClient_ck : Option<WsConnClient> = Option<WsConnClient>.None\nvar string_s:String = \"\"\nfunc serve(){\n    var ws = WebSocket4cjServer(\"127.0.0.1\",port)\n    ws.handleFunc{w=>\n        while (true) {\n            let data = w.readMsg()\n            //println(\"data[0] = ${String.fromUtf8(data[0])}\")\n            match (data[1]) {\n                case Some(msg)=>\n                    w.sendBinary(\"客户端~ 我收到了你的消息 \\'${string_s}\\'\".toUtf8Array())\n                case _ =>\n                    w.close()\n                    return\n            }\n        }\n    }\n    ws.launch() // 启动监听\n}\nfunc call_fuzz(string_c:String, string_s2:String) {\n    string_s = string_s2\n    try{\n        WebSocket4cjClient_ck.getOrThrow().sendBinary(string_c.toUtf8Array())\n        let data = WebSocket4cjClient_ck.getOrThrow().readMsg()\n        //println(\"data[0] = ${String.fromUtf8(data[0])}\")\n        match (data[1]) {\n            case Some(msg)=>\n                Client_msg = \"${String.fromUtf8(msg)}\"\n                println(\"客户端:服务端~ 我收到了你的消息 \\\"${Client_msg}\\\"\")\n            case _ =>\n                WebSocket4cjClient_ck.getOrThrow().close()\n                return\n        }\n    } catch (e: Exception) {\n        Exception_message = \"Exception\"\n    }\n    return\n}\nfunc unboundTest():Unit{\n    var case_name = CString(\"Fuzz_sendBinary\")\n    unsafe{\n        // 根据 call_fuzz的入参类型，选择fuzz方法，例如DF_FUZZ_Int64。其他方法见secodeFuzz.cj。其中100000为定义测试次数。其他参数可不变\n        DT_FUZZ_String_2(0,100000,case_name,0,call_fuzz)\n        case_name.free()\n    }\n}\nmain(){\n    spawn{\n        serve()\n    }\n    sleep(1000*1000*1000*2)\n    WebSocket4cjClient_ck = wsclient.connect()\n    unboundTest()\n    return\n}",
    "start_token": 0,
    "end_token": -1,
    "children": [
        {
            "type": "comment",
            "label": "// 3rd_party_lib:websocket4cj/build/websocket4cj",
            "start_token": 0,
            "end_token": 0,
            "children": []
        },
        {
            "type": "comment",
            "label": "//正常场景:建立连接 通信 2进制传输",
            "start_token": 0,
            "end_token": 0,
            "children": []
        },
        {
            "type": "comment",
            "label": "//验证 服务端WsConn readMsg()sendBinary() 客户端WsConnClient readMsg()sendBinary()",
            "start_token": 0,
            "end_token": 0,
            "children": []
        },
        {
            "type": "importList",
            "label": "import secodeFuzz.*",
            "start_token": 0,
            "end_token": 0,
            "children": [
                {
                    "type": "IMPORT",
                    "label": "import",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "importContent",
                    "label": "secodeFuzz.*",
                    "start_token": 0,
                    "end_token": 0,
                    "children": [
                        {
                            "type": "importAll",
                            "label": "secodeFuzz.*",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "secodeFuzz",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "importList",
            "label": "from std import unittest.*",
            "start_token": 0,
            "end_token": 0,
            "children": [
                {
                    "type": "FROM",
                    "label": "from",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "identifier",
                    "label": "std",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "IMPORT",
                    "label": "import",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "importContent",
                    "label": "unittest.*",
                    "start_token": 0,
                    "end_token": 0,
                    "children": [
                        {
                            "type": "importAll",
                            "label": "unittest.*",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "unittest",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "importList",
            "label": "from std import unittest.testmacro.*",
            "start_token": 0,
            "end_token": 0,
            "children": [
                {
                    "type": "FROM",
                    "label": "from",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "identifier",
                    "label": "std",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "IMPORT",
                    "label": "import",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "importContent",
                    "label": "unittest.testmacro.*",
                    "start_token": 0,
                    "end_token": 0,
                    "children": [
                        {
                            "type": "importAll",
                            "label": "unittest.testmacro.*",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "unittest",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "testmacro",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "importList",
            "label": "from websocket4cj import client.*",
            "start_token": 0,
            "end_token": 0,
            "children": [
                {
                    "type": "FROM",
                    "label": "from",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "identifier",
                    "label": "websocket4cj",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "IMPORT",
                    "label": "import",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "importContent",
                    "label": "client.*",
                    "start_token": 0,
                    "end_token": 0,
                    "children": [
                        {
                            "type": "importAll",
                            "label": "client.*",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "client",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "importList",
            "label": "from std import collection.*",
            "start_token": 0,
            "end_token": 0,
            "children": [
                {
                    "type": "FROM",
                    "label": "from",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "identifier",
                    "label": "std",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "IMPORT",
                    "label": "import",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "importContent",
                    "label": "collection.*",
                    "start_token": 0,
                    "end_token": 0,
                    "children": [
                        {
                            "type": "importAll",
                            "label": "collection.*",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "collection",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "importList",
            "label": "from websocket4cj import server.*",
            "start_token": 0,
            "end_token": 0,
            "children": [
                {
                    "type": "FROM",
                    "label": "from",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "identifier",
                    "label": "websocket4cj",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "IMPORT",
                    "label": "import",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "importContent",
                    "label": "server.*",
                    "start_token": 0,
                    "end_token": 0,
                    "children": [
                        {
                            "type": "importAll",
                            "label": "server.*",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "server",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "variableDeclaration",
            "label": "var port: UInt16 = 1452",
            "start_token": 0,
            "end_token": 0,
            "children": [
                {
                    "type": "VAR",
                    "label": "var",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "varBindingPattern",
                    "label": "port",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "charLangTypes",
                    "label": "UInt16",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "integerLiteral",
                    "label": "1452",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                }
            ]
        },
        {
            "type": "variableDeclaration",
            "label": "var Client_msg :String = \"\"",
            "start_token": 0,
            "end_token": 0,
            "children": [
                {
                    "type": "VAR",
                    "label": "var",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "varBindingPattern",
                    "label": "Client_msg",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "charLangTypes",
                    "label": "String",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "stringLiteral",
                    "label": "\"\"",
                    "start_token": 0,
                    "end_token": 0,
                    "children": [
                        {
                            "type": "lineStringLiteral",
                            "label": "\"\"",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "quoteOpen",
                                    "label": "\"",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "quoteClose",
                                    "label": "\"",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "variableDeclaration",
            "label": "var hasConnect = false",
            "start_token": 0,
            "end_token": 0,
            "children": [
                {
                    "type": "VAR",
                    "label": "var",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "varBindingPattern",
                    "label": "hasConnect",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "booleanLiteral",
                    "label": "false",
                    "start_token": 0,
                    "end_token": 0,
                    "children": [
                        {
                            "type": "FALSE",
                            "label": "false",
                            "start_token": 0,
                            "end_token": 0,
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "variableDeclaration",
            "label": "let rawUrl = \"ws://127.0.0.1:${port}\"",
            "start_token": 0,
            "end_token": 0,
            "children": [
                {
                    "type": "LET",
                    "label": "let",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "varBindingPattern",
                    "label": "rawUrl",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "stringLiteral",
                    "label": "\"ws://127.0.0.1:${port}\"",
                    "start_token": 0,
                    "end_token": 0,
                    "children": [
                        {
                            "type": "lineStringLiteral",
                            "label": "\"ws://127.0.0.1:${port}\"",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "quoteOpen",
                                    "label": "\"",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "lineStringContent",
                                    "label": "ws://127.0.0.1:",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "lineStringExpression",
                                    "label": "${port}",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "port",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "quoteClose",
                                    "label": "\"",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "variableDeclaration",
            "label": "let headerMap = HashMap<String, String>()",
            "start_token": 0,
            "end_token": 0,
            "children": [
                {
                    "type": "LET",
                    "label": "let",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "varBindingPattern",
                    "label": "headerMap",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "callExpression",
                    "label": "HashMap<String, String>()",
                    "start_token": 0,
                    "end_token": 0,
                    "children": [
                        {
                            "type": "genericsType",
                            "label": "HashMap<String, String>",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "typeIdentifier",
                                    "label": "HashMap",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "typeArguments",
                                    "label": "<String, String>",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "charLangTypes",
                                            "label": "String",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        },
                                        {
                                            "type": "charLangTypes",
                                            "label": "String",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "argumentList",
                            "label": "()",
                            "start_token": 0,
                            "end_token": 0,
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "variableDeclaration",
            "label": "var wsclient = WebSocket4cjClient(rawUrl,headerMap)",
            "start_token": 0,
            "end_token": 0,
            "children": [
                {
                    "type": "VAR",
                    "label": "var",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "varBindingPattern",
                    "label": "wsclient",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "callExpression",
                    "label": "WebSocket4cjClient(rawUrl,headerMap)",
                    "start_token": 0,
                    "end_token": 0,
                    "children": [
                        {
                            "type": "identifier",
                            "label": "WebSocket4cjClient",
                            "start_token": 0,
                            "end_token": 0,
                            "children": []
                        },
                        {
                            "type": "argumentList",
                            "label": "(rawUrl,headerMap)",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "rawUrl",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "headerMap",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "variableDeclaration",
            "label": "var Exception_message = \"\"",
            "start_token": 0,
            "end_token": 0,
            "children": [
                {
                    "type": "VAR",
                    "label": "var",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "varBindingPattern",
                    "label": "Exception_message",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "stringLiteral",
                    "label": "\"\"",
                    "start_token": 0,
                    "end_token": 0,
                    "children": [
                        {
                            "type": "lineStringLiteral",
                            "label": "\"\"",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "quoteOpen",
                                    "label": "\"",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "quoteClose",
                                    "label": "\"",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "variableDeclaration",
            "label": "var WebSocket4cjClient_ck : Option<WsConnClient> = Option<WsConnClient>.None",
            "start_token": 0,
            "end_token": 0,
            "children": [
                {
                    "type": "VAR",
                    "label": "var",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "varBindingPattern",
                    "label": "WebSocket4cjClient_ck",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "userType",
                    "label": "Option<WsConnClient>",
                    "start_token": 0,
                    "end_token": 0,
                    "children": [
                        {
                            "type": "identifier",
                            "label": "Option",
                            "start_token": 0,
                            "end_token": 0,
                            "children": []
                        },
                        {
                            "type": "typeArguments",
                            "label": "<WsConnClient>",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "userType",
                                    "label": "WsConnClient",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "WsConnClient",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "fieldExpression",
                    "label": "Option<WsConnClient>.None",
                    "start_token": 0,
                    "end_token": 0,
                    "children": [
                        {
                            "type": "genericsType",
                            "label": "Option<WsConnClient>",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "typeIdentifier",
                                    "label": "Option",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "typeArguments",
                                    "label": "<WsConnClient>",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "userType",
                                            "label": "WsConnClient",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "WsConnClient",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "identifier",
                            "label": "None",
                            "start_token": 0,
                            "end_token": 0,
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "variableDeclaration",
            "label": "var string_s:String = \"\"",
            "start_token": 0,
            "end_token": 0,
            "children": [
                {
                    "type": "VAR",
                    "label": "var",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "varBindingPattern",
                    "label": "string_s",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "charLangTypes",
                    "label": "String",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "stringLiteral",
                    "label": "\"\"",
                    "start_token": 0,
                    "end_token": 0,
                    "children": [
                        {
                            "type": "lineStringLiteral",
                            "label": "\"\"",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "quoteOpen",
                                    "label": "\"",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "quoteClose",
                                    "label": "\"",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "functionDefinition",
            "label": "func serve(){\n    var ws = WebSocket4cjServer(\"127.0.0.1\",port)\n    ws.handleFunc{w=>\n        while (true) {\n            let data = w.readMsg()\n            //println(\"data[0] = ${String.fromUtf8(data[0])}\")\n            match (data[1]) {\n                case Some(msg)=>\n                    w.sendBinary(\"客户端~ 我收到了你的消息 \\'${string_s}\\'\".toUtf8Array())\n                case _ =>\n                    w.close()\n                    return\n            }\n        }\n    }\n    ws.launch() // 启动监听\n}",
            "start_token": 0,
            "end_token": 0,
            "children": [
                {
                    "type": "FUNC",
                    "label": "func",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "identifier",
                    "label": "serve",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "functionParameters",
                    "label": "()",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "block",
                    "label": "{\n    var ws = WebSocket4cjServer(\"127.0.0.1\",port)\n    ws.handleFunc{w=>\n        while (true) {\n            let data = w.readMsg()\n            //println(\"data[0] = ${String.fromUtf8(data[0])}\")\n            match (data[1]) {\n                case Some(msg)=>\n                    w.sendBinary(\"客户端~ 我收到了你的消息 \\'${string_s}\\'\".toUtf8Array())\n                case _ =>\n                    w.close()\n                    return\n            }\n        }\n    }\n    ws.launch() // 启动监听\n}",
                    "start_token": 0,
                    "end_token": 0,
                    "children": [
                        {
                            "type": "variableDeclaration",
                            "label": "var ws = WebSocket4cjServer(\"127.0.0.1\",port)",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "VAR",
                                    "label": "var",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "varBindingPattern",
                                    "label": "ws",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "callExpression",
                                    "label": "WebSocket4cjServer(\"127.0.0.1\",port)",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "WebSocket4cjServer",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        },
                                        {
                                            "type": "argumentList",
                                            "label": "(\"127.0.0.1\",port)",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "stringLiteral",
                                                    "label": "\"127.0.0.1\"",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": [
                                                        {
                                                            "type": "lineStringLiteral",
                                                            "label": "\"127.0.0.1\"",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "quoteOpen",
                                                                    "label": "\"",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "lineStringContent",
                                                                    "label": "127.0.0.1",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "quoteClose",
                                                                    "label": "\"",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "port",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "fieldExpression",
                            "label": "ws.handleFunc",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "ws",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "handleFunc",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "lambdaExpression",
                            "label": "{w=>\n        while (true) {\n            let data = w.readMsg()\n            //println(\"data[0] = ${String.fromUtf8(data[0])}\")\n            match (data[1]) {\n                case Some(msg)=>\n                    w.sendBinary(\"客户端~ 我收到了你的消息 \\'${string_s}\\'\".toUtf8Array())\n                case _ =>\n                    w.close()\n                    return\n            }\n        }\n    }",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "lambdaParameters",
                                    "label": "w",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "lambdaParameter",
                                            "label": "w",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "w",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "whileExpression",
                                    "label": "while (true) {\n            let data = w.readMsg()\n            //println(\"data[0] = ${String.fromUtf8(data[0])}\")\n            match (data[1]) {\n                case Some(msg)=>\n                    w.sendBinary(\"客户端~ 我收到了你的消息 \\'${string_s}\\'\".toUtf8Array())\n                case _ =>\n                    w.close()\n                    return\n            }\n        }",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "WHILE",
                                            "label": "while",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        },
                                        {
                                            "type": "booleanLiteral",
                                            "label": "true",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "TRUE",
                                                    "label": "true",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": " {\n            let data = w.readMsg()\n            //println(\"data[0] = ${String.fromUtf8(data[0])}\")\n            match (data[1]) {\n                case Some(msg)=>\n                    w.sendBinary(\"客户端~ 我收到了你的消息 \\'${string_s}\\'\".toUtf8Array())\n                case _ =>\n                    w.close()\n                    return\n            }\n        }",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "variableDeclaration",
                                                    "label": "let data = w.readMsg()",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": [
                                                        {
                                                            "type": "LET",
                                                            "label": "let",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "varBindingPattern",
                                                            "label": "data",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "callExpression",
                                                            "label": "w.readMsg()",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "fieldExpression",
                                                                    "label": "w.readMsg",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "w",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "readMsg",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argumentList",
                                                                    "label": "()",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "comment",
                                                    "label": "//println(\"data[0] = ${String.fromUtf8(data[0])}\")",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "matchExpression",
                                                    "label": "match (data[1]) {\n                case Some(msg)=>\n                    w.sendBinary(\"客户端~ 我收到了你的消息 \\'${string_s}\\'\".toUtf8Array())\n                case _ =>\n                    w.close()\n                    return\n            }",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": [
                                                        {
                                                            "type": "MATCH",
                                                            "label": "match",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "subscriptExpression",
                                                            "label": "data[1]",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "data",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "integerLiteral",
                                                                    "label": "1",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "matchCase",
                                                            "label": " {\n                case Some(msg)=>\n                    w.sendBinary(\"客户端~ 我收到了你的消息 \\'${string_s}\\'\".toUtf8Array())\n                case _ =>\n                    w.close()\n                    return\n            }",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "CASE",
                                                                    "label": "                case",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "enumPattern",
                                                                    "label": "Some(msg)",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "Some",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "enumPatternParameters",
                                                                            "label": "(msg)",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": [
                                                                                {
                                                                                    "type": "varBindingPattern",
                                                                                    "label": "msg",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "callExpression",
                                                                    "label": "w.sendBinary(\"客户端~ 我收到了你的消息 \\'${string_s}\\'\".toUtf8Array())",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "fieldExpression",
                                                                            "label": "w.sendBinary",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "w",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "sendBinary",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argumentList",
                                                                            "label": "(\"客户端~ 我收到了你的消息 \\'${string_s}\\'\".toUtf8Array())",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": [
                                                                                {
                                                                                    "type": "callExpression",
                                                                                    "label": "\"客户端~ 我收到了你的消息 \\'${string_s}\\'\".toUtf8Array()",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "fieldExpression",
                                                                                            "label": "\"客户端~ 我收到了你的消息 \\'${string_s}\\'\".toUtf8Array",
                                                                                            "start_token": 0,
                                                                                            "end_token": 0,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "stringLiteral",
                                                                                                    "label": "\"客户端~ 我收到了你的消息 \\'${string_s}\\'\"",
                                                                                                    "start_token": 0,
                                                                                                    "end_token": 0,
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "lineStringLiteral",
                                                                                                            "label": "\"客户端~ 我收到了你的消息 \\'${string_s}\\'\"",
                                                                                                            "start_token": 0,
                                                                                                            "end_token": 0,
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "quoteOpen",
                                                                                                                    "label": "\"",
                                                                                                                    "start_token": 0,
                                                                                                                    "end_token": 0,
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "lineStringContent",
                                                                                                                    "label": "客户端~ 我收到了你的消息 ",
                                                                                                                    "start_token": 0,
                                                                                                                    "end_token": 0,
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "escapeSeq",
                                                                                                                    "label": "\\'",
                                                                                                                    "start_token": 0,
                                                                                                                    "end_token": 0,
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "lineStringExpression",
                                                                                                                    "label": "${string_s}",
                                                                                                                    "start_token": 0,
                                                                                                                    "end_token": 0,
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "string_s",
                                                                                                                            "start_token": 0,
                                                                                                                            "end_token": 0,
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "escapeSeq",
                                                                                                                    "label": "\\'",
                                                                                                                    "start_token": 0,
                                                                                                                    "end_token": 0,
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "quoteClose",
                                                                                                                    "label": "\"",
                                                                                                                    "start_token": 0,
                                                                                                                    "end_token": 0,
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "toUtf8Array",
                                                                                                    "start_token": 0,
                                                                                                    "end_token": 0,
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argumentList",
                                                                                            "label": "()",
                                                                                            "start_token": 0,
                                                                                            "end_token": 0,
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "CASE",
                                                                    "label": "case",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "wildcardPattern",
                                                                    "label": "_",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "callExpression",
                                                                    "label": "w.close()",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "fieldExpression",
                                                                            "label": "w.close",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "w",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "close",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argumentList",
                                                                            "label": "()",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "returnExpression",
                                                                    "label": "return",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "RETURN",
                                                                            "label": "return",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "callExpression",
                            "label": "ws.launch()",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "fieldExpression",
                                    "label": "ws.launch",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "ws",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "launch",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argumentList",
                                    "label": "()",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "// 启动监听",
                            "start_token": 0,
                            "end_token": 0,
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "functionDefinition",
            "label": "func call_fuzz(string_c:String, string_s2:String) {\n    string_s = string_s2\n    try{\n        WebSocket4cjClient_ck.getOrThrow().sendBinary(string_c.toUtf8Array())\n        let data = WebSocket4cjClient_ck.getOrThrow().readMsg()\n        //println(\"data[0] = ${String.fromUtf8(data[0])}\")\n        match (data[1]) {\n            case Some(msg)=>\n                Client_msg = \"${String.fromUtf8(msg)}\"\n                println(\"客户端:服务端~ 我收到了你的消息 \\\"${Client_msg}\\\"\")\n            case _ =>\n                WebSocket4cjClient_ck.getOrThrow().close()\n                return\n        }\n    } catch (e: Exception) {\n        Exception_message = \"Exception\"\n    }\n    return\n}",
            "start_token": 0,
            "end_token": 0,
            "children": [
                {
                    "type": "FUNC",
                    "label": "func",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "identifier",
                    "label": "call_fuzz",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "functionParameters",
                    "label": "(string_c:String, string_s2:String)",
                    "start_token": 0,
                    "end_token": 0,
                    "children": [
                        {
                            "type": "parameterList",
                            "label": "string_c:String, string_s2:String",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "parameter",
                                    "label": "string_c:String",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "string_c",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        },
                                        {
                                            "type": "charLangTypes",
                                            "label": "String",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "parameter",
                                    "label": "string_s2:String",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "string_s2",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        },
                                        {
                                            "type": "charLangTypes",
                                            "label": "String",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "{\n    string_s = string_s2\n    try{\n        WebSocket4cjClient_ck.getOrThrow().sendBinary(string_c.toUtf8Array())\n        let data = WebSocket4cjClient_ck.getOrThrow().readMsg()\n        //println(\"data[0] = ${String.fromUtf8(data[0])}\")\n        match (data[1]) {\n            case Some(msg)=>\n                Client_msg = \"${String.fromUtf8(msg)}\"\n                println(\"客户端:服务端~ 我收到了你的消息 \\\"${Client_msg}\\\"\")\n            case _ =>\n                WebSocket4cjClient_ck.getOrThrow().close()\n                return\n        }\n    } catch (e: Exception) {\n        Exception_message = \"Exception\"\n    }\n    return\n}",
                    "start_token": 0,
                    "end_token": 0,
                    "children": [
                        {
                            "type": "assignmentExpression",
                            "label": "string_s = string_s2",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "string_s",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "string_s2",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "tryExpression",
                            "label": "try{\n        WebSocket4cjClient_ck.getOrThrow().sendBinary(string_c.toUtf8Array())\n        let data = WebSocket4cjClient_ck.getOrThrow().readMsg()\n        //println(\"data[0] = ${String.fromUtf8(data[0])}\")\n        match (data[1]) {\n            case Some(msg)=>\n                Client_msg = \"${String.fromUtf8(msg)}\"\n                println(\"客户端:服务端~ 我收到了你的消息 \\\"${Client_msg}\\\"\")\n            case _ =>\n                WebSocket4cjClient_ck.getOrThrow().close()\n                return\n        }\n    } catch (e: Exception) {\n        Exception_message = \"Exception\"\n    }",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "TRY",
                                    "label": "try",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "label": "{\n        WebSocket4cjClient_ck.getOrThrow().sendBinary(string_c.toUtf8Array())\n        let data = WebSocket4cjClient_ck.getOrThrow().readMsg()\n        //println(\"data[0] = ${String.fromUtf8(data[0])}\")\n        match (data[1]) {\n            case Some(msg)=>\n                Client_msg = \"${String.fromUtf8(msg)}\"\n                println(\"客户端:服务端~ 我收到了你的消息 \\\"${Client_msg}\\\"\")\n            case _ =>\n                WebSocket4cjClient_ck.getOrThrow().close()\n                return\n        }\n    }",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "callExpression",
                                            "label": "WebSocket4cjClient_ck.getOrThrow().sendBinary(string_c.toUtf8Array())",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "fieldExpression",
                                                    "label": "WebSocket4cjClient_ck.getOrThrow().sendBinary",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": [
                                                        {
                                                            "type": "callExpression",
                                                            "label": "WebSocket4cjClient_ck.getOrThrow()",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "fieldExpression",
                                                                    "label": "WebSocket4cjClient_ck.getOrThrow",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "WebSocket4cjClient_ck",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "getOrThrow",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argumentList",
                                                                    "label": "()",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "sendBinary",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argumentList",
                                                    "label": "(string_c.toUtf8Array())",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": [
                                                        {
                                                            "type": "callExpression",
                                                            "label": "string_c.toUtf8Array()",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "fieldExpression",
                                                                    "label": "string_c.toUtf8Array",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "string_c",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "toUtf8Array",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argumentList",
                                                                    "label": "()",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "variableDeclaration",
                                            "label": "let data = WebSocket4cjClient_ck.getOrThrow().readMsg()",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "LET",
                                                    "label": "let",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "varBindingPattern",
                                                    "label": "data",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "callExpression",
                                                    "label": "WebSocket4cjClient_ck.getOrThrow().readMsg()",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": [
                                                        {
                                                            "type": "fieldExpression",
                                                            "label": "WebSocket4cjClient_ck.getOrThrow().readMsg",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "callExpression",
                                                                    "label": "WebSocket4cjClient_ck.getOrThrow()",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "fieldExpression",
                                                                            "label": "WebSocket4cjClient_ck.getOrThrow",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "WebSocket4cjClient_ck",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "getOrThrow",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argumentList",
                                                                            "label": "()",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "readMsg",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argumentList",
                                                            "label": "()",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "comment",
                                            "label": "//println(\"data[0] = ${String.fromUtf8(data[0])}\")",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        },
                                        {
                                            "type": "matchExpression",
                                            "label": "match (data[1]) {\n            case Some(msg)=>\n                Client_msg = \"${String.fromUtf8(msg)}\"\n                println(\"客户端:服务端~ 我收到了你的消息 \\\"${Client_msg}\\\"\")\n            case _ =>\n                WebSocket4cjClient_ck.getOrThrow().close()\n                return\n        }",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "MATCH",
                                                    "label": "match",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "subscriptExpression",
                                                    "label": "data[1]",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "data",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "integerLiteral",
                                                            "label": "1",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "matchCase",
                                                    "label": " {\n            case Some(msg)=>\n                Client_msg = \"${String.fromUtf8(msg)}\"\n                println(\"客户端:服务端~ 我收到了你的消息 \\\"${Client_msg}\\\"\")\n            case _ =>\n                WebSocket4cjClient_ck.getOrThrow().close()\n                return\n        }",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": [
                                                        {
                                                            "type": "CASE",
                                                            "label": "            case",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "enumPattern",
                                                            "label": "Some(msg)",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Some",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "enumPatternParameters",
                                                                    "label": "(msg)",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "varBindingPattern",
                                                                            "label": "msg",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "assignmentExpression",
                                                            "label": "Client_msg = \"${String.fromUtf8(msg)}\"",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "Client_msg",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "stringLiteral",
                                                                    "label": "\"${String.fromUtf8(msg)}\"",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "lineStringLiteral",
                                                                            "label": "\"${String.fromUtf8(msg)}\"",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": [
                                                                                {
                                                                                    "type": "quoteOpen",
                                                                                    "label": "\"",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "lineStringExpression",
                                                                                    "label": "${String.fromUtf8(msg)}",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "callExpression",
                                                                                            "label": "String.fromUtf8(msg)",
                                                                                            "start_token": 0,
                                                                                            "end_token": 0,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "fieldExpression",
                                                                                                    "label": "String.fromUtf8",
                                                                                                    "start_token": 0,
                                                                                                    "end_token": 0,
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "String",
                                                                                                            "start_token": 0,
                                                                                                            "end_token": 0,
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "fromUtf8",
                                                                                                            "start_token": 0,
                                                                                                            "end_token": 0,
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "argumentList",
                                                                                                    "label": "(msg)",
                                                                                                    "start_token": 0,
                                                                                                    "end_token": 0,
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "msg",
                                                                                                            "start_token": 0,
                                                                                                            "end_token": 0,
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "quoteClose",
                                                                                    "label": "\"",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "callExpression",
                                                            "label": "println(\"客户端:服务端~ 我收到了你的消息 \\\"${Client_msg}\\\"\")",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "builtinFunction",
                                                                    "label": "println",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "argumentList",
                                                                    "label": "(\"客户端:服务端~ 我收到了你的消息 \\\"${Client_msg}\\\"\")",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "stringLiteral",
                                                                            "label": "\"客户端:服务端~ 我收到了你的消息 \\\"${Client_msg}\\\"\"",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": [
                                                                                {
                                                                                    "type": "lineStringLiteral",
                                                                                    "label": "\"客户端:服务端~ 我收到了你的消息 \\\"${Client_msg}\\\"\"",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "quoteOpen",
                                                                                            "label": "\"",
                                                                                            "start_token": 0,
                                                                                            "end_token": 0,
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "lineStringContent",
                                                                                            "label": "客户端:服务端~ 我收到了你的消息 ",
                                                                                            "start_token": 0,
                                                                                            "end_token": 0,
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "escapeSeq",
                                                                                            "label": "\\\"",
                                                                                            "start_token": 0,
                                                                                            "end_token": 0,
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "lineStringExpression",
                                                                                            "label": "${Client_msg}",
                                                                                            "start_token": 0,
                                                                                            "end_token": 0,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "Client_msg",
                                                                                                    "start_token": 0,
                                                                                                    "end_token": 0,
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "escapeSeq",
                                                                                            "label": "\\\"",
                                                                                            "start_token": 0,
                                                                                            "end_token": 0,
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "quoteClose",
                                                                                            "label": "\"",
                                                                                            "start_token": 0,
                                                                                            "end_token": 0,
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "CASE",
                                                            "label": "case",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "wildcardPattern",
                                                            "label": "_",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "callExpression",
                                                            "label": "WebSocket4cjClient_ck.getOrThrow().close()",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "fieldExpression",
                                                                    "label": "WebSocket4cjClient_ck.getOrThrow().close",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "callExpression",
                                                                            "label": "WebSocket4cjClient_ck.getOrThrow()",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": [
                                                                                {
                                                                                    "type": "fieldExpression",
                                                                                    "label": "WebSocket4cjClient_ck.getOrThrow",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "WebSocket4cjClient_ck",
                                                                                            "start_token": 0,
                                                                                            "end_token": 0,
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "getOrThrow",
                                                                                            "start_token": 0,
                                                                                            "end_token": 0,
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argumentList",
                                                                                    "label": "()",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "close",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argumentList",
                                                                    "label": "()",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "returnExpression",
                                                            "label": "return",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "RETURN",
                                                                    "label": "return",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "CATCH",
                                    "label": "catch",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "exceptionTypePattern",
                                    "label": "e: Exception",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "e",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        },
                                        {
                                            "type": "userType",
                                            "label": "Exception",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "Exception",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": " {\n        Exception_message = \"Exception\"\n    }",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "assignmentExpression",
                                            "label": "Exception_message = \"Exception\"",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "Exception_message",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "stringLiteral",
                                                    "label": "\"Exception\"",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": [
                                                        {
                                                            "type": "lineStringLiteral",
                                                            "label": "\"Exception\"",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "quoteOpen",
                                                                    "label": "\"",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "lineStringContent",
                                                                    "label": "Exception",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "quoteClose",
                                                                    "label": "\"",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "returnExpression",
                            "label": "return",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "RETURN",
                                    "label": "return",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "functionDefinition",
            "label": "func unboundTest():Unit{\n    var case_name = CString(\"Fuzz_sendBinary\")\n    unsafe{\n        // 根据 call_fuzz的入参类型，选择fuzz方法，例如DF_FUZZ_Int64。其他方法见secodeFuzz.cj。其中100000为定义测试次数。其他参数可不变\n        DT_FUZZ_String_2(0,100000,case_name,0,call_fuzz)\n        case_name.free()\n    }\n}",
            "start_token": 0,
            "end_token": -1,
            "children": [
                {
                    "type": "FUNC",
                    "label": "func",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "identifier",
                    "label": "unboundTest",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "functionParameters",
                    "label": "()",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "charLangTypes",
                    "label": "Unit",
                    "start_token": 0,
                    "end_token": 0,
                    "children": [
                        {
                            "type": "UNIT",
                            "label": "Unit",
                            "start_token": 0,
                            "end_token": 0,
                            "children": []
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "{\n    var case_name = CString(\"Fuzz_sendBinary\")\n    unsafe{\n        // 根据 call_fuzz的入参类型，选择fuzz方法，例如DF_FUZZ_Int64。其他方法见secodeFuzz.cj。其中100000为定义测试次数。其他参数可不变\n        DT_FUZZ_String_2(0,100000,case_name,0,call_fuzz)\n        case_name.free()\n    }\n}",
                    "start_token": 0,
                    "end_token": -1,
                    "children": [
                        {
                            "type": "variableDeclaration",
                            "label": "var case_name = CString(\"Fuzz_sendBinary\")",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "VAR",
                                    "label": "var",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "varBindingPattern",
                                    "label": "case_name",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "callExpression",
                                    "label": "CString(\"Fuzz_sendBinary\")",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "CString",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        },
                                        {
                                            "type": "argumentList",
                                            "label": "(\"Fuzz_sendBinary\")",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "stringLiteral",
                                                    "label": "\"Fuzz_sendBinary\"",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": [
                                                        {
                                                            "type": "lineStringLiteral",
                                                            "label": "\"Fuzz_sendBinary\"",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "quoteOpen",
                                                                    "label": "\"",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "lineStringContent",
                                                                    "label": "Fuzz_sendBinary",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "quoteClose",
                                                                    "label": "\"",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "unsafeExpression",
                            "label": "unsafe{\n        // 根据 call_fuzz的入参类型，选择fuzz方法，例如DF_FUZZ_Int64。其他方法见secodeFuzz.cj。其中100000为定义测试次数。其他参数可不变\n        DT_FUZZ_String_2(0,100000,case_name,0,call_fuzz)\n        case_name.free()\n    }",
                            "start_token": 0,
                            "end_token": -1,
                            "children": [
                                {
                                    "type": "UNSAFE",
                                    "label": "unsafe",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "label": "{\n        // 根据 call_fuzz的入参类型，选择fuzz方法，例如DF_FUZZ_Int64。其他方法见secodeFuzz.cj。其中100000为定义测试次数。其他参数可不变\n        DT_FUZZ_String_2(0,100000,case_name,0,call_fuzz)\n        case_name.free()\n    }",
                                    "start_token": 0,
                                    "end_token": -1,
                                    "children": [
                                        {
                                            "type": "comment",
                                            "label": "// 根据 call_fuzz的入参类型，选择fuzz方法，例如DF_FUZZ_Int64。其他方法见secodeFuzz.cj。其中100000为定义测试次数。其他参数可不变",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        },
                                        {
                                            "type": "callExpression",
                                            "label": "DT_FUZZ_String_2(0,100000,case_name,0,call_fuzz)",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "DT_FUZZ_String_2",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "argumentList",
                                                    "label": "(0,100000,case_name,0,call_fuzz)",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": [
                                                        {
                                                            "type": "integerLiteral",
                                                            "label": "0",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "integerLiteral",
                                                            "label": "100000",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "case_name",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "integerLiteral",
                                                            "label": "0",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "call_fuzz",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "callExpression",
                                            "label": "case_name.free()",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "children": [
                                                {
                                                    "type": "fieldExpression",
                                                    "label": "case_name.free",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "case_name",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "identifier",
                                                            "label": "free",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "argumentList",
                                                    "label": "()",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "mainDefinition",
            "label": "main(){\n    spawn{\n        serve()\n    }\n    sleep(1000*1000*1000*2)\n    WebSocket4cjClient_ck = wsclient.connect()\n    unboundTest()\n    return\n}",
            "start_token": -1,
            "end_token": -1,
            "children": [
                {
                    "type": "MAIN",
                    "label": "main",
                    "start_token": -1,
                    "end_token": -1,
                    "children": []
                },
                {
                    "type": "functionParameters",
                    "label": "()",
                    "start_token": -1,
                    "end_token": -1,
                    "children": []
                },
                {
                    "type": "block",
                    "label": "{\n    spawn{\n        serve()\n    }\n    sleep(1000*1000*1000*2)\n    WebSocket4cjClient_ck = wsclient.connect()\n    unboundTest()\n    return\n}",
                    "start_token": -1,
                    "end_token": -1,
                    "children": [
                        {
                            "type": "spawnExpression",
                            "label": "spawn{\n        serve()\n    }",
                            "start_token": -1,
                            "end_token": -1,
                            "children": [
                                {
                                    "type": "SPAWN",
                                    "label": "spawn",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "children": []
                                },
                                {
                                    "type": "lambdaExpression",
                                    "label": "{\n        serve()\n    }",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "children": [
                                        {
                                            "type": "callExpression",
                                            "label": "serve()",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "serve",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "children": []
                                                },
                                                {
                                                    "type": "argumentList",
                                                    "label": "()",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "callExpression",
                            "label": "sleep(1000*1000*1000*2)",
                            "start_token": -1,
                            "end_token": -1,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "sleep",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "children": []
                                },
                                {
                                    "type": "argumentList",
                                    "label": "(1000*1000*1000*2)",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "children": [
                                        {
                                            "type": "binaryExpression",
                                            "label": "1000*1000*1000*2",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "children": [
                                                {
                                                    "type": "binaryExpression",
                                                    "label": "1000*1000*1000",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "children": [
                                                        {
                                                            "type": "binaryExpression",
                                                            "label": "1000*1000",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "children": [
                                                                {
                                                                    "type": "integerLiteral",
                                                                    "label": "1000",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "integerLiteral",
                                                                    "label": "1000",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "integerLiteral",
                                                            "label": "1000",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "integerLiteral",
                                                    "label": "2",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "assignmentExpression",
                            "label": "WebSocket4cjClient_ck = wsclient.connect()",
                            "start_token": -1,
                            "end_token": -1,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "WebSocket4cjClient_ck",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "children": []
                                },
                                {
                                    "type": "callExpression",
                                    "label": "wsclient.connect()",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "children": [
                                        {
                                            "type": "fieldExpression",
                                            "label": "wsclient.connect",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "wsclient",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "connect",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argumentList",
                                            "label": "()",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "callExpression",
                            "label": "unboundTest()",
                            "start_token": -1,
                            "end_token": -1,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "unboundTest",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "children": []
                                },
                                {
                                    "type": "argumentList",
                                    "label": "()",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "returnExpression",
                            "label": "return",
                            "start_token": -1,
                            "end_token": -1,
                            "children": [
                                {
                                    "type": "RETURN",
                                    "label": "return",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}