{
    "type": "sourceFile",
    "label": "// 群聊程序-服务器\n// 仓颉语言团队 刘俊杰 2024/10/21\nimport std.net.*\nimport std.time.*\nimport std.sync.*\nimport std.collection.*\nimport std.collection.concurrent.*\nimport std.console.*\n\nconst PORT: UInt16 = 24621\nconst BUFFER_SIZE = 1024\nvar g_quit = false\n\n// 从控制台读取退出命令\nfunc controller() {\n    spawn {\n        while (!g_quit) {\n            let key = Console.stdIn.read().getOrDefault {r' '}\n            if (key == r'q' || key == r'Q') {\n                g_quit = true\n            }\n        }\n    }\n}\n\nextend TcpSocket {\n    public func tryWrite(data: Array<Byte>) {\n        try { this.write(data) } catch (e: SocketException) {\n            if (!this.isClosed()) { this.close() }\n            return false\n        }\n        return true\n    }\n}\n\nmain() {\n    let messageQueue = NonBlockingQueue<(TcpSocket, Array<Byte>)>()\n    let members = LinkedList<TcpSocket>() // 群聊成员/客户端\n    let server = TcpServerSocket(bindAt: PORT) // 服务端\n    server.bind()\n    controller()\n\n    // 和新的客户端建立连接\n    let mutex = ReentrantMutex()\n    let monitor = Monitor()\n    spawn {\n        while (!g_quit) {\n            let client = server.accept()\n            synchronized (mutex) {\n                members.append(client)\n            }\n            // 每个连接要处理的任务\n            spawn {\n                while (!g_quit) {\n                    let data = Array<Byte>(BUFFER_SIZE, repeat: 0)\n                    try { client.read(data) } catch (e: SocketException) {\n                        return // 遇到异常终止此线程，由转发线程清理资源\n                    }\n                    println(String.fromUtf8(data))\n                    messageQueue.enqueue((client, data))\n                    synchronized (monitor) { monitor.notify() }\n                }\n            }\n        }\n    }\n\n    // 转发消息到所有客户端，实现群聊\n    while (!g_quit) {\n        // 我们使用了并发数据结构，这里 Monitor 不必保护数据，仅用于避免当前 while 空转\n        synchronized (monitor) {\n            monitor.wait(timeout: 100 * Duration.millisecond)            \n        }\n        while (let Some((client, data)) <- messageQueue.dequeue()) {\n            mutex.lock()\n            // 遍历群聊成员，转发消息并清理无效客户端\n            members.removeIf { socket =>\n                if (refEq(client, socket)) { // 不必转发给消息源\n                    return false\n                }\n                !socket.tryWrite(data)\n            }\n            mutex.unlock()\n        }\n    }\n    // 退出时通知所有客户端\n    for (client in members) {\n        if (client.tryWrite(\"Server Exit\".toArray())) {\n            client.close()\n        }\n    }\n    server.close()\n}",
    "start_token": 0,
    "end_token": -1,
    "children": [
        {
            "type": "comment",
            "label": "// 群聊程序-服务器",
            "start_token": 0,
            "end_token": 0,
            "children": []
        },
        {
            "type": "comment",
            "label": "// 仓颉语言团队 刘俊杰 2024/10/21",
            "start_token": 0,
            "end_token": 0,
            "children": []
        },
        {
            "type": "importList",
            "label": "import std.net.*",
            "start_token": 0,
            "end_token": 0,
            "children": [
                {
                    "type": "IMPORT",
                    "label": "import",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "importContent",
                    "label": "std.net.*",
                    "start_token": 0,
                    "end_token": 0,
                    "children": [
                        {
                            "type": "importAll",
                            "label": "std.net.*",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "std",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "net",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "importList",
            "label": "import std.time.*",
            "start_token": 0,
            "end_token": 0,
            "children": [
                {
                    "type": "IMPORT",
                    "label": "import",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "importContent",
                    "label": "std.time.*",
                    "start_token": 0,
                    "end_token": 0,
                    "children": [
                        {
                            "type": "importAll",
                            "label": "std.time.*",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "std",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "time",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "importList",
            "label": "import std.sync.*",
            "start_token": 0,
            "end_token": 0,
            "children": [
                {
                    "type": "IMPORT",
                    "label": "import",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "importContent",
                    "label": "std.sync.*",
                    "start_token": 0,
                    "end_token": 0,
                    "children": [
                        {
                            "type": "importAll",
                            "label": "std.sync.*",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "std",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "sync",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "importList",
            "label": "import std.collection.*",
            "start_token": 0,
            "end_token": 0,
            "children": [
                {
                    "type": "IMPORT",
                    "label": "import",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "importContent",
                    "label": "std.collection.*",
                    "start_token": 0,
                    "end_token": 0,
                    "children": [
                        {
                            "type": "importAll",
                            "label": "std.collection.*",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "std",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "collection",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "importList",
            "label": "import std.collection.concurrent.*",
            "start_token": 0,
            "end_token": 0,
            "children": [
                {
                    "type": "IMPORT",
                    "label": "import",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "importContent",
                    "label": "std.collection.concurrent.*",
                    "start_token": 0,
                    "end_token": 0,
                    "children": [
                        {
                            "type": "importAll",
                            "label": "std.collection.concurrent.*",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "std",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "collection",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "concurrent",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "importList",
            "label": "import std.console.*",
            "start_token": 0,
            "end_token": 0,
            "children": [
                {
                    "type": "IMPORT",
                    "label": "import",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "importContent",
                    "label": "std.console.*",
                    "start_token": 0,
                    "end_token": 0,
                    "children": [
                        {
                            "type": "importAll",
                            "label": "std.console.*",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "std",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "console",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "variableDeclaration",
            "label": "const PORT: UInt16 = 24621",
            "start_token": 0,
            "end_token": 0,
            "children": [
                {
                    "type": "CONST",
                    "label": "const",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "varBindingPattern",
                    "label": "PORT",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "charLangTypes",
                    "label": "UInt16",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "integerLiteral",
                    "label": "24621",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                }
            ]
        },
        {
            "type": "variableDeclaration",
            "label": "const BUFFER_SIZE = 1024",
            "start_token": 0,
            "end_token": 0,
            "children": [
                {
                    "type": "CONST",
                    "label": "const",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "varBindingPattern",
                    "label": "BUFFER_SIZE",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "integerLiteral",
                    "label": "1024",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                }
            ]
        },
        {
            "type": "variableDeclaration",
            "label": "var g_quit = false",
            "start_token": 0,
            "end_token": 0,
            "children": [
                {
                    "type": "VAR",
                    "label": "var",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "varBindingPattern",
                    "label": "g_quit",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "booleanLiteral",
                    "label": "false",
                    "start_token": 0,
                    "end_token": 0,
                    "children": [
                        {
                            "type": "FALSE",
                            "label": "false",
                            "start_token": 0,
                            "end_token": 0,
                            "children": []
                        }
                    ]
                }
            ]
        },
        {
            "type": "comment",
            "label": "// 从控制台读取退出命令",
            "start_token": 0,
            "end_token": 0,
            "children": []
        },
        {
            "type": "functionDefinition",
            "label": "func controller() {\n    spawn {\n        while (!g_quit) {\n            let key = Console.stdIn.read().getOrDefault {r' '}\n            if (key == r'q' || key == r'Q') {\n                g_quit = true\n            }\n        }\n    }\n}",
            "start_token": 0,
            "end_token": 0,
            "children": [
                {
                    "type": "FUNC",
                    "label": "func",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "identifier",
                    "label": "controller",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "functionParameters",
                    "label": "()",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "block",
                    "label": "{\n    spawn {\n        while (!g_quit) {\n            let key = Console.stdIn.read().getOrDefault {r' '}\n            if (key == r'q' || key == r'Q') {\n                g_quit = true\n            }\n        }\n    }\n}",
                    "start_token": 0,
                    "end_token": 0,
                    "children": [
                        {
                            "type": "spawnExpression",
                            "label": "spawn {\n        while (!g_quit) {\n            let key = Console.stdIn.read().getOrDefault {r' '}\n            if (key == r'q' || key == r'Q') {\n                g_quit = true\n            }\n        }\n    }",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "SPAWN",
                                    "label": "spawn",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "lambdaExpression",
                                    "label": " {\n        while (!g_quit) {\n            let key = Console.stdIn.read().getOrDefault {r' '}\n            if (key == r'q' || key == r'Q') {\n                g_quit = true\n            }\n        }\n    }",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "whileExpression",
                                            "label": "while (!g_quit) {\n            let key = Console.stdIn.read().getOrDefault {r' '}\n            if (key == r'q' || key == r'Q') {\n                g_quit = true\n            }\n        }",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "WHILE",
                                                    "label": "while",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "unaryExpression",
                                                    "label": "!g_quit",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "g_quit",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": " {\n            let key = Console.stdIn.read().getOrDefault {r' '}\n            if (key == r'q' || key == r'Q') {\n                g_quit = true\n            }\n        }",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": [
                                                        {
                                                            "type": "variableDeclaration",
                                                            "label": "let key = Console.stdIn.read().getOrDefault",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "LET",
                                                                    "label": "let",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "varBindingPattern",
                                                                    "label": "key",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "fieldExpression",
                                                                    "label": "Console.stdIn.read().getOrDefault",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "callExpression",
                                                                            "label": "Console.stdIn.read()",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": [
                                                                                {
                                                                                    "type": "fieldExpression",
                                                                                    "label": "Console.stdIn.read",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "fieldExpression",
                                                                                            "label": "Console.stdIn",
                                                                                            "start_token": 0,
                                                                                            "end_token": 0,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "Console",
                                                                                                    "start_token": 0,
                                                                                                    "end_token": 0,
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "stdIn",
                                                                                                    "start_token": 0,
                                                                                                    "end_token": 0,
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "read",
                                                                                            "start_token": 0,
                                                                                            "end_token": 0,
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argumentList",
                                                                                    "label": "()",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "getOrDefault",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "lambdaExpression",
                                                            "label": "{r' '}",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "r",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "characterLiteral",
                                                                    "label": "' '",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "ifExpression",
                                                            "label": "if (key == r'q' || key == r'Q') {\n                g_quit = true\n            }",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "IF",
                                                                    "label": "if",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "binaryExpression",
                                                                    "label": "key == r'q' || key == r'Q'",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "binaryExpression",
                                                                            "label": "key == r'q'",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "key",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "ERROR",
                                                                                    "label": "r",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "characterLiteral",
                                                                                    "label": "'q'",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "binaryExpression",
                                                                            "label": "key == r'Q'",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "key",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "ERROR",
                                                                                    "label": "r",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "characterLiteral",
                                                                                    "label": "'Q'",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": " {\n                g_quit = true\n            }",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "assignmentExpression",
                                                                            "label": "g_quit = true",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "g_quit",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "booleanLiteral",
                                                                                    "label": "true",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "TRUE",
                                                                                            "label": "true",
                                                                                            "start_token": 0,
                                                                                            "end_token": 0,
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "extendDefinition",
            "label": "extend TcpSocket {\n    public func tryWrite(data: Array<Byte>) {\n        try { this.write(data) } catch (e: SocketException) {\n            if (!this.isClosed()) { this.close() }\n            return false\n        }\n        return true\n    }\n}",
            "start_token": 0,
            "end_token": 0,
            "children": [
                {
                    "type": "EXTEND",
                    "label": "extend",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "classType",
                    "label": "TcpSocket",
                    "start_token": 0,
                    "end_token": 0,
                    "children": [
                        {
                            "type": "identifier",
                            "label": "TcpSocket",
                            "start_token": 0,
                            "end_token": 0,
                            "children": []
                        }
                    ]
                },
                {
                    "type": "extendBody",
                    "label": "{\n    public func tryWrite(data: Array<Byte>) {\n        try { this.write(data) } catch (e: SocketException) {\n            if (!this.isClosed()) { this.close() }\n            return false\n        }\n        return true\n    }\n}",
                    "start_token": 0,
                    "end_token": 0,
                    "children": [
                        {
                            "type": "extendMemberDeclaration",
                            "label": "public func tryWrite(data: Array<Byte>) {\n        try { this.write(data) } catch (e: SocketException) {\n            if (!this.isClosed()) { this.close() }\n            return false\n        }\n        return true\n    }",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "functionDefinition",
                                    "label": "public func tryWrite(data: Array<Byte>) {\n        try { this.write(data) } catch (e: SocketException) {\n            if (!this.isClosed()) { this.close() }\n            return false\n        }\n        return true\n    }",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "modifiers",
                                            "label": "public",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "PUBLIC",
                                                    "label": "public",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                }
                                            ]
                                        },
                                        {
                                            "type": "FUNC",
                                            "label": "func",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "tryWrite",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        },
                                        {
                                            "type": "functionParameters",
                                            "label": "(data: Array<Byte>)",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "parameterList",
                                                    "label": "data: Array<Byte>",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": [
                                                        {
                                                            "type": "parameter",
                                                            "label": "data: Array<Byte>",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "data",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "userType",
                                                                    "label": "Array<Byte>",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "Array",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "typeArguments",
                                                                            "label": "<Byte>",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": [
                                                                                {
                                                                                    "type": "userType",
                                                                                    "label": "Byte",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "Byte",
                                                                                            "start_token": 0,
                                                                                            "end_token": 0,
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "{\n        try { this.write(data) } catch (e: SocketException) {\n            if (!this.isClosed()) { this.close() }\n            return false\n        }\n        return true\n    }",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "tryExpression",
                                                    "label": "try { this.write(data) } catch (e: SocketException) {\n            if (!this.isClosed()) { this.close() }\n            return false\n        }",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": [
                                                        {
                                                            "type": "TRY",
                                                            "label": "try",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": " { this.write(data) }",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "callExpression",
                                                                    "label": "this.write(data)",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "fieldExpression",
                                                                            "label": "this.write",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": [
                                                                                {
                                                                                    "type": "THIS",
                                                                                    "label": "this",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "write",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argumentList",
                                                                            "label": "(data)",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "data",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "CATCH",
                                                            "label": "catch",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "exceptionTypePattern",
                                                            "label": "e: SocketException",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "e",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "userType",
                                                                    "label": "SocketException",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "SocketException",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "block",
                                                            "label": " {\n            if (!this.isClosed()) { this.close() }\n            return false\n        }",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "ifExpression",
                                                                    "label": "if (!this.isClosed()) { this.close() }",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "IF",
                                                                            "label": "if",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "unaryExpression",
                                                                            "label": "!this.isClosed()",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": [
                                                                                {
                                                                                    "type": "callExpression",
                                                                                    "label": "this.isClosed()",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "fieldExpression",
                                                                                            "label": "this.isClosed",
                                                                                            "start_token": 0,
                                                                                            "end_token": 0,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "THIS",
                                                                                                    "label": "this",
                                                                                                    "start_token": 0,
                                                                                                    "end_token": 0,
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "isClosed",
                                                                                                    "start_token": 0,
                                                                                                    "end_token": 0,
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argumentList",
                                                                                            "label": "()",
                                                                                            "start_token": 0,
                                                                                            "end_token": 0,
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "block",
                                                                            "label": " { this.close() }",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": [
                                                                                {
                                                                                    "type": "callExpression",
                                                                                    "label": "this.close()",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "fieldExpression",
                                                                                            "label": "this.close",
                                                                                            "start_token": 0,
                                                                                            "end_token": 0,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "THIS",
                                                                                                    "label": "this",
                                                                                                    "start_token": 0,
                                                                                                    "end_token": 0,
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "close",
                                                                                                    "start_token": 0,
                                                                                                    "end_token": 0,
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "argumentList",
                                                                                            "label": "()",
                                                                                            "start_token": 0,
                                                                                            "end_token": 0,
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "returnExpression",
                                                                    "label": "return false",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "RETURN",
                                                                            "label": "return",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "booleanLiteral",
                                                                            "label": "false",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": [
                                                                                {
                                                                                    "type": "FALSE",
                                                                                    "label": "false",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "returnExpression",
                                                    "label": "return true",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": [
                                                        {
                                                            "type": "RETURN",
                                                            "label": "return",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "booleanLiteral",
                                                            "label": "true",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "TRUE",
                                                                    "label": "true",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "mainDefinition",
            "label": "main() {\n    let messageQueue = NonBlockingQueue<(TcpSocket, Array<Byte>)>()\n    let members = LinkedList<TcpSocket>() // 群聊成员/客户端\n    let server = TcpServerSocket(bindAt: PORT) // 服务端\n    server.bind()\n    controller()\n\n    // 和新的客户端建立连接\n    let mutex = ReentrantMutex()\n    let monitor = Monitor()\n    spawn {\n        while (!g_quit) {\n            let client = server.accept()\n            synchronized (mutex) {\n                members.append(client)\n            }\n            // 每个连接要处理的任务\n            spawn {\n                while (!g_quit) {\n                    let data = Array<Byte>(BUFFER_SIZE, repeat: 0)\n                    try { client.read(data) } catch (e: SocketException) {\n                        return // 遇到异常终止此线程，由转发线程清理资源\n                    }\n                    println(String.fromUtf8(data))\n                    messageQueue.enqueue((client, data))\n                    synchronized (monitor) { monitor.notify() }\n                }\n            }\n        }\n    }\n\n    // 转发消息到所有客户端，实现群聊\n    while (!g_quit) {\n        // 我们使用了并发数据结构，这里 Monitor 不必保护数据，仅用于避免当前 while 空转\n        synchronized (monitor) {\n            monitor.wait(timeout: 100 * Duration.millisecond)            \n        }\n        while (let Some((client, data)) <- messageQueue.dequeue()) {\n            mutex.lock()\n            // 遍历群聊成员，转发消息并清理无效客户端\n            members.removeIf { socket =>\n                if (refEq(client, socket)) { // 不必转发给消息源\n                    return false\n                }\n                !socket.tryWrite(data)\n            }\n            mutex.unlock()\n        }\n    }\n    // 退出时通知所有客户端\n    for (client in members) {\n        if (client.tryWrite(\"Server Exit\".toArray())) {\n            client.close()\n        }\n    }\n    server.close()\n}",
            "start_token": 0,
            "end_token": -1,
            "children": [
                {
                    "type": "MAIN",
                    "label": "main",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "functionParameters",
                    "label": "()",
                    "start_token": 0,
                    "end_token": 0,
                    "children": []
                },
                {
                    "type": "block",
                    "label": "{\n    let messageQueue = NonBlockingQueue<(TcpSocket, Array<Byte>)>()\n    let members = LinkedList<TcpSocket>() // 群聊成员/客户端\n    let server = TcpServerSocket(bindAt: PORT) // 服务端\n    server.bind()\n    controller()\n\n    // 和新的客户端建立连接\n    let mutex = ReentrantMutex()\n    let monitor = Monitor()\n    spawn {\n        while (!g_quit) {\n            let client = server.accept()\n            synchronized (mutex) {\n                members.append(client)\n            }\n            // 每个连接要处理的任务\n            spawn {\n                while (!g_quit) {\n                    let data = Array<Byte>(BUFFER_SIZE, repeat: 0)\n                    try { client.read(data) } catch (e: SocketException) {\n                        return // 遇到异常终止此线程，由转发线程清理资源\n                    }\n                    println(String.fromUtf8(data))\n                    messageQueue.enqueue((client, data))\n                    synchronized (monitor) { monitor.notify() }\n                }\n            }\n        }\n    }\n\n    // 转发消息到所有客户端，实现群聊\n    while (!g_quit) {\n        // 我们使用了并发数据结构，这里 Monitor 不必保护数据，仅用于避免当前 while 空转\n        synchronized (monitor) {\n            monitor.wait(timeout: 100 * Duration.millisecond)            \n        }\n        while (let Some((client, data)) <- messageQueue.dequeue()) {\n            mutex.lock()\n            // 遍历群聊成员，转发消息并清理无效客户端\n            members.removeIf { socket =>\n                if (refEq(client, socket)) { // 不必转发给消息源\n                    return false\n                }\n                !socket.tryWrite(data)\n            }\n            mutex.unlock()\n        }\n    }\n    // 退出时通知所有客户端\n    for (client in members) {\n        if (client.tryWrite(\"Server Exit\".toArray())) {\n            client.close()\n        }\n    }\n    server.close()\n}",
                    "start_token": 0,
                    "end_token": -1,
                    "children": [
                        {
                            "type": "variableDeclaration",
                            "label": "let messageQueue = NonBlockingQueue<(TcpSocket, Array<Byte>)>()",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "LET",
                                    "label": "let",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "varBindingPattern",
                                    "label": "messageQueue",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "callExpression",
                                    "label": "NonBlockingQueue<(TcpSocket, Array<Byte>)>()",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "genericsType",
                                            "label": "NonBlockingQueue<(TcpSocket, Array<Byte>)>",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "typeIdentifier",
                                                    "label": "NonBlockingQueue",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "typeArguments",
                                                    "label": "<(TcpSocket, Array<Byte>)>",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": [
                                                        {
                                                            "type": "tupleType",
                                                            "label": "(TcpSocket, Array<Byte>)",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "userType",
                                                                    "label": "TcpSocket",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "TcpSocket",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "userType",
                                                                    "label": "Array<Byte>",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "Array",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "typeArguments",
                                                                            "label": "<Byte>",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": [
                                                                                {
                                                                                    "type": "userType",
                                                                                    "label": "Byte",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "Byte",
                                                                                            "start_token": 0,
                                                                                            "end_token": 0,
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argumentList",
                                            "label": "()",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "variableDeclaration",
                            "label": "let members = LinkedList<TcpSocket>()",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "LET",
                                    "label": "let",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "varBindingPattern",
                                    "label": "members",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "callExpression",
                                    "label": "LinkedList<TcpSocket>()",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "genericsType",
                                            "label": "LinkedList<TcpSocket>",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "typeIdentifier",
                                                    "label": "LinkedList",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "typeArguments",
                                                    "label": "<TcpSocket>",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": [
                                                        {
                                                            "type": "userType",
                                                            "label": "TcpSocket",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "TcpSocket",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "argumentList",
                                            "label": "()",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "// 群聊成员/客户端",
                            "start_token": 0,
                            "end_token": 0,
                            "children": []
                        },
                        {
                            "type": "variableDeclaration",
                            "label": "let server = TcpServerSocket(bindAt: PORT)",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "LET",
                                    "label": "let",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "varBindingPattern",
                                    "label": "server",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "callExpression",
                                    "label": "TcpServerSocket(bindAt: PORT)",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "TcpServerSocket",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        },
                                        {
                                            "type": "argumentList",
                                            "label": "(bindAt: PORT)",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "identifier",
                                                    "label": "bindAt",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "PORT",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "// 服务端",
                            "start_token": 0,
                            "end_token": 0,
                            "children": []
                        },
                        {
                            "type": "callExpression",
                            "label": "server.bind()",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "fieldExpression",
                                    "label": "server.bind",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "server",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "bind",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argumentList",
                                    "label": "()",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "callExpression",
                            "label": "controller()",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "identifier",
                                    "label": "controller",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "argumentList",
                                    "label": "()",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "// 和新的客户端建立连接",
                            "start_token": 0,
                            "end_token": 0,
                            "children": []
                        },
                        {
                            "type": "variableDeclaration",
                            "label": "let mutex = ReentrantMutex()",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "LET",
                                    "label": "let",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "varBindingPattern",
                                    "label": "mutex",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "callExpression",
                                    "label": "ReentrantMutex()",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "ReentrantMutex",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        },
                                        {
                                            "type": "argumentList",
                                            "label": "()",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "variableDeclaration",
                            "label": "let monitor = Monitor()",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "LET",
                                    "label": "let",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "varBindingPattern",
                                    "label": "monitor",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "callExpression",
                                    "label": "Monitor()",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "Monitor",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        },
                                        {
                                            "type": "argumentList",
                                            "label": "()",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "spawnExpression",
                            "label": "spawn {\n        while (!g_quit) {\n            let client = server.accept()\n            synchronized (mutex) {\n                members.append(client)\n            }\n            // 每个连接要处理的任务\n            spawn {\n                while (!g_quit) {\n                    let data = Array<Byte>(BUFFER_SIZE, repeat: 0)\n                    try { client.read(data) } catch (e: SocketException) {\n                        return // 遇到异常终止此线程，由转发线程清理资源\n                    }\n                    println(String.fromUtf8(data))\n                    messageQueue.enqueue((client, data))\n                    synchronized (monitor) { monitor.notify() }\n                }\n            }\n        }\n    }",
                            "start_token": 0,
                            "end_token": 0,
                            "children": [
                                {
                                    "type": "SPAWN",
                                    "label": "spawn",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "lambdaExpression",
                                    "label": " {\n        while (!g_quit) {\n            let client = server.accept()\n            synchronized (mutex) {\n                members.append(client)\n            }\n            // 每个连接要处理的任务\n            spawn {\n                while (!g_quit) {\n                    let data = Array<Byte>(BUFFER_SIZE, repeat: 0)\n                    try { client.read(data) } catch (e: SocketException) {\n                        return // 遇到异常终止此线程，由转发线程清理资源\n                    }\n                    println(String.fromUtf8(data))\n                    messageQueue.enqueue((client, data))\n                    synchronized (monitor) { monitor.notify() }\n                }\n            }\n        }\n    }",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "whileExpression",
                                            "label": "while (!g_quit) {\n            let client = server.accept()\n            synchronized (mutex) {\n                members.append(client)\n            }\n            // 每个连接要处理的任务\n            spawn {\n                while (!g_quit) {\n                    let data = Array<Byte>(BUFFER_SIZE, repeat: 0)\n                    try { client.read(data) } catch (e: SocketException) {\n                        return // 遇到异常终止此线程，由转发线程清理资源\n                    }\n                    println(String.fromUtf8(data))\n                    messageQueue.enqueue((client, data))\n                    synchronized (monitor) { monitor.notify() }\n                }\n            }\n        }",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "WHILE",
                                                    "label": "while",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "unaryExpression",
                                                    "label": "!g_quit",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": [
                                                        {
                                                            "type": "identifier",
                                                            "label": "g_quit",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": " {\n            let client = server.accept()\n            synchronized (mutex) {\n                members.append(client)\n            }\n            // 每个连接要处理的任务\n            spawn {\n                while (!g_quit) {\n                    let data = Array<Byte>(BUFFER_SIZE, repeat: 0)\n                    try { client.read(data) } catch (e: SocketException) {\n                        return // 遇到异常终止此线程，由转发线程清理资源\n                    }\n                    println(String.fromUtf8(data))\n                    messageQueue.enqueue((client, data))\n                    synchronized (monitor) { monitor.notify() }\n                }\n            }\n        }",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": [
                                                        {
                                                            "type": "variableDeclaration",
                                                            "label": "let client = server.accept()",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "LET",
                                                                    "label": "let",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "varBindingPattern",
                                                                    "label": "client",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "callExpression",
                                                                    "label": "server.accept()",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "fieldExpression",
                                                                            "label": "server.accept",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "server",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "accept",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argumentList",
                                                                            "label": "()",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "synchronizedExpression",
                                                            "label": "synchronized (mutex) {\n                members.append(client)\n            }",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "SYNCHRONIZED",
                                                                    "label": "synchronized",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "mutex",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "block",
                                                                    "label": " {\n                members.append(client)\n            }",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "callExpression",
                                                                            "label": "members.append(client)",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": [
                                                                                {
                                                                                    "type": "fieldExpression",
                                                                                    "label": "members.append",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "members",
                                                                                            "start_token": 0,
                                                                                            "end_token": 0,
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "append",
                                                                                            "start_token": 0,
                                                                                            "end_token": 0,
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argumentList",
                                                                                    "label": "(client)",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "client",
                                                                                            "start_token": 0,
                                                                                            "end_token": 0,
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "comment",
                                                            "label": "// 每个连接要处理的任务",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "spawnExpression",
                                                            "label": "spawn {\n                while (!g_quit) {\n                    let data = Array<Byte>(BUFFER_SIZE, repeat: 0)\n                    try { client.read(data) } catch (e: SocketException) {\n                        return // 遇到异常终止此线程，由转发线程清理资源\n                    }\n                    println(String.fromUtf8(data))\n                    messageQueue.enqueue((client, data))\n                    synchronized (monitor) { monitor.notify() }\n                }\n            }",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "SPAWN",
                                                                    "label": "spawn",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "lambdaExpression",
                                                                    "label": " {\n                while (!g_quit) {\n                    let data = Array<Byte>(BUFFER_SIZE, repeat: 0)\n                    try { client.read(data) } catch (e: SocketException) {\n                        return // 遇到异常终止此线程，由转发线程清理资源\n                    }\n                    println(String.fromUtf8(data))\n                    messageQueue.enqueue((client, data))\n                    synchronized (monitor) { monitor.notify() }\n                }\n            }",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "whileExpression",
                                                                            "label": "while (!g_quit) {\n                    let data = Array<Byte>(BUFFER_SIZE, repeat: 0)\n                    try { client.read(data) } catch (e: SocketException) {\n                        return // 遇到异常终止此线程，由转发线程清理资源\n                    }\n                    println(String.fromUtf8(data))\n                    messageQueue.enqueue((client, data))\n                    synchronized (monitor) { monitor.notify() }\n                }",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": [
                                                                                {
                                                                                    "type": "WHILE",
                                                                                    "label": "while",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "unaryExpression",
                                                                                    "label": "!g_quit",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "g_quit",
                                                                                            "start_token": 0,
                                                                                            "end_token": 0,
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "block",
                                                                                    "label": " {\n                    let data = Array<Byte>(BUFFER_SIZE, repeat: 0)\n                    try { client.read(data) } catch (e: SocketException) {\n                        return // 遇到异常终止此线程，由转发线程清理资源\n                    }\n                    println(String.fromUtf8(data))\n                    messageQueue.enqueue((client, data))\n                    synchronized (monitor) { monitor.notify() }\n                }",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "variableDeclaration",
                                                                                            "label": "let data = Array<Byte>(BUFFER_SIZE, repeat: 0)",
                                                                                            "start_token": 0,
                                                                                            "end_token": 0,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "LET",
                                                                                                    "label": "let",
                                                                                                    "start_token": 0,
                                                                                                    "end_token": 0,
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "varBindingPattern",
                                                                                                    "label": "data",
                                                                                                    "start_token": 0,
                                                                                                    "end_token": 0,
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "callExpression",
                                                                                                    "label": "Array<Byte>(BUFFER_SIZE, repeat: 0)",
                                                                                                    "start_token": 0,
                                                                                                    "end_token": 0,
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "genericsType",
                                                                                                            "label": "Array<Byte>",
                                                                                                            "start_token": 0,
                                                                                                            "end_token": 0,
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "typeIdentifier",
                                                                                                                    "label": "Array",
                                                                                                                    "start_token": 0,
                                                                                                                    "end_token": 0,
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "typeArguments",
                                                                                                                    "label": "<Byte>",
                                                                                                                    "start_token": 0,
                                                                                                                    "end_token": 0,
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "userType",
                                                                                                                            "label": "Byte",
                                                                                                                            "start_token": 0,
                                                                                                                            "end_token": 0,
                                                                                                                            "children": [
                                                                                                                                {
                                                                                                                                    "type": "identifier",
                                                                                                                                    "label": "Byte",
                                                                                                                                    "start_token": 0,
                                                                                                                                    "end_token": 0,
                                                                                                                                    "children": []
                                                                                                                                }
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "argumentList",
                                                                                                            "label": "(BUFFER_SIZE, repeat: 0)",
                                                                                                            "start_token": 0,
                                                                                                            "end_token": 0,
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "BUFFER_SIZE",
                                                                                                                    "start_token": 0,
                                                                                                                    "end_token": 0,
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "repeat",
                                                                                                                    "start_token": 0,
                                                                                                                    "end_token": 0,
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "integerLiteral",
                                                                                                                    "label": "0",
                                                                                                                    "start_token": 0,
                                                                                                                    "end_token": 0,
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "tryExpression",
                                                                                            "label": "try { client.read(data) } catch (e: SocketException) {\n                        return // 遇到异常终止此线程，由转发线程清理资源\n                    }",
                                                                                            "start_token": 0,
                                                                                            "end_token": 0,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "TRY",
                                                                                                    "label": "try",
                                                                                                    "start_token": 0,
                                                                                                    "end_token": 0,
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "block",
                                                                                                    "label": " { client.read(data) }",
                                                                                                    "start_token": 0,
                                                                                                    "end_token": 0,
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "callExpression",
                                                                                                            "label": "client.read(data)",
                                                                                                            "start_token": 0,
                                                                                                            "end_token": 0,
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "fieldExpression",
                                                                                                                    "label": "client.read",
                                                                                                                    "start_token": 0,
                                                                                                                    "end_token": 0,
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "client",
                                                                                                                            "start_token": 0,
                                                                                                                            "end_token": 0,
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "read",
                                                                                                                            "start_token": 0,
                                                                                                                            "end_token": 0,
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "argumentList",
                                                                                                                    "label": "(data)",
                                                                                                                    "start_token": 0,
                                                                                                                    "end_token": 0,
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "data",
                                                                                                                            "start_token": 0,
                                                                                                                            "end_token": 0,
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "CATCH",
                                                                                                    "label": "catch",
                                                                                                    "start_token": 0,
                                                                                                    "end_token": 0,
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "exceptionTypePattern",
                                                                                                    "label": "e: SocketException",
                                                                                                    "start_token": 0,
                                                                                                    "end_token": 0,
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "e",
                                                                                                            "start_token": 0,
                                                                                                            "end_token": 0,
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "userType",
                                                                                                            "label": "SocketException",
                                                                                                            "start_token": 0,
                                                                                                            "end_token": 0,
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "SocketException",
                                                                                                                    "start_token": 0,
                                                                                                                    "end_token": 0,
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "block",
                                                                                                    "label": " {\n                        return // 遇到异常终止此线程，由转发线程清理资源\n                    }",
                                                                                                    "start_token": 0,
                                                                                                    "end_token": 0,
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "returnExpression",
                                                                                                            "label": "return",
                                                                                                            "start_token": 0,
                                                                                                            "end_token": 0,
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "RETURN",
                                                                                                                    "label": "return",
                                                                                                                    "start_token": 0,
                                                                                                                    "end_token": 0,
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "comment",
                                                                                                            "label": "// 遇到异常终止此线程，由转发线程清理资源",
                                                                                                            "start_token": 0,
                                                                                                            "end_token": 0,
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "callExpression",
                                                                                            "label": "println(String.fromUtf8(data))",
                                                                                            "start_token": 0,
                                                                                            "end_token": 0,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "builtinFunction",
                                                                                                    "label": "println",
                                                                                                    "start_token": 0,
                                                                                                    "end_token": 0,
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "argumentList",
                                                                                                    "label": "(String.fromUtf8(data))",
                                                                                                    "start_token": 0,
                                                                                                    "end_token": 0,
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "callExpression",
                                                                                                            "label": "String.fromUtf8(data)",
                                                                                                            "start_token": 0,
                                                                                                            "end_token": 0,
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "fieldExpression",
                                                                                                                    "label": "String.fromUtf8",
                                                                                                                    "start_token": 0,
                                                                                                                    "end_token": 0,
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "String",
                                                                                                                            "start_token": 0,
                                                                                                                            "end_token": 0,
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "fromUtf8",
                                                                                                                            "start_token": 0,
                                                                                                                            "end_token": 0,
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "argumentList",
                                                                                                                    "label": "(data)",
                                                                                                                    "start_token": 0,
                                                                                                                    "end_token": 0,
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "data",
                                                                                                                            "start_token": 0,
                                                                                                                            "end_token": 0,
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "callExpression",
                                                                                            "label": "messageQueue.enqueue((client, data))",
                                                                                            "start_token": 0,
                                                                                            "end_token": 0,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "fieldExpression",
                                                                                                    "label": "messageQueue.enqueue",
                                                                                                    "start_token": 0,
                                                                                                    "end_token": 0,
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "messageQueue",
                                                                                                            "start_token": 0,
                                                                                                            "end_token": 0,
                                                                                                            "children": []
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "identifier",
                                                                                                            "label": "enqueue",
                                                                                                            "start_token": 0,
                                                                                                            "end_token": 0,
                                                                                                            "children": []
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "type": "argumentList",
                                                                                                    "label": "((client, data))",
                                                                                                    "start_token": 0,
                                                                                                    "end_token": 0,
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "tupleLiteral",
                                                                                                            "label": "(client, data)",
                                                                                                            "start_token": 0,
                                                                                                            "end_token": 0,
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "client",
                                                                                                                    "start_token": 0,
                                                                                                                    "end_token": 0,
                                                                                                                    "children": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "identifier",
                                                                                                                    "label": "data",
                                                                                                                    "start_token": 0,
                                                                                                                    "end_token": 0,
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "synchronizedExpression",
                                                                                            "label": "synchronized (monitor) { monitor.notify() }",
                                                                                            "start_token": 0,
                                                                                            "end_token": 0,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "SYNCHRONIZED",
                                                                                                    "label": "synchronized",
                                                                                                    "start_token": 0,
                                                                                                    "end_token": 0,
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "identifier",
                                                                                                    "label": "monitor",
                                                                                                    "start_token": 0,
                                                                                                    "end_token": 0,
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "block",
                                                                                                    "label": " { monitor.notify() }",
                                                                                                    "start_token": 0,
                                                                                                    "end_token": 0,
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "callExpression",
                                                                                                            "label": "monitor.notify()",
                                                                                                            "start_token": 0,
                                                                                                            "end_token": 0,
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "fieldExpression",
                                                                                                                    "label": "monitor.notify",
                                                                                                                    "start_token": 0,
                                                                                                                    "end_token": 0,
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "monitor",
                                                                                                                            "start_token": 0,
                                                                                                                            "end_token": 0,
                                                                                                                            "children": []
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "identifier",
                                                                                                                            "label": "notify",
                                                                                                                            "start_token": 0,
                                                                                                                            "end_token": 0,
                                                                                                                            "children": []
                                                                                                                        }
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "argumentList",
                                                                                                                    "label": "()",
                                                                                                                    "start_token": 0,
                                                                                                                    "end_token": 0,
                                                                                                                    "children": []
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "// 转发消息到所有客户端，实现群聊",
                            "start_token": 0,
                            "end_token": 0,
                            "children": []
                        },
                        {
                            "type": "whileExpression",
                            "label": "while (!g_quit) {\n        // 我们使用了并发数据结构，这里 Monitor 不必保护数据，仅用于避免当前 while 空转\n        synchronized (monitor) {\n            monitor.wait(timeout: 100 * Duration.millisecond)            \n        }\n        while (let Some((client, data)) <- messageQueue.dequeue()) {\n            mutex.lock()\n            // 遍历群聊成员，转发消息并清理无效客户端\n            members.removeIf { socket =>\n                if (refEq(client, socket)) { // 不必转发给消息源\n                    return false\n                }\n                !socket.tryWrite(data)\n            }\n            mutex.unlock()\n        }\n    }",
                            "start_token": 0,
                            "end_token": -1,
                            "children": [
                                {
                                    "type": "WHILE",
                                    "label": "while",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": []
                                },
                                {
                                    "type": "unaryExpression",
                                    "label": "!g_quit",
                                    "start_token": 0,
                                    "end_token": 0,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "g_quit",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "block",
                                    "label": " {\n        // 我们使用了并发数据结构，这里 Monitor 不必保护数据，仅用于避免当前 while 空转\n        synchronized (monitor) {\n            monitor.wait(timeout: 100 * Duration.millisecond)            \n        }\n        while (let Some((client, data)) <- messageQueue.dequeue()) {\n            mutex.lock()\n            // 遍历群聊成员，转发消息并清理无效客户端\n            members.removeIf { socket =>\n                if (refEq(client, socket)) { // 不必转发给消息源\n                    return false\n                }\n                !socket.tryWrite(data)\n            }\n            mutex.unlock()\n        }\n    }",
                                    "start_token": 0,
                                    "end_token": -1,
                                    "children": [
                                        {
                                            "type": "comment",
                                            "label": "// 我们使用了并发数据结构，这里 Monitor 不必保护数据，仅用于避免当前 while 空转",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": []
                                        },
                                        {
                                            "type": "synchronizedExpression",
                                            "label": "synchronized (monitor) {\n            monitor.wait(timeout: 100 * Duration.millisecond)            \n        }",
                                            "start_token": 0,
                                            "end_token": 0,
                                            "children": [
                                                {
                                                    "type": "SYNCHRONIZED",
                                                    "label": "synchronized",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "identifier",
                                                    "label": "monitor",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "block",
                                                    "label": " {\n            monitor.wait(timeout: 100 * Duration.millisecond)            \n        }",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": [
                                                        {
                                                            "type": "callExpression",
                                                            "label": "monitor.wait(timeout: 100 * Duration.millisecond)",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "fieldExpression",
                                                                    "label": "monitor.wait",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "monitor",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "wait",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argumentList",
                                                                    "label": "(timeout: 100 * Duration.millisecond)",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "timeout",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "binaryExpression",
                                                                            "label": "100 * Duration.millisecond",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": [
                                                                                {
                                                                                    "type": "integerLiteral",
                                                                                    "label": "100",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "fieldExpression",
                                                                                    "label": "Duration.millisecond",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "Duration",
                                                                                            "start_token": 0,
                                                                                            "end_token": 0,
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "millisecond",
                                                                                            "start_token": 0,
                                                                                            "end_token": 0,
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "whileExpression",
                                            "label": "while (let Some((client, data)) <- messageQueue.dequeue()) {\n            mutex.lock()\n            // 遍历群聊成员，转发消息并清理无效客户端\n            members.removeIf { socket =>\n                if (refEq(client, socket)) { // 不必转发给消息源\n                    return false\n                }\n                !socket.tryWrite(data)\n            }\n            mutex.unlock()\n        }",
                                            "start_token": 0,
                                            "end_token": -1,
                                            "children": [
                                                {
                                                    "type": "WHILE",
                                                    "label": "while",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": []
                                                },
                                                {
                                                    "type": "binaryExpression",
                                                    "label": "let Some((client, data)) <- messageQueue.dequeue()",
                                                    "start_token": 0,
                                                    "end_token": 0,
                                                    "children": [
                                                        {
                                                            "type": "callExpression",
                                                            "label": "let Some((client, data))",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "let",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "ERROR",
                                                                    "label": " Some",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "ERROR",
                                                                            "label": " Some",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argumentList",
                                                                    "label": "((client, data))",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "tupleLiteral",
                                                                            "label": "(client, data)",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "client",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "data",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "unaryExpression",
                                                            "label": "- messageQueue.dequeue()",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "callExpression",
                                                                    "label": "messageQueue.dequeue()",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "fieldExpression",
                                                                            "label": "messageQueue.dequeue",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "messageQueue",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "dequeue",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argumentList",
                                                                            "label": "()",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": " {\n            mutex.lock()\n            // 遍历群聊成员，转发消息并清理无效客户端\n            members.removeIf { socket =>\n                if (refEq(client, socket)) { // 不必转发给消息源\n                    return false\n                }\n                !socket.tryWrite(data)\n            }\n            mutex.unlock()\n        }",
                                                    "start_token": 0,
                                                    "end_token": -1,
                                                    "children": [
                                                        {
                                                            "type": "callExpression",
                                                            "label": "mutex.lock()",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "fieldExpression",
                                                                    "label": "mutex.lock",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "mutex",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "lock",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argumentList",
                                                                    "label": "()",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "comment",
                                                            "label": "// 遍历群聊成员，转发消息并清理无效客户端",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": []
                                                        },
                                                        {
                                                            "type": "fieldExpression",
                                                            "label": "members.removeIf",
                                                            "start_token": 0,
                                                            "end_token": 0,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "members",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "removeIf",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "lambdaExpression",
                                                            "label": "{ socket =>\n                if (refEq(client, socket)) { // 不必转发给消息源\n                    return false\n                }\n                !socket.tryWrite(data)\n            }",
                                                            "start_token": 0,
                                                            "end_token": -1,
                                                            "children": [
                                                                {
                                                                    "type": "lambdaParameters",
                                                                    "label": "socket",
                                                                    "start_token": 0,
                                                                    "end_token": 0,
                                                                    "children": [
                                                                        {
                                                                            "type": "lambdaParameter",
                                                                            "label": "socket",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "socket",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "ifExpression",
                                                                    "label": "if (refEq(client, socket)) { // 不必转发给消息源\n                    return false\n                }",
                                                                    "start_token": 0,
                                                                    "end_token": -1,
                                                                    "children": [
                                                                        {
                                                                            "type": "IF",
                                                                            "label": "if",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "callExpression",
                                                                            "label": "refEq(client, socket)",
                                                                            "start_token": 0,
                                                                            "end_token": 0,
                                                                            "children": [
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "refEq",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "argumentList",
                                                                                    "label": "(client, socket)",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "client",
                                                                                            "start_token": 0,
                                                                                            "end_token": 0,
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "socket",
                                                                                            "start_token": 0,
                                                                                            "end_token": 0,
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "block",
                                                                            "label": " { // 不必转发给消息源\n                    return false\n                }",
                                                                            "start_token": 0,
                                                                            "end_token": -1,
                                                                            "children": [
                                                                                {
                                                                                    "type": "comment",
                                                                                    "label": "// 不必转发给消息源",
                                                                                    "start_token": 0,
                                                                                    "end_token": 0,
                                                                                    "children": []
                                                                                },
                                                                                {
                                                                                    "type": "returnExpression",
                                                                                    "label": "return false",
                                                                                    "start_token": -1,
                                                                                    "end_token": -1,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "RETURN",
                                                                                            "label": "return",
                                                                                            "start_token": -1,
                                                                                            "end_token": -1,
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "booleanLiteral",
                                                                                            "label": "false",
                                                                                            "start_token": -1,
                                                                                            "end_token": -1,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "FALSE",
                                                                                                    "label": "false",
                                                                                                    "start_token": -1,
                                                                                                    "end_token": -1,
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "unaryExpression",
                                                                    "label": "!socket.tryWrite(data)",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "children": [
                                                                        {
                                                                            "type": "callExpression",
                                                                            "label": "socket.tryWrite(data)",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "children": [
                                                                                {
                                                                                    "type": "fieldExpression",
                                                                                    "label": "socket.tryWrite",
                                                                                    "start_token": -1,
                                                                                    "end_token": -1,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "socket",
                                                                                            "start_token": -1,
                                                                                            "end_token": -1,
                                                                                            "children": []
                                                                                        },
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "tryWrite",
                                                                                            "start_token": -1,
                                                                                            "end_token": -1,
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "argumentList",
                                                                                    "label": "(data)",
                                                                                    "start_token": -1,
                                                                                    "end_token": -1,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "identifier",
                                                                                            "label": "data",
                                                                                            "start_token": -1,
                                                                                            "end_token": -1,
                                                                                            "children": []
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "callExpression",
                                                            "label": "mutex.unlock()",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "children": [
                                                                {
                                                                    "type": "fieldExpression",
                                                                    "label": "mutex.unlock",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "mutex",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "unlock",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argumentList",
                                                                    "label": "()",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "comment",
                            "label": "// 退出时通知所有客户端",
                            "start_token": -1,
                            "end_token": -1,
                            "children": []
                        },
                        {
                            "type": "forInExpression",
                            "label": "for (client in members) {\n        if (client.tryWrite(\"Server Exit\".toArray())) {\n            client.close()\n        }\n    }",
                            "start_token": -1,
                            "end_token": -1,
                            "children": [
                                {
                                    "type": "FOR",
                                    "label": "for",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "children": []
                                },
                                {
                                    "type": "varBindingPattern",
                                    "label": "client",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "children": []
                                },
                                {
                                    "type": "IN",
                                    "label": "in",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "children": []
                                },
                                {
                                    "type": "identifier",
                                    "label": "members",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "children": []
                                },
                                {
                                    "type": "block",
                                    "label": " {\n        if (client.tryWrite(\"Server Exit\".toArray())) {\n            client.close()\n        }\n    }",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "children": [
                                        {
                                            "type": "ifExpression",
                                            "label": "if (client.tryWrite(\"Server Exit\".toArray())) {\n            client.close()\n        }",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "children": [
                                                {
                                                    "type": "IF",
                                                    "label": "if",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "children": []
                                                },
                                                {
                                                    "type": "callExpression",
                                                    "label": "client.tryWrite(\"Server Exit\".toArray())",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "children": [
                                                        {
                                                            "type": "fieldExpression",
                                                            "label": "client.tryWrite",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "children": [
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "client",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "children": []
                                                                },
                                                                {
                                                                    "type": "identifier",
                                                                    "label": "tryWrite",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "children": []
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "type": "argumentList",
                                                            "label": "(\"Server Exit\".toArray())",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "children": [
                                                                {
                                                                    "type": "callExpression",
                                                                    "label": "\"Server Exit\".toArray()",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "children": [
                                                                        {
                                                                            "type": "fieldExpression",
                                                                            "label": "\"Server Exit\".toArray",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "children": [
                                                                                {
                                                                                    "type": "stringLiteral",
                                                                                    "label": "\"Server Exit\"",
                                                                                    "start_token": -1,
                                                                                    "end_token": -1,
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "lineStringLiteral",
                                                                                            "label": "\"Server Exit\"",
                                                                                            "start_token": -1,
                                                                                            "end_token": -1,
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "quoteOpen",
                                                                                                    "label": "\"",
                                                                                                    "start_token": -1,
                                                                                                    "end_token": -1,
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "lineStringContent",
                                                                                                    "label": "Server Exit",
                                                                                                    "start_token": -1,
                                                                                                    "end_token": -1,
                                                                                                    "children": []
                                                                                                },
                                                                                                {
                                                                                                    "type": "quoteClose",
                                                                                                    "label": "\"",
                                                                                                    "start_token": -1,
                                                                                                    "end_token": -1,
                                                                                                    "children": []
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "identifier",
                                                                                    "label": "toArray",
                                                                                    "start_token": -1,
                                                                                    "end_token": -1,
                                                                                    "children": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "argumentList",
                                                                            "label": "()",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "block",
                                                    "label": " {\n            client.close()\n        }",
                                                    "start_token": -1,
                                                    "end_token": -1,
                                                    "children": [
                                                        {
                                                            "type": "callExpression",
                                                            "label": "client.close()",
                                                            "start_token": -1,
                                                            "end_token": -1,
                                                            "children": [
                                                                {
                                                                    "type": "fieldExpression",
                                                                    "label": "client.close",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "children": [
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "client",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "children": []
                                                                        },
                                                                        {
                                                                            "type": "identifier",
                                                                            "label": "close",
                                                                            "start_token": -1,
                                                                            "end_token": -1,
                                                                            "children": []
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "argumentList",
                                                                    "label": "()",
                                                                    "start_token": -1,
                                                                    "end_token": -1,
                                                                    "children": []
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "callExpression",
                            "label": "server.close()",
                            "start_token": -1,
                            "end_token": -1,
                            "children": [
                                {
                                    "type": "fieldExpression",
                                    "label": "server.close",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "children": [
                                        {
                                            "type": "identifier",
                                            "label": "server",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "children": []
                                        },
                                        {
                                            "type": "identifier",
                                            "label": "close",
                                            "start_token": -1,
                                            "end_token": -1,
                                            "children": []
                                        }
                                    ]
                                },
                                {
                                    "type": "argumentList",
                                    "label": "()",
                                    "start_token": -1,
                                    "end_token": -1,
                                    "children": []
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}