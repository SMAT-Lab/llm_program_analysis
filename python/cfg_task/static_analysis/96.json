{
  "nodes": [
    {
      "id": "n0",
      "type": "block",
      "statements": [
        "from typing import Optional",
        "from pydantic import BaseModel",
        "from backend.data.model import SchemaField",
        "class TextSettings(BaseModel):\n    max_characters: int = SchemaField(default=1000, description='Maximum number of characters to return', placeholder='1000')\n    include_html_tags: bool = SchemaField(default=False, description='Whether to include HTML tags in the text', placeholder='False')",
        "max_characters: int = SchemaField(default=1000, description='Maximum number of characters to return', placeholder='1000')",
        "include_html_tags: bool = SchemaField(default=False, description='Whether to include HTML tags in the text', placeholder='False')",
        "class HighlightSettings(BaseModel):\n    num_sentences: int = SchemaField(default=3, description='Number of sentences per highlight', placeholder='3')\n    highlights_per_url: int = SchemaField(default=3, description='Number of highlights per URL', placeholder='3')",
        "num_sentences: int = SchemaField(default=3, description='Number of sentences per highlight', placeholder='3')",
        "highlights_per_url: int = SchemaField(default=3, description='Number of highlights per URL', placeholder='3')",
        "class SummarySettings(BaseModel):\n    query: Optional[str] = SchemaField(default='', description='Query string for summarization', placeholder='Enter query')",
        "query: Optional[str] = SchemaField(default='', description='Query string for summarization', placeholder='Enter query')",
        "class ContentSettings(BaseModel):\n    text: TextSettings = SchemaField(default=TextSettings(), description='Text content settings')\n    highlights: HighlightSettings = SchemaField(default=HighlightSettings(), description='Highlight settings')\n    summary: SummarySettings = SchemaField(default=SummarySettings(), description='Summary settings')",
        "text: TextSettings = SchemaField(default=TextSettings(), description='Text content settings')",
        "highlights: HighlightSettings = SchemaField(default=HighlightSettings(), description='Highlight settings')",
        "summary: SummarySettings = SchemaField(default=SummarySettings(), description='Summary settings')"
      ],
      "code": "from typing import Optional\nfrom pydantic import BaseModel\nfrom backend.data.model import SchemaField\nclass TextSettings(BaseModel):\n    max_characters: int = SchemaField(default=1000, description='Maximum number of characters to return', placeholder='1000')\n    include_html_tags: bool = SchemaField(default=False, description='Whether to include HTML tags in the text', placeholder='False')\nmax_characters: int = SchemaField(default=1000, description='Maximum number of characters to return', placeholder='1000')\ninclude_html_tags: bool = SchemaField(default=False, description='Whether to include HTML tags in the text', placeholder='False')\nclass HighlightSettings(BaseModel):\n    num_sentences: int = SchemaField(default=3, description='Number of sentences per highlight', placeholder='3')\n    highlights_per_url: int = SchemaField(default=3, description='Number of highlights per URL', placeholder='3')\nnum_sentences: int = SchemaField(default=3, description='Number of sentences per highlight', placeholder='3')\nhighlights_per_url: int = SchemaField(default=3, description='Number of highlights per URL', placeholder='3')\nclass SummarySettings(BaseModel):\n    query: Optional[str] = SchemaField(default='', description='Query string for summarization', placeholder='Enter query')\nquery: Optional[str] = SchemaField(default='', description='Query string for summarization', placeholder='Enter query')\nclass ContentSettings(BaseModel):\n    text: TextSettings = SchemaField(default=TextSettings(), description='Text content settings')\n    highlights: HighlightSettings = SchemaField(default=HighlightSettings(), description='Highlight settings')\n    summary: SummarySettings = SchemaField(default=SummarySettings(), description='Summary settings')\ntext: TextSettings = SchemaField(default=TextSettings(), description='Text content settings')\nhighlights: HighlightSettings = SchemaField(default=HighlightSettings(), description='Highlight settings')\nsummary: SummarySettings = SchemaField(default=SummarySettings(), description='Summary settings')"
    }
  ],
  "edges": []
}