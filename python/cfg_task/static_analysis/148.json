{
  "nodes": [
    {
      "id": "n0",
      "type": "block",
      "statements": [
        "from abc import ABCMeta",
        "from enum import Enum",
        "class UserService(object):\n\n    def __init__(self):\n        self.users_by_id = {}\n\n    def add_user(self, user_id, name, pass_hash):\n        pass\n\n    def remove_user(self, user_id):\n        pass\n\n    def add_friend_request(self, from_user_id, to_user_id):\n        pass\n\n    def approve_friend_request(self, from_user_id, to_user_id):\n        pass\n\n    def reject_friend_request(self, from_user_id, to_user_id):\n        pass",
        "def __init__(self):\n    self.users_by_id = {}",
        "self.users_by_id = {}",
        "def add_user(self, user_id, name, pass_hash):\n    pass",
        "pass",
        "def remove_user(self, user_id):\n    pass",
        "pass",
        "def add_friend_request(self, from_user_id, to_user_id):\n    pass",
        "pass",
        "def approve_friend_request(self, from_user_id, to_user_id):\n    pass",
        "pass",
        "def reject_friend_request(self, from_user_id, to_user_id):\n    pass",
        "pass",
        "class User(object):\n\n    def __init__(self, user_id, name, pass_hash):\n        self.user_id = user_id\n        self.name = name\n        self.pass_hash = pass_hash\n        self.friends_by_id = {}\n        self.friend_ids_to_private_chats = {}\n        self.group_chats_by_id = {}\n        self.received_friend_requests_by_friend_id = {}\n        self.sent_friend_requests_by_friend_id = {}\n\n    def message_user(self, friend_id, message):\n        pass\n\n    def message_group(self, group_id, message):\n        pass\n\n    def send_friend_request(self, friend_id):\n        pass\n\n    def receive_friend_request(self, friend_id):\n        pass\n\n    def approve_friend_request(self, friend_id):\n        pass\n\n    def reject_friend_request(self, friend_id):\n        pass",
        "def __init__(self, user_id, name, pass_hash):\n    self.user_id = user_id\n    self.name = name\n    self.pass_hash = pass_hash\n    self.friends_by_id = {}\n    self.friend_ids_to_private_chats = {}\n    self.group_chats_by_id = {}\n    self.received_friend_requests_by_friend_id = {}\n    self.sent_friend_requests_by_friend_id = {}",
        "self.user_id = user_id",
        "self.name = name",
        "self.pass_hash = pass_hash",
        "self.friends_by_id = {}",
        "self.friend_ids_to_private_chats = {}",
        "self.group_chats_by_id = {}",
        "self.received_friend_requests_by_friend_id = {}",
        "self.sent_friend_requests_by_friend_id = {}",
        "def message_user(self, friend_id, message):\n    pass",
        "pass",
        "def message_group(self, group_id, message):\n    pass",
        "pass",
        "def send_friend_request(self, friend_id):\n    pass",
        "pass",
        "def receive_friend_request(self, friend_id):\n    pass",
        "pass",
        "def approve_friend_request(self, friend_id):\n    pass",
        "pass",
        "def reject_friend_request(self, friend_id):\n    pass",
        "pass",
        "class Chat(metaclass=ABCMeta):\n\n    def __init__(self, chat_id):\n        self.chat_id = chat_id\n        self.users = []\n        self.messages = []",
        "def __init__(self, chat_id):\n    self.chat_id = chat_id\n    self.users = []\n    self.messages = []",
        "self.chat_id = chat_id",
        "self.users = []",
        "self.messages = []",
        "class PrivateChat(Chat):\n\n    def __init__(self, first_user, second_user):\n        super(PrivateChat, self).__init__()\n        self.users.append(first_user)\n        self.users.append(second_user)",
        "def __init__(self, first_user, second_user):\n    super(PrivateChat, self).__init__()\n    self.users.append(first_user)\n    self.users.append(second_user)",
        "super(PrivateChat, self).__init__()",
        "self.users.append(first_user)",
        "self.users.append(second_user)",
        "class GroupChat(Chat):\n\n    def add_user(self, user):\n        pass\n\n    def remove_user(self, user):\n        pass",
        "def add_user(self, user):\n    pass",
        "pass",
        "def remove_user(self, user):\n    pass",
        "pass",
        "class Message(object):\n\n    def __init__(self, message_id, message, timestamp):\n        self.message_id = message_id\n        self.message = message\n        self.timestamp = timestamp",
        "def __init__(self, message_id, message, timestamp):\n    self.message_id = message_id\n    self.message = message\n    self.timestamp = timestamp",
        "self.message_id = message_id",
        "self.message = message",
        "self.timestamp = timestamp",
        "class AddRequest(object):\n\n    def __init__(self, from_user_id, to_user_id, request_status, timestamp):\n        self.from_user_id = from_user_id\n        self.to_user_id = to_user_id\n        self.request_status = request_status\n        self.timestamp = timestamp",
        "def __init__(self, from_user_id, to_user_id, request_status, timestamp):\n    self.from_user_id = from_user_id\n    self.to_user_id = to_user_id\n    self.request_status = request_status\n    self.timestamp = timestamp",
        "self.from_user_id = from_user_id",
        "self.to_user_id = to_user_id",
        "self.request_status = request_status",
        "self.timestamp = timestamp",
        "class RequestStatus(Enum):\n    UNREAD = 0\n    READ = 1\n    ACCEPTED = 2\n    REJECTED = 3",
        "UNREAD = 0",
        "READ = 1",
        "ACCEPTED = 2",
        "REJECTED = 3"
      ],
      "code": "from abc import ABCMeta\nfrom enum import Enum\nclass UserService(object):\n\n    def __init__(self):\n        self.users_by_id = {}\n\n    def add_user(self, user_id, name, pass_hash):\n        pass\n\n    def remove_user(self, user_id):\n        pass\n\n    def add_friend_request(self, from_user_id, to_user_id):\n        pass\n\n    def approve_friend_request(self, from_user_id, to_user_id):\n        pass\n\n    def reject_friend_request(self, from_user_id, to_user_id):\n        pass\ndef __init__(self):\n    self.users_by_id = {}\nself.users_by_id = {}\ndef add_user(self, user_id, name, pass_hash):\n    pass\npass\ndef remove_user(self, user_id):\n    pass\npass\ndef add_friend_request(self, from_user_id, to_user_id):\n    pass\npass\ndef approve_friend_request(self, from_user_id, to_user_id):\n    pass\npass\ndef reject_friend_request(self, from_user_id, to_user_id):\n    pass\npass\nclass User(object):\n\n    def __init__(self, user_id, name, pass_hash):\n        self.user_id = user_id\n        self.name = name\n        self.pass_hash = pass_hash\n        self.friends_by_id = {}\n        self.friend_ids_to_private_chats = {}\n        self.group_chats_by_id = {}\n        self.received_friend_requests_by_friend_id = {}\n        self.sent_friend_requests_by_friend_id = {}\n\n    def message_user(self, friend_id, message):\n        pass\n\n    def message_group(self, group_id, message):\n        pass\n\n    def send_friend_request(self, friend_id):\n        pass\n\n    def receive_friend_request(self, friend_id):\n        pass\n\n    def approve_friend_request(self, friend_id):\n        pass\n\n    def reject_friend_request(self, friend_id):\n        pass\ndef __init__(self, user_id, name, pass_hash):\n    self.user_id = user_id\n    self.name = name\n    self.pass_hash = pass_hash\n    self.friends_by_id = {}\n    self.friend_ids_to_private_chats = {}\n    self.group_chats_by_id = {}\n    self.received_friend_requests_by_friend_id = {}\n    self.sent_friend_requests_by_friend_id = {}\nself.user_id = user_id\nself.name = name\nself.pass_hash = pass_hash\nself.friends_by_id = {}\nself.friend_ids_to_private_chats = {}\nself.group_chats_by_id = {}\nself.received_friend_requests_by_friend_id = {}\nself.sent_friend_requests_by_friend_id = {}\ndef message_user(self, friend_id, message):\n    pass\npass\ndef message_group(self, group_id, message):\n    pass\npass\ndef send_friend_request(self, friend_id):\n    pass\npass\ndef receive_friend_request(self, friend_id):\n    pass\npass\ndef approve_friend_request(self, friend_id):\n    pass\npass\ndef reject_friend_request(self, friend_id):\n    pass\npass\nclass Chat(metaclass=ABCMeta):\n\n    def __init__(self, chat_id):\n        self.chat_id = chat_id\n        self.users = []\n        self.messages = []\ndef __init__(self, chat_id):\n    self.chat_id = chat_id\n    self.users = []\n    self.messages = []\nself.chat_id = chat_id\nself.users = []\nself.messages = []\nclass PrivateChat(Chat):\n\n    def __init__(self, first_user, second_user):\n        super(PrivateChat, self).__init__()\n        self.users.append(first_user)\n        self.users.append(second_user)\ndef __init__(self, first_user, second_user):\n    super(PrivateChat, self).__init__()\n    self.users.append(first_user)\n    self.users.append(second_user)\nsuper(PrivateChat, self).__init__()\nself.users.append(first_user)\nself.users.append(second_user)\nclass GroupChat(Chat):\n\n    def add_user(self, user):\n        pass\n\n    def remove_user(self, user):\n        pass\ndef add_user(self, user):\n    pass\npass\ndef remove_user(self, user):\n    pass\npass\nclass Message(object):\n\n    def __init__(self, message_id, message, timestamp):\n        self.message_id = message_id\n        self.message = message\n        self.timestamp = timestamp\ndef __init__(self, message_id, message, timestamp):\n    self.message_id = message_id\n    self.message = message\n    self.timestamp = timestamp\nself.message_id = message_id\nself.message = message\nself.timestamp = timestamp\nclass AddRequest(object):\n\n    def __init__(self, from_user_id, to_user_id, request_status, timestamp):\n        self.from_user_id = from_user_id\n        self.to_user_id = to_user_id\n        self.request_status = request_status\n        self.timestamp = timestamp\ndef __init__(self, from_user_id, to_user_id, request_status, timestamp):\n    self.from_user_id = from_user_id\n    self.to_user_id = to_user_id\n    self.request_status = request_status\n    self.timestamp = timestamp\nself.from_user_id = from_user_id\nself.to_user_id = to_user_id\nself.request_status = request_status\nself.timestamp = timestamp\nclass RequestStatus(Enum):\n    UNREAD = 0\n    READ = 1\n    ACCEPTED = 2\n    REJECTED = 3\nUNREAD = 0\nREAD = 1\nACCEPTED = 2\nREJECTED = 3"
    }
  ],
  "edges": []
}