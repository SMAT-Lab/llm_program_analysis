{
  "nodes": [
    {
      "id": "n0",
      "type": "block",
      "statements": [
        "def excess_3_code(number: int) -> str:\n    \"\"\"\n    Find excess-3 code of integer base 10.\n    Add 3 to all digits in a decimal number then convert to a binary-coded decimal.\n    https://en.wikipedia.org/wiki/Excess-3\n\n    >>> excess_3_code(0)\n    '0b0011'\n    >>> excess_3_code(3)\n    '0b0110'\n    >>> excess_3_code(2)\n    '0b0101'\n    >>> excess_3_code(20)\n    '0b01010011'\n    >>> excess_3_code(120)\n    '0b010001010011'\n    \"\"\"\n    num = ''\n    for digit in str(max(0, number)):\n        num += str(bin(int(digit) + 3))[2:].zfill(4)\n    return '0b' + num",
        "\"\\n    Find excess-3 code of integer base 10.\\n    Add 3 to all digits in a decimal number then convert to a binary-coded decimal.\\n    https://en.wikipedia.org/wiki/Excess-3\\n\\n    >>> excess_3_code(0)\\n    '0b0011'\\n    >>> excess_3_code(3)\\n    '0b0110'\\n    >>> excess_3_code(2)\\n    '0b0101'\\n    >>> excess_3_code(20)\\n    '0b01010011'\\n    >>> excess_3_code(120)\\n    '0b010001010011'\\n    \"",
        "num = ''"
      ],
      "code": "def excess_3_code(number: int) -> str:\n    \"\"\"\n    Find excess-3 code of integer base 10.\n    Add 3 to all digits in a decimal number then convert to a binary-coded decimal.\n    https://en.wikipedia.org/wiki/Excess-3\n\n    >>> excess_3_code(0)\n    '0b0011'\n    >>> excess_3_code(3)\n    '0b0110'\n    >>> excess_3_code(2)\n    '0b0101'\n    >>> excess_3_code(20)\n    '0b01010011'\n    >>> excess_3_code(120)\n    '0b010001010011'\n    \"\"\"\n    num = ''\n    for digit in str(max(0, number)):\n        num += str(bin(int(digit) + 3))[2:].zfill(4)\n    return '0b' + num\n\"\\n    Find excess-3 code of integer base 10.\\n    Add 3 to all digits in a decimal number then convert to a binary-coded decimal.\\n    https://en.wikipedia.org/wiki/Excess-3\\n\\n    >>> excess_3_code(0)\\n    '0b0011'\\n    >>> excess_3_code(3)\\n    '0b0110'\\n    >>> excess_3_code(2)\\n    '0b0101'\\n    >>> excess_3_code(20)\\n    '0b01010011'\\n    >>> excess_3_code(120)\\n    '0b010001010011'\\n    \"\nnum = ''"
    },
    {
      "id": "n1",
      "type": "block",
      "statements": [
        "digit",
        "str(max(0, number))"
      ],
      "code": "digit\nstr(max(0, number))"
    },
    {
      "id": "n2",
      "type": "block",
      "statements": [
        "num += str(bin(int(digit) + 3))[2:].zfill(4)"
      ],
      "code": "num += str(bin(int(digit) + 3))[2:].zfill(4)"
    },
    {
      "id": "n3",
      "type": "block",
      "statements": [
        "return '0b' + num"
      ],
      "code": "return '0b' + num"
    },
    {
      "id": "n4",
      "type": "block",
      "statements": [
        "__name__ Eq '__main__'"
      ],
      "code": "__name__ Eq '__main__'"
    },
    {
      "id": "n5",
      "type": "block",
      "statements": [
        "import doctest",
        "doctest.testmod()"
      ],
      "code": "import doctest\ndoctest.testmod()"
    },
    {
      "id": "n6",
      "type": "block",
      "statements": [],
      "code": ""
    },
    {
      "id": "n7",
      "type": "block",
      "statements": [],
      "code": ""
    }
  ],
  "edges": [
    {
      "source": "n1",
      "target": "n3"
    },
    {
      "source": "n6",
      "target": "n7"
    },
    {
      "source": "n0",
      "target": "n1"
    },
    {
      "source": "n1",
      "target": "n2"
    },
    {
      "source": "n4",
      "target": "n5"
    },
    {
      "source": "n5",
      "target": "n7"
    },
    {
      "source": "n4",
      "target": "n6"
    },
    {
      "source": "n2",
      "target": "n1"
    }
  ]
}