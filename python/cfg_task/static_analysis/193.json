{
  "nodes": [
    {
      "id": "n0",
      "type": "block",
      "statements": [
        "import pytest",
        "from .depends import requires_admin_user, requires_user, verify_user",
        "def test_verify_user_no_payload():\n    user = verify_user(None, admin_only=False)\n    assert user.user_id == '3e53486c-cf57-477e-ba2a-cb02dc828e1a'\n    assert user.role == 'admin'",
        "user = verify_user(None, admin_only=False)",
        "assert user.user_id == '3e53486c-cf57-477e-ba2a-cb02dc828e1a'",
        "assert user.role == 'admin'",
        "def test_verify_user_no_user_id():\n    with pytest.raises(Exception):\n        verify_user({'role': 'admin'}, admin_only=False)",
        "with pytest.raises(Exception):\n    verify_user({'role': 'admin'}, admin_only=False)",
        "verify_user({'role': 'admin'})",
        "def test_verify_user_not_admin():\n    with pytest.raises(Exception):\n        verify_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'user'}, admin_only=True)",
        "with pytest.raises(Exception):\n    verify_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'user'}, admin_only=True)",
        "verify_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'user'})",
        "def test_verify_user_with_admin_role():\n    user = verify_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'admin'}, admin_only=True)\n    assert user.user_id == '3e53486c-cf57-477e-ba2a-cb02dc828e1a'\n    assert user.role == 'admin'",
        "user = verify_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'admin'}, admin_only=True)",
        "assert user.user_id == '3e53486c-cf57-477e-ba2a-cb02dc828e1a'",
        "assert user.role == 'admin'",
        "def test_verify_user_with_user_role():\n    user = verify_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'user'}, admin_only=False)\n    assert user.user_id == '3e53486c-cf57-477e-ba2a-cb02dc828e1a'\n    assert user.role == 'user'",
        "user = verify_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'user'}, admin_only=False)",
        "assert user.user_id == '3e53486c-cf57-477e-ba2a-cb02dc828e1a'",
        "assert user.role == 'user'",
        "def test_requires_user():\n    user = requires_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'user'})\n    assert user.user_id == '3e53486c-cf57-477e-ba2a-cb02dc828e1a'\n    assert user.role == 'user'",
        "user = requires_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'user'})",
        "assert user.user_id == '3e53486c-cf57-477e-ba2a-cb02dc828e1a'",
        "assert user.role == 'user'",
        "def test_requires_user_no_user_id():\n    with pytest.raises(Exception):\n        requires_user({'role': 'user'})",
        "with pytest.raises(Exception):\n    requires_user({'role': 'user'})",
        "requires_user({'role': 'user'})",
        "def test_requires_admin_user():\n    user = requires_admin_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'admin'})\n    assert user.user_id == '3e53486c-cf57-477e-ba2a-cb02dc828e1a'\n    assert user.role == 'admin'",
        "user = requires_admin_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'admin'})",
        "assert user.user_id == '3e53486c-cf57-477e-ba2a-cb02dc828e1a'",
        "assert user.role == 'admin'",
        "def test_requires_admin_user_not_admin():\n    with pytest.raises(Exception):\n        requires_admin_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'user'})",
        "with pytest.raises(Exception):\n    requires_admin_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'user'})",
        "requires_admin_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'user'})"
      ],
      "code": "import pytest\nfrom .depends import requires_admin_user, requires_user, verify_user\ndef test_verify_user_no_payload():\n    user = verify_user(None, admin_only=False)\n    assert user.user_id == '3e53486c-cf57-477e-ba2a-cb02dc828e1a'\n    assert user.role == 'admin'\nuser = verify_user(None, admin_only=False)\nassert user.user_id == '3e53486c-cf57-477e-ba2a-cb02dc828e1a'\nassert user.role == 'admin'\ndef test_verify_user_no_user_id():\n    with pytest.raises(Exception):\n        verify_user({'role': 'admin'}, admin_only=False)\nwith pytest.raises(Exception):\n    verify_user({'role': 'admin'}, admin_only=False)\nverify_user({'role': 'admin'})\ndef test_verify_user_not_admin():\n    with pytest.raises(Exception):\n        verify_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'user'}, admin_only=True)\nwith pytest.raises(Exception):\n    verify_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'user'}, admin_only=True)\nverify_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'user'})\ndef test_verify_user_with_admin_role():\n    user = verify_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'admin'}, admin_only=True)\n    assert user.user_id == '3e53486c-cf57-477e-ba2a-cb02dc828e1a'\n    assert user.role == 'admin'\nuser = verify_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'admin'}, admin_only=True)\nassert user.user_id == '3e53486c-cf57-477e-ba2a-cb02dc828e1a'\nassert user.role == 'admin'\ndef test_verify_user_with_user_role():\n    user = verify_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'user'}, admin_only=False)\n    assert user.user_id == '3e53486c-cf57-477e-ba2a-cb02dc828e1a'\n    assert user.role == 'user'\nuser = verify_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'user'}, admin_only=False)\nassert user.user_id == '3e53486c-cf57-477e-ba2a-cb02dc828e1a'\nassert user.role == 'user'\ndef test_requires_user():\n    user = requires_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'user'})\n    assert user.user_id == '3e53486c-cf57-477e-ba2a-cb02dc828e1a'\n    assert user.role == 'user'\nuser = requires_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'user'})\nassert user.user_id == '3e53486c-cf57-477e-ba2a-cb02dc828e1a'\nassert user.role == 'user'\ndef test_requires_user_no_user_id():\n    with pytest.raises(Exception):\n        requires_user({'role': 'user'})\nwith pytest.raises(Exception):\n    requires_user({'role': 'user'})\nrequires_user({'role': 'user'})\ndef test_requires_admin_user():\n    user = requires_admin_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'admin'})\n    assert user.user_id == '3e53486c-cf57-477e-ba2a-cb02dc828e1a'\n    assert user.role == 'admin'\nuser = requires_admin_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'admin'})\nassert user.user_id == '3e53486c-cf57-477e-ba2a-cb02dc828e1a'\nassert user.role == 'admin'\ndef test_requires_admin_user_not_admin():\n    with pytest.raises(Exception):\n        requires_admin_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'user'})\nwith pytest.raises(Exception):\n    requires_admin_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'user'})\nrequires_admin_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'user'})"
    }
  ],
  "edges": []
}