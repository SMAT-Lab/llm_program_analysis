{
    "nodes": [
        {
            "id": "chunk_0_GlobalBlock_1",
            "code": "import re\n"
        },
        {
            "id": "chunk_0_GlobalBlock_2",
            "code": "from jinja2 import BaseLoader\nfrom jinja2.sandbox import SandboxedEnvironment\n"
        },
        {
            "id": "chunk_1_TextFormatter_1",
            "code": "class TextFormatter:\n"
        },
        {
            "id": "chunk_1_TextFormatter_2",
            "code": "    def __init__(self):\n        # Create a sandboxed environment\n        self.env = SandboxedEnvironment(loader=BaseLoader(), autoescape=True)\n"
        },
        {
            "id": "chunk_1_TextFormatter_3",
            "code": "        # Clear any registered filters, tests, and globals to minimize attack surface\n        self.env.filters.clear()\n        self.env.tests.clear()\n        self.env.globals.clear()\n"
        },
        {
            "id": "chunk_1_TextFormatter_4",
            "code": "    def format_string(self, template_str: str, values=None, **kwargs) -> str:\n        # For python.format compatibility: replace all {...} with {{..}}.\n        # But avoid replacing {{...}} to {{{...}}}.\n        template_str = re.sub(r\"(?<!{){[ a-zA-Z0-9_]+}\", r\"{\\g<0>}\", template_str)\n        template = self.env.from_string(template_str)\n        return template.render(values or {}, **kwargs)\n"
        }
    ],
    "edges": [
        {
            "from": "chunk_0_GlobalBlock_1",
            "to": "chunk_0_GlobalBlock_2"
        },
        {
            "from": "chunk_1_TextFormatter_1",
            "to": "chunk_1_TextFormatter_2"
        },
        {
            "from": "chunk_1_TextFormatter_2",
            "to": "chunk_1_TextFormatter_3"
        },
        {
            "from": "chunk_1_TextFormatter_3",
            "to": "chunk_1_TextFormatter_4"
        }
    ]
}