{
    "nodes": [
        {
            "id": "chunk_0_GlobalBlock_1",
            "code": "# -*- coding: utf-8 -*-\n"
        },
        {
            "id": "chunk_0_GlobalBlock_2",
            "code": "\n\n\n"
        },
        {
            "id": "chunk_1_PagesDataStore_1",
            "code": "class PagesDataStore(object):\n\n"
        },
        {
            "id": "chunk_1_PagesDataStore_2",
            "code": "    def __init__(self, db):\n        self.db = db\n        pass\n"
        },
        {
            "id": "chunk_1_PagesDataStore_3",
            "code": "    def add_link_to_crawl(self, url):\n        \"\"\"Add the given link to `links_to_crawl`.\"\"\"\n        pass\n"
        },
        {
            "id": "chunk_1_PagesDataStore_4",
            "code": "    def remove_link_to_crawl(self, url):\n        \"\"\"Remove the given link from `links_to_crawl`.\"\"\"\n        pass\n"
        },
        {
            "id": "chunk_1_PagesDataStore_5",
            "code": "    def reduce_priority_link_to_crawl(self, url):\n        \"\"\"Reduce the priority of a link in `links_to_crawl` to avoid cycles.\"\"\"\n        pass\n"
        },
        {
            "id": "chunk_1_PagesDataStore_6",
            "code": "    def extract_max_priority_page(self):\n        \"\"\"Return the highest priority link in `links_to_crawl`.\"\"\"\n        pass\n"
        },
        {
            "id": "chunk_1_PagesDataStore_7",
            "code": "    def insert_crawled_link(self, url, signature):\n        \"\"\"Add the given link to `crawled_links`.\"\"\"\n        pass\n"
        },
        {
            "id": "chunk_1_PagesDataStore_8",
            "code": "    def crawled_similar(self, signature):\n        \"\"\"Determine if we've already crawled a page matching the given signature\"\"\"\n        pass\n"
        },
        {
            "id": "chunk_2_Page_1",
            "code": "class Page(object):\n\n"
        },
        {
            "id": "chunk_2_Page_2",
            "code": "    def __init__(self, url, contents, child_urls):\n        self.url = url\n        self.contents = contents\n        self.child_urls = child_urls\n        self.signature = self.create_signature()\n"
        },
        {
            "id": "chunk_2_Page_3",
            "code": "    def create_signature(self):\n        # Create signature based on url and contents\n        pass\n"
        },
        {
            "id": "chunk_2_Page_4",
            "code": "\n\n"
        },
        {
            "id": "chunk_3_Crawler_1",
            "code": "class Crawler(object):\n"
        },
        {
            "id": "chunk_3_Crawler_2",
            "code": "    def __init__(self, pages, data_store, reverse_index_queue, doc_index_queue):\n        self.pages = pages\n        self.data_store = data_store\n        self.reverse_index_queue = reverse_index_queue\n        self.doc_index_queue = doc_index_queue\n"
        },
        {
            "id": "chunk_3_Crawler_3",
            "code": "    def crawl_page(self, page):\n        for url in page.child_urls:\n            self.data_store.add_link_to_crawl(url)\n        self.reverse_index_queue.generate(page)\n        self.doc_index_queue.generate(page)\n        self.data_store.remove_link_to_crawl(page.url)\n        self.data_store.insert_crawled_link(page.url, page.signature)\n"
        },
        {
            "id": "chunk_3_Crawler_4",
            "code": "    def crawl(self):\n        while True:\n            page = self.data_store.extract_max_priority_page()\n"
        },
        {
            "id": "chunk_3_Crawler_5",
            "code": "            if page is None:\n                break\n"
        },
        {
            "id": "chunk_3_Crawler_6",
            "code": "            if self.data_store.crawled_similar(page.signature):\n                self.data_store.reduce_priority_link_to_crawl(page.url)\n"
        },
        {
            "id": "chunk_3_Crawler_7",
            "code": "            else:\n                self.crawl_page(page)\n"
        },
        {
            "id": "chunk_3_Crawler_8",
            "code": "            page = self.data_store.extract_max_priority_page()\n"
        }
    ],
    "edges": [
        {
            "from": "chunk_0_GlobalBlock_1",
            "to": "chunk_0_GlobalBlock_2"
        },
        {
            "from": "chunk_1_PagesDataStore_1",
            "to": "chunk_1_PagesDataStore_2"
        },
        {
            "from": "chunk_1_PagesDataStore_2",
            "to": "chunk_1_PagesDataStore_3"
        },
        {
            "from": "chunk_1_PagesDataStore_3",
            "to": "chunk_1_PagesDataStore_4"
        },
        {
            "from": "chunk_1_PagesDataStore_4",
            "to": "chunk_1_PagesDataStore_5"
        },
        {
            "from": "chunk_1_PagesDataStore_5",
            "to": "chunk_1_PagesDataStore_6"
        },
        {
            "from": "chunk_1_PagesDataStore_6",
            "to": "chunk_1_PagesDataStore_7"
        },
        {
            "from": "chunk_1_PagesDataStore_7",
            "to": "chunk_1_PagesDataStore_8"
        },
        {
            "from": "chunk_2_Page_1",
            "to": "chunk_2_Page_2"
        },
        {
            "from": "chunk_2_Page_2",
            "to": "chunk_2_Page_3"
        },
        {
            "from": "chunk_2_Page_3",
            "to": "chunk_2_Page_4"
        },
        {
            "from": "chunk_3_Crawler_1",
            "to": "chunk_3_Crawler_2"
        },
        {
            "from": "chunk_3_Crawler_2",
            "to": "chunk_3_Crawler_3"
        },
        {
            "from": "chunk_3_Crawler_2",
            "to": "chunk_3_Crawler_4"
        },
        {
            "from": "chunk_3_Crawler_4",
            "to": "chunk_3_Crawler_5"
        },
        {
            "from": "chunk_3_Crawler_5",
            "to": "chunk_3_Crawler_6"
        },
        {
            "from": "chunk_3_Crawler_5",
            "to": "chunk_3_Crawler_8"
        },
        {
            "from": "chunk_3_Crawler_6",
            "to": "chunk_3_Crawler_7"
        },
        {
            "from": "chunk_3_Crawler_6",
            "to": "chunk_3_Crawler_8"
        },
        {
            "from": "chunk_3_Crawler_7",
            "to": "chunk_3_Crawler_8"
        },
        {
            "from": "chunk_3_Crawler_8",
            "to": "chunk_3_Crawler_4"
        }
    ]
}