{
    "nodes": [
        {
            "id": "chunk_0_GlobalBlock_1",
            "code": "from backend.blocks.hubspot._auth import (\n    HubSpotCredentials,\n    HubSpotCredentialsField,\n    HubSpotCredentialsInput,\n)\n"
        },
        {
            "id": "chunk_0_GlobalBlock_2",
            "code": "from backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\n"
        },
        {
            "id": "chunk_0_GlobalBlock_3",
            "code": "from backend.data.model import SchemaField\n"
        },
        {
            "id": "chunk_0_GlobalBlock_4",
            "code": "from backend.util.request import requests\n"
        },
        {
            "id": "chunk_0_GlobalBlock_5",
            "code": "\n\n\n"
        },
        {
            "id": "chunk_1_HubSpotContactBlock_1",
            "code": "class HubSpotContactBlock(Block):\n"
        },
        {
            "id": "chunk_1_HubSpotContactBlock_2",
            "code": "    class Input(BlockSchema):\n        credentials: HubSpotCredentialsInput = HubSpotCredentialsField()\n        operation: str = SchemaField(\n            description=\"Operation to perform (create, update, get)\", default=\"get\"\n        )\n        contact_data: dict = SchemaField(\n            description=\"Contact data for create/update operations\", default={}\n        )\n        email: str = SchemaField(\n            description=\"Email address for get/update operations\", default=\"\"\n        )\n"
        },
        {
            "id": "chunk_1_HubSpotContactBlock_3",
            "code": "    class Output(BlockSchema):\n        contact: dict = SchemaField(description=\"Contact information\")\n        status: str = SchemaField(description=\"Operation status\")\n"
        },
        {
            "id": "chunk_1_HubSpotContactBlock_4",
            "code": "    def __init__(self):\n        super().__init__(\n            id=\"5267326e-c4c1-4016-9f54-4e72ad02f813\",\n            description=\"Manages HubSpot contacts - create, update, and retrieve contact information\",\n            categories={BlockCategory.CRM},\n            input_schema=HubSpotContactBlock.Input,\n            output_schema=HubSpotContactBlock.Output,\n        )\n"
        },
        {
            "id": "chunk_1_HubSpotContactBlock_5",
            "code": "    def run(\n        self, input_data: Input, *, credentials: HubSpotCredentials, **kwargs\n    ) -> BlockOutput:\n"
        },
        {
            "id": "chunk_1_HubSpotContactBlock_6",
            "code": "        base_url = \"https://api.hubapi.com/crm/v3/objects/contacts\"\n        headers = {\n            \"Authorization\": f\"Bearer {credentials.api_key.get_secret_value()}\",\n            \"Content-Type\": \"application/json\",\n        }\n"
        },
        {
            "id": "chunk_1_HubSpotContactBlock_7",
            "code": "        if input_data.operation == \"create\":\n            response = requests.post(\n                base_url, headers=headers, json={\"properties\": input_data.contact_data}\n            )\n            result = response.json()\n            yield \"contact\", result\n            yield \"status\", \"created\"\n\n"
        },
        {
            "id": "chunk_1_HubSpotContactBlock_8",
            "code": "        elif input_data.operation == \"get\":\n            # Search for contact by email\n            search_url = f\"{base_url}/search\"\n            search_data = {\n                \"filterGroups\": [\n                    {\n                        \"filters\": [\n                            {\n                                \"propertyName\": \"email\",\n                                \"operator\": \"EQ\",\n                                \"value\": input_data.email,\n                            }\n                        ]\n                    }\n                ]\n            }\n            response = requests.post(search_url, headers=headers, json=search_data)\n            result = response.json()\n            yield \"contact\", result.get(\"results\", [{}])[0]\n            yield \"status\", \"retrieved\"\n\n"
        },
        {
            "id": "chunk_1_HubSpotContactBlock_9",
            "code": "        elif input_data.operation == \"update\":\n            search_response = requests.post(\n                f\"{base_url}/search\",\n                headers=headers,\n                json={\n                    \"filterGroups\": [\n                        {\n                            \"filters\": [\n                                {\n                                    \"propertyName\": \"email\",\n                                    \"operator\": \"EQ\",\n                                    \"value\": input_data.email,\n                                }\n                            ]\n                        }\n                    ]\n                },\n            )\n            contact_id = search_response.json().get(\"results\", [{}])[0].get(\"id\")\n\n            if contact_id:\n                response = requests.patch(\n                    f\"{base_url}/{contact_id}\",\n                    headers=headers,\n                    json={\"properties\": input_data.contact_data},\n                )\n                result = response.json()\n                yield \"contact\", result\n                yield \"status\", \"updated\"\n            else:\n                yield \"contact\", {}\n                yield \"status\", \"contact_not_found\"\n\n"
        },
        {
            "id": "chunk_2_HubSpotContactBlock.Input_1",
            "code": "    class Input(BlockSchema):\n"
        },
        {
            "id": "chunk_2_HubSpotContactBlock.Input_2",
            "code": "        credentials: HubSpotCredentialsInput = HubSpotCredentialsField()\n"
        },
        {
            "id": "chunk_2_HubSpotContactBlock.Input_3",
            "code": "        operation: str = SchemaField(\n            description=\"Operation to perform (create, update, get)\", default=\"get\"\n        )\n"
        },
        {
            "id": "chunk_2_HubSpotContactBlock.Input_4",
            "code": "        contact_data: dict = SchemaField(\n            description=\"Contact data for create/update operations\", default={}\n        )\n"
        },
        {
            "id": "chunk_2_HubSpotContactBlock.Input_5",
            "code": "        email: str = SchemaField(\n            description=\"Email address for get/update operations\", default=\"\"\n        )\n"
        },
        {
            "id": "chunk_3_HubSpotContactBlock.Output_1",
            "code": "    class Output(BlockSchema):\n        contact: dict = SchemaField(description=\"Contact information\")\n        status: str = SchemaField(description=\"Operation status\")\n"
        },
        {
            "id": "chunk_4_HubSpotContactBlock.__init___1",
            "code": "    def __init__(self):\n        super().__init__(\n            id=\"5267326e-c4c1-4016-9f54-4e72ad02f813\",\n            description=\"Manages HubSpot contacts - create, update, and retrieve contact information\",\n            categories={BlockCategory.CRM},\n            input_schema=HubSpotContactBlock.Input,\n            output_schema=HubSpotContactBlock.Output,\n        )\n"
        },
        {
            "id": "chunk_5_HubSpotContactBlock.run_1",
            "code": "    def run(\n        self, input_data: Input, *, credentials: HubSpotCredentials, **kwargs\n    ) -> BlockOutput:\n"
        },
        {
            "id": "chunk_5_HubSpotContactBlock.run_2",
            "code": "        base_url = \"https://api.hubapi.com/crm/v3/objects/contacts\"\n        headers = {\n            \"Authorization\": f\"Bearer {credentials.api_key.get_secret_value()}\",\n            \"Content-Type\": \"application/json\",\n        }\n"
        },
        {
            "id": "chunk_5_HubSpotContactBlock.run_3",
            "code": "        if input_data.operation == \"create\":\n            response = requests.post(\n                base_url, headers=headers, json={\"properties\": input_data.contact_data}\n            )\n            result = response.json()\n            yield \"contact\", result\n            yield \"status\", \"created\"\n\n"
        },
        {
            "id": "chunk_5_HubSpotContactBlock.run_4",
            "code": "        elif input_data.operation == \"get\":\n            # Search for contact by email\n            search_url = f\"{base_url}/search\"\n            search_data = {\n                \"filterGroups\": [\n                    {\n                        \"filters\": [\n                            {\n                                \"propertyName\": \"email\",\n                                \"operator\": \"EQ\",\n                                \"value\": input_data.email,\n                            }\n                        ]\n                    }\n                ]\n            }\n            response = requests.post(search_url, headers=headers, json=search_data)\n            result = response.json()\n            yield \"contact\", result.get(\"results\", [{}])[0]\n            yield \"status\", \"retrieved\"\n\n"
        },
        {
            "id": "chunk_5_HubSpotContactBlock.run_5",
            "code": "        elif input_data.operation == \"update\":\n            search_response = requests.post(\n                f\"{base_url}/search\",\n                headers=headers,\n                json={\n                    \"filterGroups\": [\n                        {\n                            \"filters\": [\n                                {\n                                    \"propertyName\": \"email\",\n                                    \"operator\": \"EQ\",\n                                    \"value\": input_data.email,\n                                }\n                            ]\n                        }\n                    ]\n                },\n            )\n"
        },
        {
            "id": "chunk_5_HubSpotContactBlock.run_6",
            "code": "            contact_id = search_response.json().get(\"results\", [{}])[0].get(\"id\")\n"
        },
        {
            "id": "chunk_5_HubSpotContactBlock.run_7",
            "code": "            if contact_id:\n                response = requests.patch(\n                    f\"{base_url}/{contact_id}\",\n                    headers=headers,\n                    json={\"properties\": input_data.contact_data},\n                )\n                result = response.json()\n                yield \"contact\", result\n                yield \"status\", \"updated\"\n"
        },
        {
            "id": "chunk_5_HubSpotContactBlock.run_8",
            "code": "            else:\n                yield \"contact\", {}\n                yield \"status\", \"contact_not_found\"\n"
        }
    ],
    "edges": [
        {
            "from": "chunk_0_GlobalBlock_1",
            "to": "chunk_0_GlobalBlock_2"
        },
        {
            "from": "chunk_0_GlobalBlock_2",
            "to": "chunk_0_GlobalBlock_3"
        },
        {
            "from": "chunk_0_GlobalBlock_3",
            "to": "chunk_0_GlobalBlock_4"
        },
        {
            "from": "chunk_0_GlobalBlock_4",
            "to": "chunk_0_GlobalBlock_5"
        },
        {
            "from": "chunk_1_HubSpotContactBlock_1",
            "to": "chunk_1_HubSpotContactBlock_2"
        },
        {
            "from": "chunk_1_HubSpotContactBlock_2",
            "to": "chunk_1_HubSpotContactBlock_3"
        },
        {
            "from": "chunk_1_HubSpotContactBlock_3",
            "to": "chunk_1_HubSpotContactBlock_4"
        },
        {
            "from": "chunk_1_HubSpotContactBlock_4",
            "to": "chunk_1_HubSpotContactBlock_5"
        },
        {
            "from": "chunk_1_HubSpotContactBlock_5",
            "to": "chunk_1_HubSpotContactBlock_6"
        },
        {
            "from": "chunk_1_HubSpotContactBlock_6",
            "to": "chunk_1_HubSpotContactBlock_7"
        },
        {
            "from": "chunk_1_HubSpotContactBlock_6",
            "to": "chunk_1_HubSpotContactBlock_8"
        },
        {
            "from": "chunk_1_HubSpotContactBlock_6",
            "to": "chunk_1_HubSpotContactBlock_9"
        },
        {
            "from": "chunk_2_HubSpotContactBlock.Input_1",
            "to": "chunk_2_HubSpotContactBlock.Input_2"
        },
        {
            "from": "chunk_2_HubSpotContactBlock.Input_2",
            "to": "chunk_2_HubSpotContactBlock.Input_3"
        },
        {
            "from": "chunk_2_HubSpotContactBlock.Input_3",
            "to": "chunk_2_HubSpotContactBlock.Input_4"
        },
        {
            "from": "chunk_2_HubSpotContactBlock.Input_4",
            "to": "chunk_2_HubSpotContactBlock.Input_5"
        },
        {
            "from": "chunk_5_HubSpotContactBlock.run_1",
            "to": "chunk_5_HubSpotContactBlock.run_2"
        },
        {
            "from": "chunk_5_HubSpotContactBlock.run_2",
            "to": "chunk_5_HubSpotContactBlock.run_3"
        },
        {
            "from": "chunk_5_HubSpotContactBlock.run_2",
            "to": "chunk_5_HubSpotContactBlock.run_4"
        },
        {
            "from": "chunk_5_HubSpotContactBlock.run_2",
            "to": "chunk_5_HubSpotContactBlock.run_5"
        },
        {
            "from": "chunk_5_HubSpotContactBlock.run_5",
            "to": "chunk_5_HubSpotContactBlock.run_6"
        },
        {
            "from": "chunk_5_HubSpotContactBlock.run_6",
            "to": "chunk_5_HubSpotContactBlock.run_7"
        },
        {
            "from": "chunk_5_HubSpotContactBlock.run_6",
            "to": "chunk_5_HubSpotContactBlock.run_8"
        }
    ]
}