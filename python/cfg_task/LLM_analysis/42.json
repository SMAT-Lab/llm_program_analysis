{
  "nodes": [
    {
      "id": "n0",
      "code": "import logging\n\nfrom backend.data import integrations\nfrom backend.data.model import APIKeyCredentials, Credentials, OAuth2Credentials\n\nfrom ._base import WT, BaseWebhooksManager\n\nlogger = logging.getLogger(__name__)\n"
    },
    {
      "id": "n1",
      "code": "class ManualWebhookManagerBase(BaseWebhooksManager[WT]):\n"
    },
    {
      "id": "n2",
      "code": "    async def _register_webhook(\n        self,\n        credentials: Credentials,\n        webhook_type: WT,\n        resource: str,\n        events: list[str],\n        ingress_url: str,\n        secret: str,\n    ) -> tuple[str, dict]:\n\n        print(ingress_url)  # FIXME: pass URL to user in front end\n\n        return \"\", {}\n"
    },
    {
      "id": "n3",
      "code": "    async def _deregister_webhook(\n        self,\n        webhook: integrations.Webhook,\n        credentials: OAuth2Credentials | APIKeyCredentials,\n    ) -> None:\n\n        pass\n"
    }
  ],
  "edges": [
    {
      "source": "n1",
      "target": "n2"
    },
    {
      "source": "n1",
      "target": "n3"
    }
  ]
}