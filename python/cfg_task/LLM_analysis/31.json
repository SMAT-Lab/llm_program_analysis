{
  "nodes": [
    {
      "id": "n0",
      "code": "def excess_3_code(number: int) -> str:\n    \"\"\"\n    Find excess-3 code of integer base 10.\n    Add 3 to all digits in a decimal number then convert to a binary-coded decimal.\n    https://en.wikipedia.org/wiki/Excess-3\n\n    >>> excess_3_code(0)\n    '0b0011'\n    >>> excess_3_code(3)\n    '0b0110'\n    >>> excess_3_code(2)\n    '0b0101'\n    >>> excess_3_code(20)\n    '0b01010011'\n    >>> excess_3_code(120)\n    '0b010001010011'\n    \"\"\"\n\n    num = \"\"\n"
    },
    {
      "id": "n1",
      "code": "    for digit in str(max(0, number)):\n        num += str(bin(int(digit) + 3))[2:].zfill(4)\n"
    },
    {
      "id": "n2",
      "code": "    return \"0b\" + num\n"
    },
    {
      "id": "n3",
      "code": "if __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()\n"
    }
  ],
  "edges": [
    {
      "source": "n1",
      "target": "n1"
    },
    {
      "source": "n0",
      "target": "n1"
    },
    {
      "source": "n1",
      "target": "n2"
    }
  ]
}