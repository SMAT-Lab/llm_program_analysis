{
  "nodes": [
    {
      "id": "n0",
      "code": "import codecs\n\nfrom backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import SchemaField\n"
    },
    {
      "id": "n1",
      "code": "class TextDecoderBlock(Block):\n\n    class Input(BlockSchema):\n        text: str = SchemaField(\n            description=\"A string containing escaped characters to be decoded\",\n            placeholder='Your entire text block with \\\\n and \\\\\" escaped characters',\n        )\n\n    class Output(BlockSchema):\n        decoded_text: str = SchemaField(\n            description=\"The decoded text with escape sequences processed\"\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"2570e8fe-8447-43ed-84c7-70d657923231\",\n            description=\"Decodes a string containing escape sequences into actual text\",\n            categories={BlockCategory.TEXT},\n            input_schema=TextDecoderBlock.Input,\n            output_schema=TextDecoderBlock.Output,\n            test_input={\"text\": \"\"\"Hello\\nWorld!\\nThis is a \\\"quoted\\\" string.\"\"\"},\n            test_output=[\n                (\n                    \"decoded_text\",\n                    \"\"\"Hello\nWorld!\nThis is a \"quoted\" string.\"\"\",\n                )\n            ],\n        )\n\n    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        decoded_text = codecs.decode(input_data.text, \"unicode_escape\")\n        yield \"decoded_text\", decoded_text\n"
    },
    {
      "id": "n2",
      "code": "    class Input(BlockSchema):\n        text: str = SchemaField(\n            description=\"A string containing escaped characters to be decoded\",\n            placeholder='Your entire text block with \\\\n and \\\\\" escaped characters',\n        )\n"
    },
    {
      "id": "n3",
      "code": "    class Output(BlockSchema):\n        decoded_text: str = SchemaField(\n            description=\"The decoded text with escape sequences processed\"\n        )\n"
    },
    {
      "id": "n4",
      "code": "    def __init__(self):\n        super().__init__(\n            id=\"2570e8fe-8447-43ed-84c7-70d657923231\",\n            description=\"Decodes a string containing escape sequences into actual text\",\n            categories={BlockCategory.TEXT},\n            input_schema=TextDecoderBlock.Input,\n            output_schema=TextDecoderBlock.Output,\n            test_input={\"text\": \"\"\"Hello\\nWorld!\\nThis is a \\\"quoted\\\" string.\"\"\"},\n            test_output=[\n                (\n                    \"decoded_text\",\n                    \"\"\"Hello\nWorld!\nThis is a \"quoted\" string.\"\"\",\n                )\n            ],\n        )\n"
    },
    {
      "id": "n5",
      "code": "    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n\n        decoded_text = codecs.decode(input_data.text, \"unicode_escape\")\n        yield \"decoded_text\", decoded_text\n"
    }
  ],
  "edges": []
}