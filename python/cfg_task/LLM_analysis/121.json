{
  "nodes": [
    {
      "id": "n0",
      "code": "import time\n\nfrom backend.util.decorator import error_logged, time_measured\n"
    },
    {
      "id": "n1",
      "code": "@time_measured\ndef example_function(a: int, b: int, c: int) -> int:\n\n    time.sleep(0.5)\n    return a + b + c\n"
    },
    {
      "id": "n2",
      "code": "\n\n\n"
    },
    {
      "id": "n3",
      "code": "@error_logged\n\ndef example_function_with_error(a: int, b: int, c: int) -> int:\n    raise ValueError(\"This is a test error\")\n"
    },
    {
      "id": "n4",
      "code": "\n\n\n"
    },
    {
      "id": "n5",
      "code": "def test_timer_decorator():\n\n    info, res = example_function(1, 2, 3)\n    assert info.cpu_time >= 0\n    assert info.wall_time >= 0.4\n    assert res == 6\n"
    },
    {
      "id": "n6",
      "code": "\n\n\n"
    },
    {
      "id": "n7",
      "code": "def test_error_decorator():\n\n    res = example_function_with_error(1, 2, 3)\n    assert res is None\n"
    },
    {
      "id": "n8",
      "code": "\n\n"
    }
  ],
  "edges": []
}