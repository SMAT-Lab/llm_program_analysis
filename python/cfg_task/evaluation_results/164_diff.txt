--- ground_truth
+++ llm_generated
@@ -17,21 +17,17 @@
         ...
     TypeError: Input value must be an 'int' type
     """
+
     if not isinstance(number, int):
         raise TypeError("Input value must be an 'int' type")
+
     position = 0
-    while number:
+while number:
         position += 1
         number >>= 1
-    return position
-"\n    Returns position of the highest set bit of a number.\n    Ref - https://graphics.stanford.edu/~seander/bithacks.html#IntegerLogObvious\n    >>> get_highest_set_bit_position(25)\n    5\n    >>> get_highest_set_bit_position(37)\n    6\n    >>> get_highest_set_bit_position(1)\n    1\n    >>> get_highest_set_bit_position(4)\n    3\n    >>> get_highest_set_bit_position(0)\n    0\n    >>> get_highest_set_bit_position(0.8)\n    Traceback (most recent call last):\n        ...\n    TypeError: Input value must be an 'int' type\n    "
-not isinstance(number, int)
-raise TypeError("Input value must be an 'int' type")
-position = 0
-number
-position += 1
-number >>= 1
 return position
-__name__ Eq '__main__'
-import doctest
-doctest.testmod()+if __name__ == "__main__":
+
+    import doctest
+
+    doctest.testmod()