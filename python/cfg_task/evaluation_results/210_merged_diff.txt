--- ground_truth
+++ llm_generated
@@ -18,9 +18,12 @@
     >>> binary_coded_decimal(987)
     '0b100110000111'
     """
-    return '0b' + ''.join((str(bin(int(digit)))[2:].zfill(4) for digit in str(max(0, number))))
-"\n    Find binary coded decimal (bcd) of integer base 10.\n    Each digit of the number is represented by a 4-bit binary.\n    Example:\n    >>> binary_coded_decimal(-2)\n    '0b0000'\n    >>> binary_coded_decimal(-1)\n    '0b0000'\n    >>> binary_coded_decimal(0)\n    '0b0000'\n    >>> binary_coded_decimal(3)\n    '0b0011'\n    >>> binary_coded_decimal(2)\n    '0b0010'\n    >>> binary_coded_decimal(12)\n    '0b00010010'\n    >>> binary_coded_decimal(987)\n    '0b100110000111'\n    "
-return '0b' + ''.join((str(bin(int(digit)))[2:].zfill(4) for digit in str(max(0, number))))
-__name__ Eq '__main__'
-import doctest
-doctest.testmod()+
+    return "0b" + "".join(
+        str(bin(int(digit)))[2:].zfill(4) for digit in str(max(0, number))
+    )
+if __name__ == "__main__":
+
+    import doctest
+
+    doctest.testmod()