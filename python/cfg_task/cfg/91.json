{
    "nodes": [
        {
            "id": "1",
            "type": "block",
            "statements": [
                "import os",
                "import subprocess",
                "directory = os.path.dirname(os.path.realpath(__file__))",
                "BACKEND_DIR = '.'",
                "LIBS_DIR = '../autogpt_libs'",
                "TARGET_DIRS = [BACKEND_DIR, LIBS_DIR]",
                "def run(*command: str) -> None:\n    print(f\">>>>> Running poetry run {' '.join(command)}\")\n    subprocess.run(['poetry', 'run'] + list(command), cwd=directory, check=True)",
                "print(f\">>>>> Running poetry run {' '.join(command)}\")",
                "subprocess.run(['poetry', 'run'] Add list(command))",
                "def lint():\n    try:\n        run('ruff', 'check', *TARGET_DIRS, '--exit-zero')\n        run('ruff', 'format', '--diff', '--check', LIBS_DIR)\n        run('isort', '--diff', '--check', '--profile', 'black', BACKEND_DIR)\n        run('black', '--diff', '--check', BACKEND_DIR)\n        run('pyright', *TARGET_DIRS)\n    except subprocess.CalledProcessError as e:\n        print('Lint failed, try running `poetry run format` to fix the issues: ', e)\n        raise e",
                "try:\n    run('ruff', 'check', *TARGET_DIRS, '--exit-zero')\n    run('ruff', 'format', '--diff', '--check', LIBS_DIR)\n    run('isort', '--diff', '--check', '--profile', 'black', BACKEND_DIR)\n    run('black', '--diff', '--check', BACKEND_DIR)\n    run('pyright', *TARGET_DIRS)\nexcept subprocess.CalledProcessError as e:\n    print('Lint failed, try running `poetry run format` to fix the issues: ', e)\n    raise e",
                "run('ruff', 'check', *TARGET_DIRS, '--exit-zero')",
                "run('ruff', 'format', '--diff', '--check', LIBS_DIR)",
                "run('isort', '--diff', '--check', '--profile', 'black', BACKEND_DIR)",
                "run('black', '--diff', '--check', BACKEND_DIR)",
                "run('pyright', *TARGET_DIRS)",
                "print('Lint failed, try running `poetry run format` to fix the issues: ', e)",
                "raise e",
                "def format():\n    run('ruff', 'check', '--fix', *TARGET_DIRS)\n    run('ruff', 'format', LIBS_DIR)\n    run('isort', '--profile', 'black', BACKEND_DIR)\n    run('black', BACKEND_DIR)\n    run('pyright', *TARGET_DIRS)",
                "run('ruff', 'check', '--fix', *TARGET_DIRS)",
                "run('ruff', 'format', LIBS_DIR)",
                "run('isort', '--profile', 'black', BACKEND_DIR)",
                "run('black', BACKEND_DIR)",
                "run('pyright', *TARGET_DIRS)"
            ]
        }
    ],
    "edges": []
}