{
    "nodes": [
        {
            "id": "1",
            "type": "block",
            "statements": [
                "import pytest",
                "from .depends import requires_admin_user, requires_user, verify_user",
                "def test_verify_user_no_payload():\n    user = verify_user(None, admin_only=False)\n    assert user.user_id == '3e53486c-cf57-477e-ba2a-cb02dc828e1a'\n    assert user.role == 'admin'",
                "user = verify_user(None, admin_only=False)",
                "assert user.user_id == '3e53486c-cf57-477e-ba2a-cb02dc828e1a'",
                "assert user.role == 'admin'",
                "def test_verify_user_no_user_id():\n    with pytest.raises(Exception):\n        verify_user({'role': 'admin'}, admin_only=False)",
                "with pytest.raises(Exception):\n    verify_user({'role': 'admin'}, admin_only=False)",
                "verify_user({'role': 'admin'})",
                "def test_verify_user_not_admin():\n    with pytest.raises(Exception):\n        verify_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'user'}, admin_only=True)",
                "with pytest.raises(Exception):\n    verify_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'user'}, admin_only=True)",
                "verify_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'user'})",
                "def test_verify_user_with_admin_role():\n    user = verify_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'admin'}, admin_only=True)\n    assert user.user_id == '3e53486c-cf57-477e-ba2a-cb02dc828e1a'\n    assert user.role == 'admin'",
                "user = verify_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'admin'}, admin_only=True)",
                "assert user.user_id == '3e53486c-cf57-477e-ba2a-cb02dc828e1a'",
                "assert user.role == 'admin'",
                "def test_verify_user_with_user_role():\n    user = verify_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'user'}, admin_only=False)\n    assert user.user_id == '3e53486c-cf57-477e-ba2a-cb02dc828e1a'\n    assert user.role == 'user'",
                "user = verify_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'user'}, admin_only=False)",
                "assert user.user_id == '3e53486c-cf57-477e-ba2a-cb02dc828e1a'",
                "assert user.role == 'user'",
                "def test_requires_user():\n    user = requires_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'user'})\n    assert user.user_id == '3e53486c-cf57-477e-ba2a-cb02dc828e1a'\n    assert user.role == 'user'",
                "user = requires_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'user'})",
                "assert user.user_id == '3e53486c-cf57-477e-ba2a-cb02dc828e1a'",
                "assert user.role == 'user'",
                "def test_requires_user_no_user_id():\n    with pytest.raises(Exception):\n        requires_user({'role': 'user'})",
                "with pytest.raises(Exception):\n    requires_user({'role': 'user'})",
                "requires_user({'role': 'user'})",
                "def test_requires_admin_user():\n    user = requires_admin_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'admin'})\n    assert user.user_id == '3e53486c-cf57-477e-ba2a-cb02dc828e1a'\n    assert user.role == 'admin'",
                "user = requires_admin_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'admin'})",
                "assert user.user_id == '3e53486c-cf57-477e-ba2a-cb02dc828e1a'",
                "assert user.role == 'admin'",
                "def test_requires_admin_user_not_admin():\n    with pytest.raises(Exception):\n        requires_admin_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'user'})",
                "with pytest.raises(Exception):\n    requires_admin_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'user'})",
                "requires_admin_user({'sub': '3e53486c-cf57-477e-ba2a-cb02dc828e1a', 'role': 'user'})"
            ]
        }
    ],
    "edges": []
}