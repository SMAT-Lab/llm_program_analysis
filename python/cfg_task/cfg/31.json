{
    "nodes": [
        {
            "id": "1",
            "type": "block",
            "statements": [
                "def excess_3_code(number: int) -> str:\n    \"\"\"\n    Find excess-3 code of integer base 10.\n    Add 3 to all digits in a decimal number then convert to a binary-coded decimal.\n    https://en.wikipedia.org/wiki/Excess-3\n\n    >>> excess_3_code(0)\n    '0b0011'\n    >>> excess_3_code(3)\n    '0b0110'\n    >>> excess_3_code(2)\n    '0b0101'\n    >>> excess_3_code(20)\n    '0b01010011'\n    >>> excess_3_code(120)\n    '0b010001010011'\n    \"\"\"\n    num = ''\n    for digit in str(max(0, number)):\n        num += str(bin(int(digit) + 3))[2:].zfill(4)\n    return '0b' + num",
                "\"\\n    Find excess-3 code of integer base 10.\\n    Add 3 to all digits in a decimal number then convert to a binary-coded decimal.\\n    https://en.wikipedia.org/wiki/Excess-3\\n\\n    >>> excess_3_code(0)\\n    '0b0011'\\n    >>> excess_3_code(3)\\n    '0b0110'\\n    >>> excess_3_code(2)\\n    '0b0101'\\n    >>> excess_3_code(20)\\n    '0b01010011'\\n    >>> excess_3_code(120)\\n    '0b010001010011'\\n    \"",
                "num = ''"
            ]
        },
        {
            "id": "2",
            "type": "block",
            "statements": [
                "digit",
                "str(max(0, number))"
            ]
        },
        {
            "id": "3",
            "type": "block",
            "statements": [
                "num += str(bin(int(digit) + 3))[2:].zfill(4)"
            ]
        },
        {
            "id": "4",
            "type": "block",
            "statements": [
                "return '0b' + num"
            ]
        },
        {
            "id": "5",
            "type": "block",
            "statements": [
                "__name__ Eq '__main__'"
            ]
        },
        {
            "id": "6",
            "type": "block",
            "statements": [
                "import doctest",
                "doctest.testmod()"
            ]
        },
        {
            "id": "7",
            "type": "block",
            "statements": []
        },
        {
            "id": "8",
            "type": "block",
            "statements": []
        }
    ],
    "edges": [
        {
            "source": "1",
            "target": "2",
            "type": "next"
        },
        {
            "source": "2",
            "target": "3",
            "type": "true"
        },
        {
            "source": "2",
            "target": "4",
            "type": "false"
        },
        {
            "source": "3",
            "target": "2",
            "type": "next"
        },
        {
            "source": "5",
            "target": "6",
            "type": "true"
        },
        {
            "source": "5",
            "target": "7",
            "type": "false"
        },
        {
            "source": "6",
            "target": "8",
            "type": "next"
        },
        {
            "source": "7",
            "target": "8",
            "type": "next"
        }
    ]
}