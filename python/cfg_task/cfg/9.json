{
    "nodes": [
        {
            "id": "1",
            "type": "block",
            "statements": [
                "import threading",
                "from typing import Callable, ParamSpec, TypeVar",
                "P = ParamSpec('P')",
                "R = TypeVar('R')",
                "def thread_cached(func: Callable[P, R]) -> Callable[P, R]:\n    thread_local = threading.local()\n\n    def wrapper(*args: P.args, **kwargs: P.kwargs) -> R:\n        cache = getattr(thread_local, 'cache', None)\n        if cache is None:\n            cache = thread_local.cache = {}\n        key = (args, tuple(sorted(kwargs.items())))\n        if key not in cache:\n            cache[key] = func(*args, **kwargs)\n        return cache[key]\n    return wrapper",
                "thread_local = threading.local()",
                "def wrapper(*args: P.args, **kwargs: P.kwargs) -> R:\n    cache = getattr(thread_local, 'cache', None)\n    if cache is None:\n        cache = thread_local.cache = {}\n    key = (args, tuple(sorted(kwargs.items())))\n    if key not in cache:\n        cache[key] = func(*args, **kwargs)\n    return cache[key]",
                "cache = getattr(thread_local, 'cache', None)",
                "cache Is None"
            ]
        },
        {
            "id": "2",
            "type": "block",
            "statements": [
                "cache = thread_local.cache = {}"
            ]
        },
        {
            "id": "3",
            "type": "block",
            "statements": []
        },
        {
            "id": "4",
            "type": "block",
            "statements": [
                "key = (args, tuple(sorted(kwargs.items())))",
                "key NotIn cache"
            ]
        },
        {
            "id": "5",
            "type": "block",
            "statements": [
                "cache[key] = func(*args, **kwargs)"
            ]
        },
        {
            "id": "6",
            "type": "block",
            "statements": []
        },
        {
            "id": "7",
            "type": "block",
            "statements": [
                "return cache[key]"
            ]
        },
        {
            "id": "8",
            "type": "block",
            "statements": [
                "return wrapper"
            ]
        }
    ],
    "edges": [
        {
            "source": "1",
            "target": "2",
            "type": "true"
        },
        {
            "source": "1",
            "target": "3",
            "type": "false"
        },
        {
            "source": "2",
            "target": "4",
            "type": "next"
        },
        {
            "source": "3",
            "target": "4",
            "type": "next"
        },
        {
            "source": "4",
            "target": "5",
            "type": "true"
        },
        {
            "source": "4",
            "target": "6",
            "type": "false"
        },
        {
            "source": "5",
            "target": "7",
            "type": "next"
        },
        {
            "source": "6",
            "target": "7",
            "type": "next"
        }
    ]
}