{
    "nodes": [
        {
            "id": "1",
            "type": "block",
            "statements": [
                "import contextlib",
                "import logging.config",
                "import os",
                "import dotenv",
                "import fastapi",
                "import fastapi.middleware.cors",
                "import fastapi.middleware.gzip",
                "import prisma",
                "import prometheus_fastapi_instrumentator",
                "import sentry_sdk",
                "import sentry_sdk.integrations.asyncio",
                "import sentry_sdk.integrations.fastapi",
                "import sentry_sdk.integrations.starlette",
                "import market.config",
                "import market.routes.admin",
                "import market.routes.agents",
                "import market.routes.analytics",
                "import market.routes.search",
                "import market.routes.submissions",
                "dotenv.load_dotenv()",
                "logging.config.dictConfig(market.config.LogConfig().model_dump())",
                "os.environ.get('SENTRY_DSN')"
            ]
        },
        {
            "id": "2",
            "type": "block",
            "statements": [
                "sentry_sdk.init()"
            ]
        },
        {
            "id": "3",
            "type": "block",
            "statements": []
        },
        {
            "id": "4",
            "type": "block",
            "statements": [
                "db_client = prisma.Prisma(auto_register=True)",
                "@contextlib.asynccontextmanager\nasync def lifespan(app: fastapi.FastAPI):\n    await db_client.connect()\n    yield\n    await db_client.disconnect()",
                "await db_client.connect()",
                "(yield)",
                "await db_client.disconnect()",
                "docs_url = '/docs'",
                "app = fastapi.FastAPI(title='Marketplace API', description='AutoGPT Marketplace API is a service that allows users to share AI agents.', summary='Maketplace API', version='0.1', lifespan=lifespan, root_path='/api/v1/market', docs_url=docs_url)",
                "app.add_middleware(fastapi.middleware.gzip.GZipMiddleware)",
                "app.add_middleware()",
                "app.include_router(market.routes.agents.router)",
                "app.include_router(market.routes.search.router)",
                "app.include_router(market.routes.submissions.router)",
                "app.include_router(market.routes.admin.router)",
                "app.include_router(market.routes.analytics.router)",
                "@app.get('/health')\ndef health():\n    return fastapi.responses.HTMLResponse(content='<h1>Marketplace API</h1>', status_code=200)",
                "return fastapi.responses.HTMLResponse(content='<h1>Marketplace API</h1>', status_code=200)"
            ]
        },
        {
            "id": "5",
            "type": "block",
            "statements": [
                "@app.get('/')\ndef default():\n    return fastapi.responses.HTMLResponse(content='<h1>Marketplace API</h1>', status_code=200)",
                "return fastapi.responses.HTMLResponse(content='<h1>Marketplace API</h1>', status_code=200)"
            ]
        },
        {
            "id": "6",
            "type": "block",
            "statements": [
                "prometheus_fastapi_instrumentator.Instrumentator().instrument(app).expose(app)"
            ]
        }
    ],
    "edges": [
        {
            "source": "1",
            "target": "2",
            "type": "true"
        },
        {
            "source": "1",
            "target": "3",
            "type": "false"
        },
        {
            "source": "2",
            "target": "4",
            "type": "next"
        },
        {
            "source": "3",
            "target": "4",
            "type": "next"
        }
    ]
}