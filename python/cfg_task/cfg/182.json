{
    "nodes": [
        {
            "id": "1",
            "type": "block",
            "statements": [
                "from enum import Enum",
                "class DefaultCategories(Enum):\n    HOUSING = 0\n    FOOD = 1\n    GAS = 2\n    SHOPPING = 3",
                "HOUSING = 0",
                "FOOD = 1",
                "GAS = 2",
                "SHOPPING = 3",
                "seller_category_map = {}",
                "seller_category_map['Exxon'] = DefaultCategories.GAS",
                "seller_category_map['Target'] = DefaultCategories.SHOPPING",
                "class Categorizer(object):\n\n    def __init__(self, seller_category_map, seller_category_overrides_map):\n        self.seller_category_map = seller_category_map\n        self.seller_category_overrides_map = seller_category_overrides_map\n\n    def categorize(self, transaction):\n        if transaction.seller in self.seller_category_map:\n            return self.seller_category_map[transaction.seller]\n        if transaction.seller in self.seller_category_overrides_map:\n            seller_category_map[transaction.seller] = self.manual_overrides[transaction.seller].peek_min()\n            return self.seller_category_map[transaction.seller]\n        return None",
                "def __init__(self, seller_category_map, seller_category_overrides_map):\n    self.seller_category_map = seller_category_map\n    self.seller_category_overrides_map = seller_category_overrides_map",
                "self.seller_category_map = seller_category_map",
                "self.seller_category_overrides_map = seller_category_overrides_map",
                "def categorize(self, transaction):\n    if transaction.seller in self.seller_category_map:\n        return self.seller_category_map[transaction.seller]\n    if transaction.seller in self.seller_category_overrides_map:\n        seller_category_map[transaction.seller] = self.manual_overrides[transaction.seller].peek_min()\n        return self.seller_category_map[transaction.seller]\n    return None",
                "transaction.seller In self.seller_category_map"
            ]
        },
        {
            "id": "2",
            "type": "block",
            "statements": [
                "return self.seller_category_map[transaction.seller]"
            ]
        },
        {
            "id": "3",
            "type": "block",
            "statements": []
        },
        {
            "id": "4",
            "type": "block",
            "statements": [
                "transaction.seller In self.seller_category_overrides_map"
            ]
        },
        {
            "id": "5",
            "type": "block",
            "statements": [
                "seller_category_map[transaction.seller] = self.manual_overrides[transaction.seller].peek_min()",
                "return self.seller_category_map[transaction.seller]"
            ]
        },
        {
            "id": "6",
            "type": "block",
            "statements": []
        },
        {
            "id": "7",
            "type": "block",
            "statements": [
                "return None"
            ]
        },
        {
            "id": "8",
            "type": "block",
            "statements": [
                "class Transaction(object):\n\n    def __init__(self, timestamp, seller, amount):\n        self.timestamp = timestamp\n        self.seller = seller\n        self.amount = amount",
                "def __init__(self, timestamp, seller, amount):\n    self.timestamp = timestamp\n    self.seller = seller\n    self.amount = amount",
                "self.timestamp = timestamp",
                "self.seller = seller",
                "self.amount = amount",
                "class Budget(object):\n\n    def __init__(self, template_categories_to_budget_map):\n        self.categories_to_budget_map = template_categories_to_budget_map\n\n    def override_category_budget(self, category, amount):\n        self.categories_to_budget_map[category] = amount",
                "def __init__(self, template_categories_to_budget_map):\n    self.categories_to_budget_map = template_categories_to_budget_map",
                "self.categories_to_budget_map = template_categories_to_budget_map",
                "def override_category_budget(self, category, amount):\n    self.categories_to_budget_map[category] = amount",
                "self.categories_to_budget_map[category] = amount"
            ]
        }
    ],
    "edges": [
        {
            "source": "1",
            "target": "2",
            "type": "true"
        },
        {
            "source": "1",
            "target": "3",
            "type": "false"
        },
        {
            "source": "3",
            "target": "4",
            "type": "next"
        },
        {
            "source": "4",
            "target": "5",
            "type": "true"
        },
        {
            "source": "4",
            "target": "6",
            "type": "false"
        },
        {
            "source": "6",
            "target": "7",
            "type": "next"
        }
    ]
}