{
    "nodes": [
        {
            "id": "1",
            "type": "block",
            "statements": [
                "from mrjob.job import MRJob",
                "class RemoveDuplicateUrls(MRJob):\n\n    def mapper(self, _, line):\n        yield (line, 1)\n\n    def reducer(self, key, values):\n        total = sum(values)\n        if total == 1:\n            yield (key, total)\n\n    def steps(self):\n        \"\"\"Run the map and reduce steps.\"\"\"\n        return [self.mr(mapper=self.mapper, reducer=self.reducer)]",
                "def mapper(self, _, line):\n    yield (line, 1)",
                "(yield (line, 1))",
                "def reducer(self, key, values):\n    total = sum(values)\n    if total == 1:\n        yield (key, total)",
                "total = sum(values)",
                "total Eq 1"
            ]
        },
        {
            "id": "2",
            "type": "block",
            "statements": [
                "(yield (key, total))"
            ]
        },
        {
            "id": "3",
            "type": "block",
            "statements": []
        },
        {
            "id": "4",
            "type": "block",
            "statements": [
                "def steps(self):\n    \"\"\"Run the map and reduce steps.\"\"\"\n    return [self.mr(mapper=self.mapper, reducer=self.reducer)]",
                "'Run the map and reduce steps.'",
                "return [self.mr(mapper=self.mapper, reducer=self.reducer)]"
            ]
        },
        {
            "id": "5",
            "type": "block",
            "statements": [
                "__name__ Eq '__main__'"
            ]
        },
        {
            "id": "6",
            "type": "block",
            "statements": [
                "RemoveDuplicateUrls.run()"
            ]
        },
        {
            "id": "7",
            "type": "block",
            "statements": []
        },
        {
            "id": "8",
            "type": "block",
            "statements": []
        }
    ],
    "edges": [
        {
            "source": "1",
            "target": "2",
            "type": "true"
        },
        {
            "source": "1",
            "target": "3",
            "type": "false"
        },
        {
            "source": "2",
            "target": "4",
            "type": "next"
        },
        {
            "source": "3",
            "target": "4",
            "type": "next"
        },
        {
            "source": "5",
            "target": "6",
            "type": "true"
        },
        {
            "source": "5",
            "target": "7",
            "type": "false"
        },
        {
            "source": "6",
            "target": "8",
            "type": "next"
        },
        {
            "source": "7",
            "target": "8",
            "type": "next"
        }
    ]
}