{
  "nodes": [
    {
      "id": "1",
      "type": "block",
      "statements": [
        "import time",
        "from backend.util.decorator import error_logged, time_measured",
        "@time_measured\ndef example_function(a: int, b: int, c: int) -> int:\n    time.sleep(0.5)\n    return a + b + c",
        "time.sleep(0.5)",
        "return a + b + c"
      ]
    },
    {
      "id": "2",
      "type": "block",
      "statements": [
        "@error_logged\ndef example_function_with_error(a: int, b: int, c: int) -> int:\n    raise ValueError('This is a test error')",
        "raise ValueError('This is a test error')",
        "def test_timer_decorator():\n    (info, res) = example_function(1, 2, 3)\n    assert info.cpu_time >= 0\n    assert info.wall_time >= 0.4\n    assert res == 6",
        "(info, res) = example_function(1, 2, 3)",
        "assert info.cpu_time >= 0",
        "assert info.wall_time >= 0.4",
        "assert res == 6",
        "def test_error_decorator():\n    res = example_function_with_error(1, 2, 3)\n    assert res is None",
        "res = example_function_with_error(1, 2, 3)",
        "assert res is None"
      ]
    }
  ],
  "edges": []
}