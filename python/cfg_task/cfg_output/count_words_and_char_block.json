{
  "nodes": [
    {
      "id": "1",
      "type": "block",
      "statements": [
        "from backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema",
        "from backend.data.model import SchemaField",
        "class WordCharacterCountBlock(Block):\n\n    class Input(BlockSchema):\n        text: str = SchemaField(description='Input text to count words and characters', placeholder='Enter your text here', advanced=False)\n\n    class Output(BlockSchema):\n        word_count: int = SchemaField(description='Number of words in the input text')\n        character_count: int = SchemaField(description='Number of characters in the input text')\n        error: str = SchemaField(description='Error message if the counting operation failed')\n\n    def __init__(self):\n        super().__init__(id='ab2a782d-22cf-4587-8a70-55b59b3f9f90', description='Counts the number of words and characters in a given text.', categories={BlockCategory.TEXT}, input_schema=WordCharacterCountBlock.Input, output_schema=WordCharacterCountBlock.Output, test_input={'text': 'Hello, how are you?'}, test_output=[('word_count', 4), ('character_count', 19)])\n\n    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        try:\n            text = input_data.text\n            word_count = len(text.split())\n            character_count = len(text)\n            yield ('word_count', word_count)\n            yield ('character_count', character_count)\n        except Exception as e:\n            yield ('error', str(e))",
        "class Input(BlockSchema):\n    text: str = SchemaField(description='Input text to count words and characters', placeholder='Enter your text here', advanced=False)",
        "text: str = SchemaField(description='Input text to count words and characters', placeholder='Enter your text here', advanced=False)",
        "class Output(BlockSchema):\n    word_count: int = SchemaField(description='Number of words in the input text')\n    character_count: int = SchemaField(description='Number of characters in the input text')\n    error: str = SchemaField(description='Error message if the counting operation failed')",
        "word_count: int = SchemaField(description='Number of words in the input text')",
        "character_count: int = SchemaField(description='Number of characters in the input text')",
        "error: str = SchemaField(description='Error message if the counting operation failed')",
        "def __init__(self):\n    super().__init__(id='ab2a782d-22cf-4587-8a70-55b59b3f9f90', description='Counts the number of words and characters in a given text.', categories={BlockCategory.TEXT}, input_schema=WordCharacterCountBlock.Input, output_schema=WordCharacterCountBlock.Output, test_input={'text': 'Hello, how are you?'}, test_output=[('word_count', 4), ('character_count', 19)])",
        "super().__init__()",
        "def run(self, input_data: Input, **kwargs) -> BlockOutput:\n    try:\n        text = input_data.text\n        word_count = len(text.split())\n        character_count = len(text)\n        yield ('word_count', word_count)\n        yield ('character_count', character_count)\n    except Exception as e:\n        yield ('error', str(e))",
        "try:\n    text = input_data.text\n    word_count = len(text.split())\n    character_count = len(text)\n    yield ('word_count', word_count)\n    yield ('character_count', character_count)\nexcept Exception as e:\n    yield ('error', str(e))",
        "text = input_data.text",
        "word_count = len(text.split())",
        "character_count = len(text)",
        "(yield ('word_count', word_count))",
        "(yield ('character_count', character_count))",
        "(yield ('error', str(e)))"
      ]
    }
  ],
  "edges": []
}