{
  "nodes": [
    {
      "id": "1",
      "type": "block",
      "statements": [
        "from enum import Enum",
        "from typing import Literal",
        "from pydantic import BaseModel, SecretStr",
        "from backend.data.model import APIKeyCredentials, CredentialsField, CredentialsMetaInput",
        "from backend.integrations.providers import ProviderName",
        "Slant3DCredentialsInput = CredentialsMetaInput[Literal[ProviderName.SLANT3D], Literal['api_key']]",
        "def Slant3DCredentialsField() -> Slant3DCredentialsInput:\n    return CredentialsField(description='Slant3D API key for authentication')",
        "return CredentialsField(description='Slant3D API key for authentication')"
      ]
    },
    {
      "id": "2",
      "type": "block",
      "statements": [
        "TEST_CREDENTIALS = APIKeyCredentials(id='01234567-89ab-cdef-0123-456789abcdef', provider='slant3d', api_key=SecretStr('mock-slant3d-api-key'), title='Mock Slant3D API key', expires_at=None)",
        "TEST_CREDENTIALS_INPUT = {'provider': TEST_CREDENTIALS.provider, 'id': TEST_CREDENTIALS.id, 'type': TEST_CREDENTIALS.type, 'title': TEST_CREDENTIALS.title}",
        "class CustomerDetails(BaseModel):\n    name: str\n    email: str\n    phone: str\n    address: str\n    city: str\n    state: str\n    zip: str\n    country_iso: str = 'US'\n    is_residential: bool = True",
        "name: str",
        "email: str",
        "phone: str",
        "address: str",
        "city: str",
        "state: str",
        "zip: str",
        "country_iso: str = 'US'",
        "is_residential: bool = True",
        "class Color(Enum):\n    WHITE = 'white'\n    BLACK = 'black'",
        "WHITE = 'white'",
        "BLACK = 'black'",
        "class Profile(Enum):\n    PLA = 'PLA'\n    PETG = 'PETG'",
        "PLA = 'PLA'",
        "PETG = 'PETG'",
        "class OrderItem(BaseModel):\n    file_url: str\n    quantity: str\n    color: Color = Color.WHITE\n    profile: Profile = Profile.PLA",
        "file_url: str",
        "quantity: str",
        "color: Color = Color.WHITE",
        "profile: Profile = Profile.PLA",
        "class Filament(BaseModel):\n    filament: str\n    hexColor: str\n    colorTag: str\n    profile: str",
        "filament: str",
        "hexColor: str",
        "colorTag: str",
        "profile: str"
      ]
    }
  ],
  "edges": []
}