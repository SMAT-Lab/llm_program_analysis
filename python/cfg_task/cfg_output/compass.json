{
  "nodes": [
    {
      "id": "1",
      "type": "block",
      "statements": [
        "import logging",
        "from fastapi import Request",
        "from strenum import StrEnum",
        "from backend.data import integrations",
        "from backend.integrations.providers import ProviderName",
        "from ._manual_base import ManualWebhookManagerBase",
        "logger = logging.getLogger(__name__)",
        "class CompassWebhookType(StrEnum):\n    TRANSCRIPTION = 'transcription'\n    TASK = 'task'",
        "TRANSCRIPTION = 'transcription'",
        "TASK = 'task'",
        "class CompassWebhookManager(ManualWebhookManagerBase):\n    PROVIDER_NAME = ProviderName.COMPASS\n    WebhookType = CompassWebhookType\n\n    @classmethod\n    async def validate_payload(cls, webhook: integrations.Webhook, request: Request) -> tuple[dict, str]:\n        payload = await request.json()\n        event_type = CompassWebhookType.TRANSCRIPTION\n        return (payload, event_type)",
        "PROVIDER_NAME = ProviderName.COMPASS",
        "WebhookType = CompassWebhookType",
        "@classmethod\nasync def validate_payload(cls, webhook: integrations.Webhook, request: Request) -> tuple[dict, str]:\n    payload = await request.json()\n    event_type = CompassWebhookType.TRANSCRIPTION\n    return (payload, event_type)",
        "payload = await request.json()",
        "event_type = CompassWebhookType.TRANSCRIPTION",
        "return (payload, event_type)"
      ]
    }
  ],
  "edges": []
}