{
  "nodes": [
    {
      "id": "1",
      "type": "block",
      "statements": [
        "from backend.util.settings import AppEnvironment, BehaveAs, Settings",
        "settings = Settings()",
        "def configure_logging():\n    import logging\n    import autogpt_libs.logging.config\n    if settings.config.behave_as == BehaveAs.LOCAL or settings.config.app_env == AppEnvironment.LOCAL:\n        autogpt_libs.logging.config.configure_logging(force_cloud_logging=False)\n    else:\n        autogpt_libs.logging.config.configure_logging(force_cloud_logging=True)\n    logging.getLogger('httpx').setLevel(logging.WARNING)",
        "import logging",
        "import autogpt_libs.logging.config",
        "settings.config.behave_as == BehaveAs.LOCAL or settings.config.app_env == AppEnvironment.LOCAL"
      ]
    },
    {
      "id": "2",
      "type": "block",
      "statements": [
        "autogpt_libs.logging.config.configure_logging()"
      ]
    },
    {
      "id": "3",
      "type": "block",
      "statements": [
        "autogpt_libs.logging.config.configure_logging()"
      ]
    },
    {
      "id": "4",
      "type": "block",
      "statements": [
        "logging.getLogger('httpx').setLevel(logging.WARNING)"
      ]
    }
  ],
  "edges": [
    {
      "source": "1",
      "target": "2",
      "type": "true"
    },
    {
      "source": "1",
      "target": "3",
      "type": "false"
    },
    {
      "source": "2",
      "target": "4",
      "type": "next"
    },
    {
      "source": "3",
      "target": "4",
      "type": "next"
    }
  ]
}