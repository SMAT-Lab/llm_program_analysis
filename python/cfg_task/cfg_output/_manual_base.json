{
  "nodes": [
    {
      "id": "1",
      "type": "block",
      "statements": [
        "import logging",
        "from backend.data import integrations",
        "from backend.data.model import APIKeyCredentials, Credentials, OAuth2Credentials",
        "from ._base import WT, BaseWebhooksManager",
        "logger = logging.getLogger(__name__)",
        "class ManualWebhookManagerBase(BaseWebhooksManager[WT]):\n\n    async def _register_webhook(self, credentials: Credentials, webhook_type: WT, resource: str, events: list[str], ingress_url: str, secret: str) -> tuple[str, dict]:\n        print(ingress_url)\n        return ('', {})\n\n    async def _deregister_webhook(self, webhook: integrations.Webhook, credentials: OAuth2Credentials | APIKeyCredentials) -> None:\n        pass",
        "async def _register_webhook(self, credentials: Credentials, webhook_type: WT, resource: str, events: list[str], ingress_url: str, secret: str) -> tuple[str, dict]:\n    print(ingress_url)\n    return ('', {})",
        "print(ingress_url)",
        "return ('', {})"
      ]
    },
    {
      "id": "2",
      "type": "block",
      "statements": [
        "async def _deregister_webhook(self, webhook: integrations.Webhook, credentials: OAuth2Credentials | APIKeyCredentials) -> None:\n    pass",
        "pass"
      ]
    }
  ],
  "edges": []
}