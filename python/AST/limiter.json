{
  "value": "import time\nfrom typing import Tuple\n\nfrom redis import Redis\n\nfrom .config import RATE_LIMIT_SETTINGS\n\n\nclass RateLimiter:\n    def __init__(\n        self,\n        redis_host: str = RATE_LIMIT_SETTINGS.redis_host,\n        redis_port: str = RATE_LIMIT_SETTINGS.redis_port,\n        redis_password: str = RATE_LIMIT_SETTINGS.redis_password,\n        requests_per_minute: int = RATE_LIMIT_SETTINGS.requests_per_minute,\n    ):\n        self.redis = Redis(\n            host=redis_host,\n            port=int(redis_port),\n            password=redis_password,\n            decode_responses=True,\n        )\n        self.window = 60\n        self.max_requests = requests_per_minute\n\n    async def check_rate_limit(self, api_key_id: str) -> Tuple[bool, int, int]:\n        \"\"\"\n        Check if request is within rate limits.\n\n        Args:\n            api_key_id: The API key identifier to check\n\n        Returns:\n            Tuple of (is_allowed, remaining_requests, reset_time)\n        \"\"\"\n        now = time.time()\n        window_start = now - self.window\n        key = f\"ratelimit:{api_key_id}:1min\"\n\n        pipe = self.redis.pipeline()\n        pipe.zremrangebyscore(key, 0, window_start)\n        pipe.zadd(key, {str(now): now})\n        pipe.zcount(key, window_start, now)\n        pipe.expire(key, self.window)\n\n        _, _, request_count, _ = pipe.execute()\n\n        remaining = max(0, self.max_requests - request_count)\n        reset_time = int(now + self.window)\n\n        return request_count <= self.max_requests, remaining, reset_time",
  "children": [
    {
      "value": "import time",
      "children": [
        {
          "value": "time",
          "children": [
            {
              "value": "time",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from typing import Tuple",
      "children": [
        {
          "value": "typing",
          "children": [
            {
              "value": "typing",
              "children": []
            }
          ]
        },
        {
          "value": "Tuple",
          "children": [
            {
              "value": "Tuple",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from redis import Redis",
      "children": [
        {
          "value": "redis",
          "children": [
            {
              "value": "redis",
              "children": []
            }
          ]
        },
        {
          "value": "Redis",
          "children": [
            {
              "value": "Redis",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from .config import RATE_LIMIT_SETTINGS",
      "children": [
        {
          "value": ".config",
          "children": [
            {
              "value": ".",
              "children": []
            },
            {
              "value": "config",
              "children": [
                {
                  "value": "config",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "RATE_LIMIT_SETTINGS",
          "children": [
            {
              "value": "RATE_LIMIT_SETTINGS",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "class RateLimiter:\n    def __init__(\n        self,\n        redis_host: str = RATE_LIMIT_SETTINGS.redis_host,\n        redis_port: str = RATE_LIMIT_SETTINGS.redis_port,\n        redis_password: str = RATE_LIMIT_SETTINGS.redis_password,\n        requests_per_minute: int = RATE_LIMIT_SETTINGS.requests_per_minute,\n    ):\n        self.redis = Redis(\n            host=redis_host,\n            port=int(redis_port),\n            password=redis_password,\n            decode_responses=True,\n        )\n        self.window = 60\n        self.max_requests = requests_per_minute\n\n    async def check_rate_limit(self, api_key_id: str) -> Tuple[bool, int, int]:\n        \"\"\"\n        Check if request is within rate limits.\n\n        Args:\n            api_key_id: The API key identifier to check\n\n        Returns:\n            Tuple of (is_allowed, remaining_requests, reset_time)\n        \"\"\"\n        now = time.time()\n        window_start = now - self.window\n        key = f\"ratelimit:{api_key_id}:1min\"\n\n        pipe = self.redis.pipeline()\n        pipe.zremrangebyscore(key, 0, window_start)\n        pipe.zadd(key, {str(now): now})\n        pipe.zcount(key, window_start, now)\n        pipe.expire(key, self.window)\n\n        _, _, request_count, _ = pipe.execute()\n\n        remaining = max(0, self.max_requests - request_count)\n        reset_time = int(now + self.window)\n\n        return request_count <= self.max_requests, remaining, reset_time",
      "children": [
        {
          "value": "RateLimiter",
          "children": []
        },
        {
          "value": "def __init__(\n        self,\n        redis_host: str = RATE_LIMIT_SETTINGS.redis_host,\n        redis_port: str = RATE_LIMIT_SETTINGS.redis_port,\n        redis_password: str = RATE_LIMIT_SETTINGS.redis_password,\n        requests_per_minute: int = RATE_LIMIT_SETTINGS.requests_per_minute,\n    ):\n        self.redis = Redis(\n            host=redis_host,\n            port=int(redis_port),\n            password=redis_password,\n            decode_responses=True,\n        )\n        self.window = 60\n        self.max_requests = requests_per_minute\n\n    async def check_rate_limit(self, api_key_id: str) -> Tuple[bool, int, int]:\n        \"\"\"\n        Check if request is within rate limits.\n\n        Args:\n            api_key_id: The API key identifier to check\n\n        Returns:\n            Tuple of (is_allowed, remaining_requests, reset_time)\n        \"\"\"\n        now = time.time()\n        window_start = now - self.window\n        key = f\"ratelimit:{api_key_id}:1min\"\n\n        pipe = self.redis.pipeline()\n        pipe.zremrangebyscore(key, 0, window_start)\n        pipe.zadd(key, {str(now): now})\n        pipe.zcount(key, window_start, now)\n        pipe.expire(key, self.window)\n\n        _, _, request_count, _ = pipe.execute()\n\n        remaining = max(0, self.max_requests - request_count)\n        reset_time = int(now + self.window)\n\n        return request_count <= self.max_requests, remaining, reset_time",
          "children": [
            {
              "value": "def __init__(\n        self,\n        redis_host: str = RATE_LIMIT_SETTINGS.redis_host,\n        redis_port: str = RATE_LIMIT_SETTINGS.redis_port,\n        redis_password: str = RATE_LIMIT_SETTINGS.redis_password,\n        requests_per_minute: int = RATE_LIMIT_SETTINGS.requests_per_minute,\n    ):\n        self.redis = Redis(\n            host=redis_host,\n            port=int(redis_port),\n            password=redis_password,\n            decode_responses=True,\n        )\n        self.window = 60\n        self.max_requests = requests_per_minute",
              "children": [
                {
                  "value": "__init__",
                  "children": []
                },
                {
                  "value": "(\n        self,\n        redis_host: str = RATE_LIMIT_SETTINGS.redis_host,\n        redis_port: str = RATE_LIMIT_SETTINGS.redis_port,\n        redis_password: str = RATE_LIMIT_SETTINGS.redis_password,\n        requests_per_minute: int = RATE_LIMIT_SETTINGS.requests_per_minute,\n    )",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "redis_host: str = RATE_LIMIT_SETTINGS.redis_host",
                      "children": [
                        {
                          "value": "redis_host",
                          "children": []
                        },
                        {
                          "value": "str",
                          "children": [
                            {
                              "value": "str",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "RATE_LIMIT_SETTINGS.redis_host",
                          "children": [
                            {
                              "value": "RATE_LIMIT_SETTINGS",
                              "children": []
                            },
                            {
                              "value": "redis_host",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "redis_port: str = RATE_LIMIT_SETTINGS.redis_port",
                      "children": [
                        {
                          "value": "redis_port",
                          "children": []
                        },
                        {
                          "value": "str",
                          "children": [
                            {
                              "value": "str",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "RATE_LIMIT_SETTINGS.redis_port",
                          "children": [
                            {
                              "value": "RATE_LIMIT_SETTINGS",
                              "children": []
                            },
                            {
                              "value": "redis_port",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "redis_password: str = RATE_LIMIT_SETTINGS.redis_password",
                      "children": [
                        {
                          "value": "redis_password",
                          "children": []
                        },
                        {
                          "value": "str",
                          "children": [
                            {
                              "value": "str",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "RATE_LIMIT_SETTINGS.redis_password",
                          "children": [
                            {
                              "value": "RATE_LIMIT_SETTINGS",
                              "children": []
                            },
                            {
                              "value": "redis_password",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "requests_per_minute: int = RATE_LIMIT_SETTINGS.requests_per_minute",
                      "children": [
                        {
                          "value": "requests_per_minute",
                          "children": []
                        },
                        {
                          "value": "int",
                          "children": [
                            {
                              "value": "int",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "RATE_LIMIT_SETTINGS.requests_per_minute",
                          "children": [
                            {
                              "value": "RATE_LIMIT_SETTINGS",
                              "children": []
                            },
                            {
                              "value": "requests_per_minute",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "self.redis = Redis(\n            host=redis_host,\n            port=int(redis_port),\n            password=redis_password,\n            decode_responses=True,\n        )\n        self.window = 60\n        self.max_requests = requests_per_minute",
                  "children": [
                    {
                      "value": "self.redis = Redis(\n            host=redis_host,\n            port=int(redis_port),\n            password=redis_password,\n            decode_responses=True,\n        )",
                      "children": [
                        {
                          "value": "self.redis = Redis(\n            host=redis_host,\n            port=int(redis_port),\n            password=redis_password,\n            decode_responses=True,\n        )",
                          "children": [
                            {
                              "value": "self.redis",
                              "children": [
                                {
                                  "value": "self",
                                  "children": []
                                },
                                {
                                  "value": "redis",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "Redis(\n            host=redis_host,\n            port=int(redis_port),\n            password=redis_password,\n            decode_responses=True,\n        )",
                              "children": [
                                {
                                  "value": "Redis",
                                  "children": []
                                },
                                {
                                  "value": "(\n            host=redis_host,\n            port=int(redis_port),\n            password=redis_password,\n            decode_responses=True,\n        )",
                                  "children": [
                                    {
                                      "value": "host=redis_host",
                                      "children": [
                                        {
                                          "value": "host",
                                          "children": []
                                        },
                                        {
                                          "value": "redis_host",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "port=int(redis_port)",
                                      "children": [
                                        {
                                          "value": "port",
                                          "children": []
                                        },
                                        {
                                          "value": "int(redis_port)",
                                          "children": [
                                            {
                                              "value": "int",
                                              "children": []
                                            },
                                            {
                                              "value": "(redis_port)",
                                              "children": [
                                                {
                                                  "value": "redis_port",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "password=redis_password",
                                      "children": [
                                        {
                                          "value": "password",
                                          "children": []
                                        },
                                        {
                                          "value": "redis_password",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "decode_responses=True",
                                      "children": [
                                        {
                                          "value": "decode_responses",
                                          "children": []
                                        },
                                        {
                                          "value": "True",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "self.window = 60",
                      "children": [
                        {
                          "value": "self.window = 60",
                          "children": [
                            {
                              "value": "self.window",
                              "children": [
                                {
                                  "value": "self",
                                  "children": []
                                },
                                {
                                  "value": "window",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "60",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "self.max_requests = requests_per_minute",
                      "children": [
                        {
                          "value": "self.max_requests = requests_per_minute",
                          "children": [
                            {
                              "value": "self.max_requests",
                              "children": [
                                {
                                  "value": "self",
                                  "children": []
                                },
                                {
                                  "value": "max_requests",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "requests_per_minute",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "async def check_rate_limit(self, api_key_id: str) -> Tuple[bool, int, int]:\n        \"\"\"\n        Check if request is within rate limits.\n\n        Args:\n            api_key_id: The API key identifier to check\n\n        Returns:\n            Tuple of (is_allowed, remaining_requests, reset_time)\n        \"\"\"\n        now = time.time()\n        window_start = now - self.window\n        key = f\"ratelimit:{api_key_id}:1min\"\n\n        pipe = self.redis.pipeline()\n        pipe.zremrangebyscore(key, 0, window_start)\n        pipe.zadd(key, {str(now): now})\n        pipe.zcount(key, window_start, now)\n        pipe.expire(key, self.window)\n\n        _, _, request_count, _ = pipe.execute()\n\n        remaining = max(0, self.max_requests - request_count)\n        reset_time = int(now + self.window)\n\n        return request_count <= self.max_requests, remaining, reset_time",
              "children": [
                {
                  "value": "check_rate_limit",
                  "children": []
                },
                {
                  "value": "(self, api_key_id: str)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "api_key_id: str",
                      "children": [
                        {
                          "value": "api_key_id",
                          "children": []
                        },
                        {
                          "value": "str",
                          "children": [
                            {
                              "value": "str",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "Tuple[bool, int, int]",
                  "children": [
                    {
                      "value": "Tuple[bool, int, int]",
                      "children": [
                        {
                          "value": "Tuple",
                          "children": []
                        },
                        {
                          "value": "[bool, int, int]",
                          "children": [
                            {
                              "value": "bool",
                              "children": [
                                {
                                  "value": "bool",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "int",
                              "children": [
                                {
                                  "value": "int",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "int",
                              "children": [
                                {
                                  "value": "int",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "\"\"\"\n        Check if request is within rate limits.\n\n        Args:\n            api_key_id: The API key identifier to check\n\n        Returns:\n            Tuple of (is_allowed, remaining_requests, reset_time)\n        \"\"\"\n        now = time.time()\n        window_start = now - self.window\n        key = f\"ratelimit:{api_key_id}:1min\"\n\n        pipe = self.redis.pipeline()\n        pipe.zremrangebyscore(key, 0, window_start)\n        pipe.zadd(key, {str(now): now})\n        pipe.zcount(key, window_start, now)\n        pipe.expire(key, self.window)\n\n        _, _, request_count, _ = pipe.execute()\n\n        remaining = max(0, self.max_requests - request_count)\n        reset_time = int(now + self.window)\n\n        return request_count <= self.max_requests, remaining, reset_time",
                  "children": [
                    {
                      "value": "\"\"\"\n        Check if request is within rate limits.\n\n        Args:\n            api_key_id: The API key identifier to check\n\n        Returns:\n            Tuple of (is_allowed, remaining_requests, reset_time)\n        \"\"\"",
                      "children": [
                        {
                          "value": "\"\"\"\n        Check if request is within rate limits.\n\n        Args:\n            api_key_id: The API key identifier to check\n\n        Returns:\n            Tuple of (is_allowed, remaining_requests, reset_time)\n        \"\"\"",
                          "children": [
                            {
                              "value": "\"\"\"",
                              "children": []
                            },
                            {
                              "value": "Check if request is within rate limits.\n\n        Args:\n            api_key_id: The API key identifier to check\n\n        Returns:\n            Tuple of (is_allowed, remaining_requests, reset_time)",
                              "children": []
                            },
                            {
                              "value": "\"\"\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "now = time.time()",
                      "children": [
                        {
                          "value": "now = time.time()",
                          "children": [
                            {
                              "value": "now",
                              "children": []
                            },
                            {
                              "value": "time.time()",
                              "children": [
                                {
                                  "value": "time.time",
                                  "children": [
                                    {
                                      "value": "time",
                                      "children": []
                                    },
                                    {
                                      "value": "time",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "()",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "window_start = now - self.window",
                      "children": [
                        {
                          "value": "window_start = now - self.window",
                          "children": [
                            {
                              "value": "window_start",
                              "children": []
                            },
                            {
                              "value": "now - self.window",
                              "children": [
                                {
                                  "value": "now",
                                  "children": []
                                },
                                {
                                  "value": "self.window",
                                  "children": [
                                    {
                                      "value": "self",
                                      "children": []
                                    },
                                    {
                                      "value": "window",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "key = f\"ratelimit:{api_key_id}:1min\"",
                      "children": [
                        {
                          "value": "key = f\"ratelimit:{api_key_id}:1min\"",
                          "children": [
                            {
                              "value": "key",
                              "children": []
                            },
                            {
                              "value": "f\"ratelimit:{api_key_id}:1min\"",
                              "children": [
                                {
                                  "value": "f\"",
                                  "children": []
                                },
                                {
                                  "value": "ratelimit:",
                                  "children": []
                                },
                                {
                                  "value": "{api_key_id}",
                                  "children": [
                                    {
                                      "value": "api_key_id",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": ":1min",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "pipe = self.redis.pipeline()",
                      "children": [
                        {
                          "value": "pipe = self.redis.pipeline()",
                          "children": [
                            {
                              "value": "pipe",
                              "children": []
                            },
                            {
                              "value": "self.redis.pipeline()",
                              "children": [
                                {
                                  "value": "self.redis.pipeline",
                                  "children": [
                                    {
                                      "value": "self.redis",
                                      "children": [
                                        {
                                          "value": "self",
                                          "children": []
                                        },
                                        {
                                          "value": "redis",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "pipeline",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "()",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "pipe.zremrangebyscore(key, 0, window_start)",
                      "children": [
                        {
                          "value": "pipe.zremrangebyscore(key, 0, window_start)",
                          "children": [
                            {
                              "value": "pipe.zremrangebyscore",
                              "children": [
                                {
                                  "value": "pipe",
                                  "children": []
                                },
                                {
                                  "value": "zremrangebyscore",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(key, 0, window_start)",
                              "children": [
                                {
                                  "value": "key",
                                  "children": []
                                },
                                {
                                  "value": "0",
                                  "children": []
                                },
                                {
                                  "value": "window_start",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "pipe.zadd(key, {str(now): now})",
                      "children": [
                        {
                          "value": "pipe.zadd(key, {str(now): now})",
                          "children": [
                            {
                              "value": "pipe.zadd",
                              "children": [
                                {
                                  "value": "pipe",
                                  "children": []
                                },
                                {
                                  "value": "zadd",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(key, {str(now): now})",
                              "children": [
                                {
                                  "value": "key",
                                  "children": []
                                },
                                {
                                  "value": "{str(now): now}",
                                  "children": [
                                    {
                                      "value": "str(now): now",
                                      "children": [
                                        {
                                          "value": "str(now)",
                                          "children": [
                                            {
                                              "value": "str",
                                              "children": []
                                            },
                                            {
                                              "value": "(now)",
                                              "children": [
                                                {
                                                  "value": "now",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "now",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "pipe.zcount(key, window_start, now)",
                      "children": [
                        {
                          "value": "pipe.zcount(key, window_start, now)",
                          "children": [
                            {
                              "value": "pipe.zcount",
                              "children": [
                                {
                                  "value": "pipe",
                                  "children": []
                                },
                                {
                                  "value": "zcount",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(key, window_start, now)",
                              "children": [
                                {
                                  "value": "key",
                                  "children": []
                                },
                                {
                                  "value": "window_start",
                                  "children": []
                                },
                                {
                                  "value": "now",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "pipe.expire(key, self.window)",
                      "children": [
                        {
                          "value": "pipe.expire(key, self.window)",
                          "children": [
                            {
                              "value": "pipe.expire",
                              "children": [
                                {
                                  "value": "pipe",
                                  "children": []
                                },
                                {
                                  "value": "expire",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(key, self.window)",
                              "children": [
                                {
                                  "value": "key",
                                  "children": []
                                },
                                {
                                  "value": "self.window",
                                  "children": [
                                    {
                                      "value": "self",
                                      "children": []
                                    },
                                    {
                                      "value": "window",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "_, _, request_count, _ = pipe.execute()",
                      "children": [
                        {
                          "value": "_, _, request_count, _ = pipe.execute()",
                          "children": [
                            {
                              "value": "_, _, request_count, _",
                              "children": [
                                {
                                  "value": "_",
                                  "children": []
                                },
                                {
                                  "value": "_",
                                  "children": []
                                },
                                {
                                  "value": "request_count",
                                  "children": []
                                },
                                {
                                  "value": "_",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "pipe.execute()",
                              "children": [
                                {
                                  "value": "pipe.execute",
                                  "children": [
                                    {
                                      "value": "pipe",
                                      "children": []
                                    },
                                    {
                                      "value": "execute",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "()",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "remaining = max(0, self.max_requests - request_count)",
                      "children": [
                        {
                          "value": "remaining = max(0, self.max_requests - request_count)",
                          "children": [
                            {
                              "value": "remaining",
                              "children": []
                            },
                            {
                              "value": "max(0, self.max_requests - request_count)",
                              "children": [
                                {
                                  "value": "max",
                                  "children": []
                                },
                                {
                                  "value": "(0, self.max_requests - request_count)",
                                  "children": [
                                    {
                                      "value": "0",
                                      "children": []
                                    },
                                    {
                                      "value": "self.max_requests - request_count",
                                      "children": [
                                        {
                                          "value": "self.max_requests",
                                          "children": [
                                            {
                                              "value": "self",
                                              "children": []
                                            },
                                            {
                                              "value": "max_requests",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "request_count",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "reset_time = int(now + self.window)",
                      "children": [
                        {
                          "value": "reset_time = int(now + self.window)",
                          "children": [
                            {
                              "value": "reset_time",
                              "children": []
                            },
                            {
                              "value": "int(now + self.window)",
                              "children": [
                                {
                                  "value": "int",
                                  "children": []
                                },
                                {
                                  "value": "(now + self.window)",
                                  "children": [
                                    {
                                      "value": "now + self.window",
                                      "children": [
                                        {
                                          "value": "now",
                                          "children": []
                                        },
                                        {
                                          "value": "self.window",
                                          "children": [
                                            {
                                              "value": "self",
                                              "children": []
                                            },
                                            {
                                              "value": "window",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "return request_count <= self.max_requests, remaining, reset_time",
                      "children": [
                        {
                          "value": "request_count <= self.max_requests, remaining, reset_time",
                          "children": [
                            {
                              "value": "request_count <= self.max_requests",
                              "children": [
                                {
                                  "value": "request_count",
                                  "children": []
                                },
                                {
                                  "value": "self.max_requests",
                                  "children": [
                                    {
                                      "value": "self",
                                      "children": []
                                    },
                                    {
                                      "value": "max_requests",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "remaining",
                              "children": []
                            },
                            {
                              "value": "reset_time",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}