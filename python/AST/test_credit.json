{
  "value": "from datetime import datetime\n\nimport pytest\nfrom prisma.models import CreditTransaction\n\nfrom backend.blocks.llm import AITextGeneratorBlock\nfrom backend.data.credit import UserCredit\nfrom backend.data.user import DEFAULT_USER_ID\nfrom backend.integrations.credentials_store import openai_credentials\nfrom backend.util.test import SpinTestServer\n\nREFILL_VALUE = 1000\nuser_credit = UserCredit(REFILL_VALUE)\n\n\n@pytest.mark.asyncio(scope=\"session\")\nasync def test_block_credit_usage(server: SpinTestServer):\n    current_credit = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\n\n    spending_amount_1 = await user_credit.spend_credits(\n        DEFAULT_USER_ID,\n        current_credit,\n        AITextGeneratorBlock().id,\n        {\n            \"model\": \"gpt-4-turbo\",\n            \"credentials\": {\n                \"id\": openai_credentials.id,\n                \"provider\": openai_credentials.provider,\n                \"type\": openai_credentials.type,\n            },\n        },\n        0.0,\n        0.0,\n        validate_balance=False,\n    )\n    assert spending_amount_1 > 0\n\n    spending_amount_2 = await user_credit.spend_credits(\n        DEFAULT_USER_ID,\n        current_credit,\n        AITextGeneratorBlock().id,\n        {\"model\": \"gpt-4-turbo\", \"api_key\": \"owned_api_key\"},\n        0.0,\n        0.0,\n        validate_balance=False,\n    )\n    assert spending_amount_2 == 0\n\n    new_credit = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\n    assert new_credit == current_credit - spending_amount_1 - spending_amount_2\n\n\n@pytest.mark.asyncio(scope=\"session\")\nasync def test_block_credit_top_up(server: SpinTestServer):\n    current_credit = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\n\n    await user_credit.top_up_credits(DEFAULT_USER_ID, 100)\n\n    new_credit = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\n    assert new_credit == current_credit + 100\n\n\n@pytest.mark.asyncio(scope=\"session\")\nasync def test_block_credit_reset(server: SpinTestServer):\n    month1 = datetime(2022, 1, 15)\n    month2 = datetime(2022, 2, 15)\n\n    user_credit.time_now = lambda: month2\n    month2credit = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\n\n    # Month 1 result should only affect month 1\n    user_credit.time_now = lambda: month1\n    month1credit = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\n    await user_credit.top_up_credits(DEFAULT_USER_ID, 100)\n    assert await user_credit.get_or_refill_credit(DEFAULT_USER_ID) == month1credit + 100\n\n    # Month 2 balance is unaffected\n    user_credit.time_now = lambda: month2\n    assert await user_credit.get_or_refill_credit(DEFAULT_USER_ID) == month2credit\n\n\n@pytest.mark.asyncio(scope=\"session\")\nasync def test_credit_refill(server: SpinTestServer):\n    # Clear all transactions within the month\n    await CreditTransaction.prisma().update_many(\n        where={\n            \"userId\": DEFAULT_USER_ID,\n            \"createdAt\": {\n                \"gte\": datetime(2022, 2, 1),\n                \"lt\": datetime(2022, 3, 1),\n            },\n        },\n        data={\"isActive\": False},\n    )\n    user_credit.time_now = lambda: datetime(2022, 2, 15)\n\n    balance = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\n    assert balance == REFILL_VALUE",
  "children": [
    {
      "value": "from datetime import datetime",
      "children": [
        {
          "value": "datetime",
          "children": [
            {
              "value": "datetime",
              "children": []
            }
          ]
        },
        {
          "value": "datetime",
          "children": [
            {
              "value": "datetime",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "import pytest",
      "children": [
        {
          "value": "pytest",
          "children": [
            {
              "value": "pytest",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from prisma.models import CreditTransaction",
      "children": [
        {
          "value": "prisma.models",
          "children": [
            {
              "value": "prisma",
              "children": []
            },
            {
              "value": "models",
              "children": []
            }
          ]
        },
        {
          "value": "CreditTransaction",
          "children": [
            {
              "value": "CreditTransaction",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.blocks.llm import AITextGeneratorBlock",
      "children": [
        {
          "value": "backend.blocks.llm",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "blocks",
              "children": []
            },
            {
              "value": "llm",
              "children": []
            }
          ]
        },
        {
          "value": "AITextGeneratorBlock",
          "children": [
            {
              "value": "AITextGeneratorBlock",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.data.credit import UserCredit",
      "children": [
        {
          "value": "backend.data.credit",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "data",
              "children": []
            },
            {
              "value": "credit",
              "children": []
            }
          ]
        },
        {
          "value": "UserCredit",
          "children": [
            {
              "value": "UserCredit",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.data.user import DEFAULT_USER_ID",
      "children": [
        {
          "value": "backend.data.user",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "data",
              "children": []
            },
            {
              "value": "user",
              "children": []
            }
          ]
        },
        {
          "value": "DEFAULT_USER_ID",
          "children": [
            {
              "value": "DEFAULT_USER_ID",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.integrations.credentials_store import openai_credentials",
      "children": [
        {
          "value": "backend.integrations.credentials_store",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "integrations",
              "children": []
            },
            {
              "value": "credentials_store",
              "children": []
            }
          ]
        },
        {
          "value": "openai_credentials",
          "children": [
            {
              "value": "openai_credentials",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.util.test import SpinTestServer",
      "children": [
        {
          "value": "backend.util.test",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "util",
              "children": []
            },
            {
              "value": "test",
              "children": []
            }
          ]
        },
        {
          "value": "SpinTestServer",
          "children": [
            {
              "value": "SpinTestServer",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "REFILL_VALUE = 1000",
      "children": [
        {
          "value": "REFILL_VALUE = 1000",
          "children": [
            {
              "value": "REFILL_VALUE",
              "children": []
            },
            {
              "value": "1000",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "user_credit = UserCredit(REFILL_VALUE)",
      "children": [
        {
          "value": "user_credit = UserCredit(REFILL_VALUE)",
          "children": [
            {
              "value": "user_credit",
              "children": []
            },
            {
              "value": "UserCredit(REFILL_VALUE)",
              "children": [
                {
                  "value": "UserCredit",
                  "children": []
                },
                {
                  "value": "(REFILL_VALUE)",
                  "children": [
                    {
                      "value": "REFILL_VALUE",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "@pytest.mark.asyncio(scope=\"session\")\nasync def test_block_credit_usage(server: SpinTestServer):\n    current_credit = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\n\n    spending_amount_1 = await user_credit.spend_credits(\n        DEFAULT_USER_ID,\n        current_credit,\n        AITextGeneratorBlock().id,\n        {\n            \"model\": \"gpt-4-turbo\",\n            \"credentials\": {\n                \"id\": openai_credentials.id,\n                \"provider\": openai_credentials.provider,\n                \"type\": openai_credentials.type,\n            },\n        },\n        0.0,\n        0.0,\n        validate_balance=False,\n    )\n    assert spending_amount_1 > 0\n\n    spending_amount_2 = await user_credit.spend_credits(\n        DEFAULT_USER_ID,\n        current_credit,\n        AITextGeneratorBlock().id,\n        {\"model\": \"gpt-4-turbo\", \"api_key\": \"owned_api_key\"},\n        0.0,\n        0.0,\n        validate_balance=False,\n    )\n    assert spending_amount_2 == 0\n\n    new_credit = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\n    assert new_credit == current_credit - spending_amount_1 - spending_amount_2",
      "children": [
        {
          "value": "@pytest.mark.asyncio(scope=\"session\")",
          "children": [
            {
              "value": "pytest.mark.asyncio(scope=\"session\")",
              "children": [
                {
                  "value": "pytest.mark.asyncio",
                  "children": [
                    {
                      "value": "pytest.mark",
                      "children": [
                        {
                          "value": "pytest",
                          "children": []
                        },
                        {
                          "value": "mark",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "asyncio",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "(scope=\"session\")",
                  "children": [
                    {
                      "value": "scope=\"session\"",
                      "children": [
                        {
                          "value": "scope",
                          "children": []
                        },
                        {
                          "value": "\"session\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "session",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "async def test_block_credit_usage(server: SpinTestServer):\n    current_credit = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\n\n    spending_amount_1 = await user_credit.spend_credits(\n        DEFAULT_USER_ID,\n        current_credit,\n        AITextGeneratorBlock().id,\n        {\n            \"model\": \"gpt-4-turbo\",\n            \"credentials\": {\n                \"id\": openai_credentials.id,\n                \"provider\": openai_credentials.provider,\n                \"type\": openai_credentials.type,\n            },\n        },\n        0.0,\n        0.0,\n        validate_balance=False,\n    )\n    assert spending_amount_1 > 0\n\n    spending_amount_2 = await user_credit.spend_credits(\n        DEFAULT_USER_ID,\n        current_credit,\n        AITextGeneratorBlock().id,\n        {\"model\": \"gpt-4-turbo\", \"api_key\": \"owned_api_key\"},\n        0.0,\n        0.0,\n        validate_balance=False,\n    )\n    assert spending_amount_2 == 0\n\n    new_credit = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\n    assert new_credit == current_credit - spending_amount_1 - spending_amount_2",
          "children": [
            {
              "value": "test_block_credit_usage",
              "children": []
            },
            {
              "value": "(server: SpinTestServer)",
              "children": [
                {
                  "value": "server: SpinTestServer",
                  "children": [
                    {
                      "value": "server",
                      "children": []
                    },
                    {
                      "value": "SpinTestServer",
                      "children": [
                        {
                          "value": "SpinTestServer",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "current_credit = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\n\n    spending_amount_1 = await user_credit.spend_credits(\n        DEFAULT_USER_ID,\n        current_credit,\n        AITextGeneratorBlock().id,\n        {\n            \"model\": \"gpt-4-turbo\",\n            \"credentials\": {\n                \"id\": openai_credentials.id,\n                \"provider\": openai_credentials.provider,\n                \"type\": openai_credentials.type,\n            },\n        },\n        0.0,\n        0.0,\n        validate_balance=False,\n    )\n    assert spending_amount_1 > 0\n\n    spending_amount_2 = await user_credit.spend_credits(\n        DEFAULT_USER_ID,\n        current_credit,\n        AITextGeneratorBlock().id,\n        {\"model\": \"gpt-4-turbo\", \"api_key\": \"owned_api_key\"},\n        0.0,\n        0.0,\n        validate_balance=False,\n    )\n    assert spending_amount_2 == 0\n\n    new_credit = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\n    assert new_credit == current_credit - spending_amount_1 - spending_amount_2",
              "children": [
                {
                  "value": "current_credit = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)",
                  "children": [
                    {
                      "value": "current_credit = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)",
                      "children": [
                        {
                          "value": "current_credit",
                          "children": []
                        },
                        {
                          "value": "await user_credit.get_or_refill_credit(DEFAULT_USER_ID)",
                          "children": [
                            {
                              "value": "user_credit.get_or_refill_credit(DEFAULT_USER_ID)",
                              "children": [
                                {
                                  "value": "user_credit.get_or_refill_credit",
                                  "children": [
                                    {
                                      "value": "user_credit",
                                      "children": []
                                    },
                                    {
                                      "value": "get_or_refill_credit",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(DEFAULT_USER_ID)",
                                  "children": [
                                    {
                                      "value": "DEFAULT_USER_ID",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "spending_amount_1 = await user_credit.spend_credits(\n        DEFAULT_USER_ID,\n        current_credit,\n        AITextGeneratorBlock().id,\n        {\n            \"model\": \"gpt-4-turbo\",\n            \"credentials\": {\n                \"id\": openai_credentials.id,\n                \"provider\": openai_credentials.provider,\n                \"type\": openai_credentials.type,\n            },\n        },\n        0.0,\n        0.0,\n        validate_balance=False,\n    )",
                  "children": [
                    {
                      "value": "spending_amount_1 = await user_credit.spend_credits(\n        DEFAULT_USER_ID,\n        current_credit,\n        AITextGeneratorBlock().id,\n        {\n            \"model\": \"gpt-4-turbo\",\n            \"credentials\": {\n                \"id\": openai_credentials.id,\n                \"provider\": openai_credentials.provider,\n                \"type\": openai_credentials.type,\n            },\n        },\n        0.0,\n        0.0,\n        validate_balance=False,\n    )",
                      "children": [
                        {
                          "value": "spending_amount_1",
                          "children": []
                        },
                        {
                          "value": "await user_credit.spend_credits(\n        DEFAULT_USER_ID,\n        current_credit,\n        AITextGeneratorBlock().id,\n        {\n            \"model\": \"gpt-4-turbo\",\n            \"credentials\": {\n                \"id\": openai_credentials.id,\n                \"provider\": openai_credentials.provider,\n                \"type\": openai_credentials.type,\n            },\n        },\n        0.0,\n        0.0,\n        validate_balance=False,\n    )",
                          "children": [
                            {
                              "value": "user_credit.spend_credits(\n        DEFAULT_USER_ID,\n        current_credit,\n        AITextGeneratorBlock().id,\n        {\n            \"model\": \"gpt-4-turbo\",\n            \"credentials\": {\n                \"id\": openai_credentials.id,\n                \"provider\": openai_credentials.provider,\n                \"type\": openai_credentials.type,\n            },\n        },\n        0.0,\n        0.0,\n        validate_balance=False,\n    )",
                              "children": [
                                {
                                  "value": "user_credit.spend_credits",
                                  "children": [
                                    {
                                      "value": "user_credit",
                                      "children": []
                                    },
                                    {
                                      "value": "spend_credits",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(\n        DEFAULT_USER_ID,\n        current_credit,\n        AITextGeneratorBlock().id,\n        {\n            \"model\": \"gpt-4-turbo\",\n            \"credentials\": {\n                \"id\": openai_credentials.id,\n                \"provider\": openai_credentials.provider,\n                \"type\": openai_credentials.type,\n            },\n        },\n        0.0,\n        0.0,\n        validate_balance=False,\n    )",
                                  "children": [
                                    {
                                      "value": "DEFAULT_USER_ID",
                                      "children": []
                                    },
                                    {
                                      "value": "current_credit",
                                      "children": []
                                    },
                                    {
                                      "value": "AITextGeneratorBlock().id",
                                      "children": [
                                        {
                                          "value": "AITextGeneratorBlock()",
                                          "children": [
                                            {
                                              "value": "AITextGeneratorBlock",
                                              "children": []
                                            },
                                            {
                                              "value": "()",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "id",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "{\n            \"model\": \"gpt-4-turbo\",\n            \"credentials\": {\n                \"id\": openai_credentials.id,\n                \"provider\": openai_credentials.provider,\n                \"type\": openai_credentials.type,\n            },\n        }",
                                      "children": [
                                        {
                                          "value": "\"model\": \"gpt-4-turbo\"",
                                          "children": [
                                            {
                                              "value": "\"model\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "model",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"gpt-4-turbo\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "gpt-4-turbo",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"credentials\": {\n                \"id\": openai_credentials.id,\n                \"provider\": openai_credentials.provider,\n                \"type\": openai_credentials.type,\n            }",
                                          "children": [
                                            {
                                              "value": "\"credentials\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "credentials",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "{\n                \"id\": openai_credentials.id,\n                \"provider\": openai_credentials.provider,\n                \"type\": openai_credentials.type,\n            }",
                                              "children": [
                                                {
                                                  "value": "\"id\": openai_credentials.id",
                                                  "children": [
                                                    {
                                                      "value": "\"id\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "id",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "openai_credentials.id",
                                                      "children": [
                                                        {
                                                          "value": "openai_credentials",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "id",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"provider\": openai_credentials.provider",
                                                  "children": [
                                                    {
                                                      "value": "\"provider\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "provider",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "openai_credentials.provider",
                                                      "children": [
                                                        {
                                                          "value": "openai_credentials",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "provider",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"type\": openai_credentials.type",
                                                  "children": [
                                                    {
                                                      "value": "\"type\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "type",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "openai_credentials.type",
                                                      "children": [
                                                        {
                                                          "value": "openai_credentials",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "type",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "0.0",
                                      "children": []
                                    },
                                    {
                                      "value": "0.0",
                                      "children": []
                                    },
                                    {
                                      "value": "validate_balance=False",
                                      "children": [
                                        {
                                          "value": "validate_balance",
                                          "children": []
                                        },
                                        {
                                          "value": "False",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "assert spending_amount_1 > 0",
                  "children": [
                    {
                      "value": "spending_amount_1 > 0",
                      "children": [
                        {
                          "value": "spending_amount_1",
                          "children": []
                        },
                        {
                          "value": "0",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "spending_amount_2 = await user_credit.spend_credits(\n        DEFAULT_USER_ID,\n        current_credit,\n        AITextGeneratorBlock().id,\n        {\"model\": \"gpt-4-turbo\", \"api_key\": \"owned_api_key\"},\n        0.0,\n        0.0,\n        validate_balance=False,\n    )",
                  "children": [
                    {
                      "value": "spending_amount_2 = await user_credit.spend_credits(\n        DEFAULT_USER_ID,\n        current_credit,\n        AITextGeneratorBlock().id,\n        {\"model\": \"gpt-4-turbo\", \"api_key\": \"owned_api_key\"},\n        0.0,\n        0.0,\n        validate_balance=False,\n    )",
                      "children": [
                        {
                          "value": "spending_amount_2",
                          "children": []
                        },
                        {
                          "value": "await user_credit.spend_credits(\n        DEFAULT_USER_ID,\n        current_credit,\n        AITextGeneratorBlock().id,\n        {\"model\": \"gpt-4-turbo\", \"api_key\": \"owned_api_key\"},\n        0.0,\n        0.0,\n        validate_balance=False,\n    )",
                          "children": [
                            {
                              "value": "user_credit.spend_credits(\n        DEFAULT_USER_ID,\n        current_credit,\n        AITextGeneratorBlock().id,\n        {\"model\": \"gpt-4-turbo\", \"api_key\": \"owned_api_key\"},\n        0.0,\n        0.0,\n        validate_balance=False,\n    )",
                              "children": [
                                {
                                  "value": "user_credit.spend_credits",
                                  "children": [
                                    {
                                      "value": "user_credit",
                                      "children": []
                                    },
                                    {
                                      "value": "spend_credits",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(\n        DEFAULT_USER_ID,\n        current_credit,\n        AITextGeneratorBlock().id,\n        {\"model\": \"gpt-4-turbo\", \"api_key\": \"owned_api_key\"},\n        0.0,\n        0.0,\n        validate_balance=False,\n    )",
                                  "children": [
                                    {
                                      "value": "DEFAULT_USER_ID",
                                      "children": []
                                    },
                                    {
                                      "value": "current_credit",
                                      "children": []
                                    },
                                    {
                                      "value": "AITextGeneratorBlock().id",
                                      "children": [
                                        {
                                          "value": "AITextGeneratorBlock()",
                                          "children": [
                                            {
                                              "value": "AITextGeneratorBlock",
                                              "children": []
                                            },
                                            {
                                              "value": "()",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "id",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "{\"model\": \"gpt-4-turbo\", \"api_key\": \"owned_api_key\"}",
                                      "children": [
                                        {
                                          "value": "\"model\": \"gpt-4-turbo\"",
                                          "children": [
                                            {
                                              "value": "\"model\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "model",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"gpt-4-turbo\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "gpt-4-turbo",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"api_key\": \"owned_api_key\"",
                                          "children": [
                                            {
                                              "value": "\"api_key\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "api_key",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"owned_api_key\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "owned_api_key",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "0.0",
                                      "children": []
                                    },
                                    {
                                      "value": "0.0",
                                      "children": []
                                    },
                                    {
                                      "value": "validate_balance=False",
                                      "children": [
                                        {
                                          "value": "validate_balance",
                                          "children": []
                                        },
                                        {
                                          "value": "False",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "assert spending_amount_2 == 0",
                  "children": [
                    {
                      "value": "spending_amount_2 == 0",
                      "children": [
                        {
                          "value": "spending_amount_2",
                          "children": []
                        },
                        {
                          "value": "0",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "new_credit = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)",
                  "children": [
                    {
                      "value": "new_credit = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)",
                      "children": [
                        {
                          "value": "new_credit",
                          "children": []
                        },
                        {
                          "value": "await user_credit.get_or_refill_credit(DEFAULT_USER_ID)",
                          "children": [
                            {
                              "value": "user_credit.get_or_refill_credit(DEFAULT_USER_ID)",
                              "children": [
                                {
                                  "value": "user_credit.get_or_refill_credit",
                                  "children": [
                                    {
                                      "value": "user_credit",
                                      "children": []
                                    },
                                    {
                                      "value": "get_or_refill_credit",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(DEFAULT_USER_ID)",
                                  "children": [
                                    {
                                      "value": "DEFAULT_USER_ID",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "assert new_credit == current_credit - spending_amount_1 - spending_amount_2",
                  "children": [
                    {
                      "value": "new_credit == current_credit - spending_amount_1 - spending_amount_2",
                      "children": [
                        {
                          "value": "new_credit",
                          "children": []
                        },
                        {
                          "value": "current_credit - spending_amount_1 - spending_amount_2",
                          "children": [
                            {
                              "value": "current_credit - spending_amount_1",
                              "children": [
                                {
                                  "value": "current_credit",
                                  "children": []
                                },
                                {
                                  "value": "spending_amount_1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "spending_amount_2",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "@pytest.mark.asyncio(scope=\"session\")\nasync def test_block_credit_top_up(server: SpinTestServer):\n    current_credit = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\n\n    await user_credit.top_up_credits(DEFAULT_USER_ID, 100)\n\n    new_credit = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\n    assert new_credit == current_credit + 100",
      "children": [
        {
          "value": "@pytest.mark.asyncio(scope=\"session\")",
          "children": [
            {
              "value": "pytest.mark.asyncio(scope=\"session\")",
              "children": [
                {
                  "value": "pytest.mark.asyncio",
                  "children": [
                    {
                      "value": "pytest.mark",
                      "children": [
                        {
                          "value": "pytest",
                          "children": []
                        },
                        {
                          "value": "mark",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "asyncio",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "(scope=\"session\")",
                  "children": [
                    {
                      "value": "scope=\"session\"",
                      "children": [
                        {
                          "value": "scope",
                          "children": []
                        },
                        {
                          "value": "\"session\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "session",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "async def test_block_credit_top_up(server: SpinTestServer):\n    current_credit = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\n\n    await user_credit.top_up_credits(DEFAULT_USER_ID, 100)\n\n    new_credit = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\n    assert new_credit == current_credit + 100",
          "children": [
            {
              "value": "test_block_credit_top_up",
              "children": []
            },
            {
              "value": "(server: SpinTestServer)",
              "children": [
                {
                  "value": "server: SpinTestServer",
                  "children": [
                    {
                      "value": "server",
                      "children": []
                    },
                    {
                      "value": "SpinTestServer",
                      "children": [
                        {
                          "value": "SpinTestServer",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "current_credit = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\n\n    await user_credit.top_up_credits(DEFAULT_USER_ID, 100)\n\n    new_credit = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\n    assert new_credit == current_credit + 100",
              "children": [
                {
                  "value": "current_credit = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)",
                  "children": [
                    {
                      "value": "current_credit = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)",
                      "children": [
                        {
                          "value": "current_credit",
                          "children": []
                        },
                        {
                          "value": "await user_credit.get_or_refill_credit(DEFAULT_USER_ID)",
                          "children": [
                            {
                              "value": "user_credit.get_or_refill_credit(DEFAULT_USER_ID)",
                              "children": [
                                {
                                  "value": "user_credit.get_or_refill_credit",
                                  "children": [
                                    {
                                      "value": "user_credit",
                                      "children": []
                                    },
                                    {
                                      "value": "get_or_refill_credit",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(DEFAULT_USER_ID)",
                                  "children": [
                                    {
                                      "value": "DEFAULT_USER_ID",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "await user_credit.top_up_credits(DEFAULT_USER_ID, 100)",
                  "children": [
                    {
                      "value": "await user_credit.top_up_credits(DEFAULT_USER_ID, 100)",
                      "children": [
                        {
                          "value": "user_credit.top_up_credits(DEFAULT_USER_ID, 100)",
                          "children": [
                            {
                              "value": "user_credit.top_up_credits",
                              "children": [
                                {
                                  "value": "user_credit",
                                  "children": []
                                },
                                {
                                  "value": "top_up_credits",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(DEFAULT_USER_ID, 100)",
                              "children": [
                                {
                                  "value": "DEFAULT_USER_ID",
                                  "children": []
                                },
                                {
                                  "value": "100",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "new_credit = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)",
                  "children": [
                    {
                      "value": "new_credit = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)",
                      "children": [
                        {
                          "value": "new_credit",
                          "children": []
                        },
                        {
                          "value": "await user_credit.get_or_refill_credit(DEFAULT_USER_ID)",
                          "children": [
                            {
                              "value": "user_credit.get_or_refill_credit(DEFAULT_USER_ID)",
                              "children": [
                                {
                                  "value": "user_credit.get_or_refill_credit",
                                  "children": [
                                    {
                                      "value": "user_credit",
                                      "children": []
                                    },
                                    {
                                      "value": "get_or_refill_credit",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(DEFAULT_USER_ID)",
                                  "children": [
                                    {
                                      "value": "DEFAULT_USER_ID",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "assert new_credit == current_credit + 100",
                  "children": [
                    {
                      "value": "new_credit == current_credit + 100",
                      "children": [
                        {
                          "value": "new_credit",
                          "children": []
                        },
                        {
                          "value": "current_credit + 100",
                          "children": [
                            {
                              "value": "current_credit",
                              "children": []
                            },
                            {
                              "value": "100",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "@pytest.mark.asyncio(scope=\"session\")\nasync def test_block_credit_reset(server: SpinTestServer):\n    month1 = datetime(2022, 1, 15)\n    month2 = datetime(2022, 2, 15)\n\n    user_credit.time_now = lambda: month2\n    month2credit = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\n\n    # Month 1 result should only affect month 1\n    user_credit.time_now = lambda: month1\n    month1credit = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\n    await user_credit.top_up_credits(DEFAULT_USER_ID, 100)\n    assert await user_credit.get_or_refill_credit(DEFAULT_USER_ID) == month1credit + 100\n\n    # Month 2 balance is unaffected\n    user_credit.time_now = lambda: month2\n    assert await user_credit.get_or_refill_credit(DEFAULT_USER_ID) == month2credit",
      "children": [
        {
          "value": "@pytest.mark.asyncio(scope=\"session\")",
          "children": [
            {
              "value": "pytest.mark.asyncio(scope=\"session\")",
              "children": [
                {
                  "value": "pytest.mark.asyncio",
                  "children": [
                    {
                      "value": "pytest.mark",
                      "children": [
                        {
                          "value": "pytest",
                          "children": []
                        },
                        {
                          "value": "mark",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "asyncio",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "(scope=\"session\")",
                  "children": [
                    {
                      "value": "scope=\"session\"",
                      "children": [
                        {
                          "value": "scope",
                          "children": []
                        },
                        {
                          "value": "\"session\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "session",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "async def test_block_credit_reset(server: SpinTestServer):\n    month1 = datetime(2022, 1, 15)\n    month2 = datetime(2022, 2, 15)\n\n    user_credit.time_now = lambda: month2\n    month2credit = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\n\n    # Month 1 result should only affect month 1\n    user_credit.time_now = lambda: month1\n    month1credit = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\n    await user_credit.top_up_credits(DEFAULT_USER_ID, 100)\n    assert await user_credit.get_or_refill_credit(DEFAULT_USER_ID) == month1credit + 100\n\n    # Month 2 balance is unaffected\n    user_credit.time_now = lambda: month2\n    assert await user_credit.get_or_refill_credit(DEFAULT_USER_ID) == month2credit",
          "children": [
            {
              "value": "test_block_credit_reset",
              "children": []
            },
            {
              "value": "(server: SpinTestServer)",
              "children": [
                {
                  "value": "server: SpinTestServer",
                  "children": [
                    {
                      "value": "server",
                      "children": []
                    },
                    {
                      "value": "SpinTestServer",
                      "children": [
                        {
                          "value": "SpinTestServer",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "month1 = datetime(2022, 1, 15)\n    month2 = datetime(2022, 2, 15)\n\n    user_credit.time_now = lambda: month2\n    month2credit = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\n\n    # Month 1 result should only affect month 1\n    user_credit.time_now = lambda: month1\n    month1credit = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\n    await user_credit.top_up_credits(DEFAULT_USER_ID, 100)\n    assert await user_credit.get_or_refill_credit(DEFAULT_USER_ID) == month1credit + 100\n\n    # Month 2 balance is unaffected\n    user_credit.time_now = lambda: month2\n    assert await user_credit.get_or_refill_credit(DEFAULT_USER_ID) == month2credit",
              "children": [
                {
                  "value": "month1 = datetime(2022, 1, 15)",
                  "children": [
                    {
                      "value": "month1 = datetime(2022, 1, 15)",
                      "children": [
                        {
                          "value": "month1",
                          "children": []
                        },
                        {
                          "value": "datetime(2022, 1, 15)",
                          "children": [
                            {
                              "value": "datetime",
                              "children": []
                            },
                            {
                              "value": "(2022, 1, 15)",
                              "children": [
                                {
                                  "value": "2022",
                                  "children": []
                                },
                                {
                                  "value": "1",
                                  "children": []
                                },
                                {
                                  "value": "15",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "month2 = datetime(2022, 2, 15)",
                  "children": [
                    {
                      "value": "month2 = datetime(2022, 2, 15)",
                      "children": [
                        {
                          "value": "month2",
                          "children": []
                        },
                        {
                          "value": "datetime(2022, 2, 15)",
                          "children": [
                            {
                              "value": "datetime",
                              "children": []
                            },
                            {
                              "value": "(2022, 2, 15)",
                              "children": [
                                {
                                  "value": "2022",
                                  "children": []
                                },
                                {
                                  "value": "2",
                                  "children": []
                                },
                                {
                                  "value": "15",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "user_credit.time_now = lambda: month2",
                  "children": [
                    {
                      "value": "user_credit.time_now = lambda: month2",
                      "children": [
                        {
                          "value": "user_credit.time_now",
                          "children": [
                            {
                              "value": "user_credit",
                              "children": []
                            },
                            {
                              "value": "time_now",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "lambda: month2",
                          "children": [
                            {
                              "value": "month2",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "month2credit = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)",
                  "children": [
                    {
                      "value": "month2credit = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)",
                      "children": [
                        {
                          "value": "month2credit",
                          "children": []
                        },
                        {
                          "value": "await user_credit.get_or_refill_credit(DEFAULT_USER_ID)",
                          "children": [
                            {
                              "value": "user_credit.get_or_refill_credit(DEFAULT_USER_ID)",
                              "children": [
                                {
                                  "value": "user_credit.get_or_refill_credit",
                                  "children": [
                                    {
                                      "value": "user_credit",
                                      "children": []
                                    },
                                    {
                                      "value": "get_or_refill_credit",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(DEFAULT_USER_ID)",
                                  "children": [
                                    {
                                      "value": "DEFAULT_USER_ID",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "# Month 1 result should only affect month 1",
                  "children": []
                },
                {
                  "value": "user_credit.time_now = lambda: month1",
                  "children": [
                    {
                      "value": "user_credit.time_now = lambda: month1",
                      "children": [
                        {
                          "value": "user_credit.time_now",
                          "children": [
                            {
                              "value": "user_credit",
                              "children": []
                            },
                            {
                              "value": "time_now",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "lambda: month1",
                          "children": [
                            {
                              "value": "month1",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "month1credit = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)",
                  "children": [
                    {
                      "value": "month1credit = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)",
                      "children": [
                        {
                          "value": "month1credit",
                          "children": []
                        },
                        {
                          "value": "await user_credit.get_or_refill_credit(DEFAULT_USER_ID)",
                          "children": [
                            {
                              "value": "user_credit.get_or_refill_credit(DEFAULT_USER_ID)",
                              "children": [
                                {
                                  "value": "user_credit.get_or_refill_credit",
                                  "children": [
                                    {
                                      "value": "user_credit",
                                      "children": []
                                    },
                                    {
                                      "value": "get_or_refill_credit",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(DEFAULT_USER_ID)",
                                  "children": [
                                    {
                                      "value": "DEFAULT_USER_ID",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "await user_credit.top_up_credits(DEFAULT_USER_ID, 100)",
                  "children": [
                    {
                      "value": "await user_credit.top_up_credits(DEFAULT_USER_ID, 100)",
                      "children": [
                        {
                          "value": "user_credit.top_up_credits(DEFAULT_USER_ID, 100)",
                          "children": [
                            {
                              "value": "user_credit.top_up_credits",
                              "children": [
                                {
                                  "value": "user_credit",
                                  "children": []
                                },
                                {
                                  "value": "top_up_credits",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(DEFAULT_USER_ID, 100)",
                              "children": [
                                {
                                  "value": "DEFAULT_USER_ID",
                                  "children": []
                                },
                                {
                                  "value": "100",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "assert await user_credit.get_or_refill_credit(DEFAULT_USER_ID) == month1credit + 100",
                  "children": [
                    {
                      "value": "await user_credit.get_or_refill_credit(DEFAULT_USER_ID) == month1credit + 100",
                      "children": [
                        {
                          "value": "await user_credit.get_or_refill_credit(DEFAULT_USER_ID)",
                          "children": [
                            {
                              "value": "user_credit.get_or_refill_credit(DEFAULT_USER_ID)",
                              "children": [
                                {
                                  "value": "user_credit.get_or_refill_credit",
                                  "children": [
                                    {
                                      "value": "user_credit",
                                      "children": []
                                    },
                                    {
                                      "value": "get_or_refill_credit",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(DEFAULT_USER_ID)",
                                  "children": [
                                    {
                                      "value": "DEFAULT_USER_ID",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "month1credit + 100",
                          "children": [
                            {
                              "value": "month1credit",
                              "children": []
                            },
                            {
                              "value": "100",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "# Month 2 balance is unaffected",
                  "children": []
                },
                {
                  "value": "user_credit.time_now = lambda: month2",
                  "children": [
                    {
                      "value": "user_credit.time_now = lambda: month2",
                      "children": [
                        {
                          "value": "user_credit.time_now",
                          "children": [
                            {
                              "value": "user_credit",
                              "children": []
                            },
                            {
                              "value": "time_now",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "lambda: month2",
                          "children": [
                            {
                              "value": "month2",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "assert await user_credit.get_or_refill_credit(DEFAULT_USER_ID) == month2credit",
                  "children": [
                    {
                      "value": "await user_credit.get_or_refill_credit(DEFAULT_USER_ID) == month2credit",
                      "children": [
                        {
                          "value": "await user_credit.get_or_refill_credit(DEFAULT_USER_ID)",
                          "children": [
                            {
                              "value": "user_credit.get_or_refill_credit(DEFAULT_USER_ID)",
                              "children": [
                                {
                                  "value": "user_credit.get_or_refill_credit",
                                  "children": [
                                    {
                                      "value": "user_credit",
                                      "children": []
                                    },
                                    {
                                      "value": "get_or_refill_credit",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(DEFAULT_USER_ID)",
                                  "children": [
                                    {
                                      "value": "DEFAULT_USER_ID",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "month2credit",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "@pytest.mark.asyncio(scope=\"session\")\nasync def test_credit_refill(server: SpinTestServer):\n    # Clear all transactions within the month\n    await CreditTransaction.prisma().update_many(\n        where={\n            \"userId\": DEFAULT_USER_ID,\n            \"createdAt\": {\n                \"gte\": datetime(2022, 2, 1),\n                \"lt\": datetime(2022, 3, 1),\n            },\n        },\n        data={\"isActive\": False},\n    )\n    user_credit.time_now = lambda: datetime(2022, 2, 15)\n\n    balance = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\n    assert balance == REFILL_VALUE",
      "children": [
        {
          "value": "@pytest.mark.asyncio(scope=\"session\")",
          "children": [
            {
              "value": "pytest.mark.asyncio(scope=\"session\")",
              "children": [
                {
                  "value": "pytest.mark.asyncio",
                  "children": [
                    {
                      "value": "pytest.mark",
                      "children": [
                        {
                          "value": "pytest",
                          "children": []
                        },
                        {
                          "value": "mark",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "asyncio",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "(scope=\"session\")",
                  "children": [
                    {
                      "value": "scope=\"session\"",
                      "children": [
                        {
                          "value": "scope",
                          "children": []
                        },
                        {
                          "value": "\"session\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "session",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "async def test_credit_refill(server: SpinTestServer):\n    # Clear all transactions within the month\n    await CreditTransaction.prisma().update_many(\n        where={\n            \"userId\": DEFAULT_USER_ID,\n            \"createdAt\": {\n                \"gte\": datetime(2022, 2, 1),\n                \"lt\": datetime(2022, 3, 1),\n            },\n        },\n        data={\"isActive\": False},\n    )\n    user_credit.time_now = lambda: datetime(2022, 2, 15)\n\n    balance = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\n    assert balance == REFILL_VALUE",
          "children": [
            {
              "value": "test_credit_refill",
              "children": []
            },
            {
              "value": "(server: SpinTestServer)",
              "children": [
                {
                  "value": "server: SpinTestServer",
                  "children": [
                    {
                      "value": "server",
                      "children": []
                    },
                    {
                      "value": "SpinTestServer",
                      "children": [
                        {
                          "value": "SpinTestServer",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Clear all transactions within the month",
              "children": []
            },
            {
              "value": "await CreditTransaction.prisma().update_many(\n        where={\n            \"userId\": DEFAULT_USER_ID,\n            \"createdAt\": {\n                \"gte\": datetime(2022, 2, 1),\n                \"lt\": datetime(2022, 3, 1),\n            },\n        },\n        data={\"isActive\": False},\n    )\n    user_credit.time_now = lambda: datetime(2022, 2, 15)\n\n    balance = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\n    assert balance == REFILL_VALUE",
              "children": [
                {
                  "value": "await CreditTransaction.prisma().update_many(\n        where={\n            \"userId\": DEFAULT_USER_ID,\n            \"createdAt\": {\n                \"gte\": datetime(2022, 2, 1),\n                \"lt\": datetime(2022, 3, 1),\n            },\n        },\n        data={\"isActive\": False},\n    )",
                  "children": [
                    {
                      "value": "await CreditTransaction.prisma().update_many(\n        where={\n            \"userId\": DEFAULT_USER_ID,\n            \"createdAt\": {\n                \"gte\": datetime(2022, 2, 1),\n                \"lt\": datetime(2022, 3, 1),\n            },\n        },\n        data={\"isActive\": False},\n    )",
                      "children": [
                        {
                          "value": "CreditTransaction.prisma().update_many(\n        where={\n            \"userId\": DEFAULT_USER_ID,\n            \"createdAt\": {\n                \"gte\": datetime(2022, 2, 1),\n                \"lt\": datetime(2022, 3, 1),\n            },\n        },\n        data={\"isActive\": False},\n    )",
                          "children": [
                            {
                              "value": "CreditTransaction.prisma().update_many",
                              "children": [
                                {
                                  "value": "CreditTransaction.prisma()",
                                  "children": [
                                    {
                                      "value": "CreditTransaction.prisma",
                                      "children": [
                                        {
                                          "value": "CreditTransaction",
                                          "children": []
                                        },
                                        {
                                          "value": "prisma",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "()",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "update_many",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\n        where={\n            \"userId\": DEFAULT_USER_ID,\n            \"createdAt\": {\n                \"gte\": datetime(2022, 2, 1),\n                \"lt\": datetime(2022, 3, 1),\n            },\n        },\n        data={\"isActive\": False},\n    )",
                              "children": [
                                {
                                  "value": "where={\n            \"userId\": DEFAULT_USER_ID,\n            \"createdAt\": {\n                \"gte\": datetime(2022, 2, 1),\n                \"lt\": datetime(2022, 3, 1),\n            },\n        }",
                                  "children": [
                                    {
                                      "value": "where",
                                      "children": []
                                    },
                                    {
                                      "value": "{\n            \"userId\": DEFAULT_USER_ID,\n            \"createdAt\": {\n                \"gte\": datetime(2022, 2, 1),\n                \"lt\": datetime(2022, 3, 1),\n            },\n        }",
                                      "children": [
                                        {
                                          "value": "\"userId\": DEFAULT_USER_ID",
                                          "children": [
                                            {
                                              "value": "\"userId\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "userId",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "DEFAULT_USER_ID",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"createdAt\": {\n                \"gte\": datetime(2022, 2, 1),\n                \"lt\": datetime(2022, 3, 1),\n            }",
                                          "children": [
                                            {
                                              "value": "\"createdAt\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "createdAt",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "{\n                \"gte\": datetime(2022, 2, 1),\n                \"lt\": datetime(2022, 3, 1),\n            }",
                                              "children": [
                                                {
                                                  "value": "\"gte\": datetime(2022, 2, 1)",
                                                  "children": [
                                                    {
                                                      "value": "\"gte\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "gte",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "datetime(2022, 2, 1)",
                                                      "children": [
                                                        {
                                                          "value": "datetime",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "(2022, 2, 1)",
                                                          "children": [
                                                            {
                                                              "value": "2022",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "2",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "1",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"lt\": datetime(2022, 3, 1)",
                                                  "children": [
                                                    {
                                                      "value": "\"lt\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "lt",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "datetime(2022, 3, 1)",
                                                      "children": [
                                                        {
                                                          "value": "datetime",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "(2022, 3, 1)",
                                                          "children": [
                                                            {
                                                              "value": "2022",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "3",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "1",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "data={\"isActive\": False}",
                                  "children": [
                                    {
                                      "value": "data",
                                      "children": []
                                    },
                                    {
                                      "value": "{\"isActive\": False}",
                                      "children": [
                                        {
                                          "value": "\"isActive\": False",
                                          "children": [
                                            {
                                              "value": "\"isActive\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "isActive",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "False",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "user_credit.time_now = lambda: datetime(2022, 2, 15)",
                  "children": [
                    {
                      "value": "user_credit.time_now = lambda: datetime(2022, 2, 15)",
                      "children": [
                        {
                          "value": "user_credit.time_now",
                          "children": [
                            {
                              "value": "user_credit",
                              "children": []
                            },
                            {
                              "value": "time_now",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "lambda: datetime(2022, 2, 15)",
                          "children": [
                            {
                              "value": "datetime(2022, 2, 15)",
                              "children": [
                                {
                                  "value": "datetime",
                                  "children": []
                                },
                                {
                                  "value": "(2022, 2, 15)",
                                  "children": [
                                    {
                                      "value": "2022",
                                      "children": []
                                    },
                                    {
                                      "value": "2",
                                      "children": []
                                    },
                                    {
                                      "value": "15",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "balance = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)",
                  "children": [
                    {
                      "value": "balance = await user_credit.get_or_refill_credit(DEFAULT_USER_ID)",
                      "children": [
                        {
                          "value": "balance",
                          "children": []
                        },
                        {
                          "value": "await user_credit.get_or_refill_credit(DEFAULT_USER_ID)",
                          "children": [
                            {
                              "value": "user_credit.get_or_refill_credit(DEFAULT_USER_ID)",
                              "children": [
                                {
                                  "value": "user_credit.get_or_refill_credit",
                                  "children": [
                                    {
                                      "value": "user_credit",
                                      "children": []
                                    },
                                    {
                                      "value": "get_or_refill_credit",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(DEFAULT_USER_ID)",
                                  "children": [
                                    {
                                      "value": "DEFAULT_USER_ID",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "assert balance == REFILL_VALUE",
                  "children": [
                    {
                      "value": "balance == REFILL_VALUE",
                      "children": [
                        {
                          "value": "balance",
                          "children": []
                        },
                        {
                          "value": "REFILL_VALUE",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}