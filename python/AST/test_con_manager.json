{
  "value": "from datetime import datetime, timezone\nfrom unittest.mock import AsyncMock\n\nimport pytest\nfrom fastapi import WebSocket\n\nfrom backend.data.execution import ExecutionResult, ExecutionStatus\nfrom backend.server.conn_manager import ConnectionManager\nfrom backend.server.model import Methods, WsMessage\n\n\n@pytest.fixture\ndef connection_manager() -> ConnectionManager:\n    return ConnectionManager()\n\n\n@pytest.fixture\ndef mock_websocket() -> AsyncMock:\n    websocket: AsyncMock = AsyncMock(spec=WebSocket)\n    websocket.send_text = AsyncMock()\n    return websocket\n\n\n@pytest.mark.asyncio\nasync def test_connect(\n    connection_manager: ConnectionManager, mock_websocket: AsyncMock\n) -> None:\n    await connection_manager.connect(mock_websocket)\n    assert mock_websocket in connection_manager.active_connections\n    mock_websocket.accept.assert_called_once()\n\n\ndef test_disconnect(\n    connection_manager: ConnectionManager, mock_websocket: AsyncMock\n) -> None:\n    connection_manager.active_connections.add(mock_websocket)\n    connection_manager.subscriptions[\"test_graph\"] = {mock_websocket}\n\n    connection_manager.disconnect(mock_websocket)\n\n    assert mock_websocket not in connection_manager.active_connections\n    assert mock_websocket not in connection_manager.subscriptions[\"test_graph\"]\n\n\n@pytest.mark.asyncio\nasync def test_subscribe(\n    connection_manager: ConnectionManager, mock_websocket: AsyncMock\n) -> None:\n    await connection_manager.subscribe(\"test_graph\", mock_websocket)\n    assert mock_websocket in connection_manager.subscriptions[\"test_graph\"]\n\n\n@pytest.mark.asyncio\nasync def test_unsubscribe(\n    connection_manager: ConnectionManager, mock_websocket: AsyncMock\n) -> None:\n    connection_manager.subscriptions[\"test_graph\"] = {mock_websocket}\n\n    await connection_manager.unsubscribe(\"test_graph\", mock_websocket)\n\n    assert \"test_graph\" not in connection_manager.subscriptions\n\n\n@pytest.mark.asyncio\nasync def test_send_execution_result(\n    connection_manager: ConnectionManager, mock_websocket: AsyncMock\n) -> None:\n    connection_manager.subscriptions[\"test_graph\"] = {mock_websocket}\n    result: ExecutionResult = ExecutionResult(\n        graph_id=\"test_graph\",\n        graph_version=1,\n        graph_exec_id=\"test_exec_id\",\n        node_exec_id=\"test_node_exec_id\",\n        node_id=\"test_node_id\",\n        block_id=\"test_block_id\",\n        status=ExecutionStatus.COMPLETED,\n        input_data={\"input1\": \"value1\"},\n        output_data={\"output1\": [\"result1\"]},\n        add_time=datetime.now(tz=timezone.utc),\n        queue_time=None,\n        start_time=datetime.now(tz=timezone.utc),\n        end_time=datetime.now(tz=timezone.utc),\n    )\n\n    await connection_manager.send_execution_result(result)\n\n    mock_websocket.send_text.assert_called_once_with(\n        WsMessage(\n            method=Methods.EXECUTION_EVENT,\n            channel=\"test_graph\",\n            data=result.model_dump(),\n        ).model_dump_json()\n    )\n\n\n@pytest.mark.asyncio\nasync def test_send_execution_result_no_subscribers(\n    connection_manager: ConnectionManager, mock_websocket: AsyncMock\n) -> None:\n    result: ExecutionResult = ExecutionResult(\n        graph_id=\"test_graph\",\n        graph_version=1,\n        graph_exec_id=\"test_exec_id\",\n        node_exec_id=\"test_node_exec_id\",\n        node_id=\"test_node_id\",\n        block_id=\"test_block_id\",\n        status=ExecutionStatus.COMPLETED,\n        input_data={\"input1\": \"value1\"},\n        output_data={\"output1\": [\"result1\"]},\n        add_time=datetime.now(),\n        queue_time=None,\n        start_time=datetime.now(),\n        end_time=datetime.now(),\n    )\n\n    await connection_manager.send_execution_result(result)\n\n    mock_websocket.send_text.assert_not_called()",
  "children": [
    {
      "value": "from datetime import datetime, timezone",
      "children": [
        {
          "value": "datetime",
          "children": [
            {
              "value": "datetime",
              "children": []
            }
          ]
        },
        {
          "value": "datetime",
          "children": [
            {
              "value": "datetime",
              "children": []
            }
          ]
        },
        {
          "value": "timezone",
          "children": [
            {
              "value": "timezone",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from unittest.mock import AsyncMock",
      "children": [
        {
          "value": "unittest.mock",
          "children": [
            {
              "value": "unittest",
              "children": []
            },
            {
              "value": "mock",
              "children": []
            }
          ]
        },
        {
          "value": "AsyncMock",
          "children": [
            {
              "value": "AsyncMock",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "import pytest",
      "children": [
        {
          "value": "pytest",
          "children": [
            {
              "value": "pytest",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from fastapi import WebSocket",
      "children": [
        {
          "value": "fastapi",
          "children": [
            {
              "value": "fastapi",
              "children": []
            }
          ]
        },
        {
          "value": "WebSocket",
          "children": [
            {
              "value": "WebSocket",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.data.execution import ExecutionResult, ExecutionStatus",
      "children": [
        {
          "value": "backend.data.execution",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "data",
              "children": []
            },
            {
              "value": "execution",
              "children": []
            }
          ]
        },
        {
          "value": "ExecutionResult",
          "children": [
            {
              "value": "ExecutionResult",
              "children": []
            }
          ]
        },
        {
          "value": "ExecutionStatus",
          "children": [
            {
              "value": "ExecutionStatus",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.server.conn_manager import ConnectionManager",
      "children": [
        {
          "value": "backend.server.conn_manager",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "server",
              "children": []
            },
            {
              "value": "conn_manager",
              "children": []
            }
          ]
        },
        {
          "value": "ConnectionManager",
          "children": [
            {
              "value": "ConnectionManager",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.server.model import Methods, WsMessage",
      "children": [
        {
          "value": "backend.server.model",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "server",
              "children": []
            },
            {
              "value": "model",
              "children": []
            }
          ]
        },
        {
          "value": "Methods",
          "children": [
            {
              "value": "Methods",
              "children": []
            }
          ]
        },
        {
          "value": "WsMessage",
          "children": [
            {
              "value": "WsMessage",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "@pytest.fixture\ndef connection_manager() -> ConnectionManager:\n    return ConnectionManager()",
      "children": [
        {
          "value": "@pytest.fixture",
          "children": [
            {
              "value": "pytest.fixture",
              "children": [
                {
                  "value": "pytest",
                  "children": []
                },
                {
                  "value": "fixture",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "def connection_manager() -> ConnectionManager:\n    return ConnectionManager()",
          "children": [
            {
              "value": "connection_manager",
              "children": []
            },
            {
              "value": "()",
              "children": []
            },
            {
              "value": "ConnectionManager",
              "children": [
                {
                  "value": "ConnectionManager",
                  "children": []
                }
              ]
            },
            {
              "value": "return ConnectionManager()",
              "children": [
                {
                  "value": "return ConnectionManager()",
                  "children": [
                    {
                      "value": "ConnectionManager()",
                      "children": [
                        {
                          "value": "ConnectionManager",
                          "children": []
                        },
                        {
                          "value": "()",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "@pytest.fixture\ndef mock_websocket() -> AsyncMock:\n    websocket: AsyncMock = AsyncMock(spec=WebSocket)\n    websocket.send_text = AsyncMock()\n    return websocket",
      "children": [
        {
          "value": "@pytest.fixture",
          "children": [
            {
              "value": "pytest.fixture",
              "children": [
                {
                  "value": "pytest",
                  "children": []
                },
                {
                  "value": "fixture",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "def mock_websocket() -> AsyncMock:\n    websocket: AsyncMock = AsyncMock(spec=WebSocket)\n    websocket.send_text = AsyncMock()\n    return websocket",
          "children": [
            {
              "value": "mock_websocket",
              "children": []
            },
            {
              "value": "()",
              "children": []
            },
            {
              "value": "AsyncMock",
              "children": [
                {
                  "value": "AsyncMock",
                  "children": []
                }
              ]
            },
            {
              "value": "websocket: AsyncMock = AsyncMock(spec=WebSocket)\n    websocket.send_text = AsyncMock()\n    return websocket",
              "children": [
                {
                  "value": "websocket: AsyncMock = AsyncMock(spec=WebSocket)",
                  "children": [
                    {
                      "value": "websocket: AsyncMock = AsyncMock(spec=WebSocket)",
                      "children": [
                        {
                          "value": "websocket",
                          "children": []
                        },
                        {
                          "value": "AsyncMock",
                          "children": [
                            {
                              "value": "AsyncMock",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "AsyncMock(spec=WebSocket)",
                          "children": [
                            {
                              "value": "AsyncMock",
                              "children": []
                            },
                            {
                              "value": "(spec=WebSocket)",
                              "children": [
                                {
                                  "value": "spec=WebSocket",
                                  "children": [
                                    {
                                      "value": "spec",
                                      "children": []
                                    },
                                    {
                                      "value": "WebSocket",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "websocket.send_text = AsyncMock()",
                  "children": [
                    {
                      "value": "websocket.send_text = AsyncMock()",
                      "children": [
                        {
                          "value": "websocket.send_text",
                          "children": [
                            {
                              "value": "websocket",
                              "children": []
                            },
                            {
                              "value": "send_text",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "AsyncMock()",
                          "children": [
                            {
                              "value": "AsyncMock",
                              "children": []
                            },
                            {
                              "value": "()",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "return websocket",
                  "children": [
                    {
                      "value": "websocket",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "@pytest.mark.asyncio\nasync def test_connect(\n    connection_manager: ConnectionManager, mock_websocket: AsyncMock\n) -> None:\n    await connection_manager.connect(mock_websocket)\n    assert mock_websocket in connection_manager.active_connections\n    mock_websocket.accept.assert_called_once()",
      "children": [
        {
          "value": "@pytest.mark.asyncio",
          "children": [
            {
              "value": "pytest.mark.asyncio",
              "children": [
                {
                  "value": "pytest.mark",
                  "children": [
                    {
                      "value": "pytest",
                      "children": []
                    },
                    {
                      "value": "mark",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "asyncio",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "async def test_connect(\n    connection_manager: ConnectionManager, mock_websocket: AsyncMock\n) -> None:\n    await connection_manager.connect(mock_websocket)\n    assert mock_websocket in connection_manager.active_connections\n    mock_websocket.accept.assert_called_once()",
          "children": [
            {
              "value": "test_connect",
              "children": []
            },
            {
              "value": "(\n    connection_manager: ConnectionManager, mock_websocket: AsyncMock\n)",
              "children": [
                {
                  "value": "connection_manager: ConnectionManager",
                  "children": [
                    {
                      "value": "connection_manager",
                      "children": []
                    },
                    {
                      "value": "ConnectionManager",
                      "children": [
                        {
                          "value": "ConnectionManager",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "mock_websocket: AsyncMock",
                  "children": [
                    {
                      "value": "mock_websocket",
                      "children": []
                    },
                    {
                      "value": "AsyncMock",
                      "children": [
                        {
                          "value": "AsyncMock",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "None",
              "children": [
                {
                  "value": "None",
                  "children": []
                }
              ]
            },
            {
              "value": "await connection_manager.connect(mock_websocket)\n    assert mock_websocket in connection_manager.active_connections\n    mock_websocket.accept.assert_called_once()",
              "children": [
                {
                  "value": "await connection_manager.connect(mock_websocket)",
                  "children": [
                    {
                      "value": "await connection_manager.connect(mock_websocket)",
                      "children": [
                        {
                          "value": "connection_manager.connect(mock_websocket)",
                          "children": [
                            {
                              "value": "connection_manager.connect",
                              "children": [
                                {
                                  "value": "connection_manager",
                                  "children": []
                                },
                                {
                                  "value": "connect",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(mock_websocket)",
                              "children": [
                                {
                                  "value": "mock_websocket",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "assert mock_websocket in connection_manager.active_connections",
                  "children": [
                    {
                      "value": "mock_websocket in connection_manager.active_connections",
                      "children": [
                        {
                          "value": "mock_websocket",
                          "children": []
                        },
                        {
                          "value": "connection_manager.active_connections",
                          "children": [
                            {
                              "value": "connection_manager",
                              "children": []
                            },
                            {
                              "value": "active_connections",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "mock_websocket.accept.assert_called_once()",
                  "children": [
                    {
                      "value": "mock_websocket.accept.assert_called_once()",
                      "children": [
                        {
                          "value": "mock_websocket.accept.assert_called_once",
                          "children": [
                            {
                              "value": "mock_websocket.accept",
                              "children": [
                                {
                                  "value": "mock_websocket",
                                  "children": []
                                },
                                {
                                  "value": "accept",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "assert_called_once",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "()",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "def test_disconnect(\n    connection_manager: ConnectionManager, mock_websocket: AsyncMock\n) -> None:\n    connection_manager.active_connections.add(mock_websocket)\n    connection_manager.subscriptions[\"test_graph\"] = {mock_websocket}\n\n    connection_manager.disconnect(mock_websocket)\n\n    assert mock_websocket not in connection_manager.active_connections\n    assert mock_websocket not in connection_manager.subscriptions[\"test_graph\"]",
      "children": [
        {
          "value": "test_disconnect",
          "children": []
        },
        {
          "value": "(\n    connection_manager: ConnectionManager, mock_websocket: AsyncMock\n)",
          "children": [
            {
              "value": "connection_manager: ConnectionManager",
              "children": [
                {
                  "value": "connection_manager",
                  "children": []
                },
                {
                  "value": "ConnectionManager",
                  "children": [
                    {
                      "value": "ConnectionManager",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "mock_websocket: AsyncMock",
              "children": [
                {
                  "value": "mock_websocket",
                  "children": []
                },
                {
                  "value": "AsyncMock",
                  "children": [
                    {
                      "value": "AsyncMock",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "None",
          "children": [
            {
              "value": "None",
              "children": []
            }
          ]
        },
        {
          "value": "connection_manager.active_connections.add(mock_websocket)\n    connection_manager.subscriptions[\"test_graph\"] = {mock_websocket}\n\n    connection_manager.disconnect(mock_websocket)\n\n    assert mock_websocket not in connection_manager.active_connections\n    assert mock_websocket not in connection_manager.subscriptions[\"test_graph\"]",
          "children": [
            {
              "value": "connection_manager.active_connections.add(mock_websocket)",
              "children": [
                {
                  "value": "connection_manager.active_connections.add(mock_websocket)",
                  "children": [
                    {
                      "value": "connection_manager.active_connections.add",
                      "children": [
                        {
                          "value": "connection_manager.active_connections",
                          "children": [
                            {
                              "value": "connection_manager",
                              "children": []
                            },
                            {
                              "value": "active_connections",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "add",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "(mock_websocket)",
                      "children": [
                        {
                          "value": "mock_websocket",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "connection_manager.subscriptions[\"test_graph\"] = {mock_websocket}",
              "children": [
                {
                  "value": "connection_manager.subscriptions[\"test_graph\"] = {mock_websocket}",
                  "children": [
                    {
                      "value": "connection_manager.subscriptions[\"test_graph\"]",
                      "children": [
                        {
                          "value": "connection_manager.subscriptions",
                          "children": [
                            {
                              "value": "connection_manager",
                              "children": []
                            },
                            {
                              "value": "subscriptions",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "\"test_graph\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "test_graph",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "{mock_websocket}",
                      "children": [
                        {
                          "value": "mock_websocket",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "connection_manager.disconnect(mock_websocket)",
              "children": [
                {
                  "value": "connection_manager.disconnect(mock_websocket)",
                  "children": [
                    {
                      "value": "connection_manager.disconnect",
                      "children": [
                        {
                          "value": "connection_manager",
                          "children": []
                        },
                        {
                          "value": "disconnect",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "(mock_websocket)",
                      "children": [
                        {
                          "value": "mock_websocket",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "assert mock_websocket not in connection_manager.active_connections",
              "children": [
                {
                  "value": "mock_websocket not in connection_manager.active_connections",
                  "children": [
                    {
                      "value": "mock_websocket",
                      "children": []
                    },
                    {
                      "value": "connection_manager.active_connections",
                      "children": [
                        {
                          "value": "connection_manager",
                          "children": []
                        },
                        {
                          "value": "active_connections",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "assert mock_websocket not in connection_manager.subscriptions[\"test_graph\"]",
              "children": [
                {
                  "value": "mock_websocket not in connection_manager.subscriptions[\"test_graph\"]",
                  "children": [
                    {
                      "value": "mock_websocket",
                      "children": []
                    },
                    {
                      "value": "connection_manager.subscriptions[\"test_graph\"]",
                      "children": [
                        {
                          "value": "connection_manager.subscriptions",
                          "children": [
                            {
                              "value": "connection_manager",
                              "children": []
                            },
                            {
                              "value": "subscriptions",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "\"test_graph\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "test_graph",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "@pytest.mark.asyncio\nasync def test_subscribe(\n    connection_manager: ConnectionManager, mock_websocket: AsyncMock\n) -> None:\n    await connection_manager.subscribe(\"test_graph\", mock_websocket)\n    assert mock_websocket in connection_manager.subscriptions[\"test_graph\"]",
      "children": [
        {
          "value": "@pytest.mark.asyncio",
          "children": [
            {
              "value": "pytest.mark.asyncio",
              "children": [
                {
                  "value": "pytest.mark",
                  "children": [
                    {
                      "value": "pytest",
                      "children": []
                    },
                    {
                      "value": "mark",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "asyncio",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "async def test_subscribe(\n    connection_manager: ConnectionManager, mock_websocket: AsyncMock\n) -> None:\n    await connection_manager.subscribe(\"test_graph\", mock_websocket)\n    assert mock_websocket in connection_manager.subscriptions[\"test_graph\"]",
          "children": [
            {
              "value": "test_subscribe",
              "children": []
            },
            {
              "value": "(\n    connection_manager: ConnectionManager, mock_websocket: AsyncMock\n)",
              "children": [
                {
                  "value": "connection_manager: ConnectionManager",
                  "children": [
                    {
                      "value": "connection_manager",
                      "children": []
                    },
                    {
                      "value": "ConnectionManager",
                      "children": [
                        {
                          "value": "ConnectionManager",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "mock_websocket: AsyncMock",
                  "children": [
                    {
                      "value": "mock_websocket",
                      "children": []
                    },
                    {
                      "value": "AsyncMock",
                      "children": [
                        {
                          "value": "AsyncMock",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "None",
              "children": [
                {
                  "value": "None",
                  "children": []
                }
              ]
            },
            {
              "value": "await connection_manager.subscribe(\"test_graph\", mock_websocket)\n    assert mock_websocket in connection_manager.subscriptions[\"test_graph\"]",
              "children": [
                {
                  "value": "await connection_manager.subscribe(\"test_graph\", mock_websocket)",
                  "children": [
                    {
                      "value": "await connection_manager.subscribe(\"test_graph\", mock_websocket)",
                      "children": [
                        {
                          "value": "connection_manager.subscribe(\"test_graph\", mock_websocket)",
                          "children": [
                            {
                              "value": "connection_manager.subscribe",
                              "children": [
                                {
                                  "value": "connection_manager",
                                  "children": []
                                },
                                {
                                  "value": "subscribe",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\"test_graph\", mock_websocket)",
                              "children": [
                                {
                                  "value": "\"test_graph\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "test_graph",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "mock_websocket",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "assert mock_websocket in connection_manager.subscriptions[\"test_graph\"]",
                  "children": [
                    {
                      "value": "mock_websocket in connection_manager.subscriptions[\"test_graph\"]",
                      "children": [
                        {
                          "value": "mock_websocket",
                          "children": []
                        },
                        {
                          "value": "connection_manager.subscriptions[\"test_graph\"]",
                          "children": [
                            {
                              "value": "connection_manager.subscriptions",
                              "children": [
                                {
                                  "value": "connection_manager",
                                  "children": []
                                },
                                {
                                  "value": "subscriptions",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "\"test_graph\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "test_graph",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "@pytest.mark.asyncio\nasync def test_unsubscribe(\n    connection_manager: ConnectionManager, mock_websocket: AsyncMock\n) -> None:\n    connection_manager.subscriptions[\"test_graph\"] = {mock_websocket}\n\n    await connection_manager.unsubscribe(\"test_graph\", mock_websocket)\n\n    assert \"test_graph\" not in connection_manager.subscriptions",
      "children": [
        {
          "value": "@pytest.mark.asyncio",
          "children": [
            {
              "value": "pytest.mark.asyncio",
              "children": [
                {
                  "value": "pytest.mark",
                  "children": [
                    {
                      "value": "pytest",
                      "children": []
                    },
                    {
                      "value": "mark",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "asyncio",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "async def test_unsubscribe(\n    connection_manager: ConnectionManager, mock_websocket: AsyncMock\n) -> None:\n    connection_manager.subscriptions[\"test_graph\"] = {mock_websocket}\n\n    await connection_manager.unsubscribe(\"test_graph\", mock_websocket)\n\n    assert \"test_graph\" not in connection_manager.subscriptions",
          "children": [
            {
              "value": "test_unsubscribe",
              "children": []
            },
            {
              "value": "(\n    connection_manager: ConnectionManager, mock_websocket: AsyncMock\n)",
              "children": [
                {
                  "value": "connection_manager: ConnectionManager",
                  "children": [
                    {
                      "value": "connection_manager",
                      "children": []
                    },
                    {
                      "value": "ConnectionManager",
                      "children": [
                        {
                          "value": "ConnectionManager",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "mock_websocket: AsyncMock",
                  "children": [
                    {
                      "value": "mock_websocket",
                      "children": []
                    },
                    {
                      "value": "AsyncMock",
                      "children": [
                        {
                          "value": "AsyncMock",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "None",
              "children": [
                {
                  "value": "None",
                  "children": []
                }
              ]
            },
            {
              "value": "connection_manager.subscriptions[\"test_graph\"] = {mock_websocket}\n\n    await connection_manager.unsubscribe(\"test_graph\", mock_websocket)\n\n    assert \"test_graph\" not in connection_manager.subscriptions",
              "children": [
                {
                  "value": "connection_manager.subscriptions[\"test_graph\"] = {mock_websocket}",
                  "children": [
                    {
                      "value": "connection_manager.subscriptions[\"test_graph\"] = {mock_websocket}",
                      "children": [
                        {
                          "value": "connection_manager.subscriptions[\"test_graph\"]",
                          "children": [
                            {
                              "value": "connection_manager.subscriptions",
                              "children": [
                                {
                                  "value": "connection_manager",
                                  "children": []
                                },
                                {
                                  "value": "subscriptions",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "\"test_graph\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "test_graph",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "{mock_websocket}",
                          "children": [
                            {
                              "value": "mock_websocket",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "await connection_manager.unsubscribe(\"test_graph\", mock_websocket)",
                  "children": [
                    {
                      "value": "await connection_manager.unsubscribe(\"test_graph\", mock_websocket)",
                      "children": [
                        {
                          "value": "connection_manager.unsubscribe(\"test_graph\", mock_websocket)",
                          "children": [
                            {
                              "value": "connection_manager.unsubscribe",
                              "children": [
                                {
                                  "value": "connection_manager",
                                  "children": []
                                },
                                {
                                  "value": "unsubscribe",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\"test_graph\", mock_websocket)",
                              "children": [
                                {
                                  "value": "\"test_graph\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "test_graph",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "mock_websocket",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "assert \"test_graph\" not in connection_manager.subscriptions",
                  "children": [
                    {
                      "value": "\"test_graph\" not in connection_manager.subscriptions",
                      "children": [
                        {
                          "value": "\"test_graph\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "test_graph",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "connection_manager.subscriptions",
                          "children": [
                            {
                              "value": "connection_manager",
                              "children": []
                            },
                            {
                              "value": "subscriptions",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "@pytest.mark.asyncio\nasync def test_send_execution_result(\n    connection_manager: ConnectionManager, mock_websocket: AsyncMock\n) -> None:\n    connection_manager.subscriptions[\"test_graph\"] = {mock_websocket}\n    result: ExecutionResult = ExecutionResult(\n        graph_id=\"test_graph\",\n        graph_version=1,\n        graph_exec_id=\"test_exec_id\",\n        node_exec_id=\"test_node_exec_id\",\n        node_id=\"test_node_id\",\n        block_id=\"test_block_id\",\n        status=ExecutionStatus.COMPLETED,\n        input_data={\"input1\": \"value1\"},\n        output_data={\"output1\": [\"result1\"]},\n        add_time=datetime.now(tz=timezone.utc),\n        queue_time=None,\n        start_time=datetime.now(tz=timezone.utc),\n        end_time=datetime.now(tz=timezone.utc),\n    )\n\n    await connection_manager.send_execution_result(result)\n\n    mock_websocket.send_text.assert_called_once_with(\n        WsMessage(\n            method=Methods.EXECUTION_EVENT,\n            channel=\"test_graph\",\n            data=result.model_dump(),\n        ).model_dump_json()\n    )",
      "children": [
        {
          "value": "@pytest.mark.asyncio",
          "children": [
            {
              "value": "pytest.mark.asyncio",
              "children": [
                {
                  "value": "pytest.mark",
                  "children": [
                    {
                      "value": "pytest",
                      "children": []
                    },
                    {
                      "value": "mark",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "asyncio",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "async def test_send_execution_result(\n    connection_manager: ConnectionManager, mock_websocket: AsyncMock\n) -> None:\n    connection_manager.subscriptions[\"test_graph\"] = {mock_websocket}\n    result: ExecutionResult = ExecutionResult(\n        graph_id=\"test_graph\",\n        graph_version=1,\n        graph_exec_id=\"test_exec_id\",\n        node_exec_id=\"test_node_exec_id\",\n        node_id=\"test_node_id\",\n        block_id=\"test_block_id\",\n        status=ExecutionStatus.COMPLETED,\n        input_data={\"input1\": \"value1\"},\n        output_data={\"output1\": [\"result1\"]},\n        add_time=datetime.now(tz=timezone.utc),\n        queue_time=None,\n        start_time=datetime.now(tz=timezone.utc),\n        end_time=datetime.now(tz=timezone.utc),\n    )\n\n    await connection_manager.send_execution_result(result)\n\n    mock_websocket.send_text.assert_called_once_with(\n        WsMessage(\n            method=Methods.EXECUTION_EVENT,\n            channel=\"test_graph\",\n            data=result.model_dump(),\n        ).model_dump_json()\n    )",
          "children": [
            {
              "value": "test_send_execution_result",
              "children": []
            },
            {
              "value": "(\n    connection_manager: ConnectionManager, mock_websocket: AsyncMock\n)",
              "children": [
                {
                  "value": "connection_manager: ConnectionManager",
                  "children": [
                    {
                      "value": "connection_manager",
                      "children": []
                    },
                    {
                      "value": "ConnectionManager",
                      "children": [
                        {
                          "value": "ConnectionManager",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "mock_websocket: AsyncMock",
                  "children": [
                    {
                      "value": "mock_websocket",
                      "children": []
                    },
                    {
                      "value": "AsyncMock",
                      "children": [
                        {
                          "value": "AsyncMock",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "None",
              "children": [
                {
                  "value": "None",
                  "children": []
                }
              ]
            },
            {
              "value": "connection_manager.subscriptions[\"test_graph\"] = {mock_websocket}\n    result: ExecutionResult = ExecutionResult(\n        graph_id=\"test_graph\",\n        graph_version=1,\n        graph_exec_id=\"test_exec_id\",\n        node_exec_id=\"test_node_exec_id\",\n        node_id=\"test_node_id\",\n        block_id=\"test_block_id\",\n        status=ExecutionStatus.COMPLETED,\n        input_data={\"input1\": \"value1\"},\n        output_data={\"output1\": [\"result1\"]},\n        add_time=datetime.now(tz=timezone.utc),\n        queue_time=None,\n        start_time=datetime.now(tz=timezone.utc),\n        end_time=datetime.now(tz=timezone.utc),\n    )\n\n    await connection_manager.send_execution_result(result)\n\n    mock_websocket.send_text.assert_called_once_with(\n        WsMessage(\n            method=Methods.EXECUTION_EVENT,\n            channel=\"test_graph\",\n            data=result.model_dump(),\n        ).model_dump_json()\n    )",
              "children": [
                {
                  "value": "connection_manager.subscriptions[\"test_graph\"] = {mock_websocket}",
                  "children": [
                    {
                      "value": "connection_manager.subscriptions[\"test_graph\"] = {mock_websocket}",
                      "children": [
                        {
                          "value": "connection_manager.subscriptions[\"test_graph\"]",
                          "children": [
                            {
                              "value": "connection_manager.subscriptions",
                              "children": [
                                {
                                  "value": "connection_manager",
                                  "children": []
                                },
                                {
                                  "value": "subscriptions",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "\"test_graph\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "test_graph",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "{mock_websocket}",
                          "children": [
                            {
                              "value": "mock_websocket",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "result: ExecutionResult = ExecutionResult(\n        graph_id=\"test_graph\",\n        graph_version=1,\n        graph_exec_id=\"test_exec_id\",\n        node_exec_id=\"test_node_exec_id\",\n        node_id=\"test_node_id\",\n        block_id=\"test_block_id\",\n        status=ExecutionStatus.COMPLETED,\n        input_data={\"input1\": \"value1\"},\n        output_data={\"output1\": [\"result1\"]},\n        add_time=datetime.now(tz=timezone.utc),\n        queue_time=None,\n        start_time=datetime.now(tz=timezone.utc),\n        end_time=datetime.now(tz=timezone.utc),\n    )",
                  "children": [
                    {
                      "value": "result: ExecutionResult = ExecutionResult(\n        graph_id=\"test_graph\",\n        graph_version=1,\n        graph_exec_id=\"test_exec_id\",\n        node_exec_id=\"test_node_exec_id\",\n        node_id=\"test_node_id\",\n        block_id=\"test_block_id\",\n        status=ExecutionStatus.COMPLETED,\n        input_data={\"input1\": \"value1\"},\n        output_data={\"output1\": [\"result1\"]},\n        add_time=datetime.now(tz=timezone.utc),\n        queue_time=None,\n        start_time=datetime.now(tz=timezone.utc),\n        end_time=datetime.now(tz=timezone.utc),\n    )",
                      "children": [
                        {
                          "value": "result",
                          "children": []
                        },
                        {
                          "value": "ExecutionResult",
                          "children": [
                            {
                              "value": "ExecutionResult",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "ExecutionResult(\n        graph_id=\"test_graph\",\n        graph_version=1,\n        graph_exec_id=\"test_exec_id\",\n        node_exec_id=\"test_node_exec_id\",\n        node_id=\"test_node_id\",\n        block_id=\"test_block_id\",\n        status=ExecutionStatus.COMPLETED,\n        input_data={\"input1\": \"value1\"},\n        output_data={\"output1\": [\"result1\"]},\n        add_time=datetime.now(tz=timezone.utc),\n        queue_time=None,\n        start_time=datetime.now(tz=timezone.utc),\n        end_time=datetime.now(tz=timezone.utc),\n    )",
                          "children": [
                            {
                              "value": "ExecutionResult",
                              "children": []
                            },
                            {
                              "value": "(\n        graph_id=\"test_graph\",\n        graph_version=1,\n        graph_exec_id=\"test_exec_id\",\n        node_exec_id=\"test_node_exec_id\",\n        node_id=\"test_node_id\",\n        block_id=\"test_block_id\",\n        status=ExecutionStatus.COMPLETED,\n        input_data={\"input1\": \"value1\"},\n        output_data={\"output1\": [\"result1\"]},\n        add_time=datetime.now(tz=timezone.utc),\n        queue_time=None,\n        start_time=datetime.now(tz=timezone.utc),\n        end_time=datetime.now(tz=timezone.utc),\n    )",
                              "children": [
                                {
                                  "value": "graph_id=\"test_graph\"",
                                  "children": [
                                    {
                                      "value": "graph_id",
                                      "children": []
                                    },
                                    {
                                      "value": "\"test_graph\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "test_graph",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "graph_version=1",
                                  "children": [
                                    {
                                      "value": "graph_version",
                                      "children": []
                                    },
                                    {
                                      "value": "1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "graph_exec_id=\"test_exec_id\"",
                                  "children": [
                                    {
                                      "value": "graph_exec_id",
                                      "children": []
                                    },
                                    {
                                      "value": "\"test_exec_id\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "test_exec_id",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "node_exec_id=\"test_node_exec_id\"",
                                  "children": [
                                    {
                                      "value": "node_exec_id",
                                      "children": []
                                    },
                                    {
                                      "value": "\"test_node_exec_id\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "test_node_exec_id",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "node_id=\"test_node_id\"",
                                  "children": [
                                    {
                                      "value": "node_id",
                                      "children": []
                                    },
                                    {
                                      "value": "\"test_node_id\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "test_node_id",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "block_id=\"test_block_id\"",
                                  "children": [
                                    {
                                      "value": "block_id",
                                      "children": []
                                    },
                                    {
                                      "value": "\"test_block_id\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "test_block_id",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "status=ExecutionStatus.COMPLETED",
                                  "children": [
                                    {
                                      "value": "status",
                                      "children": []
                                    },
                                    {
                                      "value": "ExecutionStatus.COMPLETED",
                                      "children": [
                                        {
                                          "value": "ExecutionStatus",
                                          "children": []
                                        },
                                        {
                                          "value": "COMPLETED",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "input_data={\"input1\": \"value1\"}",
                                  "children": [
                                    {
                                      "value": "input_data",
                                      "children": []
                                    },
                                    {
                                      "value": "{\"input1\": \"value1\"}",
                                      "children": [
                                        {
                                          "value": "\"input1\": \"value1\"",
                                          "children": [
                                            {
                                              "value": "\"input1\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "input1",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"value1\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "value1",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "output_data={\"output1\": [\"result1\"]}",
                                  "children": [
                                    {
                                      "value": "output_data",
                                      "children": []
                                    },
                                    {
                                      "value": "{\"output1\": [\"result1\"]}",
                                      "children": [
                                        {
                                          "value": "\"output1\": [\"result1\"]",
                                          "children": [
                                            {
                                              "value": "\"output1\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "output1",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "[\"result1\"]",
                                              "children": [
                                                {
                                                  "value": "\"result1\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "result1",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "add_time=datetime.now(tz=timezone.utc)",
                                  "children": [
                                    {
                                      "value": "add_time",
                                      "children": []
                                    },
                                    {
                                      "value": "datetime.now(tz=timezone.utc)",
                                      "children": [
                                        {
                                          "value": "datetime.now",
                                          "children": [
                                            {
                                              "value": "datetime",
                                              "children": []
                                            },
                                            {
                                              "value": "now",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(tz=timezone.utc)",
                                          "children": [
                                            {
                                              "value": "tz=timezone.utc",
                                              "children": [
                                                {
                                                  "value": "tz",
                                                  "children": []
                                                },
                                                {
                                                  "value": "timezone.utc",
                                                  "children": [
                                                    {
                                                      "value": "timezone",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "utc",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "queue_time=None",
                                  "children": [
                                    {
                                      "value": "queue_time",
                                      "children": []
                                    },
                                    {
                                      "value": "None",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "start_time=datetime.now(tz=timezone.utc)",
                                  "children": [
                                    {
                                      "value": "start_time",
                                      "children": []
                                    },
                                    {
                                      "value": "datetime.now(tz=timezone.utc)",
                                      "children": [
                                        {
                                          "value": "datetime.now",
                                          "children": [
                                            {
                                              "value": "datetime",
                                              "children": []
                                            },
                                            {
                                              "value": "now",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(tz=timezone.utc)",
                                          "children": [
                                            {
                                              "value": "tz=timezone.utc",
                                              "children": [
                                                {
                                                  "value": "tz",
                                                  "children": []
                                                },
                                                {
                                                  "value": "timezone.utc",
                                                  "children": [
                                                    {
                                                      "value": "timezone",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "utc",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "end_time=datetime.now(tz=timezone.utc)",
                                  "children": [
                                    {
                                      "value": "end_time",
                                      "children": []
                                    },
                                    {
                                      "value": "datetime.now(tz=timezone.utc)",
                                      "children": [
                                        {
                                          "value": "datetime.now",
                                          "children": [
                                            {
                                              "value": "datetime",
                                              "children": []
                                            },
                                            {
                                              "value": "now",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(tz=timezone.utc)",
                                          "children": [
                                            {
                                              "value": "tz=timezone.utc",
                                              "children": [
                                                {
                                                  "value": "tz",
                                                  "children": []
                                                },
                                                {
                                                  "value": "timezone.utc",
                                                  "children": [
                                                    {
                                                      "value": "timezone",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "utc",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "await connection_manager.send_execution_result(result)",
                  "children": [
                    {
                      "value": "await connection_manager.send_execution_result(result)",
                      "children": [
                        {
                          "value": "connection_manager.send_execution_result(result)",
                          "children": [
                            {
                              "value": "connection_manager.send_execution_result",
                              "children": [
                                {
                                  "value": "connection_manager",
                                  "children": []
                                },
                                {
                                  "value": "send_execution_result",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(result)",
                              "children": [
                                {
                                  "value": "result",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "mock_websocket.send_text.assert_called_once_with(\n        WsMessage(\n            method=Methods.EXECUTION_EVENT,\n            channel=\"test_graph\",\n            data=result.model_dump(),\n        ).model_dump_json()\n    )",
                  "children": [
                    {
                      "value": "mock_websocket.send_text.assert_called_once_with(\n        WsMessage(\n            method=Methods.EXECUTION_EVENT,\n            channel=\"test_graph\",\n            data=result.model_dump(),\n        ).model_dump_json()\n    )",
                      "children": [
                        {
                          "value": "mock_websocket.send_text.assert_called_once_with",
                          "children": [
                            {
                              "value": "mock_websocket.send_text",
                              "children": [
                                {
                                  "value": "mock_websocket",
                                  "children": []
                                },
                                {
                                  "value": "send_text",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "assert_called_once_with",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(\n        WsMessage(\n            method=Methods.EXECUTION_EVENT,\n            channel=\"test_graph\",\n            data=result.model_dump(),\n        ).model_dump_json()\n    )",
                          "children": [
                            {
                              "value": "WsMessage(\n            method=Methods.EXECUTION_EVENT,\n            channel=\"test_graph\",\n            data=result.model_dump(),\n        ).model_dump_json()",
                              "children": [
                                {
                                  "value": "WsMessage(\n            method=Methods.EXECUTION_EVENT,\n            channel=\"test_graph\",\n            data=result.model_dump(),\n        ).model_dump_json",
                                  "children": [
                                    {
                                      "value": "WsMessage(\n            method=Methods.EXECUTION_EVENT,\n            channel=\"test_graph\",\n            data=result.model_dump(),\n        )",
                                      "children": [
                                        {
                                          "value": "WsMessage",
                                          "children": []
                                        },
                                        {
                                          "value": "(\n            method=Methods.EXECUTION_EVENT,\n            channel=\"test_graph\",\n            data=result.model_dump(),\n        )",
                                          "children": [
                                            {
                                              "value": "method=Methods.EXECUTION_EVENT",
                                              "children": [
                                                {
                                                  "value": "method",
                                                  "children": []
                                                },
                                                {
                                                  "value": "Methods.EXECUTION_EVENT",
                                                  "children": [
                                                    {
                                                      "value": "Methods",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "EXECUTION_EVENT",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "channel=\"test_graph\"",
                                              "children": [
                                                {
                                                  "value": "channel",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"test_graph\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "test_graph",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "data=result.model_dump()",
                                              "children": [
                                                {
                                                  "value": "data",
                                                  "children": []
                                                },
                                                {
                                                  "value": "result.model_dump()",
                                                  "children": [
                                                    {
                                                      "value": "result.model_dump",
                                                      "children": [
                                                        {
                                                          "value": "result",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "model_dump",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "()",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "model_dump_json",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "()",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "@pytest.mark.asyncio\nasync def test_send_execution_result_no_subscribers(\n    connection_manager: ConnectionManager, mock_websocket: AsyncMock\n) -> None:\n    result: ExecutionResult = ExecutionResult(\n        graph_id=\"test_graph\",\n        graph_version=1,\n        graph_exec_id=\"test_exec_id\",\n        node_exec_id=\"test_node_exec_id\",\n        node_id=\"test_node_id\",\n        block_id=\"test_block_id\",\n        status=ExecutionStatus.COMPLETED,\n        input_data={\"input1\": \"value1\"},\n        output_data={\"output1\": [\"result1\"]},\n        add_time=datetime.now(),\n        queue_time=None,\n        start_time=datetime.now(),\n        end_time=datetime.now(),\n    )\n\n    await connection_manager.send_execution_result(result)\n\n    mock_websocket.send_text.assert_not_called()",
      "children": [
        {
          "value": "@pytest.mark.asyncio",
          "children": [
            {
              "value": "pytest.mark.asyncio",
              "children": [
                {
                  "value": "pytest.mark",
                  "children": [
                    {
                      "value": "pytest",
                      "children": []
                    },
                    {
                      "value": "mark",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "asyncio",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "async def test_send_execution_result_no_subscribers(\n    connection_manager: ConnectionManager, mock_websocket: AsyncMock\n) -> None:\n    result: ExecutionResult = ExecutionResult(\n        graph_id=\"test_graph\",\n        graph_version=1,\n        graph_exec_id=\"test_exec_id\",\n        node_exec_id=\"test_node_exec_id\",\n        node_id=\"test_node_id\",\n        block_id=\"test_block_id\",\n        status=ExecutionStatus.COMPLETED,\n        input_data={\"input1\": \"value1\"},\n        output_data={\"output1\": [\"result1\"]},\n        add_time=datetime.now(),\n        queue_time=None,\n        start_time=datetime.now(),\n        end_time=datetime.now(),\n    )\n\n    await connection_manager.send_execution_result(result)\n\n    mock_websocket.send_text.assert_not_called()",
          "children": [
            {
              "value": "test_send_execution_result_no_subscribers",
              "children": []
            },
            {
              "value": "(\n    connection_manager: ConnectionManager, mock_websocket: AsyncMock\n)",
              "children": [
                {
                  "value": "connection_manager: ConnectionManager",
                  "children": [
                    {
                      "value": "connection_manager",
                      "children": []
                    },
                    {
                      "value": "ConnectionManager",
                      "children": [
                        {
                          "value": "ConnectionManager",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "mock_websocket: AsyncMock",
                  "children": [
                    {
                      "value": "mock_websocket",
                      "children": []
                    },
                    {
                      "value": "AsyncMock",
                      "children": [
                        {
                          "value": "AsyncMock",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "None",
              "children": [
                {
                  "value": "None",
                  "children": []
                }
              ]
            },
            {
              "value": "result: ExecutionResult = ExecutionResult(\n        graph_id=\"test_graph\",\n        graph_version=1,\n        graph_exec_id=\"test_exec_id\",\n        node_exec_id=\"test_node_exec_id\",\n        node_id=\"test_node_id\",\n        block_id=\"test_block_id\",\n        status=ExecutionStatus.COMPLETED,\n        input_data={\"input1\": \"value1\"},\n        output_data={\"output1\": [\"result1\"]},\n        add_time=datetime.now(),\n        queue_time=None,\n        start_time=datetime.now(),\n        end_time=datetime.now(),\n    )\n\n    await connection_manager.send_execution_result(result)\n\n    mock_websocket.send_text.assert_not_called()",
              "children": [
                {
                  "value": "result: ExecutionResult = ExecutionResult(\n        graph_id=\"test_graph\",\n        graph_version=1,\n        graph_exec_id=\"test_exec_id\",\n        node_exec_id=\"test_node_exec_id\",\n        node_id=\"test_node_id\",\n        block_id=\"test_block_id\",\n        status=ExecutionStatus.COMPLETED,\n        input_data={\"input1\": \"value1\"},\n        output_data={\"output1\": [\"result1\"]},\n        add_time=datetime.now(),\n        queue_time=None,\n        start_time=datetime.now(),\n        end_time=datetime.now(),\n    )",
                  "children": [
                    {
                      "value": "result: ExecutionResult = ExecutionResult(\n        graph_id=\"test_graph\",\n        graph_version=1,\n        graph_exec_id=\"test_exec_id\",\n        node_exec_id=\"test_node_exec_id\",\n        node_id=\"test_node_id\",\n        block_id=\"test_block_id\",\n        status=ExecutionStatus.COMPLETED,\n        input_data={\"input1\": \"value1\"},\n        output_data={\"output1\": [\"result1\"]},\n        add_time=datetime.now(),\n        queue_time=None,\n        start_time=datetime.now(),\n        end_time=datetime.now(),\n    )",
                      "children": [
                        {
                          "value": "result",
                          "children": []
                        },
                        {
                          "value": "ExecutionResult",
                          "children": [
                            {
                              "value": "ExecutionResult",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "ExecutionResult(\n        graph_id=\"test_graph\",\n        graph_version=1,\n        graph_exec_id=\"test_exec_id\",\n        node_exec_id=\"test_node_exec_id\",\n        node_id=\"test_node_id\",\n        block_id=\"test_block_id\",\n        status=ExecutionStatus.COMPLETED,\n        input_data={\"input1\": \"value1\"},\n        output_data={\"output1\": [\"result1\"]},\n        add_time=datetime.now(),\n        queue_time=None,\n        start_time=datetime.now(),\n        end_time=datetime.now(),\n    )",
                          "children": [
                            {
                              "value": "ExecutionResult",
                              "children": []
                            },
                            {
                              "value": "(\n        graph_id=\"test_graph\",\n        graph_version=1,\n        graph_exec_id=\"test_exec_id\",\n        node_exec_id=\"test_node_exec_id\",\n        node_id=\"test_node_id\",\n        block_id=\"test_block_id\",\n        status=ExecutionStatus.COMPLETED,\n        input_data={\"input1\": \"value1\"},\n        output_data={\"output1\": [\"result1\"]},\n        add_time=datetime.now(),\n        queue_time=None,\n        start_time=datetime.now(),\n        end_time=datetime.now(),\n    )",
                              "children": [
                                {
                                  "value": "graph_id=\"test_graph\"",
                                  "children": [
                                    {
                                      "value": "graph_id",
                                      "children": []
                                    },
                                    {
                                      "value": "\"test_graph\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "test_graph",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "graph_version=1",
                                  "children": [
                                    {
                                      "value": "graph_version",
                                      "children": []
                                    },
                                    {
                                      "value": "1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "graph_exec_id=\"test_exec_id\"",
                                  "children": [
                                    {
                                      "value": "graph_exec_id",
                                      "children": []
                                    },
                                    {
                                      "value": "\"test_exec_id\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "test_exec_id",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "node_exec_id=\"test_node_exec_id\"",
                                  "children": [
                                    {
                                      "value": "node_exec_id",
                                      "children": []
                                    },
                                    {
                                      "value": "\"test_node_exec_id\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "test_node_exec_id",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "node_id=\"test_node_id\"",
                                  "children": [
                                    {
                                      "value": "node_id",
                                      "children": []
                                    },
                                    {
                                      "value": "\"test_node_id\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "test_node_id",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "block_id=\"test_block_id\"",
                                  "children": [
                                    {
                                      "value": "block_id",
                                      "children": []
                                    },
                                    {
                                      "value": "\"test_block_id\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "test_block_id",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "status=ExecutionStatus.COMPLETED",
                                  "children": [
                                    {
                                      "value": "status",
                                      "children": []
                                    },
                                    {
                                      "value": "ExecutionStatus.COMPLETED",
                                      "children": [
                                        {
                                          "value": "ExecutionStatus",
                                          "children": []
                                        },
                                        {
                                          "value": "COMPLETED",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "input_data={\"input1\": \"value1\"}",
                                  "children": [
                                    {
                                      "value": "input_data",
                                      "children": []
                                    },
                                    {
                                      "value": "{\"input1\": \"value1\"}",
                                      "children": [
                                        {
                                          "value": "\"input1\": \"value1\"",
                                          "children": [
                                            {
                                              "value": "\"input1\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "input1",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"value1\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "value1",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "output_data={\"output1\": [\"result1\"]}",
                                  "children": [
                                    {
                                      "value": "output_data",
                                      "children": []
                                    },
                                    {
                                      "value": "{\"output1\": [\"result1\"]}",
                                      "children": [
                                        {
                                          "value": "\"output1\": [\"result1\"]",
                                          "children": [
                                            {
                                              "value": "\"output1\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "output1",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "[\"result1\"]",
                                              "children": [
                                                {
                                                  "value": "\"result1\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "result1",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "add_time=datetime.now()",
                                  "children": [
                                    {
                                      "value": "add_time",
                                      "children": []
                                    },
                                    {
                                      "value": "datetime.now()",
                                      "children": [
                                        {
                                          "value": "datetime.now",
                                          "children": [
                                            {
                                              "value": "datetime",
                                              "children": []
                                            },
                                            {
                                              "value": "now",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "()",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "queue_time=None",
                                  "children": [
                                    {
                                      "value": "queue_time",
                                      "children": []
                                    },
                                    {
                                      "value": "None",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "start_time=datetime.now()",
                                  "children": [
                                    {
                                      "value": "start_time",
                                      "children": []
                                    },
                                    {
                                      "value": "datetime.now()",
                                      "children": [
                                        {
                                          "value": "datetime.now",
                                          "children": [
                                            {
                                              "value": "datetime",
                                              "children": []
                                            },
                                            {
                                              "value": "now",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "()",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "end_time=datetime.now()",
                                  "children": [
                                    {
                                      "value": "end_time",
                                      "children": []
                                    },
                                    {
                                      "value": "datetime.now()",
                                      "children": [
                                        {
                                          "value": "datetime.now",
                                          "children": [
                                            {
                                              "value": "datetime",
                                              "children": []
                                            },
                                            {
                                              "value": "now",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "()",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "await connection_manager.send_execution_result(result)",
                  "children": [
                    {
                      "value": "await connection_manager.send_execution_result(result)",
                      "children": [
                        {
                          "value": "connection_manager.send_execution_result(result)",
                          "children": [
                            {
                              "value": "connection_manager.send_execution_result",
                              "children": [
                                {
                                  "value": "connection_manager",
                                  "children": []
                                },
                                {
                                  "value": "send_execution_result",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(result)",
                              "children": [
                                {
                                  "value": "result",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "mock_websocket.send_text.assert_not_called()",
                  "children": [
                    {
                      "value": "mock_websocket.send_text.assert_not_called()",
                      "children": [
                        {
                          "value": "mock_websocket.send_text.assert_not_called",
                          "children": [
                            {
                              "value": "mock_websocket.send_text",
                              "children": [
                                {
                                  "value": "mock_websocket",
                                  "children": []
                                },
                                {
                                  "value": "send_text",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "assert_not_called",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "()",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}