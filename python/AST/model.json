{
  "value": "import datetime\nimport typing\nfrom enum import Enum\nfrom typing import Generic, Literal, TypeVar, Union\n\nimport prisma.enums\nimport pydantic\n\n\nclass InstallationLocation(str, Enum):\n    LOCAL = \"local\"\n    CLOUD = \"cloud\"\n\n\nclass AgentInstalledFromMarketplaceEventData(pydantic.BaseModel):\n    marketplace_agent_id: str\n    installed_agent_id: str\n    installation_location: InstallationLocation\n\n\nclass AgentInstalledFromTemplateEventData(pydantic.BaseModel):\n    template_id: str\n    installed_agent_id: str\n    installation_location: InstallationLocation\n\n\nclass AgentInstalledFromMarketplaceEvent(pydantic.BaseModel):\n    event_name: Literal[\"agent_installed_from_marketplace\"]\n    event_data: AgentInstalledFromMarketplaceEventData\n\n\nclass AgentInstalledFromTemplateEvent(pydantic.BaseModel):\n    event_name: Literal[\"agent_installed_from_template\"]\n    event_data: AgentInstalledFromTemplateEventData\n\n\nAnalyticsEvent = Union[\n    AgentInstalledFromMarketplaceEvent, AgentInstalledFromTemplateEvent\n]\n\n\nclass AnalyticsRequest(pydantic.BaseModel):\n    event: AnalyticsEvent\n\n\nclass AddAgentRequest(pydantic.BaseModel):\n    graph: dict[str, typing.Any]\n    author: str\n    keywords: list[str]\n    categories: list[str]\n\n\nclass SubmissionReviewRequest(pydantic.BaseModel):\n    agent_id: str\n    version: int\n    status: prisma.enums.SubmissionStatus\n    comments: str | None\n\n\nclass AgentResponse(pydantic.BaseModel):\n    \"\"\"\n    Represents a response from an agent.\n\n    Attributes:\n        id (str): The ID of the agent.\n        name (str, optional): The name of the agent.\n        description (str, optional): The description of the agent.\n        author (str, optional): The author of the agent.\n        keywords (list[str]): The keywords associated with the agent.\n        categories (list[str]): The categories the agent belongs to.\n        version (int): The version of the agent.\n        createdAt (str): The creation date of the agent.\n        updatedAt (str): The last update date of the agent.\n    \"\"\"\n\n    id: str\n    name: typing.Optional[str]\n    description: typing.Optional[str]\n    author: typing.Optional[str]\n    keywords: list[str]\n    categories: list[str]\n    version: int\n    createdAt: datetime.datetime\n    updatedAt: datetime.datetime\n    submissionStatus: str\n    views: int = 0\n    downloads: int = 0\n\n\nclass AgentDetailResponse(pydantic.BaseModel):\n    \"\"\"\n    Represents the response data for an agent detail.\n\n    Attributes:\n        id (str): The ID of the agent.\n        name (Optional[str]): The name of the agent.\n        description (Optional[str]): The description of the agent.\n        author (Optional[str]): The author of the agent.\n        keywords (List[str]): The keywords associated with the agent.\n        categories (List[str]): The categories the agent belongs to.\n        version (int): The version of the agent.\n        createdAt (str): The creation date of the agent.\n        updatedAt (str): The last update date of the agent.\n        graph (Dict[str, Any]): The graph data of the agent.\n    \"\"\"\n\n    id: str\n    name: typing.Optional[str]\n    description: typing.Optional[str]\n    author: typing.Optional[str]\n    keywords: list[str]\n    categories: list[str]\n    version: int\n    createdAt: datetime.datetime\n    updatedAt: datetime.datetime\n    graph: dict[str, typing.Any]\n\n\nclass FeaturedAgentResponse(pydantic.BaseModel):\n    \"\"\"\n    Represents the response data for an agent detail.\n    \"\"\"\n\n    agentId: str\n    featuredCategories: list[str]\n    createdAt: datetime.datetime\n    updatedAt: datetime.datetime\n    isActive: bool\n\n\nclass CategoriesResponse(pydantic.BaseModel):\n    \"\"\"\n    Represents the response data for a list of categories.\n\n    Attributes:\n        unique_categories (list[str]): The list of unique categories.\n    \"\"\"\n\n    unique_categories: list[str]\n\n\nT = TypeVar(\"T\")\n\n\nclass ListResponse(pydantic.BaseModel, Generic[T]):\n    \"\"\"\n    Represents a list response.\n\n    Attributes:\n        items (list[T]): The list of items.\n        total_count (int): The total count of items.\n        page (int): The current page number.\n        page_size (int): The number of items per page.\n        total_pages (int): The total number of pages.\n    \"\"\"\n\n    items: list[T]\n    total_count: int\n    page: int\n    page_size: int\n    total_pages: int",
  "children": [
    {
      "value": "import datetime",
      "children": [
        {
          "value": "datetime",
          "children": [
            {
              "value": "datetime",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "import typing",
      "children": [
        {
          "value": "typing",
          "children": [
            {
              "value": "typing",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from enum import Enum",
      "children": [
        {
          "value": "enum",
          "children": [
            {
              "value": "enum",
              "children": []
            }
          ]
        },
        {
          "value": "Enum",
          "children": [
            {
              "value": "Enum",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from typing import Generic, Literal, TypeVar, Union",
      "children": [
        {
          "value": "typing",
          "children": [
            {
              "value": "typing",
              "children": []
            }
          ]
        },
        {
          "value": "Generic",
          "children": [
            {
              "value": "Generic",
              "children": []
            }
          ]
        },
        {
          "value": "Literal",
          "children": [
            {
              "value": "Literal",
              "children": []
            }
          ]
        },
        {
          "value": "TypeVar",
          "children": [
            {
              "value": "TypeVar",
              "children": []
            }
          ]
        },
        {
          "value": "Union",
          "children": [
            {
              "value": "Union",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "import prisma.enums",
      "children": [
        {
          "value": "prisma.enums",
          "children": [
            {
              "value": "prisma",
              "children": []
            },
            {
              "value": "enums",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "import pydantic",
      "children": [
        {
          "value": "pydantic",
          "children": [
            {
              "value": "pydantic",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "class InstallationLocation(str, Enum):\n    LOCAL = \"local\"\n    CLOUD = \"cloud\"",
      "children": [
        {
          "value": "InstallationLocation",
          "children": []
        },
        {
          "value": "(str, Enum)",
          "children": [
            {
              "value": "str",
              "children": []
            },
            {
              "value": "Enum",
              "children": []
            }
          ]
        },
        {
          "value": "LOCAL = \"local\"\n    CLOUD = \"cloud\"",
          "children": [
            {
              "value": "LOCAL = \"local\"",
              "children": [
                {
                  "value": "LOCAL = \"local\"",
                  "children": [
                    {
                      "value": "LOCAL",
                      "children": []
                    },
                    {
                      "value": "\"local\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "local",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "CLOUD = \"cloud\"",
              "children": [
                {
                  "value": "CLOUD = \"cloud\"",
                  "children": [
                    {
                      "value": "CLOUD",
                      "children": []
                    },
                    {
                      "value": "\"cloud\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "cloud",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "class AgentInstalledFromMarketplaceEventData(pydantic.BaseModel):\n    marketplace_agent_id: str\n    installed_agent_id: str\n    installation_location: InstallationLocation",
      "children": [
        {
          "value": "AgentInstalledFromMarketplaceEventData",
          "children": []
        },
        {
          "value": "(pydantic.BaseModel)",
          "children": [
            {
              "value": "pydantic.BaseModel",
              "children": [
                {
                  "value": "pydantic",
                  "children": []
                },
                {
                  "value": "BaseModel",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "marketplace_agent_id: str\n    installed_agent_id: str\n    installation_location: InstallationLocation",
          "children": [
            {
              "value": "marketplace_agent_id: str",
              "children": [
                {
                  "value": "marketplace_agent_id: str",
                  "children": [
                    {
                      "value": "marketplace_agent_id",
                      "children": []
                    },
                    {
                      "value": "str",
                      "children": [
                        {
                          "value": "str",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "installed_agent_id: str",
              "children": [
                {
                  "value": "installed_agent_id: str",
                  "children": [
                    {
                      "value": "installed_agent_id",
                      "children": []
                    },
                    {
                      "value": "str",
                      "children": [
                        {
                          "value": "str",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "installation_location: InstallationLocation",
              "children": [
                {
                  "value": "installation_location: InstallationLocation",
                  "children": [
                    {
                      "value": "installation_location",
                      "children": []
                    },
                    {
                      "value": "InstallationLocation",
                      "children": [
                        {
                          "value": "InstallationLocation",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "class AgentInstalledFromTemplateEventData(pydantic.BaseModel):\n    template_id: str\n    installed_agent_id: str\n    installation_location: InstallationLocation",
      "children": [
        {
          "value": "AgentInstalledFromTemplateEventData",
          "children": []
        },
        {
          "value": "(pydantic.BaseModel)",
          "children": [
            {
              "value": "pydantic.BaseModel",
              "children": [
                {
                  "value": "pydantic",
                  "children": []
                },
                {
                  "value": "BaseModel",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "template_id: str\n    installed_agent_id: str\n    installation_location: InstallationLocation",
          "children": [
            {
              "value": "template_id: str",
              "children": [
                {
                  "value": "template_id: str",
                  "children": [
                    {
                      "value": "template_id",
                      "children": []
                    },
                    {
                      "value": "str",
                      "children": [
                        {
                          "value": "str",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "installed_agent_id: str",
              "children": [
                {
                  "value": "installed_agent_id: str",
                  "children": [
                    {
                      "value": "installed_agent_id",
                      "children": []
                    },
                    {
                      "value": "str",
                      "children": [
                        {
                          "value": "str",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "installation_location: InstallationLocation",
              "children": [
                {
                  "value": "installation_location: InstallationLocation",
                  "children": [
                    {
                      "value": "installation_location",
                      "children": []
                    },
                    {
                      "value": "InstallationLocation",
                      "children": [
                        {
                          "value": "InstallationLocation",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "class AgentInstalledFromMarketplaceEvent(pydantic.BaseModel):\n    event_name: Literal[\"agent_installed_from_marketplace\"]\n    event_data: AgentInstalledFromMarketplaceEventData",
      "children": [
        {
          "value": "AgentInstalledFromMarketplaceEvent",
          "children": []
        },
        {
          "value": "(pydantic.BaseModel)",
          "children": [
            {
              "value": "pydantic.BaseModel",
              "children": [
                {
                  "value": "pydantic",
                  "children": []
                },
                {
                  "value": "BaseModel",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "event_name: Literal[\"agent_installed_from_marketplace\"]\n    event_data: AgentInstalledFromMarketplaceEventData",
          "children": [
            {
              "value": "event_name: Literal[\"agent_installed_from_marketplace\"]",
              "children": [
                {
                  "value": "event_name: Literal[\"agent_installed_from_marketplace\"]",
                  "children": [
                    {
                      "value": "event_name",
                      "children": []
                    },
                    {
                      "value": "Literal[\"agent_installed_from_marketplace\"]",
                      "children": [
                        {
                          "value": "Literal[\"agent_installed_from_marketplace\"]",
                          "children": [
                            {
                              "value": "Literal",
                              "children": []
                            },
                            {
                              "value": "[\"agent_installed_from_marketplace\"]",
                              "children": [
                                {
                                  "value": "\"agent_installed_from_marketplace\"",
                                  "children": [
                                    {
                                      "value": "\"agent_installed_from_marketplace\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "agent_installed_from_marketplace",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "event_data: AgentInstalledFromMarketplaceEventData",
              "children": [
                {
                  "value": "event_data: AgentInstalledFromMarketplaceEventData",
                  "children": [
                    {
                      "value": "event_data",
                      "children": []
                    },
                    {
                      "value": "AgentInstalledFromMarketplaceEventData",
                      "children": [
                        {
                          "value": "AgentInstalledFromMarketplaceEventData",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "class AgentInstalledFromTemplateEvent(pydantic.BaseModel):\n    event_name: Literal[\"agent_installed_from_template\"]\n    event_data: AgentInstalledFromTemplateEventData",
      "children": [
        {
          "value": "AgentInstalledFromTemplateEvent",
          "children": []
        },
        {
          "value": "(pydantic.BaseModel)",
          "children": [
            {
              "value": "pydantic.BaseModel",
              "children": [
                {
                  "value": "pydantic",
                  "children": []
                },
                {
                  "value": "BaseModel",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "event_name: Literal[\"agent_installed_from_template\"]\n    event_data: AgentInstalledFromTemplateEventData",
          "children": [
            {
              "value": "event_name: Literal[\"agent_installed_from_template\"]",
              "children": [
                {
                  "value": "event_name: Literal[\"agent_installed_from_template\"]",
                  "children": [
                    {
                      "value": "event_name",
                      "children": []
                    },
                    {
                      "value": "Literal[\"agent_installed_from_template\"]",
                      "children": [
                        {
                          "value": "Literal[\"agent_installed_from_template\"]",
                          "children": [
                            {
                              "value": "Literal",
                              "children": []
                            },
                            {
                              "value": "[\"agent_installed_from_template\"]",
                              "children": [
                                {
                                  "value": "\"agent_installed_from_template\"",
                                  "children": [
                                    {
                                      "value": "\"agent_installed_from_template\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "agent_installed_from_template",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "event_data: AgentInstalledFromTemplateEventData",
              "children": [
                {
                  "value": "event_data: AgentInstalledFromTemplateEventData",
                  "children": [
                    {
                      "value": "event_data",
                      "children": []
                    },
                    {
                      "value": "AgentInstalledFromTemplateEventData",
                      "children": [
                        {
                          "value": "AgentInstalledFromTemplateEventData",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "AnalyticsEvent = Union[\n    AgentInstalledFromMarketplaceEvent, AgentInstalledFromTemplateEvent\n]",
      "children": [
        {
          "value": "AnalyticsEvent = Union[\n    AgentInstalledFromMarketplaceEvent, AgentInstalledFromTemplateEvent\n]",
          "children": [
            {
              "value": "AnalyticsEvent",
              "children": []
            },
            {
              "value": "Union[\n    AgentInstalledFromMarketplaceEvent, AgentInstalledFromTemplateEvent\n]",
              "children": [
                {
                  "value": "Union",
                  "children": []
                },
                {
                  "value": "AgentInstalledFromMarketplaceEvent",
                  "children": []
                },
                {
                  "value": "AgentInstalledFromTemplateEvent",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "class AnalyticsRequest(pydantic.BaseModel):\n    event: AnalyticsEvent",
      "children": [
        {
          "value": "AnalyticsRequest",
          "children": []
        },
        {
          "value": "(pydantic.BaseModel)",
          "children": [
            {
              "value": "pydantic.BaseModel",
              "children": [
                {
                  "value": "pydantic",
                  "children": []
                },
                {
                  "value": "BaseModel",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "event: AnalyticsEvent",
          "children": [
            {
              "value": "event: AnalyticsEvent",
              "children": [
                {
                  "value": "event: AnalyticsEvent",
                  "children": [
                    {
                      "value": "event",
                      "children": []
                    },
                    {
                      "value": "AnalyticsEvent",
                      "children": [
                        {
                          "value": "AnalyticsEvent",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "class AddAgentRequest(pydantic.BaseModel):\n    graph: dict[str, typing.Any]\n    author: str\n    keywords: list[str]\n    categories: list[str]",
      "children": [
        {
          "value": "AddAgentRequest",
          "children": []
        },
        {
          "value": "(pydantic.BaseModel)",
          "children": [
            {
              "value": "pydantic.BaseModel",
              "children": [
                {
                  "value": "pydantic",
                  "children": []
                },
                {
                  "value": "BaseModel",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "graph: dict[str, typing.Any]\n    author: str\n    keywords: list[str]\n    categories: list[str]",
          "children": [
            {
              "value": "graph: dict[str, typing.Any]",
              "children": [
                {
                  "value": "graph: dict[str, typing.Any]",
                  "children": [
                    {
                      "value": "graph",
                      "children": []
                    },
                    {
                      "value": "dict[str, typing.Any]",
                      "children": [
                        {
                          "value": "dict[str, typing.Any]",
                          "children": [
                            {
                              "value": "dict",
                              "children": []
                            },
                            {
                              "value": "[str, typing.Any]",
                              "children": [
                                {
                                  "value": "str",
                                  "children": [
                                    {
                                      "value": "str",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "typing.Any",
                                  "children": [
                                    {
                                      "value": "typing.Any",
                                      "children": [
                                        {
                                          "value": "typing",
                                          "children": []
                                        },
                                        {
                                          "value": "Any",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "author: str",
              "children": [
                {
                  "value": "author: str",
                  "children": [
                    {
                      "value": "author",
                      "children": []
                    },
                    {
                      "value": "str",
                      "children": [
                        {
                          "value": "str",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "keywords: list[str]",
              "children": [
                {
                  "value": "keywords: list[str]",
                  "children": [
                    {
                      "value": "keywords",
                      "children": []
                    },
                    {
                      "value": "list[str]",
                      "children": [
                        {
                          "value": "list[str]",
                          "children": [
                            {
                              "value": "list",
                              "children": []
                            },
                            {
                              "value": "[str]",
                              "children": [
                                {
                                  "value": "str",
                                  "children": [
                                    {
                                      "value": "str",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "categories: list[str]",
              "children": [
                {
                  "value": "categories: list[str]",
                  "children": [
                    {
                      "value": "categories",
                      "children": []
                    },
                    {
                      "value": "list[str]",
                      "children": [
                        {
                          "value": "list[str]",
                          "children": [
                            {
                              "value": "list",
                              "children": []
                            },
                            {
                              "value": "[str]",
                              "children": [
                                {
                                  "value": "str",
                                  "children": [
                                    {
                                      "value": "str",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "class SubmissionReviewRequest(pydantic.BaseModel):\n    agent_id: str\n    version: int\n    status: prisma.enums.SubmissionStatus\n    comments: str | None",
      "children": [
        {
          "value": "SubmissionReviewRequest",
          "children": []
        },
        {
          "value": "(pydantic.BaseModel)",
          "children": [
            {
              "value": "pydantic.BaseModel",
              "children": [
                {
                  "value": "pydantic",
                  "children": []
                },
                {
                  "value": "BaseModel",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "agent_id: str\n    version: int\n    status: prisma.enums.SubmissionStatus\n    comments: str | None",
          "children": [
            {
              "value": "agent_id: str",
              "children": [
                {
                  "value": "agent_id: str",
                  "children": [
                    {
                      "value": "agent_id",
                      "children": []
                    },
                    {
                      "value": "str",
                      "children": [
                        {
                          "value": "str",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "version: int",
              "children": [
                {
                  "value": "version: int",
                  "children": [
                    {
                      "value": "version",
                      "children": []
                    },
                    {
                      "value": "int",
                      "children": [
                        {
                          "value": "int",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "status: prisma.enums.SubmissionStatus",
              "children": [
                {
                  "value": "status: prisma.enums.SubmissionStatus",
                  "children": [
                    {
                      "value": "status",
                      "children": []
                    },
                    {
                      "value": "prisma.enums.SubmissionStatus",
                      "children": [
                        {
                          "value": "prisma.enums.SubmissionStatus",
                          "children": [
                            {
                              "value": "prisma.enums",
                              "children": [
                                {
                                  "value": "prisma",
                                  "children": []
                                },
                                {
                                  "value": "enums",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SubmissionStatus",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "comments: str | None",
              "children": [
                {
                  "value": "comments: str | None",
                  "children": [
                    {
                      "value": "comments",
                      "children": []
                    },
                    {
                      "value": "str | None",
                      "children": [
                        {
                          "value": "str | None",
                          "children": [
                            {
                              "value": "str",
                              "children": []
                            },
                            {
                              "value": "None",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "class AgentResponse(pydantic.BaseModel):\n    \"\"\"\n    Represents a response from an agent.\n\n    Attributes:\n        id (str): The ID of the agent.\n        name (str, optional): The name of the agent.\n        description (str, optional): The description of the agent.\n        author (str, optional): The author of the agent.\n        keywords (list[str]): The keywords associated with the agent.\n        categories (list[str]): The categories the agent belongs to.\n        version (int): The version of the agent.\n        createdAt (str): The creation date of the agent.\n        updatedAt (str): The last update date of the agent.\n    \"\"\"\n\n    id: str\n    name: typing.Optional[str]\n    description: typing.Optional[str]\n    author: typing.Optional[str]\n    keywords: list[str]\n    categories: list[str]\n    version: int\n    createdAt: datetime.datetime\n    updatedAt: datetime.datetime\n    submissionStatus: str\n    views: int = 0\n    downloads: int = 0",
      "children": [
        {
          "value": "AgentResponse",
          "children": []
        },
        {
          "value": "(pydantic.BaseModel)",
          "children": [
            {
              "value": "pydantic.BaseModel",
              "children": [
                {
                  "value": "pydantic",
                  "children": []
                },
                {
                  "value": "BaseModel",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "\"\"\"\n    Represents a response from an agent.\n\n    Attributes:\n        id (str): The ID of the agent.\n        name (str, optional): The name of the agent.\n        description (str, optional): The description of the agent.\n        author (str, optional): The author of the agent.\n        keywords (list[str]): The keywords associated with the agent.\n        categories (list[str]): The categories the agent belongs to.\n        version (int): The version of the agent.\n        createdAt (str): The creation date of the agent.\n        updatedAt (str): The last update date of the agent.\n    \"\"\"\n\n    id: str\n    name: typing.Optional[str]\n    description: typing.Optional[str]\n    author: typing.Optional[str]\n    keywords: list[str]\n    categories: list[str]\n    version: int\n    createdAt: datetime.datetime\n    updatedAt: datetime.datetime\n    submissionStatus: str\n    views: int = 0\n    downloads: int = 0",
          "children": [
            {
              "value": "\"\"\"\n    Represents a response from an agent.\n\n    Attributes:\n        id (str): The ID of the agent.\n        name (str, optional): The name of the agent.\n        description (str, optional): The description of the agent.\n        author (str, optional): The author of the agent.\n        keywords (list[str]): The keywords associated with the agent.\n        categories (list[str]): The categories the agent belongs to.\n        version (int): The version of the agent.\n        createdAt (str): The creation date of the agent.\n        updatedAt (str): The last update date of the agent.\n    \"\"\"",
              "children": [
                {
                  "value": "\"\"\"\n    Represents a response from an agent.\n\n    Attributes:\n        id (str): The ID of the agent.\n        name (str, optional): The name of the agent.\n        description (str, optional): The description of the agent.\n        author (str, optional): The author of the agent.\n        keywords (list[str]): The keywords associated with the agent.\n        categories (list[str]): The categories the agent belongs to.\n        version (int): The version of the agent.\n        createdAt (str): The creation date of the agent.\n        updatedAt (str): The last update date of the agent.\n    \"\"\"",
                  "children": [
                    {
                      "value": "\"\"\"",
                      "children": []
                    },
                    {
                      "value": "Represents a response from an agent.\n\n    Attributes:\n        id (str): The ID of the agent.\n        name (str, optional): The name of the agent.\n        description (str, optional): The description of the agent.\n        author (str, optional): The author of the agent.\n        keywords (list[str]): The keywords associated with the agent.\n        categories (list[str]): The categories the agent belongs to.\n        version (int): The version of the agent.\n        createdAt (str): The creation date of the agent.\n        updatedAt (str): The last update date of the agent.",
                      "children": []
                    },
                    {
                      "value": "\"\"\"",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "id: str",
              "children": [
                {
                  "value": "id: str",
                  "children": [
                    {
                      "value": "id",
                      "children": []
                    },
                    {
                      "value": "str",
                      "children": [
                        {
                          "value": "str",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "name: typing.Optional[str]",
              "children": [
                {
                  "value": "name: typing.Optional[str]",
                  "children": [
                    {
                      "value": "name",
                      "children": []
                    },
                    {
                      "value": "typing.Optional[str]",
                      "children": [
                        {
                          "value": "typing.Optional[str]",
                          "children": [
                            {
                              "value": "typing.Optional",
                              "children": [
                                {
                                  "value": "typing",
                                  "children": []
                                },
                                {
                                  "value": "Optional",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "str",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "description: typing.Optional[str]",
              "children": [
                {
                  "value": "description: typing.Optional[str]",
                  "children": [
                    {
                      "value": "description",
                      "children": []
                    },
                    {
                      "value": "typing.Optional[str]",
                      "children": [
                        {
                          "value": "typing.Optional[str]",
                          "children": [
                            {
                              "value": "typing.Optional",
                              "children": [
                                {
                                  "value": "typing",
                                  "children": []
                                },
                                {
                                  "value": "Optional",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "str",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "author: typing.Optional[str]",
              "children": [
                {
                  "value": "author: typing.Optional[str]",
                  "children": [
                    {
                      "value": "author",
                      "children": []
                    },
                    {
                      "value": "typing.Optional[str]",
                      "children": [
                        {
                          "value": "typing.Optional[str]",
                          "children": [
                            {
                              "value": "typing.Optional",
                              "children": [
                                {
                                  "value": "typing",
                                  "children": []
                                },
                                {
                                  "value": "Optional",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "str",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "keywords: list[str]",
              "children": [
                {
                  "value": "keywords: list[str]",
                  "children": [
                    {
                      "value": "keywords",
                      "children": []
                    },
                    {
                      "value": "list[str]",
                      "children": [
                        {
                          "value": "list[str]",
                          "children": [
                            {
                              "value": "list",
                              "children": []
                            },
                            {
                              "value": "[str]",
                              "children": [
                                {
                                  "value": "str",
                                  "children": [
                                    {
                                      "value": "str",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "categories: list[str]",
              "children": [
                {
                  "value": "categories: list[str]",
                  "children": [
                    {
                      "value": "categories",
                      "children": []
                    },
                    {
                      "value": "list[str]",
                      "children": [
                        {
                          "value": "list[str]",
                          "children": [
                            {
                              "value": "list",
                              "children": []
                            },
                            {
                              "value": "[str]",
                              "children": [
                                {
                                  "value": "str",
                                  "children": [
                                    {
                                      "value": "str",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "version: int",
              "children": [
                {
                  "value": "version: int",
                  "children": [
                    {
                      "value": "version",
                      "children": []
                    },
                    {
                      "value": "int",
                      "children": [
                        {
                          "value": "int",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "createdAt: datetime.datetime",
              "children": [
                {
                  "value": "createdAt: datetime.datetime",
                  "children": [
                    {
                      "value": "createdAt",
                      "children": []
                    },
                    {
                      "value": "datetime.datetime",
                      "children": [
                        {
                          "value": "datetime.datetime",
                          "children": [
                            {
                              "value": "datetime",
                              "children": []
                            },
                            {
                              "value": "datetime",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "updatedAt: datetime.datetime",
              "children": [
                {
                  "value": "updatedAt: datetime.datetime",
                  "children": [
                    {
                      "value": "updatedAt",
                      "children": []
                    },
                    {
                      "value": "datetime.datetime",
                      "children": [
                        {
                          "value": "datetime.datetime",
                          "children": [
                            {
                              "value": "datetime",
                              "children": []
                            },
                            {
                              "value": "datetime",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "submissionStatus: str",
              "children": [
                {
                  "value": "submissionStatus: str",
                  "children": [
                    {
                      "value": "submissionStatus",
                      "children": []
                    },
                    {
                      "value": "str",
                      "children": [
                        {
                          "value": "str",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "views: int = 0",
              "children": [
                {
                  "value": "views: int = 0",
                  "children": [
                    {
                      "value": "views",
                      "children": []
                    },
                    {
                      "value": "int",
                      "children": [
                        {
                          "value": "int",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "0",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "downloads: int = 0",
              "children": [
                {
                  "value": "downloads: int = 0",
                  "children": [
                    {
                      "value": "downloads",
                      "children": []
                    },
                    {
                      "value": "int",
                      "children": [
                        {
                          "value": "int",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "0",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "class AgentDetailResponse(pydantic.BaseModel):\n    \"\"\"\n    Represents the response data for an agent detail.\n\n    Attributes:\n        id (str): The ID of the agent.\n        name (Optional[str]): The name of the agent.\n        description (Optional[str]): The description of the agent.\n        author (Optional[str]): The author of the agent.\n        keywords (List[str]): The keywords associated with the agent.\n        categories (List[str]): The categories the agent belongs to.\n        version (int): The version of the agent.\n        createdAt (str): The creation date of the agent.\n        updatedAt (str): The last update date of the agent.\n        graph (Dict[str, Any]): The graph data of the agent.\n    \"\"\"\n\n    id: str\n    name: typing.Optional[str]\n    description: typing.Optional[str]\n    author: typing.Optional[str]\n    keywords: list[str]\n    categories: list[str]\n    version: int\n    createdAt: datetime.datetime\n    updatedAt: datetime.datetime\n    graph: dict[str, typing.Any]",
      "children": [
        {
          "value": "AgentDetailResponse",
          "children": []
        },
        {
          "value": "(pydantic.BaseModel)",
          "children": [
            {
              "value": "pydantic.BaseModel",
              "children": [
                {
                  "value": "pydantic",
                  "children": []
                },
                {
                  "value": "BaseModel",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "\"\"\"\n    Represents the response data for an agent detail.\n\n    Attributes:\n        id (str): The ID of the agent.\n        name (Optional[str]): The name of the agent.\n        description (Optional[str]): The description of the agent.\n        author (Optional[str]): The author of the agent.\n        keywords (List[str]): The keywords associated with the agent.\n        categories (List[str]): The categories the agent belongs to.\n        version (int): The version of the agent.\n        createdAt (str): The creation date of the agent.\n        updatedAt (str): The last update date of the agent.\n        graph (Dict[str, Any]): The graph data of the agent.\n    \"\"\"\n\n    id: str\n    name: typing.Optional[str]\n    description: typing.Optional[str]\n    author: typing.Optional[str]\n    keywords: list[str]\n    categories: list[str]\n    version: int\n    createdAt: datetime.datetime\n    updatedAt: datetime.datetime\n    graph: dict[str, typing.Any]",
          "children": [
            {
              "value": "\"\"\"\n    Represents the response data for an agent detail.\n\n    Attributes:\n        id (str): The ID of the agent.\n        name (Optional[str]): The name of the agent.\n        description (Optional[str]): The description of the agent.\n        author (Optional[str]): The author of the agent.\n        keywords (List[str]): The keywords associated with the agent.\n        categories (List[str]): The categories the agent belongs to.\n        version (int): The version of the agent.\n        createdAt (str): The creation date of the agent.\n        updatedAt (str): The last update date of the agent.\n        graph (Dict[str, Any]): The graph data of the agent.\n    \"\"\"",
              "children": [
                {
                  "value": "\"\"\"\n    Represents the response data for an agent detail.\n\n    Attributes:\n        id (str): The ID of the agent.\n        name (Optional[str]): The name of the agent.\n        description (Optional[str]): The description of the agent.\n        author (Optional[str]): The author of the agent.\n        keywords (List[str]): The keywords associated with the agent.\n        categories (List[str]): The categories the agent belongs to.\n        version (int): The version of the agent.\n        createdAt (str): The creation date of the agent.\n        updatedAt (str): The last update date of the agent.\n        graph (Dict[str, Any]): The graph data of the agent.\n    \"\"\"",
                  "children": [
                    {
                      "value": "\"\"\"",
                      "children": []
                    },
                    {
                      "value": "Represents the response data for an agent detail.\n\n    Attributes:\n        id (str): The ID of the agent.\n        name (Optional[str]): The name of the agent.\n        description (Optional[str]): The description of the agent.\n        author (Optional[str]): The author of the agent.\n        keywords (List[str]): The keywords associated with the agent.\n        categories (List[str]): The categories the agent belongs to.\n        version (int): The version of the agent.\n        createdAt (str): The creation date of the agent.\n        updatedAt (str): The last update date of the agent.\n        graph (Dict[str, Any]): The graph data of the agent.",
                      "children": []
                    },
                    {
                      "value": "\"\"\"",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "id: str",
              "children": [
                {
                  "value": "id: str",
                  "children": [
                    {
                      "value": "id",
                      "children": []
                    },
                    {
                      "value": "str",
                      "children": [
                        {
                          "value": "str",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "name: typing.Optional[str]",
              "children": [
                {
                  "value": "name: typing.Optional[str]",
                  "children": [
                    {
                      "value": "name",
                      "children": []
                    },
                    {
                      "value": "typing.Optional[str]",
                      "children": [
                        {
                          "value": "typing.Optional[str]",
                          "children": [
                            {
                              "value": "typing.Optional",
                              "children": [
                                {
                                  "value": "typing",
                                  "children": []
                                },
                                {
                                  "value": "Optional",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "str",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "description: typing.Optional[str]",
              "children": [
                {
                  "value": "description: typing.Optional[str]",
                  "children": [
                    {
                      "value": "description",
                      "children": []
                    },
                    {
                      "value": "typing.Optional[str]",
                      "children": [
                        {
                          "value": "typing.Optional[str]",
                          "children": [
                            {
                              "value": "typing.Optional",
                              "children": [
                                {
                                  "value": "typing",
                                  "children": []
                                },
                                {
                                  "value": "Optional",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "str",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "author: typing.Optional[str]",
              "children": [
                {
                  "value": "author: typing.Optional[str]",
                  "children": [
                    {
                      "value": "author",
                      "children": []
                    },
                    {
                      "value": "typing.Optional[str]",
                      "children": [
                        {
                          "value": "typing.Optional[str]",
                          "children": [
                            {
                              "value": "typing.Optional",
                              "children": [
                                {
                                  "value": "typing",
                                  "children": []
                                },
                                {
                                  "value": "Optional",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "str",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "keywords: list[str]",
              "children": [
                {
                  "value": "keywords: list[str]",
                  "children": [
                    {
                      "value": "keywords",
                      "children": []
                    },
                    {
                      "value": "list[str]",
                      "children": [
                        {
                          "value": "list[str]",
                          "children": [
                            {
                              "value": "list",
                              "children": []
                            },
                            {
                              "value": "[str]",
                              "children": [
                                {
                                  "value": "str",
                                  "children": [
                                    {
                                      "value": "str",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "categories: list[str]",
              "children": [
                {
                  "value": "categories: list[str]",
                  "children": [
                    {
                      "value": "categories",
                      "children": []
                    },
                    {
                      "value": "list[str]",
                      "children": [
                        {
                          "value": "list[str]",
                          "children": [
                            {
                              "value": "list",
                              "children": []
                            },
                            {
                              "value": "[str]",
                              "children": [
                                {
                                  "value": "str",
                                  "children": [
                                    {
                                      "value": "str",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "version: int",
              "children": [
                {
                  "value": "version: int",
                  "children": [
                    {
                      "value": "version",
                      "children": []
                    },
                    {
                      "value": "int",
                      "children": [
                        {
                          "value": "int",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "createdAt: datetime.datetime",
              "children": [
                {
                  "value": "createdAt: datetime.datetime",
                  "children": [
                    {
                      "value": "createdAt",
                      "children": []
                    },
                    {
                      "value": "datetime.datetime",
                      "children": [
                        {
                          "value": "datetime.datetime",
                          "children": [
                            {
                              "value": "datetime",
                              "children": []
                            },
                            {
                              "value": "datetime",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "updatedAt: datetime.datetime",
              "children": [
                {
                  "value": "updatedAt: datetime.datetime",
                  "children": [
                    {
                      "value": "updatedAt",
                      "children": []
                    },
                    {
                      "value": "datetime.datetime",
                      "children": [
                        {
                          "value": "datetime.datetime",
                          "children": [
                            {
                              "value": "datetime",
                              "children": []
                            },
                            {
                              "value": "datetime",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "graph: dict[str, typing.Any]",
              "children": [
                {
                  "value": "graph: dict[str, typing.Any]",
                  "children": [
                    {
                      "value": "graph",
                      "children": []
                    },
                    {
                      "value": "dict[str, typing.Any]",
                      "children": [
                        {
                          "value": "dict[str, typing.Any]",
                          "children": [
                            {
                              "value": "dict",
                              "children": []
                            },
                            {
                              "value": "[str, typing.Any]",
                              "children": [
                                {
                                  "value": "str",
                                  "children": [
                                    {
                                      "value": "str",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "typing.Any",
                                  "children": [
                                    {
                                      "value": "typing.Any",
                                      "children": [
                                        {
                                          "value": "typing",
                                          "children": []
                                        },
                                        {
                                          "value": "Any",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "class FeaturedAgentResponse(pydantic.BaseModel):\n    \"\"\"\n    Represents the response data for an agent detail.\n    \"\"\"\n\n    agentId: str\n    featuredCategories: list[str]\n    createdAt: datetime.datetime\n    updatedAt: datetime.datetime\n    isActive: bool",
      "children": [
        {
          "value": "FeaturedAgentResponse",
          "children": []
        },
        {
          "value": "(pydantic.BaseModel)",
          "children": [
            {
              "value": "pydantic.BaseModel",
              "children": [
                {
                  "value": "pydantic",
                  "children": []
                },
                {
                  "value": "BaseModel",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "\"\"\"\n    Represents the response data for an agent detail.\n    \"\"\"\n\n    agentId: str\n    featuredCategories: list[str]\n    createdAt: datetime.datetime\n    updatedAt: datetime.datetime\n    isActive: bool",
          "children": [
            {
              "value": "\"\"\"\n    Represents the response data for an agent detail.\n    \"\"\"",
              "children": [
                {
                  "value": "\"\"\"\n    Represents the response data for an agent detail.\n    \"\"\"",
                  "children": [
                    {
                      "value": "\"\"\"",
                      "children": []
                    },
                    {
                      "value": "Represents the response data for an agent detail.",
                      "children": []
                    },
                    {
                      "value": "\"\"\"",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "agentId: str",
              "children": [
                {
                  "value": "agentId: str",
                  "children": [
                    {
                      "value": "agentId",
                      "children": []
                    },
                    {
                      "value": "str",
                      "children": [
                        {
                          "value": "str",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "featuredCategories: list[str]",
              "children": [
                {
                  "value": "featuredCategories: list[str]",
                  "children": [
                    {
                      "value": "featuredCategories",
                      "children": []
                    },
                    {
                      "value": "list[str]",
                      "children": [
                        {
                          "value": "list[str]",
                          "children": [
                            {
                              "value": "list",
                              "children": []
                            },
                            {
                              "value": "[str]",
                              "children": [
                                {
                                  "value": "str",
                                  "children": [
                                    {
                                      "value": "str",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "createdAt: datetime.datetime",
              "children": [
                {
                  "value": "createdAt: datetime.datetime",
                  "children": [
                    {
                      "value": "createdAt",
                      "children": []
                    },
                    {
                      "value": "datetime.datetime",
                      "children": [
                        {
                          "value": "datetime.datetime",
                          "children": [
                            {
                              "value": "datetime",
                              "children": []
                            },
                            {
                              "value": "datetime",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "updatedAt: datetime.datetime",
              "children": [
                {
                  "value": "updatedAt: datetime.datetime",
                  "children": [
                    {
                      "value": "updatedAt",
                      "children": []
                    },
                    {
                      "value": "datetime.datetime",
                      "children": [
                        {
                          "value": "datetime.datetime",
                          "children": [
                            {
                              "value": "datetime",
                              "children": []
                            },
                            {
                              "value": "datetime",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "isActive: bool",
              "children": [
                {
                  "value": "isActive: bool",
                  "children": [
                    {
                      "value": "isActive",
                      "children": []
                    },
                    {
                      "value": "bool",
                      "children": [
                        {
                          "value": "bool",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "class CategoriesResponse(pydantic.BaseModel):\n    \"\"\"\n    Represents the response data for a list of categories.\n\n    Attributes:\n        unique_categories (list[str]): The list of unique categories.\n    \"\"\"\n\n    unique_categories: list[str]",
      "children": [
        {
          "value": "CategoriesResponse",
          "children": []
        },
        {
          "value": "(pydantic.BaseModel)",
          "children": [
            {
              "value": "pydantic.BaseModel",
              "children": [
                {
                  "value": "pydantic",
                  "children": []
                },
                {
                  "value": "BaseModel",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "\"\"\"\n    Represents the response data for a list of categories.\n\n    Attributes:\n        unique_categories (list[str]): The list of unique categories.\n    \"\"\"\n\n    unique_categories: list[str]",
          "children": [
            {
              "value": "\"\"\"\n    Represents the response data for a list of categories.\n\n    Attributes:\n        unique_categories (list[str]): The list of unique categories.\n    \"\"\"",
              "children": [
                {
                  "value": "\"\"\"\n    Represents the response data for a list of categories.\n\n    Attributes:\n        unique_categories (list[str]): The list of unique categories.\n    \"\"\"",
                  "children": [
                    {
                      "value": "\"\"\"",
                      "children": []
                    },
                    {
                      "value": "Represents the response data for a list of categories.\n\n    Attributes:\n        unique_categories (list[str]): The list of unique categories.",
                      "children": []
                    },
                    {
                      "value": "\"\"\"",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "unique_categories: list[str]",
              "children": [
                {
                  "value": "unique_categories: list[str]",
                  "children": [
                    {
                      "value": "unique_categories",
                      "children": []
                    },
                    {
                      "value": "list[str]",
                      "children": [
                        {
                          "value": "list[str]",
                          "children": [
                            {
                              "value": "list",
                              "children": []
                            },
                            {
                              "value": "[str]",
                              "children": [
                                {
                                  "value": "str",
                                  "children": [
                                    {
                                      "value": "str",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "T = TypeVar(\"T\")",
      "children": [
        {
          "value": "T = TypeVar(\"T\")",
          "children": [
            {
              "value": "T",
              "children": []
            },
            {
              "value": "TypeVar(\"T\")",
              "children": [
                {
                  "value": "TypeVar",
                  "children": []
                },
                {
                  "value": "(\"T\")",
                  "children": [
                    {
                      "value": "\"T\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "T",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "class ListResponse(pydantic.BaseModel, Generic[T]):\n    \"\"\"\n    Represents a list response.\n\n    Attributes:\n        items (list[T]): The list of items.\n        total_count (int): The total count of items.\n        page (int): The current page number.\n        page_size (int): The number of items per page.\n        total_pages (int): The total number of pages.\n    \"\"\"\n\n    items: list[T]\n    total_count: int\n    page: int\n    page_size: int\n    total_pages: int",
      "children": [
        {
          "value": "ListResponse",
          "children": []
        },
        {
          "value": "(pydantic.BaseModel, Generic[T])",
          "children": [
            {
              "value": "pydantic.BaseModel",
              "children": [
                {
                  "value": "pydantic",
                  "children": []
                },
                {
                  "value": "BaseModel",
                  "children": []
                }
              ]
            },
            {
              "value": "Generic[T]",
              "children": [
                {
                  "value": "Generic",
                  "children": []
                },
                {
                  "value": "T",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "\"\"\"\n    Represents a list response.\n\n    Attributes:\n        items (list[T]): The list of items.\n        total_count (int): The total count of items.\n        page (int): The current page number.\n        page_size (int): The number of items per page.\n        total_pages (int): The total number of pages.\n    \"\"\"\n\n    items: list[T]\n    total_count: int\n    page: int\n    page_size: int\n    total_pages: int",
          "children": [
            {
              "value": "\"\"\"\n    Represents a list response.\n\n    Attributes:\n        items (list[T]): The list of items.\n        total_count (int): The total count of items.\n        page (int): The current page number.\n        page_size (int): The number of items per page.\n        total_pages (int): The total number of pages.\n    \"\"\"",
              "children": [
                {
                  "value": "\"\"\"\n    Represents a list response.\n\n    Attributes:\n        items (list[T]): The list of items.\n        total_count (int): The total count of items.\n        page (int): The current page number.\n        page_size (int): The number of items per page.\n        total_pages (int): The total number of pages.\n    \"\"\"",
                  "children": [
                    {
                      "value": "\"\"\"",
                      "children": []
                    },
                    {
                      "value": "Represents a list response.\n\n    Attributes:\n        items (list[T]): The list of items.\n        total_count (int): The total count of items.\n        page (int): The current page number.\n        page_size (int): The number of items per page.\n        total_pages (int): The total number of pages.",
                      "children": []
                    },
                    {
                      "value": "\"\"\"",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "items: list[T]",
              "children": [
                {
                  "value": "items: list[T]",
                  "children": [
                    {
                      "value": "items",
                      "children": []
                    },
                    {
                      "value": "list[T]",
                      "children": [
                        {
                          "value": "list[T]",
                          "children": [
                            {
                              "value": "list",
                              "children": []
                            },
                            {
                              "value": "[T]",
                              "children": [
                                {
                                  "value": "T",
                                  "children": [
                                    {
                                      "value": "T",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "total_count: int",
              "children": [
                {
                  "value": "total_count: int",
                  "children": [
                    {
                      "value": "total_count",
                      "children": []
                    },
                    {
                      "value": "int",
                      "children": [
                        {
                          "value": "int",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "page: int",
              "children": [
                {
                  "value": "page: int",
                  "children": [
                    {
                      "value": "page",
                      "children": []
                    },
                    {
                      "value": "int",
                      "children": [
                        {
                          "value": "int",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "page_size: int",
              "children": [
                {
                  "value": "page_size: int",
                  "children": [
                    {
                      "value": "page_size",
                      "children": []
                    },
                    {
                      "value": "int",
                      "children": [
                        {
                          "value": "int",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "total_pages: int",
              "children": [
                {
                  "value": "total_pages: int",
                  "children": [
                    {
                      "value": "total_pages",
                      "children": []
                    },
                    {
                      "value": "int",
                      "children": [
                        {
                          "value": "int",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}