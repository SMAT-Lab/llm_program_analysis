{
  "value": "import logging\nfrom typing import TYPE_CHECKING, AsyncGenerator, Optional\n\nfrom prisma import Json\nfrom prisma.models import IntegrationWebhook\nfrom pydantic import Field, computed_field\n\nfrom backend.data.includes import INTEGRATION_WEBHOOK_INCLUDE\nfrom backend.data.queue import AsyncRedisEventBus\nfrom backend.integrations.providers import ProviderName\nfrom backend.integrations.webhooks.utils import webhook_ingress_url\n\nfrom .db import BaseDbModel\n\nif TYPE_CHECKING:\n    from .graph import NodeModel\n\nlogger = logging.getLogger(__name__)\n\n\nclass Webhook(BaseDbModel):\n    user_id: str\n    provider: ProviderName\n    credentials_id: str\n    webhook_type: str\n    resource: str\n    events: list[str]\n    config: dict = Field(default_factory=dict)\n    secret: str\n\n    provider_webhook_id: str\n\n    attached_nodes: Optional[list[\"NodeModel\"]] = None\n\n    @computed_field\n    @property\n    def url(self) -> str:\n        return webhook_ingress_url(self.provider.value, self.id)\n\n    @staticmethod\n    def from_db(webhook: IntegrationWebhook):\n        from .graph import NodeModel\n\n        return Webhook(\n            id=webhook.id,\n            user_id=webhook.userId,\n            provider=ProviderName(webhook.provider),\n            credentials_id=webhook.credentialsId,\n            webhook_type=webhook.webhookType,\n            resource=webhook.resource,\n            events=webhook.events,\n            config=dict(webhook.config),\n            secret=webhook.secret,\n            provider_webhook_id=webhook.providerWebhookId,\n            attached_nodes=(\n                [NodeModel.from_db(node) for node in webhook.AgentNodes]\n                if webhook.AgentNodes is not None\n                else None\n            ),\n        )\n\n\n# --------------------- CRUD functions --------------------- #\n\n\nasync def create_webhook(webhook: Webhook) -> Webhook:\n    created_webhook = await IntegrationWebhook.prisma().create(\n        data={\n            \"id\": webhook.id,\n            \"userId\": webhook.user_id,\n            \"provider\": webhook.provider.value,\n            \"credentialsId\": webhook.credentials_id,\n            \"webhookType\": webhook.webhook_type,\n            \"resource\": webhook.resource,\n            \"events\": webhook.events,\n            \"config\": Json(webhook.config),\n            \"secret\": webhook.secret,\n            \"providerWebhookId\": webhook.provider_webhook_id,\n        }\n    )\n    return Webhook.from_db(created_webhook)\n\n\nasync def get_webhook(webhook_id: str) -> Webhook:\n    \"\"\"\u26a0\ufe0f No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\n    webhook = await IntegrationWebhook.prisma().find_unique_or_raise(\n        where={\"id\": webhook_id},\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )\n    return Webhook.from_db(webhook)\n\n\nasync def get_all_webhooks_by_creds(credentials_id: str) -> list[Webhook]:\n    \"\"\"\u26a0\ufe0f No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\n    if not credentials_id:\n        raise ValueError(\"credentials_id must not be empty\")\n    webhooks = await IntegrationWebhook.prisma().find_many(\n        where={\"credentialsId\": credentials_id},\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )\n    return [Webhook.from_db(webhook) for webhook in webhooks]\n\n\nasync def find_webhook_by_credentials_and_props(\n    credentials_id: str, webhook_type: str, resource: str, events: list[str]\n) -> Webhook | None:\n    \"\"\"\u26a0\ufe0f No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\n    webhook = await IntegrationWebhook.prisma().find_first(\n        where={\n            \"credentialsId\": credentials_id,\n            \"webhookType\": webhook_type,\n            \"resource\": resource,\n            \"events\": {\"has_every\": events},\n        },\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )\n    return Webhook.from_db(webhook) if webhook else None\n\n\nasync def find_webhook_by_graph_and_props(\n    graph_id: str, provider: str, webhook_type: str, events: list[str]\n) -> Webhook | None:\n    \"\"\"\u26a0\ufe0f No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\n    webhook = await IntegrationWebhook.prisma().find_first(\n        where={\n            \"provider\": provider,\n            \"webhookType\": webhook_type,\n            \"events\": {\"has_every\": events},\n            \"AgentNodes\": {\"some\": {\"agentGraphId\": graph_id}},\n        },\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )\n    return Webhook.from_db(webhook) if webhook else None\n\n\nasync def update_webhook_config(webhook_id: str, updated_config: dict) -> Webhook:\n    \"\"\"\u26a0\ufe0f No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\n    _updated_webhook = await IntegrationWebhook.prisma().update(\n        where={\"id\": webhook_id},\n        data={\"config\": Json(updated_config)},\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )\n    if _updated_webhook is None:\n        raise ValueError(f\"Webhook #{webhook_id} not found\")\n    return Webhook.from_db(_updated_webhook)\n\n\nasync def delete_webhook(webhook_id: str) -> None:\n    \"\"\"\u26a0\ufe0f No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\n    deleted = await IntegrationWebhook.prisma().delete(where={\"id\": webhook_id})\n    if not deleted:\n        raise ValueError(f\"Webhook #{webhook_id} not found\")\n\n\n# --------------------- WEBHOOK EVENTS --------------------- #\n\n\nclass WebhookEvent(BaseDbModel):\n    provider: str\n    webhook_id: str\n    event_type: str\n    payload: dict\n\n\nclass WebhookEventBus(AsyncRedisEventBus[WebhookEvent]):\n    Model = WebhookEvent\n\n    @property\n    def event_bus_name(self) -> str:\n        return \"webhooks\"\n\n\n_webhook_event_bus = WebhookEventBus()\n\n\nasync def publish_webhook_event(event: WebhookEvent):\n    await _webhook_event_bus.publish_event(\n        event, f\"{event.webhook_id}/{event.event_type}\"\n    )\n\n\nasync def listen_for_webhook_events(\n    webhook_id: str, event_type: Optional[str] = None\n) -> AsyncGenerator[WebhookEvent, None]:\n    async for event in _webhook_event_bus.listen_events(\n        f\"{webhook_id}/{event_type or '*'}\"\n    ):\n        yield event\n\n\nasync def wait_for_webhook_event(\n    webhook_id: str, event_type: Optional[str] = None, timeout: Optional[float] = None\n) -> WebhookEvent | None:\n    return await _webhook_event_bus.wait_for_event(\n        f\"{webhook_id}/{event_type or '*'}\", timeout\n    )",
  "children": [
    {
      "value": "import logging",
      "children": [
        {
          "value": "logging",
          "children": [
            {
              "value": "logging",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from typing import TYPE_CHECKING, AsyncGenerator, Optional",
      "children": [
        {
          "value": "typing",
          "children": [
            {
              "value": "typing",
              "children": []
            }
          ]
        },
        {
          "value": "TYPE_CHECKING",
          "children": [
            {
              "value": "TYPE_CHECKING",
              "children": []
            }
          ]
        },
        {
          "value": "AsyncGenerator",
          "children": [
            {
              "value": "AsyncGenerator",
              "children": []
            }
          ]
        },
        {
          "value": "Optional",
          "children": [
            {
              "value": "Optional",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from prisma import Json",
      "children": [
        {
          "value": "prisma",
          "children": [
            {
              "value": "prisma",
              "children": []
            }
          ]
        },
        {
          "value": "Json",
          "children": [
            {
              "value": "Json",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from prisma.models import IntegrationWebhook",
      "children": [
        {
          "value": "prisma.models",
          "children": [
            {
              "value": "prisma",
              "children": []
            },
            {
              "value": "models",
              "children": []
            }
          ]
        },
        {
          "value": "IntegrationWebhook",
          "children": [
            {
              "value": "IntegrationWebhook",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from pydantic import Field, computed_field",
      "children": [
        {
          "value": "pydantic",
          "children": [
            {
              "value": "pydantic",
              "children": []
            }
          ]
        },
        {
          "value": "Field",
          "children": [
            {
              "value": "Field",
              "children": []
            }
          ]
        },
        {
          "value": "computed_field",
          "children": [
            {
              "value": "computed_field",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.data.includes import INTEGRATION_WEBHOOK_INCLUDE",
      "children": [
        {
          "value": "backend.data.includes",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "data",
              "children": []
            },
            {
              "value": "includes",
              "children": []
            }
          ]
        },
        {
          "value": "INTEGRATION_WEBHOOK_INCLUDE",
          "children": [
            {
              "value": "INTEGRATION_WEBHOOK_INCLUDE",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.data.queue import AsyncRedisEventBus",
      "children": [
        {
          "value": "backend.data.queue",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "data",
              "children": []
            },
            {
              "value": "queue",
              "children": []
            }
          ]
        },
        {
          "value": "AsyncRedisEventBus",
          "children": [
            {
              "value": "AsyncRedisEventBus",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.integrations.providers import ProviderName",
      "children": [
        {
          "value": "backend.integrations.providers",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "integrations",
              "children": []
            },
            {
              "value": "providers",
              "children": []
            }
          ]
        },
        {
          "value": "ProviderName",
          "children": [
            {
              "value": "ProviderName",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.integrations.webhooks.utils import webhook_ingress_url",
      "children": [
        {
          "value": "backend.integrations.webhooks.utils",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "integrations",
              "children": []
            },
            {
              "value": "webhooks",
              "children": []
            },
            {
              "value": "utils",
              "children": []
            }
          ]
        },
        {
          "value": "webhook_ingress_url",
          "children": [
            {
              "value": "webhook_ingress_url",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from .db import BaseDbModel",
      "children": [
        {
          "value": ".db",
          "children": [
            {
              "value": ".",
              "children": []
            },
            {
              "value": "db",
              "children": [
                {
                  "value": "db",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "BaseDbModel",
          "children": [
            {
              "value": "BaseDbModel",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "if TYPE_CHECKING:\n    from .graph import NodeModel",
      "children": [
        {
          "value": "TYPE_CHECKING",
          "children": []
        },
        {
          "value": "from .graph import NodeModel",
          "children": [
            {
              "value": "from .graph import NodeModel",
              "children": [
                {
                  "value": ".graph",
                  "children": [
                    {
                      "value": ".",
                      "children": []
                    },
                    {
                      "value": "graph",
                      "children": [
                        {
                          "value": "graph",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "NodeModel",
                  "children": [
                    {
                      "value": "NodeModel",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "logger = logging.getLogger(__name__)",
      "children": [
        {
          "value": "logger = logging.getLogger(__name__)",
          "children": [
            {
              "value": "logger",
              "children": []
            },
            {
              "value": "logging.getLogger(__name__)",
              "children": [
                {
                  "value": "logging.getLogger",
                  "children": [
                    {
                      "value": "logging",
                      "children": []
                    },
                    {
                      "value": "getLogger",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "(__name__)",
                  "children": [
                    {
                      "value": "__name__",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "class Webhook(BaseDbModel):\n    user_id: str\n    provider: ProviderName\n    credentials_id: str\n    webhook_type: str\n    resource: str\n    events: list[str]\n    config: dict = Field(default_factory=dict)\n    secret: str\n\n    provider_webhook_id: str\n\n    attached_nodes: Optional[list[\"NodeModel\"]] = None\n\n    @computed_field\n    @property\n    def url(self) -> str:\n        return webhook_ingress_url(self.provider.value, self.id)\n\n    @staticmethod\n    def from_db(webhook: IntegrationWebhook):\n        from .graph import NodeModel\n\n        return Webhook(\n            id=webhook.id,\n            user_id=webhook.userId,\n            provider=ProviderName(webhook.provider),\n            credentials_id=webhook.credentialsId,\n            webhook_type=webhook.webhookType,\n            resource=webhook.resource,\n            events=webhook.events,\n            config=dict(webhook.config),\n            secret=webhook.secret,\n            provider_webhook_id=webhook.providerWebhookId,\n            attached_nodes=(\n                [NodeModel.from_db(node) for node in webhook.AgentNodes]\n                if webhook.AgentNodes is not None\n                else None\n            ),\n        )",
      "children": [
        {
          "value": "Webhook",
          "children": []
        },
        {
          "value": "(BaseDbModel)",
          "children": [
            {
              "value": "BaseDbModel",
              "children": []
            }
          ]
        },
        {
          "value": "user_id: str\n    provider: ProviderName\n    credentials_id: str\n    webhook_type: str\n    resource: str\n    events: list[str]\n    config: dict = Field(default_factory=dict)\n    secret: str\n\n    provider_webhook_id: str\n\n    attached_nodes: Optional[list[\"NodeModel\"]] = None\n\n    @computed_field\n    @property\n    def url(self) -> str:\n        return webhook_ingress_url(self.provider.value, self.id)\n\n    @staticmethod\n    def from_db(webhook: IntegrationWebhook):\n        from .graph import NodeModel\n\n        return Webhook(\n            id=webhook.id,\n            user_id=webhook.userId,\n            provider=ProviderName(webhook.provider),\n            credentials_id=webhook.credentialsId,\n            webhook_type=webhook.webhookType,\n            resource=webhook.resource,\n            events=webhook.events,\n            config=dict(webhook.config),\n            secret=webhook.secret,\n            provider_webhook_id=webhook.providerWebhookId,\n            attached_nodes=(\n                [NodeModel.from_db(node) for node in webhook.AgentNodes]\n                if webhook.AgentNodes is not None\n                else None\n            ),\n        )",
          "children": [
            {
              "value": "user_id: str",
              "children": [
                {
                  "value": "user_id: str",
                  "children": [
                    {
                      "value": "user_id",
                      "children": []
                    },
                    {
                      "value": "str",
                      "children": [
                        {
                          "value": "str",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "provider: ProviderName",
              "children": [
                {
                  "value": "provider: ProviderName",
                  "children": [
                    {
                      "value": "provider",
                      "children": []
                    },
                    {
                      "value": "ProviderName",
                      "children": [
                        {
                          "value": "ProviderName",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "credentials_id: str",
              "children": [
                {
                  "value": "credentials_id: str",
                  "children": [
                    {
                      "value": "credentials_id",
                      "children": []
                    },
                    {
                      "value": "str",
                      "children": [
                        {
                          "value": "str",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "webhook_type: str",
              "children": [
                {
                  "value": "webhook_type: str",
                  "children": [
                    {
                      "value": "webhook_type",
                      "children": []
                    },
                    {
                      "value": "str",
                      "children": [
                        {
                          "value": "str",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "resource: str",
              "children": [
                {
                  "value": "resource: str",
                  "children": [
                    {
                      "value": "resource",
                      "children": []
                    },
                    {
                      "value": "str",
                      "children": [
                        {
                          "value": "str",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "events: list[str]",
              "children": [
                {
                  "value": "events: list[str]",
                  "children": [
                    {
                      "value": "events",
                      "children": []
                    },
                    {
                      "value": "list[str]",
                      "children": [
                        {
                          "value": "list[str]",
                          "children": [
                            {
                              "value": "list",
                              "children": []
                            },
                            {
                              "value": "[str]",
                              "children": [
                                {
                                  "value": "str",
                                  "children": [
                                    {
                                      "value": "str",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "config: dict = Field(default_factory=dict)",
              "children": [
                {
                  "value": "config: dict = Field(default_factory=dict)",
                  "children": [
                    {
                      "value": "config",
                      "children": []
                    },
                    {
                      "value": "dict",
                      "children": [
                        {
                          "value": "dict",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "Field(default_factory=dict)",
                      "children": [
                        {
                          "value": "Field",
                          "children": []
                        },
                        {
                          "value": "(default_factory=dict)",
                          "children": [
                            {
                              "value": "default_factory=dict",
                              "children": [
                                {
                                  "value": "default_factory",
                                  "children": []
                                },
                                {
                                  "value": "dict",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "secret: str",
              "children": [
                {
                  "value": "secret: str",
                  "children": [
                    {
                      "value": "secret",
                      "children": []
                    },
                    {
                      "value": "str",
                      "children": [
                        {
                          "value": "str",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "provider_webhook_id: str",
              "children": [
                {
                  "value": "provider_webhook_id: str",
                  "children": [
                    {
                      "value": "provider_webhook_id",
                      "children": []
                    },
                    {
                      "value": "str",
                      "children": [
                        {
                          "value": "str",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "attached_nodes: Optional[list[\"NodeModel\"]] = None",
              "children": [
                {
                  "value": "attached_nodes: Optional[list[\"NodeModel\"]] = None",
                  "children": [
                    {
                      "value": "attached_nodes",
                      "children": []
                    },
                    {
                      "value": "Optional[list[\"NodeModel\"]]",
                      "children": [
                        {
                          "value": "Optional[list[\"NodeModel\"]]",
                          "children": [
                            {
                              "value": "Optional",
                              "children": []
                            },
                            {
                              "value": "[list[\"NodeModel\"]]",
                              "children": [
                                {
                                  "value": "list[\"NodeModel\"]",
                                  "children": [
                                    {
                                      "value": "list[\"NodeModel\"]",
                                      "children": [
                                        {
                                          "value": "list",
                                          "children": []
                                        },
                                        {
                                          "value": "[\"NodeModel\"]",
                                          "children": [
                                            {
                                              "value": "\"NodeModel\"",
                                              "children": [
                                                {
                                                  "value": "\"NodeModel\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "NodeModel",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "None",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "@computed_field\n    @property\n    def url(self) -> str:\n        return webhook_ingress_url(self.provider.value, self.id)",
              "children": [
                {
                  "value": "@computed_field",
                  "children": [
                    {
                      "value": "computed_field",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "@property",
                  "children": [
                    {
                      "value": "property",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "def url(self) -> str:\n        return webhook_ingress_url(self.provider.value, self.id)",
                  "children": [
                    {
                      "value": "url",
                      "children": []
                    },
                    {
                      "value": "(self)",
                      "children": [
                        {
                          "value": "self",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "str",
                      "children": [
                        {
                          "value": "str",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "return webhook_ingress_url(self.provider.value, self.id)",
                      "children": [
                        {
                          "value": "return webhook_ingress_url(self.provider.value, self.id)",
                          "children": [
                            {
                              "value": "webhook_ingress_url(self.provider.value, self.id)",
                              "children": [
                                {
                                  "value": "webhook_ingress_url",
                                  "children": []
                                },
                                {
                                  "value": "(self.provider.value, self.id)",
                                  "children": [
                                    {
                                      "value": "self.provider.value",
                                      "children": [
                                        {
                                          "value": "self.provider",
                                          "children": [
                                            {
                                              "value": "self",
                                              "children": []
                                            },
                                            {
                                              "value": "provider",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "value",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "self.id",
                                      "children": [
                                        {
                                          "value": "self",
                                          "children": []
                                        },
                                        {
                                          "value": "id",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "@staticmethod\n    def from_db(webhook: IntegrationWebhook):\n        from .graph import NodeModel\n\n        return Webhook(\n            id=webhook.id,\n            user_id=webhook.userId,\n            provider=ProviderName(webhook.provider),\n            credentials_id=webhook.credentialsId,\n            webhook_type=webhook.webhookType,\n            resource=webhook.resource,\n            events=webhook.events,\n            config=dict(webhook.config),\n            secret=webhook.secret,\n            provider_webhook_id=webhook.providerWebhookId,\n            attached_nodes=(\n                [NodeModel.from_db(node) for node in webhook.AgentNodes]\n                if webhook.AgentNodes is not None\n                else None\n            ),\n        )",
              "children": [
                {
                  "value": "@staticmethod",
                  "children": [
                    {
                      "value": "staticmethod",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "def from_db(webhook: IntegrationWebhook):\n        from .graph import NodeModel\n\n        return Webhook(\n            id=webhook.id,\n            user_id=webhook.userId,\n            provider=ProviderName(webhook.provider),\n            credentials_id=webhook.credentialsId,\n            webhook_type=webhook.webhookType,\n            resource=webhook.resource,\n            events=webhook.events,\n            config=dict(webhook.config),\n            secret=webhook.secret,\n            provider_webhook_id=webhook.providerWebhookId,\n            attached_nodes=(\n                [NodeModel.from_db(node) for node in webhook.AgentNodes]\n                if webhook.AgentNodes is not None\n                else None\n            ),\n        )",
                  "children": [
                    {
                      "value": "from_db",
                      "children": []
                    },
                    {
                      "value": "(webhook: IntegrationWebhook)",
                      "children": [
                        {
                          "value": "webhook: IntegrationWebhook",
                          "children": [
                            {
                              "value": "webhook",
                              "children": []
                            },
                            {
                              "value": "IntegrationWebhook",
                              "children": [
                                {
                                  "value": "IntegrationWebhook",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "from .graph import NodeModel\n\n        return Webhook(\n            id=webhook.id,\n            user_id=webhook.userId,\n            provider=ProviderName(webhook.provider),\n            credentials_id=webhook.credentialsId,\n            webhook_type=webhook.webhookType,\n            resource=webhook.resource,\n            events=webhook.events,\n            config=dict(webhook.config),\n            secret=webhook.secret,\n            provider_webhook_id=webhook.providerWebhookId,\n            attached_nodes=(\n                [NodeModel.from_db(node) for node in webhook.AgentNodes]\n                if webhook.AgentNodes is not None\n                else None\n            ),\n        )",
                      "children": [
                        {
                          "value": "from .graph import NodeModel",
                          "children": [
                            {
                              "value": ".graph",
                              "children": [
                                {
                                  "value": ".",
                                  "children": []
                                },
                                {
                                  "value": "graph",
                                  "children": [
                                    {
                                      "value": "graph",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "NodeModel",
                              "children": [
                                {
                                  "value": "NodeModel",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "return Webhook(\n            id=webhook.id,\n            user_id=webhook.userId,\n            provider=ProviderName(webhook.provider),\n            credentials_id=webhook.credentialsId,\n            webhook_type=webhook.webhookType,\n            resource=webhook.resource,\n            events=webhook.events,\n            config=dict(webhook.config),\n            secret=webhook.secret,\n            provider_webhook_id=webhook.providerWebhookId,\n            attached_nodes=(\n                [NodeModel.from_db(node) for node in webhook.AgentNodes]\n                if webhook.AgentNodes is not None\n                else None\n            ),\n        )",
                          "children": [
                            {
                              "value": "Webhook(\n            id=webhook.id,\n            user_id=webhook.userId,\n            provider=ProviderName(webhook.provider),\n            credentials_id=webhook.credentialsId,\n            webhook_type=webhook.webhookType,\n            resource=webhook.resource,\n            events=webhook.events,\n            config=dict(webhook.config),\n            secret=webhook.secret,\n            provider_webhook_id=webhook.providerWebhookId,\n            attached_nodes=(\n                [NodeModel.from_db(node) for node in webhook.AgentNodes]\n                if webhook.AgentNodes is not None\n                else None\n            ),\n        )",
                              "children": [
                                {
                                  "value": "Webhook",
                                  "children": []
                                },
                                {
                                  "value": "(\n            id=webhook.id,\n            user_id=webhook.userId,\n            provider=ProviderName(webhook.provider),\n            credentials_id=webhook.credentialsId,\n            webhook_type=webhook.webhookType,\n            resource=webhook.resource,\n            events=webhook.events,\n            config=dict(webhook.config),\n            secret=webhook.secret,\n            provider_webhook_id=webhook.providerWebhookId,\n            attached_nodes=(\n                [NodeModel.from_db(node) for node in webhook.AgentNodes]\n                if webhook.AgentNodes is not None\n                else None\n            ),\n        )",
                                  "children": [
                                    {
                                      "value": "id=webhook.id",
                                      "children": [
                                        {
                                          "value": "id",
                                          "children": []
                                        },
                                        {
                                          "value": "webhook.id",
                                          "children": [
                                            {
                                              "value": "webhook",
                                              "children": []
                                            },
                                            {
                                              "value": "id",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "user_id=webhook.userId",
                                      "children": [
                                        {
                                          "value": "user_id",
                                          "children": []
                                        },
                                        {
                                          "value": "webhook.userId",
                                          "children": [
                                            {
                                              "value": "webhook",
                                              "children": []
                                            },
                                            {
                                              "value": "userId",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "provider=ProviderName(webhook.provider)",
                                      "children": [
                                        {
                                          "value": "provider",
                                          "children": []
                                        },
                                        {
                                          "value": "ProviderName(webhook.provider)",
                                          "children": [
                                            {
                                              "value": "ProviderName",
                                              "children": []
                                            },
                                            {
                                              "value": "(webhook.provider)",
                                              "children": [
                                                {
                                                  "value": "webhook.provider",
                                                  "children": [
                                                    {
                                                      "value": "webhook",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "provider",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "credentials_id=webhook.credentialsId",
                                      "children": [
                                        {
                                          "value": "credentials_id",
                                          "children": []
                                        },
                                        {
                                          "value": "webhook.credentialsId",
                                          "children": [
                                            {
                                              "value": "webhook",
                                              "children": []
                                            },
                                            {
                                              "value": "credentialsId",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "webhook_type=webhook.webhookType",
                                      "children": [
                                        {
                                          "value": "webhook_type",
                                          "children": []
                                        },
                                        {
                                          "value": "webhook.webhookType",
                                          "children": [
                                            {
                                              "value": "webhook",
                                              "children": []
                                            },
                                            {
                                              "value": "webhookType",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "resource=webhook.resource",
                                      "children": [
                                        {
                                          "value": "resource",
                                          "children": []
                                        },
                                        {
                                          "value": "webhook.resource",
                                          "children": [
                                            {
                                              "value": "webhook",
                                              "children": []
                                            },
                                            {
                                              "value": "resource",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "events=webhook.events",
                                      "children": [
                                        {
                                          "value": "events",
                                          "children": []
                                        },
                                        {
                                          "value": "webhook.events",
                                          "children": [
                                            {
                                              "value": "webhook",
                                              "children": []
                                            },
                                            {
                                              "value": "events",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "config=dict(webhook.config)",
                                      "children": [
                                        {
                                          "value": "config",
                                          "children": []
                                        },
                                        {
                                          "value": "dict(webhook.config)",
                                          "children": [
                                            {
                                              "value": "dict",
                                              "children": []
                                            },
                                            {
                                              "value": "(webhook.config)",
                                              "children": [
                                                {
                                                  "value": "webhook.config",
                                                  "children": [
                                                    {
                                                      "value": "webhook",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "config",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "secret=webhook.secret",
                                      "children": [
                                        {
                                          "value": "secret",
                                          "children": []
                                        },
                                        {
                                          "value": "webhook.secret",
                                          "children": [
                                            {
                                              "value": "webhook",
                                              "children": []
                                            },
                                            {
                                              "value": "secret",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "provider_webhook_id=webhook.providerWebhookId",
                                      "children": [
                                        {
                                          "value": "provider_webhook_id",
                                          "children": []
                                        },
                                        {
                                          "value": "webhook.providerWebhookId",
                                          "children": [
                                            {
                                              "value": "webhook",
                                              "children": []
                                            },
                                            {
                                              "value": "providerWebhookId",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "attached_nodes=(\n                [NodeModel.from_db(node) for node in webhook.AgentNodes]\n                if webhook.AgentNodes is not None\n                else None\n            )",
                                      "children": [
                                        {
                                          "value": "attached_nodes",
                                          "children": []
                                        },
                                        {
                                          "value": "(\n                [NodeModel.from_db(node) for node in webhook.AgentNodes]\n                if webhook.AgentNodes is not None\n                else None\n            )",
                                          "children": [
                                            {
                                              "value": "[NodeModel.from_db(node) for node in webhook.AgentNodes]\n                if webhook.AgentNodes is not None\n                else None",
                                              "children": [
                                                {
                                                  "value": "[NodeModel.from_db(node) for node in webhook.AgentNodes]",
                                                  "children": [
                                                    {
                                                      "value": "NodeModel.from_db(node)",
                                                      "children": [
                                                        {
                                                          "value": "NodeModel.from_db",
                                                          "children": [
                                                            {
                                                              "value": "NodeModel",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "from_db",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "(node)",
                                                          "children": [
                                                            {
                                                              "value": "node",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "for node in webhook.AgentNodes",
                                                      "children": [
                                                        {
                                                          "value": "node",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "webhook.AgentNodes",
                                                          "children": [
                                                            {
                                                              "value": "webhook",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "AgentNodes",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "webhook.AgentNodes is not None",
                                                  "children": [
                                                    {
                                                      "value": "webhook.AgentNodes",
                                                      "children": [
                                                        {
                                                          "value": "webhook",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "AgentNodes",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "None",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "None",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "# --------------------- CRUD functions --------------------- #",
      "children": []
    },
    {
      "value": "async def create_webhook(webhook: Webhook) -> Webhook:\n    created_webhook = await IntegrationWebhook.prisma().create(\n        data={\n            \"id\": webhook.id,\n            \"userId\": webhook.user_id,\n            \"provider\": webhook.provider.value,\n            \"credentialsId\": webhook.credentials_id,\n            \"webhookType\": webhook.webhook_type,\n            \"resource\": webhook.resource,\n            \"events\": webhook.events,\n            \"config\": Json(webhook.config),\n            \"secret\": webhook.secret,\n            \"providerWebhookId\": webhook.provider_webhook_id,\n        }\n    )\n    return Webhook.from_db(created_webhook)",
      "children": [
        {
          "value": "create_webhook",
          "children": []
        },
        {
          "value": "(webhook: Webhook)",
          "children": [
            {
              "value": "webhook: Webhook",
              "children": [
                {
                  "value": "webhook",
                  "children": []
                },
                {
                  "value": "Webhook",
                  "children": [
                    {
                      "value": "Webhook",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "Webhook",
          "children": [
            {
              "value": "Webhook",
              "children": []
            }
          ]
        },
        {
          "value": "created_webhook = await IntegrationWebhook.prisma().create(\n        data={\n            \"id\": webhook.id,\n            \"userId\": webhook.user_id,\n            \"provider\": webhook.provider.value,\n            \"credentialsId\": webhook.credentials_id,\n            \"webhookType\": webhook.webhook_type,\n            \"resource\": webhook.resource,\n            \"events\": webhook.events,\n            \"config\": Json(webhook.config),\n            \"secret\": webhook.secret,\n            \"providerWebhookId\": webhook.provider_webhook_id,\n        }\n    )\n    return Webhook.from_db(created_webhook)",
          "children": [
            {
              "value": "created_webhook = await IntegrationWebhook.prisma().create(\n        data={\n            \"id\": webhook.id,\n            \"userId\": webhook.user_id,\n            \"provider\": webhook.provider.value,\n            \"credentialsId\": webhook.credentials_id,\n            \"webhookType\": webhook.webhook_type,\n            \"resource\": webhook.resource,\n            \"events\": webhook.events,\n            \"config\": Json(webhook.config),\n            \"secret\": webhook.secret,\n            \"providerWebhookId\": webhook.provider_webhook_id,\n        }\n    )",
              "children": [
                {
                  "value": "created_webhook = await IntegrationWebhook.prisma().create(\n        data={\n            \"id\": webhook.id,\n            \"userId\": webhook.user_id,\n            \"provider\": webhook.provider.value,\n            \"credentialsId\": webhook.credentials_id,\n            \"webhookType\": webhook.webhook_type,\n            \"resource\": webhook.resource,\n            \"events\": webhook.events,\n            \"config\": Json(webhook.config),\n            \"secret\": webhook.secret,\n            \"providerWebhookId\": webhook.provider_webhook_id,\n        }\n    )",
                  "children": [
                    {
                      "value": "created_webhook",
                      "children": []
                    },
                    {
                      "value": "await IntegrationWebhook.prisma().create(\n        data={\n            \"id\": webhook.id,\n            \"userId\": webhook.user_id,\n            \"provider\": webhook.provider.value,\n            \"credentialsId\": webhook.credentials_id,\n            \"webhookType\": webhook.webhook_type,\n            \"resource\": webhook.resource,\n            \"events\": webhook.events,\n            \"config\": Json(webhook.config),\n            \"secret\": webhook.secret,\n            \"providerWebhookId\": webhook.provider_webhook_id,\n        }\n    )",
                      "children": [
                        {
                          "value": "IntegrationWebhook.prisma().create(\n        data={\n            \"id\": webhook.id,\n            \"userId\": webhook.user_id,\n            \"provider\": webhook.provider.value,\n            \"credentialsId\": webhook.credentials_id,\n            \"webhookType\": webhook.webhook_type,\n            \"resource\": webhook.resource,\n            \"events\": webhook.events,\n            \"config\": Json(webhook.config),\n            \"secret\": webhook.secret,\n            \"providerWebhookId\": webhook.provider_webhook_id,\n        }\n    )",
                          "children": [
                            {
                              "value": "IntegrationWebhook.prisma().create",
                              "children": [
                                {
                                  "value": "IntegrationWebhook.prisma()",
                                  "children": [
                                    {
                                      "value": "IntegrationWebhook.prisma",
                                      "children": [
                                        {
                                          "value": "IntegrationWebhook",
                                          "children": []
                                        },
                                        {
                                          "value": "prisma",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "()",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "create",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\n        data={\n            \"id\": webhook.id,\n            \"userId\": webhook.user_id,\n            \"provider\": webhook.provider.value,\n            \"credentialsId\": webhook.credentials_id,\n            \"webhookType\": webhook.webhook_type,\n            \"resource\": webhook.resource,\n            \"events\": webhook.events,\n            \"config\": Json(webhook.config),\n            \"secret\": webhook.secret,\n            \"providerWebhookId\": webhook.provider_webhook_id,\n        }\n    )",
                              "children": [
                                {
                                  "value": "data={\n            \"id\": webhook.id,\n            \"userId\": webhook.user_id,\n            \"provider\": webhook.provider.value,\n            \"credentialsId\": webhook.credentials_id,\n            \"webhookType\": webhook.webhook_type,\n            \"resource\": webhook.resource,\n            \"events\": webhook.events,\n            \"config\": Json(webhook.config),\n            \"secret\": webhook.secret,\n            \"providerWebhookId\": webhook.provider_webhook_id,\n        }",
                                  "children": [
                                    {
                                      "value": "data",
                                      "children": []
                                    },
                                    {
                                      "value": "{\n            \"id\": webhook.id,\n            \"userId\": webhook.user_id,\n            \"provider\": webhook.provider.value,\n            \"credentialsId\": webhook.credentials_id,\n            \"webhookType\": webhook.webhook_type,\n            \"resource\": webhook.resource,\n            \"events\": webhook.events,\n            \"config\": Json(webhook.config),\n            \"secret\": webhook.secret,\n            \"providerWebhookId\": webhook.provider_webhook_id,\n        }",
                                      "children": [
                                        {
                                          "value": "\"id\": webhook.id",
                                          "children": [
                                            {
                                              "value": "\"id\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "id",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "webhook.id",
                                              "children": [
                                                {
                                                  "value": "webhook",
                                                  "children": []
                                                },
                                                {
                                                  "value": "id",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"userId\": webhook.user_id",
                                          "children": [
                                            {
                                              "value": "\"userId\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "userId",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "webhook.user_id",
                                              "children": [
                                                {
                                                  "value": "webhook",
                                                  "children": []
                                                },
                                                {
                                                  "value": "user_id",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"provider\": webhook.provider.value",
                                          "children": [
                                            {
                                              "value": "\"provider\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "provider",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "webhook.provider.value",
                                              "children": [
                                                {
                                                  "value": "webhook.provider",
                                                  "children": [
                                                    {
                                                      "value": "webhook",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "provider",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "value",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"credentialsId\": webhook.credentials_id",
                                          "children": [
                                            {
                                              "value": "\"credentialsId\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "credentialsId",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "webhook.credentials_id",
                                              "children": [
                                                {
                                                  "value": "webhook",
                                                  "children": []
                                                },
                                                {
                                                  "value": "credentials_id",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"webhookType\": webhook.webhook_type",
                                          "children": [
                                            {
                                              "value": "\"webhookType\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "webhookType",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "webhook.webhook_type",
                                              "children": [
                                                {
                                                  "value": "webhook",
                                                  "children": []
                                                },
                                                {
                                                  "value": "webhook_type",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"resource\": webhook.resource",
                                          "children": [
                                            {
                                              "value": "\"resource\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "resource",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "webhook.resource",
                                              "children": [
                                                {
                                                  "value": "webhook",
                                                  "children": []
                                                },
                                                {
                                                  "value": "resource",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"events\": webhook.events",
                                          "children": [
                                            {
                                              "value": "\"events\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "events",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "webhook.events",
                                              "children": [
                                                {
                                                  "value": "webhook",
                                                  "children": []
                                                },
                                                {
                                                  "value": "events",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"config\": Json(webhook.config)",
                                          "children": [
                                            {
                                              "value": "\"config\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "config",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "Json(webhook.config)",
                                              "children": [
                                                {
                                                  "value": "Json",
                                                  "children": []
                                                },
                                                {
                                                  "value": "(webhook.config)",
                                                  "children": [
                                                    {
                                                      "value": "webhook.config",
                                                      "children": [
                                                        {
                                                          "value": "webhook",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "config",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"secret\": webhook.secret",
                                          "children": [
                                            {
                                              "value": "\"secret\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "secret",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "webhook.secret",
                                              "children": [
                                                {
                                                  "value": "webhook",
                                                  "children": []
                                                },
                                                {
                                                  "value": "secret",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"providerWebhookId\": webhook.provider_webhook_id",
                                          "children": [
                                            {
                                              "value": "\"providerWebhookId\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "providerWebhookId",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "webhook.provider_webhook_id",
                                              "children": [
                                                {
                                                  "value": "webhook",
                                                  "children": []
                                                },
                                                {
                                                  "value": "provider_webhook_id",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "return Webhook.from_db(created_webhook)",
              "children": [
                {
                  "value": "Webhook.from_db(created_webhook)",
                  "children": [
                    {
                      "value": "Webhook.from_db",
                      "children": [
                        {
                          "value": "Webhook",
                          "children": []
                        },
                        {
                          "value": "from_db",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "(created_webhook)",
                      "children": [
                        {
                          "value": "created_webhook",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "async def get_webhook(webhook_id: str) -> Webhook:\n    \"\"\"\u26a0\ufe0f No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\n    webhook = await IntegrationWebhook.prisma().find_unique_or_raise(\n        where={\"id\": webhook_id},\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )\n    return Webhook.from_db(webhook)\n\n\na",
      "children": [
        {
          "value": "get_webhook",
          "children": []
        },
        {
          "value": "(webhook_id: str)",
          "children": [
            {
              "value": "webhook_id: str",
              "children": [
                {
                  "value": "webhook_id",
                  "children": []
                },
                {
                  "value": "str",
                  "children": [
                    {
                      "value": "str",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "Webhook",
          "children": [
            {
              "value": "Webhook",
              "children": []
            }
          ]
        },
        {
          "value": "\"\"\"\u26a0\ufe0f No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\n    webhook = await IntegrationWebhook.prisma().find_unique_or_raise(\n        where={\"id\": webhook_id},\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )\n    return Webhook.from_db(webhook)\n\n\na",
          "children": [
            {
              "value": "\"\"\"\u26a0\ufe0f No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"",
              "children": [
                {
                  "value": "\"\"\"\u26a0\ufe0f No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"",
                  "children": [
                    {
                      "value": "\"\"\"",
                      "children": []
                    },
                    {
                      "value": "\u26a0\ufe0f No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"",
                      "children": []
                    },
                    {
                      "value": "",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "ook = await IntegrationWebhook.prisma().find_unique_or_raise(\n        where={\"id\": webhook_id},\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )",
              "children": [
                {
                  "value": "ook = await IntegrationWebhook.prisma().find_unique_or_raise(\n        where={\"id\": webhook_id},\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )",
                  "children": [
                    {
                      "value": "ook = a",
                      "children": []
                    },
                    {
                      "value": "t IntegrationWebhook.prisma().find_unique_or_raise(\n        where={\"id\": webhook_id},\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )",
                      "children": [
                        {
                          "value": "grationWebhook.prisma().find_unique_or_raise(\n        where={\"id\": webhook_id},\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )",
                          "children": [
                            {
                              "value": "grationWebhook.prisma().find_unique_or_raise(",
                              "children": [
                                {
                                  "value": "grationWebhook.prisma().fin",
                                  "children": [
                                    {
                                      "value": "grationWebhook.prisma().f",
                                      "children": [
                                        {
                                          "value": "grationWebhook.pri",
                                          "children": []
                                        },
                                        {
                                          "value": "ma().f",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "in",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "_unique_or_raise(",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "where={\"id\": webhook_id},\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )",
                              "children": [
                                {
                                  "value": "e={\"id\": webhook_id},",
                                  "children": [
                                    {
                                      "value": "e={\"i",
                                      "children": []
                                    },
                                    {
                                      "value": "\": webhook_id},",
                                      "children": [
                                        {
                                          "value": ": webhook_id},",
                                          "children": [
                                            {
                                              "value": ": we",
                                              "children": [
                                                {
                                                  "value": ":",
                                                  "children": []
                                                },
                                                {
                                                  "value": "w",
                                                  "children": []
                                                },
                                                {
                                                  "value": "e",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "ook_id},",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "ude=INTEGRATION_WEBHOOK_INCLUDE,",
                                  "children": [
                                    {
                                      "value": "ude=INT",
                                      "children": []
                                    },
                                    {
                                      "value": "GRATION_WEBHOOK_INCLUDE,",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "rn Webhook.from_db(webhook)\n\n\na",
              "children": [
                {
                  "value": "ook.from_db(webhook)\n\n\na",
                  "children": [
                    {
                      "value": "ook.from_db(web",
                      "children": [
                        {
                          "value": "ook.fro",
                          "children": []
                        },
                        {
                          "value": "_db(web",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "hook)\n\n\na",
                      "children": [
                        {
                          "value": "ook)",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "c def get_all_webhooks_by_creds(credentials_id: str) -> list[Webhook]:\n    \"\"\"\u26a0\ufe0f No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\n    if not credentials_id:\n        raise ValueError(\"credentials_id must not be empty\")\n    webhooks = await IntegrationWebhook.prisma().find_many(\n        where={\"credentialsId\": credentials_id},\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )\n    return [Webhook.from_db(webhook) for webhook in webhooks]\n\n\nasync",
      "children": [
        {
          "value": "all_webhooks_by_creds(cre",
          "children": []
        },
        {
          "value": "dentials_id: str) ->",
          "children": [
            {
              "value": "entials_id: str) ->",
              "children": [
                {
                  "value": "entials_id: st",
                  "children": []
                },
                {
                  "value": "->",
                  "children": [
                    {
                      "value": "->",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "[Webhook]:",
          "children": [
            {
              "value": "[Webhook]:",
              "children": [
                {
                  "value": "[Web",
                  "children": []
                },
                {
                  "value": "hook]:",
                  "children": [
                    {
                      "value": "ook]:",
                      "children": [
                        {
                          "value": "ook]:",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "\ufe0f No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\n    if not credentials_id:\n        raise ValueError(\"credentials_id must not be empty\")\n    webhooks = await IntegrationWebhook.prisma().find_many(\n        where={\"credentialsId\": credentials_id},\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )\n    return [Webhook.from_db(webhook) for webhook in webhooks]\n\n\nasync",
          "children": [
            {
              "value": "\ufe0f No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\n    if",
              "children": [
                {
                  "value": "\ufe0f No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\n    if",
                  "children": [
                    {
                      "value": "\ufe0f N",
                      "children": []
                    },
                    {
                      "value": "o `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"",
                      "children": []
                    },
                    {
                      "value": "if",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "redentials_id:\n        raise ValueError(\"credentials_id must not be empty\")\n    web",
              "children": [
                {
                  "value": "entials_id:",
                  "children": [
                    {
                      "value": "als_id:",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "lueError(\"credentials_id must not be empty\")\n    web",
                  "children": [
                    {
                      "value": "lueError(\"credentials_id must not be empty\")\n    web",
                      "children": [
                        {
                          "value": "or(\"credentials_id must not be empty\")\n    web",
                          "children": [
                            {
                              "value": "or(\"creden",
                              "children": []
                            },
                            {
                              "value": "tials_id must not be empty\")\n    web",
                              "children": [
                                {
                                  "value": "ials_id must not be empty\")\n    we",
                                  "children": [
                                    {
                                      "value": "i",
                                      "children": []
                                    },
                                    {
                                      "value": "als_id must not be empty\")\n    w",
                                      "children": []
                                    },
                                    {
                                      "value": "e",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "= await IntegrationWebhook.prisma().find_many(\n        where={\"credentialsId\": credentials_id},\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )\n    ret",
              "children": [
                {
                  "value": "= await IntegrationWebhook.prisma().find_many(\n        where={\"credentialsId\": credentials_id},\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )\n    ret",
                  "children": [
                    {
                      "value": "= await",
                      "children": []
                    },
                    {
                      "value": "tegrationWebhook.prisma().find_many(\n        where={\"credentialsId\": credentials_id},\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )\n    ret",
                      "children": [
                        {
                          "value": "ionWebhook.prisma().find_many(\n        where={\"credentialsId\": credentials_id},\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )\n    ret",
                          "children": [
                            {
                              "value": "ionWebhook.prisma().find_many(",
                              "children": [
                                {
                                  "value": "ionWebhook.prisma().find_ma",
                                  "children": [
                                    {
                                      "value": "ionWebhook.prisma().find_",
                                      "children": [
                                        {
                                          "value": "ionWebhook.prisma(",
                                          "children": []
                                        },
                                        {
                                          "value": ".find_",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "ma",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "y(",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "where={\"credentialsId\": credentials_id},\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )\n    ret",
                              "children": [
                                {
                                  "value": "credentialsId\": credentials_id},",
                                  "children": [
                                    {
                                      "value": "crede",
                                      "children": []
                                    },
                                    {
                                      "value": "tialsId\": credentials_id},",
                                      "children": [
                                        {
                                          "value": "ialsId\": credentials_id},",
                                          "children": [
                                            {
                                              "value": "ialsId\": creden",
                                              "children": [
                                                {
                                                  "value": "i",
                                                  "children": []
                                                },
                                                {
                                                  "value": "alsId\": crede",
                                                  "children": []
                                                },
                                                {
                                                  "value": "n",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "als_id},",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "INTEGRATION_WEBHOOK_INCLUDE,\n    )",
                                  "children": [
                                    {
                                      "value": "INTEGRA",
                                      "children": []
                                    },
                                    {
                                      "value": "ION_WEBHOOK_INCLUDE,\n    )",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "Webhook.from_db(webhook) for webhook in webhooks]\n\n\nasync",
              "children": [
                {
                  "value": ".from_db(webhook) for webhook in webhooks]\n\n\nasync",
                  "children": [
                    {
                      "value": "from_db(webhook) for web",
                      "children": [
                        {
                          "value": "from_db(webhook",
                          "children": [
                            {
                              "value": "from_db",
                              "children": []
                            },
                            {
                              "value": "webhook",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": ") for web",
                          "children": [
                            {
                              "value": "for we",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "ook in webhooks]\n\n\nasyn",
                      "children": [
                        {
                          "value": "in webh",
                          "children": []
                        },
                        {
                          "value": "]\n\n\nasyn",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "f find_webhook_by_credentials_and_props(\n    credentials_id: str, webhook_type: str, resource: str, events: list[str]\n) -> Webhook | None:\n    \"\"\"\u26a0\ufe0f No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\n    webhook = await IntegrationWebhook.prisma().find_first(\n        where={\n            \"credentialsId\": credentials_id,\n            \"webhookType\": webhook_type,\n            \"resource\": resource,\n            \"events\": {\"has_every\": events},\n        },\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )\n    return Webhook.from_db(webhook) if webhook else None\n\n\nasync def",
      "children": [
        {
          "value": "hook_by_credentials_and_props(\n    cr",
          "children": []
        },
        {
          "value": "edentials_id: str, webhook_type: str, resource: str, events: list[str]\n) -> Webh",
          "children": [
            {
              "value": "als_id: str, webhoo",
              "children": [
                {
                  "value": "als_id: str, w",
                  "children": []
                },
                {
                  "value": "hoo",
                  "children": [
                    {
                      "value": "hoo",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "type: str, resour",
              "children": [
                {
                  "value": "type: str, r",
                  "children": []
                },
                {
                  "value": "our",
                  "children": [
                    {
                      "value": "our",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": ": str, events",
              "children": [
                {
                  "value": ": str, e",
                  "children": []
                },
                {
                  "value": "nts",
                  "children": [
                    {
                      "value": "nts",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "list[str]\n) -> We",
              "children": [
                {
                  "value": "list[s",
                  "children": []
                },
                {
                  "value": "]\n) -> We",
                  "children": [
                    {
                      "value": "]\n) -> We",
                      "children": [
                        {
                          "value": "]\n)",
                          "children": []
                        },
                        {
                          "value": "-> We",
                          "children": [
                            {
                              "value": "> W",
                              "children": [
                                {
                                  "value": "> W",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "| None:\n    \"\"",
          "children": [
            {
              "value": "| None:\n    \"\"",
              "children": [
                {
                  "value": "| None:",
                  "children": []
                },
                {
                  "value": "\"\"",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "`user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\n    webhook = await IntegrationWebhook.prisma().find_first(\n        where={\n            \"credentialsId\": credentials_id,\n            \"webhookType\": webhook_type,\n            \"resource\": resource,\n            \"events\": {\"has_every\": events},\n        },\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )\n    return Webhook.from_db(webhook) if webhook else None\n\n\nasync def",
          "children": [
            {
              "value": "`user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\n    webhook",
              "children": [
                {
                  "value": "`user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\n    webhook",
                  "children": [
                    {
                      "value": "`u",
                      "children": []
                    },
                    {
                      "value": "ser_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\n    webh",
                      "children": []
                    },
                    {
                      "value": "ook",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "ait IntegrationWebhook.prisma().find_first(\n        where={\n            \"credentialsId\": credentials_id,\n            \"webhookType\": webhook_type,\n            \"resource\": resource,\n            \"events\": {\"has_every\": events},\n        },\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )\n    return",
              "children": [
                {
                  "value": "ait IntegrationWebhook.prisma().find_first(\n        where={\n            \"credentialsId\": credentials_id,\n            \"webhookType\": webhook_type,\n            \"resource\": resource,\n            \"events\": {\"has_every\": events},\n        },\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )\n    return",
                  "children": [
                    {
                      "value": "ait Int",
                      "children": []
                    },
                    {
                      "value": "ationWebhook.prisma().find_first(\n        where={\n            \"credentialsId\": credentials_id,\n            \"webhookType\": webhook_type,\n            \"resource\": resource,\n            \"events\": {\"has_every\": events},\n        },\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )\n    return",
                      "children": [
                        {
                          "value": "ebhook.prisma().find_first(\n        where={\n            \"credentialsId\": credentials_id,\n            \"webhookType\": webhook_type,\n            \"resource\": resource,\n            \"events\": {\"has_every\": events},\n        },\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )\n    return",
                          "children": [
                            {
                              "value": "ebhook.prisma().find_first(\n        wh",
                              "children": [
                                {
                                  "value": "ebhook.prisma().find_first(",
                                  "children": [
                                    {
                                      "value": "ebhook.prisma().find_firs",
                                      "children": [
                                        {
                                          "value": "ebhook.prisma().fi",
                                          "children": []
                                        },
                                        {
                                          "value": "d_firs",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "t(",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "wh",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "ere={\n            \"credentialsId\": credentials_id,\n            \"webhookType\": webhook_type,\n            \"resource\": resource,\n            \"events\": {\"has_every\": events},\n        },\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )\n    return",
                              "children": [
                                {
                                  "value": "\"credentialsId\": credentials_id,\n            \"webhookType\": webhook_type,\n            \"resource\": resource,\n            \"events\": {\"has_every\": events},\n        },\n        in",
                                  "children": [
                                    {
                                      "value": "",
                                      "children": []
                                    },
                                    {
                                      "value": "\"credentialsId\": credentials_id,\n            \"webhookType\": webhook_type,\n            \"resource\": resource,\n            \"events\": {\"has_every\": events},\n        },\n        in",
                                      "children": [
                                        {
                                          "value": "Id\": credentials_id,",
                                          "children": [
                                            {
                                              "value": "Id\": credential",
                                              "children": [
                                                {
                                                  "value": "I",
                                                  "children": []
                                                },
                                                {
                                                  "value": "d\": credentia",
                                                  "children": []
                                                },
                                                {
                                                  "value": "l",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "id,",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\": webhook_type,",
                                          "children": [
                                            {
                                              "value": "\": webhook_ty",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": ": webhook_t",
                                                  "children": []
                                                },
                                                {
                                                  "value": "y",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": ",",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "resource,",
                                          "children": [
                                            {
                                              "value": "resource,",
                                              "children": [
                                                {
                                                  "value": "r",
                                                  "children": []
                                                },
                                                {
                                                  "value": "esource,",
                                                  "children": []
                                                },
                                                {
                                                  "value": "",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "has_every\": events},\n        },",
                                          "children": [
                                            {
                                              "value": "has_ever",
                                              "children": [
                                                {
                                                  "value": "h",
                                                  "children": []
                                                },
                                                {
                                                  "value": "as_eve",
                                                  "children": []
                                                },
                                                {
                                                  "value": "r",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": ": events},\n        },",
                                              "children": [
                                                {
                                                  "value": "events},\n        }",
                                                  "children": [
                                                    {
                                                      "value": "events},",
                                                      "children": [
                                                        {
                                                          "value": "",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "events},",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "}",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "GRATION_WEBHOOK_INCLUDE,\n    )",
                                  "children": [
                                    {
                                      "value": "GRATION",
                                      "children": []
                                    },
                                    {
                                      "value": "WEBHOOK_INCLUDE,\n    )",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "ok.from_db(webhook) if webhook else None\n\n\nasync def",
              "children": [
                {
                  "value": "_db(webhook) if webhook else None\n\n\nasync def",
                  "children": [
                    {
                      "value": "_db(webhook) if webhook",
                      "children": [
                        {
                          "value": "_db(webhook) if",
                          "children": [
                            {
                              "value": "_db(web",
                              "children": []
                            },
                            {
                              "value": "ook) if",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "webhook",
                          "children": [
                            {
                              "value": "webhook",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "None",
                      "children": []
                    },
                    {
                      "value": "def",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "nd_webhook_by_graph_and_props(\n    graph_id: str, provider: str, webhook_type: str, events: list[str]\n) -> Webhook | None:\n    \"\"\"\u26a0\ufe0f No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\n    webhook = await IntegrationWebhook.prisma().find_first(\n        where={\n            \"provider\": provider,\n            \"webhookType\": webhook_type,\n            \"events\": {\"has_every\": events},\n            \"AgentNodes\": {\"some\": {\"agentGraphId\": graph_id}},\n        },\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )\n    return Webhook.from_db(webhook) if webhook else None\n\n\nasync def upd",
      "children": [
        {
          "value": "_by_graph_and_props(\n    graph_",
          "children": []
        },
        {
          "value": "id: str, provider: str, webhook_type: str, events: list[str]\n) -> Webhook",
          "children": [
            {
              "value": "r, provider:",
              "children": [
                {
                  "value": "r, provi",
                  "children": []
                },
                {
                  "value": "r:",
                  "children": [
                    {
                      "value": "r:",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "r, webhook_ty",
              "children": [
                {
                  "value": "r, webho",
                  "children": []
                },
                {
                  "value": "_ty",
                  "children": [
                    {
                      "value": "_ty",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": ": str, events: li",
              "children": [
                {
                  "value": ": str, event",
                  "children": []
                },
                {
                  "value": "li",
                  "children": [
                    {
                      "value": "li",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "[str]\n) -> Webhoo",
              "children": [
                {
                  "value": "[str]",
                  "children": []
                },
                {
                  "value": "-> Webhoo",
                  "children": [
                    {
                      "value": "-> Webhoo",
                      "children": [
                        {
                          "value": "-> W",
                          "children": []
                        },
                        {
                          "value": "ebhoo",
                          "children": [
                            {
                              "value": "bho",
                              "children": [
                                {
                                  "value": "bho",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "ne:\n    \"\"\"\u26a0\ufe0f",
          "children": [
            {
              "value": "ne:\n    \"\"\"\u26a0\ufe0f",
              "children": [
                {
                  "value": "ne:",
                  "children": []
                },
                {
                  "value": "\"\u26a0\ufe0f",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "er_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\n    webhook = await IntegrationWebhook.prisma().find_first(\n        where={\n            \"provider\": provider,\n            \"webhookType\": webhook_type,\n            \"events\": {\"has_every\": events},\n            \"AgentNodes\": {\"some\": {\"agentGraphId\": graph_id}},\n        },\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )\n    return Webhook.from_db(webhook) if webhook else None\n\n\nasync def upd",
          "children": [
            {
              "value": "er_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\n    webhook = a",
              "children": [
                {
                  "value": "er_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\n    webhook = a",
                  "children": [
                    {
                      "value": "er_",
                      "children": []
                    },
                    {
                      "value": "id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\n    webhook",
                      "children": []
                    },
                    {
                      "value": "= a",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "IntegrationWebhook.prisma().find_first(\n        where={\n            \"provider\": provider,\n            \"webhookType\": webhook_type,\n            \"events\": {\"has_every\": events},\n            \"AgentNodes\": {\"some\": {\"agentGraphId\": graph_id}},\n        },\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )\n    return Webh",
              "children": [
                {
                  "value": "IntegrationWebhook.prisma().find_first(\n        where={\n            \"provider\": provider,\n            \"webhookType\": webhook_type,\n            \"events\": {\"has_every\": events},\n            \"AgentNodes\": {\"some\": {\"agentGraphId\": graph_id}},\n        },\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )\n    return Webh",
                  "children": [
                    {
                      "value": "Integra",
                      "children": []
                    },
                    {
                      "value": "nWebhook.prisma().find_first(\n        where={\n            \"provider\": provider,\n            \"webhookType\": webhook_type,\n            \"events\": {\"has_every\": events},\n            \"AgentNodes\": {\"some\": {\"agentGraphId\": graph_id}},\n        },\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )\n    return Webh",
                      "children": [
                        {
                          "value": "ok.prisma().find_first(\n        where={\n            \"provider\": provider,\n            \"webhookType\": webhook_type,\n            \"events\": {\"has_every\": events},\n            \"AgentNodes\": {\"some\": {\"agentGraphId\": graph_id}},\n        },\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )\n    return Webh",
                          "children": [
                            {
                              "value": "ok.prisma().find_first(\n        where=",
                              "children": [
                                {
                                  "value": "ok.prisma().find_first(",
                                  "children": [
                                    {
                                      "value": "ok.prisma().find_first(",
                                      "children": [
                                        {
                                          "value": "ok.prisma().find_f",
                                          "children": []
                                        },
                                        {
                                          "value": "rst(",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "where=",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "{\n            \"provider\": provider,\n            \"webhookType\": webhook_type,\n            \"events\": {\"has_every\": events},\n            \"AgentNodes\": {\"some\": {\"agentGraphId\": graph_id}},\n        },\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )\n    return Webh",
                              "children": [
                                {
                                  "value": "\"provider\": provider,\n            \"webhookType\": webhook_type,\n            \"events\": {\"has_every\": events},\n            \"AgentNodes\": {\"some\": {\"agentGraphId\": graph_id}},\n        },\n        includ",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "rovider\": provider,\n            \"webhookType\": webhook_type,\n            \"events\": {\"has_every\": events},\n            \"AgentNodes\": {\"some\": {\"agentGraphId\": graph_id}},\n        },\n        includ",
                                      "children": [
                                        {
                                          "value": "ider,\n            \"w",
                                          "children": [
                                            {
                                              "value": "ider,",
                                              "children": [
                                                {
                                                  "value": "i",
                                                  "children": []
                                                },
                                                {
                                                  "value": "der,",
                                                  "children": []
                                                },
                                                {
                                                  "value": "",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"w",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "ebhook_type,\n            \"e",
                                          "children": [
                                            {
                                              "value": "ebhook_type,",
                                              "children": [
                                                {
                                                  "value": "e",
                                                  "children": []
                                                },
                                                {
                                                  "value": "bhook_type,",
                                                  "children": []
                                                },
                                                {
                                                  "value": "",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"e",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "every\": events},\n            \"A",
                                          "children": [
                                            {
                                              "value": "every\":",
                                              "children": [
                                                {
                                                  "value": "e",
                                                  "children": []
                                                },
                                                {
                                                  "value": "very\":",
                                                  "children": []
                                                },
                                                {
                                                  "value": "",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "ents},\n            \"A",
                                              "children": [
                                                {
                                                  "value": "nts},\n            \"",
                                                  "children": [
                                                    {
                                                      "value": "nts},",
                                                      "children": [
                                                        {
                                                          "value": "n",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "ts},",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "some\": {\"agentGraphId\": graph_id}},\n        },",
                                          "children": [
                                            {
                                              "value": "some\": {\"age",
                                              "children": [
                                                {
                                                  "value": "s",
                                                  "children": []
                                                },
                                                {
                                                  "value": "ome\": {\"ag",
                                                  "children": []
                                                },
                                                {
                                                  "value": "e",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "GraphId\": graph_id}},\n        },",
                                              "children": [
                                                {
                                                  "value": "raphId\": graph_id}},\n        },",
                                                  "children": [
                                                    {
                                                      "value": "raphId",
                                                      "children": [
                                                        {
                                                          "value": "r",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "aphI",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "d",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "graph_id}},\n        },",
                                                      "children": [
                                                        {
                                                          "value": "graph_id}},\n        },",
                                                          "children": [
                                                            {
                                                              "value": "graph_id}},",
                                                              "children": [
                                                                {
                                                                  "value": "g",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "raph_id}},",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "},",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "ION_WEBHOOK_INCLUDE,\n    )\n    retu",
                                  "children": [
                                    {
                                      "value": "ION_WEB",
                                      "children": []
                                    },
                                    {
                                      "value": "OOK_INCLUDE,\n    )\n    retu",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "rom_db(webhook) if webhook else None\n\n\nasync def upd",
              "children": [
                {
                  "value": "webhook) if webhook else None\n\n\nasync def upd",
                  "children": [
                    {
                      "value": "webhook) if webhook else",
                      "children": [
                        {
                          "value": "webhook) if web",
                          "children": [
                            {
                              "value": "webhook",
                              "children": []
                            },
                            {
                              "value": "if web",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "hook else",
                          "children": [
                            {
                              "value": "ook els",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "e\n\n\nasy",
                      "children": []
                    },
                    {
                      "value": "upd",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "_webhook_config(webhook_id: str, updated_config: dict) -> Webhook:\n    \"\"\"\u26a0\ufe0f No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\n    _updated_webhook = await IntegrationWebhook.prisma().update(\n        where={\"id\": webhook_id},\n        data={\"config\": Json(updated_config)},\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )\n    if _updated_webhook is None:\n        raise ValueError(f\"Webhook #{webhook_id} not found\")\n    return Webhook.from_db(_updated_webhook)\n\n\nasync def delete_",
      "children": [
        {
          "value": "onfig(webhook_id: str",
          "children": []
        },
        {
          "value": ", updated_config: dict) -> Webhook:",
          "children": [
            {
              "value": "updated_config",
              "children": [
                {
                  "value": "updated_c",
                  "children": []
                },
                {
                  "value": "fig",
                  "children": [
                    {
                      "value": "fig",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "dict) -> Webhook:",
              "children": [
                {
                  "value": "dict) -> Webho",
                  "children": []
                },
                {
                  "value": ":",
                  "children": [
                    {
                      "value": ":",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "\u26a0\ufe0f No `",
          "children": [
            {
              "value": "\u26a0\ufe0f No `",
              "children": []
            }
          ]
        },
        {
          "value": "d` check: DO NOT USE without check in user-facing endpoints.\"\"\"\n    _updated_webhook = await IntegrationWebhook.prisma().update(\n        where={\"id\": webhook_id},\n        data={\"config\": Json(updated_config)},\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )\n    if _updated_webhook is None:\n        raise ValueError(f\"Webhook #{webhook_id} not found\")\n    return Webhook.from_db(_updated_webhook)\n\n\nasync def delete_",
          "children": [
            {
              "value": "d` check: DO NOT USE without check in user-facing endpoints.\"\"\"\n    _updated_webhoo",
              "children": [
                {
                  "value": "d` check: DO NOT USE without check in user-facing endpoints.\"\"\"\n    _updated_webhoo",
                  "children": [
                    {
                      "value": "d`",
                      "children": []
                    },
                    {
                      "value": "check: DO NOT USE without check in user-facing endpoints.\"\"\"\n    _updated_web",
                      "children": []
                    },
                    {
                      "value": "hoo",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "wait IntegrationWebhook.prisma().update(\n        where={\"id\": webhook_id},\n        data={\"config\": Json(updated_config)},\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )\n    if _updated_web",
              "children": [
                {
                  "value": "wait IntegrationWebhook.prisma().update(\n        where={\"id\": webhook_id},\n        data={\"config\": Json(updated_config)},\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )\n    if _updated_web",
                  "children": [
                    {
                      "value": "wait Integration",
                      "children": []
                    },
                    {
                      "value": "hook.prisma().update(\n        where={\"id\": webhook_id},\n        data={\"config\": Json(updated_config)},\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )\n    if _updated_web",
                      "children": [
                        {
                          "value": "risma().update(\n        where={\"id\": webhook_id},\n        data={\"config\": Json(updated_config)},\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )\n    if _updated_web",
                          "children": [
                            {
                              "value": "risma().update(\n        where={\"id",
                              "children": [
                                {
                                  "value": "risma().update(\n        whe",
                                  "children": [
                                    {
                                      "value": "risma().update(\n        w",
                                      "children": [
                                        {
                                          "value": "risma().update(",
                                          "children": []
                                        },
                                        {
                                          "value": "w",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "he",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "e={\"id",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "\": webhook_id},\n        data={\"config\": Json(updated_config)},\n        include=INTEGRATION_WEBHOOK_INCLUDE,\n    )\n    if _updated_web",
                              "children": [
                                {
                                  "value": "_id},\n        data={\"con",
                                  "children": [
                                    {
                                      "value": "_id},",
                                      "children": []
                                    },
                                    {
                                      "value": "data={\"con",
                                      "children": [
                                        {
                                          "value": "data={\"co",
                                          "children": [
                                            {
                                              "value": "",
                                              "children": [
                                                {
                                                  "value": "",
                                                  "children": []
                                                },
                                                {
                                                  "value": "",
                                                  "children": []
                                                },
                                                {
                                                  "value": "",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "data={\"co",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "(updated_config)},\n        include=IN",
                                  "children": [
                                    {
                                      "value": "(upd",
                                      "children": []
                                    },
                                    {
                                      "value": "ted_config)},\n        include=IN",
                                      "children": [
                                        {
                                          "value": "ed_config)},\n        include=I",
                                          "children": [
                                            {
                                              "value": "ed_confi",
                                              "children": [
                                                {
                                                  "value": "e",
                                                  "children": []
                                                },
                                                {
                                                  "value": "d_conf",
                                                  "children": []
                                                },
                                                {
                                                  "value": "i",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "},\n        include=I",
                                              "children": [
                                                {
                                                  "value": "},",
                                                  "children": []
                                                },
                                                {
                                                  "value": "include=I",
                                                  "children": [
                                                    {
                                                      "value": "include=",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "WEBHOOK_INCLUDE,\n    )\n    if _upda",
                                  "children": [
                                    {
                                      "value": "WEBHOOK",
                                      "children": []
                                    },
                                    {
                                      "value": "INCLUDE,\n    )\n    if _upda",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "is None:\n        raise ValueError(f\"Webhook #{webhook_id} not found\")\n    return Webhook.",
              "children": [
                {
                  "value": "None:\n        raise Valu",
                  "children": [
                    {
                      "value": "None:\n        ra",
                      "children": []
                    },
                    {
                      "value": "Valu",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "ebhook #{webhook_id} not found\")\n    return Webhook.",
                  "children": [
                    {
                      "value": "ebhook #{webhook_id} not found\")\n    return Webhook.",
                      "children": [
                        {
                          "value": "#{webhook_id} not found\")\n    return Webhook.",
                          "children": [
                            {
                              "value": "#{webhook",
                              "children": []
                            },
                            {
                              "value": "_id} not found\")\n    return Webhook.",
                              "children": [
                                {
                                  "value": "id} not found\")\n    return Webhook",
                                  "children": [
                                    {
                                      "value": "id",
                                      "children": []
                                    },
                                    {
                                      "value": "} not fou",
                                      "children": []
                                    },
                                    {
                                      "value": "nd\")\n    ret",
                                      "children": [
                                        {
                                          "value": "d\")\n    re",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "urn Webhoo",
                                      "children": []
                                    },
                                    {
                                      "value": "k",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "db(_updated_webhook)\n\n\nasync def delete_",
              "children": [
                {
                  "value": "ated_webhook)\n\n\nasync def delete_",
                  "children": [
                    {
                      "value": "ated_webhook)",
                      "children": [
                        {
                          "value": "ated_we",
                          "children": []
                        },
                        {
                          "value": "hook)",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "async def delete_",
                      "children": [
                        {
                          "value": "async def delete",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "hook(webhook_id: str) -> None:\n    \"\"\"\u26a0\ufe0f No `user_id` check: DO NOT USE without check in user-facing endpoints.\"\"\"\n    deleted = await IntegrationWebhook.prisma().delete(where={\"id\": webhook_id})\n    if not deleted:\n        raise ValueError(f\"Webhook #{webhook_id} not found\")\n\n\n# -------------------",
      "children": [
        {
          "value": "ok_id: str) ->",
          "children": []
        },
        {
          "value": "None:\n    \"\"\"\u26a0\ufe0f",
          "children": [
            {
              "value": "None:\n    \"\"\"\u26a0\ufe0f",
              "children": [
                {
                  "value": "None:",
                  "children": []
                },
                {
                  "value": "\"\u26a0\ufe0f",
                  "children": [
                    {
                      "value": "\"\u26a0\ufe0f",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "user",
          "children": [
            {
              "value": "user",
              "children": []
            }
          ]
        },
        {
          "value": "heck: DO NOT USE without check in user-facing endpoints.\"\"\"\n    deleted = await IntegrationWebhook.prisma().delete(where={\"id\": webhook_id})\n    if not deleted:\n        raise ValueError(f\"Webhook #{webhook_id} not found\")\n\n\n# -------------------",
          "children": [
            {
              "value": "heck: DO NOT USE without check in user-facing endpoints.\"\"\"\n    deleted = await Int",
              "children": [
                {
                  "value": "heck: DO NOT USE without check in user-facing endpoints.\"\"\"\n    deleted = await Int",
                  "children": [
                    {
                      "value": "hec",
                      "children": []
                    },
                    {
                      "value": "k: DO NOT USE without check in user-facing endpoints.\"\"\"\n    deleted = await",
                      "children": []
                    },
                    {
                      "value": "Int",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "ionWebhook.prisma().delete(where={\"id\": webhook_id})\n    if not deleted:",
              "children": [
                {
                  "value": "ionWebhook.prisma().delete(where={\"id\": webhook_id})\n    if not deleted:",
                  "children": [
                    {
                      "value": "ionWebh",
                      "children": []
                    },
                    {
                      "value": ".prisma().delete(where={\"id\": webhook_id})\n    if not deleted:",
                      "children": [
                        {
                          "value": "a().delete(where={\"id\": webhook_id})\n    if not deleted:",
                          "children": [
                            {
                              "value": "a().delete(where={\"id\": webhook_id",
                              "children": [
                                {
                                  "value": "a().delete(where={\"id\": web",
                                  "children": [
                                    {
                                      "value": "a().delete(where={\"id\": w",
                                      "children": [
                                        {
                                          "value": "a().delete(where={",
                                          "children": []
                                        },
                                        {
                                          "value": "id\": w",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "eb",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "ook_id",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "})\n    if not deleted:",
                              "children": [
                                {
                                  "value": ")\n    if not deleted:",
                                  "children": [
                                    {
                                      "value": ")",
                                      "children": []
                                    },
                                    {
                                      "value": "if not deleted:",
                                      "children": [
                                        {
                                          "value": "f not deleted:",
                                          "children": [
                                            {
                                              "value": "f no",
                                              "children": [
                                                {
                                                  "value": "f",
                                                  "children": []
                                                },
                                                {
                                                  "value": "n",
                                                  "children": []
                                                },
                                                {
                                                  "value": "o",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "deleted:",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "raise ValueError(f\"Webhook #{webhook_id} not found\")\n\n\n# -------------------",
              "children": [
                {
                  "value": "se ValueErr",
                  "children": [
                    {
                      "value": "alueErr",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "ok #{webhook_id} not found\")\n\n\n# -------------------",
                  "children": [
                    {
                      "value": "ok #{webhook_id} not found\")\n\n\n# -------------------",
                      "children": [
                        {
                          "value": "ebhook_id} not found\")\n\n\n# -------------------",
                          "children": [
                            {
                              "value": "ebhook_id}",
                              "children": []
                            },
                            {
                              "value": "not found\")\n\n\n# -------------------",
                              "children": [
                                {
                                  "value": "not found\")\n\n\n# ------------------",
                                  "children": [
                                    {
                                      "value": "no",
                                      "children": []
                                    },
                                    {
                                      "value": "t found\")",
                                      "children": []
                                    },
                                    {
                                      "value": "# -------",
                                      "children": [
                                        {
                                          "value": "# ------",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "----------",
                                      "children": []
                                    },
                                    {
                                      "value": "-",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "WEBHOOK EVENTS --------------------- #\n\n\nclass WebhookEvent(Ba",
      "children": []
    },
    {
      "value": "bModel):\n    provider: str\n    webhook_id: str\n    event_type: str\n    payload: dict\n\n\nclass WebhookEventBus",
      "children": [
        {
          "value": "):\n    provi",
          "children": []
        },
        {
          "value": "der: str",
          "children": [
            {
              "value": "er: str",
              "children": []
            }
          ]
        },
        {
          "value": "k_id: str\n    event_type: str\n    payload: dict\n\n\nclass WebhookEventBus",
          "children": [
            {
              "value": "k_id: str",
              "children": [
                {
                  "value": "k_id: str",
                  "children": [
                    {
                      "value": "k_id: st",
                      "children": []
                    },
                    {
                      "value": "",
                      "children": [
                        {
                          "value": "",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "t_type: str",
              "children": [
                {
                  "value": "t_type: str",
                  "children": [
                    {
                      "value": "t_type: st",
                      "children": []
                    },
                    {
                      "value": "",
                      "children": [
                        {
                          "value": "",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "oad: dict\n\n\ncla",
              "children": [
                {
                  "value": "oad: dict\n\n\ncla",
                  "children": [
                    {
                      "value": "oad: dict",
                      "children": []
                    },
                    {
                      "value": "cla",
                      "children": [
                        {
                          "value": "cla",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "bhookEventBus",
              "children": [
                {
                  "value": "bhookEventBus",
                  "children": [
                    {
                      "value": "bhookEv",
                      "children": []
                    },
                    {
                      "value": "tBus",
                      "children": [
                        {
                          "value": "tBus",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "yncRedisEventBus[WebhookEvent]):\n    Model = WebhookEvent\n\n    @property\n    def event_bus_name(self) -> str:\n        return \"webhooks\"\n\n\n_webhook_event_bus =",
      "children": [
        {
          "value": "isEventBus[Webh",
          "children": []
        },
        {
          "value": "ookEvent]):\n    Model = WebhookEve",
          "children": [
            {
              "value": "okEvent]):\n    Model = WebhookEv",
              "children": [
                {
                  "value": "okEvent]):\n    Mod",
                  "children": []
                },
                {
                  "value": "l = WebhookE",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "@property\n    def event_bus_name(self) -> str:\n        return \"webhooks\"\n\n\n_webhook_event_bus =",
          "children": [
            {
              "value": "@property\n    def",
              "children": [
                {
                  "value": "@property\n    def",
                  "children": [
                    {
                      "value": "@pr",
                      "children": []
                    },
                    {
                      "value": "rty\n    def",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "bus_name(self) -> str:\n        return \"webhooks\"\n\n\n_webhook_event_bus =",
              "children": [
                {
                  "value": "bus_name(",
                  "children": [
                    {
                      "value": "us_name(",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "-> str:\n        return \"webhooks\"\n\n\n_webhook_event_bus =",
                  "children": [
                    {
                      "value": "str:\n        r",
                      "children": []
                    },
                    {
                      "value": "eturn",
                      "children": [
                        {
                          "value": "turn",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "hoo",
                      "children": [
                        {
                          "value": "hoo",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "hook_event_bus =",
                      "children": [
                        {
                          "value": "hook_event_bus =",
                          "children": [
                            {
                              "value": "ent_bus =",
                              "children": [
                                {
                                  "value": "e",
                                  "children": []
                                },
                                {
                                  "value": "nt_bus =",
                                  "children": []
                                },
                                {
                                  "value": "",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "hookEventBus()\n\n\nasync def publish_web",
      "children": [
        {
          "value": "hookEventBus()\n\n\nasync def publish_web",
          "children": [
            {
              "value": "hookEventBus()\n\n\na",
              "children": []
            },
            {
              "value": "c def publish_web",
              "children": [
                {
                  "value": "c def publish_w",
                  "children": []
                },
                {
                  "value": "eb",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "k_event(event: WebhookEvent):\n    await _webhook_event_bus.publish_event(\n        event, f\"{event.webhook_id}/{event.event_type}\"\n    )\n\n\nasync def listen_for_",
      "children": [
        {
          "value": "ent: WebhookEvent):",
          "children": []
        },
        {
          "value": "await _webhook_eve",
          "children": [
            {
              "value": "await _webhook_ev",
              "children": [
                {
                  "value": "awa",
                  "children": []
                },
                {
                  "value": "_webhook_ev",
                  "children": [
                    {
                      "value": "_webhook_ev",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": ".publish_event(\n        event, f\"{event.webhook_id}/{event.event_type}\"\n    )\n\n\nasync def listen_for_",
          "children": [
            {
              "value": ".publish_event(\n        event, f\"{event.webhook_id}/{event.event_type}\"\n    )\n\n\nasync def listen_for_",
              "children": [
                {
                  "value": ".publish_event(\n        event, f\"{event.webhook_id}/{event.event_type}\"\n    )\n\n\nasync def listen_for_",
                  "children": [
                    {
                      "value": "sh_event(\n        event, f\"{event.webhook_id}/{event.event_type}\"\n    )\n\n\nasync def listen_for_",
                      "children": [
                        {
                          "value": "sh_event(\n        event, f\"{even",
                          "children": [
                            {
                              "value": "sh_event(",
                              "children": []
                            },
                            {
                              "value": "vent, f\"{even",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "t.webhook_id}/{event.event_type}\"\n    )\n\n\nasync def listen_for_",
                          "children": [
                            {
                              "value": "id}/{",
                              "children": []
                            },
                            {
                              "value": "ent.event_type}\"\n    )\n\n\nasync def liste",
                              "children": [
                                {
                                  "value": "en",
                                  "children": []
                                },
                                {
                                  "value": "t.event_type}\"",
                                  "children": [
                                    {
                                      "value": ".event_type}\"",
                                      "children": [
                                        {
                                          "value": ".even",
                                          "children": []
                                        },
                                        {
                                          "value": "_type}\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "",
                                  "children": []
                                },
                                {
                                  "value": ")\n\n\nasync def list",
                                  "children": [
                                    {
                                      "value": "async def lis",
                                      "children": [
                                        {
                                          "value": "as",
                                          "children": []
                                        },
                                        {
                                          "value": "nc def lis",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "e",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "hook_events(\n    webhook_id: str, event_type: Optional[str] = None\n) -> AsyncGenerator[WebhookEvent, None]:\n    async for event in _webhook_event_bus.listen_events(\n        f\"{webhook_id}/{event_type or '*'}\"\n    ):\n        yield event\n\n\nasync def wait_for_we",
      "children": [
        {
          "value": "s(\n    webhook_id: str, e",
          "children": []
        },
        {
          "value": "vent_type: Optional[str] = None\n) -> AsyncGenerator[Webho",
          "children": [
            {
              "value": "ype: Optional[s",
              "children": [
                {
                  "value": "ype: Optio",
                  "children": []
                },
                {
                  "value": "l[s",
                  "children": [
                    {
                      "value": "l[s",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "] = None\n) -> AsyncGenerator[Web",
              "children": [
                {
                  "value": "] = None\n)",
                  "children": []
                },
                {
                  "value": "> AsyncGenera",
                  "children": [
                    {
                      "value": "> AsyncGenera",
                      "children": [
                        {
                          "value": "> AsyncG",
                          "children": []
                        },
                        {
                          "value": "enera",
                          "children": [
                            {
                              "value": "ner",
                              "children": [
                                {
                                  "value": "ner",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "[Web",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "ent, None]:\n    async for event in",
          "children": [
            {
              "value": "ent, None]:\n    async for event in",
              "children": [
                {
                  "value": "ent, None]:",
                  "children": []
                },
                {
                  "value": "async for event in",
                  "children": [
                    {
                      "value": "async for e",
                      "children": [
                        {
                          "value": "async for e",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "nt i",
                      "children": [
                        {
                          "value": "nt i",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "ook_event_bus.listen_events(\n        f\"{webhook_id}/{event_type or '*'}\"\n    ):\n        yield event\n\n\nasync def wait_for_we",
          "children": [
            {
              "value": "ook_event_bus.listen_events(\n        f\"{webhook_id}/{event_type or '*'}\"\n    ):\n        yield event\n\n\nasync def wait_for_we",
              "children": [
                {
                  "value": "bus.l",
                  "children": []
                },
                {
                  "value": "n_events(\n        f\"{webhook_id}/{event_type or '*'}\"\n    ):\n        yield event",
                  "children": [
                    {
                      "value": "n_events(\n        f\"{webhook_id}",
                      "children": [
                        {
                          "value": "n_events(",
                          "children": []
                        },
                        {
                          "value": "\"{webhook_id}",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "/{event_type or '*'}\"\n    ):\n        yield event",
                      "children": [
                        {
                          "value": "pe or '*'}\"\n    ):\n        yield ev",
                          "children": [
                            {
                              "value": "pe",
                              "children": []
                            },
                            {
                              "value": "or '*'}\"",
                              "children": [
                                {
                                  "value": "or '*'}\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "",
                              "children": []
                            },
                            {
                              "value": "):\n        yield e",
                              "children": [
                                {
                                  "value": "):\n        yield",
                                  "children": [
                                    {
                                      "value": "):",
                                      "children": []
                                    },
                                    {
                                      "value": "ld",
                                      "children": [
                                        {
                                          "value": "l",
                                          "children": []
                                        },
                                        {
                                          "value": "d",
                                          "children": []
                                        },
                                        {
                                          "value": "",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "v",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "wait_for_we",
                  "children": [
                    {
                      "value": "wait_for_we",
                      "children": [
                        {
                          "value": "wait_for_we",
                          "children": [
                            {
                              "value": "or_we",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "ok_event(\n    webhook_id: str, event_type: Optional[str] = None, timeout: Optional[float] = None\n) -> WebhookEvent | None:\n    return await _webhook_event_bus.wait_for_event(\n        f\"{webhook_id}/{event_type or '*'}\", timeout\n    )",
      "children": [
        {
          "value": "webhook_id: str, e",
          "children": []
        },
        {
          "value": "vent_type: Optional[str] = None, timeout: Optional[float] = None\n) -> WebhookEvent | None:",
          "children": [
            {
              "value": "ype: Optional[s",
              "children": [
                {
                  "value": "ype: Optio",
                  "children": []
                },
                {
                  "value": "l[s",
                  "children": [
                    {
                      "value": "l[s",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "] = None, timeout: Optional[floa",
              "children": [
                {
                  "value": "] = None,",
                  "children": []
                },
                {
                  "value": "meout: Option",
                  "children": [
                    {
                      "value": "meout: Option",
                      "children": [
                        {
                          "value": "meout: O",
                          "children": []
                        },
                        {
                          "value": "ption",
                          "children": [
                            {
                              "value": "tio",
                              "children": [
                                {
                                  "value": "tio",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "floa",
                  "children": []
                }
              ]
            },
            {
              "value": "= None\n) -> WebhookEvent | Non",
              "children": [
                {
                  "value": "= None",
                  "children": []
                },
                {
                  "value": "-> WebhookEven",
                  "children": [
                    {
                      "value": "-> WebhookEven",
                      "children": [
                        {
                          "value": "-> Webh",
                          "children": []
                        },
                        {
                          "value": "ookEven",
                          "children": [
                            {
                              "value": "okEve",
                              "children": [
                                {
                                  "value": "okEve",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "Non",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "return await _webh",
          "children": [
            {
              "value": "return await _webh",
              "children": [
                {
                  "value": "return awai",
                  "children": []
                },
                {
                  "value": "webh",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "ent_bus.wait_for_event(\n        f\"{webhook_id}/{event_type or '*'}\", timeout\n    )",
          "children": [
            {
              "value": "ent_bus.wait_for_event(\n        f\"{webhook_id}/{event_type or '*'}\", timeout\n    )",
              "children": [
                {
                  "value": ".wait_for_event(\n        f\"{webhook_id}/{event_type or '*'}\", timeout\n    )",
                  "children": [
                    {
                      "value": "for_event(\n        f\"{webhook_id}/{event_type or '*'}\", timeout\n    )",
                      "children": [
                        {
                          "value": "for_event(\n        f\"{webhook_id}",
                          "children": [
                            {
                              "value": "for_event(",
                              "children": []
                            },
                            {
                              "value": "f\"{webhook_id}",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "/{event_type or '*'}\", timeout\n    )",
                          "children": [
                            {
                              "value": "pe or '*'}\", timeout\n    )",
                              "children": [
                                {
                                  "value": "pe",
                                  "children": []
                                },
                                {
                                  "value": "or '*'}\", t",
                                  "children": [
                                    {
                                      "value": "or '*'}\",",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "i",
                                  "children": []
                                },
                                {
                                  "value": "meout\n    )",
                                  "children": [
                                    {
                                      "value": "eout\n    )",
                                      "children": [
                                        {
                                          "value": "eout\n    )",
                                          "children": []
                                        },
                                        {
                                          "value": "",
                                          "children": [
                                            {
                                              "value": "",
                                              "children": []
                                            },
                                            {
                                              "value": "",
                                              "children": []
                                            },
                                            {
                                              "value": "",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}