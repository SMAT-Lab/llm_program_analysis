{
  "value": "from typing import Literal\nfrom urllib.parse import quote\n\nfrom pydantic import SecretStr\n\nfrom backend.blocks.helpers.http import GetRequest\nfrom backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import (\n    APIKeyCredentials,\n    CredentialsField,\n    CredentialsMetaInput,\n    SchemaField,\n)\nfrom backend.integrations.providers import ProviderName\n\n\nclass GetWikipediaSummaryBlock(Block, GetRequest):\n    class Input(BlockSchema):\n        topic: str = SchemaField(description=\"The topic to fetch the summary for\")\n\n    class Output(BlockSchema):\n        summary: str = SchemaField(description=\"The summary of the given topic\")\n        error: str = SchemaField(\n            description=\"Error message if the summary cannot be retrieved\"\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"f5b0f5d0-1862-4d61-94be-3ad0fa772760\",\n            description=\"This block fetches the summary of a given topic from Wikipedia.\",\n            categories={BlockCategory.SEARCH},\n            input_schema=GetWikipediaSummaryBlock.Input,\n            output_schema=GetWikipediaSummaryBlock.Output,\n            test_input={\"topic\": \"Artificial Intelligence\"},\n            test_output=(\"summary\", \"summary content\"),\n            test_mock={\"get_request\": lambda url, json: {\"extract\": \"summary content\"}},\n        )\n\n    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        topic = input_data.topic\n        url = f\"https://en.wikipedia.org/api/rest_v1/page/summary/{topic}\"\n        response = self.get_request(url, json=True)\n        if \"extract\" not in response:\n            raise RuntimeError(f\"Unable to parse Wikipedia response: {response}\")\n        yield \"summary\", response[\"extract\"]\n\n\nTEST_CREDENTIALS = APIKeyCredentials(\n    id=\"01234567-89ab-cdef-0123-456789abcdef\",\n    provider=\"openweathermap\",\n    api_key=SecretStr(\"mock-openweathermap-api-key\"),\n    title=\"Mock OpenWeatherMap API key\",\n    expires_at=None,\n)\nTEST_CREDENTIALS_INPUT = {\n    \"provider\": TEST_CREDENTIALS.provider,\n    \"id\": TEST_CREDENTIALS.id,\n    \"type\": TEST_CREDENTIALS.type,\n    \"title\": TEST_CREDENTIALS.type,\n}\n\n\nclass GetWeatherInformationBlock(Block, GetRequest):\n    class Input(BlockSchema):\n        location: str = SchemaField(\n            description=\"Location to get weather information for\"\n        )\n        credentials: CredentialsMetaInput[\n            Literal[ProviderName.OPENWEATHERMAP], Literal[\"api_key\"]\n        ] = CredentialsField(\n            description=\"The OpenWeatherMap integration can be used with \"\n            \"any API key with sufficient permissions for the blocks it is used on.\",\n        )\n        use_celsius: bool = SchemaField(\n            default=True,\n            description=\"Whether to use Celsius or Fahrenheit for temperature\",\n        )\n\n    class Output(BlockSchema):\n        temperature: str = SchemaField(\n            description=\"Temperature in the specified location\"\n        )\n        humidity: str = SchemaField(description=\"Humidity in the specified location\")\n        condition: str = SchemaField(\n            description=\"Weather condition in the specified location\"\n        )\n        error: str = SchemaField(\n            description=\"Error message if the weather information cannot be retrieved\"\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"f7a8b2c3-6d4e-5f8b-9e7f-6d4e5f8b9e7f\",\n            input_schema=GetWeatherInformationBlock.Input,\n            output_schema=GetWeatherInformationBlock.Output,\n            description=\"Retrieves weather information for a specified location using OpenWeatherMap API.\",\n            test_input={\n                \"location\": \"New York\",\n                \"use_celsius\": True,\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n            },\n            test_output=[\n                (\"temperature\", \"21.66\"),\n                (\"humidity\", \"32\"),\n                (\"condition\", \"overcast clouds\"),\n            ],\n            test_mock={\n                \"get_request\": lambda url, json: {\n                    \"main\": {\"temp\": 21.66, \"humidity\": 32},\n                    \"weather\": [{\"description\": \"overcast clouds\"}],\n                }\n            },\n            test_credentials=TEST_CREDENTIALS,\n        )\n\n    def run(\n        self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs\n    ) -> BlockOutput:\n        units = \"metric\" if input_data.use_celsius else \"imperial\"\n        api_key = credentials.api_key\n        location = input_data.location\n        url = f\"http://api.openweathermap.org/data/2.5/weather?q={quote(location)}&appid={api_key}&units={units}\"\n        weather_data = self.get_request(url, json=True)\n\n        if \"main\" in weather_data and \"weather\" in weather_data:\n            yield \"temperature\", str(weather_data[\"main\"][\"temp\"])\n            yield \"humidity\", str(weather_data[\"main\"][\"humidity\"])\n            yield \"condition\", weather_data[\"weather\"][0][\"description\"]\n        else:\n            raise RuntimeError(f\"Expected keys not found in response: {weather_data}\")",
  "children": [
    {
      "value": "from typing import Literal",
      "children": [
        {
          "value": "typing",
          "children": [
            {
              "value": "typing",
              "children": []
            }
          ]
        },
        {
          "value": "Literal",
          "children": [
            {
              "value": "Literal",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from urllib.parse import quote",
      "children": [
        {
          "value": "urllib.parse",
          "children": [
            {
              "value": "urllib",
              "children": []
            },
            {
              "value": "parse",
              "children": []
            }
          ]
        },
        {
          "value": "quote",
          "children": [
            {
              "value": "quote",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from pydantic import SecretStr",
      "children": [
        {
          "value": "pydantic",
          "children": [
            {
              "value": "pydantic",
              "children": []
            }
          ]
        },
        {
          "value": "SecretStr",
          "children": [
            {
              "value": "SecretStr",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.blocks.helpers.http import GetRequest",
      "children": [
        {
          "value": "backend.blocks.helpers.http",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "blocks",
              "children": []
            },
            {
              "value": "helpers",
              "children": []
            },
            {
              "value": "http",
              "children": []
            }
          ]
        },
        {
          "value": "GetRequest",
          "children": [
            {
              "value": "GetRequest",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema",
      "children": [
        {
          "value": "backend.data.block",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "data",
              "children": []
            },
            {
              "value": "block",
              "children": []
            }
          ]
        },
        {
          "value": "Block",
          "children": [
            {
              "value": "Block",
              "children": []
            }
          ]
        },
        {
          "value": "BlockCategory",
          "children": [
            {
              "value": "BlockCategory",
              "children": []
            }
          ]
        },
        {
          "value": "BlockOutput",
          "children": [
            {
              "value": "BlockOutput",
              "children": []
            }
          ]
        },
        {
          "value": "BlockSchema",
          "children": [
            {
              "value": "BlockSchema",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.data.model import (\n    APIKeyCredentials,\n    CredentialsField,\n    CredentialsMetaInput,\n    SchemaField,\n)",
      "children": [
        {
          "value": "backend.data.model",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "data",
              "children": []
            },
            {
              "value": "model",
              "children": []
            }
          ]
        },
        {
          "value": "APIKeyCredentials",
          "children": [
            {
              "value": "APIKeyCredentials",
              "children": []
            }
          ]
        },
        {
          "value": "CredentialsField",
          "children": [
            {
              "value": "CredentialsField",
              "children": []
            }
          ]
        },
        {
          "value": "CredentialsMetaInput",
          "children": [
            {
              "value": "CredentialsMetaInput",
              "children": []
            }
          ]
        },
        {
          "value": "SchemaField",
          "children": [
            {
              "value": "SchemaField",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.integrations.providers import ProviderName",
      "children": [
        {
          "value": "backend.integrations.providers",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "integrations",
              "children": []
            },
            {
              "value": "providers",
              "children": []
            }
          ]
        },
        {
          "value": "ProviderName",
          "children": [
            {
              "value": "ProviderName",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "class GetWikipediaSummaryBlock(Block, GetRequest):\n    class Input(BlockSchema):\n        topic: str = SchemaField(description=\"The topic to fetch the summary for\")\n\n    class Output(BlockSchema):\n        summary: str = SchemaField(description=\"The summary of the given topic\")\n        error: str = SchemaField(\n            description=\"Error message if the summary cannot be retrieved\"\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"f5b0f5d0-1862-4d61-94be-3ad0fa772760\",\n            description=\"This block fetches the summary of a given topic from Wikipedia.\",\n            categories={BlockCategory.SEARCH},\n            input_schema=GetWikipediaSummaryBlock.Input,\n            output_schema=GetWikipediaSummaryBlock.Output,\n            test_input={\"topic\": \"Artificial Intelligence\"},\n            test_output=(\"summary\", \"summary content\"),\n            test_mock={\"get_request\": lambda url, json: {\"extract\": \"summary content\"}},\n        )\n\n    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        topic = input_data.topic\n        url = f\"https://en.wikipedia.org/api/rest_v1/page/summary/{topic}\"\n        response = self.get_request(url, json=True)\n        if \"extract\" not in response:\n            raise RuntimeError(f\"Unable to parse Wikipedia response: {response}\")\n        yield \"summary\", response[\"extract\"]",
      "children": [
        {
          "value": "GetWikipediaSummaryBlock",
          "children": []
        },
        {
          "value": "(Block, GetRequest)",
          "children": [
            {
              "value": "Block",
              "children": []
            },
            {
              "value": "GetRequest",
              "children": []
            }
          ]
        },
        {
          "value": "class Input(BlockSchema):\n        topic: str = SchemaField(description=\"The topic to fetch the summary for\")\n\n    class Output(BlockSchema):\n        summary: str = SchemaField(description=\"The summary of the given topic\")\n        error: str = SchemaField(\n            description=\"Error message if the summary cannot be retrieved\"\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"f5b0f5d0-1862-4d61-94be-3ad0fa772760\",\n            description=\"This block fetches the summary of a given topic from Wikipedia.\",\n            categories={BlockCategory.SEARCH},\n            input_schema=GetWikipediaSummaryBlock.Input,\n            output_schema=GetWikipediaSummaryBlock.Output,\n            test_input={\"topic\": \"Artificial Intelligence\"},\n            test_output=(\"summary\", \"summary content\"),\n            test_mock={\"get_request\": lambda url, json: {\"extract\": \"summary content\"}},\n        )\n\n    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        topic = input_data.topic\n        url = f\"https://en.wikipedia.org/api/rest_v1/page/summary/{topic}\"\n        response = self.get_request(url, json=True)\n        if \"extract\" not in response:\n            raise RuntimeError(f\"Unable to parse Wikipedia response: {response}\")\n        yield \"summary\", response[\"extract\"]",
          "children": [
            {
              "value": "class Input(BlockSchema):\n        topic: str = SchemaField(description=\"The topic to fetch the summary for\")",
              "children": [
                {
                  "value": "Input",
                  "children": []
                },
                {
                  "value": "(BlockSchema)",
                  "children": [
                    {
                      "value": "BlockSchema",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "topic: str = SchemaField(description=\"The topic to fetch the summary for\")",
                  "children": [
                    {
                      "value": "topic: str = SchemaField(description=\"The topic to fetch the summary for\")",
                      "children": [
                        {
                          "value": "topic: str = SchemaField(description=\"The topic to fetch the summary for\")",
                          "children": [
                            {
                              "value": "topic",
                              "children": []
                            },
                            {
                              "value": "str",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(description=\"The topic to fetch the summary for\")",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(description=\"The topic to fetch the summary for\")",
                                  "children": [
                                    {
                                      "value": "description=\"The topic to fetch the summary for\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"The topic to fetch the summary for\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "The topic to fetch the summary for",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "class Output(BlockSchema):\n        summary: str = SchemaField(description=\"The summary of the given topic\")\n        error: str = SchemaField(\n            description=\"Error message if the summary cannot be retrieved\"\n        )",
              "children": [
                {
                  "value": "Output",
                  "children": []
                },
                {
                  "value": "(BlockSchema)",
                  "children": [
                    {
                      "value": "BlockSchema",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "summary: str = SchemaField(description=\"The summary of the given topic\")\n        error: str = SchemaField(\n            description=\"Error message if the summary cannot be retrieved\"\n        )",
                  "children": [
                    {
                      "value": "summary: str = SchemaField(description=\"The summary of the given topic\")",
                      "children": [
                        {
                          "value": "summary: str = SchemaField(description=\"The summary of the given topic\")",
                          "children": [
                            {
                              "value": "summary",
                              "children": []
                            },
                            {
                              "value": "str",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(description=\"The summary of the given topic\")",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(description=\"The summary of the given topic\")",
                                  "children": [
                                    {
                                      "value": "description=\"The summary of the given topic\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"The summary of the given topic\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "The summary of the given topic",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "error: str = SchemaField(\n            description=\"Error message if the summary cannot be retrieved\"\n        )",
                      "children": [
                        {
                          "value": "error: str = SchemaField(\n            description=\"Error message if the summary cannot be retrieved\"\n        )",
                          "children": [
                            {
                              "value": "error",
                              "children": []
                            },
                            {
                              "value": "str",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            description=\"Error message if the summary cannot be retrieved\"\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=\"Error message if the summary cannot be retrieved\"\n        )",
                                  "children": [
                                    {
                                      "value": "description=\"Error message if the summary cannot be retrieved\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Error message if the summary cannot be retrieved\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Error message if the summary cannot be retrieved",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def __init__(self):\n        super().__init__(\n            id=\"f5b0f5d0-1862-4d61-94be-3ad0fa772760\",\n            description=\"This block fetches the summary of a given topic from Wikipedia.\",\n            categories={BlockCategory.SEARCH},\n            input_schema=GetWikipediaSummaryBlock.Input,\n            output_schema=GetWikipediaSummaryBlock.Output,\n            test_input={\"topic\": \"Artificial Intelligence\"},\n            test_output=(\"summary\", \"summary content\"),\n            test_mock={\"get_request\": lambda url, json: {\"extract\": \"summary content\"}},\n        )",
              "children": [
                {
                  "value": "__init__",
                  "children": []
                },
                {
                  "value": "(self)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "super().__init__(\n            id=\"f5b0f5d0-1862-4d61-94be-3ad0fa772760\",\n            description=\"This block fetches the summary of a given topic from Wikipedia.\",\n            categories={BlockCategory.SEARCH},\n            input_schema=GetWikipediaSummaryBlock.Input,\n            output_schema=GetWikipediaSummaryBlock.Output,\n            test_input={\"topic\": \"Artificial Intelligence\"},\n            test_output=(\"summary\", \"summary content\"),\n            test_mock={\"get_request\": lambda url, json: {\"extract\": \"summary content\"}},\n        )",
                  "children": [
                    {
                      "value": "super().__init__(\n            id=\"f5b0f5d0-1862-4d61-94be-3ad0fa772760\",\n            description=\"This block fetches the summary of a given topic from Wikipedia.\",\n            categories={BlockCategory.SEARCH},\n            input_schema=GetWikipediaSummaryBlock.Input,\n            output_schema=GetWikipediaSummaryBlock.Output,\n            test_input={\"topic\": \"Artificial Intelligence\"},\n            test_output=(\"summary\", \"summary content\"),\n            test_mock={\"get_request\": lambda url, json: {\"extract\": \"summary content\"}},\n        )",
                      "children": [
                        {
                          "value": "super().__init__(\n            id=\"f5b0f5d0-1862-4d61-94be-3ad0fa772760\",\n            description=\"This block fetches the summary of a given topic from Wikipedia.\",\n            categories={BlockCategory.SEARCH},\n            input_schema=GetWikipediaSummaryBlock.Input,\n            output_schema=GetWikipediaSummaryBlock.Output,\n            test_input={\"topic\": \"Artificial Intelligence\"},\n            test_output=(\"summary\", \"summary content\"),\n            test_mock={\"get_request\": lambda url, json: {\"extract\": \"summary content\"}},\n        )",
                          "children": [
                            {
                              "value": "super().__init__",
                              "children": [
                                {
                                  "value": "super()",
                                  "children": [
                                    {
                                      "value": "super",
                                      "children": []
                                    },
                                    {
                                      "value": "()",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "__init__",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\n            id=\"f5b0f5d0-1862-4d61-94be-3ad0fa772760\",\n            description=\"This block fetches the summary of a given topic from Wikipedia.\",\n            categories={BlockCategory.SEARCH},\n            input_schema=GetWikipediaSummaryBlock.Input,\n            output_schema=GetWikipediaSummaryBlock.Output,\n            test_input={\"topic\": \"Artificial Intelligence\"},\n            test_output=(\"summary\", \"summary content\"),\n            test_mock={\"get_request\": lambda url, json: {\"extract\": \"summary content\"}},\n        )",
                              "children": [
                                {
                                  "value": "id=\"f5b0f5d0-1862-4d61-94be-3ad0fa772760\"",
                                  "children": [
                                    {
                                      "value": "id",
                                      "children": []
                                    },
                                    {
                                      "value": "\"f5b0f5d0-1862-4d61-94be-3ad0fa772760\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "f5b0f5d0-1862-4d61-94be-3ad0fa772760",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "description=\"This block fetches the summary of a given topic from Wikipedia.\"",
                                  "children": [
                                    {
                                      "value": "description",
                                      "children": []
                                    },
                                    {
                                      "value": "\"This block fetches the summary of a given topic from Wikipedia.\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "This block fetches the summary of a given topic from Wikipedia.",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "categories={BlockCategory.SEARCH}",
                                  "children": [
                                    {
                                      "value": "categories",
                                      "children": []
                                    },
                                    {
                                      "value": "{BlockCategory.SEARCH}",
                                      "children": [
                                        {
                                          "value": "BlockCategory.SEARCH",
                                          "children": [
                                            {
                                              "value": "BlockCategory",
                                              "children": []
                                            },
                                            {
                                              "value": "SEARCH",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "input_schema=GetWikipediaSummaryBlock.Input",
                                  "children": [
                                    {
                                      "value": "input_schema",
                                      "children": []
                                    },
                                    {
                                      "value": "GetWikipediaSummaryBlock.Input",
                                      "children": [
                                        {
                                          "value": "GetWikipediaSummaryBlock",
                                          "children": []
                                        },
                                        {
                                          "value": "Input",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "output_schema=GetWikipediaSummaryBlock.Output",
                                  "children": [
                                    {
                                      "value": "output_schema",
                                      "children": []
                                    },
                                    {
                                      "value": "GetWikipediaSummaryBlock.Output",
                                      "children": [
                                        {
                                          "value": "GetWikipediaSummaryBlock",
                                          "children": []
                                        },
                                        {
                                          "value": "Output",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "test_input={\"topic\": \"Artificial Intelligence\"}",
                                  "children": [
                                    {
                                      "value": "test_input",
                                      "children": []
                                    },
                                    {
                                      "value": "{\"topic\": \"Artificial Intelligence\"}",
                                      "children": [
                                        {
                                          "value": "\"topic\": \"Artificial Intelligence\"",
                                          "children": [
                                            {
                                              "value": "\"topic\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "topic",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"Artificial Intelligence\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "Artificial Intelligence",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "test_output=(\"summary\", \"summary content\")",
                                  "children": [
                                    {
                                      "value": "test_output",
                                      "children": []
                                    },
                                    {
                                      "value": "(\"summary\", \"summary content\")",
                                      "children": [
                                        {
                                          "value": "\"summary\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "summary",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"summary content\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "summary content",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "test_mock={\"get_request\": lambda url, json: {\"extract\": \"summary content\"}}",
                                  "children": [
                                    {
                                      "value": "test_mock",
                                      "children": []
                                    },
                                    {
                                      "value": "{\"get_request\": lambda url, json: {\"extract\": \"summary content\"}}",
                                      "children": [
                                        {
                                          "value": "\"get_request\": lambda url, json: {\"extract\": \"summary content\"}",
                                          "children": [
                                            {
                                              "value": "\"get_request\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "get_request",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "lambda url, json: {\"extract\": \"summary content\"}",
                                              "children": [
                                                {
                                                  "value": "url, json",
                                                  "children": [
                                                    {
                                                      "value": "url",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "json",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "{\"extract\": \"summary content\"}",
                                                  "children": [
                                                    {
                                                      "value": "\"extract\": \"summary content\"",
                                                      "children": [
                                                        {
                                                          "value": "\"extract\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "extract",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "\"summary content\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "summary content",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        topic = input_data.topic\n        url = f\"https://en.wikipedia.org/api/rest_v1/page/summary/{topic}\"\n        response = self.get_request(url, json=True)\n        if \"extract\" not in response:\n            raise RuntimeError(f\"Unable to parse Wikipedia response: {response}\")\n        yield \"summary\", response[\"extract\"]",
              "children": [
                {
                  "value": "run",
                  "children": []
                },
                {
                  "value": "(self, input_data: Input, **kwargs)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "input_data: Input",
                      "children": [
                        {
                          "value": "input_data",
                          "children": []
                        },
                        {
                          "value": "Input",
                          "children": [
                            {
                              "value": "Input",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "**kwargs",
                      "children": [
                        {
                          "value": "kwargs",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "BlockOutput",
                  "children": [
                    {
                      "value": "BlockOutput",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "topic = input_data.topic\n        url = f\"https://en.wikipedia.org/api/rest_v1/page/summary/{topic}\"\n        response = self.get_request(url, json=True)\n        if \"extract\" not in response:\n            raise RuntimeError(f\"Unable to parse Wikipedia response: {response}\")\n        yield \"summary\", response[\"extract\"]",
                  "children": [
                    {
                      "value": "topic = input_data.topic",
                      "children": [
                        {
                          "value": "topic = input_data.topic",
                          "children": [
                            {
                              "value": "topic",
                              "children": []
                            },
                            {
                              "value": "input_data.topic",
                              "children": [
                                {
                                  "value": "input_data",
                                  "children": []
                                },
                                {
                                  "value": "topic",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "url = f\"https://en.wikipedia.org/api/rest_v1/page/summary/{topic}\"",
                      "children": [
                        {
                          "value": "url = f\"https://en.wikipedia.org/api/rest_v1/page/summary/{topic}\"",
                          "children": [
                            {
                              "value": "url",
                              "children": []
                            },
                            {
                              "value": "f\"https://en.wikipedia.org/api/rest_v1/page/summary/{topic}\"",
                              "children": [
                                {
                                  "value": "f\"",
                                  "children": []
                                },
                                {
                                  "value": "https://en.wikipedia.org/api/rest_v1/page/summary/",
                                  "children": []
                                },
                                {
                                  "value": "{topic}",
                                  "children": [
                                    {
                                      "value": "topic",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "response = self.get_request(url, json=True)",
                      "children": [
                        {
                          "value": "response = self.get_request(url, json=True)",
                          "children": [
                            {
                              "value": "response",
                              "children": []
                            },
                            {
                              "value": "self.get_request(url, json=True)",
                              "children": [
                                {
                                  "value": "self.get_request",
                                  "children": [
                                    {
                                      "value": "self",
                                      "children": []
                                    },
                                    {
                                      "value": "get_request",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(url, json=True)",
                                  "children": [
                                    {
                                      "value": "url",
                                      "children": []
                                    },
                                    {
                                      "value": "json=True",
                                      "children": [
                                        {
                                          "value": "json",
                                          "children": []
                                        },
                                        {
                                          "value": "True",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "if \"extract\" not in response:\n            raise RuntimeError(f\"Unable to parse Wikipedia response: {response}\")",
                      "children": [
                        {
                          "value": "\"extract\" not in response",
                          "children": [
                            {
                              "value": "\"extract\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "extract",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "response",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "raise RuntimeError(f\"Unable to parse Wikipedia response: {response}\")",
                          "children": [
                            {
                              "value": "raise RuntimeError(f\"Unable to parse Wikipedia response: {response}\")",
                              "children": [
                                {
                                  "value": "RuntimeError(f\"Unable to parse Wikipedia response: {response}\")",
                                  "children": [
                                    {
                                      "value": "RuntimeError",
                                      "children": []
                                    },
                                    {
                                      "value": "(f\"Unable to parse Wikipedia response: {response}\")",
                                      "children": [
                                        {
                                          "value": "f\"Unable to parse Wikipedia response: {response}\"",
                                          "children": [
                                            {
                                              "value": "f\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Unable to parse Wikipedia response:",
                                              "children": []
                                            },
                                            {
                                              "value": "{response}",
                                              "children": [
                                                {
                                                  "value": "response",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "yield \"summary\", response[\"extract\"]",
                      "children": [
                        {
                          "value": "yield \"summary\", response[\"extract\"]",
                          "children": [
                            {
                              "value": "\"summary\", response[\"extract\"]",
                              "children": [
                                {
                                  "value": "\"summary\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "summary",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "response[\"extract\"]",
                                  "children": [
                                    {
                                      "value": "response",
                                      "children": []
                                    },
                                    {
                                      "value": "\"extract\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "extract",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "TEST_CREDENTIALS = APIKeyCredentials(\n    id=\"01234567-89ab-cdef-0123-456789abcdef\",\n    provider=\"openweathermap\",\n    api_key=SecretStr(\"mock-openweathermap-api-key\"),\n    title=\"Mock OpenWeatherMap API key\",\n    expires_at=None,\n)",
      "children": [
        {
          "value": "TEST_CREDENTIALS = APIKeyCredentials(\n    id=\"01234567-89ab-cdef-0123-456789abcdef\",\n    provider=\"openweathermap\",\n    api_key=SecretStr(\"mock-openweathermap-api-key\"),\n    title=\"Mock OpenWeatherMap API key\",\n    expires_at=None,\n)",
          "children": [
            {
              "value": "TEST_CREDENTIALS",
              "children": []
            },
            {
              "value": "APIKeyCredentials(\n    id=\"01234567-89ab-cdef-0123-456789abcdef\",\n    provider=\"openweathermap\",\n    api_key=SecretStr(\"mock-openweathermap-api-key\"),\n    title=\"Mock OpenWeatherMap API key\",\n    expires_at=None,\n)",
              "children": [
                {
                  "value": "APIKeyCredentials",
                  "children": []
                },
                {
                  "value": "(\n    id=\"01234567-89ab-cdef-0123-456789abcdef\",\n    provider=\"openweathermap\",\n    api_key=SecretStr(\"mock-openweathermap-api-key\"),\n    title=\"Mock OpenWeatherMap API key\",\n    expires_at=None,\n)",
                  "children": [
                    {
                      "value": "id=\"01234567-89ab-cdef-0123-456789abcdef\"",
                      "children": [
                        {
                          "value": "id",
                          "children": []
                        },
                        {
                          "value": "\"01234567-89ab-cdef-0123-456789abcdef\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "01234567-89ab-cdef-0123-456789abcdef",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "provider=\"openweathermap\"",
                      "children": [
                        {
                          "value": "provider",
                          "children": []
                        },
                        {
                          "value": "\"openweathermap\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "openweathermap",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "api_key=SecretStr(\"mock-openweathermap-api-key\")",
                      "children": [
                        {
                          "value": "api_key",
                          "children": []
                        },
                        {
                          "value": "SecretStr(\"mock-openweathermap-api-key\")",
                          "children": [
                            {
                              "value": "SecretStr",
                              "children": []
                            },
                            {
                              "value": "(\"mock-openweathermap-api-key\")",
                              "children": [
                                {
                                  "value": "\"mock-openweathermap-api-key\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "mock-openweathermap-api-key",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "title=\"Mock OpenWeatherMap API key\"",
                      "children": [
                        {
                          "value": "title",
                          "children": []
                        },
                        {
                          "value": "\"Mock OpenWeatherMap API key\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "Mock OpenWeatherMap API key",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "expires_at=None",
                      "children": [
                        {
                          "value": "expires_at",
                          "children": []
                        },
                        {
                          "value": "None",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "TEST_CREDENTIALS_INPUT = {\n    \"provider\": TEST_CREDENTIALS.provider,\n    \"id\": TEST_CREDENTIALS.id,\n    \"type\": TEST_CREDENTIALS.type,\n    \"title\": TEST_CREDENTIALS.type,\n}",
      "children": [
        {
          "value": "TEST_CREDENTIALS_INPUT = {\n    \"provider\": TEST_CREDENTIALS.provider,\n    \"id\": TEST_CREDENTIALS.id,\n    \"type\": TEST_CREDENTIALS.type,\n    \"title\": TEST_CREDENTIALS.type,\n}",
          "children": [
            {
              "value": "TEST_CREDENTIALS_INPUT",
              "children": []
            },
            {
              "value": "{\n    \"provider\": TEST_CREDENTIALS.provider,\n    \"id\": TEST_CREDENTIALS.id,\n    \"type\": TEST_CREDENTIALS.type,\n    \"title\": TEST_CREDENTIALS.type,\n}",
              "children": [
                {
                  "value": "\"provider\": TEST_CREDENTIALS.provider",
                  "children": [
                    {
                      "value": "\"provider\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "provider",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "TEST_CREDENTIALS.provider",
                      "children": [
                        {
                          "value": "TEST_CREDENTIALS",
                          "children": []
                        },
                        {
                          "value": "provider",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "\"id\": TEST_CREDENTIALS.id",
                  "children": [
                    {
                      "value": "\"id\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "id",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "TEST_CREDENTIALS.id",
                      "children": [
                        {
                          "value": "TEST_CREDENTIALS",
                          "children": []
                        },
                        {
                          "value": "id",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "\"type\": TEST_CREDENTIALS.type",
                  "children": [
                    {
                      "value": "\"type\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "type",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "TEST_CREDENTIALS.type",
                      "children": [
                        {
                          "value": "TEST_CREDENTIALS",
                          "children": []
                        },
                        {
                          "value": "type",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "\"title\": TEST_CREDENTIALS.type",
                  "children": [
                    {
                      "value": "\"title\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "title",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "TEST_CREDENTIALS.type",
                      "children": [
                        {
                          "value": "TEST_CREDENTIALS",
                          "children": []
                        },
                        {
                          "value": "type",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "class GetWeatherInformationBlock(Block, GetRequest):\n    class Input(BlockSchema):\n        location: str = SchemaField(\n            description=\"Location to get weather information for\"\n        )\n        credentials: CredentialsMetaInput[\n            Literal[ProviderName.OPENWEATHERMAP], Literal[\"api_key\"]\n        ] = CredentialsField(\n            description=\"The OpenWeatherMap integration can be used with \"\n            \"any API key with sufficient permissions for the blocks it is used on.\",\n        )\n        use_celsius: bool = SchemaField(\n            default=True,\n            description=\"Whether to use Celsius or Fahrenheit for temperature\",\n        )\n\n    class Output(BlockSchema):\n        temperature: str = SchemaField(\n            description=\"Temperature in the specified location\"\n        )\n        humidity: str = SchemaField(description=\"Humidity in the specified location\")\n        condition: str = SchemaField(\n            description=\"Weather condition in the specified location\"\n        )\n        error: str = SchemaField(\n            description=\"Error message if the weather information cannot be retrieved\"\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"f7a8b2c3-6d4e-5f8b-9e7f-6d4e5f8b9e7f\",\n            input_schema=GetWeatherInformationBlock.Input,\n            output_schema=GetWeatherInformationBlock.Output,\n            description=\"Retrieves weather information for a specified location using OpenWeatherMap API.\",\n            test_input={\n                \"location\": \"New York\",\n                \"use_celsius\": True,\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n            },\n            test_output=[\n                (\"temperature\", \"21.66\"),\n                (\"humidity\", \"32\"),\n                (\"condition\", \"overcast clouds\"),\n            ],\n            test_mock={\n                \"get_request\": lambda url, json: {\n                    \"main\": {\"temp\": 21.66, \"humidity\": 32},\n                    \"weather\": [{\"description\": \"overcast clouds\"}],\n                }\n            },\n            test_credentials=TEST_CREDENTIALS,\n        )\n\n    def run(\n        self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs\n    ) -> BlockOutput:\n        units = \"metric\" if input_data.use_celsius else \"imperial\"\n        api_key = credentials.api_key\n        location = input_data.location\n        url = f\"http://api.openweathermap.org/data/2.5/weather?q={quote(location)}&appid={api_key}&units={units}\"\n        weather_data = self.get_request(url, json=True)\n\n        if \"main\" in weather_data and \"weather\" in weather_data:\n            yield \"temperature\", str(weather_data[\"main\"][\"temp\"])\n            yield \"humidity\", str(weather_data[\"main\"][\"humidity\"])\n            yield \"condition\", weather_data[\"weather\"][0][\"description\"]\n        else:\n            raise RuntimeError(f\"Expected keys not found in response: {weather_data}\")",
      "children": [
        {
          "value": "GetWeatherInformationBlock",
          "children": []
        },
        {
          "value": "(Block, GetRequest)",
          "children": [
            {
              "value": "Block",
              "children": []
            },
            {
              "value": "GetRequest",
              "children": []
            }
          ]
        },
        {
          "value": "class Input(BlockSchema):\n        location: str = SchemaField(\n            description=\"Location to get weather information for\"\n        )\n        credentials: CredentialsMetaInput[\n            Literal[ProviderName.OPENWEATHERMAP], Literal[\"api_key\"]\n        ] = CredentialsField(\n            description=\"The OpenWeatherMap integration can be used with \"\n            \"any API key with sufficient permissions for the blocks it is used on.\",\n        )\n        use_celsius: bool = SchemaField(\n            default=True,\n            description=\"Whether to use Celsius or Fahrenheit for temperature\",\n        )\n\n    class Output(BlockSchema):\n        temperature: str = SchemaField(\n            description=\"Temperature in the specified location\"\n        )\n        humidity: str = SchemaField(description=\"Humidity in the specified location\")\n        condition: str = SchemaField(\n            description=\"Weather condition in the specified location\"\n        )\n        error: str = SchemaField(\n            description=\"Error message if the weather information cannot be retrieved\"\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"f7a8b2c3-6d4e-5f8b-9e7f-6d4e5f8b9e7f\",\n            input_schema=GetWeatherInformationBlock.Input,\n            output_schema=GetWeatherInformationBlock.Output,\n            description=\"Retrieves weather information for a specified location using OpenWeatherMap API.\",\n            test_input={\n                \"location\": \"New York\",\n                \"use_celsius\": True,\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n            },\n            test_output=[\n                (\"temperature\", \"21.66\"),\n                (\"humidity\", \"32\"),\n                (\"condition\", \"overcast clouds\"),\n            ],\n            test_mock={\n                \"get_request\": lambda url, json: {\n                    \"main\": {\"temp\": 21.66, \"humidity\": 32},\n                    \"weather\": [{\"description\": \"overcast clouds\"}],\n                }\n            },\n            test_credentials=TEST_CREDENTIALS,\n        )\n\n    def run(\n        self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs\n    ) -> BlockOutput:\n        units = \"metric\" if input_data.use_celsius else \"imperial\"\n        api_key = credentials.api_key\n        location = input_data.location\n        url = f\"http://api.openweathermap.org/data/2.5/weather?q={quote(location)}&appid={api_key}&units={units}\"\n        weather_data = self.get_request(url, json=True)\n\n        if \"main\" in weather_data and \"weather\" in weather_data:\n            yield \"temperature\", str(weather_data[\"main\"][\"temp\"])\n            yield \"humidity\", str(weather_data[\"main\"][\"humidity\"])\n            yield \"condition\", weather_data[\"weather\"][0][\"description\"]\n        else:\n            raise RuntimeError(f\"Expected keys not found in response: {weather_data}\")",
          "children": [
            {
              "value": "class Input(BlockSchema):\n        location: str = SchemaField(\n            description=\"Location to get weather information for\"\n        )\n        credentials: CredentialsMetaInput[\n            Literal[ProviderName.OPENWEATHERMAP], Literal[\"api_key\"]\n        ] = CredentialsField(\n            description=\"The OpenWeatherMap integration can be used with \"\n            \"any API key with sufficient permissions for the blocks it is used on.\",\n        )\n        use_celsius: bool = SchemaField(\n            default=True,\n            description=\"Whether to use Celsius or Fahrenheit for temperature\",\n        )",
              "children": [
                {
                  "value": "Input",
                  "children": []
                },
                {
                  "value": "(BlockSchema)",
                  "children": [
                    {
                      "value": "BlockSchema",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "location: str = SchemaField(\n            description=\"Location to get weather information for\"\n        )\n        credentials: CredentialsMetaInput[\n            Literal[ProviderName.OPENWEATHERMAP], Literal[\"api_key\"]\n        ] = CredentialsField(\n            description=\"The OpenWeatherMap integration can be used with \"\n            \"any API key with sufficient permissions for the blocks it is used on.\",\n        )\n        use_celsius: bool = SchemaField(\n            default=True,\n            description=\"Whether to use Celsius or Fahrenheit for temperature\",\n        )",
                  "children": [
                    {
                      "value": "location: str = SchemaField(\n            description=\"Location to get weather information for\"\n        )",
                      "children": [
                        {
                          "value": "location: str = SchemaField(\n            description=\"Location to get weather information for\"\n        )",
                          "children": [
                            {
                              "value": "location",
                              "children": []
                            },
                            {
                              "value": "str",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            description=\"Location to get weather information for\"\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=\"Location to get weather information for\"\n        )",
                                  "children": [
                                    {
                                      "value": "description=\"Location to get weather information for\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Location to get weather information for\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Location to get weather information for",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "credentials: CredentialsMetaInput[\n            Literal[ProviderName.OPENWEATHERMAP], Literal[\"api_key\"]\n        ] = CredentialsField(\n            description=\"The OpenWeatherMap integration can be used with \"\n            \"any API key with sufficient permissions for the blocks it is used on.\",\n        )",
                      "children": [
                        {
                          "value": "credentials: CredentialsMetaInput[\n            Literal[ProviderName.OPENWEATHERMAP], Literal[\"api_key\"]\n        ] = CredentialsField(\n            description=\"The OpenWeatherMap integration can be used with \"\n            \"any API key with sufficient permissions for the blocks it is used on.\",\n        )",
                          "children": [
                            {
                              "value": "credentials",
                              "children": []
                            },
                            {
                              "value": "CredentialsMetaInput[\n            Literal[ProviderName.OPENWEATHERMAP], Literal[\"api_key\"]\n        ]",
                              "children": [
                                {
                                  "value": "CredentialsMetaInput[\n            Literal[ProviderName.OPENWEATHERMAP], Literal[\"api_key\"]\n        ]",
                                  "children": [
                                    {
                                      "value": "CredentialsMetaInput",
                                      "children": []
                                    },
                                    {
                                      "value": "[\n            Literal[ProviderName.OPENWEATHERMAP], Literal[\"api_key\"]\n        ]",
                                      "children": [
                                        {
                                          "value": "Literal[ProviderName.OPENWEATHERMAP]",
                                          "children": [
                                            {
                                              "value": "Literal[ProviderName.OPENWEATHERMAP]",
                                              "children": [
                                                {
                                                  "value": "Literal",
                                                  "children": []
                                                },
                                                {
                                                  "value": "[ProviderName.OPENWEATHERMAP]",
                                                  "children": [
                                                    {
                                                      "value": "ProviderName.OPENWEATHERMAP",
                                                      "children": [
                                                        {
                                                          "value": "ProviderName.OPENWEATHERMAP",
                                                          "children": [
                                                            {
                                                              "value": "ProviderName",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "OPENWEATHERMAP",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "Literal[\"api_key\"]",
                                          "children": [
                                            {
                                              "value": "Literal[\"api_key\"]",
                                              "children": [
                                                {
                                                  "value": "Literal",
                                                  "children": []
                                                },
                                                {
                                                  "value": "[\"api_key\"]",
                                                  "children": [
                                                    {
                                                      "value": "\"api_key\"",
                                                      "children": [
                                                        {
                                                          "value": "\"api_key\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "api_key",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "CredentialsField(\n            description=\"The OpenWeatherMap integration can be used with \"\n            \"any API key with sufficient permissions for the blocks it is used on.\",\n        )",
                              "children": [
                                {
                                  "value": "CredentialsField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=\"The OpenWeatherMap integration can be used with \"\n            \"any API key with sufficient permissions for the blocks it is used on.\",\n        )",
                                  "children": [
                                    {
                                      "value": "description=\"The OpenWeatherMap integration can be used with \"\n            \"any API key with sufficient permissions for the blocks it is used on.\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"The OpenWeatherMap integration can be used with \"\n            \"any API key with sufficient permissions for the blocks it is used on.\"",
                                          "children": [
                                            {
                                              "value": "\"The OpenWeatherMap integration can be used with \"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "The OpenWeatherMap integration can be used with",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"any API key with sufficient permissions for the blocks it is used on.\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "any API key with sufficient permissions for the blocks it is used on.",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "use_celsius: bool = SchemaField(\n            default=True,\n            description=\"Whether to use Celsius or Fahrenheit for temperature\",\n        )",
                      "children": [
                        {
                          "value": "use_celsius: bool = SchemaField(\n            default=True,\n            description=\"Whether to use Celsius or Fahrenheit for temperature\",\n        )",
                          "children": [
                            {
                              "value": "use_celsius",
                              "children": []
                            },
                            {
                              "value": "bool",
                              "children": [
                                {
                                  "value": "bool",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            default=True,\n            description=\"Whether to use Celsius or Fahrenheit for temperature\",\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            default=True,\n            description=\"Whether to use Celsius or Fahrenheit for temperature\",\n        )",
                                  "children": [
                                    {
                                      "value": "default=True",
                                      "children": [
                                        {
                                          "value": "default",
                                          "children": []
                                        },
                                        {
                                          "value": "True",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "description=\"Whether to use Celsius or Fahrenheit for temperature\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Whether to use Celsius or Fahrenheit for temperature\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Whether to use Celsius or Fahrenheit for temperature",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "class Output(BlockSchema):\n        temperature: str = SchemaField(\n            description=\"Temperature in the specified location\"\n        )\n        humidity: str = SchemaField(description=\"Humidity in the specified location\")\n        condition: str = SchemaField(\n            description=\"Weather condition in the specified location\"\n        )\n        error: str = SchemaField(\n            description=\"Error message if the weather information cannot be retrieved\"\n        )",
              "children": [
                {
                  "value": "Output",
                  "children": []
                },
                {
                  "value": "(BlockSchema)",
                  "children": [
                    {
                      "value": "BlockSchema",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "temperature: str = SchemaField(\n            description=\"Temperature in the specified location\"\n        )\n        humidity: str = SchemaField(description=\"Humidity in the specified location\")\n        condition: str = SchemaField(\n            description=\"Weather condition in the specified location\"\n        )\n        error: str = SchemaField(\n            description=\"Error message if the weather information cannot be retrieved\"\n        )",
                  "children": [
                    {
                      "value": "temperature: str = SchemaField(\n            description=\"Temperature in the specified location\"\n        )",
                      "children": [
                        {
                          "value": "temperature: str = SchemaField(\n            description=\"Temperature in the specified location\"\n        )",
                          "children": [
                            {
                              "value": "temperature",
                              "children": []
                            },
                            {
                              "value": "str",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            description=\"Temperature in the specified location\"\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=\"Temperature in the specified location\"\n        )",
                                  "children": [
                                    {
                                      "value": "description=\"Temperature in the specified location\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Temperature in the specified location\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Temperature in the specified location",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "humidity: str = SchemaField(description=\"Humidity in the specified location\")",
                      "children": [
                        {
                          "value": "humidity: str = SchemaField(description=\"Humidity in the specified location\")",
                          "children": [
                            {
                              "value": "humidity",
                              "children": []
                            },
                            {
                              "value": "str",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(description=\"Humidity in the specified location\")",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(description=\"Humidity in the specified location\")",
                                  "children": [
                                    {
                                      "value": "description=\"Humidity in the specified location\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Humidity in the specified location\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Humidity in the specified location",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "condition: str = SchemaField(\n            description=\"Weather condition in the specified location\"\n        )",
                      "children": [
                        {
                          "value": "condition: str = SchemaField(\n            description=\"Weather condition in the specified location\"\n        )",
                          "children": [
                            {
                              "value": "condition",
                              "children": []
                            },
                            {
                              "value": "str",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            description=\"Weather condition in the specified location\"\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=\"Weather condition in the specified location\"\n        )",
                                  "children": [
                                    {
                                      "value": "description=\"Weather condition in the specified location\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Weather condition in the specified location\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Weather condition in the specified location",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "error: str = SchemaField(\n            description=\"Error message if the weather information cannot be retrieved\"\n        )",
                      "children": [
                        {
                          "value": "error: str = SchemaField(\n            description=\"Error message if the weather information cannot be retrieved\"\n        )",
                          "children": [
                            {
                              "value": "error",
                              "children": []
                            },
                            {
                              "value": "str",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            description=\"Error message if the weather information cannot be retrieved\"\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=\"Error message if the weather information cannot be retrieved\"\n        )",
                                  "children": [
                                    {
                                      "value": "description=\"Error message if the weather information cannot be retrieved\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Error message if the weather information cannot be retrieved\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Error message if the weather information cannot be retrieved",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def __init__(self):\n        super().__init__(\n            id=\"f7a8b2c3-6d4e-5f8b-9e7f-6d4e5f8b9e7f\",\n            input_schema=GetWeatherInformationBlock.Input,\n            output_schema=GetWeatherInformationBlock.Output,\n            description=\"Retrieves weather information for a specified location using OpenWeatherMap API.\",\n            test_input={\n                \"location\": \"New York\",\n                \"use_celsius\": True,\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n            },\n            test_output=[\n                (\"temperature\", \"21.66\"),\n                (\"humidity\", \"32\"),\n                (\"condition\", \"overcast clouds\"),\n            ],\n            test_mock={\n                \"get_request\": lambda url, json: {\n                    \"main\": {\"temp\": 21.66, \"humidity\": 32},\n                    \"weather\": [{\"description\": \"overcast clouds\"}],\n                }\n            },\n            test_credentials=TEST_CREDENTIALS,\n        )",
              "children": [
                {
                  "value": "__init__",
                  "children": []
                },
                {
                  "value": "(self)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "super().__init__(\n            id=\"f7a8b2c3-6d4e-5f8b-9e7f-6d4e5f8b9e7f\",\n            input_schema=GetWeatherInformationBlock.Input,\n            output_schema=GetWeatherInformationBlock.Output,\n            description=\"Retrieves weather information for a specified location using OpenWeatherMap API.\",\n            test_input={\n                \"location\": \"New York\",\n                \"use_celsius\": True,\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n            },\n            test_output=[\n                (\"temperature\", \"21.66\"),\n                (\"humidity\", \"32\"),\n                (\"condition\", \"overcast clouds\"),\n            ],\n            test_mock={\n                \"get_request\": lambda url, json: {\n                    \"main\": {\"temp\": 21.66, \"humidity\": 32},\n                    \"weather\": [{\"description\": \"overcast clouds\"}],\n                }\n            },\n            test_credentials=TEST_CREDENTIALS,\n        )",
                  "children": [
                    {
                      "value": "super().__init__(\n            id=\"f7a8b2c3-6d4e-5f8b-9e7f-6d4e5f8b9e7f\",\n            input_schema=GetWeatherInformationBlock.Input,\n            output_schema=GetWeatherInformationBlock.Output,\n            description=\"Retrieves weather information for a specified location using OpenWeatherMap API.\",\n            test_input={\n                \"location\": \"New York\",\n                \"use_celsius\": True,\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n            },\n            test_output=[\n                (\"temperature\", \"21.66\"),\n                (\"humidity\", \"32\"),\n                (\"condition\", \"overcast clouds\"),\n            ],\n            test_mock={\n                \"get_request\": lambda url, json: {\n                    \"main\": {\"temp\": 21.66, \"humidity\": 32},\n                    \"weather\": [{\"description\": \"overcast clouds\"}],\n                }\n            },\n            test_credentials=TEST_CREDENTIALS,\n        )",
                      "children": [
                        {
                          "value": "super().__init__(\n            id=\"f7a8b2c3-6d4e-5f8b-9e7f-6d4e5f8b9e7f\",\n            input_schema=GetWeatherInformationBlock.Input,\n            output_schema=GetWeatherInformationBlock.Output,\n            description=\"Retrieves weather information for a specified location using OpenWeatherMap API.\",\n            test_input={\n                \"location\": \"New York\",\n                \"use_celsius\": True,\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n            },\n            test_output=[\n                (\"temperature\", \"21.66\"),\n                (\"humidity\", \"32\"),\n                (\"condition\", \"overcast clouds\"),\n            ],\n            test_mock={\n                \"get_request\": lambda url, json: {\n                    \"main\": {\"temp\": 21.66, \"humidity\": 32},\n                    \"weather\": [{\"description\": \"overcast clouds\"}],\n                }\n            },\n            test_credentials=TEST_CREDENTIALS,\n        )",
                          "children": [
                            {
                              "value": "super().__init__",
                              "children": [
                                {
                                  "value": "super()",
                                  "children": [
                                    {
                                      "value": "super",
                                      "children": []
                                    },
                                    {
                                      "value": "()",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "__init__",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\n            id=\"f7a8b2c3-6d4e-5f8b-9e7f-6d4e5f8b9e7f\",\n            input_schema=GetWeatherInformationBlock.Input,\n            output_schema=GetWeatherInformationBlock.Output,\n            description=\"Retrieves weather information for a specified location using OpenWeatherMap API.\",\n            test_input={\n                \"location\": \"New York\",\n                \"use_celsius\": True,\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n            },\n            test_output=[\n                (\"temperature\", \"21.66\"),\n                (\"humidity\", \"32\"),\n                (\"condition\", \"overcast clouds\"),\n            ],\n            test_mock={\n                \"get_request\": lambda url, json: {\n                    \"main\": {\"temp\": 21.66, \"humidity\": 32},\n                    \"weather\": [{\"description\": \"overcast clouds\"}],\n                }\n            },\n            test_credentials=TEST_CREDENTIALS,\n        )",
                              "children": [
                                {
                                  "value": "id=\"f7a8b2c3-6d4e-5f8b-9e7f-6d4e5f8b9e7f\"",
                                  "children": [
                                    {
                                      "value": "id",
                                      "children": []
                                    },
                                    {
                                      "value": "\"f7a8b2c3-6d4e-5f8b-9e7f-6d4e5f8b9e7f\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "f7a8b2c3-6d4e-5f8b-9e7f-6d4e5f8b9e7f",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "input_schema=GetWeatherInformationBlock.Input",
                                  "children": [
                                    {
                                      "value": "input_schema",
                                      "children": []
                                    },
                                    {
                                      "value": "GetWeatherInformationBlock.Input",
                                      "children": [
                                        {
                                          "value": "GetWeatherInformationBlock",
                                          "children": []
                                        },
                                        {
                                          "value": "Input",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "output_schema=GetWeatherInformationBlock.Output",
                                  "children": [
                                    {
                                      "value": "output_schema",
                                      "children": []
                                    },
                                    {
                                      "value": "GetWeatherInformationBlock.Output",
                                      "children": [
                                        {
                                          "value": "GetWeatherInformationBlock",
                                          "children": []
                                        },
                                        {
                                          "value": "Output",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "description=\"Retrieves weather information for a specified location using OpenWeatherMap API.\"",
                                  "children": [
                                    {
                                      "value": "description",
                                      "children": []
                                    },
                                    {
                                      "value": "\"Retrieves weather information for a specified location using OpenWeatherMap API.\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "Retrieves weather information for a specified location using OpenWeatherMap API.",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "test_input={\n                \"location\": \"New York\",\n                \"use_celsius\": True,\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n            }",
                                  "children": [
                                    {
                                      "value": "test_input",
                                      "children": []
                                    },
                                    {
                                      "value": "{\n                \"location\": \"New York\",\n                \"use_celsius\": True,\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n            }",
                                      "children": [
                                        {
                                          "value": "\"location\": \"New York\"",
                                          "children": [
                                            {
                                              "value": "\"location\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "location",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"New York\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "New York",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"use_celsius\": True",
                                          "children": [
                                            {
                                              "value": "\"use_celsius\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "use_celsius",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "True",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"credentials\": TEST_CREDENTIALS_INPUT",
                                          "children": [
                                            {
                                              "value": "\"credentials\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "credentials",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "TEST_CREDENTIALS_INPUT",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "test_output=[\n                (\"temperature\", \"21.66\"),\n                (\"humidity\", \"32\"),\n                (\"condition\", \"overcast clouds\"),\n            ]",
                                  "children": [
                                    {
                                      "value": "test_output",
                                      "children": []
                                    },
                                    {
                                      "value": "[\n                (\"temperature\", \"21.66\"),\n                (\"humidity\", \"32\"),\n                (\"condition\", \"overcast clouds\"),\n            ]",
                                      "children": [
                                        {
                                          "value": "(\"temperature\", \"21.66\")",
                                          "children": [
                                            {
                                              "value": "\"temperature\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "temperature",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"21.66\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "21.66",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(\"humidity\", \"32\")",
                                          "children": [
                                            {
                                              "value": "\"humidity\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "humidity",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"32\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "32",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(\"condition\", \"overcast clouds\")",
                                          "children": [
                                            {
                                              "value": "\"condition\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "condition",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"overcast clouds\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "overcast clouds",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "test_mock={\n                \"get_request\": lambda url, json: {\n                    \"main\": {\"temp\": 21.66, \"humidity\": 32},\n                    \"weather\": [{\"description\": \"overcast clouds\"}],\n                }\n            }",
                                  "children": [
                                    {
                                      "value": "test_mock",
                                      "children": []
                                    },
                                    {
                                      "value": "{\n                \"get_request\": lambda url, json: {\n                    \"main\": {\"temp\": 21.66, \"humidity\": 32},\n                    \"weather\": [{\"description\": \"overcast clouds\"}],\n                }\n            }",
                                      "children": [
                                        {
                                          "value": "\"get_request\": lambda url, json: {\n                    \"main\": {\"temp\": 21.66, \"humidity\": 32},\n                    \"weather\": [{\"description\": \"overcast clouds\"}],\n                }",
                                          "children": [
                                            {
                                              "value": "\"get_request\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "get_request",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "lambda url, json: {\n                    \"main\": {\"temp\": 21.66, \"humidity\": 32},\n                    \"weather\": [{\"description\": \"overcast clouds\"}],\n                }",
                                              "children": [
                                                {
                                                  "value": "url, json",
                                                  "children": [
                                                    {
                                                      "value": "url",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "json",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "{\n                    \"main\": {\"temp\": 21.66, \"humidity\": 32},\n                    \"weather\": [{\"description\": \"overcast clouds\"}],\n                }",
                                                  "children": [
                                                    {
                                                      "value": "\"main\": {\"temp\": 21.66, \"humidity\": 32}",
                                                      "children": [
                                                        {
                                                          "value": "\"main\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "main",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "{\"temp\": 21.66, \"humidity\": 32}",
                                                          "children": [
                                                            {
                                                              "value": "\"temp\": 21.66",
                                                              "children": [
                                                                {
                                                                  "value": "\"temp\"",
                                                                  "children": [
                                                                    {
                                                                      "value": "\"",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "temp",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "\"",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "value": "21.66",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "\"humidity\": 32",
                                                              "children": [
                                                                {
                                                                  "value": "\"humidity\"",
                                                                  "children": [
                                                                    {
                                                                      "value": "\"",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "humidity",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "\"",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "value": "32",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"weather\": [{\"description\": \"overcast clouds\"}]",
                                                      "children": [
                                                        {
                                                          "value": "\"weather\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "weather",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "[{\"description\": \"overcast clouds\"}]",
                                                          "children": [
                                                            {
                                                              "value": "{\"description\": \"overcast clouds\"}",
                                                              "children": [
                                                                {
                                                                  "value": "\"description\": \"overcast clouds\"",
                                                                  "children": [
                                                                    {
                                                                      "value": "\"description\"",
                                                                      "children": [
                                                                        {
                                                                          "value": "\"",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "value": "description",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "value": "\"",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "value": "\"overcast clouds\"",
                                                                      "children": [
                                                                        {
                                                                          "value": "\"",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "value": "overcast clouds",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "value": "\"",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "test_credentials=TEST_CREDENTIALS",
                                  "children": [
                                    {
                                      "value": "test_credentials",
                                      "children": []
                                    },
                                    {
                                      "value": "TEST_CREDENTIALS",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def run(\n        self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs\n    ) -> BlockOutput:\n        units = \"metric\" if input_data.use_celsius else \"imperial\"\n        api_key = credentials.api_key\n        location = input_data.location\n        url = f\"http://api.openweathermap.org/data/2.5/weather?q={quote(location)}&appid={api_key}&units={units}\"\n        weather_data = self.get_request(url, json=True)\n\n        if \"main\" in weather_data and \"weather\" in weather_data:\n            yield \"temperature\", str(weather_data[\"main\"][\"temp\"])\n            yield \"humidity\", str(weather_data[\"main\"][\"humidity\"])\n            yield \"condition\", weather_data[\"weather\"][0][\"description\"]\n        else:\n            raise RuntimeError(f\"Expected keys not found in response: {weather_data}\")",
              "children": [
                {
                  "value": "run",
                  "children": []
                },
                {
                  "value": "(\n        self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs\n    )",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "input_data: Input",
                      "children": [
                        {
                          "value": "input_data",
                          "children": []
                        },
                        {
                          "value": "Input",
                          "children": [
                            {
                              "value": "Input",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "*",
                      "children": []
                    },
                    {
                      "value": "credentials: APIKeyCredentials",
                      "children": [
                        {
                          "value": "credentials",
                          "children": []
                        },
                        {
                          "value": "APIKeyCredentials",
                          "children": [
                            {
                              "value": "APIKeyCredentials",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "**kwargs",
                      "children": [
                        {
                          "value": "kwargs",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "BlockOutput",
                  "children": [
                    {
                      "value": "BlockOutput",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "units = \"metric\" if input_data.use_celsius else \"imperial\"\n        api_key = credentials.api_key\n        location = input_data.location\n        url = f\"http://api.openweathermap.org/data/2.5/weather?q={quote(location)}&appid={api_key}&units={units}\"\n        weather_data = self.get_request(url, json=True)\n\n        if \"main\" in weather_data and \"weather\" in weather_data:\n            yield \"temperature\", str(weather_data[\"main\"][\"temp\"])\n            yield \"humidity\", str(weather_data[\"main\"][\"humidity\"])\n            yield \"condition\", weather_data[\"weather\"][0][\"description\"]\n        else:\n            raise RuntimeError(f\"Expected keys not found in response: {weather_data}\")",
                  "children": [
                    {
                      "value": "units = \"metric\" if input_data.use_celsius else \"imperial\"",
                      "children": [
                        {
                          "value": "units = \"metric\" if input_data.use_celsius else \"imperial\"",
                          "children": [
                            {
                              "value": "units",
                              "children": []
                            },
                            {
                              "value": "\"metric\" if input_data.use_celsius else \"imperial\"",
                              "children": [
                                {
                                  "value": "\"metric\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "metric",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "input_data.use_celsius",
                                  "children": [
                                    {
                                      "value": "input_data",
                                      "children": []
                                    },
                                    {
                                      "value": "use_celsius",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "\"imperial\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "imperial",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "api_key = credentials.api_key",
                      "children": [
                        {
                          "value": "api_key = credentials.api_key",
                          "children": [
                            {
                              "value": "api_key",
                              "children": []
                            },
                            {
                              "value": "credentials.api_key",
                              "children": [
                                {
                                  "value": "credentials",
                                  "children": []
                                },
                                {
                                  "value": "api_key",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "location = input_data.location",
                      "children": [
                        {
                          "value": "location = input_data.location",
                          "children": [
                            {
                              "value": "location",
                              "children": []
                            },
                            {
                              "value": "input_data.location",
                              "children": [
                                {
                                  "value": "input_data",
                                  "children": []
                                },
                                {
                                  "value": "location",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "url = f\"http://api.openweathermap.org/data/2.5/weather?q={quote(location)}&appid={api_key}&units={units}\"",
                      "children": [
                        {
                          "value": "url = f\"http://api.openweathermap.org/data/2.5/weather?q={quote(location)}&appid={api_key}&units={units}\"",
                          "children": [
                            {
                              "value": "url",
                              "children": []
                            },
                            {
                              "value": "f\"http://api.openweathermap.org/data/2.5/weather?q={quote(location)}&appid={api_key}&units={units}\"",
                              "children": [
                                {
                                  "value": "f\"",
                                  "children": []
                                },
                                {
                                  "value": "http://api.openweathermap.org/data/2.5/weather?q=",
                                  "children": []
                                },
                                {
                                  "value": "{quote(location)}",
                                  "children": [
                                    {
                                      "value": "quote(location)",
                                      "children": [
                                        {
                                          "value": "quote",
                                          "children": []
                                        },
                                        {
                                          "value": "(location)",
                                          "children": [
                                            {
                                              "value": "location",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "&appid=",
                                  "children": []
                                },
                                {
                                  "value": "{api_key}",
                                  "children": [
                                    {
                                      "value": "api_key",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "&units=",
                                  "children": []
                                },
                                {
                                  "value": "{units}",
                                  "children": [
                                    {
                                      "value": "units",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "weather_data = self.get_request(url, json=True)",
                      "children": [
                        {
                          "value": "weather_data = self.get_request(url, json=True)",
                          "children": [
                            {
                              "value": "weather_data",
                              "children": []
                            },
                            {
                              "value": "self.get_request(url, json=True)",
                              "children": [
                                {
                                  "value": "self.get_request",
                                  "children": [
                                    {
                                      "value": "self",
                                      "children": []
                                    },
                                    {
                                      "value": "get_request",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(url, json=True)",
                                  "children": [
                                    {
                                      "value": "url",
                                      "children": []
                                    },
                                    {
                                      "value": "json=True",
                                      "children": [
                                        {
                                          "value": "json",
                                          "children": []
                                        },
                                        {
                                          "value": "True",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "if \"main\" in weather_data and \"weather\" in weather_data:\n            yield \"temperature\", str(weather_data[\"main\"][\"temp\"])\n            yield \"humidity\", str(weather_data[\"main\"][\"humidity\"])\n            yield \"condition\", weather_data[\"weather\"][0][\"description\"]\n        else:\n            raise RuntimeError(f\"Expected keys not found in response: {weather_data}\")",
                      "children": [
                        {
                          "value": "\"main\" in weather_data and \"weather\" in weather_data",
                          "children": [
                            {
                              "value": "\"main\" in weather_data",
                              "children": [
                                {
                                  "value": "\"main\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "main",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "weather_data",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "\"weather\" in weather_data",
                              "children": [
                                {
                                  "value": "\"weather\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "weather",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "weather_data",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "yield \"temperature\", str(weather_data[\"main\"][\"temp\"])\n            yield \"humidity\", str(weather_data[\"main\"][\"humidity\"])\n            yield \"condition\", weather_data[\"weather\"][0][\"description\"]",
                          "children": [
                            {
                              "value": "yield \"temperature\", str(weather_data[\"main\"][\"temp\"])",
                              "children": [
                                {
                                  "value": "yield \"temperature\", str(weather_data[\"main\"][\"temp\"])",
                                  "children": [
                                    {
                                      "value": "\"temperature\", str(weather_data[\"main\"][\"temp\"])",
                                      "children": [
                                        {
                                          "value": "\"temperature\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "temperature",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "str(weather_data[\"main\"][\"temp\"])",
                                          "children": [
                                            {
                                              "value": "str",
                                              "children": []
                                            },
                                            {
                                              "value": "(weather_data[\"main\"][\"temp\"])",
                                              "children": [
                                                {
                                                  "value": "weather_data[\"main\"][\"temp\"]",
                                                  "children": [
                                                    {
                                                      "value": "weather_data[\"main\"]",
                                                      "children": [
                                                        {
                                                          "value": "weather_data",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"main\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "main",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"temp\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "temp",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "yield \"humidity\", str(weather_data[\"main\"][\"humidity\"])",
                              "children": [
                                {
                                  "value": "yield \"humidity\", str(weather_data[\"main\"][\"humidity\"])",
                                  "children": [
                                    {
                                      "value": "\"humidity\", str(weather_data[\"main\"][\"humidity\"])",
                                      "children": [
                                        {
                                          "value": "\"humidity\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "humidity",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "str(weather_data[\"main\"][\"humidity\"])",
                                          "children": [
                                            {
                                              "value": "str",
                                              "children": []
                                            },
                                            {
                                              "value": "(weather_data[\"main\"][\"humidity\"])",
                                              "children": [
                                                {
                                                  "value": "weather_data[\"main\"][\"humidity\"]",
                                                  "children": [
                                                    {
                                                      "value": "weather_data[\"main\"]",
                                                      "children": [
                                                        {
                                                          "value": "weather_data",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"main\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "main",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"humidity\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "humidity",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "yield \"condition\", weather_data[\"weather\"][0][\"description\"]",
                              "children": [
                                {
                                  "value": "yield \"condition\", weather_data[\"weather\"][0][\"description\"]",
                                  "children": [
                                    {
                                      "value": "\"condition\", weather_data[\"weather\"][0][\"description\"]",
                                      "children": [
                                        {
                                          "value": "\"condition\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "condition",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "weather_data[\"weather\"][0][\"description\"]",
                                          "children": [
                                            {
                                              "value": "weather_data[\"weather\"][0]",
                                              "children": [
                                                {
                                                  "value": "weather_data[\"weather\"]",
                                                  "children": [
                                                    {
                                                      "value": "weather_data",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"weather\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "weather",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "0",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"description\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "description",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "else:\n            raise RuntimeError(f\"Expected keys not found in response: {weather_data}\")",
                          "children": [
                            {
                              "value": "raise RuntimeError(f\"Expected keys not found in response: {weather_data}\")",
                              "children": [
                                {
                                  "value": "raise RuntimeError(f\"Expected keys not found in response: {weather_data}\")",
                                  "children": [
                                    {
                                      "value": "RuntimeError(f\"Expected keys not found in response: {weather_data}\")",
                                      "children": [
                                        {
                                          "value": "RuntimeError",
                                          "children": []
                                        },
                                        {
                                          "value": "(f\"Expected keys not found in response: {weather_data}\")",
                                          "children": [
                                            {
                                              "value": "f\"Expected keys not found in response: {weather_data}\"",
                                              "children": [
                                                {
                                                  "value": "f\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "Expected keys not found in response:",
                                                  "children": []
                                                },
                                                {
                                                  "value": "{weather_data}",
                                                  "children": [
                                                    {
                                                      "value": "weather_data",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}