{
  "value": "import logging\n\nfrom colorama import Fore, Style\nfrom google.cloud.logging_v2.handlers import CloudLoggingFilter, StructuredLogHandler\n\nfrom .utils import remove_color_codes\n\n\nclass FancyConsoleFormatter(logging.Formatter):\n    \"\"\"\n    A custom logging formatter designed for console output.\n\n    This formatter enhances the standard logging output with color coding. The color\n    coding is based on the level of the log message, making it easier to distinguish\n    between different types of messages in the console output.\n\n    The color for each level is defined in the LEVEL_COLOR_MAP class attribute.\n    \"\"\"\n\n    # level -> (level & text color, title color)\n    LEVEL_COLOR_MAP = {\n        logging.DEBUG: Fore.LIGHTBLACK_EX,\n        logging.INFO: Fore.BLUE,\n        logging.WARNING: Fore.YELLOW,\n        logging.ERROR: Fore.RED,\n        logging.CRITICAL: Fore.RED + Style.BRIGHT,\n    }\n\n    def format(self, record: logging.LogRecord) -> str:\n        # Make sure `msg` is a string\n        if not hasattr(record, \"msg\"):\n            record.msg = \"\"\n        elif type(record.msg) is not str:\n            record.msg = str(record.msg)\n\n        # Determine default color based on error level\n        level_color = \"\"\n        if record.levelno in self.LEVEL_COLOR_MAP:\n            level_color = self.LEVEL_COLOR_MAP[record.levelno]\n            record.levelname = f\"{level_color}{record.levelname}{Style.RESET_ALL}\"\n\n        # Determine color for message\n        color = getattr(record, \"color\", level_color)\n        color_is_specified = hasattr(record, \"color\")\n\n        # Don't color INFO messages unless the color is explicitly specified.\n        if color and (record.levelno != logging.INFO or color_is_specified):\n            record.msg = f\"{color}{record.msg}{Style.RESET_ALL}\"\n\n        return super().format(record)\n\n\nclass AGPTFormatter(FancyConsoleFormatter):\n    def __init__(self, *args, no_color: bool = False, **kwargs):\n        super().__init__(*args, **kwargs)\n        self.no_color = no_color\n\n    def format(self, record: logging.LogRecord) -> str:\n        # Make sure `msg` is a string\n        if not hasattr(record, \"msg\"):\n            record.msg = \"\"\n        elif type(record.msg) is not str:\n            record.msg = str(record.msg)\n\n        # Strip color from the message to prevent color spoofing\n        if record.msg and not getattr(record, \"preserve_color\", False):\n            record.msg = remove_color_codes(record.msg)\n\n        # Determine color for title\n        title = getattr(record, \"title\", \"\")\n        title_color = getattr(record, \"title_color\", \"\") or self.LEVEL_COLOR_MAP.get(\n            record.levelno, \"\"\n        )\n        if title and title_color:\n            title = f\"{title_color + Style.BRIGHT}{title}{Style.RESET_ALL}\"\n        # Make sure record.title is set, and padded with a space if not empty\n        record.title = f\"{title} \" if title else \"\"\n\n        if self.no_color:\n            return remove_color_codes(super().format(record))\n        else:\n            return super().format(record)\n\n\nclass StructuredLoggingFormatter(StructuredLogHandler, logging.Formatter):\n    def __init__(self):\n        # Set up CloudLoggingFilter to add diagnostic info to the log records\n        self.cloud_logging_filter = CloudLoggingFilter()\n\n        # Init StructuredLogHandler\n        super().__init__()\n\n    def format(self, record: logging.LogRecord) -> str:\n        self.cloud_logging_filter.filter(record)\n        return super().format(record)",
  "children": [
    {
      "value": "import logging",
      "children": [
        {
          "value": "logging",
          "children": [
            {
              "value": "logging",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from colorama import Fore, Style",
      "children": [
        {
          "value": "colorama",
          "children": [
            {
              "value": "colorama",
              "children": []
            }
          ]
        },
        {
          "value": "Fore",
          "children": [
            {
              "value": "Fore",
              "children": []
            }
          ]
        },
        {
          "value": "Style",
          "children": [
            {
              "value": "Style",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from google.cloud.logging_v2.handlers import CloudLoggingFilter, StructuredLogHandler",
      "children": [
        {
          "value": "google.cloud.logging_v2.handlers",
          "children": [
            {
              "value": "google",
              "children": []
            },
            {
              "value": "cloud",
              "children": []
            },
            {
              "value": "logging_v2",
              "children": []
            },
            {
              "value": "handlers",
              "children": []
            }
          ]
        },
        {
          "value": "CloudLoggingFilter",
          "children": [
            {
              "value": "CloudLoggingFilter",
              "children": []
            }
          ]
        },
        {
          "value": "StructuredLogHandler",
          "children": [
            {
              "value": "StructuredLogHandler",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from .utils import remove_color_codes",
      "children": [
        {
          "value": ".utils",
          "children": [
            {
              "value": ".",
              "children": []
            },
            {
              "value": "utils",
              "children": [
                {
                  "value": "utils",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "remove_color_codes",
          "children": [
            {
              "value": "remove_color_codes",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "class FancyConsoleFormatter(logging.Formatter):\n    \"\"\"\n    A custom logging formatter designed for console output.\n\n    This formatter enhances the standard logging output with color coding. The color\n    coding is based on the level of the log message, making it easier to distinguish\n    between different types of messages in the console output.\n\n    The color for each level is defined in the LEVEL_COLOR_MAP class attribute.\n    \"\"\"\n\n    # level -> (level & text color, title color)\n    LEVEL_COLOR_MAP = {\n        logging.DEBUG: Fore.LIGHTBLACK_EX,\n        logging.INFO: Fore.BLUE,\n        logging.WARNING: Fore.YELLOW,\n        logging.ERROR: Fore.RED,\n        logging.CRITICAL: Fore.RED + Style.BRIGHT,\n    }\n\n    def format(self, record: logging.LogRecord) -> str:\n        # Make sure `msg` is a string\n        if not hasattr(record, \"msg\"):\n            record.msg = \"\"\n        elif type(record.msg) is not str:\n            record.msg = str(record.msg)\n\n        # Determine default color based on error level\n        level_color = \"\"\n        if record.levelno in self.LEVEL_COLOR_MAP:\n            level_color = self.LEVEL_COLOR_MAP[record.levelno]\n            record.levelname = f\"{level_color}{record.levelname}{Style.RESET_ALL}\"\n\n        # Determine color for message\n        color = getattr(record, \"color\", level_color)\n        color_is_specified = hasattr(record, \"color\")\n\n        # Don't color INFO messages unless the color is explicitly specified.\n        if color and (record.levelno != logging.INFO or color_is_specified):\n            record.msg = f\"{color}{record.msg}{Style.RESET_ALL}\"\n\n        return super().format(record)",
      "children": [
        {
          "value": "FancyConsoleFormatter",
          "children": []
        },
        {
          "value": "(logging.Formatter)",
          "children": [
            {
              "value": "logging.Formatter",
              "children": [
                {
                  "value": "logging",
                  "children": []
                },
                {
                  "value": "Formatter",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "\"\"\"\n    A custom logging formatter designed for console output.\n\n    This formatter enhances the standard logging output with color coding. The color\n    coding is based on the level of the log message, making it easier to distinguish\n    between different types of messages in the console output.\n\n    The color for each level is defined in the LEVEL_COLOR_MAP class attribute.\n    \"\"\"\n\n    # level -> (level & text color, title color)\n    LEVEL_COLOR_MAP = {\n        logging.DEBUG: Fore.LIGHTBLACK_EX,\n        logging.INFO: Fore.BLUE,\n        logging.WARNING: Fore.YELLOW,\n        logging.ERROR: Fore.RED,\n        logging.CRITICAL: Fore.RED + Style.BRIGHT,\n    }\n\n    def format(self, record: logging.LogRecord) -> str:\n        # Make sure `msg` is a string\n        if not hasattr(record, \"msg\"):\n            record.msg = \"\"\n        elif type(record.msg) is not str:\n            record.msg = str(record.msg)\n\n        # Determine default color based on error level\n        level_color = \"\"\n        if record.levelno in self.LEVEL_COLOR_MAP:\n            level_color = self.LEVEL_COLOR_MAP[record.levelno]\n            record.levelname = f\"{level_color}{record.levelname}{Style.RESET_ALL}\"\n\n        # Determine color for message\n        color = getattr(record, \"color\", level_color)\n        color_is_specified = hasattr(record, \"color\")\n\n        # Don't color INFO messages unless the color is explicitly specified.\n        if color and (record.levelno != logging.INFO or color_is_specified):\n            record.msg = f\"{color}{record.msg}{Style.RESET_ALL}\"\n\n        return super().format(record)",
          "children": [
            {
              "value": "\"\"\"\n    A custom logging formatter designed for console output.\n\n    This formatter enhances the standard logging output with color coding. The color\n    coding is based on the level of the log message, making it easier to distinguish\n    between different types of messages in the console output.\n\n    The color for each level is defined in the LEVEL_COLOR_MAP class attribute.\n    \"\"\"",
              "children": [
                {
                  "value": "\"\"\"\n    A custom logging formatter designed for console output.\n\n    This formatter enhances the standard logging output with color coding. The color\n    coding is based on the level of the log message, making it easier to distinguish\n    between different types of messages in the console output.\n\n    The color for each level is defined in the LEVEL_COLOR_MAP class attribute.\n    \"\"\"",
                  "children": [
                    {
                      "value": "\"\"\"",
                      "children": []
                    },
                    {
                      "value": "A custom logging formatter designed for console output.\n\n    This formatter enhances the standard logging output with color coding. The color\n    coding is based on the level of the log message, making it easier to distinguish\n    between different types of messages in the console output.\n\n    The color for each level is defined in the LEVEL_COLOR_MAP class attribute.",
                      "children": []
                    },
                    {
                      "value": "\"\"\"",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "# level -> (level & text color, title color)",
              "children": []
            },
            {
              "value": "LEVEL_COLOR_MAP = {\n        logging.DEBUG: Fore.LIGHTBLACK_EX,\n        logging.INFO: Fore.BLUE,\n        logging.WARNING: Fore.YELLOW,\n        logging.ERROR: Fore.RED,\n        logging.CRITICAL: Fore.RED + Style.BRIGHT,\n    }",
              "children": [
                {
                  "value": "LEVEL_COLOR_MAP = {\n        logging.DEBUG: Fore.LIGHTBLACK_EX,\n        logging.INFO: Fore.BLUE,\n        logging.WARNING: Fore.YELLOW,\n        logging.ERROR: Fore.RED,\n        logging.CRITICAL: Fore.RED + Style.BRIGHT,\n    }",
                  "children": [
                    {
                      "value": "LEVEL_COLOR_MAP",
                      "children": []
                    },
                    {
                      "value": "{\n        logging.DEBUG: Fore.LIGHTBLACK_EX,\n        logging.INFO: Fore.BLUE,\n        logging.WARNING: Fore.YELLOW,\n        logging.ERROR: Fore.RED,\n        logging.CRITICAL: Fore.RED + Style.BRIGHT,\n    }",
                      "children": [
                        {
                          "value": "logging.DEBUG: Fore.LIGHTBLACK_EX",
                          "children": [
                            {
                              "value": "logging.DEBUG",
                              "children": [
                                {
                                  "value": "logging",
                                  "children": []
                                },
                                {
                                  "value": "DEBUG",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "Fore.LIGHTBLACK_EX",
                              "children": [
                                {
                                  "value": "Fore",
                                  "children": []
                                },
                                {
                                  "value": "LIGHTBLACK_EX",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "logging.INFO: Fore.BLUE",
                          "children": [
                            {
                              "value": "logging.INFO",
                              "children": [
                                {
                                  "value": "logging",
                                  "children": []
                                },
                                {
                                  "value": "INFO",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "Fore.BLUE",
                              "children": [
                                {
                                  "value": "Fore",
                                  "children": []
                                },
                                {
                                  "value": "BLUE",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "logging.WARNING: Fore.YELLOW",
                          "children": [
                            {
                              "value": "logging.WARNING",
                              "children": [
                                {
                                  "value": "logging",
                                  "children": []
                                },
                                {
                                  "value": "WARNING",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "Fore.YELLOW",
                              "children": [
                                {
                                  "value": "Fore",
                                  "children": []
                                },
                                {
                                  "value": "YELLOW",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "logging.ERROR: Fore.RED",
                          "children": [
                            {
                              "value": "logging.ERROR",
                              "children": [
                                {
                                  "value": "logging",
                                  "children": []
                                },
                                {
                                  "value": "ERROR",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "Fore.RED",
                              "children": [
                                {
                                  "value": "Fore",
                                  "children": []
                                },
                                {
                                  "value": "RED",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "logging.CRITICAL: Fore.RED + Style.BRIGHT",
                          "children": [
                            {
                              "value": "logging.CRITICAL",
                              "children": [
                                {
                                  "value": "logging",
                                  "children": []
                                },
                                {
                                  "value": "CRITICAL",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "Fore.RED + Style.BRIGHT",
                              "children": [
                                {
                                  "value": "Fore.RED",
                                  "children": [
                                    {
                                      "value": "Fore",
                                      "children": []
                                    },
                                    {
                                      "value": "RED",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "Style.BRIGHT",
                                  "children": [
                                    {
                                      "value": "Style",
                                      "children": []
                                    },
                                    {
                                      "value": "BRIGHT",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def format(self, record: logging.LogRecord) -> str:\n        # Make sure `msg` is a string\n        if not hasattr(record, \"msg\"):\n            record.msg = \"\"\n        elif type(record.msg) is not str:\n            record.msg = str(record.msg)\n\n        # Determine default color based on error level\n        level_color = \"\"\n        if record.levelno in self.LEVEL_COLOR_MAP:\n            level_color = self.LEVEL_COLOR_MAP[record.levelno]\n            record.levelname = f\"{level_color}{record.levelname}{Style.RESET_ALL}\"\n\n        # Determine color for message\n        color = getattr(record, \"color\", level_color)\n        color_is_specified = hasattr(record, \"color\")\n\n        # Don't color INFO messages unless the color is explicitly specified.\n        if color and (record.levelno != logging.INFO or color_is_specified):\n            record.msg = f\"{color}{record.msg}{Style.RESET_ALL}\"\n\n        return super().format(record)",
              "children": [
                {
                  "value": "format",
                  "children": []
                },
                {
                  "value": "(self, record: logging.LogRecord)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "record: logging.LogRecord",
                      "children": [
                        {
                          "value": "record",
                          "children": []
                        },
                        {
                          "value": "logging.LogRecord",
                          "children": [
                            {
                              "value": "logging.LogRecord",
                              "children": [
                                {
                                  "value": "logging",
                                  "children": []
                                },
                                {
                                  "value": "LogRecord",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "str",
                  "children": [
                    {
                      "value": "str",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "# Make sure `msg` is a string",
                  "children": []
                },
                {
                  "value": "if not hasattr(record, \"msg\"):\n            record.msg = \"\"\n        elif type(record.msg) is not str:\n            record.msg = str(record.msg)\n\n        # Determine default color based on error level\n        level_color = \"\"\n        if record.levelno in self.LEVEL_COLOR_MAP:\n            level_color = self.LEVEL_COLOR_MAP[record.levelno]\n            record.levelname = f\"{level_color}{record.levelname}{Style.RESET_ALL}\"\n\n        # Determine color for message\n        color = getattr(record, \"color\", level_color)\n        color_is_specified = hasattr(record, \"color\")\n\n        # Don't color INFO messages unless the color is explicitly specified.\n        if color and (record.levelno != logging.INFO or color_is_specified):\n            record.msg = f\"{color}{record.msg}{Style.RESET_ALL}\"\n\n        return super().format(record)",
                  "children": [
                    {
                      "value": "if not hasattr(record, \"msg\"):\n            record.msg = \"\"\n        elif type(record.msg) is not str:\n            record.msg = str(record.msg)",
                      "children": [
                        {
                          "value": "not hasattr(record, \"msg\")",
                          "children": [
                            {
                              "value": "hasattr(record, \"msg\")",
                              "children": [
                                {
                                  "value": "hasattr",
                                  "children": []
                                },
                                {
                                  "value": "(record, \"msg\")",
                                  "children": [
                                    {
                                      "value": "record",
                                      "children": []
                                    },
                                    {
                                      "value": "\"msg\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "msg",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "record.msg = \"\"",
                          "children": [
                            {
                              "value": "record.msg = \"\"",
                              "children": [
                                {
                                  "value": "record.msg = \"\"",
                                  "children": [
                                    {
                                      "value": "record.msg",
                                      "children": [
                                        {
                                          "value": "record",
                                          "children": []
                                        },
                                        {
                                          "value": "msg",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "elif type(record.msg) is not str:\n            record.msg = str(record.msg)",
                          "children": [
                            {
                              "value": "type(record.msg) is not str",
                              "children": [
                                {
                                  "value": "type(record.msg)",
                                  "children": [
                                    {
                                      "value": "type",
                                      "children": []
                                    },
                                    {
                                      "value": "(record.msg)",
                                      "children": [
                                        {
                                          "value": "record.msg",
                                          "children": [
                                            {
                                              "value": "record",
                                              "children": []
                                            },
                                            {
                                              "value": "msg",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "record.msg = str(record.msg)",
                              "children": [
                                {
                                  "value": "record.msg = str(record.msg)",
                                  "children": [
                                    {
                                      "value": "record.msg = str(record.msg)",
                                      "children": [
                                        {
                                          "value": "record.msg",
                                          "children": [
                                            {
                                              "value": "record",
                                              "children": []
                                            },
                                            {
                                              "value": "msg",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "str(record.msg)",
                                          "children": [
                                            {
                                              "value": "str",
                                              "children": []
                                            },
                                            {
                                              "value": "(record.msg)",
                                              "children": [
                                                {
                                                  "value": "record.msg",
                                                  "children": [
                                                    {
                                                      "value": "record",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "msg",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "# Determine default color based on error level",
                      "children": []
                    },
                    {
                      "value": "level_color = \"\"",
                      "children": [
                        {
                          "value": "level_color = \"\"",
                          "children": [
                            {
                              "value": "level_color",
                              "children": []
                            },
                            {
                              "value": "\"\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "if record.levelno in self.LEVEL_COLOR_MAP:\n            level_color = self.LEVEL_COLOR_MAP[record.levelno]\n            record.levelname = f\"{level_color}{record.levelname}{Style.RESET_ALL}\"",
                      "children": [
                        {
                          "value": "record.levelno in self.LEVEL_COLOR_MAP",
                          "children": [
                            {
                              "value": "record.levelno",
                              "children": [
                                {
                                  "value": "record",
                                  "children": []
                                },
                                {
                                  "value": "levelno",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "self.LEVEL_COLOR_MAP",
                              "children": [
                                {
                                  "value": "self",
                                  "children": []
                                },
                                {
                                  "value": "LEVEL_COLOR_MAP",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "level_color = self.LEVEL_COLOR_MAP[record.levelno]\n            record.levelname = f\"{level_color}{record.levelname}{Style.RESET_ALL}\"",
                          "children": [
                            {
                              "value": "level_color = self.LEVEL_COLOR_MAP[record.levelno]",
                              "children": [
                                {
                                  "value": "level_color = self.LEVEL_COLOR_MAP[record.levelno]",
                                  "children": [
                                    {
                                      "value": "level_color",
                                      "children": []
                                    },
                                    {
                                      "value": "self.LEVEL_COLOR_MAP[record.levelno]",
                                      "children": [
                                        {
                                          "value": "self.LEVEL_COLOR_MAP",
                                          "children": [
                                            {
                                              "value": "self",
                                              "children": []
                                            },
                                            {
                                              "value": "LEVEL_COLOR_MAP",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "record.levelno",
                                          "children": [
                                            {
                                              "value": "record",
                                              "children": []
                                            },
                                            {
                                              "value": "levelno",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "record.levelname = f\"{level_color}{record.levelname}{Style.RESET_ALL}\"",
                              "children": [
                                {
                                  "value": "record.levelname = f\"{level_color}{record.levelname}{Style.RESET_ALL}\"",
                                  "children": [
                                    {
                                      "value": "record.levelname",
                                      "children": [
                                        {
                                          "value": "record",
                                          "children": []
                                        },
                                        {
                                          "value": "levelname",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "f\"{level_color}{record.levelname}{Style.RESET_ALL}\"",
                                      "children": [
                                        {
                                          "value": "f\"",
                                          "children": []
                                        },
                                        {
                                          "value": "{level_color}",
                                          "children": [
                                            {
                                              "value": "level_color",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "{record.levelname}",
                                          "children": [
                                            {
                                              "value": "record.levelname",
                                              "children": [
                                                {
                                                  "value": "record",
                                                  "children": []
                                                },
                                                {
                                                  "value": "levelname",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "{Style.RESET_ALL}",
                                          "children": [
                                            {
                                              "value": "Style.RESET_ALL",
                                              "children": [
                                                {
                                                  "value": "Style",
                                                  "children": []
                                                },
                                                {
                                                  "value": "RESET_ALL",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "# Determine color for message",
                      "children": []
                    },
                    {
                      "value": "color = getattr(record, \"color\", level_color)",
                      "children": [
                        {
                          "value": "color = getattr(record, \"color\", level_color)",
                          "children": [
                            {
                              "value": "color",
                              "children": []
                            },
                            {
                              "value": "getattr(record, \"color\", level_color)",
                              "children": [
                                {
                                  "value": "getattr",
                                  "children": []
                                },
                                {
                                  "value": "(record, \"color\", level_color)",
                                  "children": [
                                    {
                                      "value": "record",
                                      "children": []
                                    },
                                    {
                                      "value": "\"color\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "color",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "level_color",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "color_is_specified = hasattr(record, \"color\")",
                      "children": [
                        {
                          "value": "color_is_specified = hasattr(record, \"color\")",
                          "children": [
                            {
                              "value": "color_is_specified",
                              "children": []
                            },
                            {
                              "value": "hasattr(record, \"color\")",
                              "children": [
                                {
                                  "value": "hasattr",
                                  "children": []
                                },
                                {
                                  "value": "(record, \"color\")",
                                  "children": [
                                    {
                                      "value": "record",
                                      "children": []
                                    },
                                    {
                                      "value": "\"color\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "color",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "# Don't color INFO messages unless the color is explicitly specified.",
                      "children": []
                    },
                    {
                      "value": "if color and (record.levelno != logging.INFO or color_is_specified):\n            record.msg = f\"{color}{record.msg}{Style.RESET_ALL}\"",
                      "children": [
                        {
                          "value": "color and (record.levelno != logging.INFO or color_is_specified)",
                          "children": [
                            {
                              "value": "color",
                              "children": []
                            },
                            {
                              "value": "(record.levelno != logging.INFO or color_is_specified)",
                              "children": [
                                {
                                  "value": "record.levelno != logging.INFO or color_is_specified",
                                  "children": [
                                    {
                                      "value": "record.levelno != logging.INFO",
                                      "children": [
                                        {
                                          "value": "record.levelno",
                                          "children": [
                                            {
                                              "value": "record",
                                              "children": []
                                            },
                                            {
                                              "value": "levelno",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "logging.INFO",
                                          "children": [
                                            {
                                              "value": "logging",
                                              "children": []
                                            },
                                            {
                                              "value": "INFO",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "color_is_specified",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "record.msg = f\"{color}{record.msg}{Style.RESET_ALL}\"",
                          "children": [
                            {
                              "value": "record.msg = f\"{color}{record.msg}{Style.RESET_ALL}\"",
                              "children": [
                                {
                                  "value": "record.msg = f\"{color}{record.msg}{Style.RESET_ALL}\"",
                                  "children": [
                                    {
                                      "value": "record.msg",
                                      "children": [
                                        {
                                          "value": "record",
                                          "children": []
                                        },
                                        {
                                          "value": "msg",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "f\"{color}{record.msg}{Style.RESET_ALL}\"",
                                      "children": [
                                        {
                                          "value": "f\"",
                                          "children": []
                                        },
                                        {
                                          "value": "{color}",
                                          "children": [
                                            {
                                              "value": "color",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "{record.msg}",
                                          "children": [
                                            {
                                              "value": "record.msg",
                                              "children": [
                                                {
                                                  "value": "record",
                                                  "children": []
                                                },
                                                {
                                                  "value": "msg",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "{Style.RESET_ALL}",
                                          "children": [
                                            {
                                              "value": "Style.RESET_ALL",
                                              "children": [
                                                {
                                                  "value": "Style",
                                                  "children": []
                                                },
                                                {
                                                  "value": "RESET_ALL",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "return super().format(record)",
                      "children": [
                        {
                          "value": "super().format(record)",
                          "children": [
                            {
                              "value": "super().format",
                              "children": [
                                {
                                  "value": "super()",
                                  "children": [
                                    {
                                      "value": "super",
                                      "children": []
                                    },
                                    {
                                      "value": "()",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "format",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(record)",
                              "children": [
                                {
                                  "value": "record",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "class AGPTFormatter(FancyConsoleFormatter):\n    def __init__(self, *args, no_color: bool = False, **kwargs):\n        super().__init__(*args, **kwargs)\n        self.no_color = no_color\n\n    def format(self, record: logging.LogRecord) -> str:\n        # Make sure `msg` is a string\n        if not hasattr(record, \"msg\"):\n            record.msg = \"\"\n        elif type(record.msg) is not str:\n            record.msg = str(record.msg)\n\n        # Strip color from the message to prevent color spoofing\n        if record.msg and not getattr(record, \"preserve_color\", False):\n            record.msg = remove_color_codes(record.msg)\n\n        # Determine color for title\n        title = getattr(record, \"title\", \"\")\n        title_color = getattr(record, \"title_color\", \"\") or self.LEVEL_COLOR_MAP.get(\n            record.levelno, \"\"\n        )\n        if title and title_color:\n            title = f\"{title_color + Style.BRIGHT}{title}{Style.RESET_ALL}\"\n        # Make sure record.title is set, and padded with a space if not empty\n        record.title = f\"{title} \" if title else \"\"\n\n        if self.no_color:\n            return remove_color_codes(super().format(record))\n        else:\n            return super().format(record)",
      "children": [
        {
          "value": "AGPTFormatter",
          "children": []
        },
        {
          "value": "(FancyConsoleFormatter)",
          "children": [
            {
              "value": "FancyConsoleFormatter",
              "children": []
            }
          ]
        },
        {
          "value": "def __init__(self, *args, no_color: bool = False, **kwargs):\n        super().__init__(*args, **kwargs)\n        self.no_color = no_color\n\n    def format(self, record: logging.LogRecord) -> str:\n        # Make sure `msg` is a string\n        if not hasattr(record, \"msg\"):\n            record.msg = \"\"\n        elif type(record.msg) is not str:\n            record.msg = str(record.msg)\n\n        # Strip color from the message to prevent color spoofing\n        if record.msg and not getattr(record, \"preserve_color\", False):\n            record.msg = remove_color_codes(record.msg)\n\n        # Determine color for title\n        title = getattr(record, \"title\", \"\")\n        title_color = getattr(record, \"title_color\", \"\") or self.LEVEL_COLOR_MAP.get(\n            record.levelno, \"\"\n        )\n        if title and title_color:\n            title = f\"{title_color + Style.BRIGHT}{title}{Style.RESET_ALL}\"\n        # Make sure record.title is set, and padded with a space if not empty\n        record.title = f\"{title} \" if title else \"\"\n\n        if self.no_color:\n            return remove_color_codes(super().format(record))\n        else:\n            return super().format(record)",
          "children": [
            {
              "value": "def __init__(self, *args, no_color: bool = False, **kwargs):\n        super().__init__(*args, **kwargs)\n        self.no_color = no_color",
              "children": [
                {
                  "value": "__init__",
                  "children": []
                },
                {
                  "value": "(self, *args, no_color: bool = False, **kwargs)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "*args",
                      "children": [
                        {
                          "value": "args",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "no_color: bool = False",
                      "children": [
                        {
                          "value": "no_color",
                          "children": []
                        },
                        {
                          "value": "bool",
                          "children": [
                            {
                              "value": "bool",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "False",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "**kwargs",
                      "children": [
                        {
                          "value": "kwargs",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "super().__init__(*args, **kwargs)\n        self.no_color = no_color",
                  "children": [
                    {
                      "value": "super().__init__(*args, **kwargs)",
                      "children": [
                        {
                          "value": "super().__init__(*args, **kwargs)",
                          "children": [
                            {
                              "value": "super().__init__",
                              "children": [
                                {
                                  "value": "super()",
                                  "children": [
                                    {
                                      "value": "super",
                                      "children": []
                                    },
                                    {
                                      "value": "()",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "__init__",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(*args, **kwargs)",
                              "children": [
                                {
                                  "value": "*args",
                                  "children": [
                                    {
                                      "value": "args",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "**kwargs",
                                  "children": [
                                    {
                                      "value": "kwargs",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "self.no_color = no_color",
                      "children": [
                        {
                          "value": "self.no_color = no_color",
                          "children": [
                            {
                              "value": "self.no_color",
                              "children": [
                                {
                                  "value": "self",
                                  "children": []
                                },
                                {
                                  "value": "no_color",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "no_color",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def format(self, record: logging.LogRecord) -> str:\n        # Make sure `msg` is a string\n        if not hasattr(record, \"msg\"):\n            record.msg = \"\"\n        elif type(record.msg) is not str:\n            record.msg = str(record.msg)\n\n        # Strip color from the message to prevent color spoofing\n        if record.msg and not getattr(record, \"preserve_color\", False):\n            record.msg = remove_color_codes(record.msg)\n\n        # Determine color for title\n        title = getattr(record, \"title\", \"\")\n        title_color = getattr(record, \"title_color\", \"\") or self.LEVEL_COLOR_MAP.get(\n            record.levelno, \"\"\n        )\n        if title and title_color:\n            title = f\"{title_color + Style.BRIGHT}{title}{Style.RESET_ALL}\"\n        # Make sure record.title is set, and padded with a space if not empty\n        record.title = f\"{title} \" if title else \"\"\n\n        if self.no_color:\n            return remove_color_codes(super().format(record))\n        else:\n            return super().format(record)",
              "children": [
                {
                  "value": "format",
                  "children": []
                },
                {
                  "value": "(self, record: logging.LogRecord)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "record: logging.LogRecord",
                      "children": [
                        {
                          "value": "record",
                          "children": []
                        },
                        {
                          "value": "logging.LogRecord",
                          "children": [
                            {
                              "value": "logging.LogRecord",
                              "children": [
                                {
                                  "value": "logging",
                                  "children": []
                                },
                                {
                                  "value": "LogRecord",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "str",
                  "children": [
                    {
                      "value": "str",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "# Make sure `msg` is a string",
                  "children": []
                },
                {
                  "value": "if not hasattr(record, \"msg\"):\n            record.msg = \"\"\n        elif type(record.msg) is not str:\n            record.msg = str(record.msg)\n\n        # Strip color from the message to prevent color spoofing\n        if record.msg and not getattr(record, \"preserve_color\", False):\n            record.msg = remove_color_codes(record.msg)\n\n        # Determine color for title\n        title = getattr(record, \"title\", \"\")\n        title_color = getattr(record, \"title_color\", \"\") or self.LEVEL_COLOR_MAP.get(\n            record.levelno, \"\"\n        )\n        if title and title_color:\n            title = f\"{title_color + Style.BRIGHT}{title}{Style.RESET_ALL}\"\n        # Make sure record.title is set, and padded with a space if not empty\n        record.title = f\"{title} \" if title else \"\"\n\n        if self.no_color:\n            return remove_color_codes(super().format(record))\n        else:\n            return super().format(record)",
                  "children": [
                    {
                      "value": "if not hasattr(record, \"msg\"):\n            record.msg = \"\"\n        elif type(record.msg) is not str:\n            record.msg = str(record.msg)",
                      "children": [
                        {
                          "value": "not hasattr(record, \"msg\")",
                          "children": [
                            {
                              "value": "hasattr(record, \"msg\")",
                              "children": [
                                {
                                  "value": "hasattr",
                                  "children": []
                                },
                                {
                                  "value": "(record, \"msg\")",
                                  "children": [
                                    {
                                      "value": "record",
                                      "children": []
                                    },
                                    {
                                      "value": "\"msg\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "msg",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "record.msg = \"\"",
                          "children": [
                            {
                              "value": "record.msg = \"\"",
                              "children": [
                                {
                                  "value": "record.msg = \"\"",
                                  "children": [
                                    {
                                      "value": "record.msg",
                                      "children": [
                                        {
                                          "value": "record",
                                          "children": []
                                        },
                                        {
                                          "value": "msg",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "elif type(record.msg) is not str:\n            record.msg = str(record.msg)",
                          "children": [
                            {
                              "value": "type(record.msg) is not str",
                              "children": [
                                {
                                  "value": "type(record.msg)",
                                  "children": [
                                    {
                                      "value": "type",
                                      "children": []
                                    },
                                    {
                                      "value": "(record.msg)",
                                      "children": [
                                        {
                                          "value": "record.msg",
                                          "children": [
                                            {
                                              "value": "record",
                                              "children": []
                                            },
                                            {
                                              "value": "msg",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "record.msg = str(record.msg)",
                              "children": [
                                {
                                  "value": "record.msg = str(record.msg)",
                                  "children": [
                                    {
                                      "value": "record.msg = str(record.msg)",
                                      "children": [
                                        {
                                          "value": "record.msg",
                                          "children": [
                                            {
                                              "value": "record",
                                              "children": []
                                            },
                                            {
                                              "value": "msg",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "str(record.msg)",
                                          "children": [
                                            {
                                              "value": "str",
                                              "children": []
                                            },
                                            {
                                              "value": "(record.msg)",
                                              "children": [
                                                {
                                                  "value": "record.msg",
                                                  "children": [
                                                    {
                                                      "value": "record",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "msg",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "# Strip color from the message to prevent color spoofing",
                      "children": []
                    },
                    {
                      "value": "if record.msg and not getattr(record, \"preserve_color\", False):\n            record.msg = remove_color_codes(record.msg)",
                      "children": [
                        {
                          "value": "record.msg and not getattr(record, \"preserve_color\", False)",
                          "children": [
                            {
                              "value": "record.msg",
                              "children": [
                                {
                                  "value": "record",
                                  "children": []
                                },
                                {
                                  "value": "msg",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "not getattr(record, \"preserve_color\", False)",
                              "children": [
                                {
                                  "value": "getattr(record, \"preserve_color\", False)",
                                  "children": [
                                    {
                                      "value": "getattr",
                                      "children": []
                                    },
                                    {
                                      "value": "(record, \"preserve_color\", False)",
                                      "children": [
                                        {
                                          "value": "record",
                                          "children": []
                                        },
                                        {
                                          "value": "\"preserve_color\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "preserve_color",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "False",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "record.msg = remove_color_codes(record.msg)",
                          "children": [
                            {
                              "value": "record.msg = remove_color_codes(record.msg)",
                              "children": [
                                {
                                  "value": "record.msg = remove_color_codes(record.msg)",
                                  "children": [
                                    {
                                      "value": "record.msg",
                                      "children": [
                                        {
                                          "value": "record",
                                          "children": []
                                        },
                                        {
                                          "value": "msg",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "remove_color_codes(record.msg)",
                                      "children": [
                                        {
                                          "value": "remove_color_codes",
                                          "children": []
                                        },
                                        {
                                          "value": "(record.msg)",
                                          "children": [
                                            {
                                              "value": "record.msg",
                                              "children": [
                                                {
                                                  "value": "record",
                                                  "children": []
                                                },
                                                {
                                                  "value": "msg",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "# Determine color for title",
                      "children": []
                    },
                    {
                      "value": "title = getattr(record, \"title\", \"\")",
                      "children": [
                        {
                          "value": "title = getattr(record, \"title\", \"\")",
                          "children": [
                            {
                              "value": "title",
                              "children": []
                            },
                            {
                              "value": "getattr(record, \"title\", \"\")",
                              "children": [
                                {
                                  "value": "getattr",
                                  "children": []
                                },
                                {
                                  "value": "(record, \"title\", \"\")",
                                  "children": [
                                    {
                                      "value": "record",
                                      "children": []
                                    },
                                    {
                                      "value": "\"title\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "title",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "title_color = getattr(record, \"title_color\", \"\") or self.LEVEL_COLOR_MAP.get(\n            record.levelno, \"\"\n        )",
                      "children": [
                        {
                          "value": "title_color = getattr(record, \"title_color\", \"\") or self.LEVEL_COLOR_MAP.get(\n            record.levelno, \"\"\n        )",
                          "children": [
                            {
                              "value": "title_color",
                              "children": []
                            },
                            {
                              "value": "getattr(record, \"title_color\", \"\") or self.LEVEL_COLOR_MAP.get(\n            record.levelno, \"\"\n        )",
                              "children": [
                                {
                                  "value": "getattr(record, \"title_color\", \"\")",
                                  "children": [
                                    {
                                      "value": "getattr",
                                      "children": []
                                    },
                                    {
                                      "value": "(record, \"title_color\", \"\")",
                                      "children": [
                                        {
                                          "value": "record",
                                          "children": []
                                        },
                                        {
                                          "value": "\"title_color\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "title_color",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "self.LEVEL_COLOR_MAP.get(\n            record.levelno, \"\"\n        )",
                                  "children": [
                                    {
                                      "value": "self.LEVEL_COLOR_MAP.get",
                                      "children": [
                                        {
                                          "value": "self.LEVEL_COLOR_MAP",
                                          "children": [
                                            {
                                              "value": "self",
                                              "children": []
                                            },
                                            {
                                              "value": "LEVEL_COLOR_MAP",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "get",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(\n            record.levelno, \"\"\n        )",
                                      "children": [
                                        {
                                          "value": "record.levelno",
                                          "children": [
                                            {
                                              "value": "record",
                                              "children": []
                                            },
                                            {
                                              "value": "levelno",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "if title and title_color:\n            title = f\"{title_color + Style.BRIGHT}{title}{Style.RESET_ALL}\"",
                      "children": [
                        {
                          "value": "title and title_color",
                          "children": [
                            {
                              "value": "title",
                              "children": []
                            },
                            {
                              "value": "title_color",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "title = f\"{title_color + Style.BRIGHT}{title}{Style.RESET_ALL}\"",
                          "children": [
                            {
                              "value": "title = f\"{title_color + Style.BRIGHT}{title}{Style.RESET_ALL}\"",
                              "children": [
                                {
                                  "value": "title = f\"{title_color + Style.BRIGHT}{title}{Style.RESET_ALL}\"",
                                  "children": [
                                    {
                                      "value": "title",
                                      "children": []
                                    },
                                    {
                                      "value": "f\"{title_color + Style.BRIGHT}{title}{Style.RESET_ALL}\"",
                                      "children": [
                                        {
                                          "value": "f\"",
                                          "children": []
                                        },
                                        {
                                          "value": "{title_color + Style.BRIGHT}",
                                          "children": [
                                            {
                                              "value": "title_color + Style.BRIGHT",
                                              "children": [
                                                {
                                                  "value": "title_color",
                                                  "children": []
                                                },
                                                {
                                                  "value": "Style.BRIGHT",
                                                  "children": [
                                                    {
                                                      "value": "Style",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "BRIGHT",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "{title}",
                                          "children": [
                                            {
                                              "value": "title",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "{Style.RESET_ALL}",
                                          "children": [
                                            {
                                              "value": "Style.RESET_ALL",
                                              "children": [
                                                {
                                                  "value": "Style",
                                                  "children": []
                                                },
                                                {
                                                  "value": "RESET_ALL",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "# Make sure record.title is set, and padded with a space if not empty",
                      "children": []
                    },
                    {
                      "value": "record.title = f\"{title} \" if title else \"\"",
                      "children": [
                        {
                          "value": "record.title = f\"{title} \" if title else \"\"",
                          "children": [
                            {
                              "value": "record.title",
                              "children": [
                                {
                                  "value": "record",
                                  "children": []
                                },
                                {
                                  "value": "title",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "f\"{title} \" if title else \"\"",
                              "children": [
                                {
                                  "value": "f\"{title} \"",
                                  "children": [
                                    {
                                      "value": "f\"",
                                      "children": []
                                    },
                                    {
                                      "value": "{title}",
                                      "children": [
                                        {
                                          "value": "title",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "title",
                                  "children": []
                                },
                                {
                                  "value": "\"\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "if self.no_color:\n            return remove_color_codes(super().format(record))\n        else:\n            return super().format(record)",
                      "children": [
                        {
                          "value": "self.no_color",
                          "children": [
                            {
                              "value": "self",
                              "children": []
                            },
                            {
                              "value": "no_color",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "return remove_color_codes(super().format(record))",
                          "children": [
                            {
                              "value": "return remove_color_codes(super().format(record))",
                              "children": [
                                {
                                  "value": "remove_color_codes(super().format(record))",
                                  "children": [
                                    {
                                      "value": "remove_color_codes",
                                      "children": []
                                    },
                                    {
                                      "value": "(super().format(record))",
                                      "children": [
                                        {
                                          "value": "super().format(record)",
                                          "children": [
                                            {
                                              "value": "super().format",
                                              "children": [
                                                {
                                                  "value": "super()",
                                                  "children": [
                                                    {
                                                      "value": "super",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "()",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "format",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "(record)",
                                              "children": [
                                                {
                                                  "value": "record",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "else:\n            return super().format(record)",
                          "children": [
                            {
                              "value": "return super().format(record)",
                              "children": [
                                {
                                  "value": "return super().format(record)",
                                  "children": [
                                    {
                                      "value": "super().format(record)",
                                      "children": [
                                        {
                                          "value": "super().format",
                                          "children": [
                                            {
                                              "value": "super()",
                                              "children": [
                                                {
                                                  "value": "super",
                                                  "children": []
                                                },
                                                {
                                                  "value": "()",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "format",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(record)",
                                          "children": [
                                            {
                                              "value": "record",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "class StructuredLoggingFormatter(StructuredLogHandler, logging.Formatter):\n    def __init__(self):\n        # Set up CloudLoggingFilter to add diagnostic info to the log records\n        self.cloud_logging_filter = CloudLoggingFilter()\n\n        # Init StructuredLogHandler\n        super().__init__()\n\n    def format(self, record: logging.LogRecord) -> str:\n        self.cloud_logging_filter.filter(record)\n        return super().format(record)",
      "children": [
        {
          "value": "StructuredLoggingFormatter",
          "children": []
        },
        {
          "value": "(StructuredLogHandler, logging.Formatter)",
          "children": [
            {
              "value": "StructuredLogHandler",
              "children": []
            },
            {
              "value": "logging.Formatter",
              "children": [
                {
                  "value": "logging",
                  "children": []
                },
                {
                  "value": "Formatter",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "def __init__(self):\n        # Set up CloudLoggingFilter to add diagnostic info to the log records\n        self.cloud_logging_filter = CloudLoggingFilter()\n\n        # Init StructuredLogHandler\n        super().__init__()\n\n    def format(self, record: logging.LogRecord) -> str:\n        self.cloud_logging_filter.filter(record)\n        return super().format(record)",
          "children": [
            {
              "value": "def __init__(self):\n        # Set up CloudLoggingFilter to add diagnostic info to the log records\n        self.cloud_logging_filter = CloudLoggingFilter()\n\n        # Init StructuredLogHandler\n        super().__init__()",
              "children": [
                {
                  "value": "__init__",
                  "children": []
                },
                {
                  "value": "(self)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "# Set up CloudLoggingFilter to add diagnostic info to the log records",
                  "children": []
                },
                {
                  "value": "self.cloud_logging_filter = CloudLoggingFilter()\n\n        # Init StructuredLogHandler\n        super().__init__()",
                  "children": [
                    {
                      "value": "self.cloud_logging_filter = CloudLoggingFilter()",
                      "children": [
                        {
                          "value": "self.cloud_logging_filter = CloudLoggingFilter()",
                          "children": [
                            {
                              "value": "self.cloud_logging_filter",
                              "children": [
                                {
                                  "value": "self",
                                  "children": []
                                },
                                {
                                  "value": "cloud_logging_filter",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "CloudLoggingFilter()",
                              "children": [
                                {
                                  "value": "CloudLoggingFilter",
                                  "children": []
                                },
                                {
                                  "value": "()",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "# Init StructuredLogHandler",
                      "children": []
                    },
                    {
                      "value": "super().__init__()",
                      "children": [
                        {
                          "value": "super().__init__()",
                          "children": [
                            {
                              "value": "super().__init__",
                              "children": [
                                {
                                  "value": "super()",
                                  "children": [
                                    {
                                      "value": "super",
                                      "children": []
                                    },
                                    {
                                      "value": "()",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "__init__",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "()",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def format(self, record: logging.LogRecord) -> str:\n        self.cloud_logging_filter.filter(record)\n        return super().format(record)",
              "children": [
                {
                  "value": "format",
                  "children": []
                },
                {
                  "value": "(self, record: logging.LogRecord)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "record: logging.LogRecord",
                      "children": [
                        {
                          "value": "record",
                          "children": []
                        },
                        {
                          "value": "logging.LogRecord",
                          "children": [
                            {
                              "value": "logging.LogRecord",
                              "children": [
                                {
                                  "value": "logging",
                                  "children": []
                                },
                                {
                                  "value": "LogRecord",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "str",
                  "children": [
                    {
                      "value": "str",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "self.cloud_logging_filter.filter(record)\n        return super().format(record)",
                  "children": [
                    {
                      "value": "self.cloud_logging_filter.filter(record)",
                      "children": [
                        {
                          "value": "self.cloud_logging_filter.filter(record)",
                          "children": [
                            {
                              "value": "self.cloud_logging_filter.filter",
                              "children": [
                                {
                                  "value": "self.cloud_logging_filter",
                                  "children": [
                                    {
                                      "value": "self",
                                      "children": []
                                    },
                                    {
                                      "value": "cloud_logging_filter",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "filter",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(record)",
                              "children": [
                                {
                                  "value": "record",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "return super().format(record)",
                      "children": [
                        {
                          "value": "super().format(record)",
                          "children": [
                            {
                              "value": "super().format",
                              "children": [
                                {
                                  "value": "super()",
                                  "children": [
                                    {
                                      "value": "super",
                                      "children": []
                                    },
                                    {
                                      "value": "()",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "format",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(record)",
                              "children": [
                                {
                                  "value": "record",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}