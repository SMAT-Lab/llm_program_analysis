{
  "value": "import io\nimport unittest.mock\n\nimport fastapi\nimport pytest\nimport starlette.datastructures\n\nimport backend.server.v2.store.exceptions\nimport backend.server.v2.store.media\nfrom backend.util.settings import Settings\n\n\n@pytest.fixture\ndef mock_settings(monkeypatch):\n    settings = Settings()\n    settings.config.media_gcs_bucket_name = \"test-bucket\"\n    settings.config.google_application_credentials = \"test-credentials\"\n    monkeypatch.setattr(\"backend.server.v2.store.media.Settings\", lambda: settings)\n    return settings\n\n\n@pytest.fixture\ndef mock_storage_client(mocker):\n    mock_client = unittest.mock.MagicMock()\n    mock_bucket = unittest.mock.MagicMock()\n    mock_blob = unittest.mock.MagicMock()\n\n    mock_client.bucket.return_value = mock_bucket\n    mock_bucket.blob.return_value = mock_blob\n    mock_blob.public_url = \"http://test-url/media/laptop.jpeg\"\n\n    mocker.patch(\"google.cloud.storage.Client\", return_value=mock_client)\n\n    return mock_client\n\n\nasync def test_upload_media_success(mock_settings, mock_storage_client):\n    # Create test JPEG data with valid signature\n    test_data = b\"\\xFF\\xD8\\xFF\" + b\"test data\"\n\n    test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(test_data),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )\n\n    result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n\n    assert result == \"http://test-url/media/laptop.jpeg\"\n    mock_bucket = mock_storage_client.bucket.return_value\n    mock_blob = mock_bucket.blob.return_value\n    mock_blob.upload_from_string.assert_called_once()\n\n\nasync def test_upload_media_invalid_type(mock_settings, mock_storage_client):\n    test_file = fastapi.UploadFile(\n        filename=\"test.txt\",\n        file=io.BytesIO(b\"test data\"),\n        headers=starlette.datastructures.Headers({\"content-type\": \"text/plain\"}),\n    )\n\n    with pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n\n    mock_bucket = mock_storage_client.bucket.return_value\n    mock_blob = mock_bucket.blob.return_value\n    mock_blob.upload_from_string.assert_not_called()\n\n\nasync def test_upload_media_missing_credentials(monkeypatch):\n    settings = Settings()\n    settings.config.media_gcs_bucket_name = \"\"\n    settings.config.google_application_credentials = \"\"\n    monkeypatch.setattr(\"backend.server.v2.store.media.Settings\", lambda: settings)\n\n    test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(b\"\\xFF\\xD8\\xFF\" + b\"test data\"),  # Valid JPEG signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )\n\n    with pytest.raises(backend.server.v2.store.exceptions.StorageConfigError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n\n\nasync def test_upload_media_video_type(mock_settings, mock_storage_client):\n    test_file = fastapi.UploadFile(\n        filename=\"test.mp4\",\n        file=io.BytesIO(b\"\\x00\\x00\\x00\\x18ftypmp42\"),  # Valid MP4 signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"video/mp4\"}),\n    )\n\n    result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n\n    assert result == \"http://test-url/media/laptop.jpeg\"\n    mock_bucket = mock_storage_client.bucket.return_value\n    mock_blob = mock_bucket.blob.return_value\n    mock_blob.upload_from_string.assert_called_once()\n\n\nasync def test_upload_media_file_too_large(mock_settings, mock_storage_client):\n    large_data = b\"\\xFF\\xD8\\xFF\" + b\"x\" * (\n        50 * 1024 * 1024 + 1\n    )  # 50MB + 1 byte with valid JPEG signature\n    test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(large_data),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )\n\n    with pytest.raises(backend.server.v2.store.exceptions.FileSizeTooLargeError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n\n\nasync def test_upload_media_file_read_error(mock_settings, mock_storage_client):\n    test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(b\"\"),  # Empty file that will raise error on read\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )\n    test_file.read = unittest.mock.AsyncMock(side_effect=Exception(\"Read error\"))\n\n    with pytest.raises(backend.server.v2.store.exceptions.FileReadError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n\n\nasync def test_upload_media_png_success(mock_settings, mock_storage_client):\n    test_file = fastapi.UploadFile(\n        filename=\"test.png\",\n        file=io.BytesIO(b\"\\x89PNG\\r\\n\\x1a\\n\"),  # Valid PNG signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/png\"}),\n    )\n\n    result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n    assert result == \"http://test-url/media/laptop.jpeg\"\n\n\nasync def test_upload_media_gif_success(mock_settings, mock_storage_client):\n    test_file = fastapi.UploadFile(\n        filename=\"test.gif\",\n        file=io.BytesIO(b\"GIF89a\"),  # Valid GIF signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/gif\"}),\n    )\n\n    result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n    assert result == \"http://test-url/media/laptop.jpeg\"\n\n\nasync def test_upload_media_webp_success(mock_settings, mock_storage_client):\n    test_file = fastapi.UploadFile(\n        filename=\"test.webp\",\n        file=io.BytesIO(b\"RIFF\\x00\\x00\\x00\\x00WEBP\"),  # Valid WebP signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/webp\"}),\n    )\n\n    result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n    assert result == \"http://test-url/media/laptop.jpeg\"\n\n\nasync def test_upload_media_webm_success(mock_settings, mock_storage_client):\n    test_file = fastapi.UploadFile(\n        filename=\"test.webm\",\n        file=io.BytesIO(b\"\\x1a\\x45\\xdf\\xa3\"),  # Valid WebM signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"video/webm\"}),\n    )\n\n    result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n    assert result == \"http://test-url/media/laptop.jpeg\"\n\n\nasync def test_upload_media_mismatched_signature(mock_settings, mock_storage_client):\n    test_file = fastapi.UploadFile(\n        filename=\"test.jpeg\",\n        file=io.BytesIO(b\"\\x89PNG\\r\\n\\x1a\\n\"),  # PNG signature with JPEG content type\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )\n\n    with pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n\n\nasync def test_upload_media_invalid_signature(mock_settings, mock_storage_client):\n    test_file = fastapi.UploadFile(\n        filename=\"test.jpeg\",\n        file=io.BytesIO(b\"invalid signature\"),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )\n\n    with pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
  "children": [
    {
      "value": "import io",
      "children": [
        {
          "value": "io",
          "children": [
            {
              "value": "io",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "import unittest.mock",
      "children": [
        {
          "value": "unittest.mock",
          "children": [
            {
              "value": "unittest",
              "children": []
            },
            {
              "value": "mock",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "import fastapi",
      "children": [
        {
          "value": "fastapi",
          "children": [
            {
              "value": "fastapi",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "import pytest",
      "children": [
        {
          "value": "pytest",
          "children": [
            {
              "value": "pytest",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "import starlette.datastructures",
      "children": [
        {
          "value": "starlette.datastructures",
          "children": [
            {
              "value": "starlette",
              "children": []
            },
            {
              "value": "datastructures",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "import backend.server.v2.store.exceptions",
      "children": [
        {
          "value": "backend.server.v2.store.exceptions",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "server",
              "children": []
            },
            {
              "value": "v2",
              "children": []
            },
            {
              "value": "store",
              "children": []
            },
            {
              "value": "exceptions",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "import backend.server.v2.store.media",
      "children": [
        {
          "value": "backend.server.v2.store.media",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "server",
              "children": []
            },
            {
              "value": "v2",
              "children": []
            },
            {
              "value": "store",
              "children": []
            },
            {
              "value": "media",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.util.settings import Settings",
      "children": [
        {
          "value": "backend.util.settings",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "util",
              "children": []
            },
            {
              "value": "settings",
              "children": []
            }
          ]
        },
        {
          "value": "Settings",
          "children": [
            {
              "value": "Settings",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "@pytest.fixture\ndef mock_settings(monkeypatch):\n    settings = Settings()\n    settings.config.media_gcs_bucket_name = \"test-bucket\"\n    settings.config.google_application_credentials = \"test-credentials\"\n    monkeypatch.setattr(\"backend.server.v2.store.media.Settings\", lambda: settings)\n    return settings",
      "children": [
        {
          "value": "@pytest.fixture",
          "children": [
            {
              "value": "pytest.fixture",
              "children": [
                {
                  "value": "pytest",
                  "children": []
                },
                {
                  "value": "fixture",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "def mock_settings(monkeypatch):\n    settings = Settings()\n    settings.config.media_gcs_bucket_name = \"test-bucket\"\n    settings.config.google_application_credentials = \"test-credentials\"\n    monkeypatch.setattr(\"backend.server.v2.store.media.Settings\", lambda: settings)\n    return settings",
          "children": [
            {
              "value": "mock_settings",
              "children": []
            },
            {
              "value": "(monkeypatch)",
              "children": [
                {
                  "value": "monkeypatch",
                  "children": []
                }
              ]
            },
            {
              "value": "settings = Settings()\n    settings.config.media_gcs_bucket_name = \"test-bucket\"\n    settings.config.google_application_credentials = \"test-credentials\"\n    monkeypatch.setattr(\"backend.server.v2.store.media.Settings\", lambda: settings)\n    return settings",
              "children": [
                {
                  "value": "settings = Settings()",
                  "children": [
                    {
                      "value": "settings = Settings()",
                      "children": [
                        {
                          "value": "settings",
                          "children": []
                        },
                        {
                          "value": "Settings()",
                          "children": [
                            {
                              "value": "Settings",
                              "children": []
                            },
                            {
                              "value": "()",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "settings.config.media_gcs_bucket_name = \"test-bucket\"",
                  "children": [
                    {
                      "value": "settings.config.media_gcs_bucket_name = \"test-bucket\"",
                      "children": [
                        {
                          "value": "settings.config.media_gcs_bucket_name",
                          "children": [
                            {
                              "value": "settings.config",
                              "children": [
                                {
                                  "value": "settings",
                                  "children": []
                                },
                                {
                                  "value": "config",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "media_gcs_bucket_name",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "\"test-bucket\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "test-bucket",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "settings.config.google_application_credentials = \"test-credentials\"",
                  "children": [
                    {
                      "value": "settings.config.google_application_credentials = \"test-credentials\"",
                      "children": [
                        {
                          "value": "settings.config.google_application_credentials",
                          "children": [
                            {
                              "value": "settings.config",
                              "children": [
                                {
                                  "value": "settings",
                                  "children": []
                                },
                                {
                                  "value": "config",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "google_application_credentials",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "\"test-credentials\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "test-credentials",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "monkeypatch.setattr(\"backend.server.v2.store.media.Settings\", lambda: settings)",
                  "children": [
                    {
                      "value": "monkeypatch.setattr(\"backend.server.v2.store.media.Settings\", lambda: settings)",
                      "children": [
                        {
                          "value": "monkeypatch.setattr",
                          "children": [
                            {
                              "value": "monkeypatch",
                              "children": []
                            },
                            {
                              "value": "setattr",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(\"backend.server.v2.store.media.Settings\", lambda: settings)",
                          "children": [
                            {
                              "value": "\"backend.server.v2.store.media.Settings\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "backend.server.v2.store.media.Settings",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "lambda: settings",
                              "children": [
                                {
                                  "value": "settings",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "return settings",
                  "children": [
                    {
                      "value": "settings",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "@pytest.fixture\ndef mock_storage_client(mocker):\n    mock_client = unittest.mock.MagicMock()\n    mock_bucket = unittest.mock.MagicMock()\n    mock_blob = unittest.mock.MagicMock()\n\n    mock_client.bucket.return_value = mock_bucket\n    mock_bucket.blob.return_value = mock_blob\n    mock_blob.public_url = \"http://test-url/media/laptop.jpeg\"\n\n    mocker.patch(\"google.cloud.storage.Client\", return_value=mock_client)\n\n    return mock_client",
      "children": [
        {
          "value": "@pytest.fixture",
          "children": [
            {
              "value": "pytest.fixture",
              "children": [
                {
                  "value": "pytest",
                  "children": []
                },
                {
                  "value": "fixture",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "def mock_storage_client(mocker):\n    mock_client = unittest.mock.MagicMock()\n    mock_bucket = unittest.mock.MagicMock()\n    mock_blob = unittest.mock.MagicMock()\n\n    mock_client.bucket.return_value = mock_bucket\n    mock_bucket.blob.return_value = mock_blob\n    mock_blob.public_url = \"http://test-url/media/laptop.jpeg\"\n\n    mocker.patch(\"google.cloud.storage.Client\", return_value=mock_client)\n\n    return mock_client",
          "children": [
            {
              "value": "mock_storage_client",
              "children": []
            },
            {
              "value": "(mocker)",
              "children": [
                {
                  "value": "mocker",
                  "children": []
                }
              ]
            },
            {
              "value": "mock_client = unittest.mock.MagicMock()\n    mock_bucket = unittest.mock.MagicMock()\n    mock_blob = unittest.mock.MagicMock()\n\n    mock_client.bucket.return_value = mock_bucket\n    mock_bucket.blob.return_value = mock_blob\n    mock_blob.public_url = \"http://test-url/media/laptop.jpeg\"\n\n    mocker.patch(\"google.cloud.storage.Client\", return_value=mock_client)\n\n    return mock_client",
              "children": [
                {
                  "value": "mock_client = unittest.mock.MagicMock()",
                  "children": [
                    {
                      "value": "mock_client = unittest.mock.MagicMock()",
                      "children": [
                        {
                          "value": "mock_client",
                          "children": []
                        },
                        {
                          "value": "unittest.mock.MagicMock()",
                          "children": [
                            {
                              "value": "unittest.mock.MagicMock",
                              "children": [
                                {
                                  "value": "unittest.mock",
                                  "children": [
                                    {
                                      "value": "unittest",
                                      "children": []
                                    },
                                    {
                                      "value": "mock",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "MagicMock",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "()",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "mock_bucket = unittest.mock.MagicMock()",
                  "children": [
                    {
                      "value": "mock_bucket = unittest.mock.MagicMock()",
                      "children": [
                        {
                          "value": "mock_bucket",
                          "children": []
                        },
                        {
                          "value": "unittest.mock.MagicMock()",
                          "children": [
                            {
                              "value": "unittest.mock.MagicMock",
                              "children": [
                                {
                                  "value": "unittest.mock",
                                  "children": [
                                    {
                                      "value": "unittest",
                                      "children": []
                                    },
                                    {
                                      "value": "mock",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "MagicMock",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "()",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "mock_blob = unittest.mock.MagicMock()",
                  "children": [
                    {
                      "value": "mock_blob = unittest.mock.MagicMock()",
                      "children": [
                        {
                          "value": "mock_blob",
                          "children": []
                        },
                        {
                          "value": "unittest.mock.MagicMock()",
                          "children": [
                            {
                              "value": "unittest.mock.MagicMock",
                              "children": [
                                {
                                  "value": "unittest.mock",
                                  "children": [
                                    {
                                      "value": "unittest",
                                      "children": []
                                    },
                                    {
                                      "value": "mock",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "MagicMock",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "()",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "mock_client.bucket.return_value = mock_bucket",
                  "children": [
                    {
                      "value": "mock_client.bucket.return_value = mock_bucket",
                      "children": [
                        {
                          "value": "mock_client.bucket.return_value",
                          "children": [
                            {
                              "value": "mock_client.bucket",
                              "children": [
                                {
                                  "value": "mock_client",
                                  "children": []
                                },
                                {
                                  "value": "bucket",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "return_value",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "mock_bucket",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "mock_bucket.blob.return_value = mock_blob",
                  "children": [
                    {
                      "value": "mock_bucket.blob.return_value = mock_blob",
                      "children": [
                        {
                          "value": "mock_bucket.blob.return_value",
                          "children": [
                            {
                              "value": "mock_bucket.blob",
                              "children": [
                                {
                                  "value": "mock_bucket",
                                  "children": []
                                },
                                {
                                  "value": "blob",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "return_value",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "mock_blob",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "mock_blob.public_url = \"http://test-url/media/laptop.jpeg\"",
                  "children": [
                    {
                      "value": "mock_blob.public_url = \"http://test-url/media/laptop.jpeg\"",
                      "children": [
                        {
                          "value": "mock_blob.public_url",
                          "children": [
                            {
                              "value": "mock_blob",
                              "children": []
                            },
                            {
                              "value": "public_url",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "\"http://test-url/media/laptop.jpeg\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "http://test-url/media/laptop.jpeg",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "mocker.patch(\"google.cloud.storage.Client\", return_value=mock_client)",
                  "children": [
                    {
                      "value": "mocker.patch(\"google.cloud.storage.Client\", return_value=mock_client)",
                      "children": [
                        {
                          "value": "mocker.patch",
                          "children": [
                            {
                              "value": "mocker",
                              "children": []
                            },
                            {
                              "value": "patch",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(\"google.cloud.storage.Client\", return_value=mock_client)",
                          "children": [
                            {
                              "value": "\"google.cloud.storage.Client\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "google.cloud.storage.Client",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "return_value=mock_client",
                              "children": [
                                {
                                  "value": "return_value",
                                  "children": []
                                },
                                {
                                  "value": "mock_client",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "return mock_client",
                  "children": [
                    {
                      "value": "mock_client",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "async def test_upload_media_success(mock_settings, mock_storage_client):\n    # Create test JPEG data with valid signature\n    test_data = b\"\\xFF\\xD8\\xFF\" + b\"test data\"\n\n    test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(test_data),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )\n\n    result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n\n    assert result == \"http://test-url/media/laptop.jpeg\"\n    mock_bucket = mock_storage_client.bucket.return_value\n    mock_blob = mock_bucket.blob.return_value\n    mock_blob.upload_from_string.assert_called_once()",
      "children": [
        {
          "value": "test_upload_media_success",
          "children": []
        },
        {
          "value": "(mock_settings, mock_storage_client)",
          "children": [
            {
              "value": "mock_settings",
              "children": []
            },
            {
              "value": "mock_storage_client",
              "children": []
            }
          ]
        },
        {
          "value": "# Create test JPEG data with valid signature",
          "children": []
        },
        {
          "value": "test_data = b\"\\xFF\\xD8\\xFF\" + b\"test data\"\n\n    test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(test_data),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )\n\n    result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n\n    assert result == \"http://test-url/media/laptop.jpeg\"\n    mock_bucket = mock_storage_client.bucket.return_value\n    mock_blob = mock_bucket.blob.return_value\n    mock_blob.upload_from_string.assert_called_once()",
          "children": [
            {
              "value": "test_data = b\"\\xFF\\xD8\\xFF\" + b\"test data\"",
              "children": [
                {
                  "value": "test_data = b\"\\xFF\\xD8\\xFF\" + b\"test data\"",
                  "children": [
                    {
                      "value": "test_data",
                      "children": []
                    },
                    {
                      "value": "b\"\\xFF\\xD8\\xFF\" + b\"test data\"",
                      "children": [
                        {
                          "value": "b\"\\xFF\\xD8\\xFF\"",
                          "children": [
                            {
                              "value": "b\"",
                              "children": []
                            },
                            {
                              "value": "\\xFF\\xD8\\xFF",
                              "children": [
                                {
                                  "value": "\\xFF",
                                  "children": []
                                },
                                {
                                  "value": "\\xD8",
                                  "children": []
                                },
                                {
                                  "value": "\\xFF",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "b\"test data\"",
                          "children": [
                            {
                              "value": "b\"",
                              "children": []
                            },
                            {
                              "value": "test data",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(test_data),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
              "children": [
                {
                  "value": "test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(test_data),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                  "children": [
                    {
                      "value": "test_file",
                      "children": []
                    },
                    {
                      "value": "fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(test_data),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                      "children": [
                        {
                          "value": "fastapi.UploadFile",
                          "children": [
                            {
                              "value": "fastapi",
                              "children": []
                            },
                            {
                              "value": "UploadFile",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(test_data),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                          "children": [
                            {
                              "value": "filename=\"laptop.jpeg\"",
                              "children": [
                                {
                                  "value": "filename",
                                  "children": []
                                },
                                {
                                  "value": "\"laptop.jpeg\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "laptop.jpeg",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "file=io.BytesIO(test_data)",
                              "children": [
                                {
                                  "value": "file",
                                  "children": []
                                },
                                {
                                  "value": "io.BytesIO(test_data)",
                                  "children": [
                                    {
                                      "value": "io.BytesIO",
                                      "children": [
                                        {
                                          "value": "io",
                                          "children": []
                                        },
                                        {
                                          "value": "BytesIO",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(test_data)",
                                      "children": [
                                        {
                                          "value": "test_data",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"})",
                              "children": [
                                {
                                  "value": "headers",
                                  "children": []
                                },
                                {
                                  "value": "starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"})",
                                  "children": [
                                    {
                                      "value": "starlette.datastructures.Headers",
                                      "children": [
                                        {
                                          "value": "starlette.datastructures",
                                          "children": [
                                            {
                                              "value": "starlette",
                                              "children": []
                                            },
                                            {
                                              "value": "datastructures",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "Headers",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "({\"content-type\": \"image/jpeg\"})",
                                      "children": [
                                        {
                                          "value": "{\"content-type\": \"image/jpeg\"}",
                                          "children": [
                                            {
                                              "value": "\"content-type\": \"image/jpeg\"",
                                              "children": [
                                                {
                                                  "value": "\"content-type\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "content-type",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"image/jpeg\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "image/jpeg",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
              "children": [
                {
                  "value": "result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                  "children": [
                    {
                      "value": "result",
                      "children": []
                    },
                    {
                      "value": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                      "children": [
                        {
                          "value": "backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                          "children": [
                            {
                              "value": "backend.server.v2.store.media.upload_media",
                              "children": [
                                {
                                  "value": "backend.server.v2.store.media",
                                  "children": [
                                    {
                                      "value": "backend.server.v2.store",
                                      "children": [
                                        {
                                          "value": "backend.server.v2",
                                          "children": [
                                            {
                                              "value": "backend.server",
                                              "children": [
                                                {
                                                  "value": "backend",
                                                  "children": []
                                                },
                                                {
                                                  "value": "server",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "v2",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "store",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "media",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "upload_media",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\"test-user\", test_file)",
                              "children": [
                                {
                                  "value": "\"test-user\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "test-user",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "test_file",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "assert result == \"http://test-url/media/laptop.jpeg\"",
              "children": [
                {
                  "value": "result == \"http://test-url/media/laptop.jpeg\"",
                  "children": [
                    {
                      "value": "result",
                      "children": []
                    },
                    {
                      "value": "\"http://test-url/media/laptop.jpeg\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "http://test-url/media/laptop.jpeg",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "mock_bucket = mock_storage_client.bucket.return_value",
              "children": [
                {
                  "value": "mock_bucket = mock_storage_client.bucket.return_value",
                  "children": [
                    {
                      "value": "mock_bucket",
                      "children": []
                    },
                    {
                      "value": "mock_storage_client.bucket.return_value",
                      "children": [
                        {
                          "value": "mock_storage_client.bucket",
                          "children": [
                            {
                              "value": "mock_storage_client",
                              "children": []
                            },
                            {
                              "value": "bucket",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "return_value",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "mock_blob = mock_bucket.blob.return_value",
              "children": [
                {
                  "value": "mock_blob = mock_bucket.blob.return_value",
                  "children": [
                    {
                      "value": "mock_blob",
                      "children": []
                    },
                    {
                      "value": "mock_bucket.blob.return_value",
                      "children": [
                        {
                          "value": "mock_bucket.blob",
                          "children": [
                            {
                              "value": "mock_bucket",
                              "children": []
                            },
                            {
                              "value": "blob",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "return_value",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "mock_blob.upload_from_string.assert_called_once()",
              "children": [
                {
                  "value": "mock_blob.upload_from_string.assert_called_once()",
                  "children": [
                    {
                      "value": "mock_blob.upload_from_string.assert_called_once",
                      "children": [
                        {
                          "value": "mock_blob.upload_from_string",
                          "children": [
                            {
                              "value": "mock_blob",
                              "children": []
                            },
                            {
                              "value": "upload_from_string",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "assert_called_once",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "()",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "async def test_upload_media_invalid_type(mock_settings, mock_storage_client):\n    test_file = fastapi.UploadFile(\n        filename=\"test.txt\",\n        file=io.BytesIO(b\"test data\"),\n        headers=starlette.datastructures.Headers({\"content-type\": \"text/plain\"}),\n    )\n\n    with pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n\n    mock_bucket = mock_storage_client.bucket.return_value\n    mock_blob = mock_bucket.blob.return_value\n    mock_blob.upload_from_string.assert_not_called()",
      "children": [
        {
          "value": "test_upload_media_invalid_type",
          "children": []
        },
        {
          "value": "(mock_settings, mock_storage_client)",
          "children": [
            {
              "value": "mock_settings",
              "children": []
            },
            {
              "value": "mock_storage_client",
              "children": []
            }
          ]
        },
        {
          "value": "test_file = fastapi.UploadFile(\n        filename=\"test.txt\",\n        file=io.BytesIO(b\"test data\"),\n        headers=starlette.datastructures.Headers({\"content-type\": \"text/plain\"}),\n    )\n\n    with pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n\n    mock_bucket = mock_storage_client.bucket.return_value\n    mock_blob = mock_bucket.blob.return_value\n    mock_blob.upload_from_string.assert_not_called()",
          "children": [
            {
              "value": "test_file = fastapi.UploadFile(\n        filename=\"test.txt\",\n        file=io.BytesIO(b\"test data\"),\n        headers=starlette.datastructures.Headers({\"content-type\": \"text/plain\"}),\n    )",
              "children": [
                {
                  "value": "test_file = fastapi.UploadFile(\n        filename=\"test.txt\",\n        file=io.BytesIO(b\"test data\"),\n        headers=starlette.datastructures.Headers({\"content-type\": \"text/plain\"}),\n    )",
                  "children": [
                    {
                      "value": "test_file",
                      "children": []
                    },
                    {
                      "value": "fastapi.UploadFile(\n        filename=\"test.txt\",\n        file=io.BytesIO(b\"test data\"),\n        headers=starlette.datastructures.Headers({\"content-type\": \"text/plain\"}),\n    )",
                      "children": [
                        {
                          "value": "fastapi.UploadFile",
                          "children": [
                            {
                              "value": "fastapi",
                              "children": []
                            },
                            {
                              "value": "UploadFile",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(\n        filename=\"test.txt\",\n        file=io.BytesIO(b\"test data\"),\n        headers=starlette.datastructures.Headers({\"content-type\": \"text/plain\"}),\n    )",
                          "children": [
                            {
                              "value": "filename=\"test.txt\"",
                              "children": [
                                {
                                  "value": "filename",
                                  "children": []
                                },
                                {
                                  "value": "\"test.txt\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "test.txt",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "file=io.BytesIO(b\"test data\")",
                              "children": [
                                {
                                  "value": "file",
                                  "children": []
                                },
                                {
                                  "value": "io.BytesIO(b\"test data\")",
                                  "children": [
                                    {
                                      "value": "io.BytesIO",
                                      "children": [
                                        {
                                          "value": "io",
                                          "children": []
                                        },
                                        {
                                          "value": "BytesIO",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(b\"test data\")",
                                      "children": [
                                        {
                                          "value": "b\"test data\"",
                                          "children": [
                                            {
                                              "value": "b\"",
                                              "children": []
                                            },
                                            {
                                              "value": "test data",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "headers=starlette.datastructures.Headers({\"content-type\": \"text/plain\"})",
                              "children": [
                                {
                                  "value": "headers",
                                  "children": []
                                },
                                {
                                  "value": "starlette.datastructures.Headers({\"content-type\": \"text/plain\"})",
                                  "children": [
                                    {
                                      "value": "starlette.datastructures.Headers",
                                      "children": [
                                        {
                                          "value": "starlette.datastructures",
                                          "children": [
                                            {
                                              "value": "starlette",
                                              "children": []
                                            },
                                            {
                                              "value": "datastructures",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "Headers",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "({\"content-type\": \"text/plain\"})",
                                      "children": [
                                        {
                                          "value": "{\"content-type\": \"text/plain\"}",
                                          "children": [
                                            {
                                              "value": "\"content-type\": \"text/plain\"",
                                              "children": [
                                                {
                                                  "value": "\"content-type\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "content-type",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"text/plain\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "text/plain",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "with pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
              "children": [
                {
                  "value": "pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError)",
                  "children": [
                    {
                      "value": "pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError)",
                      "children": [
                        {
                          "value": "pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError)",
                          "children": [
                            {
                              "value": "pytest.raises",
                              "children": [
                                {
                                  "value": "pytest",
                                  "children": []
                                },
                                {
                                  "value": "raises",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(backend.server.v2.store.exceptions.InvalidFileTypeError)",
                              "children": [
                                {
                                  "value": "backend.server.v2.store.exceptions.InvalidFileTypeError",
                                  "children": [
                                    {
                                      "value": "backend.server.v2.store.exceptions",
                                      "children": [
                                        {
                                          "value": "backend.server.v2.store",
                                          "children": [
                                            {
                                              "value": "backend.server.v2",
                                              "children": [
                                                {
                                                  "value": "backend.server",
                                                  "children": [
                                                    {
                                                      "value": "backend",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "server",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "v2",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "store",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "exceptions",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "InvalidFileTypeError",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                  "children": [
                    {
                      "value": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                      "children": [
                        {
                          "value": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                          "children": [
                            {
                              "value": "backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                              "children": [
                                {
                                  "value": "backend.server.v2.store.media.upload_media",
                                  "children": [
                                    {
                                      "value": "backend.server.v2.store.media",
                                      "children": [
                                        {
                                          "value": "backend.server.v2.store",
                                          "children": [
                                            {
                                              "value": "backend.server.v2",
                                              "children": [
                                                {
                                                  "value": "backend.server",
                                                  "children": [
                                                    {
                                                      "value": "backend",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "server",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "v2",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "store",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "media",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "upload_media",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(\"test-user\", test_file)",
                                  "children": [
                                    {
                                      "value": "\"test-user\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "test-user",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "test_file",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "mock_bucket = mock_storage_client.bucket.return_value",
              "children": [
                {
                  "value": "mock_bucket = mock_storage_client.bucket.return_value",
                  "children": [
                    {
                      "value": "mock_bucket",
                      "children": []
                    },
                    {
                      "value": "mock_storage_client.bucket.return_value",
                      "children": [
                        {
                          "value": "mock_storage_client.bucket",
                          "children": [
                            {
                              "value": "mock_storage_client",
                              "children": []
                            },
                            {
                              "value": "bucket",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "return_value",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "mock_blob = mock_bucket.blob.return_value",
              "children": [
                {
                  "value": "mock_blob = mock_bucket.blob.return_value",
                  "children": [
                    {
                      "value": "mock_blob",
                      "children": []
                    },
                    {
                      "value": "mock_bucket.blob.return_value",
                      "children": [
                        {
                          "value": "mock_bucket.blob",
                          "children": [
                            {
                              "value": "mock_bucket",
                              "children": []
                            },
                            {
                              "value": "blob",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "return_value",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "mock_blob.upload_from_string.assert_not_called()",
              "children": [
                {
                  "value": "mock_blob.upload_from_string.assert_not_called()",
                  "children": [
                    {
                      "value": "mock_blob.upload_from_string.assert_not_called",
                      "children": [
                        {
                          "value": "mock_blob.upload_from_string",
                          "children": [
                            {
                              "value": "mock_blob",
                              "children": []
                            },
                            {
                              "value": "upload_from_string",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "assert_not_called",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "()",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "async def test_upload_media_missing_credentials(monkeypatch):\n    settings = Settings()\n    settings.config.media_gcs_bucket_name = \"\"\n    settings.config.google_application_credentials = \"\"\n    monkeypatch.setattr(\"backend.server.v2.store.media.Settings\", lambda: settings)\n\n    test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(b\"\\xFF\\xD8\\xFF\" + b\"test data\"),  # Valid JPEG signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )\n\n    with pytest.raises(backend.server.v2.store.exceptions.StorageConfigError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
      "children": [
        {
          "value": "test_upload_media_missing_credentials",
          "children": []
        },
        {
          "value": "(monkeypatch)",
          "children": [
            {
              "value": "monkeypatch",
              "children": []
            }
          ]
        },
        {
          "value": "settings = Settings()\n    settings.config.media_gcs_bucket_name = \"\"\n    settings.config.google_application_credentials = \"\"\n    monkeypatch.setattr(\"backend.server.v2.store.media.Settings\", lambda: settings)\n\n    test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(b\"\\xFF\\xD8\\xFF\" + b\"test data\"),  # Valid JPEG signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )\n\n    with pytest.raises(backend.server.v2.store.exceptions.StorageConfigError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
          "children": [
            {
              "value": "settings = Settings()",
              "children": [
                {
                  "value": "settings = Settings()",
                  "children": [
                    {
                      "value": "settings",
                      "children": []
                    },
                    {
                      "value": "Settings()",
                      "children": [
                        {
                          "value": "Settings",
                          "children": []
                        },
                        {
                          "value": "()",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "settings.config.media_gcs_bucket_name = \"\"",
              "children": [
                {
                  "value": "settings.config.media_gcs_bucket_name = \"\"",
                  "children": [
                    {
                      "value": "settings.config.media_gcs_bucket_name",
                      "children": [
                        {
                          "value": "settings.config",
                          "children": [
                            {
                              "value": "settings",
                              "children": []
                            },
                            {
                              "value": "config",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "media_gcs_bucket_name",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "\"\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "settings.config.google_application_credentials = \"\"",
              "children": [
                {
                  "value": "settings.config.google_application_credentials = \"\"",
                  "children": [
                    {
                      "value": "settings.config.google_application_credentials",
                      "children": [
                        {
                          "value": "settings.config",
                          "children": [
                            {
                              "value": "settings",
                              "children": []
                            },
                            {
                              "value": "config",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "google_application_credentials",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "\"\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "monkeypatch.setattr(\"backend.server.v2.store.media.Settings\", lambda: settings)",
              "children": [
                {
                  "value": "monkeypatch.setattr(\"backend.server.v2.store.media.Settings\", lambda: settings)",
                  "children": [
                    {
                      "value": "monkeypatch.setattr",
                      "children": [
                        {
                          "value": "monkeypatch",
                          "children": []
                        },
                        {
                          "value": "setattr",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "(\"backend.server.v2.store.media.Settings\", lambda: settings)",
                      "children": [
                        {
                          "value": "\"backend.server.v2.store.media.Settings\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "backend.server.v2.store.media.Settings",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "lambda: settings",
                          "children": [
                            {
                              "value": "settings",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(b\"\\xFF\\xD8\\xFF\" + b\"test data\"),  # Valid JPEG signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
              "children": [
                {
                  "value": "test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(b\"\\xFF\\xD8\\xFF\" + b\"test data\"),  # Valid JPEG signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                  "children": [
                    {
                      "value": "test_file",
                      "children": []
                    },
                    {
                      "value": "fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(b\"\\xFF\\xD8\\xFF\" + b\"test data\"),  # Valid JPEG signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                      "children": [
                        {
                          "value": "fastapi.UploadFile",
                          "children": [
                            {
                              "value": "fastapi",
                              "children": []
                            },
                            {
                              "value": "UploadFile",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(b\"\\xFF\\xD8\\xFF\" + b\"test data\"),  # Valid JPEG signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                          "children": [
                            {
                              "value": "filename=\"laptop.jpeg\"",
                              "children": [
                                {
                                  "value": "filename",
                                  "children": []
                                },
                                {
                                  "value": "\"laptop.jpeg\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "laptop.jpeg",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "file=io.BytesIO(b\"\\xFF\\xD8\\xFF\" + b\"test data\")",
                              "children": [
                                {
                                  "value": "file",
                                  "children": []
                                },
                                {
                                  "value": "io.BytesIO(b\"\\xFF\\xD8\\xFF\" + b\"test data\")",
                                  "children": [
                                    {
                                      "value": "io.BytesIO",
                                      "children": [
                                        {
                                          "value": "io",
                                          "children": []
                                        },
                                        {
                                          "value": "BytesIO",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(b\"\\xFF\\xD8\\xFF\" + b\"test data\")",
                                      "children": [
                                        {
                                          "value": "b\"\\xFF\\xD8\\xFF\" + b\"test data\"",
                                          "children": [
                                            {
                                              "value": "b\"\\xFF\\xD8\\xFF\"",
                                              "children": [
                                                {
                                                  "value": "b\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\\xFF\\xD8\\xFF",
                                                  "children": [
                                                    {
                                                      "value": "\\xFF",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\\xD8",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\\xFF",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "b\"test data\"",
                                              "children": [
                                                {
                                                  "value": "b\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "test data",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "# Valid JPEG signature",
                              "children": []
                            },
                            {
                              "value": "headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"})",
                              "children": [
                                {
                                  "value": "headers",
                                  "children": []
                                },
                                {
                                  "value": "starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"})",
                                  "children": [
                                    {
                                      "value": "starlette.datastructures.Headers",
                                      "children": [
                                        {
                                          "value": "starlette.datastructures",
                                          "children": [
                                            {
                                              "value": "starlette",
                                              "children": []
                                            },
                                            {
                                              "value": "datastructures",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "Headers",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "({\"content-type\": \"image/jpeg\"})",
                                      "children": [
                                        {
                                          "value": "{\"content-type\": \"image/jpeg\"}",
                                          "children": [
                                            {
                                              "value": "\"content-type\": \"image/jpeg\"",
                                              "children": [
                                                {
                                                  "value": "\"content-type\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "content-type",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"image/jpeg\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "image/jpeg",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "with pytest.raises(backend.server.v2.store.exceptions.StorageConfigError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
              "children": [
                {
                  "value": "pytest.raises(backend.server.v2.store.exceptions.StorageConfigError)",
                  "children": [
                    {
                      "value": "pytest.raises(backend.server.v2.store.exceptions.StorageConfigError)",
                      "children": [
                        {
                          "value": "pytest.raises(backend.server.v2.store.exceptions.StorageConfigError)",
                          "children": [
                            {
                              "value": "pytest.raises",
                              "children": [
                                {
                                  "value": "pytest",
                                  "children": []
                                },
                                {
                                  "value": "raises",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(backend.server.v2.store.exceptions.StorageConfigError)",
                              "children": [
                                {
                                  "value": "backend.server.v2.store.exceptions.StorageConfigError",
                                  "children": [
                                    {
                                      "value": "backend.server.v2.store.exceptions",
                                      "children": [
                                        {
                                          "value": "backend.server.v2.store",
                                          "children": [
                                            {
                                              "value": "backend.server.v2",
                                              "children": [
                                                {
                                                  "value": "backend.server",
                                                  "children": [
                                                    {
                                                      "value": "backend",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "server",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "v2",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "store",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "exceptions",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "StorageConfigError",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                  "children": [
                    {
                      "value": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                      "children": [
                        {
                          "value": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                          "children": [
                            {
                              "value": "backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                              "children": [
                                {
                                  "value": "backend.server.v2.store.media.upload_media",
                                  "children": [
                                    {
                                      "value": "backend.server.v2.store.media",
                                      "children": [
                                        {
                                          "value": "backend.server.v2.store",
                                          "children": [
                                            {
                                              "value": "backend.server.v2",
                                              "children": [
                                                {
                                                  "value": "backend.server",
                                                  "children": [
                                                    {
                                                      "value": "backend",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "server",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "v2",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "store",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "media",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "upload_media",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(\"test-user\", test_file)",
                                  "children": [
                                    {
                                      "value": "\"test-user\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "test-user",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "test_file",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "async def test_upload_media_video_type(mock_settings, mock_storage_client):\n    test_file = fastapi.UploadFile(\n        filename=\"test.mp4\",\n        file=io.BytesIO(b\"\\x00\\x00\\x00\\x18ftypmp42\"),  # Valid MP4 signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"video/mp4\"}),\n    )\n\n    result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n\n    assert result == \"http://test-url/media/laptop.jpeg\"\n    mock_bucket = mock_storage_client.bucket.return_value\n    mock_blob = mock_bucket.blob.return_value\n    mock_blob.upload_from_string.assert_called_once()",
      "children": [
        {
          "value": "test_upload_media_video_type",
          "children": []
        },
        {
          "value": "(mock_settings, mock_storage_client)",
          "children": [
            {
              "value": "mock_settings",
              "children": []
            },
            {
              "value": "mock_storage_client",
              "children": []
            }
          ]
        },
        {
          "value": "test_file = fastapi.UploadFile(\n        filename=\"test.mp4\",\n        file=io.BytesIO(b\"\\x00\\x00\\x00\\x18ftypmp42\"),  # Valid MP4 signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"video/mp4\"}),\n    )\n\n    result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n\n    assert result == \"http://test-url/media/laptop.jpeg\"\n    mock_bucket = mock_storage_client.bucket.return_value\n    mock_blob = mock_bucket.blob.return_value\n    mock_blob.upload_from_string.assert_called_once()",
          "children": [
            {
              "value": "test_file = fastapi.UploadFile(\n        filename=\"test.mp4\",\n        file=io.BytesIO(b\"\\x00\\x00\\x00\\x18ftypmp42\"),  # Valid MP4 signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"video/mp4\"}),\n    )",
              "children": [
                {
                  "value": "test_file = fastapi.UploadFile(\n        filename=\"test.mp4\",\n        file=io.BytesIO(b\"\\x00\\x00\\x00\\x18ftypmp42\"),  # Valid MP4 signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"video/mp4\"}),\n    )",
                  "children": [
                    {
                      "value": "test_file",
                      "children": []
                    },
                    {
                      "value": "fastapi.UploadFile(\n        filename=\"test.mp4\",\n        file=io.BytesIO(b\"\\x00\\x00\\x00\\x18ftypmp42\"),  # Valid MP4 signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"video/mp4\"}),\n    )",
                      "children": [
                        {
                          "value": "fastapi.UploadFile",
                          "children": [
                            {
                              "value": "fastapi",
                              "children": []
                            },
                            {
                              "value": "UploadFile",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(\n        filename=\"test.mp4\",\n        file=io.BytesIO(b\"\\x00\\x00\\x00\\x18ftypmp42\"),  # Valid MP4 signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"video/mp4\"}),\n    )",
                          "children": [
                            {
                              "value": "filename=\"test.mp4\"",
                              "children": [
                                {
                                  "value": "filename",
                                  "children": []
                                },
                                {
                                  "value": "\"test.mp4\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "test.mp4",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "file=io.BytesIO(b\"\\x00\\x00\\x00\\x18ftypmp42\")",
                              "children": [
                                {
                                  "value": "file",
                                  "children": []
                                },
                                {
                                  "value": "io.BytesIO(b\"\\x00\\x00\\x00\\x18ftypmp42\")",
                                  "children": [
                                    {
                                      "value": "io.BytesIO",
                                      "children": [
                                        {
                                          "value": "io",
                                          "children": []
                                        },
                                        {
                                          "value": "BytesIO",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(b\"\\x00\\x00\\x00\\x18ftypmp42\")",
                                      "children": [
                                        {
                                          "value": "b\"\\x00\\x00\\x00\\x18ftypmp42\"",
                                          "children": [
                                            {
                                              "value": "b\"",
                                              "children": []
                                            },
                                            {
                                              "value": "\\x00\\x00\\x00\\x18ftypmp42",
                                              "children": [
                                                {
                                                  "value": "\\x00",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\\x00",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\\x00",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\\x18",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "# Valid MP4 signature",
                              "children": []
                            },
                            {
                              "value": "headers=starlette.datastructures.Headers({\"content-type\": \"video/mp4\"})",
                              "children": [
                                {
                                  "value": "headers",
                                  "children": []
                                },
                                {
                                  "value": "starlette.datastructures.Headers({\"content-type\": \"video/mp4\"})",
                                  "children": [
                                    {
                                      "value": "starlette.datastructures.Headers",
                                      "children": [
                                        {
                                          "value": "starlette.datastructures",
                                          "children": [
                                            {
                                              "value": "starlette",
                                              "children": []
                                            },
                                            {
                                              "value": "datastructures",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "Headers",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "({\"content-type\": \"video/mp4\"})",
                                      "children": [
                                        {
                                          "value": "{\"content-type\": \"video/mp4\"}",
                                          "children": [
                                            {
                                              "value": "\"content-type\": \"video/mp4\"",
                                              "children": [
                                                {
                                                  "value": "\"content-type\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "content-type",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"video/mp4\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "video/mp4",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
              "children": [
                {
                  "value": "result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                  "children": [
                    {
                      "value": "result",
                      "children": []
                    },
                    {
                      "value": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                      "children": [
                        {
                          "value": "backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                          "children": [
                            {
                              "value": "backend.server.v2.store.media.upload_media",
                              "children": [
                                {
                                  "value": "backend.server.v2.store.media",
                                  "children": [
                                    {
                                      "value": "backend.server.v2.store",
                                      "children": [
                                        {
                                          "value": "backend.server.v2",
                                          "children": [
                                            {
                                              "value": "backend.server",
                                              "children": [
                                                {
                                                  "value": "backend",
                                                  "children": []
                                                },
                                                {
                                                  "value": "server",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "v2",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "store",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "media",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "upload_media",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\"test-user\", test_file)",
                              "children": [
                                {
                                  "value": "\"test-user\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "test-user",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "test_file",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "assert result == \"http://test-url/media/laptop.jpeg\"",
              "children": [
                {
                  "value": "result == \"http://test-url/media/laptop.jpeg\"",
                  "children": [
                    {
                      "value": "result",
                      "children": []
                    },
                    {
                      "value": "\"http://test-url/media/laptop.jpeg\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "http://test-url/media/laptop.jpeg",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "mock_bucket = mock_storage_client.bucket.return_value",
              "children": [
                {
                  "value": "mock_bucket = mock_storage_client.bucket.return_value",
                  "children": [
                    {
                      "value": "mock_bucket",
                      "children": []
                    },
                    {
                      "value": "mock_storage_client.bucket.return_value",
                      "children": [
                        {
                          "value": "mock_storage_client.bucket",
                          "children": [
                            {
                              "value": "mock_storage_client",
                              "children": []
                            },
                            {
                              "value": "bucket",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "return_value",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "mock_blob = mock_bucket.blob.return_value",
              "children": [
                {
                  "value": "mock_blob = mock_bucket.blob.return_value",
                  "children": [
                    {
                      "value": "mock_blob",
                      "children": []
                    },
                    {
                      "value": "mock_bucket.blob.return_value",
                      "children": [
                        {
                          "value": "mock_bucket.blob",
                          "children": [
                            {
                              "value": "mock_bucket",
                              "children": []
                            },
                            {
                              "value": "blob",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "return_value",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "mock_blob.upload_from_string.assert_called_once()",
              "children": [
                {
                  "value": "mock_blob.upload_from_string.assert_called_once()",
                  "children": [
                    {
                      "value": "mock_blob.upload_from_string.assert_called_once",
                      "children": [
                        {
                          "value": "mock_blob.upload_from_string",
                          "children": [
                            {
                              "value": "mock_blob",
                              "children": []
                            },
                            {
                              "value": "upload_from_string",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "assert_called_once",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "()",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "async def test_upload_media_file_too_large(mock_settings, mock_storage_client):\n    large_data = b\"\\xFF\\xD8\\xFF\" + b\"x\" * (\n        50 * 1024 * 1024 + 1\n    )  # 50MB + 1 byte with valid JPEG signature\n    test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(large_data),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )\n\n    with pytest.raises(backend.server.v2.store.exceptions.FileSizeTooLargeError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
      "children": [
        {
          "value": "test_upload_media_file_too_large",
          "children": []
        },
        {
          "value": "(mock_settings, mock_storage_client)",
          "children": [
            {
              "value": "mock_settings",
              "children": []
            },
            {
              "value": "mock_storage_client",
              "children": []
            }
          ]
        },
        {
          "value": "large_data = b\"\\xFF\\xD8\\xFF\" + b\"x\" * (\n        50 * 1024 * 1024 + 1\n    )  # 50MB + 1 byte with valid JPEG signature\n    test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(large_data),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )\n\n    with pytest.raises(backend.server.v2.store.exceptions.FileSizeTooLargeError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
          "children": [
            {
              "value": "large_data = b\"\\xFF\\xD8\\xFF\" + b\"x\" * (\n        50 * 1024 * 1024 + 1\n    )",
              "children": [
                {
                  "value": "large_data = b\"\\xFF\\xD8\\xFF\" + b\"x\" * (\n        50 * 1024 * 1024 + 1\n    )",
                  "children": [
                    {
                      "value": "large_data",
                      "children": []
                    },
                    {
                      "value": "b\"\\xFF\\xD8\\xFF\" + b\"x\" * (\n        50 * 1024 * 1024 + 1\n    )",
                      "children": [
                        {
                          "value": "b\"\\xFF\\xD8\\xFF\"",
                          "children": [
                            {
                              "value": "b\"",
                              "children": []
                            },
                            {
                              "value": "\\xFF\\xD8\\xFF",
                              "children": [
                                {
                                  "value": "\\xFF",
                                  "children": []
                                },
                                {
                                  "value": "\\xD8",
                                  "children": []
                                },
                                {
                                  "value": "\\xFF",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "b\"x\" * (\n        50 * 1024 * 1024 + 1\n    )",
                          "children": [
                            {
                              "value": "b\"x\"",
                              "children": [
                                {
                                  "value": "b\"",
                                  "children": []
                                },
                                {
                                  "value": "x",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\n        50 * 1024 * 1024 + 1\n    )",
                              "children": [
                                {
                                  "value": "50 * 1024 * 1024 + 1",
                                  "children": [
                                    {
                                      "value": "50 * 1024 * 1024",
                                      "children": [
                                        {
                                          "value": "50 * 1024",
                                          "children": [
                                            {
                                              "value": "50",
                                              "children": []
                                            },
                                            {
                                              "value": "1024",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "1024",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "1",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# 50MB + 1 byte with valid JPEG signature",
              "children": []
            },
            {
              "value": "test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(large_data),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
              "children": [
                {
                  "value": "test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(large_data),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                  "children": [
                    {
                      "value": "test_file",
                      "children": []
                    },
                    {
                      "value": "fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(large_data),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                      "children": [
                        {
                          "value": "fastapi.UploadFile",
                          "children": [
                            {
                              "value": "fastapi",
                              "children": []
                            },
                            {
                              "value": "UploadFile",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(large_data),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                          "children": [
                            {
                              "value": "filename=\"laptop.jpeg\"",
                              "children": [
                                {
                                  "value": "filename",
                                  "children": []
                                },
                                {
                                  "value": "\"laptop.jpeg\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "laptop.jpeg",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "file=io.BytesIO(large_data)",
                              "children": [
                                {
                                  "value": "file",
                                  "children": []
                                },
                                {
                                  "value": "io.BytesIO(large_data)",
                                  "children": [
                                    {
                                      "value": "io.BytesIO",
                                      "children": [
                                        {
                                          "value": "io",
                                          "children": []
                                        },
                                        {
                                          "value": "BytesIO",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(large_data)",
                                      "children": [
                                        {
                                          "value": "large_data",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"})",
                              "children": [
                                {
                                  "value": "headers",
                                  "children": []
                                },
                                {
                                  "value": "starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"})",
                                  "children": [
                                    {
                                      "value": "starlette.datastructures.Headers",
                                      "children": [
                                        {
                                          "value": "starlette.datastructures",
                                          "children": [
                                            {
                                              "value": "starlette",
                                              "children": []
                                            },
                                            {
                                              "value": "datastructures",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "Headers",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "({\"content-type\": \"image/jpeg\"})",
                                      "children": [
                                        {
                                          "value": "{\"content-type\": \"image/jpeg\"}",
                                          "children": [
                                            {
                                              "value": "\"content-type\": \"image/jpeg\"",
                                              "children": [
                                                {
                                                  "value": "\"content-type\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "content-type",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"image/jpeg\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "image/jpeg",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "with pytest.raises(backend.server.v2.store.exceptions.FileSizeTooLargeError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
              "children": [
                {
                  "value": "pytest.raises(backend.server.v2.store.exceptions.FileSizeTooLargeError)",
                  "children": [
                    {
                      "value": "pytest.raises(backend.server.v2.store.exceptions.FileSizeTooLargeError)",
                      "children": [
                        {
                          "value": "pytest.raises(backend.server.v2.store.exceptions.FileSizeTooLargeError)",
                          "children": [
                            {
                              "value": "pytest.raises",
                              "children": [
                                {
                                  "value": "pytest",
                                  "children": []
                                },
                                {
                                  "value": "raises",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(backend.server.v2.store.exceptions.FileSizeTooLargeError)",
                              "children": [
                                {
                                  "value": "backend.server.v2.store.exceptions.FileSizeTooLargeError",
                                  "children": [
                                    {
                                      "value": "backend.server.v2.store.exceptions",
                                      "children": [
                                        {
                                          "value": "backend.server.v2.store",
                                          "children": [
                                            {
                                              "value": "backend.server.v2",
                                              "children": [
                                                {
                                                  "value": "backend.server",
                                                  "children": [
                                                    {
                                                      "value": "backend",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "server",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "v2",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "store",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "exceptions",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "FileSizeTooLargeError",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                  "children": [
                    {
                      "value": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                      "children": [
                        {
                          "value": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                          "children": [
                            {
                              "value": "backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                              "children": [
                                {
                                  "value": "backend.server.v2.store.media.upload_media",
                                  "children": [
                                    {
                                      "value": "backend.server.v2.store.media",
                                      "children": [
                                        {
                                          "value": "backend.server.v2.store",
                                          "children": [
                                            {
                                              "value": "backend.server.v2",
                                              "children": [
                                                {
                                                  "value": "backend.server",
                                                  "children": [
                                                    {
                                                      "value": "backend",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "server",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "v2",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "store",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "media",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "upload_media",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(\"test-user\", test_file)",
                                  "children": [
                                    {
                                      "value": "\"test-user\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "test-user",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "test_file",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "async def test_upload_media_file_read_error(mock_settings, mock_storage_client):\n    test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(b\"\"),  # Empty file that will raise error on read\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )\n    test_file.read = unittest.mock.AsyncMock(side_effect=Exception(\"Read error\"))\n\n    with pytest.raises(backend.server.v2.store.exceptions.FileReadError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
      "children": [
        {
          "value": "test_upload_media_file_read_error",
          "children": []
        },
        {
          "value": "(mock_settings, mock_storage_client)",
          "children": [
            {
              "value": "mock_settings",
              "children": []
            },
            {
              "value": "mock_storage_client",
              "children": []
            }
          ]
        },
        {
          "value": "test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(b\"\"),  # Empty file that will raise error on read\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )\n    test_file.read = unittest.mock.AsyncMock(side_effect=Exception(\"Read error\"))\n\n    with pytest.raises(backend.server.v2.store.exceptions.FileReadError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
          "children": [
            {
              "value": "test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(b\"\"),  # Empty file that will raise error on read\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
              "children": [
                {
                  "value": "test_file = fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(b\"\"),  # Empty file that will raise error on read\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                  "children": [
                    {
                      "value": "test_file",
                      "children": []
                    },
                    {
                      "value": "fastapi.UploadFile(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(b\"\"),  # Empty file that will raise error on read\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                      "children": [
                        {
                          "value": "fastapi.UploadFile",
                          "children": [
                            {
                              "value": "fastapi",
                              "children": []
                            },
                            {
                              "value": "UploadFile",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(\n        filename=\"laptop.jpeg\",\n        file=io.BytesIO(b\"\"),  # Empty file that will raise error on read\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                          "children": [
                            {
                              "value": "filename=\"laptop.jpeg\"",
                              "children": [
                                {
                                  "value": "filename",
                                  "children": []
                                },
                                {
                                  "value": "\"laptop.jpeg\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "laptop.jpeg",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "file=io.BytesIO(b\"\")",
                              "children": [
                                {
                                  "value": "file",
                                  "children": []
                                },
                                {
                                  "value": "io.BytesIO(b\"\")",
                                  "children": [
                                    {
                                      "value": "io.BytesIO",
                                      "children": [
                                        {
                                          "value": "io",
                                          "children": []
                                        },
                                        {
                                          "value": "BytesIO",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(b\"\")",
                                      "children": [
                                        {
                                          "value": "b\"\"",
                                          "children": [
                                            {
                                              "value": "b\"",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "# Empty file that will raise error on read",
                              "children": []
                            },
                            {
                              "value": "headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"})",
                              "children": [
                                {
                                  "value": "headers",
                                  "children": []
                                },
                                {
                                  "value": "starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"})",
                                  "children": [
                                    {
                                      "value": "starlette.datastructures.Headers",
                                      "children": [
                                        {
                                          "value": "starlette.datastructures",
                                          "children": [
                                            {
                                              "value": "starlette",
                                              "children": []
                                            },
                                            {
                                              "value": "datastructures",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "Headers",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "({\"content-type\": \"image/jpeg\"})",
                                      "children": [
                                        {
                                          "value": "{\"content-type\": \"image/jpeg\"}",
                                          "children": [
                                            {
                                              "value": "\"content-type\": \"image/jpeg\"",
                                              "children": [
                                                {
                                                  "value": "\"content-type\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "content-type",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"image/jpeg\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "image/jpeg",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "test_file.read = unittest.mock.AsyncMock(side_effect=Exception(\"Read error\"))",
              "children": [
                {
                  "value": "test_file.read = unittest.mock.AsyncMock(side_effect=Exception(\"Read error\"))",
                  "children": [
                    {
                      "value": "test_file.read",
                      "children": [
                        {
                          "value": "test_file",
                          "children": []
                        },
                        {
                          "value": "read",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "unittest.mock.AsyncMock(side_effect=Exception(\"Read error\"))",
                      "children": [
                        {
                          "value": "unittest.mock.AsyncMock",
                          "children": [
                            {
                              "value": "unittest.mock",
                              "children": [
                                {
                                  "value": "unittest",
                                  "children": []
                                },
                                {
                                  "value": "mock",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "AsyncMock",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(side_effect=Exception(\"Read error\"))",
                          "children": [
                            {
                              "value": "side_effect=Exception(\"Read error\")",
                              "children": [
                                {
                                  "value": "side_effect",
                                  "children": []
                                },
                                {
                                  "value": "Exception(\"Read error\")",
                                  "children": [
                                    {
                                      "value": "Exception",
                                      "children": []
                                    },
                                    {
                                      "value": "(\"Read error\")",
                                      "children": [
                                        {
                                          "value": "\"Read error\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Read error",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "with pytest.raises(backend.server.v2.store.exceptions.FileReadError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
              "children": [
                {
                  "value": "pytest.raises(backend.server.v2.store.exceptions.FileReadError)",
                  "children": [
                    {
                      "value": "pytest.raises(backend.server.v2.store.exceptions.FileReadError)",
                      "children": [
                        {
                          "value": "pytest.raises(backend.server.v2.store.exceptions.FileReadError)",
                          "children": [
                            {
                              "value": "pytest.raises",
                              "children": [
                                {
                                  "value": "pytest",
                                  "children": []
                                },
                                {
                                  "value": "raises",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(backend.server.v2.store.exceptions.FileReadError)",
                              "children": [
                                {
                                  "value": "backend.server.v2.store.exceptions.FileReadError",
                                  "children": [
                                    {
                                      "value": "backend.server.v2.store.exceptions",
                                      "children": [
                                        {
                                          "value": "backend.server.v2.store",
                                          "children": [
                                            {
                                              "value": "backend.server.v2",
                                              "children": [
                                                {
                                                  "value": "backend.server",
                                                  "children": [
                                                    {
                                                      "value": "backend",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "server",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "v2",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "store",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "exceptions",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "FileReadError",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                  "children": [
                    {
                      "value": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                      "children": [
                        {
                          "value": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                          "children": [
                            {
                              "value": "backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                              "children": [
                                {
                                  "value": "backend.server.v2.store.media.upload_media",
                                  "children": [
                                    {
                                      "value": "backend.server.v2.store.media",
                                      "children": [
                                        {
                                          "value": "backend.server.v2.store",
                                          "children": [
                                            {
                                              "value": "backend.server.v2",
                                              "children": [
                                                {
                                                  "value": "backend.server",
                                                  "children": [
                                                    {
                                                      "value": "backend",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "server",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "v2",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "store",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "media",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "upload_media",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(\"test-user\", test_file)",
                                  "children": [
                                    {
                                      "value": "\"test-user\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "test-user",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "test_file",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "async def test_upload_media_png_success(mock_settings, mock_storage_client):\n    test_file = fastapi.UploadFile(\n        filename=\"test.png\",\n        file=io.BytesIO(b\"\\x89PNG\\r\\n\\x1a\\n\"),  # Valid PNG signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/png\"}),\n    )\n\n    result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n    assert result == \"http://test-url/media/laptop.jpeg\"",
      "children": [
        {
          "value": "test_upload_media_png_success",
          "children": []
        },
        {
          "value": "(mock_settings, mock_storage_client)",
          "children": [
            {
              "value": "mock_settings",
              "children": []
            },
            {
              "value": "mock_storage_client",
              "children": []
            }
          ]
        },
        {
          "value": "test_file = fastapi.UploadFile(\n        filename=\"test.png\",\n        file=io.BytesIO(b\"\\x89PNG\\r\\n\\x1a\\n\"),  # Valid PNG signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/png\"}),\n    )\n\n    result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n    assert result == \"http://test-url/media/laptop.jpeg\"",
          "children": [
            {
              "value": "test_file = fastapi.UploadFile(\n        filename=\"test.png\",\n        file=io.BytesIO(b\"\\x89PNG\\r\\n\\x1a\\n\"),  # Valid PNG signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/png\"}),\n    )",
              "children": [
                {
                  "value": "test_file = fastapi.UploadFile(\n        filename=\"test.png\",\n        file=io.BytesIO(b\"\\x89PNG\\r\\n\\x1a\\n\"),  # Valid PNG signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/png\"}),\n    )",
                  "children": [
                    {
                      "value": "test_file",
                      "children": []
                    },
                    {
                      "value": "fastapi.UploadFile(\n        filename=\"test.png\",\n        file=io.BytesIO(b\"\\x89PNG\\r\\n\\x1a\\n\"),  # Valid PNG signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/png\"}),\n    )",
                      "children": [
                        {
                          "value": "fastapi.UploadFile",
                          "children": [
                            {
                              "value": "fastapi",
                              "children": []
                            },
                            {
                              "value": "UploadFile",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(\n        filename=\"test.png\",\n        file=io.BytesIO(b\"\\x89PNG\\r\\n\\x1a\\n\"),  # Valid PNG signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/png\"}),\n    )",
                          "children": [
                            {
                              "value": "filename=\"test.png\"",
                              "children": [
                                {
                                  "value": "filename",
                                  "children": []
                                },
                                {
                                  "value": "\"test.png\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "test.png",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "file=io.BytesIO(b\"\\x89PNG\\r\\n\\x1a\\n\")",
                              "children": [
                                {
                                  "value": "file",
                                  "children": []
                                },
                                {
                                  "value": "io.BytesIO(b\"\\x89PNG\\r\\n\\x1a\\n\")",
                                  "children": [
                                    {
                                      "value": "io.BytesIO",
                                      "children": [
                                        {
                                          "value": "io",
                                          "children": []
                                        },
                                        {
                                          "value": "BytesIO",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(b\"\\x89PNG\\r\\n\\x1a\\n\")",
                                      "children": [
                                        {
                                          "value": "b\"\\x89PNG\\r\\n\\x1a\\n\"",
                                          "children": [
                                            {
                                              "value": "b\"",
                                              "children": []
                                            },
                                            {
                                              "value": "\\x89PNG\\r\\n\\x1a\\n",
                                              "children": [
                                                {
                                                  "value": "\\x89",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\\r",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\\n",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\\x1a",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\\n",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "# Valid PNG signature",
                              "children": []
                            },
                            {
                              "value": "headers=starlette.datastructures.Headers({\"content-type\": \"image/png\"})",
                              "children": [
                                {
                                  "value": "headers",
                                  "children": []
                                },
                                {
                                  "value": "starlette.datastructures.Headers({\"content-type\": \"image/png\"})",
                                  "children": [
                                    {
                                      "value": "starlette.datastructures.Headers",
                                      "children": [
                                        {
                                          "value": "starlette.datastructures",
                                          "children": [
                                            {
                                              "value": "starlette",
                                              "children": []
                                            },
                                            {
                                              "value": "datastructures",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "Headers",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "({\"content-type\": \"image/png\"})",
                                      "children": [
                                        {
                                          "value": "{\"content-type\": \"image/png\"}",
                                          "children": [
                                            {
                                              "value": "\"content-type\": \"image/png\"",
                                              "children": [
                                                {
                                                  "value": "\"content-type\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "content-type",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"image/png\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "image/png",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
              "children": [
                {
                  "value": "result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                  "children": [
                    {
                      "value": "result",
                      "children": []
                    },
                    {
                      "value": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                      "children": [
                        {
                          "value": "backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                          "children": [
                            {
                              "value": "backend.server.v2.store.media.upload_media",
                              "children": [
                                {
                                  "value": "backend.server.v2.store.media",
                                  "children": [
                                    {
                                      "value": "backend.server.v2.store",
                                      "children": [
                                        {
                                          "value": "backend.server.v2",
                                          "children": [
                                            {
                                              "value": "backend.server",
                                              "children": [
                                                {
                                                  "value": "backend",
                                                  "children": []
                                                },
                                                {
                                                  "value": "server",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "v2",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "store",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "media",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "upload_media",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\"test-user\", test_file)",
                              "children": [
                                {
                                  "value": "\"test-user\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "test-user",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "test_file",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "assert result == \"http://test-url/media/laptop.jpeg\"",
              "children": [
                {
                  "value": "result == \"http://test-url/media/laptop.jpeg\"",
                  "children": [
                    {
                      "value": "result",
                      "children": []
                    },
                    {
                      "value": "\"http://test-url/media/laptop.jpeg\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "http://test-url/media/laptop.jpeg",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "async def test_upload_media_gif_success(mock_settings, mock_storage_client):\n    test_file = fastapi.UploadFile(\n        filename=\"test.gif\",\n        file=io.BytesIO(b\"GIF89a\"),  # Valid GIF signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/gif\"}),\n    )\n\n    result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n    assert result == \"http://test-url/media/laptop.jpeg\"",
      "children": [
        {
          "value": "test_upload_media_gif_success",
          "children": []
        },
        {
          "value": "(mock_settings, mock_storage_client)",
          "children": [
            {
              "value": "mock_settings",
              "children": []
            },
            {
              "value": "mock_storage_client",
              "children": []
            }
          ]
        },
        {
          "value": "test_file = fastapi.UploadFile(\n        filename=\"test.gif\",\n        file=io.BytesIO(b\"GIF89a\"),  # Valid GIF signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/gif\"}),\n    )\n\n    result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n    assert result == \"http://test-url/media/laptop.jpeg\"",
          "children": [
            {
              "value": "test_file = fastapi.UploadFile(\n        filename=\"test.gif\",\n        file=io.BytesIO(b\"GIF89a\"),  # Valid GIF signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/gif\"}),\n    )",
              "children": [
                {
                  "value": "test_file = fastapi.UploadFile(\n        filename=\"test.gif\",\n        file=io.BytesIO(b\"GIF89a\"),  # Valid GIF signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/gif\"}),\n    )",
                  "children": [
                    {
                      "value": "test_file",
                      "children": []
                    },
                    {
                      "value": "fastapi.UploadFile(\n        filename=\"test.gif\",\n        file=io.BytesIO(b\"GIF89a\"),  # Valid GIF signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/gif\"}),\n    )",
                      "children": [
                        {
                          "value": "fastapi.UploadFile",
                          "children": [
                            {
                              "value": "fastapi",
                              "children": []
                            },
                            {
                              "value": "UploadFile",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(\n        filename=\"test.gif\",\n        file=io.BytesIO(b\"GIF89a\"),  # Valid GIF signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/gif\"}),\n    )",
                          "children": [
                            {
                              "value": "filename=\"test.gif\"",
                              "children": [
                                {
                                  "value": "filename",
                                  "children": []
                                },
                                {
                                  "value": "\"test.gif\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "test.gif",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "file=io.BytesIO(b\"GIF89a\")",
                              "children": [
                                {
                                  "value": "file",
                                  "children": []
                                },
                                {
                                  "value": "io.BytesIO(b\"GIF89a\")",
                                  "children": [
                                    {
                                      "value": "io.BytesIO",
                                      "children": [
                                        {
                                          "value": "io",
                                          "children": []
                                        },
                                        {
                                          "value": "BytesIO",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(b\"GIF89a\")",
                                      "children": [
                                        {
                                          "value": "b\"GIF89a\"",
                                          "children": [
                                            {
                                              "value": "b\"",
                                              "children": []
                                            },
                                            {
                                              "value": "GIF89a",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "# Valid GIF signature",
                              "children": []
                            },
                            {
                              "value": "headers=starlette.datastructures.Headers({\"content-type\": \"image/gif\"})",
                              "children": [
                                {
                                  "value": "headers",
                                  "children": []
                                },
                                {
                                  "value": "starlette.datastructures.Headers({\"content-type\": \"image/gif\"})",
                                  "children": [
                                    {
                                      "value": "starlette.datastructures.Headers",
                                      "children": [
                                        {
                                          "value": "starlette.datastructures",
                                          "children": [
                                            {
                                              "value": "starlette",
                                              "children": []
                                            },
                                            {
                                              "value": "datastructures",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "Headers",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "({\"content-type\": \"image/gif\"})",
                                      "children": [
                                        {
                                          "value": "{\"content-type\": \"image/gif\"}",
                                          "children": [
                                            {
                                              "value": "\"content-type\": \"image/gif\"",
                                              "children": [
                                                {
                                                  "value": "\"content-type\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "content-type",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"image/gif\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "image/gif",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
              "children": [
                {
                  "value": "result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                  "children": [
                    {
                      "value": "result",
                      "children": []
                    },
                    {
                      "value": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                      "children": [
                        {
                          "value": "backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                          "children": [
                            {
                              "value": "backend.server.v2.store.media.upload_media",
                              "children": [
                                {
                                  "value": "backend.server.v2.store.media",
                                  "children": [
                                    {
                                      "value": "backend.server.v2.store",
                                      "children": [
                                        {
                                          "value": "backend.server.v2",
                                          "children": [
                                            {
                                              "value": "backend.server",
                                              "children": [
                                                {
                                                  "value": "backend",
                                                  "children": []
                                                },
                                                {
                                                  "value": "server",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "v2",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "store",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "media",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "upload_media",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\"test-user\", test_file)",
                              "children": [
                                {
                                  "value": "\"test-user\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "test-user",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "test_file",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "assert result == \"http://test-url/media/laptop.jpeg\"",
              "children": [
                {
                  "value": "result == \"http://test-url/media/laptop.jpeg\"",
                  "children": [
                    {
                      "value": "result",
                      "children": []
                    },
                    {
                      "value": "\"http://test-url/media/laptop.jpeg\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "http://test-url/media/laptop.jpeg",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "async def test_upload_media_webp_success(mock_settings, mock_storage_client):\n    test_file = fastapi.UploadFile(\n        filename=\"test.webp\",\n        file=io.BytesIO(b\"RIFF\\x00\\x00\\x00\\x00WEBP\"),  # Valid WebP signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/webp\"}),\n    )\n\n    result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n    assert result == \"http://test-url/media/laptop.jpeg\"",
      "children": [
        {
          "value": "test_upload_media_webp_success",
          "children": []
        },
        {
          "value": "(mock_settings, mock_storage_client)",
          "children": [
            {
              "value": "mock_settings",
              "children": []
            },
            {
              "value": "mock_storage_client",
              "children": []
            }
          ]
        },
        {
          "value": "test_file = fastapi.UploadFile(\n        filename=\"test.webp\",\n        file=io.BytesIO(b\"RIFF\\x00\\x00\\x00\\x00WEBP\"),  # Valid WebP signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/webp\"}),\n    )\n\n    result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n    assert result == \"http://test-url/media/laptop.jpeg\"",
          "children": [
            {
              "value": "test_file = fastapi.UploadFile(\n        filename=\"test.webp\",\n        file=io.BytesIO(b\"RIFF\\x00\\x00\\x00\\x00WEBP\"),  # Valid WebP signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/webp\"}),\n    )",
              "children": [
                {
                  "value": "test_file = fastapi.UploadFile(\n        filename=\"test.webp\",\n        file=io.BytesIO(b\"RIFF\\x00\\x00\\x00\\x00WEBP\"),  # Valid WebP signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/webp\"}),\n    )",
                  "children": [
                    {
                      "value": "test_file",
                      "children": []
                    },
                    {
                      "value": "fastapi.UploadFile(\n        filename=\"test.webp\",\n        file=io.BytesIO(b\"RIFF\\x00\\x00\\x00\\x00WEBP\"),  # Valid WebP signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/webp\"}),\n    )",
                      "children": [
                        {
                          "value": "fastapi.UploadFile",
                          "children": [
                            {
                              "value": "fastapi",
                              "children": []
                            },
                            {
                              "value": "UploadFile",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(\n        filename=\"test.webp\",\n        file=io.BytesIO(b\"RIFF\\x00\\x00\\x00\\x00WEBP\"),  # Valid WebP signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/webp\"}),\n    )",
                          "children": [
                            {
                              "value": "filename=\"test.webp\"",
                              "children": [
                                {
                                  "value": "filename",
                                  "children": []
                                },
                                {
                                  "value": "\"test.webp\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "test.webp",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "file=io.BytesIO(b\"RIFF\\x00\\x00\\x00\\x00WEBP\")",
                              "children": [
                                {
                                  "value": "file",
                                  "children": []
                                },
                                {
                                  "value": "io.BytesIO(b\"RIFF\\x00\\x00\\x00\\x00WEBP\")",
                                  "children": [
                                    {
                                      "value": "io.BytesIO",
                                      "children": [
                                        {
                                          "value": "io",
                                          "children": []
                                        },
                                        {
                                          "value": "BytesIO",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(b\"RIFF\\x00\\x00\\x00\\x00WEBP\")",
                                      "children": [
                                        {
                                          "value": "b\"RIFF\\x00\\x00\\x00\\x00WEBP\"",
                                          "children": [
                                            {
                                              "value": "b\"",
                                              "children": []
                                            },
                                            {
                                              "value": "RIFF\\x00\\x00\\x00\\x00WEBP",
                                              "children": [
                                                {
                                                  "value": "\\x00",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\\x00",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\\x00",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\\x00",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "# Valid WebP signature",
                              "children": []
                            },
                            {
                              "value": "headers=starlette.datastructures.Headers({\"content-type\": \"image/webp\"})",
                              "children": [
                                {
                                  "value": "headers",
                                  "children": []
                                },
                                {
                                  "value": "starlette.datastructures.Headers({\"content-type\": \"image/webp\"})",
                                  "children": [
                                    {
                                      "value": "starlette.datastructures.Headers",
                                      "children": [
                                        {
                                          "value": "starlette.datastructures",
                                          "children": [
                                            {
                                              "value": "starlette",
                                              "children": []
                                            },
                                            {
                                              "value": "datastructures",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "Headers",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "({\"content-type\": \"image/webp\"})",
                                      "children": [
                                        {
                                          "value": "{\"content-type\": \"image/webp\"}",
                                          "children": [
                                            {
                                              "value": "\"content-type\": \"image/webp\"",
                                              "children": [
                                                {
                                                  "value": "\"content-type\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "content-type",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"image/webp\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "image/webp",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
              "children": [
                {
                  "value": "result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                  "children": [
                    {
                      "value": "result",
                      "children": []
                    },
                    {
                      "value": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                      "children": [
                        {
                          "value": "backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                          "children": [
                            {
                              "value": "backend.server.v2.store.media.upload_media",
                              "children": [
                                {
                                  "value": "backend.server.v2.store.media",
                                  "children": [
                                    {
                                      "value": "backend.server.v2.store",
                                      "children": [
                                        {
                                          "value": "backend.server.v2",
                                          "children": [
                                            {
                                              "value": "backend.server",
                                              "children": [
                                                {
                                                  "value": "backend",
                                                  "children": []
                                                },
                                                {
                                                  "value": "server",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "v2",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "store",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "media",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "upload_media",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\"test-user\", test_file)",
                              "children": [
                                {
                                  "value": "\"test-user\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "test-user",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "test_file",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "assert result == \"http://test-url/media/laptop.jpeg\"",
              "children": [
                {
                  "value": "result == \"http://test-url/media/laptop.jpeg\"",
                  "children": [
                    {
                      "value": "result",
                      "children": []
                    },
                    {
                      "value": "\"http://test-url/media/laptop.jpeg\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "http://test-url/media/laptop.jpeg",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "async def test_upload_media_webm_success(mock_settings, mock_storage_client):\n    test_file = fastapi.UploadFile(\n        filename=\"test.webm\",\n        file=io.BytesIO(b\"\\x1a\\x45\\xdf\\xa3\"),  # Valid WebM signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"video/webm\"}),\n    )\n\n    result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n    assert result == \"http://test-url/media/laptop.jpeg\"",
      "children": [
        {
          "value": "test_upload_media_webm_success",
          "children": []
        },
        {
          "value": "(mock_settings, mock_storage_client)",
          "children": [
            {
              "value": "mock_settings",
              "children": []
            },
            {
              "value": "mock_storage_client",
              "children": []
            }
          ]
        },
        {
          "value": "test_file = fastapi.UploadFile(\n        filename=\"test.webm\",\n        file=io.BytesIO(b\"\\x1a\\x45\\xdf\\xa3\"),  # Valid WebM signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"video/webm\"}),\n    )\n\n    result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)\n    assert result == \"http://test-url/media/laptop.jpeg\"",
          "children": [
            {
              "value": "test_file = fastapi.UploadFile(\n        filename=\"test.webm\",\n        file=io.BytesIO(b\"\\x1a\\x45\\xdf\\xa3\"),  # Valid WebM signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"video/webm\"}),\n    )",
              "children": [
                {
                  "value": "test_file = fastapi.UploadFile(\n        filename=\"test.webm\",\n        file=io.BytesIO(b\"\\x1a\\x45\\xdf\\xa3\"),  # Valid WebM signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"video/webm\"}),\n    )",
                  "children": [
                    {
                      "value": "test_file",
                      "children": []
                    },
                    {
                      "value": "fastapi.UploadFile(\n        filename=\"test.webm\",\n        file=io.BytesIO(b\"\\x1a\\x45\\xdf\\xa3\"),  # Valid WebM signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"video/webm\"}),\n    )",
                      "children": [
                        {
                          "value": "fastapi.UploadFile",
                          "children": [
                            {
                              "value": "fastapi",
                              "children": []
                            },
                            {
                              "value": "UploadFile",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(\n        filename=\"test.webm\",\n        file=io.BytesIO(b\"\\x1a\\x45\\xdf\\xa3\"),  # Valid WebM signature\n        headers=starlette.datastructures.Headers({\"content-type\": \"video/webm\"}),\n    )",
                          "children": [
                            {
                              "value": "filename=\"test.webm\"",
                              "children": [
                                {
                                  "value": "filename",
                                  "children": []
                                },
                                {
                                  "value": "\"test.webm\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "test.webm",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "file=io.BytesIO(b\"\\x1a\\x45\\xdf\\xa3\")",
                              "children": [
                                {
                                  "value": "file",
                                  "children": []
                                },
                                {
                                  "value": "io.BytesIO(b\"\\x1a\\x45\\xdf\\xa3\")",
                                  "children": [
                                    {
                                      "value": "io.BytesIO",
                                      "children": [
                                        {
                                          "value": "io",
                                          "children": []
                                        },
                                        {
                                          "value": "BytesIO",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(b\"\\x1a\\x45\\xdf\\xa3\")",
                                      "children": [
                                        {
                                          "value": "b\"\\x1a\\x45\\xdf\\xa3\"",
                                          "children": [
                                            {
                                              "value": "b\"",
                                              "children": []
                                            },
                                            {
                                              "value": "\\x1a\\x45\\xdf\\xa3",
                                              "children": [
                                                {
                                                  "value": "\\x1a",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\\x45",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\\xdf",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\\xa3",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "# Valid WebM signature",
                              "children": []
                            },
                            {
                              "value": "headers=starlette.datastructures.Headers({\"content-type\": \"video/webm\"})",
                              "children": [
                                {
                                  "value": "headers",
                                  "children": []
                                },
                                {
                                  "value": "starlette.datastructures.Headers({\"content-type\": \"video/webm\"})",
                                  "children": [
                                    {
                                      "value": "starlette.datastructures.Headers",
                                      "children": [
                                        {
                                          "value": "starlette.datastructures",
                                          "children": [
                                            {
                                              "value": "starlette",
                                              "children": []
                                            },
                                            {
                                              "value": "datastructures",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "Headers",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "({\"content-type\": \"video/webm\"})",
                                      "children": [
                                        {
                                          "value": "{\"content-type\": \"video/webm\"}",
                                          "children": [
                                            {
                                              "value": "\"content-type\": \"video/webm\"",
                                              "children": [
                                                {
                                                  "value": "\"content-type\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "content-type",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"video/webm\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "video/webm",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
              "children": [
                {
                  "value": "result = await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                  "children": [
                    {
                      "value": "result",
                      "children": []
                    },
                    {
                      "value": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                      "children": [
                        {
                          "value": "backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                          "children": [
                            {
                              "value": "backend.server.v2.store.media.upload_media",
                              "children": [
                                {
                                  "value": "backend.server.v2.store.media",
                                  "children": [
                                    {
                                      "value": "backend.server.v2.store",
                                      "children": [
                                        {
                                          "value": "backend.server.v2",
                                          "children": [
                                            {
                                              "value": "backend.server",
                                              "children": [
                                                {
                                                  "value": "backend",
                                                  "children": []
                                                },
                                                {
                                                  "value": "server",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "v2",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "store",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "media",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "upload_media",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\"test-user\", test_file)",
                              "children": [
                                {
                                  "value": "\"test-user\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "test-user",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "test_file",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "assert result == \"http://test-url/media/laptop.jpeg\"",
              "children": [
                {
                  "value": "result == \"http://test-url/media/laptop.jpeg\"",
                  "children": [
                    {
                      "value": "result",
                      "children": []
                    },
                    {
                      "value": "\"http://test-url/media/laptop.jpeg\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "http://test-url/media/laptop.jpeg",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "async def test_upload_media_mismatched_signature(mock_settings, mock_storage_client):\n    test_file = fastapi.UploadFile(\n        filename=\"test.jpeg\",\n        file=io.BytesIO(b\"\\x89PNG\\r\\n\\x1a\\n\"),  # PNG signature with JPEG content type\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )\n\n    with pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
      "children": [
        {
          "value": "test_upload_media_mismatched_signature",
          "children": []
        },
        {
          "value": "(mock_settings, mock_storage_client)",
          "children": [
            {
              "value": "mock_settings",
              "children": []
            },
            {
              "value": "mock_storage_client",
              "children": []
            }
          ]
        },
        {
          "value": "test_file = fastapi.UploadFile(\n        filename=\"test.jpeg\",\n        file=io.BytesIO(b\"\\x89PNG\\r\\n\\x1a\\n\"),  # PNG signature with JPEG content type\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )\n\n    with pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
          "children": [
            {
              "value": "test_file = fastapi.UploadFile(\n        filename=\"test.jpeg\",\n        file=io.BytesIO(b\"\\x89PNG\\r\\n\\x1a\\n\"),  # PNG signature with JPEG content type\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
              "children": [
                {
                  "value": "test_file = fastapi.UploadFile(\n        filename=\"test.jpeg\",\n        file=io.BytesIO(b\"\\x89PNG\\r\\n\\x1a\\n\"),  # PNG signature with JPEG content type\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                  "children": [
                    {
                      "value": "test_file",
                      "children": []
                    },
                    {
                      "value": "fastapi.UploadFile(\n        filename=\"test.jpeg\",\n        file=io.BytesIO(b\"\\x89PNG\\r\\n\\x1a\\n\"),  # PNG signature with JPEG content type\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                      "children": [
                        {
                          "value": "fastapi.UploadFile",
                          "children": [
                            {
                              "value": "fastapi",
                              "children": []
                            },
                            {
                              "value": "UploadFile",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(\n        filename=\"test.jpeg\",\n        file=io.BytesIO(b\"\\x89PNG\\r\\n\\x1a\\n\"),  # PNG signature with JPEG content type\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                          "children": [
                            {
                              "value": "filename=\"test.jpeg\"",
                              "children": [
                                {
                                  "value": "filename",
                                  "children": []
                                },
                                {
                                  "value": "\"test.jpeg\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "test.jpeg",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "file=io.BytesIO(b\"\\x89PNG\\r\\n\\x1a\\n\")",
                              "children": [
                                {
                                  "value": "file",
                                  "children": []
                                },
                                {
                                  "value": "io.BytesIO(b\"\\x89PNG\\r\\n\\x1a\\n\")",
                                  "children": [
                                    {
                                      "value": "io.BytesIO",
                                      "children": [
                                        {
                                          "value": "io",
                                          "children": []
                                        },
                                        {
                                          "value": "BytesIO",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(b\"\\x89PNG\\r\\n\\x1a\\n\")",
                                      "children": [
                                        {
                                          "value": "b\"\\x89PNG\\r\\n\\x1a\\n\"",
                                          "children": [
                                            {
                                              "value": "b\"",
                                              "children": []
                                            },
                                            {
                                              "value": "\\x89PNG\\r\\n\\x1a\\n",
                                              "children": [
                                                {
                                                  "value": "\\x89",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\\r",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\\n",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\\x1a",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\\n",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "# PNG signature with JPEG content type",
                              "children": []
                            },
                            {
                              "value": "headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"})",
                              "children": [
                                {
                                  "value": "headers",
                                  "children": []
                                },
                                {
                                  "value": "starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"})",
                                  "children": [
                                    {
                                      "value": "starlette.datastructures.Headers",
                                      "children": [
                                        {
                                          "value": "starlette.datastructures",
                                          "children": [
                                            {
                                              "value": "starlette",
                                              "children": []
                                            },
                                            {
                                              "value": "datastructures",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "Headers",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "({\"content-type\": \"image/jpeg\"})",
                                      "children": [
                                        {
                                          "value": "{\"content-type\": \"image/jpeg\"}",
                                          "children": [
                                            {
                                              "value": "\"content-type\": \"image/jpeg\"",
                                              "children": [
                                                {
                                                  "value": "\"content-type\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "content-type",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"image/jpeg\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "image/jpeg",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "with pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
              "children": [
                {
                  "value": "pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError)",
                  "children": [
                    {
                      "value": "pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError)",
                      "children": [
                        {
                          "value": "pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError)",
                          "children": [
                            {
                              "value": "pytest.raises",
                              "children": [
                                {
                                  "value": "pytest",
                                  "children": []
                                },
                                {
                                  "value": "raises",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(backend.server.v2.store.exceptions.InvalidFileTypeError)",
                              "children": [
                                {
                                  "value": "backend.server.v2.store.exceptions.InvalidFileTypeError",
                                  "children": [
                                    {
                                      "value": "backend.server.v2.store.exceptions",
                                      "children": [
                                        {
                                          "value": "backend.server.v2.store",
                                          "children": [
                                            {
                                              "value": "backend.server.v2",
                                              "children": [
                                                {
                                                  "value": "backend.server",
                                                  "children": [
                                                    {
                                                      "value": "backend",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "server",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "v2",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "store",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "exceptions",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "InvalidFileTypeError",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                  "children": [
                    {
                      "value": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                      "children": [
                        {
                          "value": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                          "children": [
                            {
                              "value": "backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                              "children": [
                                {
                                  "value": "backend.server.v2.store.media.upload_media",
                                  "children": [
                                    {
                                      "value": "backend.server.v2.store.media",
                                      "children": [
                                        {
                                          "value": "backend.server.v2.store",
                                          "children": [
                                            {
                                              "value": "backend.server.v2",
                                              "children": [
                                                {
                                                  "value": "backend.server",
                                                  "children": [
                                                    {
                                                      "value": "backend",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "server",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "v2",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "store",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "media",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "upload_media",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(\"test-user\", test_file)",
                                  "children": [
                                    {
                                      "value": "\"test-user\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "test-user",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "test_file",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "async def test_upload_media_invalid_signature(mock_settings, mock_storage_client):\n    test_file = fastapi.UploadFile(\n        filename=\"test.jpeg\",\n        file=io.BytesIO(b\"invalid signature\"),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )\n\n    with pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
      "children": [
        {
          "value": "test_upload_media_invalid_signature",
          "children": []
        },
        {
          "value": "(mock_settings, mock_storage_client)",
          "children": [
            {
              "value": "mock_settings",
              "children": []
            },
            {
              "value": "mock_storage_client",
              "children": []
            }
          ]
        },
        {
          "value": "test_file = fastapi.UploadFile(\n        filename=\"test.jpeg\",\n        file=io.BytesIO(b\"invalid signature\"),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )\n\n    with pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
          "children": [
            {
              "value": "test_file = fastapi.UploadFile(\n        filename=\"test.jpeg\",\n        file=io.BytesIO(b\"invalid signature\"),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
              "children": [
                {
                  "value": "test_file = fastapi.UploadFile(\n        filename=\"test.jpeg\",\n        file=io.BytesIO(b\"invalid signature\"),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                  "children": [
                    {
                      "value": "test_file",
                      "children": []
                    },
                    {
                      "value": "fastapi.UploadFile(\n        filename=\"test.jpeg\",\n        file=io.BytesIO(b\"invalid signature\"),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                      "children": [
                        {
                          "value": "fastapi.UploadFile",
                          "children": [
                            {
                              "value": "fastapi",
                              "children": []
                            },
                            {
                              "value": "UploadFile",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(\n        filename=\"test.jpeg\",\n        file=io.BytesIO(b\"invalid signature\"),\n        headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"}),\n    )",
                          "children": [
                            {
                              "value": "filename=\"test.jpeg\"",
                              "children": [
                                {
                                  "value": "filename",
                                  "children": []
                                },
                                {
                                  "value": "\"test.jpeg\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "test.jpeg",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "file=io.BytesIO(b\"invalid signature\")",
                              "children": [
                                {
                                  "value": "file",
                                  "children": []
                                },
                                {
                                  "value": "io.BytesIO(b\"invalid signature\")",
                                  "children": [
                                    {
                                      "value": "io.BytesIO",
                                      "children": [
                                        {
                                          "value": "io",
                                          "children": []
                                        },
                                        {
                                          "value": "BytesIO",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(b\"invalid signature\")",
                                      "children": [
                                        {
                                          "value": "b\"invalid signature\"",
                                          "children": [
                                            {
                                              "value": "b\"",
                                              "children": []
                                            },
                                            {
                                              "value": "invalid signature",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "headers=starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"})",
                              "children": [
                                {
                                  "value": "headers",
                                  "children": []
                                },
                                {
                                  "value": "starlette.datastructures.Headers({\"content-type\": \"image/jpeg\"})",
                                  "children": [
                                    {
                                      "value": "starlette.datastructures.Headers",
                                      "children": [
                                        {
                                          "value": "starlette.datastructures",
                                          "children": [
                                            {
                                              "value": "starlette",
                                              "children": []
                                            },
                                            {
                                              "value": "datastructures",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "Headers",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "({\"content-type\": \"image/jpeg\"})",
                                      "children": [
                                        {
                                          "value": "{\"content-type\": \"image/jpeg\"}",
                                          "children": [
                                            {
                                              "value": "\"content-type\": \"image/jpeg\"",
                                              "children": [
                                                {
                                                  "value": "\"content-type\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "content-type",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"image/jpeg\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "image/jpeg",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "with pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError):\n        await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
              "children": [
                {
                  "value": "pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError)",
                  "children": [
                    {
                      "value": "pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError)",
                      "children": [
                        {
                          "value": "pytest.raises(backend.server.v2.store.exceptions.InvalidFileTypeError)",
                          "children": [
                            {
                              "value": "pytest.raises",
                              "children": [
                                {
                                  "value": "pytest",
                                  "children": []
                                },
                                {
                                  "value": "raises",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(backend.server.v2.store.exceptions.InvalidFileTypeError)",
                              "children": [
                                {
                                  "value": "backend.server.v2.store.exceptions.InvalidFileTypeError",
                                  "children": [
                                    {
                                      "value": "backend.server.v2.store.exceptions",
                                      "children": [
                                        {
                                          "value": "backend.server.v2.store",
                                          "children": [
                                            {
                                              "value": "backend.server.v2",
                                              "children": [
                                                {
                                                  "value": "backend.server",
                                                  "children": [
                                                    {
                                                      "value": "backend",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "server",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "v2",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "store",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "exceptions",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "InvalidFileTypeError",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                  "children": [
                    {
                      "value": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                      "children": [
                        {
                          "value": "await backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                          "children": [
                            {
                              "value": "backend.server.v2.store.media.upload_media(\"test-user\", test_file)",
                              "children": [
                                {
                                  "value": "backend.server.v2.store.media.upload_media",
                                  "children": [
                                    {
                                      "value": "backend.server.v2.store.media",
                                      "children": [
                                        {
                                          "value": "backend.server.v2.store",
                                          "children": [
                                            {
                                              "value": "backend.server.v2",
                                              "children": [
                                                {
                                                  "value": "backend.server",
                                                  "children": [
                                                    {
                                                      "value": "backend",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "server",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "v2",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "store",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "media",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "upload_media",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(\"test-user\", test_file)",
                                  "children": [
                                    {
                                      "value": "\"test-user\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "test-user",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "test_file",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}