{
  "value": "# -*- coding: utf-8 -*-\n\nimport re\nimport sys\nfrom string import punctuation\nfrom typing import List, Tuple, Dict\n\n# Temporary replacement\n# The descriptions that contain () at the end must adapt to the new policy later\npunctuation = punctuation.replace('()', '')\n\nanchor = '###'\nauth_keys = ['apiKey', 'OAuth', 'X-Mashape-Key', 'User-Agent', 'No']\nhttps_keys = ['Yes', 'No']\ncors_keys = ['Yes', 'No', 'Unknown']\n\nindex_title = 0\nindex_desc = 1\nindex_auth = 2\nindex_https = 3\nindex_cors = 4\n\nnum_segments = 5\nmin_entries_per_category = 3\nmax_description_length = 100\n\nanchor_re = re.compile(anchor + '\\s(.+)')\ncategory_title_in_index_re = re.compile('\\*\\s\\[(.*)\\]')\nlink_re = re.compile('\\[(.+)\\]\\((http.*)\\)')\n\n# Type aliases\nAPIList = List[str]\nCategories = Dict[str, APIList]\nCategoriesLineNumber = Dict[str, int]\n\n\ndef error_message(line_number: int, message: str) -> str:\n    line = line_number + 1\n    return f'(L{line:03d}) {message}'\n\n\ndef get_categories_content(contents: List[str]) -> Tuple[Categories, CategoriesLineNumber]:\n\n    categories = {}\n    category_line_num = {}\n\n    for line_num, line_content in enumerate(contents):\n\n        if line_content.startswith(anchor):\n            category = line_content.split(anchor)[1].strip()\n            categories[category] = []\n            category_line_num[category] = line_num\n            continue\n\n        if not line_content.startswith('|') or line_content.startswith('|---'):\n            continue\n\n        raw_title = [\n            raw_content.strip() for raw_content in line_content.split('|')[1:-1]\n        ][0]\n\n        title_match = link_re.match(raw_title)\n        if title_match:\n                title = title_match.group(1).upper()\n                categories[category].append(title)\n\n    return (categories, category_line_num)\n\n\ndef check_alphabetical_order(lines: List[str]) -> List[str]:\n\n    err_msgs = []\n\n    categories, category_line_num = get_categories_content(contents=lines)\n\n    for category, api_list in categories.items():\n        if sorted(api_list) != api_list:\n            err_msg = error_message(\n                category_line_num[category], \n                f'{category} category is not alphabetical order'\n            )\n            err_msgs.append(err_msg)\n    \n    return err_msgs\n\n\ndef check_title(line_num: int, raw_title: str) -> List[str]:\n\n    err_msgs = []\n\n    title_match = link_re.match(raw_title)\n\n    # url should be wrapped in \"[TITLE](LINK)\" Markdown syntax\n    if not title_match:\n        err_msg = error_message(line_num, 'Title syntax should be \"[TITLE](LINK)\"')\n        err_msgs.append(err_msg)\n    else:\n        # do not allow \"... API\" in the entry title\n        title = title_match.group(1)\n        if title.upper().endswith(' API'):\n            err_msg = error_message(line_num, 'Title should not end with \"... API\". Every entry is an API here!')\n            err_msgs.append(err_msg)\n\n    return err_msgs\n\n\ndef check_description(line_num: int, description: str) -> List[str]:\n\n    err_msgs = []\n\n    first_char = description[0]\n    if first_char.upper() != first_char:\n        err_msg = error_message(line_num, 'first character of description is not capitalized')\n        err_msgs.append(err_msg)\n\n    last_char = description[-1]\n    if last_char in punctuation:\n        err_msg = error_message(line_num, f'description should not end with {last_char}')\n        err_msgs.append(err_msg)\n\n    desc_length = len(description)\n    if desc_length > max_description_length:\n        err_msg = error_message(line_num, f'description should not exceed {max_description_length} characters (currently {desc_length})')\n        err_msgs.append(err_msg)\n    \n    return err_msgs\n\n\ndef check_auth(line_num: int, auth: str) -> List[str]:\n\n    err_msgs = []\n\n    backtick = '`'\n    if auth != 'No' and (not auth.startswith(backtick) or not auth.endswith(backtick)):\n        err_msg = error_message(line_num, 'auth value is not enclosed with `backticks`')\n        err_msgs.append(err_msg)\n\n    if auth.replace(backtick, '') not in auth_keys:\n        err_msg = error_message(line_num, f'{auth} is not a valid Auth option')\n        err_msgs.append(err_msg)\n    \n    return err_msgs\n\n\ndef check_https(line_num: int, https: str) -> List[str]:\n\n    err_msgs = []\n\n    if https not in https_keys:\n        err_msg = error_message(line_num, f'{https} is not a valid HTTPS option')\n        err_msgs.append(err_msg)\n\n    return err_msgs\n\n\ndef check_cors(line_num: int, cors: str) -> List[str]:\n\n    err_msgs = []\n\n    if cors not in cors_keys:\n        err_msg = error_message(line_num, f'{cors} is not a valid CORS option')\n        err_msgs.append(err_msg)\n    \n    return err_msgs\n\n\ndef check_entry(line_num: int, segments: List[str]) -> List[str]:\n\n    raw_title = segments[index_title]\n    description = segments[index_desc]\n    auth = segments[index_auth]\n    https = segments[index_https]\n    cors = segments[index_cors]\n\n    title_err_msgs = check_title(line_num, raw_title)\n    desc_err_msgs = check_description(line_num, description)\n    auth_err_msgs = check_auth(line_num, auth)\n    https_err_msgs = check_https(line_num, https)\n    cors_err_msgs = check_cors(line_num, cors)\n\n    err_msgs = [\n        *title_err_msgs,\n        *desc_err_msgs,\n        *auth_err_msgs,\n        *https_err_msgs,\n        *cors_err_msgs\n    ]\n\n    return err_msgs\n\n\ndef check_file_format(lines: List[str]) -> List[str]:\n\n    err_msgs = []\n    category_title_in_index = []\n\n    alphabetical_err_msgs = check_alphabetical_order(lines)\n    err_msgs.extend(alphabetical_err_msgs)\n\n    num_in_category = min_entries_per_category + 1\n    category = ''\n    category_line = 0\n\n    for line_num, line_content in enumerate(lines):\n\n        category_title_match = category_title_in_index_re.match(line_content)\n        if category_title_match:\n            category_title_in_index.append(category_title_match.group(1))\n\n        # check each category for the minimum number of entries\n        if line_content.startswith(anchor):\n            category_match = anchor_re.match(line_content)\n            if category_match:\n                if category_match.group(1) not in category_title_in_index:\n                    err_msg = error_message(line_num, f'category header ({category_match.group(1)}) not added to Index section')\n                    err_msgs.append(err_msg)\n            else:\n                err_msg = error_message(line_num, 'category header is not formatted correctly')\n                err_msgs.append(err_msg)\n\n            if num_in_category < min_entries_per_category:\n                err_msg = error_message(category_line, f'{category} category does not have the minimum {min_entries_per_category} entries (only has {num_in_category})')\n                err_msgs.append(err_msg)\n\n            category = line_content.split(' ')[1]\n            category_line = line_num\n            num_in_category = 0\n            continue\n\n        # skips lines that we do not care about\n        if not line_content.startswith('|') or line_content.startswith('|---'):\n            continue\n\n        num_in_category += 1\n        segments = line_content.split('|')[1:-1]\n        if len(segments) < num_segments:\n            err_msg = error_message(line_num, f'entry does not have all the required columns (have {len(segments)}, need {num_segments})')\n            err_msgs.append(err_msg)\n            continue\n    \n        for segment in segments:\n            # every line segment should start and end with exactly 1 space\n            if len(segment) - len(segment.lstrip()) != 1 or len(segment) - len(segment.rstrip()) != 1:\n                err_msg = error_message(line_num, 'each segment must start and end with exactly 1 space')\n                err_msgs.append(err_msg)\n        \n        segments = [segment.strip() for segment in segments]\n        entry_err_msgs = check_entry(line_num, segments)\n        err_msgs.extend(entry_err_msgs)\n    \n    return err_msgs\n\n\ndef main(filename: str) -> None:\n\n    with open(filename, mode='r', encoding='utf-8') as file:\n        lines = list(line.rstrip() for line in file)\n\n    file_format_err_msgs = check_file_format(lines)\n\n    if file_format_err_msgs:\n        for err_msg in file_format_err_msgs:\n            print(err_msg)\n        sys.exit(1)\n\n\nif __name__ == '__main__':\n\n    num_args = len(sys.argv)\n\n    if num_args < 2:\n        print('No .md file passed (file should contain Markdown table syntax)')\n        sys.exit(1)\n\n    filename = sys.argv[1]\n\n    main(filename)",
  "children": [
    {
      "value": "# -*- coding: utf-8 -*-",
      "children": []
    },
    {
      "value": "import re",
      "children": [
        {
          "value": "re",
          "children": [
            {
              "value": "re",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "import sys",
      "children": [
        {
          "value": "sys",
          "children": [
            {
              "value": "sys",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from string import punctuation",
      "children": [
        {
          "value": "string",
          "children": [
            {
              "value": "string",
              "children": []
            }
          ]
        },
        {
          "value": "punctuation",
          "children": [
            {
              "value": "punctuation",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from typing import List, Tuple, Dict",
      "children": [
        {
          "value": "typing",
          "children": [
            {
              "value": "typing",
              "children": []
            }
          ]
        },
        {
          "value": "List",
          "children": [
            {
              "value": "List",
              "children": []
            }
          ]
        },
        {
          "value": "Tuple",
          "children": [
            {
              "value": "Tuple",
              "children": []
            }
          ]
        },
        {
          "value": "Dict",
          "children": [
            {
              "value": "Dict",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "# Temporary replacement",
      "children": []
    },
    {
      "value": "# The descriptions that contain () at the end must adapt to the new policy later",
      "children": []
    },
    {
      "value": "punctuation = punctuation.replace('()', '')",
      "children": [
        {
          "value": "punctuation = punctuation.replace('()', '')",
          "children": [
            {
              "value": "punctuation",
              "children": []
            },
            {
              "value": "punctuation.replace('()', '')",
              "children": [
                {
                  "value": "punctuation.replace",
                  "children": [
                    {
                      "value": "punctuation",
                      "children": []
                    },
                    {
                      "value": "replace",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "('()', '')",
                  "children": [
                    {
                      "value": "'()'",
                      "children": [
                        {
                          "value": "'",
                          "children": []
                        },
                        {
                          "value": "()",
                          "children": []
                        },
                        {
                          "value": "'",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "''",
                      "children": [
                        {
                          "value": "'",
                          "children": []
                        },
                        {
                          "value": "'",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "anchor = '###'",
      "children": [
        {
          "value": "anchor = '###'",
          "children": [
            {
              "value": "anchor",
              "children": []
            },
            {
              "value": "'###'",
              "children": [
                {
                  "value": "'",
                  "children": []
                },
                {
                  "value": "###",
                  "children": []
                },
                {
                  "value": "'",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "auth_keys = ['apiKey', 'OAuth', 'X-Mashape-Key', 'User-Agent', 'No']",
      "children": [
        {
          "value": "auth_keys = ['apiKey', 'OAuth', 'X-Mashape-Key', 'User-Agent', 'No']",
          "children": [
            {
              "value": "auth_keys",
              "children": []
            },
            {
              "value": "['apiKey', 'OAuth', 'X-Mashape-Key', 'User-Agent', 'No']",
              "children": [
                {
                  "value": "'apiKey'",
                  "children": [
                    {
                      "value": "'",
                      "children": []
                    },
                    {
                      "value": "apiKey",
                      "children": []
                    },
                    {
                      "value": "'",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "'OAuth'",
                  "children": [
                    {
                      "value": "'",
                      "children": []
                    },
                    {
                      "value": "OAuth",
                      "children": []
                    },
                    {
                      "value": "'",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "'X-Mashape-Key'",
                  "children": [
                    {
                      "value": "'",
                      "children": []
                    },
                    {
                      "value": "X-Mashape-Key",
                      "children": []
                    },
                    {
                      "value": "'",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "'User-Agent'",
                  "children": [
                    {
                      "value": "'",
                      "children": []
                    },
                    {
                      "value": "User-Agent",
                      "children": []
                    },
                    {
                      "value": "'",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "'No'",
                  "children": [
                    {
                      "value": "'",
                      "children": []
                    },
                    {
                      "value": "No",
                      "children": []
                    },
                    {
                      "value": "'",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "https_keys = ['Yes', 'No']",
      "children": [
        {
          "value": "https_keys = ['Yes', 'No']",
          "children": [
            {
              "value": "https_keys",
              "children": []
            },
            {
              "value": "['Yes', 'No']",
              "children": [
                {
                  "value": "'Yes'",
                  "children": [
                    {
                      "value": "'",
                      "children": []
                    },
                    {
                      "value": "Yes",
                      "children": []
                    },
                    {
                      "value": "'",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "'No'",
                  "children": [
                    {
                      "value": "'",
                      "children": []
                    },
                    {
                      "value": "No",
                      "children": []
                    },
                    {
                      "value": "'",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "cors_keys = ['Yes', 'No', 'Unknown']",
      "children": [
        {
          "value": "cors_keys = ['Yes', 'No', 'Unknown']",
          "children": [
            {
              "value": "cors_keys",
              "children": []
            },
            {
              "value": "['Yes', 'No', 'Unknown']",
              "children": [
                {
                  "value": "'Yes'",
                  "children": [
                    {
                      "value": "'",
                      "children": []
                    },
                    {
                      "value": "Yes",
                      "children": []
                    },
                    {
                      "value": "'",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "'No'",
                  "children": [
                    {
                      "value": "'",
                      "children": []
                    },
                    {
                      "value": "No",
                      "children": []
                    },
                    {
                      "value": "'",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "'Unknown'",
                  "children": [
                    {
                      "value": "'",
                      "children": []
                    },
                    {
                      "value": "Unknown",
                      "children": []
                    },
                    {
                      "value": "'",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "index_title = 0",
      "children": [
        {
          "value": "index_title = 0",
          "children": [
            {
              "value": "index_title",
              "children": []
            },
            {
              "value": "0",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "index_desc = 1",
      "children": [
        {
          "value": "index_desc = 1",
          "children": [
            {
              "value": "index_desc",
              "children": []
            },
            {
              "value": "1",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "index_auth = 2",
      "children": [
        {
          "value": "index_auth = 2",
          "children": [
            {
              "value": "index_auth",
              "children": []
            },
            {
              "value": "2",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "index_https = 3",
      "children": [
        {
          "value": "index_https = 3",
          "children": [
            {
              "value": "index_https",
              "children": []
            },
            {
              "value": "3",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "index_cors = 4",
      "children": [
        {
          "value": "index_cors = 4",
          "children": [
            {
              "value": "index_cors",
              "children": []
            },
            {
              "value": "4",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "num_segments = 5",
      "children": [
        {
          "value": "num_segments = 5",
          "children": [
            {
              "value": "num_segments",
              "children": []
            },
            {
              "value": "5",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "min_entries_per_category = 3",
      "children": [
        {
          "value": "min_entries_per_category = 3",
          "children": [
            {
              "value": "min_entries_per_category",
              "children": []
            },
            {
              "value": "3",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "max_description_length = 100",
      "children": [
        {
          "value": "max_description_length = 100",
          "children": [
            {
              "value": "max_description_length",
              "children": []
            },
            {
              "value": "100",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "anchor_re = re.compile(anchor + '\\s(.+)')",
      "children": [
        {
          "value": "anchor_re = re.compile(anchor + '\\s(.+)')",
          "children": [
            {
              "value": "anchor_re",
              "children": []
            },
            {
              "value": "re.compile(anchor + '\\s(.+)')",
              "children": [
                {
                  "value": "re.compile",
                  "children": [
                    {
                      "value": "re",
                      "children": []
                    },
                    {
                      "value": "compile",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "(anchor + '\\s(.+)')",
                  "children": [
                    {
                      "value": "anchor + '\\s(.+)'",
                      "children": [
                        {
                          "value": "anchor",
                          "children": []
                        },
                        {
                          "value": "'\\s(.+)'",
                          "children": [
                            {
                              "value": "'",
                              "children": []
                            },
                            {
                              "value": "\\s(.+)",
                              "children": []
                            },
                            {
                              "value": "'",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "category_title_in_index_re = re.compile('\\*\\s\\[(.*)\\]')",
      "children": [
        {
          "value": "category_title_in_index_re = re.compile('\\*\\s\\[(.*)\\]')",
          "children": [
            {
              "value": "category_title_in_index_re",
              "children": []
            },
            {
              "value": "re.compile('\\*\\s\\[(.*)\\]')",
              "children": [
                {
                  "value": "re.compile",
                  "children": [
                    {
                      "value": "re",
                      "children": []
                    },
                    {
                      "value": "compile",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "('\\*\\s\\[(.*)\\]')",
                  "children": [
                    {
                      "value": "'\\*\\s\\[(.*)\\]'",
                      "children": [
                        {
                          "value": "'",
                          "children": []
                        },
                        {
                          "value": "\\*\\s\\[(.*)\\]",
                          "children": []
                        },
                        {
                          "value": "'",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "link_re = re.compile('\\[(.+)\\]\\((http.*)\\)')",
      "children": [
        {
          "value": "link_re = re.compile('\\[(.+)\\]\\((http.*)\\)')",
          "children": [
            {
              "value": "link_re",
              "children": []
            },
            {
              "value": "re.compile('\\[(.+)\\]\\((http.*)\\)')",
              "children": [
                {
                  "value": "re.compile",
                  "children": [
                    {
                      "value": "re",
                      "children": []
                    },
                    {
                      "value": "compile",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "('\\[(.+)\\]\\((http.*)\\)')",
                  "children": [
                    {
                      "value": "'\\[(.+)\\]\\((http.*)\\)'",
                      "children": [
                        {
                          "value": "'",
                          "children": []
                        },
                        {
                          "value": "\\[(.+)\\]\\((http.*)\\)",
                          "children": []
                        },
                        {
                          "value": "'",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "# Type aliases",
      "children": []
    },
    {
      "value": "APIList = List[str]",
      "children": [
        {
          "value": "APIList = List[str]",
          "children": [
            {
              "value": "APIList",
              "children": []
            },
            {
              "value": "List[str]",
              "children": [
                {
                  "value": "List",
                  "children": []
                },
                {
                  "value": "str",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "Categories = Dict[str, APIList]",
      "children": [
        {
          "value": "Categories = Dict[str, APIList]",
          "children": [
            {
              "value": "Categories",
              "children": []
            },
            {
              "value": "Dict[str, APIList]",
              "children": [
                {
                  "value": "Dict",
                  "children": []
                },
                {
                  "value": "str",
                  "children": []
                },
                {
                  "value": "APIList",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "CategoriesLineNumber = Dict[str, int]",
      "children": [
        {
          "value": "CategoriesLineNumber = Dict[str, int]",
          "children": [
            {
              "value": "CategoriesLineNumber",
              "children": []
            },
            {
              "value": "Dict[str, int]",
              "children": [
                {
                  "value": "Dict",
                  "children": []
                },
                {
                  "value": "str",
                  "children": []
                },
                {
                  "value": "int",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "def error_message(line_number: int, message: str) -> str:\n    line = line_number + 1\n    return f'(L{line:03d}) {message}'",
      "children": [
        {
          "value": "error_message",
          "children": []
        },
        {
          "value": "(line_number: int, message: str)",
          "children": [
            {
              "value": "line_number: int",
              "children": [
                {
                  "value": "line_number",
                  "children": []
                },
                {
                  "value": "int",
                  "children": [
                    {
                      "value": "int",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "message: str",
              "children": [
                {
                  "value": "message",
                  "children": []
                },
                {
                  "value": "str",
                  "children": [
                    {
                      "value": "str",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "str",
          "children": [
            {
              "value": "str",
              "children": []
            }
          ]
        },
        {
          "value": "line = line_number + 1\n    return f'(L{line:03d}) {message}'",
          "children": [
            {
              "value": "line = line_number + 1",
              "children": [
                {
                  "value": "line = line_number + 1",
                  "children": [
                    {
                      "value": "line",
                      "children": []
                    },
                    {
                      "value": "line_number + 1",
                      "children": [
                        {
                          "value": "line_number",
                          "children": []
                        },
                        {
                          "value": "1",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "return f'(L{line:03d}) {message}'",
              "children": [
                {
                  "value": "f'(L{line:03d}) {message}'",
                  "children": [
                    {
                      "value": "f'",
                      "children": []
                    },
                    {
                      "value": "(L",
                      "children": []
                    },
                    {
                      "value": "{line:03d}",
                      "children": [
                        {
                          "value": "line",
                          "children": []
                        },
                        {
                          "value": ":03d",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": ")",
                      "children": []
                    },
                    {
                      "value": "{message}",
                      "children": [
                        {
                          "value": "message",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "'",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "def get_categories_content(contents: List[str]) -> Tuple[Categories, CategoriesLineNumber]:\n\n    categories = {}\n    category_line_num = {}\n\n    for line_num, line_content in enumerate(contents):\n\n        if line_content.startswith(anchor):\n            category = line_content.split(anchor)[1].strip()\n            categories[category] = []\n            category_line_num[category] = line_num\n            continue\n\n        if not line_content.startswith('|') or line_content.startswith('|---'):\n            continue\n\n        raw_title = [\n            raw_content.strip() for raw_content in line_content.split('|')[1:-1]\n        ][0]\n\n        title_match = link_re.match(raw_title)\n        if title_match:\n                title = title_match.group(1).upper()\n                categories[category].append(title)\n\n    return (categories, category_line_num)",
      "children": [
        {
          "value": "get_categories_content",
          "children": []
        },
        {
          "value": "(contents: List[str])",
          "children": [
            {
              "value": "contents: List[str]",
              "children": [
                {
                  "value": "contents",
                  "children": []
                },
                {
                  "value": "List[str]",
                  "children": [
                    {
                      "value": "List[str]",
                      "children": [
                        {
                          "value": "List",
                          "children": []
                        },
                        {
                          "value": "[str]",
                          "children": [
                            {
                              "value": "str",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "Tuple[Categories, CategoriesLineNumber]",
          "children": [
            {
              "value": "Tuple[Categories, CategoriesLineNumber]",
              "children": [
                {
                  "value": "Tuple",
                  "children": []
                },
                {
                  "value": "[Categories, CategoriesLineNumber]",
                  "children": [
                    {
                      "value": "Categories",
                      "children": [
                        {
                          "value": "Categories",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "CategoriesLineNumber",
                      "children": [
                        {
                          "value": "CategoriesLineNumber",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "categories = {}\n    category_line_num = {}\n\n    for line_num, line_content in enumerate(contents):\n\n        if line_content.startswith(anchor):\n            category = line_content.split(anchor)[1].strip()\n            categories[category] = []\n            category_line_num[category] = line_num\n            continue\n\n        if not line_content.startswith('|') or line_content.startswith('|---'):\n            continue\n\n        raw_title = [\n            raw_content.strip() for raw_content in line_content.split('|')[1:-1]\n        ][0]\n\n        title_match = link_re.match(raw_title)\n        if title_match:\n                title = title_match.group(1).upper()\n                categories[category].append(title)\n\n    return (categories, category_line_num)",
          "children": [
            {
              "value": "categories = {}",
              "children": [
                {
                  "value": "categories = {}",
                  "children": [
                    {
                      "value": "categories",
                      "children": []
                    },
                    {
                      "value": "{}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "category_line_num = {}",
              "children": [
                {
                  "value": "category_line_num = {}",
                  "children": [
                    {
                      "value": "category_line_num",
                      "children": []
                    },
                    {
                      "value": "{}",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "for line_num, line_content in enumerate(contents):\n\n        if line_content.startswith(anchor):\n            category = line_content.split(anchor)[1].strip()\n            categories[category] = []\n            category_line_num[category] = line_num\n            continue\n\n        if not line_content.startswith('|') or line_content.startswith('|---'):\n            continue\n\n        raw_title = [\n            raw_content.strip() for raw_content in line_content.split('|')[1:-1]\n        ][0]\n\n        title_match = link_re.match(raw_title)\n        if title_match:\n                title = title_match.group(1).upper()\n                categories[category].append(title)",
              "children": [
                {
                  "value": "line_num, line_content",
                  "children": [
                    {
                      "value": "line_num",
                      "children": []
                    },
                    {
                      "value": "line_content",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "enumerate(contents)",
                  "children": [
                    {
                      "value": "enumerate",
                      "children": []
                    },
                    {
                      "value": "(contents)",
                      "children": [
                        {
                          "value": "contents",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "if line_content.startswith(anchor):\n            category = line_content.split(anchor)[1].strip()\n            categories[category] = []\n            category_line_num[category] = line_num\n            continue\n\n        if not line_content.startswith('|') or line_content.startswith('|---'):\n            continue\n\n        raw_title = [\n            raw_content.strip() for raw_content in line_content.split('|')[1:-1]\n        ][0]\n\n        title_match = link_re.match(raw_title)\n        if title_match:\n                title = title_match.group(1).upper()\n                categories[category].append(title)",
                  "children": [
                    {
                      "value": "if line_content.startswith(anchor):\n            category = line_content.split(anchor)[1].strip()\n            categories[category] = []\n            category_line_num[category] = line_num\n            continue",
                      "children": [
                        {
                          "value": "line_content.startswith(anchor)",
                          "children": [
                            {
                              "value": "line_content.startswith",
                              "children": [
                                {
                                  "value": "line_content",
                                  "children": []
                                },
                                {
                                  "value": "startswith",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(anchor)",
                              "children": [
                                {
                                  "value": "anchor",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "category = line_content.split(anchor)[1].strip()\n            categories[category] = []\n            category_line_num[category] = line_num\n            continue",
                          "children": [
                            {
                              "value": "category = line_content.split(anchor)[1].strip()",
                              "children": [
                                {
                                  "value": "category = line_content.split(anchor)[1].strip()",
                                  "children": [
                                    {
                                      "value": "category",
                                      "children": []
                                    },
                                    {
                                      "value": "line_content.split(anchor)[1].strip()",
                                      "children": [
                                        {
                                          "value": "line_content.split(anchor)[1].strip",
                                          "children": [
                                            {
                                              "value": "line_content.split(anchor)[1]",
                                              "children": [
                                                {
                                                  "value": "line_content.split(anchor)",
                                                  "children": [
                                                    {
                                                      "value": "line_content.split",
                                                      "children": [
                                                        {
                                                          "value": "line_content",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "split",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "(anchor)",
                                                      "children": [
                                                        {
                                                          "value": "anchor",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "strip",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "()",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "categories[category] = []",
                              "children": [
                                {
                                  "value": "categories[category] = []",
                                  "children": [
                                    {
                                      "value": "categories[category]",
                                      "children": [
                                        {
                                          "value": "categories",
                                          "children": []
                                        },
                                        {
                                          "value": "category",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "[]",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "category_line_num[category] = line_num",
                              "children": [
                                {
                                  "value": "category_line_num[category] = line_num",
                                  "children": [
                                    {
                                      "value": "category_line_num[category]",
                                      "children": [
                                        {
                                          "value": "category_line_num",
                                          "children": []
                                        },
                                        {
                                          "value": "category",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "line_num",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "continue",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "if not line_content.startswith('|') or line_content.startswith('|---'):\n            continue",
                      "children": [
                        {
                          "value": "not line_content.startswith('|') or line_content.startswith('|---')",
                          "children": [
                            {
                              "value": "not line_content.startswith('|')",
                              "children": [
                                {
                                  "value": "line_content.startswith('|')",
                                  "children": [
                                    {
                                      "value": "line_content.startswith",
                                      "children": [
                                        {
                                          "value": "line_content",
                                          "children": []
                                        },
                                        {
                                          "value": "startswith",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "('|')",
                                      "children": [
                                        {
                                          "value": "'|'",
                                          "children": [
                                            {
                                              "value": "'",
                                              "children": []
                                            },
                                            {
                                              "value": "|",
                                              "children": []
                                            },
                                            {
                                              "value": "'",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "line_content.startswith('|---')",
                              "children": [
                                {
                                  "value": "line_content.startswith",
                                  "children": [
                                    {
                                      "value": "line_content",
                                      "children": []
                                    },
                                    {
                                      "value": "startswith",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "('|---')",
                                  "children": [
                                    {
                                      "value": "'|---'",
                                      "children": [
                                        {
                                          "value": "'",
                                          "children": []
                                        },
                                        {
                                          "value": "|---",
                                          "children": []
                                        },
                                        {
                                          "value": "'",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "continue",
                          "children": [
                            {
                              "value": "continue",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "raw_title = [\n            raw_content.strip() for raw_content in line_content.split('|')[1:-1]\n        ][0]",
                      "children": [
                        {
                          "value": "raw_title = [\n            raw_content.strip() for raw_content in line_content.split('|')[1:-1]\n        ][0]",
                          "children": [
                            {
                              "value": "raw_title",
                              "children": []
                            },
                            {
                              "value": "[\n            raw_content.strip() for raw_content in line_content.split('|')[1:-1]\n        ][0]",
                              "children": [
                                {
                                  "value": "[\n            raw_content.strip() for raw_content in line_content.split('|')[1:-1]\n        ]",
                                  "children": [
                                    {
                                      "value": "raw_content.strip()",
                                      "children": [
                                        {
                                          "value": "raw_content.strip",
                                          "children": [
                                            {
                                              "value": "raw_content",
                                              "children": []
                                            },
                                            {
                                              "value": "strip",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "()",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "for raw_content in line_content.split('|')[1:-1]",
                                      "children": [
                                        {
                                          "value": "raw_content",
                                          "children": []
                                        },
                                        {
                                          "value": "line_content.split('|')[1:-1]",
                                          "children": [
                                            {
                                              "value": "line_content.split('|')",
                                              "children": [
                                                {
                                                  "value": "line_content.split",
                                                  "children": [
                                                    {
                                                      "value": "line_content",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "split",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "('|')",
                                                  "children": [
                                                    {
                                                      "value": "'|'",
                                                      "children": [
                                                        {
                                                          "value": "'",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "|",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "'",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "1:-1",
                                              "children": [
                                                {
                                                  "value": "1",
                                                  "children": []
                                                },
                                                {
                                                  "value": "-1",
                                                  "children": [
                                                    {
                                                      "value": "1",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "0",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "title_match = link_re.match(raw_title)",
                      "children": [
                        {
                          "value": "title_match = link_re.match(raw_title)",
                          "children": [
                            {
                              "value": "title_match",
                              "children": []
                            },
                            {
                              "value": "link_re.match(raw_title)",
                              "children": [
                                {
                                  "value": "link_re.match",
                                  "children": [
                                    {
                                      "value": "link_re",
                                      "children": []
                                    },
                                    {
                                      "value": "match",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(raw_title)",
                                  "children": [
                                    {
                                      "value": "raw_title",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "if title_match:\n                title = title_match.group(1).upper()\n                categories[category].append(title)",
                      "children": [
                        {
                          "value": "title_match",
                          "children": []
                        },
                        {
                          "value": "title = title_match.group(1).upper()\n                categories[category].append(title)",
                          "children": [
                            {
                              "value": "title = title_match.group(1).upper()",
                              "children": [
                                {
                                  "value": "title = title_match.group(1).upper()",
                                  "children": [
                                    {
                                      "value": "title",
                                      "children": []
                                    },
                                    {
                                      "value": "title_match.group(1).upper()",
                                      "children": [
                                        {
                                          "value": "title_match.group(1).upper",
                                          "children": [
                                            {
                                              "value": "title_match.group(1)",
                                              "children": [
                                                {
                                                  "value": "title_match.group",
                                                  "children": [
                                                    {
                                                      "value": "title_match",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "group",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "(1)",
                                                  "children": [
                                                    {
                                                      "value": "1",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "upper",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "()",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "categories[category].append(title)",
                              "children": [
                                {
                                  "value": "categories[category].append(title)",
                                  "children": [
                                    {
                                      "value": "categories[category].append",
                                      "children": [
                                        {
                                          "value": "categories[category]",
                                          "children": [
                                            {
                                              "value": "categories",
                                              "children": []
                                            },
                                            {
                                              "value": "category",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "append",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(title)",
                                      "children": [
                                        {
                                          "value": "title",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "return (categories, category_line_num)",
              "children": [
                {
                  "value": "(categories, category_line_num)",
                  "children": [
                    {
                      "value": "categories",
                      "children": []
                    },
                    {
                      "value": "category_line_num",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "def check_alphabetical_order(lines: List[str]) -> List[str]:\n\n    err_msgs = []\n\n    categories, category_line_num = get_categories_content(contents=lines)\n\n    for category, api_list in categories.items():\n        if sorted(api_list) != api_list:\n            err_msg = error_message(\n                category_line_num[category], \n                f'{category} category is not alphabetical order'\n            )\n            err_msgs.append(err_msg)\n    \n    return err_msgs",
      "children": [
        {
          "value": "check_alphabetical_order",
          "children": []
        },
        {
          "value": "(lines: List[str])",
          "children": [
            {
              "value": "lines: List[str]",
              "children": [
                {
                  "value": "lines",
                  "children": []
                },
                {
                  "value": "List[str]",
                  "children": [
                    {
                      "value": "List[str]",
                      "children": [
                        {
                          "value": "List",
                          "children": []
                        },
                        {
                          "value": "[str]",
                          "children": [
                            {
                              "value": "str",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "List[str]",
          "children": [
            {
              "value": "List[str]",
              "children": [
                {
                  "value": "List",
                  "children": []
                },
                {
                  "value": "[str]",
                  "children": [
                    {
                      "value": "str",
                      "children": [
                        {
                          "value": "str",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "err_msgs = []\n\n    categories, category_line_num = get_categories_content(contents=lines)\n\n    for category, api_list in categories.items():\n        if sorted(api_list) != api_list:\n            err_msg = error_message(\n                category_line_num[category], \n                f'{category} category is not alphabetical order'\n            )\n            err_msgs.append(err_msg)\n    \n    return err_msgs",
          "children": [
            {
              "value": "err_msgs = []",
              "children": [
                {
                  "value": "err_msgs = []",
                  "children": [
                    {
                      "value": "err_msgs",
                      "children": []
                    },
                    {
                      "value": "[]",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "categories, category_line_num = get_categories_content(contents=lines)",
              "children": [
                {
                  "value": "categories, category_line_num = get_categories_content(contents=lines)",
                  "children": [
                    {
                      "value": "categories, category_line_num",
                      "children": [
                        {
                          "value": "categories",
                          "children": []
                        },
                        {
                          "value": "category_line_num",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "get_categories_content(contents=lines)",
                      "children": [
                        {
                          "value": "get_categories_content",
                          "children": []
                        },
                        {
                          "value": "(contents=lines)",
                          "children": [
                            {
                              "value": "contents=lines",
                              "children": [
                                {
                                  "value": "contents",
                                  "children": []
                                },
                                {
                                  "value": "lines",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "for category, api_list in categories.items():\n        if sorted(api_list) != api_list:\n            err_msg = error_message(\n                category_line_num[category], \n                f'{category} category is not alphabetical order'\n            )\n            err_msgs.append(err_msg)",
              "children": [
                {
                  "value": "category, api_list",
                  "children": [
                    {
                      "value": "category",
                      "children": []
                    },
                    {
                      "value": "api_list",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "categories.items()",
                  "children": [
                    {
                      "value": "categories.items",
                      "children": [
                        {
                          "value": "categories",
                          "children": []
                        },
                        {
                          "value": "items",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "()",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "if sorted(api_list) != api_list:\n            err_msg = error_message(\n                category_line_num[category], \n                f'{category} category is not alphabetical order'\n            )\n            err_msgs.append(err_msg)",
                  "children": [
                    {
                      "value": "if sorted(api_list) != api_list:\n            err_msg = error_message(\n                category_line_num[category], \n                f'{category} category is not alphabetical order'\n            )\n            err_msgs.append(err_msg)",
                      "children": [
                        {
                          "value": "sorted(api_list) != api_list",
                          "children": [
                            {
                              "value": "sorted(api_list)",
                              "children": [
                                {
                                  "value": "sorted",
                                  "children": []
                                },
                                {
                                  "value": "(api_list)",
                                  "children": [
                                    {
                                      "value": "api_list",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "api_list",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "err_msg = error_message(\n                category_line_num[category], \n                f'{category} category is not alphabetical order'\n            )\n            err_msgs.append(err_msg)",
                          "children": [
                            {
                              "value": "err_msg = error_message(\n                category_line_num[category], \n                f'{category} category is not alphabetical order'\n            )",
                              "children": [
                                {
                                  "value": "err_msg = error_message(\n                category_line_num[category], \n                f'{category} category is not alphabetical order'\n            )",
                                  "children": [
                                    {
                                      "value": "err_msg",
                                      "children": []
                                    },
                                    {
                                      "value": "error_message(\n                category_line_num[category], \n                f'{category} category is not alphabetical order'\n            )",
                                      "children": [
                                        {
                                          "value": "error_message",
                                          "children": []
                                        },
                                        {
                                          "value": "(\n                category_line_num[category], \n                f'{category} category is not alphabetical order'\n            )",
                                          "children": [
                                            {
                                              "value": "category_line_num[category]",
                                              "children": [
                                                {
                                                  "value": "category_line_num",
                                                  "children": []
                                                },
                                                {
                                                  "value": "category",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "f'{category} category is not alphabetical order'",
                                              "children": [
                                                {
                                                  "value": "f'",
                                                  "children": []
                                                },
                                                {
                                                  "value": "{category}",
                                                  "children": [
                                                    {
                                                      "value": "category",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "category is not alphabetical order",
                                                  "children": []
                                                },
                                                {
                                                  "value": "'",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "err_msgs.append(err_msg)",
                              "children": [
                                {
                                  "value": "err_msgs.append(err_msg)",
                                  "children": [
                                    {
                                      "value": "err_msgs.append",
                                      "children": [
                                        {
                                          "value": "err_msgs",
                                          "children": []
                                        },
                                        {
                                          "value": "append",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(err_msg)",
                                      "children": [
                                        {
                                          "value": "err_msg",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "return err_msgs",
              "children": [
                {
                  "value": "err_msgs",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "def check_title(line_num: int, raw_title: str) -> List[str]:\n\n    err_msgs = []\n\n    title_match = link_re.match(raw_title)\n\n    # url should be wrapped in \"[TITLE](LINK)\" Markdown syntax\n    if not title_match:\n        err_msg = error_message(line_num, 'Title syntax should be \"[TITLE](LINK)\"')\n        err_msgs.append(err_msg)\n    else:\n        # do not allow \"... API\" in the entry title\n        title = title_match.group(1)\n        if title.upper().endswith(' API'):\n            err_msg = error_message(line_num, 'Title should not end with \"... API\". Every entry is an API here!')\n            err_msgs.append(err_msg)\n\n    return err_msgs",
      "children": [
        {
          "value": "check_title",
          "children": []
        },
        {
          "value": "(line_num: int, raw_title: str)",
          "children": [
            {
              "value": "line_num: int",
              "children": [
                {
                  "value": "line_num",
                  "children": []
                },
                {
                  "value": "int",
                  "children": [
                    {
                      "value": "int",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "raw_title: str",
              "children": [
                {
                  "value": "raw_title",
                  "children": []
                },
                {
                  "value": "str",
                  "children": [
                    {
                      "value": "str",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "List[str]",
          "children": [
            {
              "value": "List[str]",
              "children": [
                {
                  "value": "List",
                  "children": []
                },
                {
                  "value": "[str]",
                  "children": [
                    {
                      "value": "str",
                      "children": [
                        {
                          "value": "str",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "err_msgs = []\n\n    title_match = link_re.match(raw_title)\n\n    # url should be wrapped in \"[TITLE](LINK)\" Markdown syntax\n    if not title_match:\n        err_msg = error_message(line_num, 'Title syntax should be \"[TITLE](LINK)\"')\n        err_msgs.append(err_msg)\n    else:\n        # do not allow \"... API\" in the entry title\n        title = title_match.group(1)\n        if title.upper().endswith(' API'):\n            err_msg = error_message(line_num, 'Title should not end with \"... API\". Every entry is an API here!')\n            err_msgs.append(err_msg)\n\n    return err_msgs",
          "children": [
            {
              "value": "err_msgs = []",
              "children": [
                {
                  "value": "err_msgs = []",
                  "children": [
                    {
                      "value": "err_msgs",
                      "children": []
                    },
                    {
                      "value": "[]",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "title_match = link_re.match(raw_title)",
              "children": [
                {
                  "value": "title_match = link_re.match(raw_title)",
                  "children": [
                    {
                      "value": "title_match",
                      "children": []
                    },
                    {
                      "value": "link_re.match(raw_title)",
                      "children": [
                        {
                          "value": "link_re.match",
                          "children": [
                            {
                              "value": "link_re",
                              "children": []
                            },
                            {
                              "value": "match",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(raw_title)",
                          "children": [
                            {
                              "value": "raw_title",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# url should be wrapped in \"[TITLE](LINK)\" Markdown syntax",
              "children": []
            },
            {
              "value": "if not title_match:\n        err_msg = error_message(line_num, 'Title syntax should be \"[TITLE](LINK)\"')\n        err_msgs.append(err_msg)\n    else:\n        # do not allow \"... API\" in the entry title\n        title = title_match.group(1)\n        if title.upper().endswith(' API'):\n            err_msg = error_message(line_num, 'Title should not end with \"... API\". Every entry is an API here!')\n            err_msgs.append(err_msg)",
              "children": [
                {
                  "value": "not title_match",
                  "children": [
                    {
                      "value": "title_match",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "err_msg = error_message(line_num, 'Title syntax should be \"[TITLE](LINK)\"')\n        err_msgs.append(err_msg)",
                  "children": [
                    {
                      "value": "err_msg = error_message(line_num, 'Title syntax should be \"[TITLE](LINK)\"')",
                      "children": [
                        {
                          "value": "err_msg = error_message(line_num, 'Title syntax should be \"[TITLE](LINK)\"')",
                          "children": [
                            {
                              "value": "err_msg",
                              "children": []
                            },
                            {
                              "value": "error_message(line_num, 'Title syntax should be \"[TITLE](LINK)\"')",
                              "children": [
                                {
                                  "value": "error_message",
                                  "children": []
                                },
                                {
                                  "value": "(line_num, 'Title syntax should be \"[TITLE](LINK)\"')",
                                  "children": [
                                    {
                                      "value": "line_num",
                                      "children": []
                                    },
                                    {
                                      "value": "'Title syntax should be \"[TITLE](LINK)\"'",
                                      "children": [
                                        {
                                          "value": "'",
                                          "children": []
                                        },
                                        {
                                          "value": "Title syntax should be \"[TITLE](LINK)\"",
                                          "children": []
                                        },
                                        {
                                          "value": "'",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "err_msgs.append(err_msg)",
                      "children": [
                        {
                          "value": "err_msgs.append(err_msg)",
                          "children": [
                            {
                              "value": "err_msgs.append",
                              "children": [
                                {
                                  "value": "err_msgs",
                                  "children": []
                                },
                                {
                                  "value": "append",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(err_msg)",
                              "children": [
                                {
                                  "value": "err_msg",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "else:\n        # do not allow \"... API\" in the entry title\n        title = title_match.group(1)\n        if title.upper().endswith(' API'):\n            err_msg = error_message(line_num, 'Title should not end with \"... API\". Every entry is an API here!')\n            err_msgs.append(err_msg)",
                  "children": [
                    {
                      "value": "# do not allow \"... API\" in the entry title",
                      "children": []
                    },
                    {
                      "value": "title = title_match.group(1)\n        if title.upper().endswith(' API'):\n            err_msg = error_message(line_num, 'Title should not end with \"... API\". Every entry is an API here!')\n            err_msgs.append(err_msg)",
                      "children": [
                        {
                          "value": "title = title_match.group(1)",
                          "children": [
                            {
                              "value": "title = title_match.group(1)",
                              "children": [
                                {
                                  "value": "title",
                                  "children": []
                                },
                                {
                                  "value": "title_match.group(1)",
                                  "children": [
                                    {
                                      "value": "title_match.group",
                                      "children": [
                                        {
                                          "value": "title_match",
                                          "children": []
                                        },
                                        {
                                          "value": "group",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(1)",
                                      "children": [
                                        {
                                          "value": "1",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "if title.upper().endswith(' API'):\n            err_msg = error_message(line_num, 'Title should not end with \"... API\". Every entry is an API here!')\n            err_msgs.append(err_msg)",
                          "children": [
                            {
                              "value": "title.upper().endswith(' API')",
                              "children": [
                                {
                                  "value": "title.upper().endswith",
                                  "children": [
                                    {
                                      "value": "title.upper()",
                                      "children": [
                                        {
                                          "value": "title.upper",
                                          "children": [
                                            {
                                              "value": "title",
                                              "children": []
                                            },
                                            {
                                              "value": "upper",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "()",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "endswith",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(' API')",
                                  "children": [
                                    {
                                      "value": "' API'",
                                      "children": [
                                        {
                                          "value": "'",
                                          "children": []
                                        },
                                        {
                                          "value": "API",
                                          "children": []
                                        },
                                        {
                                          "value": "'",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "err_msg = error_message(line_num, 'Title should not end with \"... API\". Every entry is an API here!')\n            err_msgs.append(err_msg)",
                              "children": [
                                {
                                  "value": "err_msg = error_message(line_num, 'Title should not end with \"... API\". Every entry is an API here!')",
                                  "children": [
                                    {
                                      "value": "err_msg = error_message(line_num, 'Title should not end with \"... API\". Every entry is an API here!')",
                                      "children": [
                                        {
                                          "value": "err_msg",
                                          "children": []
                                        },
                                        {
                                          "value": "error_message(line_num, 'Title should not end with \"... API\". Every entry is an API here!')",
                                          "children": [
                                            {
                                              "value": "error_message",
                                              "children": []
                                            },
                                            {
                                              "value": "(line_num, 'Title should not end with \"... API\". Every entry is an API here!')",
                                              "children": [
                                                {
                                                  "value": "line_num",
                                                  "children": []
                                                },
                                                {
                                                  "value": "'Title should not end with \"... API\". Every entry is an API here!'",
                                                  "children": [
                                                    {
                                                      "value": "'",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "Title should not end with \"... API\". Every entry is an API here!",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "'",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "err_msgs.append(err_msg)",
                                  "children": [
                                    {
                                      "value": "err_msgs.append(err_msg)",
                                      "children": [
                                        {
                                          "value": "err_msgs.append",
                                          "children": [
                                            {
                                              "value": "err_msgs",
                                              "children": []
                                            },
                                            {
                                              "value": "append",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(err_msg)",
                                          "children": [
                                            {
                                              "value": "err_msg",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "return err_msgs",
              "children": [
                {
                  "value": "err_msgs",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "def check_description(line_num: int, description: str) -> List[str]:\n\n    err_msgs = []\n\n    first_char = description[0]\n    if first_char.upper() != first_char:\n        err_msg = error_message(line_num, 'first character of description is not capitalized')\n        err_msgs.append(err_msg)\n\n    last_char = description[-1]\n    if last_char in punctuation:\n        err_msg = error_message(line_num, f'description should not end with {last_char}')\n        err_msgs.append(err_msg)\n\n    desc_length = len(description)\n    if desc_length > max_description_length:\n        err_msg = error_message(line_num, f'description should not exceed {max_description_length} characters (currently {desc_length})')\n        err_msgs.append(err_msg)\n    \n    return err_msgs",
      "children": [
        {
          "value": "check_description",
          "children": []
        },
        {
          "value": "(line_num: int, description: str)",
          "children": [
            {
              "value": "line_num: int",
              "children": [
                {
                  "value": "line_num",
                  "children": []
                },
                {
                  "value": "int",
                  "children": [
                    {
                      "value": "int",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "description: str",
              "children": [
                {
                  "value": "description",
                  "children": []
                },
                {
                  "value": "str",
                  "children": [
                    {
                      "value": "str",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "List[str]",
          "children": [
            {
              "value": "List[str]",
              "children": [
                {
                  "value": "List",
                  "children": []
                },
                {
                  "value": "[str]",
                  "children": [
                    {
                      "value": "str",
                      "children": [
                        {
                          "value": "str",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "err_msgs = []\n\n    first_char = description[0]\n    if first_char.upper() != first_char:\n        err_msg = error_message(line_num, 'first character of description is not capitalized')\n        err_msgs.append(err_msg)\n\n    last_char = description[-1]\n    if last_char in punctuation:\n        err_msg = error_message(line_num, f'description should not end with {last_char}')\n        err_msgs.append(err_msg)\n\n    desc_length = len(description)\n    if desc_length > max_description_length:\n        err_msg = error_message(line_num, f'description should not exceed {max_description_length} characters (currently {desc_length})')\n        err_msgs.append(err_msg)\n    \n    return err_msgs",
          "children": [
            {
              "value": "err_msgs = []",
              "children": [
                {
                  "value": "err_msgs = []",
                  "children": [
                    {
                      "value": "err_msgs",
                      "children": []
                    },
                    {
                      "value": "[]",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "first_char = description[0]",
              "children": [
                {
                  "value": "first_char = description[0]",
                  "children": [
                    {
                      "value": "first_char",
                      "children": []
                    },
                    {
                      "value": "description[0]",
                      "children": [
                        {
                          "value": "description",
                          "children": []
                        },
                        {
                          "value": "0",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "if first_char.upper() != first_char:\n        err_msg = error_message(line_num, 'first character of description is not capitalized')\n        err_msgs.append(err_msg)",
              "children": [
                {
                  "value": "first_char.upper() != first_char",
                  "children": [
                    {
                      "value": "first_char.upper()",
                      "children": [
                        {
                          "value": "first_char.upper",
                          "children": [
                            {
                              "value": "first_char",
                              "children": []
                            },
                            {
                              "value": "upper",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "()",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "first_char",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "err_msg = error_message(line_num, 'first character of description is not capitalized')\n        err_msgs.append(err_msg)",
                  "children": [
                    {
                      "value": "err_msg = error_message(line_num, 'first character of description is not capitalized')",
                      "children": [
                        {
                          "value": "err_msg = error_message(line_num, 'first character of description is not capitalized')",
                          "children": [
                            {
                              "value": "err_msg",
                              "children": []
                            },
                            {
                              "value": "error_message(line_num, 'first character of description is not capitalized')",
                              "children": [
                                {
                                  "value": "error_message",
                                  "children": []
                                },
                                {
                                  "value": "(line_num, 'first character of description is not capitalized')",
                                  "children": [
                                    {
                                      "value": "line_num",
                                      "children": []
                                    },
                                    {
                                      "value": "'first character of description is not capitalized'",
                                      "children": [
                                        {
                                          "value": "'",
                                          "children": []
                                        },
                                        {
                                          "value": "first character of description is not capitalized",
                                          "children": []
                                        },
                                        {
                                          "value": "'",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "err_msgs.append(err_msg)",
                      "children": [
                        {
                          "value": "err_msgs.append(err_msg)",
                          "children": [
                            {
                              "value": "err_msgs.append",
                              "children": [
                                {
                                  "value": "err_msgs",
                                  "children": []
                                },
                                {
                                  "value": "append",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(err_msg)",
                              "children": [
                                {
                                  "value": "err_msg",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "last_char = description[-1]",
              "children": [
                {
                  "value": "last_char = description[-1]",
                  "children": [
                    {
                      "value": "last_char",
                      "children": []
                    },
                    {
                      "value": "description[-1]",
                      "children": [
                        {
                          "value": "description",
                          "children": []
                        },
                        {
                          "value": "-1",
                          "children": [
                            {
                              "value": "1",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "if last_char in punctuation:\n        err_msg = error_message(line_num, f'description should not end with {last_char}')\n        err_msgs.append(err_msg)",
              "children": [
                {
                  "value": "last_char in punctuation",
                  "children": [
                    {
                      "value": "last_char",
                      "children": []
                    },
                    {
                      "value": "punctuation",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "err_msg = error_message(line_num, f'description should not end with {last_char}')\n        err_msgs.append(err_msg)",
                  "children": [
                    {
                      "value": "err_msg = error_message(line_num, f'description should not end with {last_char}')",
                      "children": [
                        {
                          "value": "err_msg = error_message(line_num, f'description should not end with {last_char}')",
                          "children": [
                            {
                              "value": "err_msg",
                              "children": []
                            },
                            {
                              "value": "error_message(line_num, f'description should not end with {last_char}')",
                              "children": [
                                {
                                  "value": "error_message",
                                  "children": []
                                },
                                {
                                  "value": "(line_num, f'description should not end with {last_char}')",
                                  "children": [
                                    {
                                      "value": "line_num",
                                      "children": []
                                    },
                                    {
                                      "value": "f'description should not end with {last_char}'",
                                      "children": [
                                        {
                                          "value": "f'",
                                          "children": []
                                        },
                                        {
                                          "value": "description should not end with",
                                          "children": []
                                        },
                                        {
                                          "value": "{last_char}",
                                          "children": [
                                            {
                                              "value": "last_char",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "'",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "err_msgs.append(err_msg)",
                      "children": [
                        {
                          "value": "err_msgs.append(err_msg)",
                          "children": [
                            {
                              "value": "err_msgs.append",
                              "children": [
                                {
                                  "value": "err_msgs",
                                  "children": []
                                },
                                {
                                  "value": "append",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(err_msg)",
                              "children": [
                                {
                                  "value": "err_msg",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "desc_length = len(description)",
              "children": [
                {
                  "value": "desc_length = len(description)",
                  "children": [
                    {
                      "value": "desc_length",
                      "children": []
                    },
                    {
                      "value": "len(description)",
                      "children": [
                        {
                          "value": "len",
                          "children": []
                        },
                        {
                          "value": "(description)",
                          "children": [
                            {
                              "value": "description",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "if desc_length > max_description_length:\n        err_msg = error_message(line_num, f'description should not exceed {max_description_length} characters (currently {desc_length})')\n        err_msgs.append(err_msg)",
              "children": [
                {
                  "value": "desc_length > max_description_length",
                  "children": [
                    {
                      "value": "desc_length",
                      "children": []
                    },
                    {
                      "value": "max_description_length",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "err_msg = error_message(line_num, f'description should not exceed {max_description_length} characters (currently {desc_length})')\n        err_msgs.append(err_msg)",
                  "children": [
                    {
                      "value": "err_msg = error_message(line_num, f'description should not exceed {max_description_length} characters (currently {desc_length})')",
                      "children": [
                        {
                          "value": "err_msg = error_message(line_num, f'description should not exceed {max_description_length} characters (currently {desc_length})')",
                          "children": [
                            {
                              "value": "err_msg",
                              "children": []
                            },
                            {
                              "value": "error_message(line_num, f'description should not exceed {max_description_length} characters (currently {desc_length})')",
                              "children": [
                                {
                                  "value": "error_message",
                                  "children": []
                                },
                                {
                                  "value": "(line_num, f'description should not exceed {max_description_length} characters (currently {desc_length})')",
                                  "children": [
                                    {
                                      "value": "line_num",
                                      "children": []
                                    },
                                    {
                                      "value": "f'description should not exceed {max_description_length} characters (currently {desc_length})'",
                                      "children": [
                                        {
                                          "value": "f'",
                                          "children": []
                                        },
                                        {
                                          "value": "description should not exceed",
                                          "children": []
                                        },
                                        {
                                          "value": "{max_description_length}",
                                          "children": [
                                            {
                                              "value": "max_description_length",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "characters (currently",
                                          "children": []
                                        },
                                        {
                                          "value": "{desc_length}",
                                          "children": [
                                            {
                                              "value": "desc_length",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": ")",
                                          "children": []
                                        },
                                        {
                                          "value": "'",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "err_msgs.append(err_msg)",
                      "children": [
                        {
                          "value": "err_msgs.append(err_msg)",
                          "children": [
                            {
                              "value": "err_msgs.append",
                              "children": [
                                {
                                  "value": "err_msgs",
                                  "children": []
                                },
                                {
                                  "value": "append",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(err_msg)",
                              "children": [
                                {
                                  "value": "err_msg",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "return err_msgs",
              "children": [
                {
                  "value": "err_msgs",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "def check_auth(line_num: int, auth: str) -> List[str]:\n\n    err_msgs = []\n\n    backtick = '`'\n    if auth != 'No' and (not auth.startswith(backtick) or not auth.endswith(backtick)):\n        err_msg = error_message(line_num, 'auth value is not enclosed with `backticks`')\n        err_msgs.append(err_msg)\n\n    if auth.replace(backtick, '') not in auth_keys:\n        err_msg = error_message(line_num, f'{auth} is not a valid Auth option')\n        err_msgs.append(err_msg)\n    \n    return err_msgs",
      "children": [
        {
          "value": "check_auth",
          "children": []
        },
        {
          "value": "(line_num: int, auth: str)",
          "children": [
            {
              "value": "line_num: int",
              "children": [
                {
                  "value": "line_num",
                  "children": []
                },
                {
                  "value": "int",
                  "children": [
                    {
                      "value": "int",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "auth: str",
              "children": [
                {
                  "value": "auth",
                  "children": []
                },
                {
                  "value": "str",
                  "children": [
                    {
                      "value": "str",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "List[str]",
          "children": [
            {
              "value": "List[str]",
              "children": [
                {
                  "value": "List",
                  "children": []
                },
                {
                  "value": "[str]",
                  "children": [
                    {
                      "value": "str",
                      "children": [
                        {
                          "value": "str",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "err_msgs = []\n\n    backtick = '`'\n    if auth != 'No' and (not auth.startswith(backtick) or not auth.endswith(backtick)):\n        err_msg = error_message(line_num, 'auth value is not enclosed with `backticks`')\n        err_msgs.append(err_msg)\n\n    if auth.replace(backtick, '') not in auth_keys:\n        err_msg = error_message(line_num, f'{auth} is not a valid Auth option')\n        err_msgs.append(err_msg)\n    \n    return err_msgs",
          "children": [
            {
              "value": "err_msgs = []",
              "children": [
                {
                  "value": "err_msgs = []",
                  "children": [
                    {
                      "value": "err_msgs",
                      "children": []
                    },
                    {
                      "value": "[]",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "backtick = '`'",
              "children": [
                {
                  "value": "backtick = '`'",
                  "children": [
                    {
                      "value": "backtick",
                      "children": []
                    },
                    {
                      "value": "'`'",
                      "children": [
                        {
                          "value": "'",
                          "children": []
                        },
                        {
                          "value": "`",
                          "children": []
                        },
                        {
                          "value": "'",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "if auth != 'No' and (not auth.startswith(backtick) or not auth.endswith(backtick)):\n        err_msg = error_message(line_num, 'auth value is not enclosed with `backticks`')\n        err_msgs.append(err_msg)",
              "children": [
                {
                  "value": "auth != 'No' and (not auth.startswith(backtick) or not auth.endswith(backtick))",
                  "children": [
                    {
                      "value": "auth != 'No'",
                      "children": [
                        {
                          "value": "auth",
                          "children": []
                        },
                        {
                          "value": "'No'",
                          "children": [
                            {
                              "value": "'",
                              "children": []
                            },
                            {
                              "value": "No",
                              "children": []
                            },
                            {
                              "value": "'",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "(not auth.startswith(backtick) or not auth.endswith(backtick))",
                      "children": [
                        {
                          "value": "not auth.startswith(backtick) or not auth.endswith(backtick)",
                          "children": [
                            {
                              "value": "not auth.startswith(backtick)",
                              "children": [
                                {
                                  "value": "auth.startswith(backtick)",
                                  "children": [
                                    {
                                      "value": "auth.startswith",
                                      "children": [
                                        {
                                          "value": "auth",
                                          "children": []
                                        },
                                        {
                                          "value": "startswith",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(backtick)",
                                      "children": [
                                        {
                                          "value": "backtick",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "not auth.endswith(backtick)",
                              "children": [
                                {
                                  "value": "auth.endswith(backtick)",
                                  "children": [
                                    {
                                      "value": "auth.endswith",
                                      "children": [
                                        {
                                          "value": "auth",
                                          "children": []
                                        },
                                        {
                                          "value": "endswith",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(backtick)",
                                      "children": [
                                        {
                                          "value": "backtick",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "err_msg = error_message(line_num, 'auth value is not enclosed with `backticks`')\n        err_msgs.append(err_msg)",
                  "children": [
                    {
                      "value": "err_msg = error_message(line_num, 'auth value is not enclosed with `backticks`')",
                      "children": [
                        {
                          "value": "err_msg = error_message(line_num, 'auth value is not enclosed with `backticks`')",
                          "children": [
                            {
                              "value": "err_msg",
                              "children": []
                            },
                            {
                              "value": "error_message(line_num, 'auth value is not enclosed with `backticks`')",
                              "children": [
                                {
                                  "value": "error_message",
                                  "children": []
                                },
                                {
                                  "value": "(line_num, 'auth value is not enclosed with `backticks`')",
                                  "children": [
                                    {
                                      "value": "line_num",
                                      "children": []
                                    },
                                    {
                                      "value": "'auth value is not enclosed with `backticks`'",
                                      "children": [
                                        {
                                          "value": "'",
                                          "children": []
                                        },
                                        {
                                          "value": "auth value is not enclosed with `backticks`",
                                          "children": []
                                        },
                                        {
                                          "value": "'",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "err_msgs.append(err_msg)",
                      "children": [
                        {
                          "value": "err_msgs.append(err_msg)",
                          "children": [
                            {
                              "value": "err_msgs.append",
                              "children": [
                                {
                                  "value": "err_msgs",
                                  "children": []
                                },
                                {
                                  "value": "append",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(err_msg)",
                              "children": [
                                {
                                  "value": "err_msg",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "if auth.replace(backtick, '') not in auth_keys:\n        err_msg = error_message(line_num, f'{auth} is not a valid Auth option')\n        err_msgs.append(err_msg)",
              "children": [
                {
                  "value": "auth.replace(backtick, '') not in auth_keys",
                  "children": [
                    {
                      "value": "auth.replace(backtick, '')",
                      "children": [
                        {
                          "value": "auth.replace",
                          "children": [
                            {
                              "value": "auth",
                              "children": []
                            },
                            {
                              "value": "replace",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(backtick, '')",
                          "children": [
                            {
                              "value": "backtick",
                              "children": []
                            },
                            {
                              "value": "''",
                              "children": [
                                {
                                  "value": "'",
                                  "children": []
                                },
                                {
                                  "value": "'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "auth_keys",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "err_msg = error_message(line_num, f'{auth} is not a valid Auth option')\n        err_msgs.append(err_msg)",
                  "children": [
                    {
                      "value": "err_msg = error_message(line_num, f'{auth} is not a valid Auth option')",
                      "children": [
                        {
                          "value": "err_msg = error_message(line_num, f'{auth} is not a valid Auth option')",
                          "children": [
                            {
                              "value": "err_msg",
                              "children": []
                            },
                            {
                              "value": "error_message(line_num, f'{auth} is not a valid Auth option')",
                              "children": [
                                {
                                  "value": "error_message",
                                  "children": []
                                },
                                {
                                  "value": "(line_num, f'{auth} is not a valid Auth option')",
                                  "children": [
                                    {
                                      "value": "line_num",
                                      "children": []
                                    },
                                    {
                                      "value": "f'{auth} is not a valid Auth option'",
                                      "children": [
                                        {
                                          "value": "f'",
                                          "children": []
                                        },
                                        {
                                          "value": "{auth}",
                                          "children": [
                                            {
                                              "value": "auth",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "is not a valid Auth option",
                                          "children": []
                                        },
                                        {
                                          "value": "'",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "err_msgs.append(err_msg)",
                      "children": [
                        {
                          "value": "err_msgs.append(err_msg)",
                          "children": [
                            {
                              "value": "err_msgs.append",
                              "children": [
                                {
                                  "value": "err_msgs",
                                  "children": []
                                },
                                {
                                  "value": "append",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(err_msg)",
                              "children": [
                                {
                                  "value": "err_msg",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "return err_msgs",
              "children": [
                {
                  "value": "err_msgs",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "def check_https(line_num: int, https: str) -> List[str]:\n\n    err_msgs = []\n\n    if https not in https_keys:\n        err_msg = error_message(line_num, f'{https} is not a valid HTTPS option')\n        err_msgs.append(err_msg)\n\n    return err_msgs",
      "children": [
        {
          "value": "check_https",
          "children": []
        },
        {
          "value": "(line_num: int, https: str)",
          "children": [
            {
              "value": "line_num: int",
              "children": [
                {
                  "value": "line_num",
                  "children": []
                },
                {
                  "value": "int",
                  "children": [
                    {
                      "value": "int",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "https: str",
              "children": [
                {
                  "value": "https",
                  "children": []
                },
                {
                  "value": "str",
                  "children": [
                    {
                      "value": "str",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "List[str]",
          "children": [
            {
              "value": "List[str]",
              "children": [
                {
                  "value": "List",
                  "children": []
                },
                {
                  "value": "[str]",
                  "children": [
                    {
                      "value": "str",
                      "children": [
                        {
                          "value": "str",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "err_msgs = []\n\n    if https not in https_keys:\n        err_msg = error_message(line_num, f'{https} is not a valid HTTPS option')\n        err_msgs.append(err_msg)\n\n    return err_msgs",
          "children": [
            {
              "value": "err_msgs = []",
              "children": [
                {
                  "value": "err_msgs = []",
                  "children": [
                    {
                      "value": "err_msgs",
                      "children": []
                    },
                    {
                      "value": "[]",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "if https not in https_keys:\n        err_msg = error_message(line_num, f'{https} is not a valid HTTPS option')\n        err_msgs.append(err_msg)",
              "children": [
                {
                  "value": "https not in https_keys",
                  "children": [
                    {
                      "value": "https",
                      "children": []
                    },
                    {
                      "value": "https_keys",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "err_msg = error_message(line_num, f'{https} is not a valid HTTPS option')\n        err_msgs.append(err_msg)",
                  "children": [
                    {
                      "value": "err_msg = error_message(line_num, f'{https} is not a valid HTTPS option')",
                      "children": [
                        {
                          "value": "err_msg = error_message(line_num, f'{https} is not a valid HTTPS option')",
                          "children": [
                            {
                              "value": "err_msg",
                              "children": []
                            },
                            {
                              "value": "error_message(line_num, f'{https} is not a valid HTTPS option')",
                              "children": [
                                {
                                  "value": "error_message",
                                  "children": []
                                },
                                {
                                  "value": "(line_num, f'{https} is not a valid HTTPS option')",
                                  "children": [
                                    {
                                      "value": "line_num",
                                      "children": []
                                    },
                                    {
                                      "value": "f'{https} is not a valid HTTPS option'",
                                      "children": [
                                        {
                                          "value": "f'",
                                          "children": []
                                        },
                                        {
                                          "value": "{https}",
                                          "children": [
                                            {
                                              "value": "https",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "is not a valid HTTPS option",
                                          "children": []
                                        },
                                        {
                                          "value": "'",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "err_msgs.append(err_msg)",
                      "children": [
                        {
                          "value": "err_msgs.append(err_msg)",
                          "children": [
                            {
                              "value": "err_msgs.append",
                              "children": [
                                {
                                  "value": "err_msgs",
                                  "children": []
                                },
                                {
                                  "value": "append",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(err_msg)",
                              "children": [
                                {
                                  "value": "err_msg",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "return err_msgs",
              "children": [
                {
                  "value": "err_msgs",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "def check_cors(line_num: int, cors: str) -> List[str]:\n\n    err_msgs = []\n\n    if cors not in cors_keys:\n        err_msg = error_message(line_num, f'{cors} is not a valid CORS option')\n        err_msgs.append(err_msg)\n    \n    return err_msgs",
      "children": [
        {
          "value": "check_cors",
          "children": []
        },
        {
          "value": "(line_num: int, cors: str)",
          "children": [
            {
              "value": "line_num: int",
              "children": [
                {
                  "value": "line_num",
                  "children": []
                },
                {
                  "value": "int",
                  "children": [
                    {
                      "value": "int",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "cors: str",
              "children": [
                {
                  "value": "cors",
                  "children": []
                },
                {
                  "value": "str",
                  "children": [
                    {
                      "value": "str",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "List[str]",
          "children": [
            {
              "value": "List[str]",
              "children": [
                {
                  "value": "List",
                  "children": []
                },
                {
                  "value": "[str]",
                  "children": [
                    {
                      "value": "str",
                      "children": [
                        {
                          "value": "str",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "err_msgs = []\n\n    if cors not in cors_keys:\n        err_msg = error_message(line_num, f'{cors} is not a valid CORS option')\n        err_msgs.append(err_msg)\n    \n    return err_msgs",
          "children": [
            {
              "value": "err_msgs = []",
              "children": [
                {
                  "value": "err_msgs = []",
                  "children": [
                    {
                      "value": "err_msgs",
                      "children": []
                    },
                    {
                      "value": "[]",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "if cors not in cors_keys:\n        err_msg = error_message(line_num, f'{cors} is not a valid CORS option')\n        err_msgs.append(err_msg)",
              "children": [
                {
                  "value": "cors not in cors_keys",
                  "children": [
                    {
                      "value": "cors",
                      "children": []
                    },
                    {
                      "value": "cors_keys",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "err_msg = error_message(line_num, f'{cors} is not a valid CORS option')\n        err_msgs.append(err_msg)",
                  "children": [
                    {
                      "value": "err_msg = error_message(line_num, f'{cors} is not a valid CORS option')",
                      "children": [
                        {
                          "value": "err_msg = error_message(line_num, f'{cors} is not a valid CORS option')",
                          "children": [
                            {
                              "value": "err_msg",
                              "children": []
                            },
                            {
                              "value": "error_message(line_num, f'{cors} is not a valid CORS option')",
                              "children": [
                                {
                                  "value": "error_message",
                                  "children": []
                                },
                                {
                                  "value": "(line_num, f'{cors} is not a valid CORS option')",
                                  "children": [
                                    {
                                      "value": "line_num",
                                      "children": []
                                    },
                                    {
                                      "value": "f'{cors} is not a valid CORS option'",
                                      "children": [
                                        {
                                          "value": "f'",
                                          "children": []
                                        },
                                        {
                                          "value": "{cors}",
                                          "children": [
                                            {
                                              "value": "cors",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "is not a valid CORS option",
                                          "children": []
                                        },
                                        {
                                          "value": "'",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "err_msgs.append(err_msg)",
                      "children": [
                        {
                          "value": "err_msgs.append(err_msg)",
                          "children": [
                            {
                              "value": "err_msgs.append",
                              "children": [
                                {
                                  "value": "err_msgs",
                                  "children": []
                                },
                                {
                                  "value": "append",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(err_msg)",
                              "children": [
                                {
                                  "value": "err_msg",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "return err_msgs",
              "children": [
                {
                  "value": "err_msgs",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "def check_entry(line_num: int, segments: List[str]) -> List[str]:\n\n    raw_title = segments[index_title]\n    description = segments[index_desc]\n    auth = segments[index_auth]\n    https = segments[index_https]\n    cors = segments[index_cors]\n\n    title_err_msgs = check_title(line_num, raw_title)\n    desc_err_msgs = check_description(line_num, description)\n    auth_err_msgs = check_auth(line_num, auth)\n    https_err_msgs = check_https(line_num, https)\n    cors_err_msgs = check_cors(line_num, cors)\n\n    err_msgs = [\n        *title_err_msgs,\n        *desc_err_msgs,\n        *auth_err_msgs,\n        *https_err_msgs,\n        *cors_err_msgs\n    ]\n\n    return err_msgs",
      "children": [
        {
          "value": "check_entry",
          "children": []
        },
        {
          "value": "(line_num: int, segments: List[str])",
          "children": [
            {
              "value": "line_num: int",
              "children": [
                {
                  "value": "line_num",
                  "children": []
                },
                {
                  "value": "int",
                  "children": [
                    {
                      "value": "int",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "segments: List[str]",
              "children": [
                {
                  "value": "segments",
                  "children": []
                },
                {
                  "value": "List[str]",
                  "children": [
                    {
                      "value": "List[str]",
                      "children": [
                        {
                          "value": "List",
                          "children": []
                        },
                        {
                          "value": "[str]",
                          "children": [
                            {
                              "value": "str",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "List[str]",
          "children": [
            {
              "value": "List[str]",
              "children": [
                {
                  "value": "List",
                  "children": []
                },
                {
                  "value": "[str]",
                  "children": [
                    {
                      "value": "str",
                      "children": [
                        {
                          "value": "str",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "raw_title = segments[index_title]\n    description = segments[index_desc]\n    auth = segments[index_auth]\n    https = segments[index_https]\n    cors = segments[index_cors]\n\n    title_err_msgs = check_title(line_num, raw_title)\n    desc_err_msgs = check_description(line_num, description)\n    auth_err_msgs = check_auth(line_num, auth)\n    https_err_msgs = check_https(line_num, https)\n    cors_err_msgs = check_cors(line_num, cors)\n\n    err_msgs = [\n        *title_err_msgs,\n        *desc_err_msgs,\n        *auth_err_msgs,\n        *https_err_msgs,\n        *cors_err_msgs\n    ]\n\n    return err_msgs",
          "children": [
            {
              "value": "raw_title = segments[index_title]",
              "children": [
                {
                  "value": "raw_title = segments[index_title]",
                  "children": [
                    {
                      "value": "raw_title",
                      "children": []
                    },
                    {
                      "value": "segments[index_title]",
                      "children": [
                        {
                          "value": "segments",
                          "children": []
                        },
                        {
                          "value": "index_title",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "description = segments[index_desc]",
              "children": [
                {
                  "value": "description = segments[index_desc]",
                  "children": [
                    {
                      "value": "description",
                      "children": []
                    },
                    {
                      "value": "segments[index_desc]",
                      "children": [
                        {
                          "value": "segments",
                          "children": []
                        },
                        {
                          "value": "index_desc",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "auth = segments[index_auth]",
              "children": [
                {
                  "value": "auth = segments[index_auth]",
                  "children": [
                    {
                      "value": "auth",
                      "children": []
                    },
                    {
                      "value": "segments[index_auth]",
                      "children": [
                        {
                          "value": "segments",
                          "children": []
                        },
                        {
                          "value": "index_auth",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "https = segments[index_https]",
              "children": [
                {
                  "value": "https = segments[index_https]",
                  "children": [
                    {
                      "value": "https",
                      "children": []
                    },
                    {
                      "value": "segments[index_https]",
                      "children": [
                        {
                          "value": "segments",
                          "children": []
                        },
                        {
                          "value": "index_https",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "cors = segments[index_cors]",
              "children": [
                {
                  "value": "cors = segments[index_cors]",
                  "children": [
                    {
                      "value": "cors",
                      "children": []
                    },
                    {
                      "value": "segments[index_cors]",
                      "children": [
                        {
                          "value": "segments",
                          "children": []
                        },
                        {
                          "value": "index_cors",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "title_err_msgs = check_title(line_num, raw_title)",
              "children": [
                {
                  "value": "title_err_msgs = check_title(line_num, raw_title)",
                  "children": [
                    {
                      "value": "title_err_msgs",
                      "children": []
                    },
                    {
                      "value": "check_title(line_num, raw_title)",
                      "children": [
                        {
                          "value": "check_title",
                          "children": []
                        },
                        {
                          "value": "(line_num, raw_title)",
                          "children": [
                            {
                              "value": "line_num",
                              "children": []
                            },
                            {
                              "value": "raw_title",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "desc_err_msgs = check_description(line_num, description)",
              "children": [
                {
                  "value": "desc_err_msgs = check_description(line_num, description)",
                  "children": [
                    {
                      "value": "desc_err_msgs",
                      "children": []
                    },
                    {
                      "value": "check_description(line_num, description)",
                      "children": [
                        {
                          "value": "check_description",
                          "children": []
                        },
                        {
                          "value": "(line_num, description)",
                          "children": [
                            {
                              "value": "line_num",
                              "children": []
                            },
                            {
                              "value": "description",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "auth_err_msgs = check_auth(line_num, auth)",
              "children": [
                {
                  "value": "auth_err_msgs = check_auth(line_num, auth)",
                  "children": [
                    {
                      "value": "auth_err_msgs",
                      "children": []
                    },
                    {
                      "value": "check_auth(line_num, auth)",
                      "children": [
                        {
                          "value": "check_auth",
                          "children": []
                        },
                        {
                          "value": "(line_num, auth)",
                          "children": [
                            {
                              "value": "line_num",
                              "children": []
                            },
                            {
                              "value": "auth",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "https_err_msgs = check_https(line_num, https)",
              "children": [
                {
                  "value": "https_err_msgs = check_https(line_num, https)",
                  "children": [
                    {
                      "value": "https_err_msgs",
                      "children": []
                    },
                    {
                      "value": "check_https(line_num, https)",
                      "children": [
                        {
                          "value": "check_https",
                          "children": []
                        },
                        {
                          "value": "(line_num, https)",
                          "children": [
                            {
                              "value": "line_num",
                              "children": []
                            },
                            {
                              "value": "https",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "cors_err_msgs = check_cors(line_num, cors)",
              "children": [
                {
                  "value": "cors_err_msgs = check_cors(line_num, cors)",
                  "children": [
                    {
                      "value": "cors_err_msgs",
                      "children": []
                    },
                    {
                      "value": "check_cors(line_num, cors)",
                      "children": [
                        {
                          "value": "check_cors",
                          "children": []
                        },
                        {
                          "value": "(line_num, cors)",
                          "children": [
                            {
                              "value": "line_num",
                              "children": []
                            },
                            {
                              "value": "cors",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "err_msgs = [\n        *title_err_msgs,\n        *desc_err_msgs,\n        *auth_err_msgs,\n        *https_err_msgs,\n        *cors_err_msgs\n    ]",
              "children": [
                {
                  "value": "err_msgs = [\n        *title_err_msgs,\n        *desc_err_msgs,\n        *auth_err_msgs,\n        *https_err_msgs,\n        *cors_err_msgs\n    ]",
                  "children": [
                    {
                      "value": "err_msgs",
                      "children": []
                    },
                    {
                      "value": "[\n        *title_err_msgs,\n        *desc_err_msgs,\n        *auth_err_msgs,\n        *https_err_msgs,\n        *cors_err_msgs\n    ]",
                      "children": [
                        {
                          "value": "*title_err_msgs",
                          "children": [
                            {
                              "value": "title_err_msgs",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "*desc_err_msgs",
                          "children": [
                            {
                              "value": "desc_err_msgs",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "*auth_err_msgs",
                          "children": [
                            {
                              "value": "auth_err_msgs",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "*https_err_msgs",
                          "children": [
                            {
                              "value": "https_err_msgs",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "*cors_err_msgs",
                          "children": [
                            {
                              "value": "cors_err_msgs",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "return err_msgs",
              "children": [
                {
                  "value": "err_msgs",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "def check_file_format(lines: List[str]) -> List[str]:\n\n    err_msgs = []\n    category_title_in_index = []\n\n    alphabetical_err_msgs = check_alphabetical_order(lines)\n    err_msgs.extend(alphabetical_err_msgs)\n\n    num_in_category = min_entries_per_category + 1\n    category = ''\n    category_line = 0\n\n    for line_num, line_content in enumerate(lines):\n\n        category_title_match = category_title_in_index_re.match(line_content)\n        if category_title_match:\n            category_title_in_index.append(category_title_match.group(1))\n\n        # check each category for the minimum number of entries\n        if line_content.startswith(anchor):\n            category_match = anchor_re.match(line_content)\n            if category_match:\n                if category_match.group(1) not in category_title_in_index:\n                    err_msg = error_message(line_num, f'category header ({category_match.group(1)}) not added to Index section')\n                    err_msgs.append(err_msg)\n            else:\n                err_msg = error_message(line_num, 'category header is not formatted correctly')\n                err_msgs.append(err_msg)\n\n            if num_in_category < min_entries_per_category:\n                err_msg = error_message(category_line, f'{category} category does not have the minimum {min_entries_per_category} entries (only has {num_in_category})')\n                err_msgs.append(err_msg)\n\n            category = line_content.split(' ')[1]\n            category_line = line_num\n            num_in_category = 0\n            continue\n\n        # skips lines that we do not care about\n        if not line_content.startswith('|') or line_content.startswith('|---'):\n            continue\n\n        num_in_category += 1\n        segments = line_content.split('|')[1:-1]\n        if len(segments) < num_segments:\n            err_msg = error_message(line_num, f'entry does not have all the required columns (have {len(segments)}, need {num_segments})')\n            err_msgs.append(err_msg)\n            continue\n    \n        for segment in segments:\n            # every line segment should start and end with exactly 1 space\n            if len(segment) - len(segment.lstrip()) != 1 or len(segment) - len(segment.rstrip()) != 1:\n                err_msg = error_message(line_num, 'each segment must start and end with exactly 1 space')\n                err_msgs.append(err_msg)\n        \n        segments = [segment.strip() for segment in segments]\n        entry_err_msgs = check_entry(line_num, segments)\n        err_msgs.extend(entry_err_msgs)\n    \n    return err_msgs",
      "children": [
        {
          "value": "check_file_format",
          "children": []
        },
        {
          "value": "(lines: List[str])",
          "children": [
            {
              "value": "lines: List[str]",
              "children": [
                {
                  "value": "lines",
                  "children": []
                },
                {
                  "value": "List[str]",
                  "children": [
                    {
                      "value": "List[str]",
                      "children": [
                        {
                          "value": "List",
                          "children": []
                        },
                        {
                          "value": "[str]",
                          "children": [
                            {
                              "value": "str",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "List[str]",
          "children": [
            {
              "value": "List[str]",
              "children": [
                {
                  "value": "List",
                  "children": []
                },
                {
                  "value": "[str]",
                  "children": [
                    {
                      "value": "str",
                      "children": [
                        {
                          "value": "str",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "err_msgs = []\n    category_title_in_index = []\n\n    alphabetical_err_msgs = check_alphabetical_order(lines)\n    err_msgs.extend(alphabetical_err_msgs)\n\n    num_in_category = min_entries_per_category + 1\n    category = ''\n    category_line = 0\n\n    for line_num, line_content in enumerate(lines):\n\n        category_title_match = category_title_in_index_re.match(line_content)\n        if category_title_match:\n            category_title_in_index.append(category_title_match.group(1))\n\n        # check each category for the minimum number of entries\n        if line_content.startswith(anchor):\n            category_match = anchor_re.match(line_content)\n            if category_match:\n                if category_match.group(1) not in category_title_in_index:\n                    err_msg = error_message(line_num, f'category header ({category_match.group(1)}) not added to Index section')\n                    err_msgs.append(err_msg)\n            else:\n                err_msg = error_message(line_num, 'category header is not formatted correctly')\n                err_msgs.append(err_msg)\n\n            if num_in_category < min_entries_per_category:\n                err_msg = error_message(category_line, f'{category} category does not have the minimum {min_entries_per_category} entries (only has {num_in_category})')\n                err_msgs.append(err_msg)\n\n            category = line_content.split(' ')[1]\n            category_line = line_num\n            num_in_category = 0\n            continue\n\n        # skips lines that we do not care about\n        if not line_content.startswith('|') or line_content.startswith('|---'):\n            continue\n\n        num_in_category += 1\n        segments = line_content.split('|')[1:-1]\n        if len(segments) < num_segments:\n            err_msg = error_message(line_num, f'entry does not have all the required columns (have {len(segments)}, need {num_segments})')\n            err_msgs.append(err_msg)\n            continue\n    \n        for segment in segments:\n            # every line segment should start and end with exactly 1 space\n            if len(segment) - len(segment.lstrip()) != 1 or len(segment) - len(segment.rstrip()) != 1:\n                err_msg = error_message(line_num, 'each segment must start and end with exactly 1 space')\n                err_msgs.append(err_msg)\n        \n        segments = [segment.strip() for segment in segments]\n        entry_err_msgs = check_entry(line_num, segments)\n        err_msgs.extend(entry_err_msgs)\n    \n    return err_msgs",
          "children": [
            {
              "value": "err_msgs = []",
              "children": [
                {
                  "value": "err_msgs = []",
                  "children": [
                    {
                      "value": "err_msgs",
                      "children": []
                    },
                    {
                      "value": "[]",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "category_title_in_index = []",
              "children": [
                {
                  "value": "category_title_in_index = []",
                  "children": [
                    {
                      "value": "category_title_in_index",
                      "children": []
                    },
                    {
                      "value": "[]",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "alphabetical_err_msgs = check_alphabetical_order(lines)",
              "children": [
                {
                  "value": "alphabetical_err_msgs = check_alphabetical_order(lines)",
                  "children": [
                    {
                      "value": "alphabetical_err_msgs",
                      "children": []
                    },
                    {
                      "value": "check_alphabetical_order(lines)",
                      "children": [
                        {
                          "value": "check_alphabetical_order",
                          "children": []
                        },
                        {
                          "value": "(lines)",
                          "children": [
                            {
                              "value": "lines",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "err_msgs.extend(alphabetical_err_msgs)",
              "children": [
                {
                  "value": "err_msgs.extend(alphabetical_err_msgs)",
                  "children": [
                    {
                      "value": "err_msgs.extend",
                      "children": [
                        {
                          "value": "err_msgs",
                          "children": []
                        },
                        {
                          "value": "extend",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "(alphabetical_err_msgs)",
                      "children": [
                        {
                          "value": "alphabetical_err_msgs",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "num_in_category = min_entries_per_category + 1",
              "children": [
                {
                  "value": "num_in_category = min_entries_per_category + 1",
                  "children": [
                    {
                      "value": "num_in_category",
                      "children": []
                    },
                    {
                      "value": "min_entries_per_category + 1",
                      "children": [
                        {
                          "value": "min_entries_per_category",
                          "children": []
                        },
                        {
                          "value": "1",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "category = ''",
              "children": [
                {
                  "value": "category = ''",
                  "children": [
                    {
                      "value": "category",
                      "children": []
                    },
                    {
                      "value": "''",
                      "children": [
                        {
                          "value": "'",
                          "children": []
                        },
                        {
                          "value": "'",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "category_line = 0",
              "children": [
                {
                  "value": "category_line = 0",
                  "children": [
                    {
                      "value": "category_line",
                      "children": []
                    },
                    {
                      "value": "0",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "for line_num, line_content in enumerate(lines):\n\n        category_title_match = category_title_in_index_re.match(line_content)\n        if category_title_match:\n            category_title_in_index.append(category_title_match.group(1))\n\n        # check each category for the minimum number of entries\n        if line_content.startswith(anchor):\n            category_match = anchor_re.match(line_content)\n            if category_match:\n                if category_match.group(1) not in category_title_in_index:\n                    err_msg = error_message(line_num, f'category header ({category_match.group(1)}) not added to Index section')\n                    err_msgs.append(err_msg)\n            else:\n                err_msg = error_message(line_num, 'category header is not formatted correctly')\n                err_msgs.append(err_msg)\n\n            if num_in_category < min_entries_per_category:\n                err_msg = error_message(category_line, f'{category} category does not have the minimum {min_entries_per_category} entries (only has {num_in_category})')\n                err_msgs.append(err_msg)\n\n            category = line_content.split(' ')[1]\n            category_line = line_num\n            num_in_category = 0\n            continue\n\n        # skips lines that we do not care about\n        if not line_content.startswith('|') or line_content.startswith('|---'):\n            continue\n\n        num_in_category += 1\n        segments = line_content.split('|')[1:-1]\n        if len(segments) < num_segments:\n            err_msg = error_message(line_num, f'entry does not have all the required columns (have {len(segments)}, need {num_segments})')\n            err_msgs.append(err_msg)\n            continue\n    \n        for segment in segments:\n            # every line segment should start and end with exactly 1 space\n            if len(segment) - len(segment.lstrip()) != 1 or len(segment) - len(segment.rstrip()) != 1:\n                err_msg = error_message(line_num, 'each segment must start and end with exactly 1 space')\n                err_msgs.append(err_msg)\n        \n        segments = [segment.strip() for segment in segments]\n        entry_err_msgs = check_entry(line_num, segments)\n        err_msgs.extend(entry_err_msgs)",
              "children": [
                {
                  "value": "line_num, line_content",
                  "children": [
                    {
                      "value": "line_num",
                      "children": []
                    },
                    {
                      "value": "line_content",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "enumerate(lines)",
                  "children": [
                    {
                      "value": "enumerate",
                      "children": []
                    },
                    {
                      "value": "(lines)",
                      "children": [
                        {
                          "value": "lines",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "category_title_match = category_title_in_index_re.match(line_content)\n        if category_title_match:\n            category_title_in_index.append(category_title_match.group(1))\n\n        # check each category for the minimum number of entries\n        if line_content.startswith(anchor):\n            category_match = anchor_re.match(line_content)\n            if category_match:\n                if category_match.group(1) not in category_title_in_index:\n                    err_msg = error_message(line_num, f'category header ({category_match.group(1)}) not added to Index section')\n                    err_msgs.append(err_msg)\n            else:\n                err_msg = error_message(line_num, 'category header is not formatted correctly')\n                err_msgs.append(err_msg)\n\n            if num_in_category < min_entries_per_category:\n                err_msg = error_message(category_line, f'{category} category does not have the minimum {min_entries_per_category} entries (only has {num_in_category})')\n                err_msgs.append(err_msg)\n\n            category = line_content.split(' ')[1]\n            category_line = line_num\n            num_in_category = 0\n            continue\n\n        # skips lines that we do not care about\n        if not line_content.startswith('|') or line_content.startswith('|---'):\n            continue\n\n        num_in_category += 1\n        segments = line_content.split('|')[1:-1]\n        if len(segments) < num_segments:\n            err_msg = error_message(line_num, f'entry does not have all the required columns (have {len(segments)}, need {num_segments})')\n            err_msgs.append(err_msg)\n            continue\n    \n        for segment in segments:\n            # every line segment should start and end with exactly 1 space\n            if len(segment) - len(segment.lstrip()) != 1 or len(segment) - len(segment.rstrip()) != 1:\n                err_msg = error_message(line_num, 'each segment must start and end with exactly 1 space')\n                err_msgs.append(err_msg)\n        \n        segments = [segment.strip() for segment in segments]\n        entry_err_msgs = check_entry(line_num, segments)\n        err_msgs.extend(entry_err_msgs)",
                  "children": [
                    {
                      "value": "category_title_match = category_title_in_index_re.match(line_content)",
                      "children": [
                        {
                          "value": "category_title_match = category_title_in_index_re.match(line_content)",
                          "children": [
                            {
                              "value": "category_title_match",
                              "children": []
                            },
                            {
                              "value": "category_title_in_index_re.match(line_content)",
                              "children": [
                                {
                                  "value": "category_title_in_index_re.match",
                                  "children": [
                                    {
                                      "value": "category_title_in_index_re",
                                      "children": []
                                    },
                                    {
                                      "value": "match",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(line_content)",
                                  "children": [
                                    {
                                      "value": "line_content",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "if category_title_match:\n            category_title_in_index.append(category_title_match.group(1))",
                      "children": [
                        {
                          "value": "category_title_match",
                          "children": []
                        },
                        {
                          "value": "category_title_in_index.append(category_title_match.group(1))",
                          "children": [
                            {
                              "value": "category_title_in_index.append(category_title_match.group(1))",
                              "children": [
                                {
                                  "value": "category_title_in_index.append(category_title_match.group(1))",
                                  "children": [
                                    {
                                      "value": "category_title_in_index.append",
                                      "children": [
                                        {
                                          "value": "category_title_in_index",
                                          "children": []
                                        },
                                        {
                                          "value": "append",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(category_title_match.group(1))",
                                      "children": [
                                        {
                                          "value": "category_title_match.group(1)",
                                          "children": [
                                            {
                                              "value": "category_title_match.group",
                                              "children": [
                                                {
                                                  "value": "category_title_match",
                                                  "children": []
                                                },
                                                {
                                                  "value": "group",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "(1)",
                                              "children": [
                                                {
                                                  "value": "1",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "# check each category for the minimum number of entries",
                      "children": []
                    },
                    {
                      "value": "if line_content.startswith(anchor):\n            category_match = anchor_re.match(line_content)\n            if category_match:\n                if category_match.group(1) not in category_title_in_index:\n                    err_msg = error_message(line_num, f'category header ({category_match.group(1)}) not added to Index section')\n                    err_msgs.append(err_msg)\n            else:\n                err_msg = error_message(line_num, 'category header is not formatted correctly')\n                err_msgs.append(err_msg)\n\n            if num_in_category < min_entries_per_category:\n                err_msg = error_message(category_line, f'{category} category does not have the minimum {min_entries_per_category} entries (only has {num_in_category})')\n                err_msgs.append(err_msg)\n\n            category = line_content.split(' ')[1]\n            category_line = line_num\n            num_in_category = 0\n            continue",
                      "children": [
                        {
                          "value": "line_content.startswith(anchor)",
                          "children": [
                            {
                              "value": "line_content.startswith",
                              "children": [
                                {
                                  "value": "line_content",
                                  "children": []
                                },
                                {
                                  "value": "startswith",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(anchor)",
                              "children": [
                                {
                                  "value": "anchor",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "category_match = anchor_re.match(line_content)\n            if category_match:\n                if category_match.group(1) not in category_title_in_index:\n                    err_msg = error_message(line_num, f'category header ({category_match.group(1)}) not added to Index section')\n                    err_msgs.append(err_msg)\n            else:\n                err_msg = error_message(line_num, 'category header is not formatted correctly')\n                err_msgs.append(err_msg)\n\n            if num_in_category < min_entries_per_category:\n                err_msg = error_message(category_line, f'{category} category does not have the minimum {min_entries_per_category} entries (only has {num_in_category})')\n                err_msgs.append(err_msg)\n\n            category = line_content.split(' ')[1]\n            category_line = line_num\n            num_in_category = 0\n            continue",
                          "children": [
                            {
                              "value": "category_match = anchor_re.match(line_content)",
                              "children": [
                                {
                                  "value": "category_match = anchor_re.match(line_content)",
                                  "children": [
                                    {
                                      "value": "category_match",
                                      "children": []
                                    },
                                    {
                                      "value": "anchor_re.match(line_content)",
                                      "children": [
                                        {
                                          "value": "anchor_re.match",
                                          "children": [
                                            {
                                              "value": "anchor_re",
                                              "children": []
                                            },
                                            {
                                              "value": "match",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(line_content)",
                                          "children": [
                                            {
                                              "value": "line_content",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "if category_match:\n                if category_match.group(1) not in category_title_in_index:\n                    err_msg = error_message(line_num, f'category header ({category_match.group(1)}) not added to Index section')\n                    err_msgs.append(err_msg)\n            else:\n                err_msg = error_message(line_num, 'category header is not formatted correctly')\n                err_msgs.append(err_msg)",
                              "children": [
                                {
                                  "value": "category_match",
                                  "children": []
                                },
                                {
                                  "value": "if category_match.group(1) not in category_title_in_index:\n                    err_msg = error_message(line_num, f'category header ({category_match.group(1)}) not added to Index section')\n                    err_msgs.append(err_msg)",
                                  "children": [
                                    {
                                      "value": "if category_match.group(1) not in category_title_in_index:\n                    err_msg = error_message(line_num, f'category header ({category_match.group(1)}) not added to Index section')\n                    err_msgs.append(err_msg)",
                                      "children": [
                                        {
                                          "value": "category_match.group(1) not in category_title_in_index",
                                          "children": [
                                            {
                                              "value": "category_match.group(1)",
                                              "children": [
                                                {
                                                  "value": "category_match.group",
                                                  "children": [
                                                    {
                                                      "value": "category_match",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "group",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "(1)",
                                                  "children": [
                                                    {
                                                      "value": "1",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "category_title_in_index",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "err_msg = error_message(line_num, f'category header ({category_match.group(1)}) not added to Index section')\n                    err_msgs.append(err_msg)",
                                          "children": [
                                            {
                                              "value": "err_msg = error_message(line_num, f'category header ({category_match.group(1)}) not added to Index section')",
                                              "children": [
                                                {
                                                  "value": "err_msg = error_message(line_num, f'category header ({category_match.group(1)}) not added to Index section')",
                                                  "children": [
                                                    {
                                                      "value": "err_msg",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "error_message(line_num, f'category header ({category_match.group(1)}) not added to Index section')",
                                                      "children": [
                                                        {
                                                          "value": "error_message",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "(line_num, f'category header ({category_match.group(1)}) not added to Index section')",
                                                          "children": [
                                                            {
                                                              "value": "line_num",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "f'category header ({category_match.group(1)}) not added to Index section'",
                                                              "children": [
                                                                {
                                                                  "value": "f'",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "category header (",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "{category_match.group(1)}",
                                                                  "children": [
                                                                    {
                                                                      "value": "category_match.group(1)",
                                                                      "children": [
                                                                        {
                                                                          "value": "category_match.group",
                                                                          "children": [
                                                                            {
                                                                              "value": "category_match",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "value": "group",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "value": "(1)",
                                                                          "children": [
                                                                            {
                                                                              "value": "1",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "value": ") not added to Index section",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "'",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "err_msgs.append(err_msg)",
                                              "children": [
                                                {
                                                  "value": "err_msgs.append(err_msg)",
                                                  "children": [
                                                    {
                                                      "value": "err_msgs.append",
                                                      "children": [
                                                        {
                                                          "value": "err_msgs",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "append",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "(err_msg)",
                                                      "children": [
                                                        {
                                                          "value": "err_msg",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "else:\n                err_msg = error_message(line_num, 'category header is not formatted correctly')\n                err_msgs.append(err_msg)",
                                  "children": [
                                    {
                                      "value": "err_msg = error_message(line_num, 'category header is not formatted correctly')\n                err_msgs.append(err_msg)",
                                      "children": [
                                        {
                                          "value": "err_msg = error_message(line_num, 'category header is not formatted correctly')",
                                          "children": [
                                            {
                                              "value": "err_msg = error_message(line_num, 'category header is not formatted correctly')",
                                              "children": [
                                                {
                                                  "value": "err_msg",
                                                  "children": []
                                                },
                                                {
                                                  "value": "error_message(line_num, 'category header is not formatted correctly')",
                                                  "children": [
                                                    {
                                                      "value": "error_message",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "(line_num, 'category header is not formatted correctly')",
                                                      "children": [
                                                        {
                                                          "value": "line_num",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "'category header is not formatted correctly'",
                                                          "children": [
                                                            {
                                                              "value": "'",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "category header is not formatted correctly",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "'",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "err_msgs.append(err_msg)",
                                          "children": [
                                            {
                                              "value": "err_msgs.append(err_msg)",
                                              "children": [
                                                {
                                                  "value": "err_msgs.append",
                                                  "children": [
                                                    {
                                                      "value": "err_msgs",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "append",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "(err_msg)",
                                                  "children": [
                                                    {
                                                      "value": "err_msg",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "if num_in_category < min_entries_per_category:\n                err_msg = error_message(category_line, f'{category} category does not have the minimum {min_entries_per_category} entries (only has {num_in_category})')\n                err_msgs.append(err_msg)",
                              "children": [
                                {
                                  "value": "num_in_category < min_entries_per_category",
                                  "children": [
                                    {
                                      "value": "num_in_category",
                                      "children": []
                                    },
                                    {
                                      "value": "min_entries_per_category",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "err_msg = error_message(category_line, f'{category} category does not have the minimum {min_entries_per_category} entries (only has {num_in_category})')\n                err_msgs.append(err_msg)",
                                  "children": [
                                    {
                                      "value": "err_msg = error_message(category_line, f'{category} category does not have the minimum {min_entries_per_category} entries (only has {num_in_category})')",
                                      "children": [
                                        {
                                          "value": "err_msg = error_message(category_line, f'{category} category does not have the minimum {min_entries_per_category} entries (only has {num_in_category})')",
                                          "children": [
                                            {
                                              "value": "err_msg",
                                              "children": []
                                            },
                                            {
                                              "value": "error_message(category_line, f'{category} category does not have the minimum {min_entries_per_category} entries (only has {num_in_category})')",
                                              "children": [
                                                {
                                                  "value": "error_message",
                                                  "children": []
                                                },
                                                {
                                                  "value": "(category_line, f'{category} category does not have the minimum {min_entries_per_category} entries (only has {num_in_category})')",
                                                  "children": [
                                                    {
                                                      "value": "category_line",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "f'{category} category does not have the minimum {min_entries_per_category} entries (only has {num_in_category})'",
                                                      "children": [
                                                        {
                                                          "value": "f'",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "{category}",
                                                          "children": [
                                                            {
                                                              "value": "category",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "category does not have the minimum",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "{min_entries_per_category}",
                                                          "children": [
                                                            {
                                                              "value": "min_entries_per_category",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "entries (only has",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "{num_in_category}",
                                                          "children": [
                                                            {
                                                              "value": "num_in_category",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": ")",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "'",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "err_msgs.append(err_msg)",
                                      "children": [
                                        {
                                          "value": "err_msgs.append(err_msg)",
                                          "children": [
                                            {
                                              "value": "err_msgs.append",
                                              "children": [
                                                {
                                                  "value": "err_msgs",
                                                  "children": []
                                                },
                                                {
                                                  "value": "append",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "(err_msg)",
                                              "children": [
                                                {
                                                  "value": "err_msg",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "category = line_content.split(' ')[1]",
                              "children": [
                                {
                                  "value": "category = line_content.split(' ')[1]",
                                  "children": [
                                    {
                                      "value": "category",
                                      "children": []
                                    },
                                    {
                                      "value": "line_content.split(' ')[1]",
                                      "children": [
                                        {
                                          "value": "line_content.split(' ')",
                                          "children": [
                                            {
                                              "value": "line_content.split",
                                              "children": [
                                                {
                                                  "value": "line_content",
                                                  "children": []
                                                },
                                                {
                                                  "value": "split",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "(' ')",
                                              "children": [
                                                {
                                                  "value": "' '",
                                                  "children": [
                                                    {
                                                      "value": "'",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "'",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "1",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "category_line = line_num",
                              "children": [
                                {
                                  "value": "category_line = line_num",
                                  "children": [
                                    {
                                      "value": "category_line",
                                      "children": []
                                    },
                                    {
                                      "value": "line_num",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "num_in_category = 0",
                              "children": [
                                {
                                  "value": "num_in_category = 0",
                                  "children": [
                                    {
                                      "value": "num_in_category",
                                      "children": []
                                    },
                                    {
                                      "value": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "continue",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "# skips lines that we do not care about",
                      "children": []
                    },
                    {
                      "value": "if not line_content.startswith('|') or line_content.startswith('|---'):\n            continue",
                      "children": [
                        {
                          "value": "not line_content.startswith('|') or line_content.startswith('|---')",
                          "children": [
                            {
                              "value": "not line_content.startswith('|')",
                              "children": [
                                {
                                  "value": "line_content.startswith('|')",
                                  "children": [
                                    {
                                      "value": "line_content.startswith",
                                      "children": [
                                        {
                                          "value": "line_content",
                                          "children": []
                                        },
                                        {
                                          "value": "startswith",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "('|')",
                                      "children": [
                                        {
                                          "value": "'|'",
                                          "children": [
                                            {
                                              "value": "'",
                                              "children": []
                                            },
                                            {
                                              "value": "|",
                                              "children": []
                                            },
                                            {
                                              "value": "'",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "line_content.startswith('|---')",
                              "children": [
                                {
                                  "value": "line_content.startswith",
                                  "children": [
                                    {
                                      "value": "line_content",
                                      "children": []
                                    },
                                    {
                                      "value": "startswith",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "('|---')",
                                  "children": [
                                    {
                                      "value": "'|---'",
                                      "children": [
                                        {
                                          "value": "'",
                                          "children": []
                                        },
                                        {
                                          "value": "|---",
                                          "children": []
                                        },
                                        {
                                          "value": "'",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "continue",
                          "children": [
                            {
                              "value": "continue",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "num_in_category += 1",
                      "children": [
                        {
                          "value": "num_in_category += 1",
                          "children": [
                            {
                              "value": "num_in_category",
                              "children": []
                            },
                            {
                              "value": "1",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "segments = line_content.split('|')[1:-1]",
                      "children": [
                        {
                          "value": "segments = line_content.split('|')[1:-1]",
                          "children": [
                            {
                              "value": "segments",
                              "children": []
                            },
                            {
                              "value": "line_content.split('|')[1:-1]",
                              "children": [
                                {
                                  "value": "line_content.split('|')",
                                  "children": [
                                    {
                                      "value": "line_content.split",
                                      "children": [
                                        {
                                          "value": "line_content",
                                          "children": []
                                        },
                                        {
                                          "value": "split",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "('|')",
                                      "children": [
                                        {
                                          "value": "'|'",
                                          "children": [
                                            {
                                              "value": "'",
                                              "children": []
                                            },
                                            {
                                              "value": "|",
                                              "children": []
                                            },
                                            {
                                              "value": "'",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "1:-1",
                                  "children": [
                                    {
                                      "value": "1",
                                      "children": []
                                    },
                                    {
                                      "value": "-1",
                                      "children": [
                                        {
                                          "value": "1",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "if len(segments) < num_segments:\n            err_msg = error_message(line_num, f'entry does not have all the required columns (have {len(segments)}, need {num_segments})')\n            err_msgs.append(err_msg)\n            continue",
                      "children": [
                        {
                          "value": "len(segments) < num_segments",
                          "children": [
                            {
                              "value": "len(segments)",
                              "children": [
                                {
                                  "value": "len",
                                  "children": []
                                },
                                {
                                  "value": "(segments)",
                                  "children": [
                                    {
                                      "value": "segments",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "num_segments",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "err_msg = error_message(line_num, f'entry does not have all the required columns (have {len(segments)}, need {num_segments})')\n            err_msgs.append(err_msg)\n            continue",
                          "children": [
                            {
                              "value": "err_msg = error_message(line_num, f'entry does not have all the required columns (have {len(segments)}, need {num_segments})')",
                              "children": [
                                {
                                  "value": "err_msg = error_message(line_num, f'entry does not have all the required columns (have {len(segments)}, need {num_segments})')",
                                  "children": [
                                    {
                                      "value": "err_msg",
                                      "children": []
                                    },
                                    {
                                      "value": "error_message(line_num, f'entry does not have all the required columns (have {len(segments)}, need {num_segments})')",
                                      "children": [
                                        {
                                          "value": "error_message",
                                          "children": []
                                        },
                                        {
                                          "value": "(line_num, f'entry does not have all the required columns (have {len(segments)}, need {num_segments})')",
                                          "children": [
                                            {
                                              "value": "line_num",
                                              "children": []
                                            },
                                            {
                                              "value": "f'entry does not have all the required columns (have {len(segments)}, need {num_segments})'",
                                              "children": [
                                                {
                                                  "value": "f'",
                                                  "children": []
                                                },
                                                {
                                                  "value": "entry does not have all the required columns (have",
                                                  "children": []
                                                },
                                                {
                                                  "value": "{len(segments)}",
                                                  "children": [
                                                    {
                                                      "value": "len(segments)",
                                                      "children": [
                                                        {
                                                          "value": "len",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "(segments)",
                                                          "children": [
                                                            {
                                                              "value": "segments",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": ", need",
                                                  "children": []
                                                },
                                                {
                                                  "value": "{num_segments}",
                                                  "children": [
                                                    {
                                                      "value": "num_segments",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": ")",
                                                  "children": []
                                                },
                                                {
                                                  "value": "'",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "err_msgs.append(err_msg)",
                              "children": [
                                {
                                  "value": "err_msgs.append(err_msg)",
                                  "children": [
                                    {
                                      "value": "err_msgs.append",
                                      "children": [
                                        {
                                          "value": "err_msgs",
                                          "children": []
                                        },
                                        {
                                          "value": "append",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(err_msg)",
                                      "children": [
                                        {
                                          "value": "err_msg",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "continue",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "for segment in segments:\n            # every line segment should start and end with exactly 1 space\n            if len(segment) - len(segment.lstrip()) != 1 or len(segment) - len(segment.rstrip()) != 1:\n                err_msg = error_message(line_num, 'each segment must start and end with exactly 1 space')\n                err_msgs.append(err_msg)",
                      "children": [
                        {
                          "value": "segment",
                          "children": []
                        },
                        {
                          "value": "segments",
                          "children": []
                        },
                        {
                          "value": "# every line segment should start and end with exactly 1 space",
                          "children": []
                        },
                        {
                          "value": "if len(segment) - len(segment.lstrip()) != 1 or len(segment) - len(segment.rstrip()) != 1:\n                err_msg = error_message(line_num, 'each segment must start and end with exactly 1 space')\n                err_msgs.append(err_msg)",
                          "children": [
                            {
                              "value": "if len(segment) - len(segment.lstrip()) != 1 or len(segment) - len(segment.rstrip()) != 1:\n                err_msg = error_message(line_num, 'each segment must start and end with exactly 1 space')\n                err_msgs.append(err_msg)",
                              "children": [
                                {
                                  "value": "len(segment) - len(segment.lstrip()) != 1 or len(segment) - len(segment.rstrip()) != 1",
                                  "children": [
                                    {
                                      "value": "len(segment) - len(segment.lstrip()) != 1",
                                      "children": [
                                        {
                                          "value": "len(segment) - len(segment.lstrip())",
                                          "children": [
                                            {
                                              "value": "len(segment)",
                                              "children": [
                                                {
                                                  "value": "len",
                                                  "children": []
                                                },
                                                {
                                                  "value": "(segment)",
                                                  "children": [
                                                    {
                                                      "value": "segment",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "len(segment.lstrip())",
                                              "children": [
                                                {
                                                  "value": "len",
                                                  "children": []
                                                },
                                                {
                                                  "value": "(segment.lstrip())",
                                                  "children": [
                                                    {
                                                      "value": "segment.lstrip()",
                                                      "children": [
                                                        {
                                                          "value": "segment.lstrip",
                                                          "children": [
                                                            {
                                                              "value": "segment",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "lstrip",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "()",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "len(segment) - len(segment.rstrip()) != 1",
                                      "children": [
                                        {
                                          "value": "len(segment) - len(segment.rstrip())",
                                          "children": [
                                            {
                                              "value": "len(segment)",
                                              "children": [
                                                {
                                                  "value": "len",
                                                  "children": []
                                                },
                                                {
                                                  "value": "(segment)",
                                                  "children": [
                                                    {
                                                      "value": "segment",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "len(segment.rstrip())",
                                              "children": [
                                                {
                                                  "value": "len",
                                                  "children": []
                                                },
                                                {
                                                  "value": "(segment.rstrip())",
                                                  "children": [
                                                    {
                                                      "value": "segment.rstrip()",
                                                      "children": [
                                                        {
                                                          "value": "segment.rstrip",
                                                          "children": [
                                                            {
                                                              "value": "segment",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "rstrip",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "()",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "1",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "err_msg = error_message(line_num, 'each segment must start and end with exactly 1 space')\n                err_msgs.append(err_msg)",
                                  "children": [
                                    {
                                      "value": "err_msg = error_message(line_num, 'each segment must start and end with exactly 1 space')",
                                      "children": [
                                        {
                                          "value": "err_msg = error_message(line_num, 'each segment must start and end with exactly 1 space')",
                                          "children": [
                                            {
                                              "value": "err_msg",
                                              "children": []
                                            },
                                            {
                                              "value": "error_message(line_num, 'each segment must start and end with exactly 1 space')",
                                              "children": [
                                                {
                                                  "value": "error_message",
                                                  "children": []
                                                },
                                                {
                                                  "value": "(line_num, 'each segment must start and end with exactly 1 space')",
                                                  "children": [
                                                    {
                                                      "value": "line_num",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "'each segment must start and end with exactly 1 space'",
                                                      "children": [
                                                        {
                                                          "value": "'",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "each segment must start and end with exactly 1 space",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "'",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "err_msgs.append(err_msg)",
                                      "children": [
                                        {
                                          "value": "err_msgs.append(err_msg)",
                                          "children": [
                                            {
                                              "value": "err_msgs.append",
                                              "children": [
                                                {
                                                  "value": "err_msgs",
                                                  "children": []
                                                },
                                                {
                                                  "value": "append",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "(err_msg)",
                                              "children": [
                                                {
                                                  "value": "err_msg",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "segments = [segment.strip() for segment in segments]",
                      "children": [
                        {
                          "value": "segments = [segment.strip() for segment in segments]",
                          "children": [
                            {
                              "value": "segments",
                              "children": []
                            },
                            {
                              "value": "[segment.strip() for segment in segments]",
                              "children": [
                                {
                                  "value": "segment.strip()",
                                  "children": [
                                    {
                                      "value": "segment.strip",
                                      "children": [
                                        {
                                          "value": "segment",
                                          "children": []
                                        },
                                        {
                                          "value": "strip",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "()",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "for segment in segments",
                                  "children": [
                                    {
                                      "value": "segment",
                                      "children": []
                                    },
                                    {
                                      "value": "segments",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "entry_err_msgs = check_entry(line_num, segments)",
                      "children": [
                        {
                          "value": "entry_err_msgs = check_entry(line_num, segments)",
                          "children": [
                            {
                              "value": "entry_err_msgs",
                              "children": []
                            },
                            {
                              "value": "check_entry(line_num, segments)",
                              "children": [
                                {
                                  "value": "check_entry",
                                  "children": []
                                },
                                {
                                  "value": "(line_num, segments)",
                                  "children": [
                                    {
                                      "value": "line_num",
                                      "children": []
                                    },
                                    {
                                      "value": "segments",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "err_msgs.extend(entry_err_msgs)",
                      "children": [
                        {
                          "value": "err_msgs.extend(entry_err_msgs)",
                          "children": [
                            {
                              "value": "err_msgs.extend",
                              "children": [
                                {
                                  "value": "err_msgs",
                                  "children": []
                                },
                                {
                                  "value": "extend",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(entry_err_msgs)",
                              "children": [
                                {
                                  "value": "entry_err_msgs",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "return err_msgs",
              "children": [
                {
                  "value": "err_msgs",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "def main(filename: str) -> None:\n\n    with open(filename, mode='r', encoding='utf-8') as file:\n        lines = list(line.rstrip() for line in file)\n\n    file_format_err_msgs = check_file_format(lines)\n\n    if file_format_err_msgs:\n        for err_msg in file_format_err_msgs:\n            print(err_msg)\n        sys.exit(1)",
      "children": [
        {
          "value": "main",
          "children": []
        },
        {
          "value": "(filename: str)",
          "children": [
            {
              "value": "filename: str",
              "children": [
                {
                  "value": "filename",
                  "children": []
                },
                {
                  "value": "str",
                  "children": [
                    {
                      "value": "str",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "None",
          "children": [
            {
              "value": "None",
              "children": []
            }
          ]
        },
        {
          "value": "with open(filename, mode='r', encoding='utf-8') as file:\n        lines = list(line.rstrip() for line in file)\n\n    file_format_err_msgs = check_file_format(lines)\n\n    if file_format_err_msgs:\n        for err_msg in file_format_err_msgs:\n            print(err_msg)\n        sys.exit(1)",
          "children": [
            {
              "value": "with open(filename, mode='r', encoding='utf-8') as file:\n        lines = list(line.rstrip() for line in file)",
              "children": [
                {
                  "value": "open(filename, mode='r', encoding='utf-8') as file",
                  "children": [
                    {
                      "value": "open(filename, mode='r', encoding='utf-8') as file",
                      "children": [
                        {
                          "value": "open(filename, mode='r', encoding='utf-8') as file",
                          "children": [
                            {
                              "value": "open(filename, mode='r', encoding='utf-8')",
                              "children": [
                                {
                                  "value": "open",
                                  "children": []
                                },
                                {
                                  "value": "(filename, mode='r', encoding='utf-8')",
                                  "children": [
                                    {
                                      "value": "filename",
                                      "children": []
                                    },
                                    {
                                      "value": "mode='r'",
                                      "children": [
                                        {
                                          "value": "mode",
                                          "children": []
                                        },
                                        {
                                          "value": "'r'",
                                          "children": [
                                            {
                                              "value": "'",
                                              "children": []
                                            },
                                            {
                                              "value": "r",
                                              "children": []
                                            },
                                            {
                                              "value": "'",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "encoding='utf-8'",
                                      "children": [
                                        {
                                          "value": "encoding",
                                          "children": []
                                        },
                                        {
                                          "value": "'utf-8'",
                                          "children": [
                                            {
                                              "value": "'",
                                              "children": []
                                            },
                                            {
                                              "value": "utf-8",
                                              "children": []
                                            },
                                            {
                                              "value": "'",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "file",
                              "children": [
                                {
                                  "value": "file",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "lines = list(line.rstrip() for line in file)",
                  "children": [
                    {
                      "value": "lines = list(line.rstrip() for line in file)",
                      "children": [
                        {
                          "value": "lines = list(line.rstrip() for line in file)",
                          "children": [
                            {
                              "value": "lines",
                              "children": []
                            },
                            {
                              "value": "list(line.rstrip() for line in file)",
                              "children": [
                                {
                                  "value": "list",
                                  "children": []
                                },
                                {
                                  "value": "(line.rstrip() for line in file)",
                                  "children": [
                                    {
                                      "value": "line.rstrip()",
                                      "children": [
                                        {
                                          "value": "line.rstrip",
                                          "children": [
                                            {
                                              "value": "line",
                                              "children": []
                                            },
                                            {
                                              "value": "rstrip",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "()",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "for line in file",
                                      "children": [
                                        {
                                          "value": "line",
                                          "children": []
                                        },
                                        {
                                          "value": "file",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "file_format_err_msgs = check_file_format(lines)",
              "children": [
                {
                  "value": "file_format_err_msgs = check_file_format(lines)",
                  "children": [
                    {
                      "value": "file_format_err_msgs",
                      "children": []
                    },
                    {
                      "value": "check_file_format(lines)",
                      "children": [
                        {
                          "value": "check_file_format",
                          "children": []
                        },
                        {
                          "value": "(lines)",
                          "children": [
                            {
                              "value": "lines",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "if file_format_err_msgs:\n        for err_msg in file_format_err_msgs:\n            print(err_msg)\n        sys.exit(1)",
              "children": [
                {
                  "value": "file_format_err_msgs",
                  "children": []
                },
                {
                  "value": "for err_msg in file_format_err_msgs:\n            print(err_msg)\n        sys.exit(1)",
                  "children": [
                    {
                      "value": "for err_msg in file_format_err_msgs:\n            print(err_msg)",
                      "children": [
                        {
                          "value": "err_msg",
                          "children": []
                        },
                        {
                          "value": "file_format_err_msgs",
                          "children": []
                        },
                        {
                          "value": "print(err_msg)",
                          "children": [
                            {
                              "value": "print(err_msg)",
                              "children": [
                                {
                                  "value": "print(err_msg)",
                                  "children": [
                                    {
                                      "value": "print",
                                      "children": []
                                    },
                                    {
                                      "value": "(err_msg)",
                                      "children": [
                                        {
                                          "value": "err_msg",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "sys.exit(1)",
                      "children": [
                        {
                          "value": "sys.exit(1)",
                          "children": [
                            {
                              "value": "sys.exit",
                              "children": [
                                {
                                  "value": "sys",
                                  "children": []
                                },
                                {
                                  "value": "exit",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(1)",
                              "children": [
                                {
                                  "value": "1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "if __name__ == '__main__':\n\n    num_args = len(sys.argv)\n\n    if num_args < 2:\n        print('No .md file passed (file should contain Markdown table syntax)')\n        sys.exit(1)\n\n    filename = sys.argv[1]\n\n    main(filename)",
      "children": [
        {
          "value": "__name__ == '__main__'",
          "children": [
            {
              "value": "__name__",
              "children": []
            },
            {
              "value": "'__main__'",
              "children": [
                {
                  "value": "'",
                  "children": []
                },
                {
                  "value": "__main__",
                  "children": []
                },
                {
                  "value": "'",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "num_args = len(sys.argv)\n\n    if num_args < 2:\n        print('No .md file passed (file should contain Markdown table syntax)')\n        sys.exit(1)\n\n    filename = sys.argv[1]\n\n    main(filename)",
          "children": [
            {
              "value": "num_args = len(sys.argv)",
              "children": [
                {
                  "value": "num_args = len(sys.argv)",
                  "children": [
                    {
                      "value": "num_args",
                      "children": []
                    },
                    {
                      "value": "len(sys.argv)",
                      "children": [
                        {
                          "value": "len",
                          "children": []
                        },
                        {
                          "value": "(sys.argv)",
                          "children": [
                            {
                              "value": "sys.argv",
                              "children": [
                                {
                                  "value": "sys",
                                  "children": []
                                },
                                {
                                  "value": "argv",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "if num_args < 2:\n        print('No .md file passed (file should contain Markdown table syntax)')\n        sys.exit(1)",
              "children": [
                {
                  "value": "num_args < 2",
                  "children": [
                    {
                      "value": "num_args",
                      "children": []
                    },
                    {
                      "value": "2",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "print('No .md file passed (file should contain Markdown table syntax)')\n        sys.exit(1)",
                  "children": [
                    {
                      "value": "print('No .md file passed (file should contain Markdown table syntax)')",
                      "children": [
                        {
                          "value": "print('No .md file passed (file should contain Markdown table syntax)')",
                          "children": [
                            {
                              "value": "print",
                              "children": []
                            },
                            {
                              "value": "('No .md file passed (file should contain Markdown table syntax)')",
                              "children": [
                                {
                                  "value": "'No .md file passed (file should contain Markdown table syntax)'",
                                  "children": [
                                    {
                                      "value": "'",
                                      "children": []
                                    },
                                    {
                                      "value": "No .md file passed (file should contain Markdown table syntax)",
                                      "children": []
                                    },
                                    {
                                      "value": "'",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "sys.exit(1)",
                      "children": [
                        {
                          "value": "sys.exit(1)",
                          "children": [
                            {
                              "value": "sys.exit",
                              "children": [
                                {
                                  "value": "sys",
                                  "children": []
                                },
                                {
                                  "value": "exit",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(1)",
                              "children": [
                                {
                                  "value": "1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "filename = sys.argv[1]",
              "children": [
                {
                  "value": "filename = sys.argv[1]",
                  "children": [
                    {
                      "value": "filename",
                      "children": []
                    },
                    {
                      "value": "sys.argv[1]",
                      "children": [
                        {
                          "value": "sys.argv",
                          "children": [
                            {
                              "value": "sys",
                              "children": []
                            },
                            {
                              "value": "argv",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "1",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "main(filename)",
              "children": [
                {
                  "value": "main(filename)",
                  "children": [
                    {
                      "value": "main",
                      "children": []
                    },
                    {
                      "value": "(filename)",
                      "children": [
                        {
                          "value": "filename",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}