{
  "value": "import pytest\n\nfrom backend.data import db\nfrom backend.executor import ExecutionScheduler\nfrom backend.server.model import CreateGraph\nfrom backend.usecases.sample import create_test_graph, create_test_user\nfrom backend.util.service import get_service_client\nfrom backend.util.test import SpinTestServer\n\n\n@pytest.mark.asyncio(scope=\"session\")\nasync def test_agent_schedule(server: SpinTestServer):\n    await db.connect()\n    test_user = await create_test_user()\n    test_graph = await server.agent_server.test_create_graph(\n        create_graph=CreateGraph(graph=create_test_graph()),\n        user_id=test_user.id,\n    )\n\n    scheduler = get_service_client(ExecutionScheduler)\n    schedules = scheduler.get_execution_schedules(test_graph.id, test_user.id)\n    assert len(schedules) == 0\n\n    schedule = scheduler.add_execution_schedule(\n        graph_id=test_graph.id,\n        user_id=test_user.id,\n        graph_version=1,\n        cron=\"0 0 * * *\",\n        input_data={\"input\": \"data\"},\n    )\n    assert schedule\n\n    schedules = scheduler.get_execution_schedules(test_graph.id, test_user.id)\n    assert len(schedules) == 1\n    assert schedules[0].cron == \"0 0 * * *\"\n\n    scheduler.delete_schedule(schedule.id, user_id=test_user.id)\n    schedules = scheduler.get_execution_schedules(test_graph.id, user_id=test_user.id)\n    assert len(schedules) == 0",
  "children": [
    {
      "value": "import pytest",
      "children": [
        {
          "value": "pytest",
          "children": [
            {
              "value": "pytest",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.data import db",
      "children": [
        {
          "value": "backend.data",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "data",
              "children": []
            }
          ]
        },
        {
          "value": "db",
          "children": [
            {
              "value": "db",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.executor import ExecutionScheduler",
      "children": [
        {
          "value": "backend.executor",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "executor",
              "children": []
            }
          ]
        },
        {
          "value": "ExecutionScheduler",
          "children": [
            {
              "value": "ExecutionScheduler",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.server.model import CreateGraph",
      "children": [
        {
          "value": "backend.server.model",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "server",
              "children": []
            },
            {
              "value": "model",
              "children": []
            }
          ]
        },
        {
          "value": "CreateGraph",
          "children": [
            {
              "value": "CreateGraph",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.usecases.sample import create_test_graph, create_test_user",
      "children": [
        {
          "value": "backend.usecases.sample",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "usecases",
              "children": []
            },
            {
              "value": "sample",
              "children": []
            }
          ]
        },
        {
          "value": "create_test_graph",
          "children": [
            {
              "value": "create_test_graph",
              "children": []
            }
          ]
        },
        {
          "value": "create_test_user",
          "children": [
            {
              "value": "create_test_user",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.util.service import get_service_client",
      "children": [
        {
          "value": "backend.util.service",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "util",
              "children": []
            },
            {
              "value": "service",
              "children": []
            }
          ]
        },
        {
          "value": "get_service_client",
          "children": [
            {
              "value": "get_service_client",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.util.test import SpinTestServer",
      "children": [
        {
          "value": "backend.util.test",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "util",
              "children": []
            },
            {
              "value": "test",
              "children": []
            }
          ]
        },
        {
          "value": "SpinTestServer",
          "children": [
            {
              "value": "SpinTestServer",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "@pytest.mark.asyncio(scope=\"session\")\nasync def test_agent_schedule(server: SpinTestServer):\n    await db.connect()\n    test_user = await create_test_user()\n    test_graph = await server.agent_server.test_create_graph(\n        create_graph=CreateGraph(graph=create_test_graph()),\n        user_id=test_user.id,\n    )\n\n    scheduler = get_service_client(ExecutionScheduler)\n    schedules = scheduler.get_execution_schedules(test_graph.id, test_user.id)\n    assert len(schedules) == 0\n\n    schedule = scheduler.add_execution_schedule(\n        graph_id=test_graph.id,\n        user_id=test_user.id,\n        graph_version=1,\n        cron=\"0 0 * * *\",\n        input_data={\"input\": \"data\"},\n    )\n    assert schedule\n\n    schedules = scheduler.get_execution_schedules(test_graph.id, test_user.id)\n    assert len(schedules) == 1\n    assert schedules[0].cron == \"0 0 * * *\"\n\n    scheduler.delete_schedule(schedule.id, user_id=test_user.id)\n    schedules = scheduler.get_execution_schedules(test_graph.id, user_id=test_user.id)\n    assert len(schedules) == 0",
      "children": [
        {
          "value": "@pytest.mark.asyncio(scope=\"session\")",
          "children": [
            {
              "value": "pytest.mark.asyncio(scope=\"session\")",
              "children": [
                {
                  "value": "pytest.mark.asyncio",
                  "children": [
                    {
                      "value": "pytest.mark",
                      "children": [
                        {
                          "value": "pytest",
                          "children": []
                        },
                        {
                          "value": "mark",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "asyncio",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "(scope=\"session\")",
                  "children": [
                    {
                      "value": "scope=\"session\"",
                      "children": [
                        {
                          "value": "scope",
                          "children": []
                        },
                        {
                          "value": "\"session\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "session",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "async def test_agent_schedule(server: SpinTestServer):\n    await db.connect()\n    test_user = await create_test_user()\n    test_graph = await server.agent_server.test_create_graph(\n        create_graph=CreateGraph(graph=create_test_graph()),\n        user_id=test_user.id,\n    )\n\n    scheduler = get_service_client(ExecutionScheduler)\n    schedules = scheduler.get_execution_schedules(test_graph.id, test_user.id)\n    assert len(schedules) == 0\n\n    schedule = scheduler.add_execution_schedule(\n        graph_id=test_graph.id,\n        user_id=test_user.id,\n        graph_version=1,\n        cron=\"0 0 * * *\",\n        input_data={\"input\": \"data\"},\n    )\n    assert schedule\n\n    schedules = scheduler.get_execution_schedules(test_graph.id, test_user.id)\n    assert len(schedules) == 1\n    assert schedules[0].cron == \"0 0 * * *\"\n\n    scheduler.delete_schedule(schedule.id, user_id=test_user.id)\n    schedules = scheduler.get_execution_schedules(test_graph.id, user_id=test_user.id)\n    assert len(schedules) == 0",
          "children": [
            {
              "value": "test_agent_schedule",
              "children": []
            },
            {
              "value": "(server: SpinTestServer)",
              "children": [
                {
                  "value": "server: SpinTestServer",
                  "children": [
                    {
                      "value": "server",
                      "children": []
                    },
                    {
                      "value": "SpinTestServer",
                      "children": [
                        {
                          "value": "SpinTestServer",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "await db.connect()\n    test_user = await create_test_user()\n    test_graph = await server.agent_server.test_create_graph(\n        create_graph=CreateGraph(graph=create_test_graph()),\n        user_id=test_user.id,\n    )\n\n    scheduler = get_service_client(ExecutionScheduler)\n    schedules = scheduler.get_execution_schedules(test_graph.id, test_user.id)\n    assert len(schedules) == 0\n\n    schedule = scheduler.add_execution_schedule(\n        graph_id=test_graph.id,\n        user_id=test_user.id,\n        graph_version=1,\n        cron=\"0 0 * * *\",\n        input_data={\"input\": \"data\"},\n    )\n    assert schedule\n\n    schedules = scheduler.get_execution_schedules(test_graph.id, test_user.id)\n    assert len(schedules) == 1\n    assert schedules[0].cron == \"0 0 * * *\"\n\n    scheduler.delete_schedule(schedule.id, user_id=test_user.id)\n    schedules = scheduler.get_execution_schedules(test_graph.id, user_id=test_user.id)\n    assert len(schedules) == 0",
              "children": [
                {
                  "value": "await db.connect()",
                  "children": [
                    {
                      "value": "await db.connect()",
                      "children": [
                        {
                          "value": "db.connect()",
                          "children": [
                            {
                              "value": "db.connect",
                              "children": [
                                {
                                  "value": "db",
                                  "children": []
                                },
                                {
                                  "value": "connect",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "()",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "test_user = await create_test_user()",
                  "children": [
                    {
                      "value": "test_user = await create_test_user()",
                      "children": [
                        {
                          "value": "test_user",
                          "children": []
                        },
                        {
                          "value": "await create_test_user()",
                          "children": [
                            {
                              "value": "create_test_user()",
                              "children": [
                                {
                                  "value": "create_test_user",
                                  "children": []
                                },
                                {
                                  "value": "()",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "test_graph = await server.agent_server.test_create_graph(\n        create_graph=CreateGraph(graph=create_test_graph()),\n        user_id=test_user.id,\n    )",
                  "children": [
                    {
                      "value": "test_graph = await server.agent_server.test_create_graph(\n        create_graph=CreateGraph(graph=create_test_graph()),\n        user_id=test_user.id,\n    )",
                      "children": [
                        {
                          "value": "test_graph",
                          "children": []
                        },
                        {
                          "value": "await server.agent_server.test_create_graph(\n        create_graph=CreateGraph(graph=create_test_graph()),\n        user_id=test_user.id,\n    )",
                          "children": [
                            {
                              "value": "server.agent_server.test_create_graph(\n        create_graph=CreateGraph(graph=create_test_graph()),\n        user_id=test_user.id,\n    )",
                              "children": [
                                {
                                  "value": "server.agent_server.test_create_graph",
                                  "children": [
                                    {
                                      "value": "server.agent_server",
                                      "children": [
                                        {
                                          "value": "server",
                                          "children": []
                                        },
                                        {
                                          "value": "agent_server",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "test_create_graph",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(\n        create_graph=CreateGraph(graph=create_test_graph()),\n        user_id=test_user.id,\n    )",
                                  "children": [
                                    {
                                      "value": "create_graph=CreateGraph(graph=create_test_graph())",
                                      "children": [
                                        {
                                          "value": "create_graph",
                                          "children": []
                                        },
                                        {
                                          "value": "CreateGraph(graph=create_test_graph())",
                                          "children": [
                                            {
                                              "value": "CreateGraph",
                                              "children": []
                                            },
                                            {
                                              "value": "(graph=create_test_graph())",
                                              "children": [
                                                {
                                                  "value": "graph=create_test_graph()",
                                                  "children": [
                                                    {
                                                      "value": "graph",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "create_test_graph()",
                                                      "children": [
                                                        {
                                                          "value": "create_test_graph",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "()",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "user_id=test_user.id",
                                      "children": [
                                        {
                                          "value": "user_id",
                                          "children": []
                                        },
                                        {
                                          "value": "test_user.id",
                                          "children": [
                                            {
                                              "value": "test_user",
                                              "children": []
                                            },
                                            {
                                              "value": "id",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "scheduler = get_service_client(ExecutionScheduler)",
                  "children": [
                    {
                      "value": "scheduler = get_service_client(ExecutionScheduler)",
                      "children": [
                        {
                          "value": "scheduler",
                          "children": []
                        },
                        {
                          "value": "get_service_client(ExecutionScheduler)",
                          "children": [
                            {
                              "value": "get_service_client",
                              "children": []
                            },
                            {
                              "value": "(ExecutionScheduler)",
                              "children": [
                                {
                                  "value": "ExecutionScheduler",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "schedules = scheduler.get_execution_schedules(test_graph.id, test_user.id)",
                  "children": [
                    {
                      "value": "schedules = scheduler.get_execution_schedules(test_graph.id, test_user.id)",
                      "children": [
                        {
                          "value": "schedules",
                          "children": []
                        },
                        {
                          "value": "scheduler.get_execution_schedules(test_graph.id, test_user.id)",
                          "children": [
                            {
                              "value": "scheduler.get_execution_schedules",
                              "children": [
                                {
                                  "value": "scheduler",
                                  "children": []
                                },
                                {
                                  "value": "get_execution_schedules",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(test_graph.id, test_user.id)",
                              "children": [
                                {
                                  "value": "test_graph.id",
                                  "children": [
                                    {
                                      "value": "test_graph",
                                      "children": []
                                    },
                                    {
                                      "value": "id",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "test_user.id",
                                  "children": [
                                    {
                                      "value": "test_user",
                                      "children": []
                                    },
                                    {
                                      "value": "id",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "assert len(schedules) == 0",
                  "children": [
                    {
                      "value": "len(schedules) == 0",
                      "children": [
                        {
                          "value": "len(schedules)",
                          "children": [
                            {
                              "value": "len",
                              "children": []
                            },
                            {
                              "value": "(schedules)",
                              "children": [
                                {
                                  "value": "schedules",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "0",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "schedule = scheduler.add_execution_schedule(\n        graph_id=test_graph.id,\n        user_id=test_user.id,\n        graph_version=1,\n        cron=\"0 0 * * *\",\n        input_data={\"input\": \"data\"},\n    )",
                  "children": [
                    {
                      "value": "schedule = scheduler.add_execution_schedule(\n        graph_id=test_graph.id,\n        user_id=test_user.id,\n        graph_version=1,\n        cron=\"0 0 * * *\",\n        input_data={\"input\": \"data\"},\n    )",
                      "children": [
                        {
                          "value": "schedule",
                          "children": []
                        },
                        {
                          "value": "scheduler.add_execution_schedule(\n        graph_id=test_graph.id,\n        user_id=test_user.id,\n        graph_version=1,\n        cron=\"0 0 * * *\",\n        input_data={\"input\": \"data\"},\n    )",
                          "children": [
                            {
                              "value": "scheduler.add_execution_schedule",
                              "children": [
                                {
                                  "value": "scheduler",
                                  "children": []
                                },
                                {
                                  "value": "add_execution_schedule",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\n        graph_id=test_graph.id,\n        user_id=test_user.id,\n        graph_version=1,\n        cron=\"0 0 * * *\",\n        input_data={\"input\": \"data\"},\n    )",
                              "children": [
                                {
                                  "value": "graph_id=test_graph.id",
                                  "children": [
                                    {
                                      "value": "graph_id",
                                      "children": []
                                    },
                                    {
                                      "value": "test_graph.id",
                                      "children": [
                                        {
                                          "value": "test_graph",
                                          "children": []
                                        },
                                        {
                                          "value": "id",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "user_id=test_user.id",
                                  "children": [
                                    {
                                      "value": "user_id",
                                      "children": []
                                    },
                                    {
                                      "value": "test_user.id",
                                      "children": [
                                        {
                                          "value": "test_user",
                                          "children": []
                                        },
                                        {
                                          "value": "id",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "graph_version=1",
                                  "children": [
                                    {
                                      "value": "graph_version",
                                      "children": []
                                    },
                                    {
                                      "value": "1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "cron=\"0 0 * * *\"",
                                  "children": [
                                    {
                                      "value": "cron",
                                      "children": []
                                    },
                                    {
                                      "value": "\"0 0 * * *\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "0 0 * * *",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "input_data={\"input\": \"data\"}",
                                  "children": [
                                    {
                                      "value": "input_data",
                                      "children": []
                                    },
                                    {
                                      "value": "{\"input\": \"data\"}",
                                      "children": [
                                        {
                                          "value": "\"input\": \"data\"",
                                          "children": [
                                            {
                                              "value": "\"input\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "input",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"data\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "data",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "assert schedule",
                  "children": [
                    {
                      "value": "schedule",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "schedules = scheduler.get_execution_schedules(test_graph.id, test_user.id)",
                  "children": [
                    {
                      "value": "schedules = scheduler.get_execution_schedules(test_graph.id, test_user.id)",
                      "children": [
                        {
                          "value": "schedules",
                          "children": []
                        },
                        {
                          "value": "scheduler.get_execution_schedules(test_graph.id, test_user.id)",
                          "children": [
                            {
                              "value": "scheduler.get_execution_schedules",
                              "children": [
                                {
                                  "value": "scheduler",
                                  "children": []
                                },
                                {
                                  "value": "get_execution_schedules",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(test_graph.id, test_user.id)",
                              "children": [
                                {
                                  "value": "test_graph.id",
                                  "children": [
                                    {
                                      "value": "test_graph",
                                      "children": []
                                    },
                                    {
                                      "value": "id",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "test_user.id",
                                  "children": [
                                    {
                                      "value": "test_user",
                                      "children": []
                                    },
                                    {
                                      "value": "id",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "assert len(schedules) == 1",
                  "children": [
                    {
                      "value": "len(schedules) == 1",
                      "children": [
                        {
                          "value": "len(schedules)",
                          "children": [
                            {
                              "value": "len",
                              "children": []
                            },
                            {
                              "value": "(schedules)",
                              "children": [
                                {
                                  "value": "schedules",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "1",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "assert schedules[0].cron == \"0 0 * * *\"",
                  "children": [
                    {
                      "value": "schedules[0].cron == \"0 0 * * *\"",
                      "children": [
                        {
                          "value": "schedules[0].cron",
                          "children": [
                            {
                              "value": "schedules[0]",
                              "children": [
                                {
                                  "value": "schedules",
                                  "children": []
                                },
                                {
                                  "value": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "cron",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "\"0 0 * * *\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "0 0 * * *",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "scheduler.delete_schedule(schedule.id, user_id=test_user.id)",
                  "children": [
                    {
                      "value": "scheduler.delete_schedule(schedule.id, user_id=test_user.id)",
                      "children": [
                        {
                          "value": "scheduler.delete_schedule",
                          "children": [
                            {
                              "value": "scheduler",
                              "children": []
                            },
                            {
                              "value": "delete_schedule",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(schedule.id, user_id=test_user.id)",
                          "children": [
                            {
                              "value": "schedule.id",
                              "children": [
                                {
                                  "value": "schedule",
                                  "children": []
                                },
                                {
                                  "value": "id",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "user_id=test_user.id",
                              "children": [
                                {
                                  "value": "user_id",
                                  "children": []
                                },
                                {
                                  "value": "test_user.id",
                                  "children": [
                                    {
                                      "value": "test_user",
                                      "children": []
                                    },
                                    {
                                      "value": "id",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "schedules = scheduler.get_execution_schedules(test_graph.id, user_id=test_user.id)",
                  "children": [
                    {
                      "value": "schedules = scheduler.get_execution_schedules(test_graph.id, user_id=test_user.id)",
                      "children": [
                        {
                          "value": "schedules",
                          "children": []
                        },
                        {
                          "value": "scheduler.get_execution_schedules(test_graph.id, user_id=test_user.id)",
                          "children": [
                            {
                              "value": "scheduler.get_execution_schedules",
                              "children": [
                                {
                                  "value": "scheduler",
                                  "children": []
                                },
                                {
                                  "value": "get_execution_schedules",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(test_graph.id, user_id=test_user.id)",
                              "children": [
                                {
                                  "value": "test_graph.id",
                                  "children": [
                                    {
                                      "value": "test_graph",
                                      "children": []
                                    },
                                    {
                                      "value": "id",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "user_id=test_user.id",
                                  "children": [
                                    {
                                      "value": "user_id",
                                      "children": []
                                    },
                                    {
                                      "value": "test_user.id",
                                      "children": [
                                        {
                                          "value": "test_user",
                                          "children": []
                                        },
                                        {
                                          "value": "id",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "assert len(schedules) == 0",
                  "children": [
                    {
                      "value": "len(schedules) == 0",
                      "children": [
                        {
                          "value": "len(schedules)",
                          "children": [
                            {
                              "value": "len",
                              "children": []
                            },
                            {
                              "value": "(schedules)",
                              "children": [
                                {
                                  "value": "schedules",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "0",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}