{
  "value": "from backend.util.settings import AppEnvironment, BehaveAs, Settings\n\nsettings = Settings()\n\n\ndef configure_logging():\n    import logging\n\n    import autogpt_libs.logging.config\n\n    if (\n        settings.config.behave_as == BehaveAs.LOCAL\n        or settings.config.app_env == AppEnvironment.LOCAL\n    ):\n        autogpt_libs.logging.config.configure_logging(force_cloud_logging=False)\n    else:\n        autogpt_libs.logging.config.configure_logging(force_cloud_logging=True)\n\n    # Silence httpx logger\n    logging.getLogger(\"httpx\").setLevel(logging.WARNING)",
  "children": [
    {
      "value": "from backend.util.settings import AppEnvironment, BehaveAs, Settings",
      "children": [
        {
          "value": "backend.util.settings",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "util",
              "children": []
            },
            {
              "value": "settings",
              "children": []
            }
          ]
        },
        {
          "value": "AppEnvironment",
          "children": [
            {
              "value": "AppEnvironment",
              "children": []
            }
          ]
        },
        {
          "value": "BehaveAs",
          "children": [
            {
              "value": "BehaveAs",
              "children": []
            }
          ]
        },
        {
          "value": "Settings",
          "children": [
            {
              "value": "Settings",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "settings = Settings()",
      "children": [
        {
          "value": "settings = Settings()",
          "children": [
            {
              "value": "settings",
              "children": []
            },
            {
              "value": "Settings()",
              "children": [
                {
                  "value": "Settings",
                  "children": []
                },
                {
                  "value": "()",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "def configure_logging():\n    import logging\n\n    import autogpt_libs.logging.config\n\n    if (\n        settings.config.behave_as == BehaveAs.LOCAL\n        or settings.config.app_env == AppEnvironment.LOCAL\n    ):\n        autogpt_libs.logging.config.configure_logging(force_cloud_logging=False)\n    else:\n        autogpt_libs.logging.config.configure_logging(force_cloud_logging=True)\n\n    # Silence httpx logger\n    logging.getLogger(\"httpx\").setLevel(logging.WARNING)",
      "children": [
        {
          "value": "configure_logging",
          "children": []
        },
        {
          "value": "()",
          "children": []
        },
        {
          "value": "import logging\n\n    import autogpt_libs.logging.config\n\n    if (\n        settings.config.behave_as == BehaveAs.LOCAL\n        or settings.config.app_env == AppEnvironment.LOCAL\n    ):\n        autogpt_libs.logging.config.configure_logging(force_cloud_logging=False)\n    else:\n        autogpt_libs.logging.config.configure_logging(force_cloud_logging=True)\n\n    # Silence httpx logger\n    logging.getLogger(\"httpx\").setLevel(logging.WARNING)",
          "children": [
            {
              "value": "import logging",
              "children": [
                {
                  "value": "logging",
                  "children": [
                    {
                      "value": "logging",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "import autogpt_libs.logging.config",
              "children": [
                {
                  "value": "autogpt_libs.logging.config",
                  "children": [
                    {
                      "value": "autogpt_libs",
                      "children": []
                    },
                    {
                      "value": "logging",
                      "children": []
                    },
                    {
                      "value": "config",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "if (\n        settings.config.behave_as == BehaveAs.LOCAL\n        or settings.config.app_env == AppEnvironment.LOCAL\n    ):\n        autogpt_libs.logging.config.configure_logging(force_cloud_logging=False)\n    else:\n        autogpt_libs.logging.config.configure_logging(force_cloud_logging=True)",
              "children": [
                {
                  "value": "(\n        settings.config.behave_as == BehaveAs.LOCAL\n        or settings.config.app_env == AppEnvironment.LOCAL\n    )",
                  "children": [
                    {
                      "value": "settings.config.behave_as == BehaveAs.LOCAL\n        or settings.config.app_env == AppEnvironment.LOCAL",
                      "children": [
                        {
                          "value": "settings.config.behave_as == BehaveAs.LOCAL",
                          "children": [
                            {
                              "value": "settings.config.behave_as",
                              "children": [
                                {
                                  "value": "settings.config",
                                  "children": [
                                    {
                                      "value": "settings",
                                      "children": []
                                    },
                                    {
                                      "value": "config",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "behave_as",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "BehaveAs.LOCAL",
                              "children": [
                                {
                                  "value": "BehaveAs",
                                  "children": []
                                },
                                {
                                  "value": "LOCAL",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "settings.config.app_env == AppEnvironment.LOCAL",
                          "children": [
                            {
                              "value": "settings.config.app_env",
                              "children": [
                                {
                                  "value": "settings.config",
                                  "children": [
                                    {
                                      "value": "settings",
                                      "children": []
                                    },
                                    {
                                      "value": "config",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "app_env",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "AppEnvironment.LOCAL",
                              "children": [
                                {
                                  "value": "AppEnvironment",
                                  "children": []
                                },
                                {
                                  "value": "LOCAL",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "autogpt_libs.logging.config.configure_logging(force_cloud_logging=False)",
                  "children": [
                    {
                      "value": "autogpt_libs.logging.config.configure_logging(force_cloud_logging=False)",
                      "children": [
                        {
                          "value": "autogpt_libs.logging.config.configure_logging(force_cloud_logging=False)",
                          "children": [
                            {
                              "value": "autogpt_libs.logging.config.configure_logging",
                              "children": [
                                {
                                  "value": "autogpt_libs.logging.config",
                                  "children": [
                                    {
                                      "value": "autogpt_libs.logging",
                                      "children": [
                                        {
                                          "value": "autogpt_libs",
                                          "children": []
                                        },
                                        {
                                          "value": "logging",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "config",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "configure_logging",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(force_cloud_logging=False)",
                              "children": [
                                {
                                  "value": "force_cloud_logging=False",
                                  "children": [
                                    {
                                      "value": "force_cloud_logging",
                                      "children": []
                                    },
                                    {
                                      "value": "False",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "else:\n        autogpt_libs.logging.config.configure_logging(force_cloud_logging=True)",
                  "children": [
                    {
                      "value": "autogpt_libs.logging.config.configure_logging(force_cloud_logging=True)",
                      "children": [
                        {
                          "value": "autogpt_libs.logging.config.configure_logging(force_cloud_logging=True)",
                          "children": [
                            {
                              "value": "autogpt_libs.logging.config.configure_logging(force_cloud_logging=True)",
                              "children": [
                                {
                                  "value": "autogpt_libs.logging.config.configure_logging",
                                  "children": [
                                    {
                                      "value": "autogpt_libs.logging.config",
                                      "children": [
                                        {
                                          "value": "autogpt_libs.logging",
                                          "children": [
                                            {
                                              "value": "autogpt_libs",
                                              "children": []
                                            },
                                            {
                                              "value": "logging",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "config",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "configure_logging",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(force_cloud_logging=True)",
                                  "children": [
                                    {
                                      "value": "force_cloud_logging=True",
                                      "children": [
                                        {
                                          "value": "force_cloud_logging",
                                          "children": []
                                        },
                                        {
                                          "value": "True",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Silence httpx logger",
              "children": []
            },
            {
              "value": "logging.getLogger(\"httpx\").setLevel(logging.WARNING)",
              "children": [
                {
                  "value": "logging.getLogger(\"httpx\").setLevel(logging.WARNING)",
                  "children": [
                    {
                      "value": "logging.getLogger(\"httpx\").setLevel",
                      "children": [
                        {
                          "value": "logging.getLogger(\"httpx\")",
                          "children": [
                            {
                              "value": "logging.getLogger",
                              "children": [
                                {
                                  "value": "logging",
                                  "children": []
                                },
                                {
                                  "value": "getLogger",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\"httpx\")",
                              "children": [
                                {
                                  "value": "\"httpx\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "httpx",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "setLevel",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "(logging.WARNING)",
                      "children": [
                        {
                          "value": "logging.WARNING",
                          "children": [
                            {
                              "value": "logging",
                              "children": []
                            },
                            {
                              "value": "WARNING",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}