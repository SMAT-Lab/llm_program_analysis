{
  "value": "import pytest\n\nfrom backend.util.request import validate_url\n\n\ndef test_validate_url():\n    # Rejected IP ranges\n    with pytest.raises(ValueError):\n        validate_url(\"localhost\", [])\n\n    with pytest.raises(ValueError):\n        validate_url(\"192.168.1.1\", [])\n\n    with pytest.raises(ValueError):\n        validate_url(\"127.0.0.1\", [])\n\n    with pytest.raises(ValueError):\n        validate_url(\"0.0.0.0\", [])\n\n    # Normal URLs\n    assert validate_url(\"google.com/a?b=c\", []) == \"http://google.com/a?b=c\"\n    assert validate_url(\"github.com?key=!@!@\", []) == \"http://github.com?key=!@!@\"\n\n    # Scheme Enforcement\n    with pytest.raises(ValueError):\n        validate_url(\"ftp://example.com\", [])\n    with pytest.raises(ValueError):\n        validate_url(\"file://example.com\", [])\n\n    # International domain that converts to punycode - should be allowed if public\n    assert validate_url(\"http://xn--exmple-cua.com\", []) == \"http://xn--exmple-cua.com\"\n    # If the domain fails IDNA encoding or is invalid, it should raise an error\n    with pytest.raises(ValueError):\n        validate_url(\"http://exa\u25ccmple.com\", [])\n\n    # IPv6 Addresses\n    with pytest.raises(ValueError):\n        validate_url(\"::1\", [])  # IPv6 loopback should be blocked\n    with pytest.raises(ValueError):\n        validate_url(\"http://[::1]\", [])  # IPv6 loopback in URL form\n\n    # Suspicious Characters in Hostname\n    with pytest.raises(ValueError):\n        validate_url(\"http://example_underscore.com\", [])\n    with pytest.raises(ValueError):\n        validate_url(\"http://exa mple.com\", [])  # Space in hostname\n\n    # Malformed URLs\n    with pytest.raises(ValueError):\n        validate_url(\"http://\", [])  # No hostname\n    with pytest.raises(ValueError):\n        validate_url(\"://missing-scheme\", [])  # Missing proper scheme\n\n    # Trusted Origins\n    trusted = [\"internal-api.company.com\", \"10.0.0.5\"]\n    assert (\n        validate_url(\"internal-api.company.com\", trusted)\n        == \"http://internal-api.company.com\"\n    )\n    assert validate_url(\"10.0.0.5\", [\"10.0.0.5\"]) == \"http://10.0.0.5\"\n\n    # Special Characters in Path or Query\n    assert (\n        validate_url(\"example.com/path%20with%20spaces\", [])\n        == \"http://example.com/path%20with%20spaces\"\n    )\n\n    # Backslashes should be replaced with forward slashes\n    assert (\n        validate_url(\"http://example.com\\\\backslash\", [])\n        == \"http://example.com/backslash\"\n    )\n\n    # Check defaulting scheme behavior for valid domains\n    assert validate_url(\"example.com\", []) == \"http://example.com\"\n    assert validate_url(\"https://secure.com\", []) == \"https://secure.com\"\n\n    # Non-ASCII Characters in Query/Fragment\n    assert validate_url(\"example.com?param=\u00e4\u00f6\u00fc\", []) == \"http://example.com?param=\u00e4\u00f6\u00fc\"",
  "children": [
    {
      "value": "import pytest",
      "children": [
        {
          "value": "pytest",
          "children": [
            {
              "value": "pytest",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.util.request import validate_url",
      "children": [
        {
          "value": "backend.util.request",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "util",
              "children": []
            },
            {
              "value": "request",
              "children": []
            }
          ]
        },
        {
          "value": "validate_url",
          "children": [
            {
              "value": "validate_url",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "def test_validate_url():\n    # Rejected IP ranges\n    with pytest.raises(ValueError):\n        validate_url(\"localhost\", [])\n\n    with pytest.raises(ValueError):\n        validate_url(\"192.168.1.1\", [])\n\n    with pytest.raises(ValueError):\n        validate_url(\"127.0.0.1\", [])\n\n    with pytest.raises(ValueError):\n        validate_url(\"0.0.0.0\", [])\n\n    # Normal URLs\n    assert validate_url(\"google.com/a?b=c\", []) == \"http://google.com/a?b=c\"\n    assert validate_url(\"github.com?key=!@!@\", []) == \"http://github.com?key=!@!@\"\n\n    # Scheme Enforcement\n    with pytest.raises(ValueError):\n        validate_url(\"ftp://example.com\", [])\n    with pytest.raises(ValueError):\n        validate_url(\"file://example.com\", [])\n\n    # International domain that converts to punycode - should be allowed if public\n    assert validate_url(\"http://xn--exmple-cua.com\", []) == \"http://xn--exmple-cua.com\"\n    # If the domain fails IDNA encoding or is invalid, it should raise an error\n    with pytest.raises(ValueError):\n        validate_url(\"http://exa\u25ccmple.com\", [])\n\n    # IPv6 Addresses\n    with pytest.raises(ValueError):\n        validate_url(\"::1\", [])  # IPv6 loopback should be blocked\n    with pytest.raises(ValueError):\n        validate_url(\"http://[::1]\", [])  # IPv6 loopback in URL form\n\n    # Suspicious Characters in Hostname\n    with pytest.raises(ValueError):\n        validate_url(\"http://example_underscore.com\", [])\n    with pytest.raises(ValueError):\n        validate_url(\"http://exa mple.com\", [])  # Space in hostname\n\n    # Malformed URLs\n    with pytest.raises(ValueError):\n        validate_url(\"http://\", [])  # No hostname\n    with pytest.raises(ValueError):\n        validate_url(\"://missing-scheme\", [])  # Missing proper scheme\n\n    # Trusted Origins\n    trusted = [\"internal-api.company.com\", \"10.0.0.5\"]\n    assert (\n        validate_url(\"internal-api.company.com\", trusted)\n        == \"http://internal-api.company.com\"\n    )\n    assert validate_url(\"10.0.0.5\", [\"10.0.0.5\"]) == \"http://10.0.0.5\"\n\n    # Special Characters in Path or Query\n    assert (\n        validate_url(\"example.com/path%20with%20spaces\", [])\n        == \"http://example.com/path%20with%20spaces\"\n    )\n\n    # Backslashes should be replaced with forward slashes\n    assert (\n        validate_url(\"http://example.com\\\\backslash\", [])\n        == \"http://example.com/backslash\"\n    )\n\n    # Check defaulting scheme behavior for valid domains\n    assert validate_url(\"example.com\", []) == \"http://example.com\"\n    assert validate_url(\"https://secure.com\", []) == \"https://secure.com\"\n\n    # Non-ASCII Characters in Query/Fragment\n    assert validate_url(\"example.com?param=\u00e4\u00f6\u00fc\", []) == \"http://example.com?param=\u00e4\u00f6\u00fc\"",
      "children": [
        {
          "value": "test_validate_url",
          "children": []
        },
        {
          "value": "()",
          "children": []
        },
        {
          "value": "# Rejected IP ranges",
          "children": []
        },
        {
          "value": "with pytest.raises(ValueError):\n        validate_url(\"localhost\", [])\n\n    with pytest.raises(ValueError):\n        validate_url(\"192.168.1.1\", [])\n\n    with pytest.raises(ValueError):\n        validate_url(\"127.0.0.1\", [])\n\n    with pytest.raises(ValueError):\n        validate_url(\"0.0.0.0\", [])\n\n    # Normal URLs\n    assert validate_url(\"google.com/a?b=c\", []) == \"http://google.com/a?b=c\"\n    assert validate_url(\"github.com?key=!@!@\", []) == \"http://github.com?key=!@!@\"\n\n    # Scheme Enforcement\n    with pytest.raises(ValueError):\n        validate_url(\"ftp://example.com\", [])\n    with pytest.raises(ValueError):\n        validate_url(\"file://example.com\", [])\n\n    # International domain that converts to punycode - should be allowed if public\n    assert validate_url(\"http://xn--exmple-cua.com\", []) == \"http://xn--exmple-cua.com\"\n    # If the domain fails IDNA encoding or is invalid, it should raise an error\n    with pytest.raises(ValueError):\n        validate_url(\"http://exa\u25ccmple.com\", [])\n\n    # IPv6 Addresses\n    with pytest.raises(ValueError):\n        validate_url(\"::1\", [])  # IPv6 loopback should be blocked\n    with pytest.raises(ValueError):\n        validate_url(\"http://[::1]\", [])  # IPv6 loopback in URL form\n\n    # Suspicious Characters in Hostname\n    with pytest.raises(ValueError):\n        validate_url(\"http://example_underscore.com\", [])\n    with pytest.raises(ValueError):\n        validate_url(\"http://exa mple.com\", [])  # Space in hostname\n\n    # Malformed URLs\n    with pytest.raises(ValueError):\n        validate_url(\"http://\", [])  # No hostname\n    with pytest.raises(ValueError):\n        validate_url(\"://missing-scheme\", [])  # Missing proper scheme\n\n    # Trusted Origins\n    trusted = [\"internal-api.company.com\", \"10.0.0.5\"]\n    assert (\n        validate_url(\"internal-api.company.com\", trusted)\n        == \"http://internal-api.company.com\"\n    )\n    assert validate_url(\"10.0.0.5\", [\"10.0.0.5\"]) == \"http://10.0.0.5\"\n\n    # Special Characters in Path or Query\n    assert (\n        validate_url(\"example.com/path%20with%20spaces\", [])\n        == \"http://example.com/path%20with%20spaces\"\n    )\n\n    # Backslashes should be replaced with forward slashes\n    assert (\n        validate_url(\"http://example.com\\\\backslash\", [])\n        == \"http://example.com/backslash\"\n    )\n\n    # Check defaulting scheme behavior for valid domains\n    assert validate_url(\"example.com\", []) == \"http://example.com\"\n    assert validate_url(\"https://secure.com\", []) == \"https://secure.com\"\n\n    # Non-ASCII Characters in Query/Fragment\n    assert validate_url(\"example.com?param=\u00e4\u00f6\u00fc\", []) == \"http://example.com?param=\u00e4\u00f6\u00fc\"",
          "children": [
            {
              "value": "with pytest.raises(ValueError):\n        validate_url(\"localhost\", [])",
              "children": [
                {
                  "value": "pytest.raises(ValueError)",
                  "children": [
                    {
                      "value": "pytest.raises(ValueError)",
                      "children": [
                        {
                          "value": "pytest.raises(ValueError)",
                          "children": [
                            {
                              "value": "pytest.raises",
                              "children": [
                                {
                                  "value": "pytest",
                                  "children": []
                                },
                                {
                                  "value": "raises",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(ValueError)",
                              "children": [
                                {
                                  "value": "ValueError",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "validate_url(\"localhost\", [])",
                  "children": [
                    {
                      "value": "validate_url(\"localhost\", [])",
                      "children": [
                        {
                          "value": "validate_url(\"localhost\", [])",
                          "children": [
                            {
                              "value": "validate_url",
                              "children": []
                            },
                            {
                              "value": "(\"localhost\", [])",
                              "children": [
                                {
                                  "value": "\"localhost\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "localhost",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "[]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "with pytest.raises(ValueError):\n        validate_url(\"192.168.1.1\", [])",
              "children": [
                {
                  "value": "pytest.raises(ValueError)",
                  "children": [
                    {
                      "value": "pytest.raises(ValueError)",
                      "children": [
                        {
                          "value": "pytest.raises(ValueError)",
                          "children": [
                            {
                              "value": "pytest.raises",
                              "children": [
                                {
                                  "value": "pytest",
                                  "children": []
                                },
                                {
                                  "value": "raises",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(ValueError)",
                              "children": [
                                {
                                  "value": "ValueError",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "validate_url(\"192.168.1.1\", [])",
                  "children": [
                    {
                      "value": "validate_url(\"192.168.1.1\", [])",
                      "children": [
                        {
                          "value": "validate_url(\"192.168.1.1\", [])",
                          "children": [
                            {
                              "value": "validate_url",
                              "children": []
                            },
                            {
                              "value": "(\"192.168.1.1\", [])",
                              "children": [
                                {
                                  "value": "\"192.168.1.1\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "192.168.1.1",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "[]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "with pytest.raises(ValueError):\n        validate_url(\"127.0.0.1\", [])",
              "children": [
                {
                  "value": "pytest.raises(ValueError)",
                  "children": [
                    {
                      "value": "pytest.raises(ValueError)",
                      "children": [
                        {
                          "value": "pytest.raises(ValueError)",
                          "children": [
                            {
                              "value": "pytest.raises",
                              "children": [
                                {
                                  "value": "pytest",
                                  "children": []
                                },
                                {
                                  "value": "raises",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(ValueError)",
                              "children": [
                                {
                                  "value": "ValueError",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "validate_url(\"127.0.0.1\", [])",
                  "children": [
                    {
                      "value": "validate_url(\"127.0.0.1\", [])",
                      "children": [
                        {
                          "value": "validate_url(\"127.0.0.1\", [])",
                          "children": [
                            {
                              "value": "validate_url",
                              "children": []
                            },
                            {
                              "value": "(\"127.0.0.1\", [])",
                              "children": [
                                {
                                  "value": "\"127.0.0.1\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "127.0.0.1",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "[]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "with pytest.raises(ValueError):\n        validate_url(\"0.0.0.0\", [])",
              "children": [
                {
                  "value": "pytest.raises(ValueError)",
                  "children": [
                    {
                      "value": "pytest.raises(ValueError)",
                      "children": [
                        {
                          "value": "pytest.raises(ValueError)",
                          "children": [
                            {
                              "value": "pytest.raises",
                              "children": [
                                {
                                  "value": "pytest",
                                  "children": []
                                },
                                {
                                  "value": "raises",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(ValueError)",
                              "children": [
                                {
                                  "value": "ValueError",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "validate_url(\"0.0.0.0\", [])",
                  "children": [
                    {
                      "value": "validate_url(\"0.0.0.0\", [])",
                      "children": [
                        {
                          "value": "validate_url(\"0.0.0.0\", [])",
                          "children": [
                            {
                              "value": "validate_url",
                              "children": []
                            },
                            {
                              "value": "(\"0.0.0.0\", [])",
                              "children": [
                                {
                                  "value": "\"0.0.0.0\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "0.0.0.0",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "[]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Normal URLs",
              "children": []
            },
            {
              "value": "assert validate_url(\"google.com/a?b=c\", []) == \"http://google.com/a?b=c\"",
              "children": [
                {
                  "value": "validate_url(\"google.com/a?b=c\", []) == \"http://google.com/a?b=c\"",
                  "children": [
                    {
                      "value": "validate_url(\"google.com/a?b=c\", [])",
                      "children": [
                        {
                          "value": "validate_url",
                          "children": []
                        },
                        {
                          "value": "(\"google.com/a?b=c\", [])",
                          "children": [
                            {
                              "value": "\"google.com/a?b=c\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "google.com/a?b=c",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "[]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "\"http://google.com/a?b=c\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "http://google.com/a?b=c",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "assert validate_url(\"github.com?key=!@!@\", []) == \"http://github.com?key=!@!@\"",
              "children": [
                {
                  "value": "validate_url(\"github.com?key=!@!@\", []) == \"http://github.com?key=!@!@\"",
                  "children": [
                    {
                      "value": "validate_url(\"github.com?key=!@!@\", [])",
                      "children": [
                        {
                          "value": "validate_url",
                          "children": []
                        },
                        {
                          "value": "(\"github.com?key=!@!@\", [])",
                          "children": [
                            {
                              "value": "\"github.com?key=!@!@\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "github.com?key=!@!@",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "[]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "\"http://github.com?key=!@!@\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "http://github.com?key=!@!@",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Scheme Enforcement",
              "children": []
            },
            {
              "value": "with pytest.raises(ValueError):\n        validate_url(\"ftp://example.com\", [])",
              "children": [
                {
                  "value": "pytest.raises(ValueError)",
                  "children": [
                    {
                      "value": "pytest.raises(ValueError)",
                      "children": [
                        {
                          "value": "pytest.raises(ValueError)",
                          "children": [
                            {
                              "value": "pytest.raises",
                              "children": [
                                {
                                  "value": "pytest",
                                  "children": []
                                },
                                {
                                  "value": "raises",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(ValueError)",
                              "children": [
                                {
                                  "value": "ValueError",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "validate_url(\"ftp://example.com\", [])",
                  "children": [
                    {
                      "value": "validate_url(\"ftp://example.com\", [])",
                      "children": [
                        {
                          "value": "validate_url(\"ftp://example.com\", [])",
                          "children": [
                            {
                              "value": "validate_url",
                              "children": []
                            },
                            {
                              "value": "(\"ftp://example.com\", [])",
                              "children": [
                                {
                                  "value": "\"ftp://example.com\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "ftp://example.com",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "[]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "with pytest.raises(ValueError):\n        validate_url(\"file://example.com\", [])",
              "children": [
                {
                  "value": "pytest.raises(ValueError)",
                  "children": [
                    {
                      "value": "pytest.raises(ValueError)",
                      "children": [
                        {
                          "value": "pytest.raises(ValueError)",
                          "children": [
                            {
                              "value": "pytest.raises",
                              "children": [
                                {
                                  "value": "pytest",
                                  "children": []
                                },
                                {
                                  "value": "raises",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(ValueError)",
                              "children": [
                                {
                                  "value": "ValueError",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "validate_url(\"file://example.com\", [])",
                  "children": [
                    {
                      "value": "validate_url(\"file://example.com\", [])",
                      "children": [
                        {
                          "value": "validate_url(\"file://example.com\", [])",
                          "children": [
                            {
                              "value": "validate_url",
                              "children": []
                            },
                            {
                              "value": "(\"file://example.com\", [])",
                              "children": [
                                {
                                  "value": "\"file://example.com\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "file://example.com",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "[]",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# International domain that converts to punycode - should be allowed if public",
              "children": []
            },
            {
              "value": "assert validate_url(\"http://xn--exmple-cua.com\", []) == \"http://xn--exmple-cua.com\"",
              "children": [
                {
                  "value": "validate_url(\"http://xn--exmple-cua.com\", []) == \"http://xn--exmple-cua.com\"",
                  "children": [
                    {
                      "value": "validate_url(\"http://xn--exmple-cua.com\", [])",
                      "children": [
                        {
                          "value": "validate_url",
                          "children": []
                        },
                        {
                          "value": "(\"http://xn--exmple-cua.com\", [])",
                          "children": [
                            {
                              "value": "\"http://xn--exmple-cua.com\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "http://xn--exmple-cua.com",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "[]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "\"http://xn--exmple-cua.com\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "http://xn--exmple-cua.com",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# If the domain fails IDNA encoding or is invalid, it should raise an error",
              "children": []
            },
            {
              "value": "with pytest.raises(ValueError):\n        validate_url(\"http://exa\u25ccmple.com\", [])",
              "children": [
                {
                  "value": "pytest.raises(ValueError)",
                  "children": [
                    {
                      "value": "pytest.raises(ValueError)",
                      "children": [
                        {
                          "value": "pytest.raises(ValueError)",
                          "children": [
                            {
                              "value": "pytest.raises",
                              "children": [
                                {
                                  "value": "pytest",
                                  "children": []
                                },
                                {
                                  "value": "raises",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(ValueError)",
                              "children": [
                                {
                                  "value": "ValueError",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "validate_url(\"http://exa\u25ccmple.com\", [])",
                  "children": [
                    {
                      "value": "validate_url(\"http://exa\u25ccmple.com\", [])",
                      "children": [
                        {
                          "value": "validate_url(\"http://exa\u25ccmple.com\", [])",
                          "children": [
                            {
                              "value": "validate_url",
                              "children": []
                            },
                            {
                              "value": "(\"http://exa\u25ccmple.com\", [])",
                              "children": [
                                {
                                  "value": "\"http://exa\u25ccmple.com\",",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "http://exa\u25ccmple.com\",",
                                      "children": []
                                    },
                                    {
                                      "value": "",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "IPv6 Addresses",
              "children": []
            },
            {
              "value": "th pytest.raises(ValueError):\n        validate_url(\"::1\", [])  # IPv6 loopback should be blocked",
              "children": [
                {
                  "value": "test.raises(ValueError):",
                  "children": [
                    {
                      "value": "test.raises(ValueError):",
                      "children": [
                        {
                          "value": "test.raises(ValueError):",
                          "children": [
                            {
                              "value": "test.raises(V",
                              "children": [
                                {
                                  "value": "test.r",
                                  "children": []
                                },
                                {
                                  "value": "ises(V",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "alueError):",
                              "children": [
                                {
                                  "value": "lueError):",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "lidate_url(\"::1\", [])  # IPv6 loopback should be blocked",
                  "children": [
                    {
                      "value": "lidate_url(\"::1\", [])",
                      "children": [
                        {
                          "value": "lidate_url(\"::1\", [])",
                          "children": [
                            {
                              "value": "lidate_url(\"",
                              "children": []
                            },
                            {
                              "value": "::1\", [])",
                              "children": [
                                {
                                  "value": ":1\",",
                                  "children": [
                                    {
                                      "value": ":",
                                      "children": []
                                    },
                                    {
                                      "value": "1\",",
                                      "children": []
                                    },
                                    {
                                      "value": "",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "IPv6 loopback should be blocked",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "th pytest.raises(ValueError):\n        validate_url(\"http://[::1]\", [])  # IPv6 loopback in URL form",
              "children": [
                {
                  "value": "test.raises(ValueError):",
                  "children": [
                    {
                      "value": "test.raises(ValueError):",
                      "children": [
                        {
                          "value": "test.raises(ValueError):",
                          "children": [
                            {
                              "value": "test.raises(V",
                              "children": [
                                {
                                  "value": "test.r",
                                  "children": []
                                },
                                {
                                  "value": "ises(V",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "alueError):",
                              "children": [
                                {
                                  "value": "lueError):",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "lidate_url(\"http://[::1]\", [])  # IPv6 loopback in URL form",
                  "children": [
                    {
                      "value": "lidate_url(\"http://[::1]\", [])",
                      "children": [
                        {
                          "value": "lidate_url(\"http://[::1]\", [])",
                          "children": [
                            {
                              "value": "lidate_url(\"",
                              "children": []
                            },
                            {
                              "value": "http://[::1]\", [])",
                              "children": [
                                {
                                  "value": "ttp://[::1]\",",
                                  "children": [
                                    {
                                      "value": "t",
                                      "children": []
                                    },
                                    {
                                      "value": "tp://[::1]\",",
                                      "children": []
                                    },
                                    {
                                      "value": "",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "IPv6 loopback in URL form",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "Suspicious Characters in Hostname",
              "children": []
            },
            {
              "value": "th pytest.raises(ValueError):\n        validate_url(\"http://example_underscore.com\", [])",
              "children": [
                {
                  "value": "test.raises(ValueError):",
                  "children": [
                    {
                      "value": "test.raises(ValueError):",
                      "children": [
                        {
                          "value": "test.raises(ValueError):",
                          "children": [
                            {
                              "value": "test.raises(V",
                              "children": [
                                {
                                  "value": "test.r",
                                  "children": []
                                },
                                {
                                  "value": "ises(V",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "alueError):",
                              "children": [
                                {
                                  "value": "lueError):",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "lidate_url(\"http://example_underscore.com\", [])",
                  "children": [
                    {
                      "value": "lidate_url(\"http://example_underscore.com\", [])",
                      "children": [
                        {
                          "value": "lidate_url(\"http://example_underscore.com\", [])",
                          "children": [
                            {
                              "value": "lidate_url(\"",
                              "children": []
                            },
                            {
                              "value": "http://example_underscore.com\", [])",
                              "children": [
                                {
                                  "value": "ttp://example_underscore.com\",",
                                  "children": [
                                    {
                                      "value": "t",
                                      "children": []
                                    },
                                    {
                                      "value": "tp://example_underscore.com\",",
                                      "children": []
                                    },
                                    {
                                      "value": "",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "th pytest.raises(ValueError):\n        validate_url(\"http://exa mple.com\", [])  # Space in hostname",
              "children": [
                {
                  "value": "test.raises(ValueError):",
                  "children": [
                    {
                      "value": "test.raises(ValueError):",
                      "children": [
                        {
                          "value": "test.raises(ValueError):",
                          "children": [
                            {
                              "value": "test.raises(V",
                              "children": [
                                {
                                  "value": "test.r",
                                  "children": []
                                },
                                {
                                  "value": "ises(V",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "alueError):",
                              "children": [
                                {
                                  "value": "lueError):",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "lidate_url(\"http://exa mple.com\", [])  # Space in hostname",
                  "children": [
                    {
                      "value": "lidate_url(\"http://exa mple.com\", [])",
                      "children": [
                        {
                          "value": "lidate_url(\"http://exa mple.com\", [])",
                          "children": [
                            {
                              "value": "lidate_url(\"",
                              "children": []
                            },
                            {
                              "value": "http://exa mple.com\", [])",
                              "children": [
                                {
                                  "value": "ttp://exa mple.com\",",
                                  "children": [
                                    {
                                      "value": "t",
                                      "children": []
                                    },
                                    {
                                      "value": "tp://exa mple.com\",",
                                      "children": []
                                    },
                                    {
                                      "value": "",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "Space in hostname",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "Malformed URLs",
              "children": []
            },
            {
              "value": "th pytest.raises(ValueError):\n        validate_url(\"http://\", [])  # No hostname",
              "children": [
                {
                  "value": "test.raises(ValueError):",
                  "children": [
                    {
                      "value": "test.raises(ValueError):",
                      "children": [
                        {
                          "value": "test.raises(ValueError):",
                          "children": [
                            {
                              "value": "test.raises(V",
                              "children": [
                                {
                                  "value": "test.r",
                                  "children": []
                                },
                                {
                                  "value": "ises(V",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "alueError):",
                              "children": [
                                {
                                  "value": "lueError):",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "lidate_url(\"http://\", [])  # No hostname",
                  "children": [
                    {
                      "value": "lidate_url(\"http://\", [])",
                      "children": [
                        {
                          "value": "lidate_url(\"http://\", [])",
                          "children": [
                            {
                              "value": "lidate_url(\"",
                              "children": []
                            },
                            {
                              "value": "http://\", [])",
                              "children": [
                                {
                                  "value": "ttp://\",",
                                  "children": [
                                    {
                                      "value": "t",
                                      "children": []
                                    },
                                    {
                                      "value": "tp://\",",
                                      "children": []
                                    },
                                    {
                                      "value": "",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "No hostname",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "th pytest.raises(ValueError):\n        validate_url(\"://missing-scheme\", [])  # Missing proper scheme",
              "children": [
                {
                  "value": "test.raises(ValueError):",
                  "children": [
                    {
                      "value": "test.raises(ValueError):",
                      "children": [
                        {
                          "value": "test.raises(ValueError):",
                          "children": [
                            {
                              "value": "test.raises(V",
                              "children": [
                                {
                                  "value": "test.r",
                                  "children": []
                                },
                                {
                                  "value": "ises(V",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "alueError):",
                              "children": [
                                {
                                  "value": "lueError):",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "lidate_url(\"://missing-scheme\", [])  # Missing proper scheme",
                  "children": [
                    {
                      "value": "lidate_url(\"://missing-scheme\", [])",
                      "children": [
                        {
                          "value": "lidate_url(\"://missing-scheme\", [])",
                          "children": [
                            {
                              "value": "lidate_url(\"",
                              "children": []
                            },
                            {
                              "value": "://missing-scheme\", [])",
                              "children": [
                                {
                                  "value": "//missing-scheme\",",
                                  "children": [
                                    {
                                      "value": "/",
                                      "children": []
                                    },
                                    {
                                      "value": "/missing-scheme\",",
                                      "children": []
                                    },
                                    {
                                      "value": "",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "Missing proper scheme",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "Trusted Origins",
              "children": []
            },
            {
              "value": "usted = [\"internal-api.company.com\", \"10.0.0.5\"]",
              "children": [
                {
                  "value": "usted = [\"internal-api.company.com\", \"10.0.0.5\"]",
                  "children": [
                    {
                      "value": "usted =",
                      "children": []
                    },
                    {
                      "value": "internal-api.company.com\", \"10.0.0.5\"]",
                      "children": [
                        {
                          "value": "nternal-api.company.com\",",
                          "children": [
                            {
                              "value": "n",
                              "children": []
                            },
                            {
                              "value": "ternal-api.company.com\",",
                              "children": []
                            },
                            {
                              "value": "",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "0.0.0.5\"]",
                          "children": [
                            {
                              "value": "0",
                              "children": []
                            },
                            {
                              "value": ".0.0.5\"]",
                              "children": []
                            },
                            {
                              "value": "",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "sert (\n        validate_url(\"internal-api.company.com\", trusted)\n        == \"http://internal-api.company.com\"\n    )",
              "children": [
                {
                  "value": "validate_url(\"internal-api.company.com\", trusted)\n        == \"http://internal-api.company.com\"\n    )",
                  "children": [
                    {
                      "value": "lidate_url(\"internal-api.company.com\", trusted)\n        == \"http://internal-api.company.com\"",
                      "children": [
                        {
                          "value": "lidate_url(\"internal-api.company.com\", trusted)",
                          "children": [
                            {
                              "value": "lidate_url(\"",
                              "children": []
                            },
                            {
                              "value": "internal-api.company.com\", trusted)",
                              "children": [
                                {
                                  "value": "nternal-api.company.com\",",
                                  "children": [
                                    {
                                      "value": "n",
                                      "children": []
                                    },
                                    {
                                      "value": "ternal-api.company.com\",",
                                      "children": []
                                    },
                                    {
                                      "value": "",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "usted)",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "ttp://internal-api.company.com\"",
                          "children": [
                            {
                              "value": "t",
                              "children": []
                            },
                            {
                              "value": "tp://internal-api.company.com\"",
                              "children": []
                            },
                            {
                              "value": "",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "sert validate_url(\"10.0.0.5\", [\"10.0.0.5\"]) == \"http://10.0.0.5\"",
              "children": [
                {
                  "value": "lidate_url(\"10.0.0.5\", [\"10.0.0.5\"]) == \"http://10.0.0.5\"",
                  "children": [
                    {
                      "value": "lidate_url(\"10.0.0.5\", [\"10.0.0.5\"]) =",
                      "children": [
                        {
                          "value": "lidate_url(\"",
                          "children": []
                        },
                        {
                          "value": "10.0.0.5\", [\"10.0.0.5\"]) =",
                          "children": [
                            {
                              "value": "0.0.0.5\",",
                              "children": [
                                {
                                  "value": "0",
                                  "children": []
                                },
                                {
                                  "value": ".0.0.5\",",
                                  "children": []
                                },
                                {
                                  "value": "",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "10.0.0.5\"])",
                              "children": [
                                {
                                  "value": "0.0.0.5\"])",
                                  "children": [
                                    {
                                      "value": "0",
                                      "children": []
                                    },
                                    {
                                      "value": ".0.0.5\"]",
                                      "children": []
                                    },
                                    {
                                      "value": ")",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "ttp://10.0.0.5\"",
                      "children": [
                        {
                          "value": "t",
                          "children": []
                        },
                        {
                          "value": "tp://10.0.0.5\"",
                          "children": []
                        },
                        {
                          "value": "",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "Special Characters in Path or Query",
              "children": []
            },
            {
              "value": "sert (\n        validate_url(\"example.com/path%20with%20spaces\", [])\n        == \"http://example.com/path%20with%20spaces\"\n    )",
              "children": [
                {
                  "value": "validate_url(\"example.com/path%20with%20spaces\", [])\n        == \"http://example.com/path%20with%20spaces\"\n    )",
                  "children": [
                    {
                      "value": "lidate_url(\"example.com/path%20with%20spaces\", [])\n        == \"http://example.com/path%20with%20spaces\"",
                      "children": [
                        {
                          "value": "lidate_url(\"example.com/path%20with%20spaces\", [])",
                          "children": [
                            {
                              "value": "lidate_url(\"",
                              "children": []
                            },
                            {
                              "value": "example.com/path%20with%20spaces\", [])",
                              "children": [
                                {
                                  "value": "xample.com/path%20with%20spaces\",",
                                  "children": [
                                    {
                                      "value": "x",
                                      "children": []
                                    },
                                    {
                                      "value": "ample.com/path%20with%20spaces\",",
                                      "children": []
                                    },
                                    {
                                      "value": "",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "ttp://example.com/path%20with%20spaces\"",
                          "children": [
                            {
                              "value": "t",
                              "children": []
                            },
                            {
                              "value": "tp://example.com/path%20with%20spaces\"",
                              "children": []
                            },
                            {
                              "value": "",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "Backslashes should be replaced with forward slashes",
              "children": []
            },
            {
              "value": "sert (\n        validate_url(\"http://example.com\\\\backslash\", [])\n        == \"http://example.com/backslash\"\n    )",
              "children": [
                {
                  "value": "validate_url(\"http://example.com\\\\backslash\", [])\n        == \"http://example.com/backslash\"\n    )",
                  "children": [
                    {
                      "value": "lidate_url(\"http://example.com\\\\backslash\", [])\n        == \"http://example.com/backslash\"",
                      "children": [
                        {
                          "value": "lidate_url(\"http://example.com\\\\backslash\", [])",
                          "children": [
                            {
                              "value": "lidate_url(\"",
                              "children": []
                            },
                            {
                              "value": "http://example.com\\\\backslash\", [])",
                              "children": [
                                {
                                  "value": "ttp://example.com\\\\backslash\",",
                                  "children": [
                                    {
                                      "value": "t",
                                      "children": []
                                    },
                                    {
                                      "value": "tp://example.com\\\\backslash\",",
                                      "children": [
                                        {
                                          "value": "ba",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": ")",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "ttp://example.com/backslash\"",
                          "children": [
                            {
                              "value": "t",
                              "children": []
                            },
                            {
                              "value": "tp://example.com/backslash\"",
                              "children": []
                            },
                            {
                              "value": "",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "Check defaulting scheme behavior for valid domains",
              "children": []
            },
            {
              "value": "sert validate_url(\"example.com\", []) == \"http://example.com\"",
              "children": [
                {
                  "value": "lidate_url(\"example.com\", []) == \"http://example.com\"",
                  "children": [
                    {
                      "value": "lidate_url(\"example.com\", []) =",
                      "children": [
                        {
                          "value": "lidate_url(\"",
                          "children": []
                        },
                        {
                          "value": "example.com\", []) =",
                          "children": [
                            {
                              "value": "xample.com\",",
                              "children": [
                                {
                                  "value": "x",
                                  "children": []
                                },
                                {
                                  "value": "ample.com\",",
                                  "children": []
                                },
                                {
                                  "value": "",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "ttp://example.com\"",
                      "children": [
                        {
                          "value": "t",
                          "children": []
                        },
                        {
                          "value": "tp://example.com\"",
                          "children": []
                        },
                        {
                          "value": "",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "sert validate_url(\"https://secure.com\", []) == \"https://secure.com\"",
              "children": [
                {
                  "value": "lidate_url(\"https://secure.com\", []) == \"https://secure.com\"",
                  "children": [
                    {
                      "value": "lidate_url(\"https://secure.com\", []) =",
                      "children": [
                        {
                          "value": "lidate_url(\"",
                          "children": []
                        },
                        {
                          "value": "https://secure.com\", []) =",
                          "children": [
                            {
                              "value": "ttps://secure.com\",",
                              "children": [
                                {
                                  "value": "t",
                                  "children": []
                                },
                                {
                                  "value": "tps://secure.com\",",
                                  "children": []
                                },
                                {
                                  "value": "",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": ")",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "ttps://secure.com\"",
                      "children": [
                        {
                          "value": "t",
                          "children": []
                        },
                        {
                          "value": "tps://secure.com\"",
                          "children": []
                        },
                        {
                          "value": "",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "Non-ASCII Characters in Query/Fragment",
              "children": []
            },
            {
              "value": "sert validate_url(\"example.com?param=\u00e4\u00f6\u00fc\", []) == \"http://example.com?param=\u00e4\u00f6\u00fc\"",
              "children": [
                {
                  "value": "lidate_url(\"example.com?param=\u00e4\u00f6\u00fc\", []) == \"http://example.com?param=\u00e4\u00f6\u00fc\"",
                  "children": [
                    {
                      "value": "lidate_url(\"example.com?param=\u00e4\u00f6\u00fc\", []) == \"",
                      "children": [
                        {
                          "value": "lidate_url(\"",
                          "children": []
                        },
                        {
                          "value": "example.com?param=\u00e4\u00f6\u00fc\", []) == \"",
                          "children": [
                            {
                              "value": "xample.com?param=\u00e4\u00f6\u00fc\", [])",
                              "children": [
                                {
                                  "value": "x",
                                  "children": []
                                },
                                {
                                  "value": "ample.com?param=\u00e4\u00f6\u00fc\", []",
                                  "children": []
                                },
                                {
                                  "value": ")",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "=",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "://example.com?param=\u00e4\u00f6\u00fc\"",
                      "children": [
                        {
                          "value": ":",
                          "children": []
                        },
                        {
                          "value": "//example.com?param=\u00e4\u00f6\u00fc\"",
                          "children": []
                        },
                        {
                          "value": "",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}