{
  "value": "from backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import ContributorDetails, SchemaField\n\n\nclass ReadCsvBlock(Block):\n    class Input(BlockSchema):\n        contents: str = SchemaField(\n            description=\"The contents of the CSV file to read\",\n            placeholder=\"a, b, c\\n1,2,3\\n4,5,6\",\n        )\n        delimiter: str = SchemaField(\n            description=\"The delimiter used in the CSV file\",\n            default=\",\",\n        )\n        quotechar: str = SchemaField(\n            description=\"The character used to quote fields\",\n            default='\"',\n        )\n        escapechar: str = SchemaField(\n            description=\"The character used to escape the delimiter\",\n            default=\"\\\\\",\n        )\n        has_header: bool = SchemaField(\n            description=\"Whether the CSV file has a header row\",\n            default=True,\n        )\n        skip_rows: int = SchemaField(\n            description=\"The number of rows to skip from the start of the file\",\n            default=0,\n        )\n        strip: bool = SchemaField(\n            description=\"Whether to strip whitespace from the values\",\n            default=True,\n        )\n        skip_columns: list[str] = SchemaField(\n            description=\"The columns to skip from the start of the row\",\n            default=[],\n        )\n\n    class Output(BlockSchema):\n        row: dict[str, str] = SchemaField(\n            description=\"The data produced from each row in the CSV file\"\n        )\n        all_data: list[dict[str, str]] = SchemaField(\n            description=\"All the data in the CSV file as a list of rows\"\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"acf7625e-d2cb-4941-bfeb-2819fc6fc015\",\n            input_schema=ReadCsvBlock.Input,\n            output_schema=ReadCsvBlock.Output,\n            description=\"Reads a CSV file and outputs the data as a list of dictionaries and individual rows via rows.\",\n            contributors=[ContributorDetails(name=\"Nicholas Tindle\")],\n            categories={BlockCategory.TEXT, BlockCategory.DATA},\n            test_input={\n                \"contents\": \"a, b, c\\n1,2,3\\n4,5,6\",\n            },\n            test_output=[\n                (\"row\", {\"a\": \"1\", \"b\": \"2\", \"c\": \"3\"}),\n                (\"row\", {\"a\": \"4\", \"b\": \"5\", \"c\": \"6\"}),\n                (\n                    \"all_data\",\n                    [\n                        {\"a\": \"1\", \"b\": \"2\", \"c\": \"3\"},\n                        {\"a\": \"4\", \"b\": \"5\", \"c\": \"6\"},\n                    ],\n                ),\n            ],\n        )\n\n    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        import csv\n        from io import StringIO\n\n        csv_file = StringIO(input_data.contents)\n        reader = csv.reader(\n            csv_file,\n            delimiter=input_data.delimiter,\n            quotechar=input_data.quotechar,\n            escapechar=input_data.escapechar,\n        )\n\n        header = None\n        if input_data.has_header:\n            header = next(reader)\n            if input_data.strip:\n                header = [h.strip() for h in header]\n\n        for _ in range(input_data.skip_rows):\n            next(reader)\n\n        def process_row(row):\n            data = {}\n            for i, value in enumerate(row):\n                if i not in input_data.skip_columns:\n                    if input_data.has_header and header:\n                        data[header[i]] = value.strip() if input_data.strip else value\n                    else:\n                        data[str(i)] = value.strip() if input_data.strip else value\n            return data\n\n        all_data = []\n        for row in reader:\n            processed_row = process_row(row)\n            all_data.append(processed_row)\n            yield \"row\", processed_row\n\n        yield \"all_data\", all_data",
  "children": [
    {
      "value": "from backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema",
      "children": [
        {
          "value": "backend.data.block",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "data",
              "children": []
            },
            {
              "value": "block",
              "children": []
            }
          ]
        },
        {
          "value": "Block",
          "children": [
            {
              "value": "Block",
              "children": []
            }
          ]
        },
        {
          "value": "BlockCategory",
          "children": [
            {
              "value": "BlockCategory",
              "children": []
            }
          ]
        },
        {
          "value": "BlockOutput",
          "children": [
            {
              "value": "BlockOutput",
              "children": []
            }
          ]
        },
        {
          "value": "BlockSchema",
          "children": [
            {
              "value": "BlockSchema",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.data.model import ContributorDetails, SchemaField",
      "children": [
        {
          "value": "backend.data.model",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "data",
              "children": []
            },
            {
              "value": "model",
              "children": []
            }
          ]
        },
        {
          "value": "ContributorDetails",
          "children": [
            {
              "value": "ContributorDetails",
              "children": []
            }
          ]
        },
        {
          "value": "SchemaField",
          "children": [
            {
              "value": "SchemaField",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "class ReadCsvBlock(Block):\n    class Input(BlockSchema):\n        contents: str = SchemaField(\n            description=\"The contents of the CSV file to read\",\n            placeholder=\"a, b, c\\n1,2,3\\n4,5,6\",\n        )\n        delimiter: str = SchemaField(\n            description=\"The delimiter used in the CSV file\",\n            default=\",\",\n        )\n        quotechar: str = SchemaField(\n            description=\"The character used to quote fields\",\n            default='\"',\n        )\n        escapechar: str = SchemaField(\n            description=\"The character used to escape the delimiter\",\n            default=\"\\\\\",\n        )\n        has_header: bool = SchemaField(\n            description=\"Whether the CSV file has a header row\",\n            default=True,\n        )\n        skip_rows: int = SchemaField(\n            description=\"The number of rows to skip from the start of the file\",\n            default=0,\n        )\n        strip: bool = SchemaField(\n            description=\"Whether to strip whitespace from the values\",\n            default=True,\n        )\n        skip_columns: list[str] = SchemaField(\n            description=\"The columns to skip from the start of the row\",\n            default=[],\n        )\n\n    class Output(BlockSchema):\n        row: dict[str, str] = SchemaField(\n            description=\"The data produced from each row in the CSV file\"\n        )\n        all_data: list[dict[str, str]] = SchemaField(\n            description=\"All the data in the CSV file as a list of rows\"\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"acf7625e-d2cb-4941-bfeb-2819fc6fc015\",\n            input_schema=ReadCsvBlock.Input,\n            output_schema=ReadCsvBlock.Output,\n            description=\"Reads a CSV file and outputs the data as a list of dictionaries and individual rows via rows.\",\n            contributors=[ContributorDetails(name=\"Nicholas Tindle\")],\n            categories={BlockCategory.TEXT, BlockCategory.DATA},\n            test_input={\n                \"contents\": \"a, b, c\\n1,2,3\\n4,5,6\",\n            },\n            test_output=[\n                (\"row\", {\"a\": \"1\", \"b\": \"2\", \"c\": \"3\"}),\n                (\"row\", {\"a\": \"4\", \"b\": \"5\", \"c\": \"6\"}),\n                (\n                    \"all_data\",\n                    [\n                        {\"a\": \"1\", \"b\": \"2\", \"c\": \"3\"},\n                        {\"a\": \"4\", \"b\": \"5\", \"c\": \"6\"},\n                    ],\n                ),\n            ],\n        )\n\n    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        import csv\n        from io import StringIO\n\n        csv_file = StringIO(input_data.contents)\n        reader = csv.reader(\n            csv_file,\n            delimiter=input_data.delimiter,\n            quotechar=input_data.quotechar,\n            escapechar=input_data.escapechar,\n        )\n\n        header = None\n        if input_data.has_header:\n            header = next(reader)\n            if input_data.strip:\n                header = [h.strip() for h in header]\n\n        for _ in range(input_data.skip_rows):\n            next(reader)\n\n        def process_row(row):\n            data = {}\n            for i, value in enumerate(row):\n                if i not in input_data.skip_columns:\n                    if input_data.has_header and header:\n                        data[header[i]] = value.strip() if input_data.strip else value\n                    else:\n                        data[str(i)] = value.strip() if input_data.strip else value\n            return data\n\n        all_data = []\n        for row in reader:\n            processed_row = process_row(row)\n            all_data.append(processed_row)\n            yield \"row\", processed_row\n\n        yield \"all_data\", all_data",
      "children": [
        {
          "value": "ReadCsvBlock",
          "children": []
        },
        {
          "value": "(Block)",
          "children": [
            {
              "value": "Block",
              "children": []
            }
          ]
        },
        {
          "value": "class Input(BlockSchema):\n        contents: str = SchemaField(\n            description=\"The contents of the CSV file to read\",\n            placeholder=\"a, b, c\\n1,2,3\\n4,5,6\",\n        )\n        delimiter: str = SchemaField(\n            description=\"The delimiter used in the CSV file\",\n            default=\",\",\n        )\n        quotechar: str = SchemaField(\n            description=\"The character used to quote fields\",\n            default='\"',\n        )\n        escapechar: str = SchemaField(\n            description=\"The character used to escape the delimiter\",\n            default=\"\\\\\",\n        )\n        has_header: bool = SchemaField(\n            description=\"Whether the CSV file has a header row\",\n            default=True,\n        )\n        skip_rows: int = SchemaField(\n            description=\"The number of rows to skip from the start of the file\",\n            default=0,\n        )\n        strip: bool = SchemaField(\n            description=\"Whether to strip whitespace from the values\",\n            default=True,\n        )\n        skip_columns: list[str] = SchemaField(\n            description=\"The columns to skip from the start of the row\",\n            default=[],\n        )\n\n    class Output(BlockSchema):\n        row: dict[str, str] = SchemaField(\n            description=\"The data produced from each row in the CSV file\"\n        )\n        all_data: list[dict[str, str]] = SchemaField(\n            description=\"All the data in the CSV file as a list of rows\"\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"acf7625e-d2cb-4941-bfeb-2819fc6fc015\",\n            input_schema=ReadCsvBlock.Input,\n            output_schema=ReadCsvBlock.Output,\n            description=\"Reads a CSV file and outputs the data as a list of dictionaries and individual rows via rows.\",\n            contributors=[ContributorDetails(name=\"Nicholas Tindle\")],\n            categories={BlockCategory.TEXT, BlockCategory.DATA},\n            test_input={\n                \"contents\": \"a, b, c\\n1,2,3\\n4,5,6\",\n            },\n            test_output=[\n                (\"row\", {\"a\": \"1\", \"b\": \"2\", \"c\": \"3\"}),\n                (\"row\", {\"a\": \"4\", \"b\": \"5\", \"c\": \"6\"}),\n                (\n                    \"all_data\",\n                    [\n                        {\"a\": \"1\", \"b\": \"2\", \"c\": \"3\"},\n                        {\"a\": \"4\", \"b\": \"5\", \"c\": \"6\"},\n                    ],\n                ),\n            ],\n        )\n\n    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        import csv\n        from io import StringIO\n\n        csv_file = StringIO(input_data.contents)\n        reader = csv.reader(\n            csv_file,\n            delimiter=input_data.delimiter,\n            quotechar=input_data.quotechar,\n            escapechar=input_data.escapechar,\n        )\n\n        header = None\n        if input_data.has_header:\n            header = next(reader)\n            if input_data.strip:\n                header = [h.strip() for h in header]\n\n        for _ in range(input_data.skip_rows):\n            next(reader)\n\n        def process_row(row):\n            data = {}\n            for i, value in enumerate(row):\n                if i not in input_data.skip_columns:\n                    if input_data.has_header and header:\n                        data[header[i]] = value.strip() if input_data.strip else value\n                    else:\n                        data[str(i)] = value.strip() if input_data.strip else value\n            return data\n\n        all_data = []\n        for row in reader:\n            processed_row = process_row(row)\n            all_data.append(processed_row)\n            yield \"row\", processed_row\n\n        yield \"all_data\", all_data",
          "children": [
            {
              "value": "class Input(BlockSchema):\n        contents: str = SchemaField(\n            description=\"The contents of the CSV file to read\",\n            placeholder=\"a, b, c\\n1,2,3\\n4,5,6\",\n        )\n        delimiter: str = SchemaField(\n            description=\"The delimiter used in the CSV file\",\n            default=\",\",\n        )\n        quotechar: str = SchemaField(\n            description=\"The character used to quote fields\",\n            default='\"',\n        )\n        escapechar: str = SchemaField(\n            description=\"The character used to escape the delimiter\",\n            default=\"\\\\\",\n        )\n        has_header: bool = SchemaField(\n            description=\"Whether the CSV file has a header row\",\n            default=True,\n        )\n        skip_rows: int = SchemaField(\n            description=\"The number of rows to skip from the start of the file\",\n            default=0,\n        )\n        strip: bool = SchemaField(\n            description=\"Whether to strip whitespace from the values\",\n            default=True,\n        )\n        skip_columns: list[str] = SchemaField(\n            description=\"The columns to skip from the start of the row\",\n            default=[],\n        )",
              "children": [
                {
                  "value": "Input",
                  "children": []
                },
                {
                  "value": "(BlockSchema)",
                  "children": [
                    {
                      "value": "BlockSchema",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "contents: str = SchemaField(\n            description=\"The contents of the CSV file to read\",\n            placeholder=\"a, b, c\\n1,2,3\\n4,5,6\",\n        )\n        delimiter: str = SchemaField(\n            description=\"The delimiter used in the CSV file\",\n            default=\",\",\n        )\n        quotechar: str = SchemaField(\n            description=\"The character used to quote fields\",\n            default='\"',\n        )\n        escapechar: str = SchemaField(\n            description=\"The character used to escape the delimiter\",\n            default=\"\\\\\",\n        )\n        has_header: bool = SchemaField(\n            description=\"Whether the CSV file has a header row\",\n            default=True,\n        )\n        skip_rows: int = SchemaField(\n            description=\"The number of rows to skip from the start of the file\",\n            default=0,\n        )\n        strip: bool = SchemaField(\n            description=\"Whether to strip whitespace from the values\",\n            default=True,\n        )\n        skip_columns: list[str] = SchemaField(\n            description=\"The columns to skip from the start of the row\",\n            default=[],\n        )",
                  "children": [
                    {
                      "value": "contents: str = SchemaField(\n            description=\"The contents of the CSV file to read\",\n            placeholder=\"a, b, c\\n1,2,3\\n4,5,6\",\n        )",
                      "children": [
                        {
                          "value": "contents: str = SchemaField(\n            description=\"The contents of the CSV file to read\",\n            placeholder=\"a, b, c\\n1,2,3\\n4,5,6\",\n        )",
                          "children": [
                            {
                              "value": "contents",
                              "children": []
                            },
                            {
                              "value": "str",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            description=\"The contents of the CSV file to read\",\n            placeholder=\"a, b, c\\n1,2,3\\n4,5,6\",\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=\"The contents of the CSV file to read\",\n            placeholder=\"a, b, c\\n1,2,3\\n4,5,6\",\n        )",
                                  "children": [
                                    {
                                      "value": "description=\"The contents of the CSV file to read\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"The contents of the CSV file to read\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "The contents of the CSV file to read",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "placeholder=\"a, b, c\\n1,2,3\\n4,5,6\"",
                                      "children": [
                                        {
                                          "value": "placeholder",
                                          "children": []
                                        },
                                        {
                                          "value": "\"a, b, c\\n1,2,3\\n4,5,6\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "a, b, c\\n1,2,3\\n4,5,6",
                                              "children": [
                                                {
                                                  "value": "\\n",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\\n",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "delimiter: str = SchemaField(\n            description=\"The delimiter used in the CSV file\",\n            default=\",\",\n        )",
                      "children": [
                        {
                          "value": "delimiter: str = SchemaField(\n            description=\"The delimiter used in the CSV file\",\n            default=\",\",\n        )",
                          "children": [
                            {
                              "value": "delimiter",
                              "children": []
                            },
                            {
                              "value": "str",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            description=\"The delimiter used in the CSV file\",\n            default=\",\",\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=\"The delimiter used in the CSV file\",\n            default=\",\",\n        )",
                                  "children": [
                                    {
                                      "value": "description=\"The delimiter used in the CSV file\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"The delimiter used in the CSV file\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "The delimiter used in the CSV file",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "default=\",\"",
                                      "children": [
                                        {
                                          "value": "default",
                                          "children": []
                                        },
                                        {
                                          "value": "\",\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": ",",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "quotechar: str = SchemaField(\n            description=\"The character used to quote fields\",\n            default='\"',\n        )",
                      "children": [
                        {
                          "value": "quotechar: str = SchemaField(\n            description=\"The character used to quote fields\",\n            default='\"',\n        )",
                          "children": [
                            {
                              "value": "quotechar",
                              "children": []
                            },
                            {
                              "value": "str",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            description=\"The character used to quote fields\",\n            default='\"',\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=\"The character used to quote fields\",\n            default='\"',\n        )",
                                  "children": [
                                    {
                                      "value": "description=\"The character used to quote fields\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"The character used to quote fields\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "The character used to quote fields",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "default='\"'",
                                      "children": [
                                        {
                                          "value": "default",
                                          "children": []
                                        },
                                        {
                                          "value": "'\"'",
                                          "children": [
                                            {
                                              "value": "'",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "'",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "escapechar: str = SchemaField(\n            description=\"The character used to escape the delimiter\",\n            default=\"\\\\\",\n        )",
                      "children": [
                        {
                          "value": "escapechar: str = SchemaField(\n            description=\"The character used to escape the delimiter\",\n            default=\"\\\\\",\n        )",
                          "children": [
                            {
                              "value": "escapechar",
                              "children": []
                            },
                            {
                              "value": "str",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            description=\"The character used to escape the delimiter\",\n            default=\"\\\\\",\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=\"The character used to escape the delimiter\",\n            default=\"\\\\\",\n        )",
                                  "children": [
                                    {
                                      "value": "description=\"The character used to escape the delimiter\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"The character used to escape the delimiter\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "The character used to escape the delimiter",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "default=\"\\\\\"",
                                      "children": [
                                        {
                                          "value": "default",
                                          "children": []
                                        },
                                        {
                                          "value": "\"\\\\\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "\\\\",
                                              "children": [
                                                {
                                                  "value": "\\\\",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "has_header: bool = SchemaField(\n            description=\"Whether the CSV file has a header row\",\n            default=True,\n        )",
                      "children": [
                        {
                          "value": "has_header: bool = SchemaField(\n            description=\"Whether the CSV file has a header row\",\n            default=True,\n        )",
                          "children": [
                            {
                              "value": "has_header",
                              "children": []
                            },
                            {
                              "value": "bool",
                              "children": [
                                {
                                  "value": "bool",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            description=\"Whether the CSV file has a header row\",\n            default=True,\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=\"Whether the CSV file has a header row\",\n            default=True,\n        )",
                                  "children": [
                                    {
                                      "value": "description=\"Whether the CSV file has a header row\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Whether the CSV file has a header row\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Whether the CSV file has a header row",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "default=True",
                                      "children": [
                                        {
                                          "value": "default",
                                          "children": []
                                        },
                                        {
                                          "value": "True",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "skip_rows: int = SchemaField(\n            description=\"The number of rows to skip from the start of the file\",\n            default=0,\n        )",
                      "children": [
                        {
                          "value": "skip_rows: int = SchemaField(\n            description=\"The number of rows to skip from the start of the file\",\n            default=0,\n        )",
                          "children": [
                            {
                              "value": "skip_rows",
                              "children": []
                            },
                            {
                              "value": "int",
                              "children": [
                                {
                                  "value": "int",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            description=\"The number of rows to skip from the start of the file\",\n            default=0,\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=\"The number of rows to skip from the start of the file\",\n            default=0,\n        )",
                                  "children": [
                                    {
                                      "value": "description=\"The number of rows to skip from the start of the file\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"The number of rows to skip from the start of the file\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "The number of rows to skip from the start of the file",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "default=0",
                                      "children": [
                                        {
                                          "value": "default",
                                          "children": []
                                        },
                                        {
                                          "value": "0",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "strip: bool = SchemaField(\n            description=\"Whether to strip whitespace from the values\",\n            default=True,\n        )",
                      "children": [
                        {
                          "value": "strip: bool = SchemaField(\n            description=\"Whether to strip whitespace from the values\",\n            default=True,\n        )",
                          "children": [
                            {
                              "value": "strip",
                              "children": []
                            },
                            {
                              "value": "bool",
                              "children": [
                                {
                                  "value": "bool",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            description=\"Whether to strip whitespace from the values\",\n            default=True,\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=\"Whether to strip whitespace from the values\",\n            default=True,\n        )",
                                  "children": [
                                    {
                                      "value": "description=\"Whether to strip whitespace from the values\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Whether to strip whitespace from the values\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Whether to strip whitespace from the values",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "default=True",
                                      "children": [
                                        {
                                          "value": "default",
                                          "children": []
                                        },
                                        {
                                          "value": "True",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "skip_columns: list[str] = SchemaField(\n            description=\"The columns to skip from the start of the row\",\n            default=[],\n        )",
                      "children": [
                        {
                          "value": "skip_columns: list[str] = SchemaField(\n            description=\"The columns to skip from the start of the row\",\n            default=[],\n        )",
                          "children": [
                            {
                              "value": "skip_columns",
                              "children": []
                            },
                            {
                              "value": "list[str]",
                              "children": [
                                {
                                  "value": "list[str]",
                                  "children": [
                                    {
                                      "value": "list",
                                      "children": []
                                    },
                                    {
                                      "value": "[str]",
                                      "children": [
                                        {
                                          "value": "str",
                                          "children": [
                                            {
                                              "value": "str",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            description=\"The columns to skip from the start of the row\",\n            default=[],\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=\"The columns to skip from the start of the row\",\n            default=[],\n        )",
                                  "children": [
                                    {
                                      "value": "description=\"The columns to skip from the start of the row\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"The columns to skip from the start of the row\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "The columns to skip from the start of the row",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "default=[]",
                                      "children": [
                                        {
                                          "value": "default",
                                          "children": []
                                        },
                                        {
                                          "value": "[]",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "class Output(BlockSchema):\n        row: dict[str, str] = SchemaField(\n            description=\"The data produced from each row in the CSV file\"\n        )\n        all_data: list[dict[str, str]] = SchemaField(\n            description=\"All the data in the CSV file as a list of rows\"\n        )",
              "children": [
                {
                  "value": "Output",
                  "children": []
                },
                {
                  "value": "(BlockSchema)",
                  "children": [
                    {
                      "value": "BlockSchema",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "row: dict[str, str] = SchemaField(\n            description=\"The data produced from each row in the CSV file\"\n        )\n        all_data: list[dict[str, str]] = SchemaField(\n            description=\"All the data in the CSV file as a list of rows\"\n        )",
                  "children": [
                    {
                      "value": "row: dict[str, str] = SchemaField(\n            description=\"The data produced from each row in the CSV file\"\n        )",
                      "children": [
                        {
                          "value": "row: dict[str, str] = SchemaField(\n            description=\"The data produced from each row in the CSV file\"\n        )",
                          "children": [
                            {
                              "value": "row",
                              "children": []
                            },
                            {
                              "value": "dict[str, str]",
                              "children": [
                                {
                                  "value": "dict[str, str]",
                                  "children": [
                                    {
                                      "value": "dict",
                                      "children": []
                                    },
                                    {
                                      "value": "[str, str]",
                                      "children": [
                                        {
                                          "value": "str",
                                          "children": [
                                            {
                                              "value": "str",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "str",
                                          "children": [
                                            {
                                              "value": "str",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            description=\"The data produced from each row in the CSV file\"\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=\"The data produced from each row in the CSV file\"\n        )",
                                  "children": [
                                    {
                                      "value": "description=\"The data produced from each row in the CSV file\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"The data produced from each row in the CSV file\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "The data produced from each row in the CSV file",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "all_data: list[dict[str, str]] = SchemaField(\n            description=\"All the data in the CSV file as a list of rows\"\n        )",
                      "children": [
                        {
                          "value": "all_data: list[dict[str, str]] = SchemaField(\n            description=\"All the data in the CSV file as a list of rows\"\n        )",
                          "children": [
                            {
                              "value": "all_data",
                              "children": []
                            },
                            {
                              "value": "list[dict[str, str]]",
                              "children": [
                                {
                                  "value": "list[dict[str, str]]",
                                  "children": [
                                    {
                                      "value": "list",
                                      "children": []
                                    },
                                    {
                                      "value": "[dict[str, str]]",
                                      "children": [
                                        {
                                          "value": "dict[str, str]",
                                          "children": [
                                            {
                                              "value": "dict[str, str]",
                                              "children": [
                                                {
                                                  "value": "dict",
                                                  "children": []
                                                },
                                                {
                                                  "value": "[str, str]",
                                                  "children": [
                                                    {
                                                      "value": "str",
                                                      "children": [
                                                        {
                                                          "value": "str",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "str",
                                                      "children": [
                                                        {
                                                          "value": "str",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            description=\"All the data in the CSV file as a list of rows\"\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=\"All the data in the CSV file as a list of rows\"\n        )",
                                  "children": [
                                    {
                                      "value": "description=\"All the data in the CSV file as a list of rows\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"All the data in the CSV file as a list of rows\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "All the data in the CSV file as a list of rows",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def __init__(self):\n        super().__init__(\n            id=\"acf7625e-d2cb-4941-bfeb-2819fc6fc015\",\n            input_schema=ReadCsvBlock.Input,\n            output_schema=ReadCsvBlock.Output,\n            description=\"Reads a CSV file and outputs the data as a list of dictionaries and individual rows via rows.\",\n            contributors=[ContributorDetails(name=\"Nicholas Tindle\")],\n            categories={BlockCategory.TEXT, BlockCategory.DATA},\n            test_input={\n                \"contents\": \"a, b, c\\n1,2,3\\n4,5,6\",\n            },\n            test_output=[\n                (\"row\", {\"a\": \"1\", \"b\": \"2\", \"c\": \"3\"}),\n                (\"row\", {\"a\": \"4\", \"b\": \"5\", \"c\": \"6\"}),\n                (\n                    \"all_data\",\n                    [\n                        {\"a\": \"1\", \"b\": \"2\", \"c\": \"3\"},\n                        {\"a\": \"4\", \"b\": \"5\", \"c\": \"6\"},\n                    ],\n                ),\n            ],\n        )",
              "children": [
                {
                  "value": "__init__",
                  "children": []
                },
                {
                  "value": "(self)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "super().__init__(\n            id=\"acf7625e-d2cb-4941-bfeb-2819fc6fc015\",\n            input_schema=ReadCsvBlock.Input,\n            output_schema=ReadCsvBlock.Output,\n            description=\"Reads a CSV file and outputs the data as a list of dictionaries and individual rows via rows.\",\n            contributors=[ContributorDetails(name=\"Nicholas Tindle\")],\n            categories={BlockCategory.TEXT, BlockCategory.DATA},\n            test_input={\n                \"contents\": \"a, b, c\\n1,2,3\\n4,5,6\",\n            },\n            test_output=[\n                (\"row\", {\"a\": \"1\", \"b\": \"2\", \"c\": \"3\"}),\n                (\"row\", {\"a\": \"4\", \"b\": \"5\", \"c\": \"6\"}),\n                (\n                    \"all_data\",\n                    [\n                        {\"a\": \"1\", \"b\": \"2\", \"c\": \"3\"},\n                        {\"a\": \"4\", \"b\": \"5\", \"c\": \"6\"},\n                    ],\n                ),\n            ],\n        )",
                  "children": [
                    {
                      "value": "super().__init__(\n            id=\"acf7625e-d2cb-4941-bfeb-2819fc6fc015\",\n            input_schema=ReadCsvBlock.Input,\n            output_schema=ReadCsvBlock.Output,\n            description=\"Reads a CSV file and outputs the data as a list of dictionaries and individual rows via rows.\",\n            contributors=[ContributorDetails(name=\"Nicholas Tindle\")],\n            categories={BlockCategory.TEXT, BlockCategory.DATA},\n            test_input={\n                \"contents\": \"a, b, c\\n1,2,3\\n4,5,6\",\n            },\n            test_output=[\n                (\"row\", {\"a\": \"1\", \"b\": \"2\", \"c\": \"3\"}),\n                (\"row\", {\"a\": \"4\", \"b\": \"5\", \"c\": \"6\"}),\n                (\n                    \"all_data\",\n                    [\n                        {\"a\": \"1\", \"b\": \"2\", \"c\": \"3\"},\n                        {\"a\": \"4\", \"b\": \"5\", \"c\": \"6\"},\n                    ],\n                ),\n            ],\n        )",
                      "children": [
                        {
                          "value": "super().__init__(\n            id=\"acf7625e-d2cb-4941-bfeb-2819fc6fc015\",\n            input_schema=ReadCsvBlock.Input,\n            output_schema=ReadCsvBlock.Output,\n            description=\"Reads a CSV file and outputs the data as a list of dictionaries and individual rows via rows.\",\n            contributors=[ContributorDetails(name=\"Nicholas Tindle\")],\n            categories={BlockCategory.TEXT, BlockCategory.DATA},\n            test_input={\n                \"contents\": \"a, b, c\\n1,2,3\\n4,5,6\",\n            },\n            test_output=[\n                (\"row\", {\"a\": \"1\", \"b\": \"2\", \"c\": \"3\"}),\n                (\"row\", {\"a\": \"4\", \"b\": \"5\", \"c\": \"6\"}),\n                (\n                    \"all_data\",\n                    [\n                        {\"a\": \"1\", \"b\": \"2\", \"c\": \"3\"},\n                        {\"a\": \"4\", \"b\": \"5\", \"c\": \"6\"},\n                    ],\n                ),\n            ],\n        )",
                          "children": [
                            {
                              "value": "super().__init__",
                              "children": [
                                {
                                  "value": "super()",
                                  "children": [
                                    {
                                      "value": "super",
                                      "children": []
                                    },
                                    {
                                      "value": "()",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "__init__",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\n            id=\"acf7625e-d2cb-4941-bfeb-2819fc6fc015\",\n            input_schema=ReadCsvBlock.Input,\n            output_schema=ReadCsvBlock.Output,\n            description=\"Reads a CSV file and outputs the data as a list of dictionaries and individual rows via rows.\",\n            contributors=[ContributorDetails(name=\"Nicholas Tindle\")],\n            categories={BlockCategory.TEXT, BlockCategory.DATA},\n            test_input={\n                \"contents\": \"a, b, c\\n1,2,3\\n4,5,6\",\n            },\n            test_output=[\n                (\"row\", {\"a\": \"1\", \"b\": \"2\", \"c\": \"3\"}),\n                (\"row\", {\"a\": \"4\", \"b\": \"5\", \"c\": \"6\"}),\n                (\n                    \"all_data\",\n                    [\n                        {\"a\": \"1\", \"b\": \"2\", \"c\": \"3\"},\n                        {\"a\": \"4\", \"b\": \"5\", \"c\": \"6\"},\n                    ],\n                ),\n            ],\n        )",
                              "children": [
                                {
                                  "value": "id=\"acf7625e-d2cb-4941-bfeb-2819fc6fc015\"",
                                  "children": [
                                    {
                                      "value": "id",
                                      "children": []
                                    },
                                    {
                                      "value": "\"acf7625e-d2cb-4941-bfeb-2819fc6fc015\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "acf7625e-d2cb-4941-bfeb-2819fc6fc015",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "input_schema=ReadCsvBlock.Input",
                                  "children": [
                                    {
                                      "value": "input_schema",
                                      "children": []
                                    },
                                    {
                                      "value": "ReadCsvBlock.Input",
                                      "children": [
                                        {
                                          "value": "ReadCsvBlock",
                                          "children": []
                                        },
                                        {
                                          "value": "Input",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "output_schema=ReadCsvBlock.Output",
                                  "children": [
                                    {
                                      "value": "output_schema",
                                      "children": []
                                    },
                                    {
                                      "value": "ReadCsvBlock.Output",
                                      "children": [
                                        {
                                          "value": "ReadCsvBlock",
                                          "children": []
                                        },
                                        {
                                          "value": "Output",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "description=\"Reads a CSV file and outputs the data as a list of dictionaries and individual rows via rows.\"",
                                  "children": [
                                    {
                                      "value": "description",
                                      "children": []
                                    },
                                    {
                                      "value": "\"Reads a CSV file and outputs the data as a list of dictionaries and individual rows via rows.\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "Reads a CSV file and outputs the data as a list of dictionaries and individual rows via rows.",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "contributors=[ContributorDetails(name=\"Nicholas Tindle\")]",
                                  "children": [
                                    {
                                      "value": "contributors",
                                      "children": []
                                    },
                                    {
                                      "value": "[ContributorDetails(name=\"Nicholas Tindle\")]",
                                      "children": [
                                        {
                                          "value": "ContributorDetails(name=\"Nicholas Tindle\")",
                                          "children": [
                                            {
                                              "value": "ContributorDetails",
                                              "children": []
                                            },
                                            {
                                              "value": "(name=\"Nicholas Tindle\")",
                                              "children": [
                                                {
                                                  "value": "name=\"Nicholas Tindle\"",
                                                  "children": [
                                                    {
                                                      "value": "name",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"Nicholas Tindle\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "Nicholas Tindle",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "categories={BlockCategory.TEXT, BlockCategory.DATA}",
                                  "children": [
                                    {
                                      "value": "categories",
                                      "children": []
                                    },
                                    {
                                      "value": "{BlockCategory.TEXT, BlockCategory.DATA}",
                                      "children": [
                                        {
                                          "value": "BlockCategory.TEXT",
                                          "children": [
                                            {
                                              "value": "BlockCategory",
                                              "children": []
                                            },
                                            {
                                              "value": "TEXT",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "BlockCategory.DATA",
                                          "children": [
                                            {
                                              "value": "BlockCategory",
                                              "children": []
                                            },
                                            {
                                              "value": "DATA",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "test_input={\n                \"contents\": \"a, b, c\\n1,2,3\\n4,5,6\",\n            }",
                                  "children": [
                                    {
                                      "value": "test_input",
                                      "children": []
                                    },
                                    {
                                      "value": "{\n                \"contents\": \"a, b, c\\n1,2,3\\n4,5,6\",\n            }",
                                      "children": [
                                        {
                                          "value": "\"contents\": \"a, b, c\\n1,2,3\\n4,5,6\"",
                                          "children": [
                                            {
                                              "value": "\"contents\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "contents",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"a, b, c\\n1,2,3\\n4,5,6\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "a, b, c\\n1,2,3\\n4,5,6",
                                                  "children": [
                                                    {
                                                      "value": "\\n",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\\n",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "test_output=[\n                (\"row\", {\"a\": \"1\", \"b\": \"2\", \"c\": \"3\"}),\n                (\"row\", {\"a\": \"4\", \"b\": \"5\", \"c\": \"6\"}),\n                (\n                    \"all_data\",\n                    [\n                        {\"a\": \"1\", \"b\": \"2\", \"c\": \"3\"},\n                        {\"a\": \"4\", \"b\": \"5\", \"c\": \"6\"},\n                    ],\n                ),\n            ]",
                                  "children": [
                                    {
                                      "value": "test_output",
                                      "children": []
                                    },
                                    {
                                      "value": "[\n                (\"row\", {\"a\": \"1\", \"b\": \"2\", \"c\": \"3\"}),\n                (\"row\", {\"a\": \"4\", \"b\": \"5\", \"c\": \"6\"}),\n                (\n                    \"all_data\",\n                    [\n                        {\"a\": \"1\", \"b\": \"2\", \"c\": \"3\"},\n                        {\"a\": \"4\", \"b\": \"5\", \"c\": \"6\"},\n                    ],\n                ),\n            ]",
                                      "children": [
                                        {
                                          "value": "(\"row\", {\"a\": \"1\", \"b\": \"2\", \"c\": \"3\"})",
                                          "children": [
                                            {
                                              "value": "\"row\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "row",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "{\"a\": \"1\", \"b\": \"2\", \"c\": \"3\"}",
                                              "children": [
                                                {
                                                  "value": "\"a\": \"1\"",
                                                  "children": [
                                                    {
                                                      "value": "\"a\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "a",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"1\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "1",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"b\": \"2\"",
                                                  "children": [
                                                    {
                                                      "value": "\"b\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "b",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"2\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "2",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"c\": \"3\"",
                                                  "children": [
                                                    {
                                                      "value": "\"c\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "c",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"3\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "3",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(\"row\", {\"a\": \"4\", \"b\": \"5\", \"c\": \"6\"})",
                                          "children": [
                                            {
                                              "value": "\"row\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "row",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "{\"a\": \"4\", \"b\": \"5\", \"c\": \"6\"}",
                                              "children": [
                                                {
                                                  "value": "\"a\": \"4\"",
                                                  "children": [
                                                    {
                                                      "value": "\"a\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "a",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"4\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "4",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"b\": \"5\"",
                                                  "children": [
                                                    {
                                                      "value": "\"b\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "b",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"5\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "5",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"c\": \"6\"",
                                                  "children": [
                                                    {
                                                      "value": "\"c\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "c",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"6\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "6",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(\n                    \"all_data\",\n                    [\n                        {\"a\": \"1\", \"b\": \"2\", \"c\": \"3\"},\n                        {\"a\": \"4\", \"b\": \"5\", \"c\": \"6\"},\n                    ],\n                )",
                                          "children": [
                                            {
                                              "value": "\"all_data\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "all_data",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "[\n                        {\"a\": \"1\", \"b\": \"2\", \"c\": \"3\"},\n                        {\"a\": \"4\", \"b\": \"5\", \"c\": \"6\"},\n                    ]",
                                              "children": [
                                                {
                                                  "value": "{\"a\": \"1\", \"b\": \"2\", \"c\": \"3\"}",
                                                  "children": [
                                                    {
                                                      "value": "\"a\": \"1\"",
                                                      "children": [
                                                        {
                                                          "value": "\"a\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "a",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "\"1\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "1",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"b\": \"2\"",
                                                      "children": [
                                                        {
                                                          "value": "\"b\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "b",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "\"2\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "2",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"c\": \"3\"",
                                                      "children": [
                                                        {
                                                          "value": "\"c\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "c",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "\"3\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "3",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "{\"a\": \"4\", \"b\": \"5\", \"c\": \"6\"}",
                                                  "children": [
                                                    {
                                                      "value": "\"a\": \"4\"",
                                                      "children": [
                                                        {
                                                          "value": "\"a\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "a",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "\"4\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "4",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"b\": \"5\"",
                                                      "children": [
                                                        {
                                                          "value": "\"b\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "b",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "\"5\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "5",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"c\": \"6\"",
                                                      "children": [
                                                        {
                                                          "value": "\"c\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "c",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "\"6\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "6",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        import csv\n        from io import StringIO\n\n        csv_file = StringIO(input_data.contents)\n        reader = csv.reader(\n            csv_file,\n            delimiter=input_data.delimiter,\n            quotechar=input_data.quotechar,\n            escapechar=input_data.escapechar,\n        )\n\n        header = None\n        if input_data.has_header:\n            header = next(reader)\n            if input_data.strip:\n                header = [h.strip() for h in header]\n\n        for _ in range(input_data.skip_rows):\n            next(reader)\n\n        def process_row(row):\n            data = {}\n            for i, value in enumerate(row):\n                if i not in input_data.skip_columns:\n                    if input_data.has_header and header:\n                        data[header[i]] = value.strip() if input_data.strip else value\n                    else:\n                        data[str(i)] = value.strip() if input_data.strip else value\n            return data\n\n        all_data = []\n        for row in reader:\n            processed_row = process_row(row)\n            all_data.append(processed_row)\n            yield \"row\", processed_row\n\n        yield \"all_data\", all_data",
              "children": [
                {
                  "value": "run",
                  "children": []
                },
                {
                  "value": "(self, input_data: Input, **kwargs)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "input_data: Input",
                      "children": [
                        {
                          "value": "input_data",
                          "children": []
                        },
                        {
                          "value": "Input",
                          "children": [
                            {
                              "value": "Input",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "**kwargs",
                      "children": [
                        {
                          "value": "kwargs",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "BlockOutput",
                  "children": [
                    {
                      "value": "BlockOutput",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "import csv\n        from io import StringIO\n\n        csv_file = StringIO(input_data.contents)\n        reader = csv.reader(\n            csv_file,\n            delimiter=input_data.delimiter,\n            quotechar=input_data.quotechar,\n            escapechar=input_data.escapechar,\n        )\n\n        header = None\n        if input_data.has_header:\n            header = next(reader)\n            if input_data.strip:\n                header = [h.strip() for h in header]\n\n        for _ in range(input_data.skip_rows):\n            next(reader)\n\n        def process_row(row):\n            data = {}\n            for i, value in enumerate(row):\n                if i not in input_data.skip_columns:\n                    if input_data.has_header and header:\n                        data[header[i]] = value.strip() if input_data.strip else value\n                    else:\n                        data[str(i)] = value.strip() if input_data.strip else value\n            return data\n\n        all_data = []\n        for row in reader:\n            processed_row = process_row(row)\n            all_data.append(processed_row)\n            yield \"row\", processed_row\n\n        yield \"all_data\", all_data",
                  "children": [
                    {
                      "value": "import csv",
                      "children": [
                        {
                          "value": "csv",
                          "children": [
                            {
                              "value": "csv",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "from io import StringIO",
                      "children": [
                        {
                          "value": "io",
                          "children": [
                            {
                              "value": "io",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "StringIO",
                          "children": [
                            {
                              "value": "StringIO",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "csv_file = StringIO(input_data.contents)",
                      "children": [
                        {
                          "value": "csv_file = StringIO(input_data.contents)",
                          "children": [
                            {
                              "value": "csv_file",
                              "children": []
                            },
                            {
                              "value": "StringIO(input_data.contents)",
                              "children": [
                                {
                                  "value": "StringIO",
                                  "children": []
                                },
                                {
                                  "value": "(input_data.contents)",
                                  "children": [
                                    {
                                      "value": "input_data.contents",
                                      "children": [
                                        {
                                          "value": "input_data",
                                          "children": []
                                        },
                                        {
                                          "value": "contents",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "reader = csv.reader(\n            csv_file,\n            delimiter=input_data.delimiter,\n            quotechar=input_data.quotechar,\n            escapechar=input_data.escapechar,\n        )",
                      "children": [
                        {
                          "value": "reader = csv.reader(\n            csv_file,\n            delimiter=input_data.delimiter,\n            quotechar=input_data.quotechar,\n            escapechar=input_data.escapechar,\n        )",
                          "children": [
                            {
                              "value": "reader",
                              "children": []
                            },
                            {
                              "value": "csv.reader(\n            csv_file,\n            delimiter=input_data.delimiter,\n            quotechar=input_data.quotechar,\n            escapechar=input_data.escapechar,\n        )",
                              "children": [
                                {
                                  "value": "csv.reader",
                                  "children": [
                                    {
                                      "value": "csv",
                                      "children": []
                                    },
                                    {
                                      "value": "reader",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(\n            csv_file,\n            delimiter=input_data.delimiter,\n            quotechar=input_data.quotechar,\n            escapechar=input_data.escapechar,\n        )",
                                  "children": [
                                    {
                                      "value": "csv_file",
                                      "children": []
                                    },
                                    {
                                      "value": "delimiter=input_data.delimiter",
                                      "children": [
                                        {
                                          "value": "delimiter",
                                          "children": []
                                        },
                                        {
                                          "value": "input_data.delimiter",
                                          "children": [
                                            {
                                              "value": "input_data",
                                              "children": []
                                            },
                                            {
                                              "value": "delimiter",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "quotechar=input_data.quotechar",
                                      "children": [
                                        {
                                          "value": "quotechar",
                                          "children": []
                                        },
                                        {
                                          "value": "input_data.quotechar",
                                          "children": [
                                            {
                                              "value": "input_data",
                                              "children": []
                                            },
                                            {
                                              "value": "quotechar",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "escapechar=input_data.escapechar",
                                      "children": [
                                        {
                                          "value": "escapechar",
                                          "children": []
                                        },
                                        {
                                          "value": "input_data.escapechar",
                                          "children": [
                                            {
                                              "value": "input_data",
                                              "children": []
                                            },
                                            {
                                              "value": "escapechar",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "header = None",
                      "children": [
                        {
                          "value": "header = None",
                          "children": [
                            {
                              "value": "header",
                              "children": []
                            },
                            {
                              "value": "None",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "if input_data.has_header:\n            header = next(reader)\n            if input_data.strip:\n                header = [h.strip() for h in header]",
                      "children": [
                        {
                          "value": "input_data.has_header",
                          "children": [
                            {
                              "value": "input_data",
                              "children": []
                            },
                            {
                              "value": "has_header",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "header = next(reader)\n            if input_data.strip:\n                header = [h.strip() for h in header]",
                          "children": [
                            {
                              "value": "header = next(reader)",
                              "children": [
                                {
                                  "value": "header = next(reader)",
                                  "children": [
                                    {
                                      "value": "header",
                                      "children": []
                                    },
                                    {
                                      "value": "next(reader)",
                                      "children": [
                                        {
                                          "value": "next",
                                          "children": []
                                        },
                                        {
                                          "value": "(reader)",
                                          "children": [
                                            {
                                              "value": "reader",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "if input_data.strip:\n                header = [h.strip() for h in header]",
                              "children": [
                                {
                                  "value": "input_data.strip",
                                  "children": [
                                    {
                                      "value": "input_data",
                                      "children": []
                                    },
                                    {
                                      "value": "strip",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "header = [h.strip() for h in header]",
                                  "children": [
                                    {
                                      "value": "header = [h.strip() for h in header]",
                                      "children": [
                                        {
                                          "value": "header = [h.strip() for h in header]",
                                          "children": [
                                            {
                                              "value": "header",
                                              "children": []
                                            },
                                            {
                                              "value": "[h.strip() for h in header]",
                                              "children": [
                                                {
                                                  "value": "h.strip()",
                                                  "children": [
                                                    {
                                                      "value": "h.strip",
                                                      "children": [
                                                        {
                                                          "value": "h",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "strip",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "()",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "for h in header",
                                                  "children": [
                                                    {
                                                      "value": "h",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "header",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "for _ in range(input_data.skip_rows):\n            next(reader)",
                      "children": [
                        {
                          "value": "_",
                          "children": []
                        },
                        {
                          "value": "range(input_data.skip_rows)",
                          "children": [
                            {
                              "value": "range",
                              "children": []
                            },
                            {
                              "value": "(input_data.skip_rows)",
                              "children": [
                                {
                                  "value": "input_data.skip_rows",
                                  "children": [
                                    {
                                      "value": "input_data",
                                      "children": []
                                    },
                                    {
                                      "value": "skip_rows",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "next(reader)",
                          "children": [
                            {
                              "value": "next(reader)",
                              "children": [
                                {
                                  "value": "next(reader)",
                                  "children": [
                                    {
                                      "value": "next",
                                      "children": []
                                    },
                                    {
                                      "value": "(reader)",
                                      "children": [
                                        {
                                          "value": "reader",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "def process_row(row):\n            data = {}\n            for i, value in enumerate(row):\n                if i not in input_data.skip_columns:\n                    if input_data.has_header and header:\n                        data[header[i]] = value.strip() if input_data.strip else value\n                    else:\n                        data[str(i)] = value.strip() if input_data.strip else value\n            return data",
                      "children": [
                        {
                          "value": "process_row",
                          "children": []
                        },
                        {
                          "value": "(row)",
                          "children": [
                            {
                              "value": "row",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "data = {}\n            for i, value in enumerate(row):\n                if i not in input_data.skip_columns:\n                    if input_data.has_header and header:\n                        data[header[i]] = value.strip() if input_data.strip else value\n                    else:\n                        data[str(i)] = value.strip() if input_data.strip else value\n            return data",
                          "children": [
                            {
                              "value": "data = {}",
                              "children": [
                                {
                                  "value": "data = {}",
                                  "children": [
                                    {
                                      "value": "data",
                                      "children": []
                                    },
                                    {
                                      "value": "{}",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "for i, value in enumerate(row):\n                if i not in input_data.skip_columns:\n                    if input_data.has_header and header:\n                        data[header[i]] = value.strip() if input_data.strip else value\n                    else:\n                        data[str(i)] = value.strip() if input_data.strip else value",
                              "children": [
                                {
                                  "value": "i, value",
                                  "children": [
                                    {
                                      "value": "i",
                                      "children": []
                                    },
                                    {
                                      "value": "value",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "enumerate(row)",
                                  "children": [
                                    {
                                      "value": "enumerate",
                                      "children": []
                                    },
                                    {
                                      "value": "(row)",
                                      "children": [
                                        {
                                          "value": "row",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "if i not in input_data.skip_columns:\n                    if input_data.has_header and header:\n                        data[header[i]] = value.strip() if input_data.strip else value\n                    else:\n                        data[str(i)] = value.strip() if input_data.strip else value",
                                  "children": [
                                    {
                                      "value": "if i not in input_data.skip_columns:\n                    if input_data.has_header and header:\n                        data[header[i]] = value.strip() if input_data.strip else value\n                    else:\n                        data[str(i)] = value.strip() if input_data.strip else value",
                                      "children": [
                                        {
                                          "value": "i not in input_data.skip_columns",
                                          "children": [
                                            {
                                              "value": "i",
                                              "children": []
                                            },
                                            {
                                              "value": "input_data.skip_columns",
                                              "children": [
                                                {
                                                  "value": "input_data",
                                                  "children": []
                                                },
                                                {
                                                  "value": "skip_columns",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "if input_data.has_header and header:\n                        data[header[i]] = value.strip() if input_data.strip else value\n                    else:\n                        data[str(i)] = value.strip() if input_data.strip else value",
                                          "children": [
                                            {
                                              "value": "if input_data.has_header and header:\n                        data[header[i]] = value.strip() if input_data.strip else value\n                    else:\n                        data[str(i)] = value.strip() if input_data.strip else value",
                                              "children": [
                                                {
                                                  "value": "input_data.has_header and header",
                                                  "children": [
                                                    {
                                                      "value": "input_data.has_header",
                                                      "children": [
                                                        {
                                                          "value": "input_data",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "has_header",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "header",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "data[header[i]] = value.strip() if input_data.strip else value",
                                                  "children": [
                                                    {
                                                      "value": "data[header[i]] = value.strip() if input_data.strip else value",
                                                      "children": [
                                                        {
                                                          "value": "data[header[i]] = value.strip() if input_data.strip else value",
                                                          "children": [
                                                            {
                                                              "value": "data[header[i]]",
                                                              "children": [
                                                                {
                                                                  "value": "data",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "header[i]",
                                                                  "children": [
                                                                    {
                                                                      "value": "header",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "i",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "value.strip() if input_data.strip else value",
                                                              "children": [
                                                                {
                                                                  "value": "value.strip()",
                                                                  "children": [
                                                                    {
                                                                      "value": "value.strip",
                                                                      "children": [
                                                                        {
                                                                          "value": "value",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "value": "strip",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "value": "()",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "value": "input_data.strip",
                                                                  "children": [
                                                                    {
                                                                      "value": "input_data",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "strip",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "value": "value",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "else:\n                        data[str(i)] = value.strip() if input_data.strip else value",
                                                  "children": [
                                                    {
                                                      "value": "data[str(i)] = value.strip() if input_data.strip else value",
                                                      "children": [
                                                        {
                                                          "value": "data[str(i)] = value.strip() if input_data.strip else value",
                                                          "children": [
                                                            {
                                                              "value": "data[str(i)] = value.strip() if input_data.strip else value",
                                                              "children": [
                                                                {
                                                                  "value": "data[str(i)]",
                                                                  "children": [
                                                                    {
                                                                      "value": "data",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "str(i)",
                                                                      "children": [
                                                                        {
                                                                          "value": "str",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "value": "(i)",
                                                                          "children": [
                                                                            {
                                                                              "value": "i",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "value": "value.strip() if input_data.strip else value",
                                                                  "children": [
                                                                    {
                                                                      "value": "value.strip()",
                                                                      "children": [
                                                                        {
                                                                          "value": "value.strip",
                                                                          "children": [
                                                                            {
                                                                              "value": "value",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "value": "strip",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "value": "()",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "value": "input_data.strip",
                                                                      "children": [
                                                                        {
                                                                          "value": "input_data",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "value": "strip",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "value": "value",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "return data",
                              "children": [
                                {
                                  "value": "data",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "all_data = []",
                      "children": [
                        {
                          "value": "all_data = []",
                          "children": [
                            {
                              "value": "all_data",
                              "children": []
                            },
                            {
                              "value": "[]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "for row in reader:\n            processed_row = process_row(row)\n            all_data.append(processed_row)\n            yield \"row\", processed_row",
                      "children": [
                        {
                          "value": "row",
                          "children": []
                        },
                        {
                          "value": "reader",
                          "children": []
                        },
                        {
                          "value": "processed_row = process_row(row)\n            all_data.append(processed_row)\n            yield \"row\", processed_row",
                          "children": [
                            {
                              "value": "processed_row = process_row(row)",
                              "children": [
                                {
                                  "value": "processed_row = process_row(row)",
                                  "children": [
                                    {
                                      "value": "processed_row",
                                      "children": []
                                    },
                                    {
                                      "value": "process_row(row)",
                                      "children": [
                                        {
                                          "value": "process_row",
                                          "children": []
                                        },
                                        {
                                          "value": "(row)",
                                          "children": [
                                            {
                                              "value": "row",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "all_data.append(processed_row)",
                              "children": [
                                {
                                  "value": "all_data.append(processed_row)",
                                  "children": [
                                    {
                                      "value": "all_data.append",
                                      "children": [
                                        {
                                          "value": "all_data",
                                          "children": []
                                        },
                                        {
                                          "value": "append",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(processed_row)",
                                      "children": [
                                        {
                                          "value": "processed_row",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "yield \"row\", processed_row",
                              "children": [
                                {
                                  "value": "yield \"row\", processed_row",
                                  "children": [
                                    {
                                      "value": "\"row\", processed_row",
                                      "children": [
                                        {
                                          "value": "\"row\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "row",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "processed_row",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "yield \"all_data\", all_data",
                      "children": [
                        {
                          "value": "yield \"all_data\", all_data",
                          "children": [
                            {
                              "value": "\"all_data\", all_data",
                              "children": [
                                {
                                  "value": "\"all_data\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "all_data",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "all_data",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}