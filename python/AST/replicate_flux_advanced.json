{
  "value": "import os\nfrom enum import Enum\nfrom typing import Literal\n\nimport replicate\nfrom pydantic import SecretStr\nfrom replicate.helpers import FileOutput\n\nfrom backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import (\n    APIKeyCredentials,\n    CredentialsField,\n    CredentialsMetaInput,\n    SchemaField,\n)\nfrom backend.integrations.providers import ProviderName\n\nTEST_CREDENTIALS = APIKeyCredentials(\n    id=\"01234567-89ab-cdef-0123-456789abcdef\",\n    provider=\"replicate\",\n    api_key=SecretStr(\"mock-replicate-api-key\"),\n    title=\"Mock Replicate API key\",\n    expires_at=None,\n)\nTEST_CREDENTIALS_INPUT = {\n    \"provider\": TEST_CREDENTIALS.provider,\n    \"id\": TEST_CREDENTIALS.id,\n    \"type\": TEST_CREDENTIALS.type,\n    \"title\": TEST_CREDENTIALS.type,\n}\n\n\n# Model name enum\nclass ReplicateFluxModelName(str, Enum):\n    FLUX_SCHNELL = (\"Flux Schnell\",)\n    FLUX_PRO = (\"Flux Pro\",)\n    FLUX_PRO1_1 = (\"Flux Pro 1.1\",)\n\n    @property\n    def api_name(self):\n        api_names = {\n            ReplicateFluxModelName.FLUX_SCHNELL: \"black-forest-labs/flux-schnell\",\n            ReplicateFluxModelName.FLUX_PRO: \"black-forest-labs/flux-pro\",\n            ReplicateFluxModelName.FLUX_PRO1_1: \"black-forest-labs/flux-1.1-pro\",\n        }\n        return api_names[self]\n\n\n# Image type Enum\nclass ImageType(str, Enum):\n    WEBP = \"webp\"\n    JPG = \"jpg\"\n    PNG = \"png\"\n\n\nclass ReplicateFluxAdvancedModelBlock(Block):\n    class Input(BlockSchema):\n        credentials: CredentialsMetaInput[\n            Literal[ProviderName.REPLICATE], Literal[\"api_key\"]\n        ] = CredentialsField(\n            description=\"The Replicate integration can be used with \"\n            \"any API key with sufficient permissions for the blocks it is used on.\",\n        )\n        prompt: str = SchemaField(\n            description=\"Text prompt for image generation\",\n            placeholder=\"e.g., 'A futuristic cityscape at sunset'\",\n            title=\"Prompt\",\n        )\n        replicate_model_name: ReplicateFluxModelName = SchemaField(\n            description=\"The name of the Image Generation Model, i.e Flux Schnell\",\n            default=ReplicateFluxModelName.FLUX_SCHNELL,\n            title=\"Image Generation Model\",\n            advanced=False,\n        )\n        seed: int | None = SchemaField(\n            description=\"Random seed. Set for reproducible generation\",\n            default=None,\n            title=\"Seed\",\n        )\n        steps: int = SchemaField(\n            description=\"Number of diffusion steps\",\n            default=25,\n            title=\"Steps\",\n        )\n        guidance: float = SchemaField(\n            description=(\n                \"Controls the balance between adherence to the text prompt and image quality/diversity. \"\n                \"Higher values make the output more closely match the prompt but may reduce overall image quality.\"\n            ),\n            default=3,\n            title=\"Guidance\",\n        )\n        interval: float = SchemaField(\n            description=(\n                \"Interval is a setting that increases the variance in possible outputs. \"\n                \"Setting this value low will ensure strong prompt following with more consistent outputs.\"\n            ),\n            default=2,\n            title=\"Interval\",\n        )\n        aspect_ratio: str = SchemaField(\n            description=\"Aspect ratio for the generated image\",\n            default=\"1:1\",\n            title=\"Aspect Ratio\",\n            placeholder=\"Choose from: 1:1, 16:9, 2:3, 3:2, 4:5, 5:4, 9:16\",\n        )\n        output_format: ImageType = SchemaField(\n            description=\"File format of the output image\",\n            default=ImageType.WEBP,\n            title=\"Output Format\",\n        )\n        output_quality: int = SchemaField(\n            description=(\n                \"Quality when saving the output images, from 0 to 100. \"\n                \"Not relevant for .png outputs\"\n            ),\n            default=80,\n            title=\"Output Quality\",\n        )\n        safety_tolerance: int = SchemaField(\n            description=\"Safety tolerance, 1 is most strict and 5 is most permissive\",\n            default=2,\n            title=\"Safety Tolerance\",\n        )\n\n    class Output(BlockSchema):\n        result: str = SchemaField(description=\"Generated output\")\n        error: str = SchemaField(description=\"Error message if the model run failed\")\n\n    def __init__(self):\n        super().__init__(\n            id=\"90f8c45e-e983-4644-aa0b-b4ebe2f531bc\",\n            description=\"This block runs Flux models on Replicate with advanced settings.\",\n            categories={BlockCategory.AI},\n            input_schema=ReplicateFluxAdvancedModelBlock.Input,\n            output_schema=ReplicateFluxAdvancedModelBlock.Output,\n            test_input={\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n                \"replicate_model_name\": ReplicateFluxModelName.FLUX_SCHNELL,\n                \"prompt\": \"A beautiful landscape painting of a serene lake at sunrise\",\n                \"seed\": None,\n                \"steps\": 25,\n                \"guidance\": 3.0,\n                \"interval\": 2.0,\n                \"aspect_ratio\": \"1:1\",\n                \"output_format\": ImageType.PNG,\n                \"output_quality\": 80,\n                \"safety_tolerance\": 2,\n            },\n            test_output=[\n                (\n                    \"result\",\n                    \"https://replicate.com/output/generated-image-url.jpg\",\n                ),\n            ],\n            test_mock={\n                \"run_model\": lambda api_key, model_name, prompt, seed, steps, guidance, interval, aspect_ratio, output_format, output_quality, safety_tolerance: \"https://replicate.com/output/generated-image-url.jpg\",\n            },\n            test_credentials=TEST_CREDENTIALS,\n        )\n\n    def run(\n        self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs\n    ) -> BlockOutput:\n        # If the seed is not provided, generate a random seed\n        seed = input_data.seed\n        if seed is None:\n            seed = int.from_bytes(os.urandom(4), \"big\")\n\n        # Run the model using the provided inputs\n        result = self.run_model(\n            api_key=credentials.api_key,\n            model_name=input_data.replicate_model_name.api_name,\n            prompt=input_data.prompt,\n            seed=seed,\n            steps=input_data.steps,\n            guidance=input_data.guidance,\n            interval=input_data.interval,\n            aspect_ratio=input_data.aspect_ratio,\n            output_format=input_data.output_format,\n            output_quality=input_data.output_quality,\n            safety_tolerance=input_data.safety_tolerance,\n        )\n        yield \"result\", result\n\n    def run_model(\n        self,\n        api_key: SecretStr,\n        model_name,\n        prompt,\n        seed,\n        steps,\n        guidance,\n        interval,\n        aspect_ratio,\n        output_format,\n        output_quality,\n        safety_tolerance,\n    ):\n        # Initialize Replicate client with the API key\n        client = replicate.Client(api_token=api_key.get_secret_value())\n\n        # Run the model with additional parameters\n        output: FileOutput | list[FileOutput] = client.run(  # type: ignore This is because they changed the return type, and didn't update the type hint! It should be overloaded depending on the value of `use_file_output` to `FileOutput | list[FileOutput]` but it's `Any | Iterator[Any]`\n            f\"{model_name}\",\n            input={\n                \"prompt\": prompt,\n                \"seed\": seed,\n                \"steps\": steps,\n                \"guidance\": guidance,\n                \"interval\": interval,\n                \"aspect_ratio\": aspect_ratio,\n                \"output_format\": output_format,\n                \"output_quality\": output_quality,\n                \"safety_tolerance\": safety_tolerance,\n            },\n            wait=False,  # don't arbitrarily return data:octect/stream or sometimes url depending on the model???? what is this api\n        )\n\n        # Check if output is a list or a string and extract accordingly; otherwise, assign a default message\n        if isinstance(output, list) and len(output) > 0:\n            if isinstance(output[0], FileOutput):\n                result_url = output[0].url  # If output is a list, get the first element\n            else:\n                result_url = output[\n                    0\n                ]  # If output is a list and not a FileOutput, get the first element. Should never happen, but just in case.\n        elif isinstance(output, FileOutput):\n            result_url = output.url  # If output is a FileOutput, use the url\n        elif isinstance(output, str):\n            result_url = output  # If output is a string (for some reason due to their janky type hinting), use it directly\n        else:\n            result_url = (\n                \"No output received\"  # Fallback message if output is not as expected\n            )\n\n        return result_url",
  "children": [
    {
      "value": "import os",
      "children": [
        {
          "value": "os",
          "children": [
            {
              "value": "os",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from enum import Enum",
      "children": [
        {
          "value": "enum",
          "children": [
            {
              "value": "enum",
              "children": []
            }
          ]
        },
        {
          "value": "Enum",
          "children": [
            {
              "value": "Enum",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from typing import Literal",
      "children": [
        {
          "value": "typing",
          "children": [
            {
              "value": "typing",
              "children": []
            }
          ]
        },
        {
          "value": "Literal",
          "children": [
            {
              "value": "Literal",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "import replicate",
      "children": [
        {
          "value": "replicate",
          "children": [
            {
              "value": "replicate",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from pydantic import SecretStr",
      "children": [
        {
          "value": "pydantic",
          "children": [
            {
              "value": "pydantic",
              "children": []
            }
          ]
        },
        {
          "value": "SecretStr",
          "children": [
            {
              "value": "SecretStr",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from replicate.helpers import FileOutput",
      "children": [
        {
          "value": "replicate.helpers",
          "children": [
            {
              "value": "replicate",
              "children": []
            },
            {
              "value": "helpers",
              "children": []
            }
          ]
        },
        {
          "value": "FileOutput",
          "children": [
            {
              "value": "FileOutput",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema",
      "children": [
        {
          "value": "backend.data.block",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "data",
              "children": []
            },
            {
              "value": "block",
              "children": []
            }
          ]
        },
        {
          "value": "Block",
          "children": [
            {
              "value": "Block",
              "children": []
            }
          ]
        },
        {
          "value": "BlockCategory",
          "children": [
            {
              "value": "BlockCategory",
              "children": []
            }
          ]
        },
        {
          "value": "BlockOutput",
          "children": [
            {
              "value": "BlockOutput",
              "children": []
            }
          ]
        },
        {
          "value": "BlockSchema",
          "children": [
            {
              "value": "BlockSchema",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.data.model import (\n    APIKeyCredentials,\n    CredentialsField,\n    CredentialsMetaInput,\n    SchemaField,\n)",
      "children": [
        {
          "value": "backend.data.model",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "data",
              "children": []
            },
            {
              "value": "model",
              "children": []
            }
          ]
        },
        {
          "value": "APIKeyCredentials",
          "children": [
            {
              "value": "APIKeyCredentials",
              "children": []
            }
          ]
        },
        {
          "value": "CredentialsField",
          "children": [
            {
              "value": "CredentialsField",
              "children": []
            }
          ]
        },
        {
          "value": "CredentialsMetaInput",
          "children": [
            {
              "value": "CredentialsMetaInput",
              "children": []
            }
          ]
        },
        {
          "value": "SchemaField",
          "children": [
            {
              "value": "SchemaField",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.integrations.providers import ProviderName",
      "children": [
        {
          "value": "backend.integrations.providers",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "integrations",
              "children": []
            },
            {
              "value": "providers",
              "children": []
            }
          ]
        },
        {
          "value": "ProviderName",
          "children": [
            {
              "value": "ProviderName",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "TEST_CREDENTIALS = APIKeyCredentials(\n    id=\"01234567-89ab-cdef-0123-456789abcdef\",\n    provider=\"replicate\",\n    api_key=SecretStr(\"mock-replicate-api-key\"),\n    title=\"Mock Replicate API key\",\n    expires_at=None,\n)",
      "children": [
        {
          "value": "TEST_CREDENTIALS = APIKeyCredentials(\n    id=\"01234567-89ab-cdef-0123-456789abcdef\",\n    provider=\"replicate\",\n    api_key=SecretStr(\"mock-replicate-api-key\"),\n    title=\"Mock Replicate API key\",\n    expires_at=None,\n)",
          "children": [
            {
              "value": "TEST_CREDENTIALS",
              "children": []
            },
            {
              "value": "APIKeyCredentials(\n    id=\"01234567-89ab-cdef-0123-456789abcdef\",\n    provider=\"replicate\",\n    api_key=SecretStr(\"mock-replicate-api-key\"),\n    title=\"Mock Replicate API key\",\n    expires_at=None,\n)",
              "children": [
                {
                  "value": "APIKeyCredentials",
                  "children": []
                },
                {
                  "value": "(\n    id=\"01234567-89ab-cdef-0123-456789abcdef\",\n    provider=\"replicate\",\n    api_key=SecretStr(\"mock-replicate-api-key\"),\n    title=\"Mock Replicate API key\",\n    expires_at=None,\n)",
                  "children": [
                    {
                      "value": "id=\"01234567-89ab-cdef-0123-456789abcdef\"",
                      "children": [
                        {
                          "value": "id",
                          "children": []
                        },
                        {
                          "value": "\"01234567-89ab-cdef-0123-456789abcdef\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "01234567-89ab-cdef-0123-456789abcdef",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "provider=\"replicate\"",
                      "children": [
                        {
                          "value": "provider",
                          "children": []
                        },
                        {
                          "value": "\"replicate\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "replicate",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "api_key=SecretStr(\"mock-replicate-api-key\")",
                      "children": [
                        {
                          "value": "api_key",
                          "children": []
                        },
                        {
                          "value": "SecretStr(\"mock-replicate-api-key\")",
                          "children": [
                            {
                              "value": "SecretStr",
                              "children": []
                            },
                            {
                              "value": "(\"mock-replicate-api-key\")",
                              "children": [
                                {
                                  "value": "\"mock-replicate-api-key\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "mock-replicate-api-key",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "title=\"Mock Replicate API key\"",
                      "children": [
                        {
                          "value": "title",
                          "children": []
                        },
                        {
                          "value": "\"Mock Replicate API key\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "Mock Replicate API key",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "expires_at=None",
                      "children": [
                        {
                          "value": "expires_at",
                          "children": []
                        },
                        {
                          "value": "None",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "TEST_CREDENTIALS_INPUT = {\n    \"provider\": TEST_CREDENTIALS.provider,\n    \"id\": TEST_CREDENTIALS.id,\n    \"type\": TEST_CREDENTIALS.type,\n    \"title\": TEST_CREDENTIALS.type,\n}",
      "children": [
        {
          "value": "TEST_CREDENTIALS_INPUT = {\n    \"provider\": TEST_CREDENTIALS.provider,\n    \"id\": TEST_CREDENTIALS.id,\n    \"type\": TEST_CREDENTIALS.type,\n    \"title\": TEST_CREDENTIALS.type,\n}",
          "children": [
            {
              "value": "TEST_CREDENTIALS_INPUT",
              "children": []
            },
            {
              "value": "{\n    \"provider\": TEST_CREDENTIALS.provider,\n    \"id\": TEST_CREDENTIALS.id,\n    \"type\": TEST_CREDENTIALS.type,\n    \"title\": TEST_CREDENTIALS.type,\n}",
              "children": [
                {
                  "value": "\"provider\": TEST_CREDENTIALS.provider",
                  "children": [
                    {
                      "value": "\"provider\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "provider",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "TEST_CREDENTIALS.provider",
                      "children": [
                        {
                          "value": "TEST_CREDENTIALS",
                          "children": []
                        },
                        {
                          "value": "provider",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "\"id\": TEST_CREDENTIALS.id",
                  "children": [
                    {
                      "value": "\"id\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "id",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "TEST_CREDENTIALS.id",
                      "children": [
                        {
                          "value": "TEST_CREDENTIALS",
                          "children": []
                        },
                        {
                          "value": "id",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "\"type\": TEST_CREDENTIALS.type",
                  "children": [
                    {
                      "value": "\"type\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "type",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "TEST_CREDENTIALS.type",
                      "children": [
                        {
                          "value": "TEST_CREDENTIALS",
                          "children": []
                        },
                        {
                          "value": "type",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "\"title\": TEST_CREDENTIALS.type",
                  "children": [
                    {
                      "value": "\"title\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "title",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "TEST_CREDENTIALS.type",
                      "children": [
                        {
                          "value": "TEST_CREDENTIALS",
                          "children": []
                        },
                        {
                          "value": "type",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "# Model name enum",
      "children": []
    },
    {
      "value": "class ReplicateFluxModelName(str, Enum):\n    FLUX_SCHNELL = (\"Flux Schnell\",)\n    FLUX_PRO = (\"Flux Pro\",)\n    FLUX_PRO1_1 = (\"Flux Pro 1.1\",)\n\n    @property\n    def api_name(self):\n        api_names = {\n            ReplicateFluxModelName.FLUX_SCHNELL: \"black-forest-labs/flux-schnell\",\n            ReplicateFluxModelName.FLUX_PRO: \"black-forest-labs/flux-pro\",\n            ReplicateFluxModelName.FLUX_PRO1_1: \"black-forest-labs/flux-1.1-pro\",\n        }\n        return api_names[self]",
      "children": [
        {
          "value": "ReplicateFluxModelName",
          "children": []
        },
        {
          "value": "(str, Enum)",
          "children": [
            {
              "value": "str",
              "children": []
            },
            {
              "value": "Enum",
              "children": []
            }
          ]
        },
        {
          "value": "FLUX_SCHNELL = (\"Flux Schnell\",)\n    FLUX_PRO = (\"Flux Pro\",)\n    FLUX_PRO1_1 = (\"Flux Pro 1.1\",)\n\n    @property\n    def api_name(self):\n        api_names = {\n            ReplicateFluxModelName.FLUX_SCHNELL: \"black-forest-labs/flux-schnell\",\n            ReplicateFluxModelName.FLUX_PRO: \"black-forest-labs/flux-pro\",\n            ReplicateFluxModelName.FLUX_PRO1_1: \"black-forest-labs/flux-1.1-pro\",\n        }\n        return api_names[self]",
          "children": [
            {
              "value": "FLUX_SCHNELL = (\"Flux Schnell\",)",
              "children": [
                {
                  "value": "FLUX_SCHNELL = (\"Flux Schnell\",)",
                  "children": [
                    {
                      "value": "FLUX_SCHNELL",
                      "children": []
                    },
                    {
                      "value": "(\"Flux Schnell\",)",
                      "children": [
                        {
                          "value": "\"Flux Schnell\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "Flux Schnell",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "FLUX_PRO = (\"Flux Pro\",)",
              "children": [
                {
                  "value": "FLUX_PRO = (\"Flux Pro\",)",
                  "children": [
                    {
                      "value": "FLUX_PRO",
                      "children": []
                    },
                    {
                      "value": "(\"Flux Pro\",)",
                      "children": [
                        {
                          "value": "\"Flux Pro\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "Flux Pro",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "FLUX_PRO1_1 = (\"Flux Pro 1.1\",)",
              "children": [
                {
                  "value": "FLUX_PRO1_1 = (\"Flux Pro 1.1\",)",
                  "children": [
                    {
                      "value": "FLUX_PRO1_1",
                      "children": []
                    },
                    {
                      "value": "(\"Flux Pro 1.1\",)",
                      "children": [
                        {
                          "value": "\"Flux Pro 1.1\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "Flux Pro 1.1",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "@property\n    def api_name(self):\n        api_names = {\n            ReplicateFluxModelName.FLUX_SCHNELL: \"black-forest-labs/flux-schnell\",\n            ReplicateFluxModelName.FLUX_PRO: \"black-forest-labs/flux-pro\",\n            ReplicateFluxModelName.FLUX_PRO1_1: \"black-forest-labs/flux-1.1-pro\",\n        }\n        return api_names[self]",
              "children": [
                {
                  "value": "@property",
                  "children": [
                    {
                      "value": "property",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "def api_name(self):\n        api_names = {\n            ReplicateFluxModelName.FLUX_SCHNELL: \"black-forest-labs/flux-schnell\",\n            ReplicateFluxModelName.FLUX_PRO: \"black-forest-labs/flux-pro\",\n            ReplicateFluxModelName.FLUX_PRO1_1: \"black-forest-labs/flux-1.1-pro\",\n        }\n        return api_names[self]",
                  "children": [
                    {
                      "value": "api_name",
                      "children": []
                    },
                    {
                      "value": "(self)",
                      "children": [
                        {
                          "value": "self",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "api_names = {\n            ReplicateFluxModelName.FLUX_SCHNELL: \"black-forest-labs/flux-schnell\",\n            ReplicateFluxModelName.FLUX_PRO: \"black-forest-labs/flux-pro\",\n            ReplicateFluxModelName.FLUX_PRO1_1: \"black-forest-labs/flux-1.1-pro\",\n        }\n        return api_names[self]",
                      "children": [
                        {
                          "value": "api_names = {\n            ReplicateFluxModelName.FLUX_SCHNELL: \"black-forest-labs/flux-schnell\",\n            ReplicateFluxModelName.FLUX_PRO: \"black-forest-labs/flux-pro\",\n            ReplicateFluxModelName.FLUX_PRO1_1: \"black-forest-labs/flux-1.1-pro\",\n        }",
                          "children": [
                            {
                              "value": "api_names = {\n            ReplicateFluxModelName.FLUX_SCHNELL: \"black-forest-labs/flux-schnell\",\n            ReplicateFluxModelName.FLUX_PRO: \"black-forest-labs/flux-pro\",\n            ReplicateFluxModelName.FLUX_PRO1_1: \"black-forest-labs/flux-1.1-pro\",\n        }",
                              "children": [
                                {
                                  "value": "api_names",
                                  "children": []
                                },
                                {
                                  "value": "{\n            ReplicateFluxModelName.FLUX_SCHNELL: \"black-forest-labs/flux-schnell\",\n            ReplicateFluxModelName.FLUX_PRO: \"black-forest-labs/flux-pro\",\n            ReplicateFluxModelName.FLUX_PRO1_1: \"black-forest-labs/flux-1.1-pro\",\n        }",
                                  "children": [
                                    {
                                      "value": "ReplicateFluxModelName.FLUX_SCHNELL: \"black-forest-labs/flux-schnell\"",
                                      "children": [
                                        {
                                          "value": "ReplicateFluxModelName.FLUX_SCHNELL",
                                          "children": [
                                            {
                                              "value": "ReplicateFluxModelName",
                                              "children": []
                                            },
                                            {
                                              "value": "FLUX_SCHNELL",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"black-forest-labs/flux-schnell\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "black-forest-labs/flux-schnell",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "ReplicateFluxModelName.FLUX_PRO: \"black-forest-labs/flux-pro\"",
                                      "children": [
                                        {
                                          "value": "ReplicateFluxModelName.FLUX_PRO",
                                          "children": [
                                            {
                                              "value": "ReplicateFluxModelName",
                                              "children": []
                                            },
                                            {
                                              "value": "FLUX_PRO",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"black-forest-labs/flux-pro\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "black-forest-labs/flux-pro",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "ReplicateFluxModelName.FLUX_PRO1_1: \"black-forest-labs/flux-1.1-pro\"",
                                      "children": [
                                        {
                                          "value": "ReplicateFluxModelName.FLUX_PRO1_1",
                                          "children": [
                                            {
                                              "value": "ReplicateFluxModelName",
                                              "children": []
                                            },
                                            {
                                              "value": "FLUX_PRO1_1",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"black-forest-labs/flux-1.1-pro\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "black-forest-labs/flux-1.1-pro",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "return api_names[self]",
                          "children": [
                            {
                              "value": "api_names[self]",
                              "children": [
                                {
                                  "value": "api_names",
                                  "children": []
                                },
                                {
                                  "value": "self",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "# Image type Enum",
      "children": []
    },
    {
      "value": "class ImageType(str, Enum):\n    WEBP = \"webp\"\n    JPG = \"jpg\"\n    PNG = \"png\"",
      "children": [
        {
          "value": "ImageType",
          "children": []
        },
        {
          "value": "(str, Enum)",
          "children": [
            {
              "value": "str",
              "children": []
            },
            {
              "value": "Enum",
              "children": []
            }
          ]
        },
        {
          "value": "WEBP = \"webp\"\n    JPG = \"jpg\"\n    PNG = \"png\"",
          "children": [
            {
              "value": "WEBP = \"webp\"",
              "children": [
                {
                  "value": "WEBP = \"webp\"",
                  "children": [
                    {
                      "value": "WEBP",
                      "children": []
                    },
                    {
                      "value": "\"webp\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "webp",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "JPG = \"jpg\"",
              "children": [
                {
                  "value": "JPG = \"jpg\"",
                  "children": [
                    {
                      "value": "JPG",
                      "children": []
                    },
                    {
                      "value": "\"jpg\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "jpg",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "PNG = \"png\"",
              "children": [
                {
                  "value": "PNG = \"png\"",
                  "children": [
                    {
                      "value": "PNG",
                      "children": []
                    },
                    {
                      "value": "\"png\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "png",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "class ReplicateFluxAdvancedModelBlock(Block):\n    class Input(BlockSchema):\n        credentials: CredentialsMetaInput[\n            Literal[ProviderName.REPLICATE], Literal[\"api_key\"]\n        ] = CredentialsField(\n            description=\"The Replicate integration can be used with \"\n            \"any API key with sufficient permissions for the blocks it is used on.\",\n        )\n        prompt: str = SchemaField(\n            description=\"Text prompt for image generation\",\n            placeholder=\"e.g., 'A futuristic cityscape at sunset'\",\n            title=\"Prompt\",\n        )\n        replicate_model_name: ReplicateFluxModelName = SchemaField(\n            description=\"The name of the Image Generation Model, i.e Flux Schnell\",\n            default=ReplicateFluxModelName.FLUX_SCHNELL,\n            title=\"Image Generation Model\",\n            advanced=False,\n        )\n        seed: int | None = SchemaField(\n            description=\"Random seed. Set for reproducible generation\",\n            default=None,\n            title=\"Seed\",\n        )\n        steps: int = SchemaField(\n            description=\"Number of diffusion steps\",\n            default=25,\n            title=\"Steps\",\n        )\n        guidance: float = SchemaField(\n            description=(\n                \"Controls the balance between adherence to the text prompt and image quality/diversity. \"\n                \"Higher values make the output more closely match the prompt but may reduce overall image quality.\"\n            ),\n            default=3,\n            title=\"Guidance\",\n        )\n        interval: float = SchemaField(\n            description=(\n                \"Interval is a setting that increases the variance in possible outputs. \"\n                \"Setting this value low will ensure strong prompt following with more consistent outputs.\"\n            ),\n            default=2,\n            title=\"Interval\",\n        )\n        aspect_ratio: str = SchemaField(\n            description=\"Aspect ratio for the generated image\",\n            default=\"1:1\",\n            title=\"Aspect Ratio\",\n            placeholder=\"Choose from: 1:1, 16:9, 2:3, 3:2, 4:5, 5:4, 9:16\",\n        )\n        output_format: ImageType = SchemaField(\n            description=\"File format of the output image\",\n            default=ImageType.WEBP,\n            title=\"Output Format\",\n        )\n        output_quality: int = SchemaField(\n            description=(\n                \"Quality when saving the output images, from 0 to 100. \"\n                \"Not relevant for .png outputs\"\n            ),\n            default=80,\n            title=\"Output Quality\",\n        )\n        safety_tolerance: int = SchemaField(\n            description=\"Safety tolerance, 1 is most strict and 5 is most permissive\",\n            default=2,\n            title=\"Safety Tolerance\",\n        )\n\n    class Output(BlockSchema):\n        result: str = SchemaField(description=\"Generated output\")\n        error: str = SchemaField(description=\"Error message if the model run failed\")\n\n    def __init__(self):\n        super().__init__(\n            id=\"90f8c45e-e983-4644-aa0b-b4ebe2f531bc\",\n            description=\"This block runs Flux models on Replicate with advanced settings.\",\n            categories={BlockCategory.AI},\n            input_schema=ReplicateFluxAdvancedModelBlock.Input,\n            output_schema=ReplicateFluxAdvancedModelBlock.Output,\n            test_input={\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n                \"replicate_model_name\": ReplicateFluxModelName.FLUX_SCHNELL,\n                \"prompt\": \"A beautiful landscape painting of a serene lake at sunrise\",\n                \"seed\": None,\n                \"steps\": 25,\n                \"guidance\": 3.0,\n                \"interval\": 2.0,\n                \"aspect_ratio\": \"1:1\",\n                \"output_format\": ImageType.PNG,\n                \"output_quality\": 80,\n                \"safety_tolerance\": 2,\n            },\n            test_output=[\n                (\n                    \"result\",\n                    \"https://replicate.com/output/generated-image-url.jpg\",\n                ),\n            ],\n            test_mock={\n                \"run_model\": lambda api_key, model_name, prompt, seed, steps, guidance, interval, aspect_ratio, output_format, output_quality, safety_tolerance: \"https://replicate.com/output/generated-image-url.jpg\",\n            },\n            test_credentials=TEST_CREDENTIALS,\n        )\n\n    def run(\n        self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs\n    ) -> BlockOutput:\n        # If the seed is not provided, generate a random seed\n        seed = input_data.seed\n        if seed is None:\n            seed = int.from_bytes(os.urandom(4), \"big\")\n\n        # Run the model using the provided inputs\n        result = self.run_model(\n            api_key=credentials.api_key,\n            model_name=input_data.replicate_model_name.api_name,\n            prompt=input_data.prompt,\n            seed=seed,\n            steps=input_data.steps,\n            guidance=input_data.guidance,\n            interval=input_data.interval,\n            aspect_ratio=input_data.aspect_ratio,\n            output_format=input_data.output_format,\n            output_quality=input_data.output_quality,\n            safety_tolerance=input_data.safety_tolerance,\n        )\n        yield \"result\", result\n\n    def run_model(\n        self,\n        api_key: SecretStr,\n        model_name,\n        prompt,\n        seed,\n        steps,\n        guidance,\n        interval,\n        aspect_ratio,\n        output_format,\n        output_quality,\n        safety_tolerance,\n    ):\n        # Initialize Replicate client with the API key\n        client = replicate.Client(api_token=api_key.get_secret_value())\n\n        # Run the model with additional parameters\n        output: FileOutput | list[FileOutput] = client.run(  # type: ignore This is because they changed the return type, and didn't update the type hint! It should be overloaded depending on the value of `use_file_output` to `FileOutput | list[FileOutput]` but it's `Any | Iterator[Any]`\n            f\"{model_name}\",\n            input={\n                \"prompt\": prompt,\n                \"seed\": seed,\n                \"steps\": steps,\n                \"guidance\": guidance,\n                \"interval\": interval,\n                \"aspect_ratio\": aspect_ratio,\n                \"output_format\": output_format,\n                \"output_quality\": output_quality,\n                \"safety_tolerance\": safety_tolerance,\n            },\n            wait=False,  # don't arbitrarily return data:octect/stream or sometimes url depending on the model???? what is this api\n        )\n\n        # Check if output is a list or a string and extract accordingly; otherwise, assign a default message\n        if isinstance(output, list) and len(output) > 0:\n            if isinstance(output[0], FileOutput):\n                result_url = output[0].url  # If output is a list, get the first element\n            else:\n                result_url = output[\n                    0\n                ]  # If output is a list and not a FileOutput, get the first element. Should never happen, but just in case.\n        elif isinstance(output, FileOutput):\n            result_url = output.url  # If output is a FileOutput, use the url\n        elif isinstance(output, str):\n            result_url = output  # If output is a string (for some reason due to their janky type hinting), use it directly\n        else:\n            result_url = (\n                \"No output received\"  # Fallback message if output is not as expected\n            )\n\n        return result_url",
      "children": [
        {
          "value": "ReplicateFluxAdvancedModelBlock",
          "children": []
        },
        {
          "value": "(Block)",
          "children": [
            {
              "value": "Block",
              "children": []
            }
          ]
        },
        {
          "value": "class Input(BlockSchema):\n        credentials: CredentialsMetaInput[\n            Literal[ProviderName.REPLICATE], Literal[\"api_key\"]\n        ] = CredentialsField(\n            description=\"The Replicate integration can be used with \"\n            \"any API key with sufficient permissions for the blocks it is used on.\",\n        )\n        prompt: str = SchemaField(\n            description=\"Text prompt for image generation\",\n            placeholder=\"e.g., 'A futuristic cityscape at sunset'\",\n            title=\"Prompt\",\n        )\n        replicate_model_name: ReplicateFluxModelName = SchemaField(\n            description=\"The name of the Image Generation Model, i.e Flux Schnell\",\n            default=ReplicateFluxModelName.FLUX_SCHNELL,\n            title=\"Image Generation Model\",\n            advanced=False,\n        )\n        seed: int | None = SchemaField(\n            description=\"Random seed. Set for reproducible generation\",\n            default=None,\n            title=\"Seed\",\n        )\n        steps: int = SchemaField(\n            description=\"Number of diffusion steps\",\n            default=25,\n            title=\"Steps\",\n        )\n        guidance: float = SchemaField(\n            description=(\n                \"Controls the balance between adherence to the text prompt and image quality/diversity. \"\n                \"Higher values make the output more closely match the prompt but may reduce overall image quality.\"\n            ),\n            default=3,\n            title=\"Guidance\",\n        )\n        interval: float = SchemaField(\n            description=(\n                \"Interval is a setting that increases the variance in possible outputs. \"\n                \"Setting this value low will ensure strong prompt following with more consistent outputs.\"\n            ),\n            default=2,\n            title=\"Interval\",\n        )\n        aspect_ratio: str = SchemaField(\n            description=\"Aspect ratio for the generated image\",\n            default=\"1:1\",\n            title=\"Aspect Ratio\",\n            placeholder=\"Choose from: 1:1, 16:9, 2:3, 3:2, 4:5, 5:4, 9:16\",\n        )\n        output_format: ImageType = SchemaField(\n            description=\"File format of the output image\",\n            default=ImageType.WEBP,\n            title=\"Output Format\",\n        )\n        output_quality: int = SchemaField(\n            description=(\n                \"Quality when saving the output images, from 0 to 100. \"\n                \"Not relevant for .png outputs\"\n            ),\n            default=80,\n            title=\"Output Quality\",\n        )\n        safety_tolerance: int = SchemaField(\n            description=\"Safety tolerance, 1 is most strict and 5 is most permissive\",\n            default=2,\n            title=\"Safety Tolerance\",\n        )\n\n    class Output(BlockSchema):\n        result: str = SchemaField(description=\"Generated output\")\n        error: str = SchemaField(description=\"Error message if the model run failed\")\n\n    def __init__(self):\n        super().__init__(\n            id=\"90f8c45e-e983-4644-aa0b-b4ebe2f531bc\",\n            description=\"This block runs Flux models on Replicate with advanced settings.\",\n            categories={BlockCategory.AI},\n            input_schema=ReplicateFluxAdvancedModelBlock.Input,\n            output_schema=ReplicateFluxAdvancedModelBlock.Output,\n            test_input={\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n                \"replicate_model_name\": ReplicateFluxModelName.FLUX_SCHNELL,\n                \"prompt\": \"A beautiful landscape painting of a serene lake at sunrise\",\n                \"seed\": None,\n                \"steps\": 25,\n                \"guidance\": 3.0,\n                \"interval\": 2.0,\n                \"aspect_ratio\": \"1:1\",\n                \"output_format\": ImageType.PNG,\n                \"output_quality\": 80,\n                \"safety_tolerance\": 2,\n            },\n            test_output=[\n                (\n                    \"result\",\n                    \"https://replicate.com/output/generated-image-url.jpg\",\n                ),\n            ],\n            test_mock={\n                \"run_model\": lambda api_key, model_name, prompt, seed, steps, guidance, interval, aspect_ratio, output_format, output_quality, safety_tolerance: \"https://replicate.com/output/generated-image-url.jpg\",\n            },\n            test_credentials=TEST_CREDENTIALS,\n        )\n\n    def run(\n        self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs\n    ) -> BlockOutput:\n        # If the seed is not provided, generate a random seed\n        seed = input_data.seed\n        if seed is None:\n            seed = int.from_bytes(os.urandom(4), \"big\")\n\n        # Run the model using the provided inputs\n        result = self.run_model(\n            api_key=credentials.api_key,\n            model_name=input_data.replicate_model_name.api_name,\n            prompt=input_data.prompt,\n            seed=seed,\n            steps=input_data.steps,\n            guidance=input_data.guidance,\n            interval=input_data.interval,\n            aspect_ratio=input_data.aspect_ratio,\n            output_format=input_data.output_format,\n            output_quality=input_data.output_quality,\n            safety_tolerance=input_data.safety_tolerance,\n        )\n        yield \"result\", result\n\n    def run_model(\n        self,\n        api_key: SecretStr,\n        model_name,\n        prompt,\n        seed,\n        steps,\n        guidance,\n        interval,\n        aspect_ratio,\n        output_format,\n        output_quality,\n        safety_tolerance,\n    ):\n        # Initialize Replicate client with the API key\n        client = replicate.Client(api_token=api_key.get_secret_value())\n\n        # Run the model with additional parameters\n        output: FileOutput | list[FileOutput] = client.run(  # type: ignore This is because they changed the return type, and didn't update the type hint! It should be overloaded depending on the value of `use_file_output` to `FileOutput | list[FileOutput]` but it's `Any | Iterator[Any]`\n            f\"{model_name}\",\n            input={\n                \"prompt\": prompt,\n                \"seed\": seed,\n                \"steps\": steps,\n                \"guidance\": guidance,\n                \"interval\": interval,\n                \"aspect_ratio\": aspect_ratio,\n                \"output_format\": output_format,\n                \"output_quality\": output_quality,\n                \"safety_tolerance\": safety_tolerance,\n            },\n            wait=False,  # don't arbitrarily return data:octect/stream or sometimes url depending on the model???? what is this api\n        )\n\n        # Check if output is a list or a string and extract accordingly; otherwise, assign a default message\n        if isinstance(output, list) and len(output) > 0:\n            if isinstance(output[0], FileOutput):\n                result_url = output[0].url  # If output is a list, get the first element\n            else:\n                result_url = output[\n                    0\n                ]  # If output is a list and not a FileOutput, get the first element. Should never happen, but just in case.\n        elif isinstance(output, FileOutput):\n            result_url = output.url  # If output is a FileOutput, use the url\n        elif isinstance(output, str):\n            result_url = output  # If output is a string (for some reason due to their janky type hinting), use it directly\n        else:\n            result_url = (\n                \"No output received\"  # Fallback message if output is not as expected\n            )\n\n        return result_url",
          "children": [
            {
              "value": "class Input(BlockSchema):\n        credentials: CredentialsMetaInput[\n            Literal[ProviderName.REPLICATE], Literal[\"api_key\"]\n        ] = CredentialsField(\n            description=\"The Replicate integration can be used with \"\n            \"any API key with sufficient permissions for the blocks it is used on.\",\n        )\n        prompt: str = SchemaField(\n            description=\"Text prompt for image generation\",\n            placeholder=\"e.g., 'A futuristic cityscape at sunset'\",\n            title=\"Prompt\",\n        )\n        replicate_model_name: ReplicateFluxModelName = SchemaField(\n            description=\"The name of the Image Generation Model, i.e Flux Schnell\",\n            default=ReplicateFluxModelName.FLUX_SCHNELL,\n            title=\"Image Generation Model\",\n            advanced=False,\n        )\n        seed: int | None = SchemaField(\n            description=\"Random seed. Set for reproducible generation\",\n            default=None,\n            title=\"Seed\",\n        )\n        steps: int = SchemaField(\n            description=\"Number of diffusion steps\",\n            default=25,\n            title=\"Steps\",\n        )\n        guidance: float = SchemaField(\n            description=(\n                \"Controls the balance between adherence to the text prompt and image quality/diversity. \"\n                \"Higher values make the output more closely match the prompt but may reduce overall image quality.\"\n            ),\n            default=3,\n            title=\"Guidance\",\n        )\n        interval: float = SchemaField(\n            description=(\n                \"Interval is a setting that increases the variance in possible outputs. \"\n                \"Setting this value low will ensure strong prompt following with more consistent outputs.\"\n            ),\n            default=2,\n            title=\"Interval\",\n        )\n        aspect_ratio: str = SchemaField(\n            description=\"Aspect ratio for the generated image\",\n            default=\"1:1\",\n            title=\"Aspect Ratio\",\n            placeholder=\"Choose from: 1:1, 16:9, 2:3, 3:2, 4:5, 5:4, 9:16\",\n        )\n        output_format: ImageType = SchemaField(\n            description=\"File format of the output image\",\n            default=ImageType.WEBP,\n            title=\"Output Format\",\n        )\n        output_quality: int = SchemaField(\n            description=(\n                \"Quality when saving the output images, from 0 to 100. \"\n                \"Not relevant for .png outputs\"\n            ),\n            default=80,\n            title=\"Output Quality\",\n        )\n        safety_tolerance: int = SchemaField(\n            description=\"Safety tolerance, 1 is most strict and 5 is most permissive\",\n            default=2,\n            title=\"Safety Tolerance\",\n        )",
              "children": [
                {
                  "value": "Input",
                  "children": []
                },
                {
                  "value": "(BlockSchema)",
                  "children": [
                    {
                      "value": "BlockSchema",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "credentials: CredentialsMetaInput[\n            Literal[ProviderName.REPLICATE], Literal[\"api_key\"]\n        ] = CredentialsField(\n            description=\"The Replicate integration can be used with \"\n            \"any API key with sufficient permissions for the blocks it is used on.\",\n        )\n        prompt: str = SchemaField(\n            description=\"Text prompt for image generation\",\n            placeholder=\"e.g., 'A futuristic cityscape at sunset'\",\n            title=\"Prompt\",\n        )\n        replicate_model_name: ReplicateFluxModelName = SchemaField(\n            description=\"The name of the Image Generation Model, i.e Flux Schnell\",\n            default=ReplicateFluxModelName.FLUX_SCHNELL,\n            title=\"Image Generation Model\",\n            advanced=False,\n        )\n        seed: int | None = SchemaField(\n            description=\"Random seed. Set for reproducible generation\",\n            default=None,\n            title=\"Seed\",\n        )\n        steps: int = SchemaField(\n            description=\"Number of diffusion steps\",\n            default=25,\n            title=\"Steps\",\n        )\n        guidance: float = SchemaField(\n            description=(\n                \"Controls the balance between adherence to the text prompt and image quality/diversity. \"\n                \"Higher values make the output more closely match the prompt but may reduce overall image quality.\"\n            ),\n            default=3,\n            title=\"Guidance\",\n        )\n        interval: float = SchemaField(\n            description=(\n                \"Interval is a setting that increases the variance in possible outputs. \"\n                \"Setting this value low will ensure strong prompt following with more consistent outputs.\"\n            ),\n            default=2,\n            title=\"Interval\",\n        )\n        aspect_ratio: str = SchemaField(\n            description=\"Aspect ratio for the generated image\",\n            default=\"1:1\",\n            title=\"Aspect Ratio\",\n            placeholder=\"Choose from: 1:1, 16:9, 2:3, 3:2, 4:5, 5:4, 9:16\",\n        )\n        output_format: ImageType = SchemaField(\n            description=\"File format of the output image\",\n            default=ImageType.WEBP,\n            title=\"Output Format\",\n        )\n        output_quality: int = SchemaField(\n            description=(\n                \"Quality when saving the output images, from 0 to 100. \"\n                \"Not relevant for .png outputs\"\n            ),\n            default=80,\n            title=\"Output Quality\",\n        )\n        safety_tolerance: int = SchemaField(\n            description=\"Safety tolerance, 1 is most strict and 5 is most permissive\",\n            default=2,\n            title=\"Safety Tolerance\",\n        )",
                  "children": [
                    {
                      "value": "credentials: CredentialsMetaInput[\n            Literal[ProviderName.REPLICATE], Literal[\"api_key\"]\n        ] = CredentialsField(\n            description=\"The Replicate integration can be used with \"\n            \"any API key with sufficient permissions for the blocks it is used on.\",\n        )",
                      "children": [
                        {
                          "value": "credentials: CredentialsMetaInput[\n            Literal[ProviderName.REPLICATE], Literal[\"api_key\"]\n        ] = CredentialsField(\n            description=\"The Replicate integration can be used with \"\n            \"any API key with sufficient permissions for the blocks it is used on.\",\n        )",
                          "children": [
                            {
                              "value": "credentials",
                              "children": []
                            },
                            {
                              "value": "CredentialsMetaInput[\n            Literal[ProviderName.REPLICATE], Literal[\"api_key\"]\n        ]",
                              "children": [
                                {
                                  "value": "CredentialsMetaInput[\n            Literal[ProviderName.REPLICATE], Literal[\"api_key\"]\n        ]",
                                  "children": [
                                    {
                                      "value": "CredentialsMetaInput",
                                      "children": []
                                    },
                                    {
                                      "value": "[\n            Literal[ProviderName.REPLICATE], Literal[\"api_key\"]\n        ]",
                                      "children": [
                                        {
                                          "value": "Literal[ProviderName.REPLICATE]",
                                          "children": [
                                            {
                                              "value": "Literal[ProviderName.REPLICATE]",
                                              "children": [
                                                {
                                                  "value": "Literal",
                                                  "children": []
                                                },
                                                {
                                                  "value": "[ProviderName.REPLICATE]",
                                                  "children": [
                                                    {
                                                      "value": "ProviderName.REPLICATE",
                                                      "children": [
                                                        {
                                                          "value": "ProviderName.REPLICATE",
                                                          "children": [
                                                            {
                                                              "value": "ProviderName",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "REPLICATE",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "Literal[\"api_key\"]",
                                          "children": [
                                            {
                                              "value": "Literal[\"api_key\"]",
                                              "children": [
                                                {
                                                  "value": "Literal",
                                                  "children": []
                                                },
                                                {
                                                  "value": "[\"api_key\"]",
                                                  "children": [
                                                    {
                                                      "value": "\"api_key\"",
                                                      "children": [
                                                        {
                                                          "value": "\"api_key\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "api_key",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "CredentialsField(\n            description=\"The Replicate integration can be used with \"\n            \"any API key with sufficient permissions for the blocks it is used on.\",\n        )",
                              "children": [
                                {
                                  "value": "CredentialsField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=\"The Replicate integration can be used with \"\n            \"any API key with sufficient permissions for the blocks it is used on.\",\n        )",
                                  "children": [
                                    {
                                      "value": "description=\"The Replicate integration can be used with \"\n            \"any API key with sufficient permissions for the blocks it is used on.\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"The Replicate integration can be used with \"\n            \"any API key with sufficient permissions for the blocks it is used on.\"",
                                          "children": [
                                            {
                                              "value": "\"The Replicate integration can be used with \"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "The Replicate integration can be used with",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"any API key with sufficient permissions for the blocks it is used on.\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "any API key with sufficient permissions for the blocks it is used on.",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "prompt: str = SchemaField(\n            description=\"Text prompt for image generation\",\n            placeholder=\"e.g., 'A futuristic cityscape at sunset'\",\n            title=\"Prompt\",\n        )",
                      "children": [
                        {
                          "value": "prompt: str = SchemaField(\n            description=\"Text prompt for image generation\",\n            placeholder=\"e.g., 'A futuristic cityscape at sunset'\",\n            title=\"Prompt\",\n        )",
                          "children": [
                            {
                              "value": "prompt",
                              "children": []
                            },
                            {
                              "value": "str",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            description=\"Text prompt for image generation\",\n            placeholder=\"e.g., 'A futuristic cityscape at sunset'\",\n            title=\"Prompt\",\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=\"Text prompt for image generation\",\n            placeholder=\"e.g., 'A futuristic cityscape at sunset'\",\n            title=\"Prompt\",\n        )",
                                  "children": [
                                    {
                                      "value": "description=\"Text prompt for image generation\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Text prompt for image generation\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Text prompt for image generation",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "placeholder=\"e.g., 'A futuristic cityscape at sunset'\"",
                                      "children": [
                                        {
                                          "value": "placeholder",
                                          "children": []
                                        },
                                        {
                                          "value": "\"e.g., 'A futuristic cityscape at sunset'\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "e.g., 'A futuristic cityscape at sunset'",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "title=\"Prompt\"",
                                      "children": [
                                        {
                                          "value": "title",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Prompt\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Prompt",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "replicate_model_name: ReplicateFluxModelName = SchemaField(\n            description=\"The name of the Image Generation Model, i.e Flux Schnell\",\n            default=ReplicateFluxModelName.FLUX_SCHNELL,\n            title=\"Image Generation Model\",\n            advanced=False,\n        )",
                      "children": [
                        {
                          "value": "replicate_model_name: ReplicateFluxModelName = SchemaField(\n            description=\"The name of the Image Generation Model, i.e Flux Schnell\",\n            default=ReplicateFluxModelName.FLUX_SCHNELL,\n            title=\"Image Generation Model\",\n            advanced=False,\n        )",
                          "children": [
                            {
                              "value": "replicate_model_name",
                              "children": []
                            },
                            {
                              "value": "ReplicateFluxModelName",
                              "children": [
                                {
                                  "value": "ReplicateFluxModelName",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            description=\"The name of the Image Generation Model, i.e Flux Schnell\",\n            default=ReplicateFluxModelName.FLUX_SCHNELL,\n            title=\"Image Generation Model\",\n            advanced=False,\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=\"The name of the Image Generation Model, i.e Flux Schnell\",\n            default=ReplicateFluxModelName.FLUX_SCHNELL,\n            title=\"Image Generation Model\",\n            advanced=False,\n        )",
                                  "children": [
                                    {
                                      "value": "description=\"The name of the Image Generation Model, i.e Flux Schnell\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"The name of the Image Generation Model, i.e Flux Schnell\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "The name of the Image Generation Model, i.e Flux Schnell",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "default=ReplicateFluxModelName.FLUX_SCHNELL",
                                      "children": [
                                        {
                                          "value": "default",
                                          "children": []
                                        },
                                        {
                                          "value": "ReplicateFluxModelName.FLUX_SCHNELL",
                                          "children": [
                                            {
                                              "value": "ReplicateFluxModelName",
                                              "children": []
                                            },
                                            {
                                              "value": "FLUX_SCHNELL",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "title=\"Image Generation Model\"",
                                      "children": [
                                        {
                                          "value": "title",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Image Generation Model\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Image Generation Model",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "advanced=False",
                                      "children": [
                                        {
                                          "value": "advanced",
                                          "children": []
                                        },
                                        {
                                          "value": "False",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "seed: int | None = SchemaField(\n            description=\"Random seed. Set for reproducible generation\",\n            default=None,\n            title=\"Seed\",\n        )",
                      "children": [
                        {
                          "value": "seed: int | None = SchemaField(\n            description=\"Random seed. Set for reproducible generation\",\n            default=None,\n            title=\"Seed\",\n        )",
                          "children": [
                            {
                              "value": "seed",
                              "children": []
                            },
                            {
                              "value": "int | None",
                              "children": [
                                {
                                  "value": "int | None",
                                  "children": [
                                    {
                                      "value": "int",
                                      "children": []
                                    },
                                    {
                                      "value": "None",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            description=\"Random seed. Set for reproducible generation\",\n            default=None,\n            title=\"Seed\",\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=\"Random seed. Set for reproducible generation\",\n            default=None,\n            title=\"Seed\",\n        )",
                                  "children": [
                                    {
                                      "value": "description=\"Random seed. Set for reproducible generation\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Random seed. Set for reproducible generation\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Random seed. Set for reproducible generation",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "default=None",
                                      "children": [
                                        {
                                          "value": "default",
                                          "children": []
                                        },
                                        {
                                          "value": "None",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "title=\"Seed\"",
                                      "children": [
                                        {
                                          "value": "title",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Seed\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Seed",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "steps: int = SchemaField(\n            description=\"Number of diffusion steps\",\n            default=25,\n            title=\"Steps\",\n        )",
                      "children": [
                        {
                          "value": "steps: int = SchemaField(\n            description=\"Number of diffusion steps\",\n            default=25,\n            title=\"Steps\",\n        )",
                          "children": [
                            {
                              "value": "steps",
                              "children": []
                            },
                            {
                              "value": "int",
                              "children": [
                                {
                                  "value": "int",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            description=\"Number of diffusion steps\",\n            default=25,\n            title=\"Steps\",\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=\"Number of diffusion steps\",\n            default=25,\n            title=\"Steps\",\n        )",
                                  "children": [
                                    {
                                      "value": "description=\"Number of diffusion steps\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Number of diffusion steps\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Number of diffusion steps",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "default=25",
                                      "children": [
                                        {
                                          "value": "default",
                                          "children": []
                                        },
                                        {
                                          "value": "25",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "title=\"Steps\"",
                                      "children": [
                                        {
                                          "value": "title",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Steps\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Steps",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "guidance: float = SchemaField(\n            description=(\n                \"Controls the balance between adherence to the text prompt and image quality/diversity. \"\n                \"Higher values make the output more closely match the prompt but may reduce overall image quality.\"\n            ),\n            default=3,\n            title=\"Guidance\",\n        )",
                      "children": [
                        {
                          "value": "guidance: float = SchemaField(\n            description=(\n                \"Controls the balance between adherence to the text prompt and image quality/diversity. \"\n                \"Higher values make the output more closely match the prompt but may reduce overall image quality.\"\n            ),\n            default=3,\n            title=\"Guidance\",\n        )",
                          "children": [
                            {
                              "value": "guidance",
                              "children": []
                            },
                            {
                              "value": "float",
                              "children": [
                                {
                                  "value": "float",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            description=(\n                \"Controls the balance between adherence to the text prompt and image quality/diversity. \"\n                \"Higher values make the output more closely match the prompt but may reduce overall image quality.\"\n            ),\n            default=3,\n            title=\"Guidance\",\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=(\n                \"Controls the balance between adherence to the text prompt and image quality/diversity. \"\n                \"Higher values make the output more closely match the prompt but may reduce overall image quality.\"\n            ),\n            default=3,\n            title=\"Guidance\",\n        )",
                                  "children": [
                                    {
                                      "value": "description=(\n                \"Controls the balance between adherence to the text prompt and image quality/diversity. \"\n                \"Higher values make the output more closely match the prompt but may reduce overall image quality.\"\n            )",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "(\n                \"Controls the balance between adherence to the text prompt and image quality/diversity. \"\n                \"Higher values make the output more closely match the prompt but may reduce overall image quality.\"\n            )",
                                          "children": [
                                            {
                                              "value": "\"Controls the balance between adherence to the text prompt and image quality/diversity. \"\n                \"Higher values make the output more closely match the prompt but may reduce overall image quality.\"",
                                              "children": [
                                                {
                                                  "value": "\"Controls the balance between adherence to the text prompt and image quality/diversity. \"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "Controls the balance between adherence to the text prompt and image quality/diversity.",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"Higher values make the output more closely match the prompt but may reduce overall image quality.\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "Higher values make the output more closely match the prompt but may reduce overall image quality.",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "default=3",
                                      "children": [
                                        {
                                          "value": "default",
                                          "children": []
                                        },
                                        {
                                          "value": "3",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "title=\"Guidance\"",
                                      "children": [
                                        {
                                          "value": "title",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Guidance\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Guidance",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "interval: float = SchemaField(\n            description=(\n                \"Interval is a setting that increases the variance in possible outputs. \"\n                \"Setting this value low will ensure strong prompt following with more consistent outputs.\"\n            ),\n            default=2,\n            title=\"Interval\",\n        )",
                      "children": [
                        {
                          "value": "interval: float = SchemaField(\n            description=(\n                \"Interval is a setting that increases the variance in possible outputs. \"\n                \"Setting this value low will ensure strong prompt following with more consistent outputs.\"\n            ),\n            default=2,\n            title=\"Interval\",\n        )",
                          "children": [
                            {
                              "value": "interval",
                              "children": []
                            },
                            {
                              "value": "float",
                              "children": [
                                {
                                  "value": "float",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            description=(\n                \"Interval is a setting that increases the variance in possible outputs. \"\n                \"Setting this value low will ensure strong prompt following with more consistent outputs.\"\n            ),\n            default=2,\n            title=\"Interval\",\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=(\n                \"Interval is a setting that increases the variance in possible outputs. \"\n                \"Setting this value low will ensure strong prompt following with more consistent outputs.\"\n            ),\n            default=2,\n            title=\"Interval\",\n        )",
                                  "children": [
                                    {
                                      "value": "description=(\n                \"Interval is a setting that increases the variance in possible outputs. \"\n                \"Setting this value low will ensure strong prompt following with more consistent outputs.\"\n            )",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "(\n                \"Interval is a setting that increases the variance in possible outputs. \"\n                \"Setting this value low will ensure strong prompt following with more consistent outputs.\"\n            )",
                                          "children": [
                                            {
                                              "value": "\"Interval is a setting that increases the variance in possible outputs. \"\n                \"Setting this value low will ensure strong prompt following with more consistent outputs.\"",
                                              "children": [
                                                {
                                                  "value": "\"Interval is a setting that increases the variance in possible outputs. \"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "Interval is a setting that increases the variance in possible outputs.",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"Setting this value low will ensure strong prompt following with more consistent outputs.\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "Setting this value low will ensure strong prompt following with more consistent outputs.",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "default=2",
                                      "children": [
                                        {
                                          "value": "default",
                                          "children": []
                                        },
                                        {
                                          "value": "2",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "title=\"Interval\"",
                                      "children": [
                                        {
                                          "value": "title",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Interval\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Interval",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "aspect_ratio: str = SchemaField(\n            description=\"Aspect ratio for the generated image\",\n            default=\"1:1\",\n            title=\"Aspect Ratio\",\n            placeholder=\"Choose from: 1:1, 16:9, 2:3, 3:2, 4:5, 5:4, 9:16\",\n        )",
                      "children": [
                        {
                          "value": "aspect_ratio: str = SchemaField(\n            description=\"Aspect ratio for the generated image\",\n            default=\"1:1\",\n            title=\"Aspect Ratio\",\n            placeholder=\"Choose from: 1:1, 16:9, 2:3, 3:2, 4:5, 5:4, 9:16\",\n        )",
                          "children": [
                            {
                              "value": "aspect_ratio",
                              "children": []
                            },
                            {
                              "value": "str",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            description=\"Aspect ratio for the generated image\",\n            default=\"1:1\",\n            title=\"Aspect Ratio\",\n            placeholder=\"Choose from: 1:1, 16:9, 2:3, 3:2, 4:5, 5:4, 9:16\",\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=\"Aspect ratio for the generated image\",\n            default=\"1:1\",\n            title=\"Aspect Ratio\",\n            placeholder=\"Choose from: 1:1, 16:9, 2:3, 3:2, 4:5, 5:4, 9:16\",\n        )",
                                  "children": [
                                    {
                                      "value": "description=\"Aspect ratio for the generated image\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Aspect ratio for the generated image\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Aspect ratio for the generated image",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "default=\"1:1\"",
                                      "children": [
                                        {
                                          "value": "default",
                                          "children": []
                                        },
                                        {
                                          "value": "\"1:1\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "1:1",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "title=\"Aspect Ratio\"",
                                      "children": [
                                        {
                                          "value": "title",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Aspect Ratio\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Aspect Ratio",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "placeholder=\"Choose from: 1:1, 16:9, 2:3, 3:2, 4:5, 5:4, 9:16\"",
                                      "children": [
                                        {
                                          "value": "placeholder",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Choose from: 1:1, 16:9, 2:3, 3:2, 4:5, 5:4, 9:16\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Choose from: 1:1, 16:9, 2:3, 3:2, 4:5, 5:4, 9:16",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "output_format: ImageType = SchemaField(\n            description=\"File format of the output image\",\n            default=ImageType.WEBP,\n            title=\"Output Format\",\n        )",
                      "children": [
                        {
                          "value": "output_format: ImageType = SchemaField(\n            description=\"File format of the output image\",\n            default=ImageType.WEBP,\n            title=\"Output Format\",\n        )",
                          "children": [
                            {
                              "value": "output_format",
                              "children": []
                            },
                            {
                              "value": "ImageType",
                              "children": [
                                {
                                  "value": "ImageType",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            description=\"File format of the output image\",\n            default=ImageType.WEBP,\n            title=\"Output Format\",\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=\"File format of the output image\",\n            default=ImageType.WEBP,\n            title=\"Output Format\",\n        )",
                                  "children": [
                                    {
                                      "value": "description=\"File format of the output image\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"File format of the output image\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "File format of the output image",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "default=ImageType.WEBP",
                                      "children": [
                                        {
                                          "value": "default",
                                          "children": []
                                        },
                                        {
                                          "value": "ImageType.WEBP",
                                          "children": [
                                            {
                                              "value": "ImageType",
                                              "children": []
                                            },
                                            {
                                              "value": "WEBP",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "title=\"Output Format\"",
                                      "children": [
                                        {
                                          "value": "title",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Output Format\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Output Format",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "output_quality: int = SchemaField(\n            description=(\n                \"Quality when saving the output images, from 0 to 100. \"\n                \"Not relevant for .png outputs\"\n            ),\n            default=80,\n            title=\"Output Quality\",\n        )",
                      "children": [
                        {
                          "value": "output_quality: int = SchemaField(\n            description=(\n                \"Quality when saving the output images, from 0 to 100. \"\n                \"Not relevant for .png outputs\"\n            ),\n            default=80,\n            title=\"Output Quality\",\n        )",
                          "children": [
                            {
                              "value": "output_quality",
                              "children": []
                            },
                            {
                              "value": "int",
                              "children": [
                                {
                                  "value": "int",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            description=(\n                \"Quality when saving the output images, from 0 to 100. \"\n                \"Not relevant for .png outputs\"\n            ),\n            default=80,\n            title=\"Output Quality\",\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=(\n                \"Quality when saving the output images, from 0 to 100. \"\n                \"Not relevant for .png outputs\"\n            ),\n            default=80,\n            title=\"Output Quality\",\n        )",
                                  "children": [
                                    {
                                      "value": "description=(\n                \"Quality when saving the output images, from 0 to 100. \"\n                \"Not relevant for .png outputs\"\n            )",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "(\n                \"Quality when saving the output images, from 0 to 100. \"\n                \"Not relevant for .png outputs\"\n            )",
                                          "children": [
                                            {
                                              "value": "\"Quality when saving the output images, from 0 to 100. \"\n                \"Not relevant for .png outputs\"",
                                              "children": [
                                                {
                                                  "value": "\"Quality when saving the output images, from 0 to 100. \"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "Quality when saving the output images, from 0 to 100.",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"Not relevant for .png outputs\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "Not relevant for .png outputs",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "default=80",
                                      "children": [
                                        {
                                          "value": "default",
                                          "children": []
                                        },
                                        {
                                          "value": "80",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "title=\"Output Quality\"",
                                      "children": [
                                        {
                                          "value": "title",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Output Quality\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Output Quality",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "safety_tolerance: int = SchemaField(\n            description=\"Safety tolerance, 1 is most strict and 5 is most permissive\",\n            default=2,\n            title=\"Safety Tolerance\",\n        )",
                      "children": [
                        {
                          "value": "safety_tolerance: int = SchemaField(\n            description=\"Safety tolerance, 1 is most strict and 5 is most permissive\",\n            default=2,\n            title=\"Safety Tolerance\",\n        )",
                          "children": [
                            {
                              "value": "safety_tolerance",
                              "children": []
                            },
                            {
                              "value": "int",
                              "children": [
                                {
                                  "value": "int",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            description=\"Safety tolerance, 1 is most strict and 5 is most permissive\",\n            default=2,\n            title=\"Safety Tolerance\",\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=\"Safety tolerance, 1 is most strict and 5 is most permissive\",\n            default=2,\n            title=\"Safety Tolerance\",\n        )",
                                  "children": [
                                    {
                                      "value": "description=\"Safety tolerance, 1 is most strict and 5 is most permissive\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Safety tolerance, 1 is most strict and 5 is most permissive\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Safety tolerance, 1 is most strict and 5 is most permissive",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "default=2",
                                      "children": [
                                        {
                                          "value": "default",
                                          "children": []
                                        },
                                        {
                                          "value": "2",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "title=\"Safety Tolerance\"",
                                      "children": [
                                        {
                                          "value": "title",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Safety Tolerance\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Safety Tolerance",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "class Output(BlockSchema):\n        result: str = SchemaField(description=\"Generated output\")\n        error: str = SchemaField(description=\"Error message if the model run failed\")",
              "children": [
                {
                  "value": "Output",
                  "children": []
                },
                {
                  "value": "(BlockSchema)",
                  "children": [
                    {
                      "value": "BlockSchema",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "result: str = SchemaField(description=\"Generated output\")\n        error: str = SchemaField(description=\"Error message if the model run failed\")",
                  "children": [
                    {
                      "value": "result: str = SchemaField(description=\"Generated output\")",
                      "children": [
                        {
                          "value": "result: str = SchemaField(description=\"Generated output\")",
                          "children": [
                            {
                              "value": "result",
                              "children": []
                            },
                            {
                              "value": "str",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(description=\"Generated output\")",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(description=\"Generated output\")",
                                  "children": [
                                    {
                                      "value": "description=\"Generated output\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Generated output\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Generated output",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "error: str = SchemaField(description=\"Error message if the model run failed\")",
                      "children": [
                        {
                          "value": "error: str = SchemaField(description=\"Error message if the model run failed\")",
                          "children": [
                            {
                              "value": "error",
                              "children": []
                            },
                            {
                              "value": "str",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(description=\"Error message if the model run failed\")",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(description=\"Error message if the model run failed\")",
                                  "children": [
                                    {
                                      "value": "description=\"Error message if the model run failed\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Error message if the model run failed\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Error message if the model run failed",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def __init__(self):\n        super().__init__(\n            id=\"90f8c45e-e983-4644-aa0b-b4ebe2f531bc\",\n            description=\"This block runs Flux models on Replicate with advanced settings.\",\n            categories={BlockCategory.AI},\n            input_schema=ReplicateFluxAdvancedModelBlock.Input,\n            output_schema=ReplicateFluxAdvancedModelBlock.Output,\n            test_input={\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n                \"replicate_model_name\": ReplicateFluxModelName.FLUX_SCHNELL,\n                \"prompt\": \"A beautiful landscape painting of a serene lake at sunrise\",\n                \"seed\": None,\n                \"steps\": 25,\n                \"guidance\": 3.0,\n                \"interval\": 2.0,\n                \"aspect_ratio\": \"1:1\",\n                \"output_format\": ImageType.PNG,\n                \"output_quality\": 80,\n                \"safety_tolerance\": 2,\n            },\n            test_output=[\n                (\n                    \"result\",\n                    \"https://replicate.com/output/generated-image-url.jpg\",\n                ),\n            ],\n            test_mock={\n                \"run_model\": lambda api_key, model_name, prompt, seed, steps, guidance, interval, aspect_ratio, output_format, output_quality, safety_tolerance: \"https://replicate.com/output/generated-image-url.jpg\",\n            },\n            test_credentials=TEST_CREDENTIALS,\n        )",
              "children": [
                {
                  "value": "__init__",
                  "children": []
                },
                {
                  "value": "(self)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "super().__init__(\n            id=\"90f8c45e-e983-4644-aa0b-b4ebe2f531bc\",\n            description=\"This block runs Flux models on Replicate with advanced settings.\",\n            categories={BlockCategory.AI},\n            input_schema=ReplicateFluxAdvancedModelBlock.Input,\n            output_schema=ReplicateFluxAdvancedModelBlock.Output,\n            test_input={\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n                \"replicate_model_name\": ReplicateFluxModelName.FLUX_SCHNELL,\n                \"prompt\": \"A beautiful landscape painting of a serene lake at sunrise\",\n                \"seed\": None,\n                \"steps\": 25,\n                \"guidance\": 3.0,\n                \"interval\": 2.0,\n                \"aspect_ratio\": \"1:1\",\n                \"output_format\": ImageType.PNG,\n                \"output_quality\": 80,\n                \"safety_tolerance\": 2,\n            },\n            test_output=[\n                (\n                    \"result\",\n                    \"https://replicate.com/output/generated-image-url.jpg\",\n                ),\n            ],\n            test_mock={\n                \"run_model\": lambda api_key, model_name, prompt, seed, steps, guidance, interval, aspect_ratio, output_format, output_quality, safety_tolerance: \"https://replicate.com/output/generated-image-url.jpg\",\n            },\n            test_credentials=TEST_CREDENTIALS,\n        )",
                  "children": [
                    {
                      "value": "super().__init__(\n            id=\"90f8c45e-e983-4644-aa0b-b4ebe2f531bc\",\n            description=\"This block runs Flux models on Replicate with advanced settings.\",\n            categories={BlockCategory.AI},\n            input_schema=ReplicateFluxAdvancedModelBlock.Input,\n            output_schema=ReplicateFluxAdvancedModelBlock.Output,\n            test_input={\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n                \"replicate_model_name\": ReplicateFluxModelName.FLUX_SCHNELL,\n                \"prompt\": \"A beautiful landscape painting of a serene lake at sunrise\",\n                \"seed\": None,\n                \"steps\": 25,\n                \"guidance\": 3.0,\n                \"interval\": 2.0,\n                \"aspect_ratio\": \"1:1\",\n                \"output_format\": ImageType.PNG,\n                \"output_quality\": 80,\n                \"safety_tolerance\": 2,\n            },\n            test_output=[\n                (\n                    \"result\",\n                    \"https://replicate.com/output/generated-image-url.jpg\",\n                ),\n            ],\n            test_mock={\n                \"run_model\": lambda api_key, model_name, prompt, seed, steps, guidance, interval, aspect_ratio, output_format, output_quality, safety_tolerance: \"https://replicate.com/output/generated-image-url.jpg\",\n            },\n            test_credentials=TEST_CREDENTIALS,\n        )",
                      "children": [
                        {
                          "value": "super().__init__(\n            id=\"90f8c45e-e983-4644-aa0b-b4ebe2f531bc\",\n            description=\"This block runs Flux models on Replicate with advanced settings.\",\n            categories={BlockCategory.AI},\n            input_schema=ReplicateFluxAdvancedModelBlock.Input,\n            output_schema=ReplicateFluxAdvancedModelBlock.Output,\n            test_input={\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n                \"replicate_model_name\": ReplicateFluxModelName.FLUX_SCHNELL,\n                \"prompt\": \"A beautiful landscape painting of a serene lake at sunrise\",\n                \"seed\": None,\n                \"steps\": 25,\n                \"guidance\": 3.0,\n                \"interval\": 2.0,\n                \"aspect_ratio\": \"1:1\",\n                \"output_format\": ImageType.PNG,\n                \"output_quality\": 80,\n                \"safety_tolerance\": 2,\n            },\n            test_output=[\n                (\n                    \"result\",\n                    \"https://replicate.com/output/generated-image-url.jpg\",\n                ),\n            ],\n            test_mock={\n                \"run_model\": lambda api_key, model_name, prompt, seed, steps, guidance, interval, aspect_ratio, output_format, output_quality, safety_tolerance: \"https://replicate.com/output/generated-image-url.jpg\",\n            },\n            test_credentials=TEST_CREDENTIALS,\n        )",
                          "children": [
                            {
                              "value": "super().__init__",
                              "children": [
                                {
                                  "value": "super()",
                                  "children": [
                                    {
                                      "value": "super",
                                      "children": []
                                    },
                                    {
                                      "value": "()",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "__init__",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\n            id=\"90f8c45e-e983-4644-aa0b-b4ebe2f531bc\",\n            description=\"This block runs Flux models on Replicate with advanced settings.\",\n            categories={BlockCategory.AI},\n            input_schema=ReplicateFluxAdvancedModelBlock.Input,\n            output_schema=ReplicateFluxAdvancedModelBlock.Output,\n            test_input={\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n                \"replicate_model_name\": ReplicateFluxModelName.FLUX_SCHNELL,\n                \"prompt\": \"A beautiful landscape painting of a serene lake at sunrise\",\n                \"seed\": None,\n                \"steps\": 25,\n                \"guidance\": 3.0,\n                \"interval\": 2.0,\n                \"aspect_ratio\": \"1:1\",\n                \"output_format\": ImageType.PNG,\n                \"output_quality\": 80,\n                \"safety_tolerance\": 2,\n            },\n            test_output=[\n                (\n                    \"result\",\n                    \"https://replicate.com/output/generated-image-url.jpg\",\n                ),\n            ],\n            test_mock={\n                \"run_model\": lambda api_key, model_name, prompt, seed, steps, guidance, interval, aspect_ratio, output_format, output_quality, safety_tolerance: \"https://replicate.com/output/generated-image-url.jpg\",\n            },\n            test_credentials=TEST_CREDENTIALS,\n        )",
                              "children": [
                                {
                                  "value": "id=\"90f8c45e-e983-4644-aa0b-b4ebe2f531bc\"",
                                  "children": [
                                    {
                                      "value": "id",
                                      "children": []
                                    },
                                    {
                                      "value": "\"90f8c45e-e983-4644-aa0b-b4ebe2f531bc\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "90f8c45e-e983-4644-aa0b-b4ebe2f531bc",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "description=\"This block runs Flux models on Replicate with advanced settings.\"",
                                  "children": [
                                    {
                                      "value": "description",
                                      "children": []
                                    },
                                    {
                                      "value": "\"This block runs Flux models on Replicate with advanced settings.\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "This block runs Flux models on Replicate with advanced settings.",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "categories={BlockCategory.AI}",
                                  "children": [
                                    {
                                      "value": "categories",
                                      "children": []
                                    },
                                    {
                                      "value": "{BlockCategory.AI}",
                                      "children": [
                                        {
                                          "value": "BlockCategory.AI",
                                          "children": [
                                            {
                                              "value": "BlockCategory",
                                              "children": []
                                            },
                                            {
                                              "value": "AI",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "input_schema=ReplicateFluxAdvancedModelBlock.Input",
                                  "children": [
                                    {
                                      "value": "input_schema",
                                      "children": []
                                    },
                                    {
                                      "value": "ReplicateFluxAdvancedModelBlock.Input",
                                      "children": [
                                        {
                                          "value": "ReplicateFluxAdvancedModelBlock",
                                          "children": []
                                        },
                                        {
                                          "value": "Input",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "output_schema=ReplicateFluxAdvancedModelBlock.Output",
                                  "children": [
                                    {
                                      "value": "output_schema",
                                      "children": []
                                    },
                                    {
                                      "value": "ReplicateFluxAdvancedModelBlock.Output",
                                      "children": [
                                        {
                                          "value": "ReplicateFluxAdvancedModelBlock",
                                          "children": []
                                        },
                                        {
                                          "value": "Output",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "test_input={\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n                \"replicate_model_name\": ReplicateFluxModelName.FLUX_SCHNELL,\n                \"prompt\": \"A beautiful landscape painting of a serene lake at sunrise\",\n                \"seed\": None,\n                \"steps\": 25,\n                \"guidance\": 3.0,\n                \"interval\": 2.0,\n                \"aspect_ratio\": \"1:1\",\n                \"output_format\": ImageType.PNG,\n                \"output_quality\": 80,\n                \"safety_tolerance\": 2,\n            }",
                                  "children": [
                                    {
                                      "value": "test_input",
                                      "children": []
                                    },
                                    {
                                      "value": "{\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n                \"replicate_model_name\": ReplicateFluxModelName.FLUX_SCHNELL,\n                \"prompt\": \"A beautiful landscape painting of a serene lake at sunrise\",\n                \"seed\": None,\n                \"steps\": 25,\n                \"guidance\": 3.0,\n                \"interval\": 2.0,\n                \"aspect_ratio\": \"1:1\",\n                \"output_format\": ImageType.PNG,\n                \"output_quality\": 80,\n                \"safety_tolerance\": 2,\n            }",
                                      "children": [
                                        {
                                          "value": "\"credentials\": TEST_CREDENTIALS_INPUT",
                                          "children": [
                                            {
                                              "value": "\"credentials\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "credentials",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "TEST_CREDENTIALS_INPUT",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"replicate_model_name\": ReplicateFluxModelName.FLUX_SCHNELL",
                                          "children": [
                                            {
                                              "value": "\"replicate_model_name\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "replicate_model_name",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "ReplicateFluxModelName.FLUX_SCHNELL",
                                              "children": [
                                                {
                                                  "value": "ReplicateFluxModelName",
                                                  "children": []
                                                },
                                                {
                                                  "value": "FLUX_SCHNELL",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"prompt\": \"A beautiful landscape painting of a serene lake at sunrise\"",
                                          "children": [
                                            {
                                              "value": "\"prompt\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "prompt",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"A beautiful landscape painting of a serene lake at sunrise\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "A beautiful landscape painting of a serene lake at sunrise",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"seed\": None",
                                          "children": [
                                            {
                                              "value": "\"seed\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "seed",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "None",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"steps\": 25",
                                          "children": [
                                            {
                                              "value": "\"steps\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "steps",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "25",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"guidance\": 3.0",
                                          "children": [
                                            {
                                              "value": "\"guidance\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "guidance",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "3.0",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"interval\": 2.0",
                                          "children": [
                                            {
                                              "value": "\"interval\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "interval",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "2.0",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"aspect_ratio\": \"1:1\"",
                                          "children": [
                                            {
                                              "value": "\"aspect_ratio\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "aspect_ratio",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"1:1\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "1:1",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"output_format\": ImageType.PNG",
                                          "children": [
                                            {
                                              "value": "\"output_format\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "output_format",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "ImageType.PNG",
                                              "children": [
                                                {
                                                  "value": "ImageType",
                                                  "children": []
                                                },
                                                {
                                                  "value": "PNG",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"output_quality\": 80",
                                          "children": [
                                            {
                                              "value": "\"output_quality\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "output_quality",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "80",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"safety_tolerance\": 2",
                                          "children": [
                                            {
                                              "value": "\"safety_tolerance\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "safety_tolerance",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "2",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "test_output=[\n                (\n                    \"result\",\n                    \"https://replicate.com/output/generated-image-url.jpg\",\n                ),\n            ]",
                                  "children": [
                                    {
                                      "value": "test_output",
                                      "children": []
                                    },
                                    {
                                      "value": "[\n                (\n                    \"result\",\n                    \"https://replicate.com/output/generated-image-url.jpg\",\n                ),\n            ]",
                                      "children": [
                                        {
                                          "value": "(\n                    \"result\",\n                    \"https://replicate.com/output/generated-image-url.jpg\",\n                )",
                                          "children": [
                                            {
                                              "value": "\"result\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "result",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"https://replicate.com/output/generated-image-url.jpg\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "https://replicate.com/output/generated-image-url.jpg",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "test_mock={\n                \"run_model\": lambda api_key, model_name, prompt, seed, steps, guidance, interval, aspect_ratio, output_format, output_quality, safety_tolerance: \"https://replicate.com/output/generated-image-url.jpg\",\n            }",
                                  "children": [
                                    {
                                      "value": "test_mock",
                                      "children": []
                                    },
                                    {
                                      "value": "{\n                \"run_model\": lambda api_key, model_name, prompt, seed, steps, guidance, interval, aspect_ratio, output_format, output_quality, safety_tolerance: \"https://replicate.com/output/generated-image-url.jpg\",\n            }",
                                      "children": [
                                        {
                                          "value": "\"run_model\": lambda api_key, model_name, prompt, seed, steps, guidance, interval, aspect_ratio, output_format, output_quality, safety_tolerance: \"https://replicate.com/output/generated-image-url.jpg\"",
                                          "children": [
                                            {
                                              "value": "\"run_model\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "run_model",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "lambda api_key, model_name, prompt, seed, steps, guidance, interval, aspect_ratio, output_format, output_quality, safety_tolerance: \"https://replicate.com/output/generated-image-url.jpg\"",
                                              "children": [
                                                {
                                                  "value": "api_key, model_name, prompt, seed, steps, guidance, interval, aspect_ratio, output_format, output_quality, safety_tolerance",
                                                  "children": [
                                                    {
                                                      "value": "api_key",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "model_name",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "prompt",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "seed",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "steps",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "guidance",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "interval",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "aspect_ratio",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "output_format",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "output_quality",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "safety_tolerance",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"https://replicate.com/output/generated-image-url.jpg\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "https://replicate.com/output/generated-image-url.jpg",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "test_credentials=TEST_CREDENTIALS",
                                  "children": [
                                    {
                                      "value": "test_credentials",
                                      "children": []
                                    },
                                    {
                                      "value": "TEST_CREDENTIALS",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def run(\n        self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs\n    ) -> BlockOutput:\n        # If the seed is not provided, generate a random seed\n        seed = input_data.seed\n        if seed is None:\n            seed = int.from_bytes(os.urandom(4), \"big\")\n\n        # Run the model using the provided inputs\n        result = self.run_model(\n            api_key=credentials.api_key,\n            model_name=input_data.replicate_model_name.api_name,\n            prompt=input_data.prompt,\n            seed=seed,\n            steps=input_data.steps,\n            guidance=input_data.guidance,\n            interval=input_data.interval,\n            aspect_ratio=input_data.aspect_ratio,\n            output_format=input_data.output_format,\n            output_quality=input_data.output_quality,\n            safety_tolerance=input_data.safety_tolerance,\n        )\n        yield \"result\", result",
              "children": [
                {
                  "value": "run",
                  "children": []
                },
                {
                  "value": "(\n        self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs\n    )",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "input_data: Input",
                      "children": [
                        {
                          "value": "input_data",
                          "children": []
                        },
                        {
                          "value": "Input",
                          "children": [
                            {
                              "value": "Input",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "*",
                      "children": []
                    },
                    {
                      "value": "credentials: APIKeyCredentials",
                      "children": [
                        {
                          "value": "credentials",
                          "children": []
                        },
                        {
                          "value": "APIKeyCredentials",
                          "children": [
                            {
                              "value": "APIKeyCredentials",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "**kwargs",
                      "children": [
                        {
                          "value": "kwargs",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "BlockOutput",
                  "children": [
                    {
                      "value": "BlockOutput",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "# If the seed is not provided, generate a random seed",
                  "children": []
                },
                {
                  "value": "seed = input_data.seed\n        if seed is None:\n            seed = int.from_bytes(os.urandom(4), \"big\")\n\n        # Run the model using the provided inputs\n        result = self.run_model(\n            api_key=credentials.api_key,\n            model_name=input_data.replicate_model_name.api_name,\n            prompt=input_data.prompt,\n            seed=seed,\n            steps=input_data.steps,\n            guidance=input_data.guidance,\n            interval=input_data.interval,\n            aspect_ratio=input_data.aspect_ratio,\n            output_format=input_data.output_format,\n            output_quality=input_data.output_quality,\n            safety_tolerance=input_data.safety_tolerance,\n        )\n        yield \"result\", result",
                  "children": [
                    {
                      "value": "seed = input_data.seed",
                      "children": [
                        {
                          "value": "seed = input_data.seed",
                          "children": [
                            {
                              "value": "seed",
                              "children": []
                            },
                            {
                              "value": "input_data.seed",
                              "children": [
                                {
                                  "value": "input_data",
                                  "children": []
                                },
                                {
                                  "value": "seed",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "if seed is None:\n            seed = int.from_bytes(os.urandom(4), \"big\")",
                      "children": [
                        {
                          "value": "seed is None",
                          "children": [
                            {
                              "value": "seed",
                              "children": []
                            },
                            {
                              "value": "None",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "seed = int.from_bytes(os.urandom(4), \"big\")",
                          "children": [
                            {
                              "value": "seed = int.from_bytes(os.urandom(4), \"big\")",
                              "children": [
                                {
                                  "value": "seed = int.from_bytes(os.urandom(4), \"big\")",
                                  "children": [
                                    {
                                      "value": "seed",
                                      "children": []
                                    },
                                    {
                                      "value": "int.from_bytes(os.urandom(4), \"big\")",
                                      "children": [
                                        {
                                          "value": "int.from_bytes",
                                          "children": [
                                            {
                                              "value": "int",
                                              "children": []
                                            },
                                            {
                                              "value": "from_bytes",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(os.urandom(4), \"big\")",
                                          "children": [
                                            {
                                              "value": "os.urandom(4)",
                                              "children": [
                                                {
                                                  "value": "os.urandom",
                                                  "children": [
                                                    {
                                                      "value": "os",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "urandom",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "(4)",
                                                  "children": [
                                                    {
                                                      "value": "4",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"big\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "big",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "# Run the model using the provided inputs",
                      "children": []
                    },
                    {
                      "value": "result = self.run_model(\n            api_key=credentials.api_key,\n            model_name=input_data.replicate_model_name.api_name,\n            prompt=input_data.prompt,\n            seed=seed,\n            steps=input_data.steps,\n            guidance=input_data.guidance,\n            interval=input_data.interval,\n            aspect_ratio=input_data.aspect_ratio,\n            output_format=input_data.output_format,\n            output_quality=input_data.output_quality,\n            safety_tolerance=input_data.safety_tolerance,\n        )",
                      "children": [
                        {
                          "value": "result = self.run_model(\n            api_key=credentials.api_key,\n            model_name=input_data.replicate_model_name.api_name,\n            prompt=input_data.prompt,\n            seed=seed,\n            steps=input_data.steps,\n            guidance=input_data.guidance,\n            interval=input_data.interval,\n            aspect_ratio=input_data.aspect_ratio,\n            output_format=input_data.output_format,\n            output_quality=input_data.output_quality,\n            safety_tolerance=input_data.safety_tolerance,\n        )",
                          "children": [
                            {
                              "value": "result",
                              "children": []
                            },
                            {
                              "value": "self.run_model(\n            api_key=credentials.api_key,\n            model_name=input_data.replicate_model_name.api_name,\n            prompt=input_data.prompt,\n            seed=seed,\n            steps=input_data.steps,\n            guidance=input_data.guidance,\n            interval=input_data.interval,\n            aspect_ratio=input_data.aspect_ratio,\n            output_format=input_data.output_format,\n            output_quality=input_data.output_quality,\n            safety_tolerance=input_data.safety_tolerance,\n        )",
                              "children": [
                                {
                                  "value": "self.run_model",
                                  "children": [
                                    {
                                      "value": "self",
                                      "children": []
                                    },
                                    {
                                      "value": "run_model",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(\n            api_key=credentials.api_key,\n            model_name=input_data.replicate_model_name.api_name,\n            prompt=input_data.prompt,\n            seed=seed,\n            steps=input_data.steps,\n            guidance=input_data.guidance,\n            interval=input_data.interval,\n            aspect_ratio=input_data.aspect_ratio,\n            output_format=input_data.output_format,\n            output_quality=input_data.output_quality,\n            safety_tolerance=input_data.safety_tolerance,\n        )",
                                  "children": [
                                    {
                                      "value": "api_key=credentials.api_key",
                                      "children": [
                                        {
                                          "value": "api_key",
                                          "children": []
                                        },
                                        {
                                          "value": "credentials.api_key",
                                          "children": [
                                            {
                                              "value": "credentials",
                                              "children": []
                                            },
                                            {
                                              "value": "api_key",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "model_name=input_data.replicate_model_name.api_name",
                                      "children": [
                                        {
                                          "value": "model_name",
                                          "children": []
                                        },
                                        {
                                          "value": "input_data.replicate_model_name.api_name",
                                          "children": [
                                            {
                                              "value": "input_data.replicate_model_name",
                                              "children": [
                                                {
                                                  "value": "input_data",
                                                  "children": []
                                                },
                                                {
                                                  "value": "replicate_model_name",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "api_name",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "prompt=input_data.prompt",
                                      "children": [
                                        {
                                          "value": "prompt",
                                          "children": []
                                        },
                                        {
                                          "value": "input_data.prompt",
                                          "children": [
                                            {
                                              "value": "input_data",
                                              "children": []
                                            },
                                            {
                                              "value": "prompt",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "seed=seed",
                                      "children": [
                                        {
                                          "value": "seed",
                                          "children": []
                                        },
                                        {
                                          "value": "seed",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "steps=input_data.steps",
                                      "children": [
                                        {
                                          "value": "steps",
                                          "children": []
                                        },
                                        {
                                          "value": "input_data.steps",
                                          "children": [
                                            {
                                              "value": "input_data",
                                              "children": []
                                            },
                                            {
                                              "value": "steps",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "guidance=input_data.guidance",
                                      "children": [
                                        {
                                          "value": "guidance",
                                          "children": []
                                        },
                                        {
                                          "value": "input_data.guidance",
                                          "children": [
                                            {
                                              "value": "input_data",
                                              "children": []
                                            },
                                            {
                                              "value": "guidance",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "interval=input_data.interval",
                                      "children": [
                                        {
                                          "value": "interval",
                                          "children": []
                                        },
                                        {
                                          "value": "input_data.interval",
                                          "children": [
                                            {
                                              "value": "input_data",
                                              "children": []
                                            },
                                            {
                                              "value": "interval",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "aspect_ratio=input_data.aspect_ratio",
                                      "children": [
                                        {
                                          "value": "aspect_ratio",
                                          "children": []
                                        },
                                        {
                                          "value": "input_data.aspect_ratio",
                                          "children": [
                                            {
                                              "value": "input_data",
                                              "children": []
                                            },
                                            {
                                              "value": "aspect_ratio",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "output_format=input_data.output_format",
                                      "children": [
                                        {
                                          "value": "output_format",
                                          "children": []
                                        },
                                        {
                                          "value": "input_data.output_format",
                                          "children": [
                                            {
                                              "value": "input_data",
                                              "children": []
                                            },
                                            {
                                              "value": "output_format",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "output_quality=input_data.output_quality",
                                      "children": [
                                        {
                                          "value": "output_quality",
                                          "children": []
                                        },
                                        {
                                          "value": "input_data.output_quality",
                                          "children": [
                                            {
                                              "value": "input_data",
                                              "children": []
                                            },
                                            {
                                              "value": "output_quality",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "safety_tolerance=input_data.safety_tolerance",
                                      "children": [
                                        {
                                          "value": "safety_tolerance",
                                          "children": []
                                        },
                                        {
                                          "value": "input_data.safety_tolerance",
                                          "children": [
                                            {
                                              "value": "input_data",
                                              "children": []
                                            },
                                            {
                                              "value": "safety_tolerance",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "yield \"result\", result",
                      "children": [
                        {
                          "value": "yield \"result\", result",
                          "children": [
                            {
                              "value": "\"result\", result",
                              "children": [
                                {
                                  "value": "\"result\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "result",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "result",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def run_model(\n        self,\n        api_key: SecretStr,\n        model_name,\n        prompt,\n        seed,\n        steps,\n        guidance,\n        interval,\n        aspect_ratio,\n        output_format,\n        output_quality,\n        safety_tolerance,\n    ):\n        # Initialize Replicate client with the API key\n        client = replicate.Client(api_token=api_key.get_secret_value())\n\n        # Run the model with additional parameters\n        output: FileOutput | list[FileOutput] = client.run(  # type: ignore This is because they changed the return type, and didn't update the type hint! It should be overloaded depending on the value of `use_file_output` to `FileOutput | list[FileOutput]` but it's `Any | Iterator[Any]`\n            f\"{model_name}\",\n            input={\n                \"prompt\": prompt,\n                \"seed\": seed,\n                \"steps\": steps,\n                \"guidance\": guidance,\n                \"interval\": interval,\n                \"aspect_ratio\": aspect_ratio,\n                \"output_format\": output_format,\n                \"output_quality\": output_quality,\n                \"safety_tolerance\": safety_tolerance,\n            },\n            wait=False,  # don't arbitrarily return data:octect/stream or sometimes url depending on the model???? what is this api\n        )\n\n        # Check if output is a list or a string and extract accordingly; otherwise, assign a default message\n        if isinstance(output, list) and len(output) > 0:\n            if isinstance(output[0], FileOutput):\n                result_url = output[0].url  # If output is a list, get the first element\n            else:\n                result_url = output[\n                    0\n                ]  # If output is a list and not a FileOutput, get the first element. Should never happen, but just in case.\n        elif isinstance(output, FileOutput):\n            result_url = output.url  # If output is a FileOutput, use the url\n        elif isinstance(output, str):\n            result_url = output  # If output is a string (for some reason due to their janky type hinting), use it directly\n        else:\n            result_url = (\n                \"No output received\"  # Fallback message if output is not as expected\n            )\n\n        return result_url",
              "children": [
                {
                  "value": "run_model",
                  "children": []
                },
                {
                  "value": "(\n        self,\n        api_key: SecretStr,\n        model_name,\n        prompt,\n        seed,\n        steps,\n        guidance,\n        interval,\n        aspect_ratio,\n        output_format,\n        output_quality,\n        safety_tolerance,\n    )",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "api_key: SecretStr",
                      "children": [
                        {
                          "value": "api_key",
                          "children": []
                        },
                        {
                          "value": "SecretStr",
                          "children": [
                            {
                              "value": "SecretStr",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "model_name",
                      "children": []
                    },
                    {
                      "value": "prompt",
                      "children": []
                    },
                    {
                      "value": "seed",
                      "children": []
                    },
                    {
                      "value": "steps",
                      "children": []
                    },
                    {
                      "value": "guidance",
                      "children": []
                    },
                    {
                      "value": "interval",
                      "children": []
                    },
                    {
                      "value": "aspect_ratio",
                      "children": []
                    },
                    {
                      "value": "output_format",
                      "children": []
                    },
                    {
                      "value": "output_quality",
                      "children": []
                    },
                    {
                      "value": "safety_tolerance",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "# Initialize Replicate client with the API key",
                  "children": []
                },
                {
                  "value": "client = replicate.Client(api_token=api_key.get_secret_value())\n\n        # Run the model with additional parameters\n        output: FileOutput | list[FileOutput] = client.run(  # type: ignore This is because they changed the return type, and didn't update the type hint! It should be overloaded depending on the value of `use_file_output` to `FileOutput | list[FileOutput]` but it's `Any | Iterator[Any]`\n            f\"{model_name}\",\n            input={\n                \"prompt\": prompt,\n                \"seed\": seed,\n                \"steps\": steps,\n                \"guidance\": guidance,\n                \"interval\": interval,\n                \"aspect_ratio\": aspect_ratio,\n                \"output_format\": output_format,\n                \"output_quality\": output_quality,\n                \"safety_tolerance\": safety_tolerance,\n            },\n            wait=False,  # don't arbitrarily return data:octect/stream or sometimes url depending on the model???? what is this api\n        )\n\n        # Check if output is a list or a string and extract accordingly; otherwise, assign a default message\n        if isinstance(output, list) and len(output) > 0:\n            if isinstance(output[0], FileOutput):\n                result_url = output[0].url  # If output is a list, get the first element\n            else:\n                result_url = output[\n                    0\n                ]  # If output is a list and not a FileOutput, get the first element. Should never happen, but just in case.\n        elif isinstance(output, FileOutput):\n            result_url = output.url  # If output is a FileOutput, use the url\n        elif isinstance(output, str):\n            result_url = output  # If output is a string (for some reason due to their janky type hinting), use it directly\n        else:\n            result_url = (\n                \"No output received\"  # Fallback message if output is not as expected\n            )\n\n        return result_url",
                  "children": [
                    {
                      "value": "client = replicate.Client(api_token=api_key.get_secret_value())",
                      "children": [
                        {
                          "value": "client = replicate.Client(api_token=api_key.get_secret_value())",
                          "children": [
                            {
                              "value": "client",
                              "children": []
                            },
                            {
                              "value": "replicate.Client(api_token=api_key.get_secret_value())",
                              "children": [
                                {
                                  "value": "replicate.Client",
                                  "children": [
                                    {
                                      "value": "replicate",
                                      "children": []
                                    },
                                    {
                                      "value": "Client",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(api_token=api_key.get_secret_value())",
                                  "children": [
                                    {
                                      "value": "api_token=api_key.get_secret_value()",
                                      "children": [
                                        {
                                          "value": "api_token",
                                          "children": []
                                        },
                                        {
                                          "value": "api_key.get_secret_value()",
                                          "children": [
                                            {
                                              "value": "api_key.get_secret_value",
                                              "children": [
                                                {
                                                  "value": "api_key",
                                                  "children": []
                                                },
                                                {
                                                  "value": "get_secret_value",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "()",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "# Run the model with additional parameters",
                      "children": []
                    },
                    {
                      "value": "output: FileOutput | list[FileOutput] = client.run(  # type: ignore This is because they changed the return type, and didn't update the type hint! It should be overloaded depending on the value of `use_file_output` to `FileOutput | list[FileOutput]` but it's `Any | Iterator[Any]`\n            f\"{model_name}\",\n            input={\n                \"prompt\": prompt,\n                \"seed\": seed,\n                \"steps\": steps,\n                \"guidance\": guidance,\n                \"interval\": interval,\n                \"aspect_ratio\": aspect_ratio,\n                \"output_format\": output_format,\n                \"output_quality\": output_quality,\n                \"safety_tolerance\": safety_tolerance,\n            },\n            wait=False,  # don't arbitrarily return data:octect/stream or sometimes url depending on the model???? what is this api\n        )",
                      "children": [
                        {
                          "value": "output: FileOutput | list[FileOutput] = client.run(  # type: ignore This is because they changed the return type, and didn't update the type hint! It should be overloaded depending on the value of `use_file_output` to `FileOutput | list[FileOutput]` but it's `Any | Iterator[Any]`\n            f\"{model_name}\",\n            input={\n                \"prompt\": prompt,\n                \"seed\": seed,\n                \"steps\": steps,\n                \"guidance\": guidance,\n                \"interval\": interval,\n                \"aspect_ratio\": aspect_ratio,\n                \"output_format\": output_format,\n                \"output_quality\": output_quality,\n                \"safety_tolerance\": safety_tolerance,\n            },\n            wait=False,  # don't arbitrarily return data:octect/stream or sometimes url depending on the model???? what is this api\n        )",
                          "children": [
                            {
                              "value": "output",
                              "children": []
                            },
                            {
                              "value": "FileOutput | list[FileOutput]",
                              "children": [
                                {
                                  "value": "FileOutput | list[FileOutput]",
                                  "children": [
                                    {
                                      "value": "FileOutput",
                                      "children": []
                                    },
                                    {
                                      "value": "list[FileOutput]",
                                      "children": [
                                        {
                                          "value": "list",
                                          "children": []
                                        },
                                        {
                                          "value": "FileOutput",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "client.run(  # type: ignore This is because they changed the return type, and didn't update the type hint! It should be overloaded depending on the value of `use_file_output` to `FileOutput | list[FileOutput]` but it's `Any | Iterator[Any]`\n            f\"{model_name}\",\n            input={\n                \"prompt\": prompt,\n                \"seed\": seed,\n                \"steps\": steps,\n                \"guidance\": guidance,\n                \"interval\": interval,\n                \"aspect_ratio\": aspect_ratio,\n                \"output_format\": output_format,\n                \"output_quality\": output_quality,\n                \"safety_tolerance\": safety_tolerance,\n            },\n            wait=False,  # don't arbitrarily return data:octect/stream or sometimes url depending on the model???? what is this api\n        )",
                              "children": [
                                {
                                  "value": "client.run",
                                  "children": [
                                    {
                                      "value": "client",
                                      "children": []
                                    },
                                    {
                                      "value": "run",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(  # type: ignore This is because they changed the return type, and didn't update the type hint! It should be overloaded depending on the value of `use_file_output` to `FileOutput | list[FileOutput]` but it's `Any | Iterator[Any]`\n            f\"{model_name}\",\n            input={\n                \"prompt\": prompt,\n                \"seed\": seed,\n                \"steps\": steps,\n                \"guidance\": guidance,\n                \"interval\": interval,\n                \"aspect_ratio\": aspect_ratio,\n                \"output_format\": output_format,\n                \"output_quality\": output_quality,\n                \"safety_tolerance\": safety_tolerance,\n            },\n            wait=False,  # don't arbitrarily return data:octect/stream or sometimes url depending on the model???? what is this api\n        )",
                                  "children": [
                                    {
                                      "value": "# type: ignore This is because they changed the return type, and didn't update the type hint! It should be overloaded depending on the value of `use_file_output` to `FileOutput | list[FileOutput]` but it's `Any | Iterator[Any]`",
                                      "children": []
                                    },
                                    {
                                      "value": "f\"{model_name}\"",
                                      "children": [
                                        {
                                          "value": "f\"",
                                          "children": []
                                        },
                                        {
                                          "value": "{model_name}",
                                          "children": [
                                            {
                                              "value": "model_name",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "input={\n                \"prompt\": prompt,\n                \"seed\": seed,\n                \"steps\": steps,\n                \"guidance\": guidance,\n                \"interval\": interval,\n                \"aspect_ratio\": aspect_ratio,\n                \"output_format\": output_format,\n                \"output_quality\": output_quality,\n                \"safety_tolerance\": safety_tolerance,\n            }",
                                      "children": [
                                        {
                                          "value": "input",
                                          "children": []
                                        },
                                        {
                                          "value": "{\n                \"prompt\": prompt,\n                \"seed\": seed,\n                \"steps\": steps,\n                \"guidance\": guidance,\n                \"interval\": interval,\n                \"aspect_ratio\": aspect_ratio,\n                \"output_format\": output_format,\n                \"output_quality\": output_quality,\n                \"safety_tolerance\": safety_tolerance,\n            }",
                                          "children": [
                                            {
                                              "value": "\"prompt\": prompt",
                                              "children": [
                                                {
                                                  "value": "\"prompt\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "prompt",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "prompt",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"seed\": seed",
                                              "children": [
                                                {
                                                  "value": "\"seed\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "seed",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "seed",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"steps\": steps",
                                              "children": [
                                                {
                                                  "value": "\"steps\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "steps",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "steps",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"guidance\": guidance",
                                              "children": [
                                                {
                                                  "value": "\"guidance\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "guidance",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "guidance",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"interval\": interval",
                                              "children": [
                                                {
                                                  "value": "\"interval\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "interval",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "interval",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"aspect_ratio\": aspect_ratio",
                                              "children": [
                                                {
                                                  "value": "\"aspect_ratio\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "aspect_ratio",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "aspect_ratio",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"output_format\": output_format",
                                              "children": [
                                                {
                                                  "value": "\"output_format\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "output_format",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "output_format",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"output_quality\": output_quality",
                                              "children": [
                                                {
                                                  "value": "\"output_quality\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "output_quality",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "output_quality",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"safety_tolerance\": safety_tolerance",
                                              "children": [
                                                {
                                                  "value": "\"safety_tolerance\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "safety_tolerance",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "safety_tolerance",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "wait=False",
                                      "children": [
                                        {
                                          "value": "wait",
                                          "children": []
                                        },
                                        {
                                          "value": "False",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "# don't arbitrarily return data:octect/stream or sometimes url depending on the model???? what is this api",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "# Check if output is a list or a string and extract accordingly; otherwise, assign a default message",
                      "children": []
                    },
                    {
                      "value": "if isinstance(output, list) and len(output) > 0:\n            if isinstance(output[0], FileOutput):\n                result_url = output[0].url  # If output is a list, get the first element\n            else:\n                result_url = output[\n                    0\n                ]  # If output is a list and not a FileOutput, get the first element. Should never happen, but just in case.\n        elif isinstance(output, FileOutput):\n            result_url = output.url  # If output is a FileOutput, use the url\n        elif isinstance(output, str):\n            result_url = output  # If output is a string (for some reason due to their janky type hinting), use it directly\n        else:\n            result_url = (\n                \"No output received\"  # Fallback message if output is not as expected\n            )",
                      "children": [
                        {
                          "value": "isinstance(output, list) and len(output) > 0",
                          "children": [
                            {
                              "value": "isinstance(output, list)",
                              "children": [
                                {
                                  "value": "isinstance",
                                  "children": []
                                },
                                {
                                  "value": "(output, list)",
                                  "children": [
                                    {
                                      "value": "output",
                                      "children": []
                                    },
                                    {
                                      "value": "list",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "len(output) > 0",
                              "children": [
                                {
                                  "value": "len(output)",
                                  "children": [
                                    {
                                      "value": "len",
                                      "children": []
                                    },
                                    {
                                      "value": "(output)",
                                      "children": [
                                        {
                                          "value": "output",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "0",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "if isinstance(output[0], FileOutput):\n                result_url = output[0].url  # If output is a list, get the first element\n            else:\n                result_url = output[\n                    0\n                ]  # If output is a list and not a FileOutput, get the first element. Should never happen, but just in case.",
                          "children": [
                            {
                              "value": "if isinstance(output[0], FileOutput):\n                result_url = output[0].url  # If output is a list, get the first element\n            else:\n                result_url = output[\n                    0\n                ]  # If output is a list and not a FileOutput, get the first element. Should never happen, but just in case.",
                              "children": [
                                {
                                  "value": "isinstance(output[0], FileOutput)",
                                  "children": [
                                    {
                                      "value": "isinstance",
                                      "children": []
                                    },
                                    {
                                      "value": "(output[0], FileOutput)",
                                      "children": [
                                        {
                                          "value": "output[0]",
                                          "children": [
                                            {
                                              "value": "output",
                                              "children": []
                                            },
                                            {
                                              "value": "0",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "FileOutput",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "result_url = output[0].url  # If output is a list, get the first element",
                                  "children": [
                                    {
                                      "value": "result_url = output[0].url",
                                      "children": [
                                        {
                                          "value": "result_url = output[0].url",
                                          "children": [
                                            {
                                              "value": "result_url",
                                              "children": []
                                            },
                                            {
                                              "value": "output[0].url",
                                              "children": [
                                                {
                                                  "value": "output[0]",
                                                  "children": [
                                                    {
                                                      "value": "output",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "0",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "url",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "# If output is a list, get the first element",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "else:\n                result_url = output[\n                    0\n                ]  # If output is a list and not a FileOutput, get the first element. Should never happen, but just in case.",
                                  "children": [
                                    {
                                      "value": "result_url = output[\n                    0\n                ]  # If output is a list and not a FileOutput, get the first element. Should never happen, but just in case.",
                                      "children": [
                                        {
                                          "value": "result_url = output[\n                    0\n                ]",
                                          "children": [
                                            {
                                              "value": "result_url = output[\n                    0\n                ]",
                                              "children": [
                                                {
                                                  "value": "result_url",
                                                  "children": []
                                                },
                                                {
                                                  "value": "output[\n                    0\n                ]",
                                                  "children": [
                                                    {
                                                      "value": "output",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "0",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "# If output is a list and not a FileOutput, get the first element. Should never happen, but just in case.",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "elif isinstance(output, FileOutput):\n            result_url = output.url  # If output is a FileOutput, use the url",
                          "children": [
                            {
                              "value": "isinstance(output, FileOutput)",
                              "children": [
                                {
                                  "value": "isinstance",
                                  "children": []
                                },
                                {
                                  "value": "(output, FileOutput)",
                                  "children": [
                                    {
                                      "value": "output",
                                      "children": []
                                    },
                                    {
                                      "value": "FileOutput",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "result_url = output.url  # If output is a FileOutput, use the url",
                              "children": [
                                {
                                  "value": "result_url = output.url",
                                  "children": [
                                    {
                                      "value": "result_url = output.url",
                                      "children": [
                                        {
                                          "value": "result_url",
                                          "children": []
                                        },
                                        {
                                          "value": "output.url",
                                          "children": [
                                            {
                                              "value": "output",
                                              "children": []
                                            },
                                            {
                                              "value": "url",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "# If output is a FileOutput, use the url",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "elif isinstance(output, str):\n            result_url = output  # If output is a string (for some reason due to their janky type hinting), use it directly",
                          "children": [
                            {
                              "value": "isinstance(output, str)",
                              "children": [
                                {
                                  "value": "isinstance",
                                  "children": []
                                },
                                {
                                  "value": "(output, str)",
                                  "children": [
                                    {
                                      "value": "output",
                                      "children": []
                                    },
                                    {
                                      "value": "str",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "result_url = output  # If output is a string (for some reason due to their janky type hinting), use it directly",
                              "children": [
                                {
                                  "value": "result_url = output",
                                  "children": [
                                    {
                                      "value": "result_url = output",
                                      "children": [
                                        {
                                          "value": "result_url",
                                          "children": []
                                        },
                                        {
                                          "value": "output",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "# If output is a string (for some reason due to their janky type hinting), use it directly",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "else:\n            result_url = (\n                \"No output received\"  # Fallback message if output is not as expected\n            )",
                          "children": [
                            {
                              "value": "result_url = (\n                \"No output received\"  # Fallback message if output is not as expected\n            )",
                              "children": [
                                {
                                  "value": "result_url = (\n                \"No output received\"  # Fallback message if output is not as expected\n            )",
                                  "children": [
                                    {
                                      "value": "result_url = (\n                \"No output received\"  # Fallback message if output is not as expected\n            )",
                                      "children": [
                                        {
                                          "value": "result_url",
                                          "children": []
                                        },
                                        {
                                          "value": "(\n                \"No output received\"  # Fallback message if output is not as expected\n            )",
                                          "children": [
                                            {
                                              "value": "\"No output received\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "No output received",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "# Fallback message if output is not as expected",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "return result_url",
                      "children": [
                        {
                          "value": "result_url",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}