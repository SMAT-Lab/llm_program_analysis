{
  "value": "# -*- coding: utf-8 -*-\n\nfrom mrjob.job import MRJob\n\n\nclass RemoveDuplicateUrls(MRJob):\n\n    def mapper(self, _, line):\n        yield line, 1\n\n    def reducer(self, key, values):\n        total = sum(values)\n        if total == 1:\n            yield key, total\n\n    def steps(self):\n        \"\"\"Run the map and reduce steps.\"\"\"\n        return [\n            self.mr(mapper=self.mapper,\n                    reducer=self.reducer)\n        ]\n\n\nif __name__ == '__main__':\n    RemoveDuplicateUrls.run()",
  "children": [
    {
      "value": "# -*- coding: utf-8 -*-",
      "children": []
    },
    {
      "value": "from mrjob.job import MRJob",
      "children": [
        {
          "value": "mrjob.job",
          "children": [
            {
              "value": "mrjob",
              "children": []
            },
            {
              "value": "job",
              "children": []
            }
          ]
        },
        {
          "value": "MRJob",
          "children": [
            {
              "value": "MRJob",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "class RemoveDuplicateUrls(MRJob):\n\n    def mapper(self, _, line):\n        yield line, 1\n\n    def reducer(self, key, values):\n        total = sum(values)\n        if total == 1:\n            yield key, total\n\n    def steps(self):\n        \"\"\"Run the map and reduce steps.\"\"\"\n        return [\n            self.mr(mapper=self.mapper,\n                    reducer=self.reducer)\n        ]",
      "children": [
        {
          "value": "RemoveDuplicateUrls",
          "children": []
        },
        {
          "value": "(MRJob)",
          "children": [
            {
              "value": "MRJob",
              "children": []
            }
          ]
        },
        {
          "value": "def mapper(self, _, line):\n        yield line, 1\n\n    def reducer(self, key, values):\n        total = sum(values)\n        if total == 1:\n            yield key, total\n\n    def steps(self):\n        \"\"\"Run the map and reduce steps.\"\"\"\n        return [\n            self.mr(mapper=self.mapper,\n                    reducer=self.reducer)\n        ]",
          "children": [
            {
              "value": "def mapper(self, _, line):\n        yield line, 1",
              "children": [
                {
                  "value": "mapper",
                  "children": []
                },
                {
                  "value": "(self, _, line)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "_",
                      "children": []
                    },
                    {
                      "value": "line",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "yield line, 1",
                  "children": [
                    {
                      "value": "yield line, 1",
                      "children": [
                        {
                          "value": "yield line, 1",
                          "children": [
                            {
                              "value": "line, 1",
                              "children": [
                                {
                                  "value": "line",
                                  "children": []
                                },
                                {
                                  "value": "1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def reducer(self, key, values):\n        total = sum(values)\n        if total == 1:\n            yield key, total",
              "children": [
                {
                  "value": "reducer",
                  "children": []
                },
                {
                  "value": "(self, key, values)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "key",
                      "children": []
                    },
                    {
                      "value": "values",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "total = sum(values)\n        if total == 1:\n            yield key, total",
                  "children": [
                    {
                      "value": "total = sum(values)",
                      "children": [
                        {
                          "value": "total = sum(values)",
                          "children": [
                            {
                              "value": "total",
                              "children": []
                            },
                            {
                              "value": "sum(values)",
                              "children": [
                                {
                                  "value": "sum",
                                  "children": []
                                },
                                {
                                  "value": "(values)",
                                  "children": [
                                    {
                                      "value": "values",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "if total == 1:\n            yield key, total",
                      "children": [
                        {
                          "value": "total == 1",
                          "children": [
                            {
                              "value": "total",
                              "children": []
                            },
                            {
                              "value": "1",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "yield key, total",
                          "children": [
                            {
                              "value": "yield key, total",
                              "children": [
                                {
                                  "value": "yield key, total",
                                  "children": [
                                    {
                                      "value": "key, total",
                                      "children": [
                                        {
                                          "value": "key",
                                          "children": []
                                        },
                                        {
                                          "value": "total",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def steps(self):\n        \"\"\"Run the map and reduce steps.\"\"\"\n        return [\n            self.mr(mapper=self.mapper,\n                    reducer=self.reducer)\n        ]",
              "children": [
                {
                  "value": "steps",
                  "children": []
                },
                {
                  "value": "(self)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "\"\"\"Run the map and reduce steps.\"\"\"\n        return [\n            self.mr(mapper=self.mapper,\n                    reducer=self.reducer)\n        ]",
                  "children": [
                    {
                      "value": "\"\"\"Run the map and reduce steps.\"\"\"",
                      "children": [
                        {
                          "value": "\"\"\"Run the map and reduce steps.\"\"\"",
                          "children": [
                            {
                              "value": "\"\"\"",
                              "children": []
                            },
                            {
                              "value": "Run the map and reduce steps.",
                              "children": []
                            },
                            {
                              "value": "\"\"\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "return [\n            self.mr(mapper=self.mapper,\n                    reducer=self.reducer)\n        ]",
                      "children": [
                        {
                          "value": "[\n            self.mr(mapper=self.mapper,\n                    reducer=self.reducer)\n        ]",
                          "children": [
                            {
                              "value": "self.mr(mapper=self.mapper,\n                    reducer=self.reducer)",
                              "children": [
                                {
                                  "value": "self.mr",
                                  "children": [
                                    {
                                      "value": "self",
                                      "children": []
                                    },
                                    {
                                      "value": "mr",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(mapper=self.mapper,\n                    reducer=self.reducer)",
                                  "children": [
                                    {
                                      "value": "mapper=self.mapper",
                                      "children": [
                                        {
                                          "value": "mapper",
                                          "children": []
                                        },
                                        {
                                          "value": "self.mapper",
                                          "children": [
                                            {
                                              "value": "self",
                                              "children": []
                                            },
                                            {
                                              "value": "mapper",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "reducer=self.reducer",
                                      "children": [
                                        {
                                          "value": "reducer",
                                          "children": []
                                        },
                                        {
                                          "value": "self.reducer",
                                          "children": [
                                            {
                                              "value": "self",
                                              "children": []
                                            },
                                            {
                                              "value": "reducer",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "if __name__ == '__main__':\n    RemoveDuplicateUrls.run()",
      "children": [
        {
          "value": "__name__ == '__main__'",
          "children": [
            {
              "value": "__name__",
              "children": []
            },
            {
              "value": "'__main__'",
              "children": [
                {
                  "value": "'",
                  "children": []
                },
                {
                  "value": "__main__",
                  "children": []
                },
                {
                  "value": "'",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "RemoveDuplicateUrls.run()",
          "children": [
            {
              "value": "RemoveDuplicateUrls.run()",
              "children": [
                {
                  "value": "RemoveDuplicateUrls.run()",
                  "children": [
                    {
                      "value": "RemoveDuplicateUrls.run",
                      "children": [
                        {
                          "value": "RemoveDuplicateUrls",
                          "children": []
                        },
                        {
                          "value": "run",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "()",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}