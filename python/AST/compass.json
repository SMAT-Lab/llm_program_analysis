{
  "value": "import logging\n\nfrom fastapi import Request\nfrom strenum import StrEnum\n\nfrom backend.data import integrations\nfrom backend.integrations.providers import ProviderName\n\nfrom ._manual_base import ManualWebhookManagerBase\n\nlogger = logging.getLogger(__name__)\n\n\nclass CompassWebhookType(StrEnum):\n    TRANSCRIPTION = \"transcription\"\n    TASK = \"task\"\n\n\nclass CompassWebhookManager(ManualWebhookManagerBase):\n    PROVIDER_NAME = ProviderName.COMPASS\n    WebhookType = CompassWebhookType\n\n    @classmethod\n    async def validate_payload(\n        cls, webhook: integrations.Webhook, request: Request\n    ) -> tuple[dict, str]:\n        payload = await request.json()\n        event_type = CompassWebhookType.TRANSCRIPTION  # currently the only type\n\n        return payload, event_type",
  "children": [
    {
      "value": "import logging",
      "children": [
        {
          "value": "logging",
          "children": [
            {
              "value": "logging",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from fastapi import Request",
      "children": [
        {
          "value": "fastapi",
          "children": [
            {
              "value": "fastapi",
              "children": []
            }
          ]
        },
        {
          "value": "Request",
          "children": [
            {
              "value": "Request",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from strenum import StrEnum",
      "children": [
        {
          "value": "strenum",
          "children": [
            {
              "value": "strenum",
              "children": []
            }
          ]
        },
        {
          "value": "StrEnum",
          "children": [
            {
              "value": "StrEnum",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.data import integrations",
      "children": [
        {
          "value": "backend.data",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "data",
              "children": []
            }
          ]
        },
        {
          "value": "integrations",
          "children": [
            {
              "value": "integrations",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.integrations.providers import ProviderName",
      "children": [
        {
          "value": "backend.integrations.providers",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "integrations",
              "children": []
            },
            {
              "value": "providers",
              "children": []
            }
          ]
        },
        {
          "value": "ProviderName",
          "children": [
            {
              "value": "ProviderName",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from ._manual_base import ManualWebhookManagerBase",
      "children": [
        {
          "value": "._manual_base",
          "children": [
            {
              "value": ".",
              "children": []
            },
            {
              "value": "_manual_base",
              "children": [
                {
                  "value": "_manual_base",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "ManualWebhookManagerBase",
          "children": [
            {
              "value": "ManualWebhookManagerBase",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "logger = logging.getLogger(__name__)",
      "children": [
        {
          "value": "logger = logging.getLogger(__name__)",
          "children": [
            {
              "value": "logger",
              "children": []
            },
            {
              "value": "logging.getLogger(__name__)",
              "children": [
                {
                  "value": "logging.getLogger",
                  "children": [
                    {
                      "value": "logging",
                      "children": []
                    },
                    {
                      "value": "getLogger",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "(__name__)",
                  "children": [
                    {
                      "value": "__name__",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "class CompassWebhookType(StrEnum):\n    TRANSCRIPTION = \"transcription\"\n    TASK = \"task\"",
      "children": [
        {
          "value": "CompassWebhookType",
          "children": []
        },
        {
          "value": "(StrEnum)",
          "children": [
            {
              "value": "StrEnum",
              "children": []
            }
          ]
        },
        {
          "value": "TRANSCRIPTION = \"transcription\"\n    TASK = \"task\"",
          "children": [
            {
              "value": "TRANSCRIPTION = \"transcription\"",
              "children": [
                {
                  "value": "TRANSCRIPTION = \"transcription\"",
                  "children": [
                    {
                      "value": "TRANSCRIPTION",
                      "children": []
                    },
                    {
                      "value": "\"transcription\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "transcription",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "TASK = \"task\"",
              "children": [
                {
                  "value": "TASK = \"task\"",
                  "children": [
                    {
                      "value": "TASK",
                      "children": []
                    },
                    {
                      "value": "\"task\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "task",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "class CompassWebhookManager(ManualWebhookManagerBase):\n    PROVIDER_NAME = ProviderName.COMPASS\n    WebhookType = CompassWebhookType\n\n    @classmethod\n    async def validate_payload(\n        cls, webhook: integrations.Webhook, request: Request\n    ) -> tuple[dict, str]:\n        payload = await request.json()\n        event_type = CompassWebhookType.TRANSCRIPTION  # currently the only type\n\n        return payload, event_type",
      "children": [
        {
          "value": "CompassWebhookManager",
          "children": []
        },
        {
          "value": "(ManualWebhookManagerBase)",
          "children": [
            {
              "value": "ManualWebhookManagerBase",
              "children": []
            }
          ]
        },
        {
          "value": "PROVIDER_NAME = ProviderName.COMPASS\n    WebhookType = CompassWebhookType\n\n    @classmethod\n    async def validate_payload(\n        cls, webhook: integrations.Webhook, request: Request\n    ) -> tuple[dict, str]:\n        payload = await request.json()\n        event_type = CompassWebhookType.TRANSCRIPTION  # currently the only type\n\n        return payload, event_type",
          "children": [
            {
              "value": "PROVIDER_NAME = ProviderName.COMPASS",
              "children": [
                {
                  "value": "PROVIDER_NAME = ProviderName.COMPASS",
                  "children": [
                    {
                      "value": "PROVIDER_NAME",
                      "children": []
                    },
                    {
                      "value": "ProviderName.COMPASS",
                      "children": [
                        {
                          "value": "ProviderName",
                          "children": []
                        },
                        {
                          "value": "COMPASS",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "WebhookType = CompassWebhookType",
              "children": [
                {
                  "value": "WebhookType = CompassWebhookType",
                  "children": [
                    {
                      "value": "WebhookType",
                      "children": []
                    },
                    {
                      "value": "CompassWebhookType",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "@classmethod\n    async def validate_payload(\n        cls, webhook: integrations.Webhook, request: Request\n    ) -> tuple[dict, str]:\n        payload = await request.json()\n        event_type = CompassWebhookType.TRANSCRIPTION  # currently the only type\n\n        return payload, event_type",
              "children": [
                {
                  "value": "@classmethod",
                  "children": [
                    {
                      "value": "classmethod",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "async def validate_payload(\n        cls, webhook: integrations.Webhook, request: Request\n    ) -> tuple[dict, str]:\n        payload = await request.json()\n        event_type = CompassWebhookType.TRANSCRIPTION  # currently the only type\n\n        return payload, event_type",
                  "children": [
                    {
                      "value": "validate_payload",
                      "children": []
                    },
                    {
                      "value": "(\n        cls, webhook: integrations.Webhook, request: Request\n    )",
                      "children": [
                        {
                          "value": "cls",
                          "children": []
                        },
                        {
                          "value": "webhook: integrations.Webhook",
                          "children": [
                            {
                              "value": "webhook",
                              "children": []
                            },
                            {
                              "value": "integrations.Webhook",
                              "children": [
                                {
                                  "value": "integrations.Webhook",
                                  "children": [
                                    {
                                      "value": "integrations",
                                      "children": []
                                    },
                                    {
                                      "value": "Webhook",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "request: Request",
                          "children": [
                            {
                              "value": "request",
                              "children": []
                            },
                            {
                              "value": "Request",
                              "children": [
                                {
                                  "value": "Request",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "tuple[dict, str]",
                      "children": [
                        {
                          "value": "tuple[dict, str]",
                          "children": [
                            {
                              "value": "tuple",
                              "children": []
                            },
                            {
                              "value": "[dict, str]",
                              "children": [
                                {
                                  "value": "dict",
                                  "children": [
                                    {
                                      "value": "dict",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "str",
                                  "children": [
                                    {
                                      "value": "str",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "payload = await request.json()\n        event_type = CompassWebhookType.TRANSCRIPTION  # currently the only type\n\n        return payload, event_type",
                      "children": [
                        {
                          "value": "payload = await request.json()",
                          "children": [
                            {
                              "value": "payload = await request.json()",
                              "children": [
                                {
                                  "value": "payload",
                                  "children": []
                                },
                                {
                                  "value": "await request.json()",
                                  "children": [
                                    {
                                      "value": "request.json()",
                                      "children": [
                                        {
                                          "value": "request.json",
                                          "children": [
                                            {
                                              "value": "request",
                                              "children": []
                                            },
                                            {
                                              "value": "json",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "()",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "event_type = CompassWebhookType.TRANSCRIPTION",
                          "children": [
                            {
                              "value": "event_type = CompassWebhookType.TRANSCRIPTION",
                              "children": [
                                {
                                  "value": "event_type",
                                  "children": []
                                },
                                {
                                  "value": "CompassWebhookType.TRANSCRIPTION",
                                  "children": [
                                    {
                                      "value": "CompassWebhookType",
                                      "children": []
                                    },
                                    {
                                      "value": "TRANSCRIPTION",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "# currently the only type",
                          "children": []
                        },
                        {
                          "value": "return payload, event_type",
                          "children": [
                            {
                              "value": "payload, event_type",
                              "children": [
                                {
                                  "value": "payload",
                                  "children": []
                                },
                                {
                                  "value": "event_type",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}