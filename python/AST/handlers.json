{
  "value": "from __future__ import annotations\n\nimport json\nimport logging\n\n\nclass JsonFileHandler(logging.FileHandler):\n    def format(self, record: logging.LogRecord) -> str:\n        record.json_data = json.loads(record.getMessage())\n        return json.dumps(getattr(record, \"json_data\"), ensure_ascii=False, indent=4)\n\n    def emit(self, record: logging.LogRecord) -> None:\n        with open(self.baseFilename, \"w\", encoding=\"utf-8\") as f:\n            f.write(self.format(record))",
  "children": [
    {
      "value": "from __future__ import annotations",
      "children": [
        {
          "value": "annotations",
          "children": [
            {
              "value": "annotations",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "import json",
      "children": [
        {
          "value": "json",
          "children": [
            {
              "value": "json",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "import logging",
      "children": [
        {
          "value": "logging",
          "children": [
            {
              "value": "logging",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "class JsonFileHandler(logging.FileHandler):\n    def format(self, record: logging.LogRecord) -> str:\n        record.json_data = json.loads(record.getMessage())\n        return json.dumps(getattr(record, \"json_data\"), ensure_ascii=False, indent=4)\n\n    def emit(self, record: logging.LogRecord) -> None:\n        with open(self.baseFilename, \"w\", encoding=\"utf-8\") as f:\n            f.write(self.format(record))",
      "children": [
        {
          "value": "JsonFileHandler",
          "children": []
        },
        {
          "value": "(logging.FileHandler)",
          "children": [
            {
              "value": "logging.FileHandler",
              "children": [
                {
                  "value": "logging",
                  "children": []
                },
                {
                  "value": "FileHandler",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "def format(self, record: logging.LogRecord) -> str:\n        record.json_data = json.loads(record.getMessage())\n        return json.dumps(getattr(record, \"json_data\"), ensure_ascii=False, indent=4)\n\n    def emit(self, record: logging.LogRecord) -> None:\n        with open(self.baseFilename, \"w\", encoding=\"utf-8\") as f:\n            f.write(self.format(record))",
          "children": [
            {
              "value": "def format(self, record: logging.LogRecord) -> str:\n        record.json_data = json.loads(record.getMessage())\n        return json.dumps(getattr(record, \"json_data\"), ensure_ascii=False, indent=4)",
              "children": [
                {
                  "value": "format",
                  "children": []
                },
                {
                  "value": "(self, record: logging.LogRecord)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "record: logging.LogRecord",
                      "children": [
                        {
                          "value": "record",
                          "children": []
                        },
                        {
                          "value": "logging.LogRecord",
                          "children": [
                            {
                              "value": "logging.LogRecord",
                              "children": [
                                {
                                  "value": "logging",
                                  "children": []
                                },
                                {
                                  "value": "LogRecord",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "str",
                  "children": [
                    {
                      "value": "str",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "record.json_data = json.loads(record.getMessage())\n        return json.dumps(getattr(record, \"json_data\"), ensure_ascii=False, indent=4)",
                  "children": [
                    {
                      "value": "record.json_data = json.loads(record.getMessage())",
                      "children": [
                        {
                          "value": "record.json_data = json.loads(record.getMessage())",
                          "children": [
                            {
                              "value": "record.json_data",
                              "children": [
                                {
                                  "value": "record",
                                  "children": []
                                },
                                {
                                  "value": "json_data",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "json.loads(record.getMessage())",
                              "children": [
                                {
                                  "value": "json.loads",
                                  "children": [
                                    {
                                      "value": "json",
                                      "children": []
                                    },
                                    {
                                      "value": "loads",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(record.getMessage())",
                                  "children": [
                                    {
                                      "value": "record.getMessage()",
                                      "children": [
                                        {
                                          "value": "record.getMessage",
                                          "children": [
                                            {
                                              "value": "record",
                                              "children": []
                                            },
                                            {
                                              "value": "getMessage",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "()",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "return json.dumps(getattr(record, \"json_data\"), ensure_ascii=False, indent=4)",
                      "children": [
                        {
                          "value": "json.dumps(getattr(record, \"json_data\"), ensure_ascii=False, indent=4)",
                          "children": [
                            {
                              "value": "json.dumps",
                              "children": [
                                {
                                  "value": "json",
                                  "children": []
                                },
                                {
                                  "value": "dumps",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(getattr(record, \"json_data\"), ensure_ascii=False, indent=4)",
                              "children": [
                                {
                                  "value": "getattr(record, \"json_data\")",
                                  "children": [
                                    {
                                      "value": "getattr",
                                      "children": []
                                    },
                                    {
                                      "value": "(record, \"json_data\")",
                                      "children": [
                                        {
                                          "value": "record",
                                          "children": []
                                        },
                                        {
                                          "value": "\"json_data\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "json_data",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "ensure_ascii=False",
                                  "children": [
                                    {
                                      "value": "ensure_ascii",
                                      "children": []
                                    },
                                    {
                                      "value": "False",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "indent=4",
                                  "children": [
                                    {
                                      "value": "indent",
                                      "children": []
                                    },
                                    {
                                      "value": "4",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def emit(self, record: logging.LogRecord) -> None:\n        with open(self.baseFilename, \"w\", encoding=\"utf-8\") as f:\n            f.write(self.format(record))",
              "children": [
                {
                  "value": "emit",
                  "children": []
                },
                {
                  "value": "(self, record: logging.LogRecord)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "record: logging.LogRecord",
                      "children": [
                        {
                          "value": "record",
                          "children": []
                        },
                        {
                          "value": "logging.LogRecord",
                          "children": [
                            {
                              "value": "logging.LogRecord",
                              "children": [
                                {
                                  "value": "logging",
                                  "children": []
                                },
                                {
                                  "value": "LogRecord",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "None",
                  "children": [
                    {
                      "value": "None",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "with open(self.baseFilename, \"w\", encoding=\"utf-8\") as f:\n            f.write(self.format(record))",
                  "children": [
                    {
                      "value": "with open(self.baseFilename, \"w\", encoding=\"utf-8\") as f:\n            f.write(self.format(record))",
                      "children": [
                        {
                          "value": "open(self.baseFilename, \"w\", encoding=\"utf-8\") as f",
                          "children": [
                            {
                              "value": "open(self.baseFilename, \"w\", encoding=\"utf-8\") as f",
                              "children": [
                                {
                                  "value": "open(self.baseFilename, \"w\", encoding=\"utf-8\") as f",
                                  "children": [
                                    {
                                      "value": "open(self.baseFilename, \"w\", encoding=\"utf-8\")",
                                      "children": [
                                        {
                                          "value": "open",
                                          "children": []
                                        },
                                        {
                                          "value": "(self.baseFilename, \"w\", encoding=\"utf-8\")",
                                          "children": [
                                            {
                                              "value": "self.baseFilename",
                                              "children": [
                                                {
                                                  "value": "self",
                                                  "children": []
                                                },
                                                {
                                                  "value": "baseFilename",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"w\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "w",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "encoding=\"utf-8\"",
                                              "children": [
                                                {
                                                  "value": "encoding",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"utf-8\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "utf-8",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "f",
                                      "children": [
                                        {
                                          "value": "f",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "f.write(self.format(record))",
                          "children": [
                            {
                              "value": "f.write(self.format(record))",
                              "children": [
                                {
                                  "value": "f.write(self.format(record))",
                                  "children": [
                                    {
                                      "value": "f.write",
                                      "children": [
                                        {
                                          "value": "f",
                                          "children": []
                                        },
                                        {
                                          "value": "write",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(self.format(record))",
                                      "children": [
                                        {
                                          "value": "self.format(record)",
                                          "children": [
                                            {
                                              "value": "self.format",
                                              "children": [
                                                {
                                                  "value": "self",
                                                  "children": []
                                                },
                                                {
                                                  "value": "format",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "(record)",
                                              "children": [
                                                {
                                                  "value": "record",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}