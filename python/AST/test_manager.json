{
  "value": "import logging\n\nimport pytest\nfrom prisma.models import User\n\nfrom backend.blocks.basic import FindInDictionaryBlock, StoreValueBlock\nfrom backend.blocks.maths import CalculatorBlock, Operation\nfrom backend.data import execution, graph\nfrom backend.server.model import CreateGraph\nfrom backend.server.rest_api import AgentServer\nfrom backend.usecases.sample import create_test_graph, create_test_user\nfrom backend.util.test import SpinTestServer, wait_execution\n\nlogger = logging.getLogger(__name__)\n\n\nasync def create_graph(s: SpinTestServer, g: graph.Graph, u: User) -> graph.Graph:\n    logger.info(f\"Creating graph for user {u.id}\")\n    return await s.agent_server.test_create_graph(CreateGraph(graph=g), u.id)\n\n\nasync def execute_graph(\n    agent_server: AgentServer,\n    test_graph: graph.Graph,\n    test_user: User,\n    input_data: dict,\n    num_execs: int = 4,\n) -> str:\n    logger.info(f\"Executing graph {test_graph.id} for user {test_user.id}\")\n    logger.info(f\"Input data: {input_data}\")\n\n    # --- Test adding new executions --- #\n    response = await agent_server.test_execute_graph(\n        test_graph.id, input_data, test_user.id\n    )\n    graph_exec_id = response[\"id\"]\n    logger.info(f\"Created execution with ID: {graph_exec_id}\")\n\n    # Execution queue should be empty\n    logger.info(\"Waiting for execution to complete...\")\n    result = await wait_execution(test_user.id, test_graph.id, graph_exec_id)\n    logger.info(f\"Execution completed with {len(result)} results\")\n    assert result and len(result) == num_execs\n    return graph_exec_id\n\n\nasync def assert_sample_graph_executions(\n    agent_server: AgentServer,\n    test_graph: graph.Graph,\n    test_user: User,\n    graph_exec_id: str,\n):\n    logger.info(f\"Checking execution results for graph {test_graph.id}\")\n    executions = await agent_server.test_get_graph_run_node_execution_results(\n        test_graph.id,\n        graph_exec_id,\n        test_user.id,\n    )\n\n    output_list = [{\"result\": [\"Hello\"]}, {\"result\": [\"World\"]}]\n    input_list = [\n        {\n            \"name\": \"input_1\",\n            \"value\": \"Hello\",\n        },\n        {\n            \"name\": \"input_2\",\n            \"value\": \"World\",\n        },\n    ]\n\n    # Executing StoreValueBlock\n    exec = executions[0]\n    logger.info(f\"Checking first StoreValueBlock execution: {exec}\")\n    assert exec.status == execution.ExecutionStatus.COMPLETED\n    assert exec.graph_exec_id == graph_exec_id\n    assert (\n        exec.output_data in output_list\n    ), f\"Output data: {exec.output_data} and {output_list}\"\n    assert (\n        exec.input_data in input_list\n    ), f\"Input data: {exec.input_data} and {input_list}\"\n    assert exec.node_id in [test_graph.nodes[0].id, test_graph.nodes[1].id]\n\n    # Executing StoreValueBlock\n    exec = executions[1]\n    logger.info(f\"Checking second StoreValueBlock execution: {exec}\")\n    assert exec.status == execution.ExecutionStatus.COMPLETED\n    assert exec.graph_exec_id == graph_exec_id\n    assert (\n        exec.output_data in output_list\n    ), f\"Output data: {exec.output_data} and {output_list}\"\n    assert (\n        exec.input_data in input_list\n    ), f\"Input data: {exec.input_data} and {input_list}\"\n    assert exec.node_id in [test_graph.nodes[0].id, test_graph.nodes[1].id]\n\n    # Executing FillTextTemplateBlock\n    exec = executions[2]\n    logger.info(f\"Checking FillTextTemplateBlock execution: {exec}\")\n    assert exec.status == execution.ExecutionStatus.COMPLETED\n    assert exec.graph_exec_id == graph_exec_id\n    assert exec.output_data == {\"output\": [\"Hello, World!!!\"]}\n    assert exec.input_data == {\n        \"format\": \"{a}, {b}{c}\",\n        \"values\": {\"a\": \"Hello\", \"b\": \"World\", \"c\": \"!!!\"},\n        \"values_#_a\": \"Hello\",\n        \"values_#_b\": \"World\",\n        \"values_#_c\": \"!!!\",\n    }\n    assert exec.node_id == test_graph.nodes[2].id\n\n    # Executing PrintToConsoleBlock\n    exec = executions[3]\n    logger.info(f\"Checking PrintToConsoleBlock execution: {exec}\")\n    assert exec.status == execution.ExecutionStatus.COMPLETED\n    assert exec.graph_exec_id == graph_exec_id\n    assert exec.output_data == {\"status\": [\"printed\"]}\n    assert exec.input_data == {\"text\": \"Hello, World!!!\"}\n    assert exec.node_id == test_graph.nodes[3].id\n\n\n@pytest.mark.asyncio(scope=\"session\")\nasync def test_agent_execution(server: SpinTestServer):\n    logger.info(\"Starting test_agent_execution\")\n    test_user = await create_test_user()\n    test_graph = await create_graph(server, create_test_graph(), test_user)\n    data = {\"input_1\": \"Hello\", \"input_2\": \"World\"}\n    graph_exec_id = await execute_graph(\n        server.agent_server,\n        test_graph,\n        test_user,\n        data,\n        4,\n    )\n    await assert_sample_graph_executions(\n        server.agent_server, test_graph, test_user, graph_exec_id\n    )\n    logger.info(\"Completed test_agent_execution\")\n\n\n@pytest.mark.asyncio(scope=\"session\")\nasync def test_input_pin_always_waited(server: SpinTestServer):\n    \"\"\"\n    This test is asserting that the input pin should always be waited for the execution,\n    even when default value on that pin is defined, the value has to be ignored.\n\n    Test scenario:\n    StoreValueBlock1\n                \\\\ input\n                     >------- FindInDictionaryBlock | input_default: key: \"\", input: {}\n                // key\n    StoreValueBlock2\n    \"\"\"\n    logger.info(\"Starting test_input_pin_always_waited\")\n    nodes = [\n        graph.Node(\n            block_id=StoreValueBlock().id,\n            input_default={\"input\": {\"key1\": \"value1\", \"key2\": \"value2\"}},\n        ),\n        graph.Node(\n            block_id=StoreValueBlock().id,\n            input_default={\"input\": \"key2\"},\n        ),\n        graph.Node(\n            block_id=FindInDictionaryBlock().id,\n            input_default={\"key\": \"\", \"input\": {}},\n        ),\n    ]\n    links = [\n        graph.Link(\n            source_id=nodes[0].id,\n            sink_id=nodes[2].id,\n            source_name=\"output\",\n            sink_name=\"input\",\n        ),\n        graph.Link(\n            source_id=nodes[1].id,\n            sink_id=nodes[2].id,\n            source_name=\"output\",\n            sink_name=\"key\",\n        ),\n    ]\n    test_graph = graph.Graph(\n        name=\"TestGraph\",\n        description=\"Test graph\",\n        nodes=nodes,\n        links=links,\n    )\n    test_user = await create_test_user()\n    test_graph = await create_graph(server, test_graph, test_user)\n    graph_exec_id = await execute_graph(\n        server.agent_server, test_graph, test_user, {}, 3\n    )\n\n    logger.info(\"Checking execution results\")\n    executions = await server.agent_server.test_get_graph_run_node_execution_results(\n        test_graph.id, graph_exec_id, test_user.id\n    )\n    assert len(executions) == 3\n    # FindInDictionaryBlock should wait for the input pin to be provided,\n    # Hence executing extraction of \"key\" from {\"key1\": \"value1\", \"key2\": \"value2\"}\n    assert executions[2].status == execution.ExecutionStatus.COMPLETED\n    assert executions[2].output_data == {\"output\": [\"value2\"]}\n    logger.info(\"Completed test_input_pin_always_waited\")\n\n\n@pytest.mark.asyncio(scope=\"session\")\nasync def test_static_input_link_on_graph(server: SpinTestServer):\n    \"\"\"\n    This test is asserting the behaviour of static input link, e.g: reusable input link.\n\n    Test scenario:\n    *StoreValueBlock1*===a=========\\\\\n    *StoreValueBlock2*===a=====\\\\  ||\n    *StoreValueBlock3*===a===*MathBlock*====b / static====*StoreValueBlock5*\n    *StoreValueBlock4*=========================================//\n\n    In this test, there will be three input waiting in the MathBlock input pin `a`.\n    And later, another output is produced on input pin `b`, which is a static link,\n    this input will complete the input of those three incomplete executions.\n    \"\"\"\n    logger.info(\"Starting test_static_input_link_on_graph\")\n    nodes = [\n        graph.Node(block_id=StoreValueBlock().id, input_default={\"input\": 4}),  # a\n        graph.Node(block_id=StoreValueBlock().id, input_default={\"input\": 4}),  # a\n        graph.Node(block_id=StoreValueBlock().id, input_default={\"input\": 4}),  # a\n        graph.Node(block_id=StoreValueBlock().id, input_default={\"input\": 5}),  # b\n        graph.Node(block_id=StoreValueBlock().id),\n        graph.Node(\n            block_id=CalculatorBlock().id,\n            input_default={\"operation\": Operation.ADD.value},\n        ),\n    ]\n    links = [\n        graph.Link(\n            source_id=nodes[0].id,\n            sink_id=nodes[5].id,\n            source_name=\"output\",\n            sink_name=\"a\",\n        ),\n        graph.Link(\n            source_id=nodes[1].id,\n            sink_id=nodes[5].id,\n            source_name=\"output\",\n            sink_name=\"a\",\n        ),\n        graph.Link(\n            source_id=nodes[2].id,\n            sink_id=nodes[5].id,\n            source_name=\"output\",\n            sink_name=\"a\",\n        ),\n        graph.Link(\n            source_id=nodes[3].id,\n            sink_id=nodes[4].id,\n            source_name=\"output\",\n            sink_name=\"input\",\n        ),\n        graph.Link(\n            source_id=nodes[4].id,\n            sink_id=nodes[5].id,\n            source_name=\"output\",\n            sink_name=\"b\",\n            is_static=True,  # This is the static link to test.\n        ),\n    ]\n    test_graph = graph.Graph(\n        name=\"TestGraph\",\n        description=\"Test graph\",\n        nodes=nodes,\n        links=links,\n    )\n    test_user = await create_test_user()\n    test_graph = await create_graph(server, test_graph, test_user)\n    graph_exec_id = await execute_graph(\n        server.agent_server, test_graph, test_user, {}, 8\n    )\n    logger.info(\"Checking execution results\")\n    executions = await server.agent_server.test_get_graph_run_node_execution_results(\n        test_graph.id, graph_exec_id, test_user.id\n    )\n    assert len(executions) == 8\n    # The last 3 executions will be a+b=4+5=9\n    for i, exec_data in enumerate(executions[-3:]):\n        logger.info(f\"Checking execution {i+1} of last 3: {exec_data}\")\n        assert exec_data.status == execution.ExecutionStatus.COMPLETED\n        assert exec_data.output_data == {\"result\": [9]}\n    logger.info(\"Completed test_static_input_link_on_graph\")",
  "children": [
    {
      "value": "import logging",
      "children": [
        {
          "value": "logging",
          "children": [
            {
              "value": "logging",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "import pytest",
      "children": [
        {
          "value": "pytest",
          "children": [
            {
              "value": "pytest",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from prisma.models import User",
      "children": [
        {
          "value": "prisma.models",
          "children": [
            {
              "value": "prisma",
              "children": []
            },
            {
              "value": "models",
              "children": []
            }
          ]
        },
        {
          "value": "User",
          "children": [
            {
              "value": "User",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.blocks.basic import FindInDictionaryBlock, StoreValueBlock",
      "children": [
        {
          "value": "backend.blocks.basic",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "blocks",
              "children": []
            },
            {
              "value": "basic",
              "children": []
            }
          ]
        },
        {
          "value": "FindInDictionaryBlock",
          "children": [
            {
              "value": "FindInDictionaryBlock",
              "children": []
            }
          ]
        },
        {
          "value": "StoreValueBlock",
          "children": [
            {
              "value": "StoreValueBlock",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.blocks.maths import CalculatorBlock, Operation",
      "children": [
        {
          "value": "backend.blocks.maths",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "blocks",
              "children": []
            },
            {
              "value": "maths",
              "children": []
            }
          ]
        },
        {
          "value": "CalculatorBlock",
          "children": [
            {
              "value": "CalculatorBlock",
              "children": []
            }
          ]
        },
        {
          "value": "Operation",
          "children": [
            {
              "value": "Operation",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.data import execution, graph",
      "children": [
        {
          "value": "backend.data",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "data",
              "children": []
            }
          ]
        },
        {
          "value": "execution",
          "children": [
            {
              "value": "execution",
              "children": []
            }
          ]
        },
        {
          "value": "graph",
          "children": [
            {
              "value": "graph",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.server.model import CreateGraph",
      "children": [
        {
          "value": "backend.server.model",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "server",
              "children": []
            },
            {
              "value": "model",
              "children": []
            }
          ]
        },
        {
          "value": "CreateGraph",
          "children": [
            {
              "value": "CreateGraph",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.server.rest_api import AgentServer",
      "children": [
        {
          "value": "backend.server.rest_api",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "server",
              "children": []
            },
            {
              "value": "rest_api",
              "children": []
            }
          ]
        },
        {
          "value": "AgentServer",
          "children": [
            {
              "value": "AgentServer",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.usecases.sample import create_test_graph, create_test_user",
      "children": [
        {
          "value": "backend.usecases.sample",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "usecases",
              "children": []
            },
            {
              "value": "sample",
              "children": []
            }
          ]
        },
        {
          "value": "create_test_graph",
          "children": [
            {
              "value": "create_test_graph",
              "children": []
            }
          ]
        },
        {
          "value": "create_test_user",
          "children": [
            {
              "value": "create_test_user",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.util.test import SpinTestServer, wait_execution",
      "children": [
        {
          "value": "backend.util.test",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "util",
              "children": []
            },
            {
              "value": "test",
              "children": []
            }
          ]
        },
        {
          "value": "SpinTestServer",
          "children": [
            {
              "value": "SpinTestServer",
              "children": []
            }
          ]
        },
        {
          "value": "wait_execution",
          "children": [
            {
              "value": "wait_execution",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "logger = logging.getLogger(__name__)",
      "children": [
        {
          "value": "logger = logging.getLogger(__name__)",
          "children": [
            {
              "value": "logger",
              "children": []
            },
            {
              "value": "logging.getLogger(__name__)",
              "children": [
                {
                  "value": "logging.getLogger",
                  "children": [
                    {
                      "value": "logging",
                      "children": []
                    },
                    {
                      "value": "getLogger",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "(__name__)",
                  "children": [
                    {
                      "value": "__name__",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "async def create_graph(s: SpinTestServer, g: graph.Graph, u: User) -> graph.Graph:\n    logger.info(f\"Creating graph for user {u.id}\")\n    return await s.agent_server.test_create_graph(CreateGraph(graph=g), u.id)",
      "children": [
        {
          "value": "create_graph",
          "children": []
        },
        {
          "value": "(s: SpinTestServer, g: graph.Graph, u: User)",
          "children": [
            {
              "value": "s: SpinTestServer",
              "children": [
                {
                  "value": "s",
                  "children": []
                },
                {
                  "value": "SpinTestServer",
                  "children": [
                    {
                      "value": "SpinTestServer",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "g: graph.Graph",
              "children": [
                {
                  "value": "g",
                  "children": []
                },
                {
                  "value": "graph.Graph",
                  "children": [
                    {
                      "value": "graph.Graph",
                      "children": [
                        {
                          "value": "graph",
                          "children": []
                        },
                        {
                          "value": "Graph",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "u: User",
              "children": [
                {
                  "value": "u",
                  "children": []
                },
                {
                  "value": "User",
                  "children": [
                    {
                      "value": "User",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "graph.Graph",
          "children": [
            {
              "value": "graph.Graph",
              "children": [
                {
                  "value": "graph",
                  "children": []
                },
                {
                  "value": "Graph",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "logger.info(f\"Creating graph for user {u.id}\")\n    return await s.agent_server.test_create_graph(CreateGraph(graph=g), u.id)",
          "children": [
            {
              "value": "logger.info(f\"Creating graph for user {u.id}\")",
              "children": [
                {
                  "value": "logger.info(f\"Creating graph for user {u.id}\")",
                  "children": [
                    {
                      "value": "logger.info",
                      "children": [
                        {
                          "value": "logger",
                          "children": []
                        },
                        {
                          "value": "info",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "(f\"Creating graph for user {u.id}\")",
                      "children": [
                        {
                          "value": "f\"Creating graph for user {u.id}\"",
                          "children": [
                            {
                              "value": "f\"",
                              "children": []
                            },
                            {
                              "value": "Creating graph for user",
                              "children": []
                            },
                            {
                              "value": "{u.id}",
                              "children": [
                                {
                                  "value": "u.id",
                                  "children": [
                                    {
                                      "value": "u",
                                      "children": []
                                    },
                                    {
                                      "value": "id",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "return await s.agent_server.test_create_graph(CreateGraph(graph=g), u.id)",
              "children": [
                {
                  "value": "await s.agent_server.test_create_graph(CreateGraph(graph=g), u.id)",
                  "children": [
                    {
                      "value": "s.agent_server.test_create_graph(CreateGraph(graph=g), u.id)",
                      "children": [
                        {
                          "value": "s.agent_server.test_create_graph",
                          "children": [
                            {
                              "value": "s.agent_server",
                              "children": [
                                {
                                  "value": "s",
                                  "children": []
                                },
                                {
                                  "value": "agent_server",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "test_create_graph",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(CreateGraph(graph=g), u.id)",
                          "children": [
                            {
                              "value": "CreateGraph(graph=g)",
                              "children": [
                                {
                                  "value": "CreateGraph",
                                  "children": []
                                },
                                {
                                  "value": "(graph=g)",
                                  "children": [
                                    {
                                      "value": "graph=g",
                                      "children": [
                                        {
                                          "value": "graph",
                                          "children": []
                                        },
                                        {
                                          "value": "g",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "u.id",
                              "children": [
                                {
                                  "value": "u",
                                  "children": []
                                },
                                {
                                  "value": "id",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "async def execute_graph(\n    agent_server: AgentServer,\n    test_graph: graph.Graph,\n    test_user: User,\n    input_data: dict,\n    num_execs: int = 4,\n) -> str:\n    logger.info(f\"Executing graph {test_graph.id} for user {test_user.id}\")\n    logger.info(f\"Input data: {input_data}\")\n\n    # --- Test adding new executions --- #\n    response = await agent_server.test_execute_graph(\n        test_graph.id, input_data, test_user.id\n    )\n    graph_exec_id = response[\"id\"]\n    logger.info(f\"Created execution with ID: {graph_exec_id}\")\n\n    # Execution queue should be empty\n    logger.info(\"Waiting for execution to complete...\")\n    result = await wait_execution(test_user.id, test_graph.id, graph_exec_id)\n    logger.info(f\"Execution completed with {len(result)} results\")\n    assert result and len(result) == num_execs\n    return graph_exec_id",
      "children": [
        {
          "value": "execute_graph",
          "children": []
        },
        {
          "value": "(\n    agent_server: AgentServer,\n    test_graph: graph.Graph,\n    test_user: User,\n    input_data: dict,\n    num_execs: int = 4,\n)",
          "children": [
            {
              "value": "agent_server: AgentServer",
              "children": [
                {
                  "value": "agent_server",
                  "children": []
                },
                {
                  "value": "AgentServer",
                  "children": [
                    {
                      "value": "AgentServer",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "test_graph: graph.Graph",
              "children": [
                {
                  "value": "test_graph",
                  "children": []
                },
                {
                  "value": "graph.Graph",
                  "children": [
                    {
                      "value": "graph.Graph",
                      "children": [
                        {
                          "value": "graph",
                          "children": []
                        },
                        {
                          "value": "Graph",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "test_user: User",
              "children": [
                {
                  "value": "test_user",
                  "children": []
                },
                {
                  "value": "User",
                  "children": [
                    {
                      "value": "User",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "input_data: dict",
              "children": [
                {
                  "value": "input_data",
                  "children": []
                },
                {
                  "value": "dict",
                  "children": [
                    {
                      "value": "dict",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "num_execs: int = 4",
              "children": [
                {
                  "value": "num_execs",
                  "children": []
                },
                {
                  "value": "int",
                  "children": [
                    {
                      "value": "int",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "4",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "str",
          "children": [
            {
              "value": "str",
              "children": []
            }
          ]
        },
        {
          "value": "logger.info(f\"Executing graph {test_graph.id} for user {test_user.id}\")\n    logger.info(f\"Input data: {input_data}\")\n\n    # --- Test adding new executions --- #\n    response = await agent_server.test_execute_graph(\n        test_graph.id, input_data, test_user.id\n    )\n    graph_exec_id = response[\"id\"]\n    logger.info(f\"Created execution with ID: {graph_exec_id}\")\n\n    # Execution queue should be empty\n    logger.info(\"Waiting for execution to complete...\")\n    result = await wait_execution(test_user.id, test_graph.id, graph_exec_id)\n    logger.info(f\"Execution completed with {len(result)} results\")\n    assert result and len(result) == num_execs\n    return graph_exec_id",
          "children": [
            {
              "value": "logger.info(f\"Executing graph {test_graph.id} for user {test_user.id}\")",
              "children": [
                {
                  "value": "logger.info(f\"Executing graph {test_graph.id} for user {test_user.id}\")",
                  "children": [
                    {
                      "value": "logger.info",
                      "children": [
                        {
                          "value": "logger",
                          "children": []
                        },
                        {
                          "value": "info",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "(f\"Executing graph {test_graph.id} for user {test_user.id}\")",
                      "children": [
                        {
                          "value": "f\"Executing graph {test_graph.id} for user {test_user.id}\"",
                          "children": [
                            {
                              "value": "f\"",
                              "children": []
                            },
                            {
                              "value": "Executing graph",
                              "children": []
                            },
                            {
                              "value": "{test_graph.id}",
                              "children": [
                                {
                                  "value": "test_graph.id",
                                  "children": [
                                    {
                                      "value": "test_graph",
                                      "children": []
                                    },
                                    {
                                      "value": "id",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "for user",
                              "children": []
                            },
                            {
                              "value": "{test_user.id}",
                              "children": [
                                {
                                  "value": "test_user.id",
                                  "children": [
                                    {
                                      "value": "test_user",
                                      "children": []
                                    },
                                    {
                                      "value": "id",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "logger.info(f\"Input data: {input_data}\")",
              "children": [
                {
                  "value": "logger.info(f\"Input data: {input_data}\")",
                  "children": [
                    {
                      "value": "logger.info",
                      "children": [
                        {
                          "value": "logger",
                          "children": []
                        },
                        {
                          "value": "info",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "(f\"Input data: {input_data}\")",
                      "children": [
                        {
                          "value": "f\"Input data: {input_data}\"",
                          "children": [
                            {
                              "value": "f\"",
                              "children": []
                            },
                            {
                              "value": "Input data:",
                              "children": []
                            },
                            {
                              "value": "{input_data}",
                              "children": [
                                {
                                  "value": "input_data",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# --- Test adding new executions --- #",
              "children": []
            },
            {
              "value": "response = await agent_server.test_execute_graph(\n        test_graph.id, input_data, test_user.id\n    )",
              "children": [
                {
                  "value": "response = await agent_server.test_execute_graph(\n        test_graph.id, input_data, test_user.id\n    )",
                  "children": [
                    {
                      "value": "response",
                      "children": []
                    },
                    {
                      "value": "await agent_server.test_execute_graph(\n        test_graph.id, input_data, test_user.id\n    )",
                      "children": [
                        {
                          "value": "agent_server.test_execute_graph(\n        test_graph.id, input_data, test_user.id\n    )",
                          "children": [
                            {
                              "value": "agent_server.test_execute_graph",
                              "children": [
                                {
                                  "value": "agent_server",
                                  "children": []
                                },
                                {
                                  "value": "test_execute_graph",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\n        test_graph.id, input_data, test_user.id\n    )",
                              "children": [
                                {
                                  "value": "test_graph.id",
                                  "children": [
                                    {
                                      "value": "test_graph",
                                      "children": []
                                    },
                                    {
                                      "value": "id",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "input_data",
                                  "children": []
                                },
                                {
                                  "value": "test_user.id",
                                  "children": [
                                    {
                                      "value": "test_user",
                                      "children": []
                                    },
                                    {
                                      "value": "id",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "graph_exec_id = response[\"id\"]",
              "children": [
                {
                  "value": "graph_exec_id = response[\"id\"]",
                  "children": [
                    {
                      "value": "graph_exec_id",
                      "children": []
                    },
                    {
                      "value": "response[\"id\"]",
                      "children": [
                        {
                          "value": "response",
                          "children": []
                        },
                        {
                          "value": "\"id\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "id",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "logger.info(f\"Created execution with ID: {graph_exec_id}\")",
              "children": [
                {
                  "value": "logger.info(f\"Created execution with ID: {graph_exec_id}\")",
                  "children": [
                    {
                      "value": "logger.info",
                      "children": [
                        {
                          "value": "logger",
                          "children": []
                        },
                        {
                          "value": "info",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "(f\"Created execution with ID: {graph_exec_id}\")",
                      "children": [
                        {
                          "value": "f\"Created execution with ID: {graph_exec_id}\"",
                          "children": [
                            {
                              "value": "f\"",
                              "children": []
                            },
                            {
                              "value": "Created execution with ID:",
                              "children": []
                            },
                            {
                              "value": "{graph_exec_id}",
                              "children": [
                                {
                                  "value": "graph_exec_id",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Execution queue should be empty",
              "children": []
            },
            {
              "value": "logger.info(\"Waiting for execution to complete...\")",
              "children": [
                {
                  "value": "logger.info(\"Waiting for execution to complete...\")",
                  "children": [
                    {
                      "value": "logger.info",
                      "children": [
                        {
                          "value": "logger",
                          "children": []
                        },
                        {
                          "value": "info",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "(\"Waiting for execution to complete...\")",
                      "children": [
                        {
                          "value": "\"Waiting for execution to complete...\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "Waiting for execution to complete...",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "result = await wait_execution(test_user.id, test_graph.id, graph_exec_id)",
              "children": [
                {
                  "value": "result = await wait_execution(test_user.id, test_graph.id, graph_exec_id)",
                  "children": [
                    {
                      "value": "result",
                      "children": []
                    },
                    {
                      "value": "await wait_execution(test_user.id, test_graph.id, graph_exec_id)",
                      "children": [
                        {
                          "value": "wait_execution(test_user.id, test_graph.id, graph_exec_id)",
                          "children": [
                            {
                              "value": "wait_execution",
                              "children": []
                            },
                            {
                              "value": "(test_user.id, test_graph.id, graph_exec_id)",
                              "children": [
                                {
                                  "value": "test_user.id",
                                  "children": [
                                    {
                                      "value": "test_user",
                                      "children": []
                                    },
                                    {
                                      "value": "id",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "test_graph.id",
                                  "children": [
                                    {
                                      "value": "test_graph",
                                      "children": []
                                    },
                                    {
                                      "value": "id",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "graph_exec_id",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "logger.info(f\"Execution completed with {len(result)} results\")",
              "children": [
                {
                  "value": "logger.info(f\"Execution completed with {len(result)} results\")",
                  "children": [
                    {
                      "value": "logger.info",
                      "children": [
                        {
                          "value": "logger",
                          "children": []
                        },
                        {
                          "value": "info",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "(f\"Execution completed with {len(result)} results\")",
                      "children": [
                        {
                          "value": "f\"Execution completed with {len(result)} results\"",
                          "children": [
                            {
                              "value": "f\"",
                              "children": []
                            },
                            {
                              "value": "Execution completed with",
                              "children": []
                            },
                            {
                              "value": "{len(result)}",
                              "children": [
                                {
                                  "value": "len(result)",
                                  "children": [
                                    {
                                      "value": "len",
                                      "children": []
                                    },
                                    {
                                      "value": "(result)",
                                      "children": [
                                        {
                                          "value": "result",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "results",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "assert result and len(result) == num_execs",
              "children": [
                {
                  "value": "result and len(result) == num_execs",
                  "children": [
                    {
                      "value": "result",
                      "children": []
                    },
                    {
                      "value": "len(result) == num_execs",
                      "children": [
                        {
                          "value": "len(result)",
                          "children": [
                            {
                              "value": "len",
                              "children": []
                            },
                            {
                              "value": "(result)",
                              "children": [
                                {
                                  "value": "result",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "num_execs",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "return graph_exec_id",
              "children": [
                {
                  "value": "graph_exec_id",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "async def assert_sample_graph_executions(\n    agent_server: AgentServer,\n    test_graph: graph.Graph,\n    test_user: User,\n    graph_exec_id: str,\n):\n    logger.info(f\"Checking execution results for graph {test_graph.id}\")\n    executions = await agent_server.test_get_graph_run_node_execution_results(\n        test_graph.id,\n        graph_exec_id,\n        test_user.id,\n    )\n\n    output_list = [{\"result\": [\"Hello\"]}, {\"result\": [\"World\"]}]\n    input_list = [\n        {\n            \"name\": \"input_1\",\n            \"value\": \"Hello\",\n        },\n        {\n            \"name\": \"input_2\",\n            \"value\": \"World\",\n        },\n    ]\n\n    # Executing StoreValueBlock\n    exec = executions[0]\n    logger.info(f\"Checking first StoreValueBlock execution: {exec}\")\n    assert exec.status == execution.ExecutionStatus.COMPLETED\n    assert exec.graph_exec_id == graph_exec_id\n    assert (\n        exec.output_data in output_list\n    ), f\"Output data: {exec.output_data} and {output_list}\"\n    assert (\n        exec.input_data in input_list\n    ), f\"Input data: {exec.input_data} and {input_list}\"\n    assert exec.node_id in [test_graph.nodes[0].id, test_graph.nodes[1].id]\n\n    # Executing StoreValueBlock\n    exec = executions[1]\n    logger.info(f\"Checking second StoreValueBlock execution: {exec}\")\n    assert exec.status == execution.ExecutionStatus.COMPLETED\n    assert exec.graph_exec_id == graph_exec_id\n    assert (\n        exec.output_data in output_list\n    ), f\"Output data: {exec.output_data} and {output_list}\"\n    assert (\n        exec.input_data in input_list\n    ), f\"Input data: {exec.input_data} and {input_list}\"\n    assert exec.node_id in [test_graph.nodes[0].id, test_graph.nodes[1].id]\n\n    # Executing FillTextTemplateBlock\n    exec = executions[2]\n    logger.info(f\"Checking FillTextTemplateBlock execution: {exec}\")\n    assert exec.status == execution.ExecutionStatus.COMPLETED\n    assert exec.graph_exec_id == graph_exec_id\n    assert exec.output_data == {\"output\": [\"Hello, World!!!\"]}\n    assert exec.input_data == {\n        \"format\": \"{a}, {b}{c}\",\n        \"values\": {\"a\": \"Hello\", \"b\": \"World\", \"c\": \"!!!\"},\n        \"values_#_a\": \"Hello\",\n        \"values_#_b\": \"World\",\n        \"values_#_c\": \"!!!\",\n    }\n    assert exec.node_id == test_graph.nodes[2].id\n\n    # Executing PrintToConsoleBlock\n    exec = executions[3]\n    logger.info(f\"Checking PrintToConsoleBlock execution: {exec}\")\n    assert exec.status == execution.ExecutionStatus.COMPLETED\n    assert exec.graph_exec_id == graph_exec_id\n    assert exec.output_data == {\"status\": [\"printed\"]}\n    assert exec.input_data == {\"text\": \"Hello, World!!!\"}\n    assert exec.node_id == test_graph.nodes[3].id",
      "children": [
        {
          "value": "assert_sample_graph_executions",
          "children": []
        },
        {
          "value": "(\n    agent_server: AgentServer,\n    test_graph: graph.Graph,\n    test_user: User,\n    graph_exec_id: str,\n)",
          "children": [
            {
              "value": "agent_server: AgentServer",
              "children": [
                {
                  "value": "agent_server",
                  "children": []
                },
                {
                  "value": "AgentServer",
                  "children": [
                    {
                      "value": "AgentServer",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "test_graph: graph.Graph",
              "children": [
                {
                  "value": "test_graph",
                  "children": []
                },
                {
                  "value": "graph.Graph",
                  "children": [
                    {
                      "value": "graph.Graph",
                      "children": [
                        {
                          "value": "graph",
                          "children": []
                        },
                        {
                          "value": "Graph",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "test_user: User",
              "children": [
                {
                  "value": "test_user",
                  "children": []
                },
                {
                  "value": "User",
                  "children": [
                    {
                      "value": "User",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "graph_exec_id: str",
              "children": [
                {
                  "value": "graph_exec_id",
                  "children": []
                },
                {
                  "value": "str",
                  "children": [
                    {
                      "value": "str",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "logger.info(f\"Checking execution results for graph {test_graph.id}\")\n    executions = await agent_server.test_get_graph_run_node_execution_results(\n        test_graph.id,\n        graph_exec_id,\n        test_user.id,\n    )\n\n    output_list = [{\"result\": [\"Hello\"]}, {\"result\": [\"World\"]}]\n    input_list = [\n        {\n            \"name\": \"input_1\",\n            \"value\": \"Hello\",\n        },\n        {\n            \"name\": \"input_2\",\n            \"value\": \"World\",\n        },\n    ]\n\n    # Executing StoreValueBlock\n    exec = executions[0]\n    logger.info(f\"Checking first StoreValueBlock execution: {exec}\")\n    assert exec.status == execution.ExecutionStatus.COMPLETED\n    assert exec.graph_exec_id == graph_exec_id\n    assert (\n        exec.output_data in output_list\n    ), f\"Output data: {exec.output_data} and {output_list}\"\n    assert (\n        exec.input_data in input_list\n    ), f\"Input data: {exec.input_data} and {input_list}\"\n    assert exec.node_id in [test_graph.nodes[0].id, test_graph.nodes[1].id]\n\n    # Executing StoreValueBlock\n    exec = executions[1]\n    logger.info(f\"Checking second StoreValueBlock execution: {exec}\")\n    assert exec.status == execution.ExecutionStatus.COMPLETED\n    assert exec.graph_exec_id == graph_exec_id\n    assert (\n        exec.output_data in output_list\n    ), f\"Output data: {exec.output_data} and {output_list}\"\n    assert (\n        exec.input_data in input_list\n    ), f\"Input data: {exec.input_data} and {input_list}\"\n    assert exec.node_id in [test_graph.nodes[0].id, test_graph.nodes[1].id]\n\n    # Executing FillTextTemplateBlock\n    exec = executions[2]\n    logger.info(f\"Checking FillTextTemplateBlock execution: {exec}\")\n    assert exec.status == execution.ExecutionStatus.COMPLETED\n    assert exec.graph_exec_id == graph_exec_id\n    assert exec.output_data == {\"output\": [\"Hello, World!!!\"]}\n    assert exec.input_data == {\n        \"format\": \"{a}, {b}{c}\",\n        \"values\": {\"a\": \"Hello\", \"b\": \"World\", \"c\": \"!!!\"},\n        \"values_#_a\": \"Hello\",\n        \"values_#_b\": \"World\",\n        \"values_#_c\": \"!!!\",\n    }\n    assert exec.node_id == test_graph.nodes[2].id\n\n    # Executing PrintToConsoleBlock\n    exec = executions[3]\n    logger.info(f\"Checking PrintToConsoleBlock execution: {exec}\")\n    assert exec.status == execution.ExecutionStatus.COMPLETED\n    assert exec.graph_exec_id == graph_exec_id\n    assert exec.output_data == {\"status\": [\"printed\"]}\n    assert exec.input_data == {\"text\": \"Hello, World!!!\"}\n    assert exec.node_id == test_graph.nodes[3].id",
          "children": [
            {
              "value": "logger.info(f\"Checking execution results for graph {test_graph.id}\")",
              "children": [
                {
                  "value": "logger.info(f\"Checking execution results for graph {test_graph.id}\")",
                  "children": [
                    {
                      "value": "logger.info",
                      "children": [
                        {
                          "value": "logger",
                          "children": []
                        },
                        {
                          "value": "info",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "(f\"Checking execution results for graph {test_graph.id}\")",
                      "children": [
                        {
                          "value": "f\"Checking execution results for graph {test_graph.id}\"",
                          "children": [
                            {
                              "value": "f\"",
                              "children": []
                            },
                            {
                              "value": "Checking execution results for graph",
                              "children": []
                            },
                            {
                              "value": "{test_graph.id}",
                              "children": [
                                {
                                  "value": "test_graph.id",
                                  "children": [
                                    {
                                      "value": "test_graph",
                                      "children": []
                                    },
                                    {
                                      "value": "id",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "executions = await agent_server.test_get_graph_run_node_execution_results(\n        test_graph.id,\n        graph_exec_id,\n        test_user.id,\n    )",
              "children": [
                {
                  "value": "executions = await agent_server.test_get_graph_run_node_execution_results(\n        test_graph.id,\n        graph_exec_id,\n        test_user.id,\n    )",
                  "children": [
                    {
                      "value": "executions",
                      "children": []
                    },
                    {
                      "value": "await agent_server.test_get_graph_run_node_execution_results(\n        test_graph.id,\n        graph_exec_id,\n        test_user.id,\n    )",
                      "children": [
                        {
                          "value": "agent_server.test_get_graph_run_node_execution_results(\n        test_graph.id,\n        graph_exec_id,\n        test_user.id,\n    )",
                          "children": [
                            {
                              "value": "agent_server.test_get_graph_run_node_execution_results",
                              "children": [
                                {
                                  "value": "agent_server",
                                  "children": []
                                },
                                {
                                  "value": "test_get_graph_run_node_execution_results",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\n        test_graph.id,\n        graph_exec_id,\n        test_user.id,\n    )",
                              "children": [
                                {
                                  "value": "test_graph.id",
                                  "children": [
                                    {
                                      "value": "test_graph",
                                      "children": []
                                    },
                                    {
                                      "value": "id",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "graph_exec_id",
                                  "children": []
                                },
                                {
                                  "value": "test_user.id",
                                  "children": [
                                    {
                                      "value": "test_user",
                                      "children": []
                                    },
                                    {
                                      "value": "id",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "output_list = [{\"result\": [\"Hello\"]}, {\"result\": [\"World\"]}]",
              "children": [
                {
                  "value": "output_list = [{\"result\": [\"Hello\"]}, {\"result\": [\"World\"]}]",
                  "children": [
                    {
                      "value": "output_list",
                      "children": []
                    },
                    {
                      "value": "[{\"result\": [\"Hello\"]}, {\"result\": [\"World\"]}]",
                      "children": [
                        {
                          "value": "{\"result\": [\"Hello\"]}",
                          "children": [
                            {
                              "value": "\"result\": [\"Hello\"]",
                              "children": [
                                {
                                  "value": "\"result\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "result",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "[\"Hello\"]",
                                  "children": [
                                    {
                                      "value": "\"Hello\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "Hello",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "{\"result\": [\"World\"]}",
                          "children": [
                            {
                              "value": "\"result\": [\"World\"]",
                              "children": [
                                {
                                  "value": "\"result\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "result",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "[\"World\"]",
                                  "children": [
                                    {
                                      "value": "\"World\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "World",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "input_list = [\n        {\n            \"name\": \"input_1\",\n            \"value\": \"Hello\",\n        },\n        {\n            \"name\": \"input_2\",\n            \"value\": \"World\",\n        },\n    ]",
              "children": [
                {
                  "value": "input_list = [\n        {\n            \"name\": \"input_1\",\n            \"value\": \"Hello\",\n        },\n        {\n            \"name\": \"input_2\",\n            \"value\": \"World\",\n        },\n    ]",
                  "children": [
                    {
                      "value": "input_list",
                      "children": []
                    },
                    {
                      "value": "[\n        {\n            \"name\": \"input_1\",\n            \"value\": \"Hello\",\n        },\n        {\n            \"name\": \"input_2\",\n            \"value\": \"World\",\n        },\n    ]",
                      "children": [
                        {
                          "value": "{\n            \"name\": \"input_1\",\n            \"value\": \"Hello\",\n        }",
                          "children": [
                            {
                              "value": "\"name\": \"input_1\"",
                              "children": [
                                {
                                  "value": "\"name\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "name",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "\"input_1\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "input_1",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "\"value\": \"Hello\"",
                              "children": [
                                {
                                  "value": "\"value\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "value",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "\"Hello\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "Hello",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "{\n            \"name\": \"input_2\",\n            \"value\": \"World\",\n        }",
                          "children": [
                            {
                              "value": "\"name\": \"input_2\"",
                              "children": [
                                {
                                  "value": "\"name\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "name",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "\"input_2\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "input_2",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "\"value\": \"World\"",
                              "children": [
                                {
                                  "value": "\"value\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "value",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "\"World\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "World",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Executing StoreValueBlock",
              "children": []
            },
            {
              "value": "exec = executions[0]",
              "children": [
                {
                  "value": "exec = executions[0]",
                  "children": [
                    {
                      "value": "exec",
                      "children": []
                    },
                    {
                      "value": "executions[0]",
                      "children": [
                        {
                          "value": "executions",
                          "children": []
                        },
                        {
                          "value": "0",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "logger.info(f\"Checking first StoreValueBlock execution: {exec}\")",
              "children": [
                {
                  "value": "logger.info(f\"Checking first StoreValueBlock execution: {exec}\")",
                  "children": [
                    {
                      "value": "logger.info",
                      "children": [
                        {
                          "value": "logger",
                          "children": []
                        },
                        {
                          "value": "info",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "(f\"Checking first StoreValueBlock execution: {exec}\")",
                      "children": [
                        {
                          "value": "f\"Checking first StoreValueBlock execution: {exec}\"",
                          "children": [
                            {
                              "value": "f\"",
                              "children": []
                            },
                            {
                              "value": "Checking first StoreValueBlock execution:",
                              "children": []
                            },
                            {
                              "value": "{exec}",
                              "children": [
                                {
                                  "value": "exec",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "assert exec.status == execution.ExecutionStatus.COMPLETED",
              "children": [
                {
                  "value": "exec.status == execution.ExecutionStatus.COMPLETED",
                  "children": [
                    {
                      "value": "exec.status",
                      "children": [
                        {
                          "value": "exec",
                          "children": []
                        },
                        {
                          "value": "status",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "execution.ExecutionStatus.COMPLETED",
                      "children": [
                        {
                          "value": "execution.ExecutionStatus",
                          "children": [
                            {
                              "value": "execution",
                              "children": []
                            },
                            {
                              "value": "ExecutionStatus",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "COMPLETED",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "assert exec.graph_exec_id == graph_exec_id",
              "children": [
                {
                  "value": "exec.graph_exec_id == graph_exec_id",
                  "children": [
                    {
                      "value": "exec.graph_exec_id",
                      "children": [
                        {
                          "value": "exec",
                          "children": []
                        },
                        {
                          "value": "graph_exec_id",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "graph_exec_id",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "assert (\n        exec.output_data in output_list\n    ), f\"Output data: {exec.output_data} and {output_list}\"",
              "children": [
                {
                  "value": "(\n        exec.output_data in output_list\n    )",
                  "children": [
                    {
                      "value": "exec.output_data in output_list",
                      "children": [
                        {
                          "value": "exec.output_data",
                          "children": [
                            {
                              "value": "exec",
                              "children": []
                            },
                            {
                              "value": "output_data",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "output_list",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "f\"Output data: {exec.output_data} and {output_list}\"",
                  "children": [
                    {
                      "value": "f\"",
                      "children": []
                    },
                    {
                      "value": "Output data:",
                      "children": []
                    },
                    {
                      "value": "{exec.output_data}",
                      "children": [
                        {
                          "value": "exec.output_data",
                          "children": [
                            {
                              "value": "exec",
                              "children": []
                            },
                            {
                              "value": "output_data",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "and",
                      "children": []
                    },
                    {
                      "value": "{output_list}",
                      "children": [
                        {
                          "value": "output_list",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "\"",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "assert (\n        exec.input_data in input_list\n    ), f\"Input data: {exec.input_data} and {input_list}\"",
              "children": [
                {
                  "value": "(\n        exec.input_data in input_list\n    )",
                  "children": [
                    {
                      "value": "exec.input_data in input_list",
                      "children": [
                        {
                          "value": "exec.input_data",
                          "children": [
                            {
                              "value": "exec",
                              "children": []
                            },
                            {
                              "value": "input_data",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "input_list",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "f\"Input data: {exec.input_data} and {input_list}\"",
                  "children": [
                    {
                      "value": "f\"",
                      "children": []
                    },
                    {
                      "value": "Input data:",
                      "children": []
                    },
                    {
                      "value": "{exec.input_data}",
                      "children": [
                        {
                          "value": "exec.input_data",
                          "children": [
                            {
                              "value": "exec",
                              "children": []
                            },
                            {
                              "value": "input_data",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "and",
                      "children": []
                    },
                    {
                      "value": "{input_list}",
                      "children": [
                        {
                          "value": "input_list",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "\"",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "assert exec.node_id in [test_graph.nodes[0].id, test_graph.nodes[1].id]",
              "children": [
                {
                  "value": "exec.node_id in [test_graph.nodes[0].id, test_graph.nodes[1].id]",
                  "children": [
                    {
                      "value": "exec.node_id",
                      "children": [
                        {
                          "value": "exec",
                          "children": []
                        },
                        {
                          "value": "node_id",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "[test_graph.nodes[0].id, test_graph.nodes[1].id]",
                      "children": [
                        {
                          "value": "test_graph.nodes[0].id",
                          "children": [
                            {
                              "value": "test_graph.nodes[0]",
                              "children": [
                                {
                                  "value": "test_graph.nodes",
                                  "children": [
                                    {
                                      "value": "test_graph",
                                      "children": []
                                    },
                                    {
                                      "value": "nodes",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "id",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "test_graph.nodes[1].id",
                          "children": [
                            {
                              "value": "test_graph.nodes[1]",
                              "children": [
                                {
                                  "value": "test_graph.nodes",
                                  "children": [
                                    {
                                      "value": "test_graph",
                                      "children": []
                                    },
                                    {
                                      "value": "nodes",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "id",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Executing StoreValueBlock",
              "children": []
            },
            {
              "value": "exec = executions[1]",
              "children": [
                {
                  "value": "exec = executions[1]",
                  "children": [
                    {
                      "value": "exec",
                      "children": []
                    },
                    {
                      "value": "executions[1]",
                      "children": [
                        {
                          "value": "executions",
                          "children": []
                        },
                        {
                          "value": "1",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "logger.info(f\"Checking second StoreValueBlock execution: {exec}\")",
              "children": [
                {
                  "value": "logger.info(f\"Checking second StoreValueBlock execution: {exec}\")",
                  "children": [
                    {
                      "value": "logger.info",
                      "children": [
                        {
                          "value": "logger",
                          "children": []
                        },
                        {
                          "value": "info",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "(f\"Checking second StoreValueBlock execution: {exec}\")",
                      "children": [
                        {
                          "value": "f\"Checking second StoreValueBlock execution: {exec}\"",
                          "children": [
                            {
                              "value": "f\"",
                              "children": []
                            },
                            {
                              "value": "Checking second StoreValueBlock execution:",
                              "children": []
                            },
                            {
                              "value": "{exec}",
                              "children": [
                                {
                                  "value": "exec",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "assert exec.status == execution.ExecutionStatus.COMPLETED",
              "children": [
                {
                  "value": "exec.status == execution.ExecutionStatus.COMPLETED",
                  "children": [
                    {
                      "value": "exec.status",
                      "children": [
                        {
                          "value": "exec",
                          "children": []
                        },
                        {
                          "value": "status",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "execution.ExecutionStatus.COMPLETED",
                      "children": [
                        {
                          "value": "execution.ExecutionStatus",
                          "children": [
                            {
                              "value": "execution",
                              "children": []
                            },
                            {
                              "value": "ExecutionStatus",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "COMPLETED",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "assert exec.graph_exec_id == graph_exec_id",
              "children": [
                {
                  "value": "exec.graph_exec_id == graph_exec_id",
                  "children": [
                    {
                      "value": "exec.graph_exec_id",
                      "children": [
                        {
                          "value": "exec",
                          "children": []
                        },
                        {
                          "value": "graph_exec_id",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "graph_exec_id",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "assert (\n        exec.output_data in output_list\n    ), f\"Output data: {exec.output_data} and {output_list}\"",
              "children": [
                {
                  "value": "(\n        exec.output_data in output_list\n    )",
                  "children": [
                    {
                      "value": "exec.output_data in output_list",
                      "children": [
                        {
                          "value": "exec.output_data",
                          "children": [
                            {
                              "value": "exec",
                              "children": []
                            },
                            {
                              "value": "output_data",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "output_list",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "f\"Output data: {exec.output_data} and {output_list}\"",
                  "children": [
                    {
                      "value": "f\"",
                      "children": []
                    },
                    {
                      "value": "Output data:",
                      "children": []
                    },
                    {
                      "value": "{exec.output_data}",
                      "children": [
                        {
                          "value": "exec.output_data",
                          "children": [
                            {
                              "value": "exec",
                              "children": []
                            },
                            {
                              "value": "output_data",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "and",
                      "children": []
                    },
                    {
                      "value": "{output_list}",
                      "children": [
                        {
                          "value": "output_list",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "\"",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "assert (\n        exec.input_data in input_list\n    ), f\"Input data: {exec.input_data} and {input_list}\"",
              "children": [
                {
                  "value": "(\n        exec.input_data in input_list\n    )",
                  "children": [
                    {
                      "value": "exec.input_data in input_list",
                      "children": [
                        {
                          "value": "exec.input_data",
                          "children": [
                            {
                              "value": "exec",
                              "children": []
                            },
                            {
                              "value": "input_data",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "input_list",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "f\"Input data: {exec.input_data} and {input_list}\"",
                  "children": [
                    {
                      "value": "f\"",
                      "children": []
                    },
                    {
                      "value": "Input data:",
                      "children": []
                    },
                    {
                      "value": "{exec.input_data}",
                      "children": [
                        {
                          "value": "exec.input_data",
                          "children": [
                            {
                              "value": "exec",
                              "children": []
                            },
                            {
                              "value": "input_data",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "and",
                      "children": []
                    },
                    {
                      "value": "{input_list}",
                      "children": [
                        {
                          "value": "input_list",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "\"",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "assert exec.node_id in [test_graph.nodes[0].id, test_graph.nodes[1].id]",
              "children": [
                {
                  "value": "exec.node_id in [test_graph.nodes[0].id, test_graph.nodes[1].id]",
                  "children": [
                    {
                      "value": "exec.node_id",
                      "children": [
                        {
                          "value": "exec",
                          "children": []
                        },
                        {
                          "value": "node_id",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "[test_graph.nodes[0].id, test_graph.nodes[1].id]",
                      "children": [
                        {
                          "value": "test_graph.nodes[0].id",
                          "children": [
                            {
                              "value": "test_graph.nodes[0]",
                              "children": [
                                {
                                  "value": "test_graph.nodes",
                                  "children": [
                                    {
                                      "value": "test_graph",
                                      "children": []
                                    },
                                    {
                                      "value": "nodes",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "id",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "test_graph.nodes[1].id",
                          "children": [
                            {
                              "value": "test_graph.nodes[1]",
                              "children": [
                                {
                                  "value": "test_graph.nodes",
                                  "children": [
                                    {
                                      "value": "test_graph",
                                      "children": []
                                    },
                                    {
                                      "value": "nodes",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "id",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Executing FillTextTemplateBlock",
              "children": []
            },
            {
              "value": "exec = executions[2]",
              "children": [
                {
                  "value": "exec = executions[2]",
                  "children": [
                    {
                      "value": "exec",
                      "children": []
                    },
                    {
                      "value": "executions[2]",
                      "children": [
                        {
                          "value": "executions",
                          "children": []
                        },
                        {
                          "value": "2",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "logger.info(f\"Checking FillTextTemplateBlock execution: {exec}\")",
              "children": [
                {
                  "value": "logger.info(f\"Checking FillTextTemplateBlock execution: {exec}\")",
                  "children": [
                    {
                      "value": "logger.info",
                      "children": [
                        {
                          "value": "logger",
                          "children": []
                        },
                        {
                          "value": "info",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "(f\"Checking FillTextTemplateBlock execution: {exec}\")",
                      "children": [
                        {
                          "value": "f\"Checking FillTextTemplateBlock execution: {exec}\"",
                          "children": [
                            {
                              "value": "f\"",
                              "children": []
                            },
                            {
                              "value": "Checking FillTextTemplateBlock execution:",
                              "children": []
                            },
                            {
                              "value": "{exec}",
                              "children": [
                                {
                                  "value": "exec",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "assert exec.status == execution.ExecutionStatus.COMPLETED",
              "children": [
                {
                  "value": "exec.status == execution.ExecutionStatus.COMPLETED",
                  "children": [
                    {
                      "value": "exec.status",
                      "children": [
                        {
                          "value": "exec",
                          "children": []
                        },
                        {
                          "value": "status",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "execution.ExecutionStatus.COMPLETED",
                      "children": [
                        {
                          "value": "execution.ExecutionStatus",
                          "children": [
                            {
                              "value": "execution",
                              "children": []
                            },
                            {
                              "value": "ExecutionStatus",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "COMPLETED",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "assert exec.graph_exec_id == graph_exec_id",
              "children": [
                {
                  "value": "exec.graph_exec_id == graph_exec_id",
                  "children": [
                    {
                      "value": "exec.graph_exec_id",
                      "children": [
                        {
                          "value": "exec",
                          "children": []
                        },
                        {
                          "value": "graph_exec_id",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "graph_exec_id",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "assert exec.output_data == {\"output\": [\"Hello, World!!!\"]}",
              "children": [
                {
                  "value": "exec.output_data == {\"output\": [\"Hello, World!!!\"]}",
                  "children": [
                    {
                      "value": "exec.output_data",
                      "children": [
                        {
                          "value": "exec",
                          "children": []
                        },
                        {
                          "value": "output_data",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "{\"output\": [\"Hello, World!!!\"]}",
                      "children": [
                        {
                          "value": "\"output\": [\"Hello, World!!!\"]",
                          "children": [
                            {
                              "value": "\"output\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "output",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "[\"Hello, World!!!\"]",
                              "children": [
                                {
                                  "value": "\"Hello, World!!!\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "Hello, World!!!",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "assert exec.input_data == {\n        \"format\": \"{a}, {b}{c}\",\n        \"values\": {\"a\": \"Hello\", \"b\": \"World\", \"c\": \"!!!\"},\n        \"values_#_a\": \"Hello\",\n        \"values_#_b\": \"World\",\n        \"values_#_c\": \"!!!\",\n    }",
              "children": [
                {
                  "value": "exec.input_data == {\n        \"format\": \"{a}, {b}{c}\",\n        \"values\": {\"a\": \"Hello\", \"b\": \"World\", \"c\": \"!!!\"},\n        \"values_#_a\": \"Hello\",\n        \"values_#_b\": \"World\",\n        \"values_#_c\": \"!!!\",\n    }",
                  "children": [
                    {
                      "value": "exec.input_data",
                      "children": [
                        {
                          "value": "exec",
                          "children": []
                        },
                        {
                          "value": "input_data",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "{\n        \"format\": \"{a}, {b}{c}\",\n        \"values\": {\"a\": \"Hello\", \"b\": \"World\", \"c\": \"!!!\"},\n        \"values_#_a\": \"Hello\",\n        \"values_#_b\": \"World\",\n        \"values_#_c\": \"!!!\",\n    }",
                      "children": [
                        {
                          "value": "\"format\": \"{a}, {b}{c}\"",
                          "children": [
                            {
                              "value": "\"format\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "format",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "\"{a}, {b}{c}\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "{a}, {b}{c}",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "\"values\": {\"a\": \"Hello\", \"b\": \"World\", \"c\": \"!!!\"}",
                          "children": [
                            {
                              "value": "\"values\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "values",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "{\"a\": \"Hello\", \"b\": \"World\", \"c\": \"!!!\"}",
                              "children": [
                                {
                                  "value": "\"a\": \"Hello\"",
                                  "children": [
                                    {
                                      "value": "\"a\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "a",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"Hello\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "Hello",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "\"b\": \"World\"",
                                  "children": [
                                    {
                                      "value": "\"b\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "b",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"World\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "World",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "\"c\": \"!!!\"",
                                  "children": [
                                    {
                                      "value": "\"c\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "c",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"!!!\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "!!!",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "\"values_#_a\": \"Hello\"",
                          "children": [
                            {
                              "value": "\"values_#_a\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "values_#_a",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "\"Hello\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "Hello",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "\"values_#_b\": \"World\"",
                          "children": [
                            {
                              "value": "\"values_#_b\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "values_#_b",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "\"World\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "World",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "\"values_#_c\": \"!!!\"",
                          "children": [
                            {
                              "value": "\"values_#_c\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "values_#_c",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "\"!!!\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "!!!",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "assert exec.node_id == test_graph.nodes[2].id",
              "children": [
                {
                  "value": "exec.node_id == test_graph.nodes[2].id",
                  "children": [
                    {
                      "value": "exec.node_id",
                      "children": [
                        {
                          "value": "exec",
                          "children": []
                        },
                        {
                          "value": "node_id",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "test_graph.nodes[2].id",
                      "children": [
                        {
                          "value": "test_graph.nodes[2]",
                          "children": [
                            {
                              "value": "test_graph.nodes",
                              "children": [
                                {
                                  "value": "test_graph",
                                  "children": []
                                },
                                {
                                  "value": "nodes",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "2",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "id",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Executing PrintToConsoleBlock",
              "children": []
            },
            {
              "value": "exec = executions[3]",
              "children": [
                {
                  "value": "exec = executions[3]",
                  "children": [
                    {
                      "value": "exec",
                      "children": []
                    },
                    {
                      "value": "executions[3]",
                      "children": [
                        {
                          "value": "executions",
                          "children": []
                        },
                        {
                          "value": "3",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "logger.info(f\"Checking PrintToConsoleBlock execution: {exec}\")",
              "children": [
                {
                  "value": "logger.info(f\"Checking PrintToConsoleBlock execution: {exec}\")",
                  "children": [
                    {
                      "value": "logger.info",
                      "children": [
                        {
                          "value": "logger",
                          "children": []
                        },
                        {
                          "value": "info",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "(f\"Checking PrintToConsoleBlock execution: {exec}\")",
                      "children": [
                        {
                          "value": "f\"Checking PrintToConsoleBlock execution: {exec}\"",
                          "children": [
                            {
                              "value": "f\"",
                              "children": []
                            },
                            {
                              "value": "Checking PrintToConsoleBlock execution:",
                              "children": []
                            },
                            {
                              "value": "{exec}",
                              "children": [
                                {
                                  "value": "exec",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "assert exec.status == execution.ExecutionStatus.COMPLETED",
              "children": [
                {
                  "value": "exec.status == execution.ExecutionStatus.COMPLETED",
                  "children": [
                    {
                      "value": "exec.status",
                      "children": [
                        {
                          "value": "exec",
                          "children": []
                        },
                        {
                          "value": "status",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "execution.ExecutionStatus.COMPLETED",
                      "children": [
                        {
                          "value": "execution.ExecutionStatus",
                          "children": [
                            {
                              "value": "execution",
                              "children": []
                            },
                            {
                              "value": "ExecutionStatus",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "COMPLETED",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "assert exec.graph_exec_id == graph_exec_id",
              "children": [
                {
                  "value": "exec.graph_exec_id == graph_exec_id",
                  "children": [
                    {
                      "value": "exec.graph_exec_id",
                      "children": [
                        {
                          "value": "exec",
                          "children": []
                        },
                        {
                          "value": "graph_exec_id",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "graph_exec_id",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "assert exec.output_data == {\"status\": [\"printed\"]}",
              "children": [
                {
                  "value": "exec.output_data == {\"status\": [\"printed\"]}",
                  "children": [
                    {
                      "value": "exec.output_data",
                      "children": [
                        {
                          "value": "exec",
                          "children": []
                        },
                        {
                          "value": "output_data",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "{\"status\": [\"printed\"]}",
                      "children": [
                        {
                          "value": "\"status\": [\"printed\"]",
                          "children": [
                            {
                              "value": "\"status\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "status",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "[\"printed\"]",
                              "children": [
                                {
                                  "value": "\"printed\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "printed",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "assert exec.input_data == {\"text\": \"Hello, World!!!\"}",
              "children": [
                {
                  "value": "exec.input_data == {\"text\": \"Hello, World!!!\"}",
                  "children": [
                    {
                      "value": "exec.input_data",
                      "children": [
                        {
                          "value": "exec",
                          "children": []
                        },
                        {
                          "value": "input_data",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "{\"text\": \"Hello, World!!!\"}",
                      "children": [
                        {
                          "value": "\"text\": \"Hello, World!!!\"",
                          "children": [
                            {
                              "value": "\"text\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "text",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "\"Hello, World!!!\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "Hello, World!!!",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "assert exec.node_id == test_graph.nodes[3].id",
              "children": [
                {
                  "value": "exec.node_id == test_graph.nodes[3].id",
                  "children": [
                    {
                      "value": "exec.node_id",
                      "children": [
                        {
                          "value": "exec",
                          "children": []
                        },
                        {
                          "value": "node_id",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "test_graph.nodes[3].id",
                      "children": [
                        {
                          "value": "test_graph.nodes[3]",
                          "children": [
                            {
                              "value": "test_graph.nodes",
                              "children": [
                                {
                                  "value": "test_graph",
                                  "children": []
                                },
                                {
                                  "value": "nodes",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "3",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "id",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "@pytest.mark.asyncio(scope=\"session\")\nasync def test_agent_execution(server: SpinTestServer):\n    logger.info(\"Starting test_agent_execution\")\n    test_user = await create_test_user()\n    test_graph = await create_graph(server, create_test_graph(), test_user)\n    data = {\"input_1\": \"Hello\", \"input_2\": \"World\"}\n    graph_exec_id = await execute_graph(\n        server.agent_server,\n        test_graph,\n        test_user,\n        data,\n        4,\n    )\n    await assert_sample_graph_executions(\n        server.agent_server, test_graph, test_user, graph_exec_id\n    )\n    logger.info(\"Completed test_agent_execution\")",
      "children": [
        {
          "value": "@pytest.mark.asyncio(scope=\"session\")",
          "children": [
            {
              "value": "pytest.mark.asyncio(scope=\"session\")",
              "children": [
                {
                  "value": "pytest.mark.asyncio",
                  "children": [
                    {
                      "value": "pytest.mark",
                      "children": [
                        {
                          "value": "pytest",
                          "children": []
                        },
                        {
                          "value": "mark",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "asyncio",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "(scope=\"session\")",
                  "children": [
                    {
                      "value": "scope=\"session\"",
                      "children": [
                        {
                          "value": "scope",
                          "children": []
                        },
                        {
                          "value": "\"session\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "session",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "async def test_agent_execution(server: SpinTestServer):\n    logger.info(\"Starting test_agent_execution\")\n    test_user = await create_test_user()\n    test_graph = await create_graph(server, create_test_graph(), test_user)\n    data = {\"input_1\": \"Hello\", \"input_2\": \"World\"}\n    graph_exec_id = await execute_graph(\n        server.agent_server,\n        test_graph,\n        test_user,\n        data,\n        4,\n    )\n    await assert_sample_graph_executions(\n        server.agent_server, test_graph, test_user, graph_exec_id\n    )\n    logger.info(\"Completed test_agent_execution\")",
          "children": [
            {
              "value": "test_agent_execution",
              "children": []
            },
            {
              "value": "(server: SpinTestServer)",
              "children": [
                {
                  "value": "server: SpinTestServer",
                  "children": [
                    {
                      "value": "server",
                      "children": []
                    },
                    {
                      "value": "SpinTestServer",
                      "children": [
                        {
                          "value": "SpinTestServer",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "logger.info(\"Starting test_agent_execution\")\n    test_user = await create_test_user()\n    test_graph = await create_graph(server, create_test_graph(), test_user)\n    data = {\"input_1\": \"Hello\", \"input_2\": \"World\"}\n    graph_exec_id = await execute_graph(\n        server.agent_server,\n        test_graph,\n        test_user,\n        data,\n        4,\n    )\n    await assert_sample_graph_executions(\n        server.agent_server, test_graph, test_user, graph_exec_id\n    )\n    logger.info(\"Completed test_agent_execution\")",
              "children": [
                {
                  "value": "logger.info(\"Starting test_agent_execution\")",
                  "children": [
                    {
                      "value": "logger.info(\"Starting test_agent_execution\")",
                      "children": [
                        {
                          "value": "logger.info",
                          "children": [
                            {
                              "value": "logger",
                              "children": []
                            },
                            {
                              "value": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(\"Starting test_agent_execution\")",
                          "children": [
                            {
                              "value": "\"Starting test_agent_execution\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "Starting test_agent_execution",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "test_user = await create_test_user()",
                  "children": [
                    {
                      "value": "test_user = await create_test_user()",
                      "children": [
                        {
                          "value": "test_user",
                          "children": []
                        },
                        {
                          "value": "await create_test_user()",
                          "children": [
                            {
                              "value": "create_test_user()",
                              "children": [
                                {
                                  "value": "create_test_user",
                                  "children": []
                                },
                                {
                                  "value": "()",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "test_graph = await create_graph(server, create_test_graph(), test_user)",
                  "children": [
                    {
                      "value": "test_graph = await create_graph(server, create_test_graph(), test_user)",
                      "children": [
                        {
                          "value": "test_graph",
                          "children": []
                        },
                        {
                          "value": "await create_graph(server, create_test_graph(), test_user)",
                          "children": [
                            {
                              "value": "create_graph(server, create_test_graph(), test_user)",
                              "children": [
                                {
                                  "value": "create_graph",
                                  "children": []
                                },
                                {
                                  "value": "(server, create_test_graph(), test_user)",
                                  "children": [
                                    {
                                      "value": "server",
                                      "children": []
                                    },
                                    {
                                      "value": "create_test_graph()",
                                      "children": [
                                        {
                                          "value": "create_test_graph",
                                          "children": []
                                        },
                                        {
                                          "value": "()",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "test_user",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "data = {\"input_1\": \"Hello\", \"input_2\": \"World\"}",
                  "children": [
                    {
                      "value": "data = {\"input_1\": \"Hello\", \"input_2\": \"World\"}",
                      "children": [
                        {
                          "value": "data",
                          "children": []
                        },
                        {
                          "value": "{\"input_1\": \"Hello\", \"input_2\": \"World\"}",
                          "children": [
                            {
                              "value": "\"input_1\": \"Hello\"",
                              "children": [
                                {
                                  "value": "\"input_1\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "input_1",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "\"Hello\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "Hello",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "\"input_2\": \"World\"",
                              "children": [
                                {
                                  "value": "\"input_2\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "input_2",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "\"World\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "World",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "graph_exec_id = await execute_graph(\n        server.agent_server,\n        test_graph,\n        test_user,\n        data,\n        4,\n    )",
                  "children": [
                    {
                      "value": "graph_exec_id = await execute_graph(\n        server.agent_server,\n        test_graph,\n        test_user,\n        data,\n        4,\n    )",
                      "children": [
                        {
                          "value": "graph_exec_id",
                          "children": []
                        },
                        {
                          "value": "await execute_graph(\n        server.agent_server,\n        test_graph,\n        test_user,\n        data,\n        4,\n    )",
                          "children": [
                            {
                              "value": "execute_graph(\n        server.agent_server,\n        test_graph,\n        test_user,\n        data,\n        4,\n    )",
                              "children": [
                                {
                                  "value": "execute_graph",
                                  "children": []
                                },
                                {
                                  "value": "(\n        server.agent_server,\n        test_graph,\n        test_user,\n        data,\n        4,\n    )",
                                  "children": [
                                    {
                                      "value": "server.agent_server",
                                      "children": [
                                        {
                                          "value": "server",
                                          "children": []
                                        },
                                        {
                                          "value": "agent_server",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "test_graph",
                                      "children": []
                                    },
                                    {
                                      "value": "test_user",
                                      "children": []
                                    },
                                    {
                                      "value": "data",
                                      "children": []
                                    },
                                    {
                                      "value": "4",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "await assert_sample_graph_executions(\n        server.agent_server, test_graph, test_user, graph_exec_id\n    )",
                  "children": [
                    {
                      "value": "await assert_sample_graph_executions(\n        server.agent_server, test_graph, test_user, graph_exec_id\n    )",
                      "children": [
                        {
                          "value": "assert_sample_graph_executions(\n        server.agent_server, test_graph, test_user, graph_exec_id\n    )",
                          "children": [
                            {
                              "value": "assert_sample_graph_executions",
                              "children": []
                            },
                            {
                              "value": "(\n        server.agent_server, test_graph, test_user, graph_exec_id\n    )",
                              "children": [
                                {
                                  "value": "server.agent_server",
                                  "children": [
                                    {
                                      "value": "server",
                                      "children": []
                                    },
                                    {
                                      "value": "agent_server",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "test_graph",
                                  "children": []
                                },
                                {
                                  "value": "test_user",
                                  "children": []
                                },
                                {
                                  "value": "graph_exec_id",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "logger.info(\"Completed test_agent_execution\")",
                  "children": [
                    {
                      "value": "logger.info(\"Completed test_agent_execution\")",
                      "children": [
                        {
                          "value": "logger.info",
                          "children": [
                            {
                              "value": "logger",
                              "children": []
                            },
                            {
                              "value": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(\"Completed test_agent_execution\")",
                          "children": [
                            {
                              "value": "\"Completed test_agent_execution\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "Completed test_agent_execution",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "@pytest.mark.asyncio(scope=\"session\")\nasync def test_input_pin_always_waited(server: SpinTestServer):\n    \"\"\"\n    This test is asserting that the input pin should always be waited for the execution,\n    even when default value on that pin is defined, the value has to be ignored.\n\n    Test scenario:\n    StoreValueBlock1\n                \\\\ input\n                     >------- FindInDictionaryBlock | input_default: key: \"\", input: {}\n                // key\n    StoreValueBlock2\n    \"\"\"\n    logger.info(\"Starting test_input_pin_always_waited\")\n    nodes = [\n        graph.Node(\n            block_id=StoreValueBlock().id,\n            input_default={\"input\": {\"key1\": \"value1\", \"key2\": \"value2\"}},\n        ),\n        graph.Node(\n            block_id=StoreValueBlock().id,\n            input_default={\"input\": \"key2\"},\n        ),\n        graph.Node(\n            block_id=FindInDictionaryBlock().id,\n            input_default={\"key\": \"\", \"input\": {}},\n        ),\n    ]\n    links = [\n        graph.Link(\n            source_id=nodes[0].id,\n            sink_id=nodes[2].id,\n            source_name=\"output\",\n            sink_name=\"input\",\n        ),\n        graph.Link(\n            source_id=nodes[1].id,\n            sink_id=nodes[2].id,\n            source_name=\"output\",\n            sink_name=\"key\",\n        ),\n    ]\n    test_graph = graph.Graph(\n        name=\"TestGraph\",\n        description=\"Test graph\",\n        nodes=nodes,\n        links=links,\n    )\n    test_user = await create_test_user()\n    test_graph = await create_graph(server, test_graph, test_user)\n    graph_exec_id = await execute_graph(\n        server.agent_server, test_graph, test_user, {}, 3\n    )\n\n    logger.info(\"Checking execution results\")\n    executions = await server.agent_server.test_get_graph_run_node_execution_results(\n        test_graph.id, graph_exec_id, test_user.id\n    )\n    assert len(executions) == 3\n    # FindInDictionaryBlock should wait for the input pin to be provided,\n    # Hence executing extraction of \"key\" from {\"key1\": \"value1\", \"key2\": \"value2\"}\n    assert executions[2].status == execution.ExecutionStatus.COMPLETED\n    assert executions[2].output_data == {\"output\": [\"value2\"]}\n    logger.info(\"Completed test_input_pin_always_waited\")",
      "children": [
        {
          "value": "@pytest.mark.asyncio(scope=\"session\")",
          "children": [
            {
              "value": "pytest.mark.asyncio(scope=\"session\")",
              "children": [
                {
                  "value": "pytest.mark.asyncio",
                  "children": [
                    {
                      "value": "pytest.mark",
                      "children": [
                        {
                          "value": "pytest",
                          "children": []
                        },
                        {
                          "value": "mark",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "asyncio",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "(scope=\"session\")",
                  "children": [
                    {
                      "value": "scope=\"session\"",
                      "children": [
                        {
                          "value": "scope",
                          "children": []
                        },
                        {
                          "value": "\"session\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "session",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "async def test_input_pin_always_waited(server: SpinTestServer):\n    \"\"\"\n    This test is asserting that the input pin should always be waited for the execution,\n    even when default value on that pin is defined, the value has to be ignored.\n\n    Test scenario:\n    StoreValueBlock1\n                \\\\ input\n                     >------- FindInDictionaryBlock | input_default: key: \"\", input: {}\n                // key\n    StoreValueBlock2\n    \"\"\"\n    logger.info(\"Starting test_input_pin_always_waited\")\n    nodes = [\n        graph.Node(\n            block_id=StoreValueBlock().id,\n            input_default={\"input\": {\"key1\": \"value1\", \"key2\": \"value2\"}},\n        ),\n        graph.Node(\n            block_id=StoreValueBlock().id,\n            input_default={\"input\": \"key2\"},\n        ),\n        graph.Node(\n            block_id=FindInDictionaryBlock().id,\n            input_default={\"key\": \"\", \"input\": {}},\n        ),\n    ]\n    links = [\n        graph.Link(\n            source_id=nodes[0].id,\n            sink_id=nodes[2].id,\n            source_name=\"output\",\n            sink_name=\"input\",\n        ),\n        graph.Link(\n            source_id=nodes[1].id,\n            sink_id=nodes[2].id,\n            source_name=\"output\",\n            sink_name=\"key\",\n        ),\n    ]\n    test_graph = graph.Graph(\n        name=\"TestGraph\",\n        description=\"Test graph\",\n        nodes=nodes,\n        links=links,\n    )\n    test_user = await create_test_user()\n    test_graph = await create_graph(server, test_graph, test_user)\n    graph_exec_id = await execute_graph(\n        server.agent_server, test_graph, test_user, {}, 3\n    )\n\n    logger.info(\"Checking execution results\")\n    executions = await server.agent_server.test_get_graph_run_node_execution_results(\n        test_graph.id, graph_exec_id, test_user.id\n    )\n    assert len(executions) == 3\n    # FindInDictionaryBlock should wait for the input pin to be provided,\n    # Hence executing extraction of \"key\" from {\"key1\": \"value1\", \"key2\": \"value2\"}\n    assert executions[2].status == execution.ExecutionStatus.COMPLETED\n    assert executions[2].output_data == {\"output\": [\"value2\"]}\n    logger.info(\"Completed test_input_pin_always_waited\")",
          "children": [
            {
              "value": "test_input_pin_always_waited",
              "children": []
            },
            {
              "value": "(server: SpinTestServer)",
              "children": [
                {
                  "value": "server: SpinTestServer",
                  "children": [
                    {
                      "value": "server",
                      "children": []
                    },
                    {
                      "value": "SpinTestServer",
                      "children": [
                        {
                          "value": "SpinTestServer",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "\"\"\"\n    This test is asserting that the input pin should always be waited for the execution,\n    even when default value on that pin is defined, the value has to be ignored.\n\n    Test scenario:\n    StoreValueBlock1\n                \\\\ input\n                     >------- FindInDictionaryBlock | input_default: key: \"\", input: {}\n                // key\n    StoreValueBlock2\n    \"\"\"\n    logger.info(\"Starting test_input_pin_always_waited\")\n    nodes = [\n        graph.Node(\n            block_id=StoreValueBlock().id,\n            input_default={\"input\": {\"key1\": \"value1\", \"key2\": \"value2\"}},\n        ),\n        graph.Node(\n            block_id=StoreValueBlock().id,\n            input_default={\"input\": \"key2\"},\n        ),\n        graph.Node(\n            block_id=FindInDictionaryBlock().id,\n            input_default={\"key\": \"\", \"input\": {}},\n        ),\n    ]\n    links = [\n        graph.Link(\n            source_id=nodes[0].id,\n            sink_id=nodes[2].id,\n            source_name=\"output\",\n            sink_name=\"input\",\n        ),\n        graph.Link(\n            source_id=nodes[1].id,\n            sink_id=nodes[2].id,\n            source_name=\"output\",\n            sink_name=\"key\",\n        ),\n    ]\n    test_graph = graph.Graph(\n        name=\"TestGraph\",\n        description=\"Test graph\",\n        nodes=nodes,\n        links=links,\n    )\n    test_user = await create_test_user()\n    test_graph = await create_graph(server, test_graph, test_user)\n    graph_exec_id = await execute_graph(\n        server.agent_server, test_graph, test_user, {}, 3\n    )\n\n    logger.info(\"Checking execution results\")\n    executions = await server.agent_server.test_get_graph_run_node_execution_results(\n        test_graph.id, graph_exec_id, test_user.id\n    )\n    assert len(executions) == 3\n    # FindInDictionaryBlock should wait for the input pin to be provided,\n    # Hence executing extraction of \"key\" from {\"key1\": \"value1\", \"key2\": \"value2\"}\n    assert executions[2].status == execution.ExecutionStatus.COMPLETED\n    assert executions[2].output_data == {\"output\": [\"value2\"]}\n    logger.info(\"Completed test_input_pin_always_waited\")",
              "children": [
                {
                  "value": "\"\"\"\n    This test is asserting that the input pin should always be waited for the execution,\n    even when default value on that pin is defined, the value has to be ignored.\n\n    Test scenario:\n    StoreValueBlock1\n                \\\\ input\n                     >------- FindInDictionaryBlock | input_default: key: \"\", input: {}\n                // key\n    StoreValueBlock2\n    \"\"\"",
                  "children": [
                    {
                      "value": "\"\"\"\n    This test is asserting that the input pin should always be waited for the execution,\n    even when default value on that pin is defined, the value has to be ignored.\n\n    Test scenario:\n    StoreValueBlock1\n                \\\\ input\n                     >------- FindInDictionaryBlock | input_default: key: \"\", input: {}\n                // key\n    StoreValueBlock2\n    \"\"\"",
                      "children": [
                        {
                          "value": "\"\"\"",
                          "children": []
                        },
                        {
                          "value": "This test is asserting that the input pin should always be waited for the execution,\n    even when default value on that pin is defined, the value has to be ignored.\n\n    Test scenario:\n    StoreValueBlock1\n                \\\\ input\n                     >------- FindInDictionaryBlock | input_default: key: \"\", input: {}\n                // key\n    StoreValueBlock2",
                          "children": [
                            {
                              "value": "\\\\",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "\"\"\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "logger.info(\"Starting test_input_pin_always_waited\")",
                  "children": [
                    {
                      "value": "logger.info(\"Starting test_input_pin_always_waited\")",
                      "children": [
                        {
                          "value": "logger.info",
                          "children": [
                            {
                              "value": "logger",
                              "children": []
                            },
                            {
                              "value": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(\"Starting test_input_pin_always_waited\")",
                          "children": [
                            {
                              "value": "\"Starting test_input_pin_always_waited\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "Starting test_input_pin_always_waited",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "nodes = [\n        graph.Node(\n            block_id=StoreValueBlock().id,\n            input_default={\"input\": {\"key1\": \"value1\", \"key2\": \"value2\"}},\n        ),\n        graph.Node(\n            block_id=StoreValueBlock().id,\n            input_default={\"input\": \"key2\"},\n        ),\n        graph.Node(\n            block_id=FindInDictionaryBlock().id,\n            input_default={\"key\": \"\", \"input\": {}},\n        ),\n    ]",
                  "children": [
                    {
                      "value": "nodes = [\n        graph.Node(\n            block_id=StoreValueBlock().id,\n            input_default={\"input\": {\"key1\": \"value1\", \"key2\": \"value2\"}},\n        ),\n        graph.Node(\n            block_id=StoreValueBlock().id,\n            input_default={\"input\": \"key2\"},\n        ),\n        graph.Node(\n            block_id=FindInDictionaryBlock().id,\n            input_default={\"key\": \"\", \"input\": {}},\n        ),\n    ]",
                      "children": [
                        {
                          "value": "nodes",
                          "children": []
                        },
                        {
                          "value": "[\n        graph.Node(\n            block_id=StoreValueBlock().id,\n            input_default={\"input\": {\"key1\": \"value1\", \"key2\": \"value2\"}},\n        ),\n        graph.Node(\n            block_id=StoreValueBlock().id,\n            input_default={\"input\": \"key2\"},\n        ),\n        graph.Node(\n            block_id=FindInDictionaryBlock().id,\n            input_default={\"key\": \"\", \"input\": {}},\n        ),\n    ]",
                          "children": [
                            {
                              "value": "graph.Node(\n            block_id=StoreValueBlock().id,\n            input_default={\"input\": {\"key1\": \"value1\", \"key2\": \"value2\"}},\n        )",
                              "children": [
                                {
                                  "value": "graph.Node",
                                  "children": [
                                    {
                                      "value": "graph",
                                      "children": []
                                    },
                                    {
                                      "value": "Node",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(\n            block_id=StoreValueBlock().id,\n            input_default={\"input\": {\"key1\": \"value1\", \"key2\": \"value2\"}},\n        )",
                                  "children": [
                                    {
                                      "value": "block_id=StoreValueBlock().id",
                                      "children": [
                                        {
                                          "value": "block_id",
                                          "children": []
                                        },
                                        {
                                          "value": "StoreValueBlock().id",
                                          "children": [
                                            {
                                              "value": "StoreValueBlock()",
                                              "children": [
                                                {
                                                  "value": "StoreValueBlock",
                                                  "children": []
                                                },
                                                {
                                                  "value": "()",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "id",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "input_default={\"input\": {\"key1\": \"value1\", \"key2\": \"value2\"}}",
                                      "children": [
                                        {
                                          "value": "input_default",
                                          "children": []
                                        },
                                        {
                                          "value": "{\"input\": {\"key1\": \"value1\", \"key2\": \"value2\"}}",
                                          "children": [
                                            {
                                              "value": "\"input\": {\"key1\": \"value1\", \"key2\": \"value2\"}",
                                              "children": [
                                                {
                                                  "value": "\"input\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "input",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "{\"key1\": \"value1\", \"key2\": \"value2\"}",
                                                  "children": [
                                                    {
                                                      "value": "\"key1\": \"value1\"",
                                                      "children": [
                                                        {
                                                          "value": "\"key1\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "key1",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "\"value1\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "value1",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"key2\": \"value2\"",
                                                      "children": [
                                                        {
                                                          "value": "\"key2\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "key2",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "\"value2\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "value2",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "graph.Node(\n            block_id=StoreValueBlock().id,\n            input_default={\"input\": \"key2\"},\n        )",
                              "children": [
                                {
                                  "value": "graph.Node",
                                  "children": [
                                    {
                                      "value": "graph",
                                      "children": []
                                    },
                                    {
                                      "value": "Node",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(\n            block_id=StoreValueBlock().id,\n            input_default={\"input\": \"key2\"},\n        )",
                                  "children": [
                                    {
                                      "value": "block_id=StoreValueBlock().id",
                                      "children": [
                                        {
                                          "value": "block_id",
                                          "children": []
                                        },
                                        {
                                          "value": "StoreValueBlock().id",
                                          "children": [
                                            {
                                              "value": "StoreValueBlock()",
                                              "children": [
                                                {
                                                  "value": "StoreValueBlock",
                                                  "children": []
                                                },
                                                {
                                                  "value": "()",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "id",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "input_default={\"input\": \"key2\"}",
                                      "children": [
                                        {
                                          "value": "input_default",
                                          "children": []
                                        },
                                        {
                                          "value": "{\"input\": \"key2\"}",
                                          "children": [
                                            {
                                              "value": "\"input\": \"key2\"",
                                              "children": [
                                                {
                                                  "value": "\"input\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "input",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"key2\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "key2",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "graph.Node(\n            block_id=FindInDictionaryBlock().id,\n            input_default={\"key\": \"\", \"input\": {}},\n        )",
                              "children": [
                                {
                                  "value": "graph.Node",
                                  "children": [
                                    {
                                      "value": "graph",
                                      "children": []
                                    },
                                    {
                                      "value": "Node",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(\n            block_id=FindInDictionaryBlock().id,\n            input_default={\"key\": \"\", \"input\": {}},\n        )",
                                  "children": [
                                    {
                                      "value": "block_id=FindInDictionaryBlock().id",
                                      "children": [
                                        {
                                          "value": "block_id",
                                          "children": []
                                        },
                                        {
                                          "value": "FindInDictionaryBlock().id",
                                          "children": [
                                            {
                                              "value": "FindInDictionaryBlock()",
                                              "children": [
                                                {
                                                  "value": "FindInDictionaryBlock",
                                                  "children": []
                                                },
                                                {
                                                  "value": "()",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "id",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "input_default={\"key\": \"\", \"input\": {}}",
                                      "children": [
                                        {
                                          "value": "input_default",
                                          "children": []
                                        },
                                        {
                                          "value": "{\"key\": \"\", \"input\": {}}",
                                          "children": [
                                            {
                                              "value": "\"key\": \"\"",
                                              "children": [
                                                {
                                                  "value": "\"key\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "key",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"input\": {}",
                                              "children": [
                                                {
                                                  "value": "\"input\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "input",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "{}",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "links = [\n        graph.Link(\n            source_id=nodes[0].id,\n            sink_id=nodes[2].id,\n            source_name=\"output\",\n            sink_name=\"input\",\n        ),\n        graph.Link(\n            source_id=nodes[1].id,\n            sink_id=nodes[2].id,\n            source_name=\"output\",\n            sink_name=\"key\",\n        ),\n    ]",
                  "children": [
                    {
                      "value": "links = [\n        graph.Link(\n            source_id=nodes[0].id,\n            sink_id=nodes[2].id,\n            source_name=\"output\",\n            sink_name=\"input\",\n        ),\n        graph.Link(\n            source_id=nodes[1].id,\n            sink_id=nodes[2].id,\n            source_name=\"output\",\n            sink_name=\"key\",\n        ),\n    ]",
                      "children": [
                        {
                          "value": "links",
                          "children": []
                        },
                        {
                          "value": "[\n        graph.Link(\n            source_id=nodes[0].id,\n            sink_id=nodes[2].id,\n            source_name=\"output\",\n            sink_name=\"input\",\n        ),\n        graph.Link(\n            source_id=nodes[1].id,\n            sink_id=nodes[2].id,\n            source_name=\"output\",\n            sink_name=\"key\",\n        ),\n    ]",
                          "children": [
                            {
                              "value": "graph.Link(\n            source_id=nodes[0].id,\n            sink_id=nodes[2].id,\n            source_name=\"output\",\n            sink_name=\"input\",\n        )",
                              "children": [
                                {
                                  "value": "graph.Link",
                                  "children": [
                                    {
                                      "value": "graph",
                                      "children": []
                                    },
                                    {
                                      "value": "Link",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(\n            source_id=nodes[0].id,\n            sink_id=nodes[2].id,\n            source_name=\"output\",\n            sink_name=\"input\",\n        )",
                                  "children": [
                                    {
                                      "value": "source_id=nodes[0].id",
                                      "children": [
                                        {
                                          "value": "source_id",
                                          "children": []
                                        },
                                        {
                                          "value": "nodes[0].id",
                                          "children": [
                                            {
                                              "value": "nodes[0]",
                                              "children": [
                                                {
                                                  "value": "nodes",
                                                  "children": []
                                                },
                                                {
                                                  "value": "0",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "id",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "sink_id=nodes[2].id",
                                      "children": [
                                        {
                                          "value": "sink_id",
                                          "children": []
                                        },
                                        {
                                          "value": "nodes[2].id",
                                          "children": [
                                            {
                                              "value": "nodes[2]",
                                              "children": [
                                                {
                                                  "value": "nodes",
                                                  "children": []
                                                },
                                                {
                                                  "value": "2",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "id",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "source_name=\"output\"",
                                      "children": [
                                        {
                                          "value": "source_name",
                                          "children": []
                                        },
                                        {
                                          "value": "\"output\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "output",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "sink_name=\"input\"",
                                      "children": [
                                        {
                                          "value": "sink_name",
                                          "children": []
                                        },
                                        {
                                          "value": "\"input\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "input",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "graph.Link(\n            source_id=nodes[1].id,\n            sink_id=nodes[2].id,\n            source_name=\"output\",\n            sink_name=\"key\",\n        )",
                              "children": [
                                {
                                  "value": "graph.Link",
                                  "children": [
                                    {
                                      "value": "graph",
                                      "children": []
                                    },
                                    {
                                      "value": "Link",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(\n            source_id=nodes[1].id,\n            sink_id=nodes[2].id,\n            source_name=\"output\",\n            sink_name=\"key\",\n        )",
                                  "children": [
                                    {
                                      "value": "source_id=nodes[1].id",
                                      "children": [
                                        {
                                          "value": "source_id",
                                          "children": []
                                        },
                                        {
                                          "value": "nodes[1].id",
                                          "children": [
                                            {
                                              "value": "nodes[1]",
                                              "children": [
                                                {
                                                  "value": "nodes",
                                                  "children": []
                                                },
                                                {
                                                  "value": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "id",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "sink_id=nodes[2].id",
                                      "children": [
                                        {
                                          "value": "sink_id",
                                          "children": []
                                        },
                                        {
                                          "value": "nodes[2].id",
                                          "children": [
                                            {
                                              "value": "nodes[2]",
                                              "children": [
                                                {
                                                  "value": "nodes",
                                                  "children": []
                                                },
                                                {
                                                  "value": "2",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "id",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "source_name=\"output\"",
                                      "children": [
                                        {
                                          "value": "source_name",
                                          "children": []
                                        },
                                        {
                                          "value": "\"output\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "output",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "sink_name=\"key\"",
                                      "children": [
                                        {
                                          "value": "sink_name",
                                          "children": []
                                        },
                                        {
                                          "value": "\"key\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "key",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "test_graph = graph.Graph(\n        name=\"TestGraph\",\n        description=\"Test graph\",\n        nodes=nodes,\n        links=links,\n    )",
                  "children": [
                    {
                      "value": "test_graph = graph.Graph(\n        name=\"TestGraph\",\n        description=\"Test graph\",\n        nodes=nodes,\n        links=links,\n    )",
                      "children": [
                        {
                          "value": "test_graph",
                          "children": []
                        },
                        {
                          "value": "graph.Graph(\n        name=\"TestGraph\",\n        description=\"Test graph\",\n        nodes=nodes,\n        links=links,\n    )",
                          "children": [
                            {
                              "value": "graph.Graph",
                              "children": [
                                {
                                  "value": "graph",
                                  "children": []
                                },
                                {
                                  "value": "Graph",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\n        name=\"TestGraph\",\n        description=\"Test graph\",\n        nodes=nodes,\n        links=links,\n    )",
                              "children": [
                                {
                                  "value": "name=\"TestGraph\"",
                                  "children": [
                                    {
                                      "value": "name",
                                      "children": []
                                    },
                                    {
                                      "value": "\"TestGraph\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "TestGraph",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "description=\"Test graph\"",
                                  "children": [
                                    {
                                      "value": "description",
                                      "children": []
                                    },
                                    {
                                      "value": "\"Test graph\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "Test graph",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "nodes=nodes",
                                  "children": [
                                    {
                                      "value": "nodes",
                                      "children": []
                                    },
                                    {
                                      "value": "nodes",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "links=links",
                                  "children": [
                                    {
                                      "value": "links",
                                      "children": []
                                    },
                                    {
                                      "value": "links",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "test_user = await create_test_user()",
                  "children": [
                    {
                      "value": "test_user = await create_test_user()",
                      "children": [
                        {
                          "value": "test_user",
                          "children": []
                        },
                        {
                          "value": "await create_test_user()",
                          "children": [
                            {
                              "value": "create_test_user()",
                              "children": [
                                {
                                  "value": "create_test_user",
                                  "children": []
                                },
                                {
                                  "value": "()",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "test_graph = await create_graph(server, test_graph, test_user)",
                  "children": [
                    {
                      "value": "test_graph = await create_graph(server, test_graph, test_user)",
                      "children": [
                        {
                          "value": "test_graph",
                          "children": []
                        },
                        {
                          "value": "await create_graph(server, test_graph, test_user)",
                          "children": [
                            {
                              "value": "create_graph(server, test_graph, test_user)",
                              "children": [
                                {
                                  "value": "create_graph",
                                  "children": []
                                },
                                {
                                  "value": "(server, test_graph, test_user)",
                                  "children": [
                                    {
                                      "value": "server",
                                      "children": []
                                    },
                                    {
                                      "value": "test_graph",
                                      "children": []
                                    },
                                    {
                                      "value": "test_user",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "graph_exec_id = await execute_graph(\n        server.agent_server, test_graph, test_user, {}, 3\n    )",
                  "children": [
                    {
                      "value": "graph_exec_id = await execute_graph(\n        server.agent_server, test_graph, test_user, {}, 3\n    )",
                      "children": [
                        {
                          "value": "graph_exec_id",
                          "children": []
                        },
                        {
                          "value": "await execute_graph(\n        server.agent_server, test_graph, test_user, {}, 3\n    )",
                          "children": [
                            {
                              "value": "execute_graph(\n        server.agent_server, test_graph, test_user, {}, 3\n    )",
                              "children": [
                                {
                                  "value": "execute_graph",
                                  "children": []
                                },
                                {
                                  "value": "(\n        server.agent_server, test_graph, test_user, {}, 3\n    )",
                                  "children": [
                                    {
                                      "value": "server.agent_server",
                                      "children": [
                                        {
                                          "value": "server",
                                          "children": []
                                        },
                                        {
                                          "value": "agent_server",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "test_graph",
                                      "children": []
                                    },
                                    {
                                      "value": "test_user",
                                      "children": []
                                    },
                                    {
                                      "value": "{}",
                                      "children": []
                                    },
                                    {
                                      "value": "3",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "logger.info(\"Checking execution results\")",
                  "children": [
                    {
                      "value": "logger.info(\"Checking execution results\")",
                      "children": [
                        {
                          "value": "logger.info",
                          "children": [
                            {
                              "value": "logger",
                              "children": []
                            },
                            {
                              "value": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(\"Checking execution results\")",
                          "children": [
                            {
                              "value": "\"Checking execution results\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "Checking execution results",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "executions = await server.agent_server.test_get_graph_run_node_execution_results(\n        test_graph.id, graph_exec_id, test_user.id\n    )",
                  "children": [
                    {
                      "value": "executions = await server.agent_server.test_get_graph_run_node_execution_results(\n        test_graph.id, graph_exec_id, test_user.id\n    )",
                      "children": [
                        {
                          "value": "executions",
                          "children": []
                        },
                        {
                          "value": "await server.agent_server.test_get_graph_run_node_execution_results(\n        test_graph.id, graph_exec_id, test_user.id\n    )",
                          "children": [
                            {
                              "value": "server.agent_server.test_get_graph_run_node_execution_results(\n        test_graph.id, graph_exec_id, test_user.id\n    )",
                              "children": [
                                {
                                  "value": "server.agent_server.test_get_graph_run_node_execution_results",
                                  "children": [
                                    {
                                      "value": "server.agent_server",
                                      "children": [
                                        {
                                          "value": "server",
                                          "children": []
                                        },
                                        {
                                          "value": "agent_server",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "test_get_graph_run_node_execution_results",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(\n        test_graph.id, graph_exec_id, test_user.id\n    )",
                                  "children": [
                                    {
                                      "value": "test_graph.id",
                                      "children": [
                                        {
                                          "value": "test_graph",
                                          "children": []
                                        },
                                        {
                                          "value": "id",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "graph_exec_id",
                                      "children": []
                                    },
                                    {
                                      "value": "test_user.id",
                                      "children": [
                                        {
                                          "value": "test_user",
                                          "children": []
                                        },
                                        {
                                          "value": "id",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "assert len(executions) == 3",
                  "children": [
                    {
                      "value": "len(executions) == 3",
                      "children": [
                        {
                          "value": "len(executions)",
                          "children": [
                            {
                              "value": "len",
                              "children": []
                            },
                            {
                              "value": "(executions)",
                              "children": [
                                {
                                  "value": "executions",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "3",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "# FindInDictionaryBlock should wait for the input pin to be provided,",
                  "children": []
                },
                {
                  "value": "# Hence executing extraction of \"key\" from {\"key1\": \"value1\", \"key2\": \"value2\"}",
                  "children": []
                },
                {
                  "value": "assert executions[2].status == execution.ExecutionStatus.COMPLETED",
                  "children": [
                    {
                      "value": "executions[2].status == execution.ExecutionStatus.COMPLETED",
                      "children": [
                        {
                          "value": "executions[2].status",
                          "children": [
                            {
                              "value": "executions[2]",
                              "children": [
                                {
                                  "value": "executions",
                                  "children": []
                                },
                                {
                                  "value": "2",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "status",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "execution.ExecutionStatus.COMPLETED",
                          "children": [
                            {
                              "value": "execution.ExecutionStatus",
                              "children": [
                                {
                                  "value": "execution",
                                  "children": []
                                },
                                {
                                  "value": "ExecutionStatus",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "COMPLETED",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "assert executions[2].output_data == {\"output\": [\"value2\"]}",
                  "children": [
                    {
                      "value": "executions[2].output_data == {\"output\": [\"value2\"]}",
                      "children": [
                        {
                          "value": "executions[2].output_data",
                          "children": [
                            {
                              "value": "executions[2]",
                              "children": [
                                {
                                  "value": "executions",
                                  "children": []
                                },
                                {
                                  "value": "2",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "output_data",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "{\"output\": [\"value2\"]}",
                          "children": [
                            {
                              "value": "\"output\": [\"value2\"]",
                              "children": [
                                {
                                  "value": "\"output\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "output",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "[\"value2\"]",
                                  "children": [
                                    {
                                      "value": "\"value2\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "value2",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "logger.info(\"Completed test_input_pin_always_waited\")",
                  "children": [
                    {
                      "value": "logger.info(\"Completed test_input_pin_always_waited\")",
                      "children": [
                        {
                          "value": "logger.info",
                          "children": [
                            {
                              "value": "logger",
                              "children": []
                            },
                            {
                              "value": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(\"Completed test_input_pin_always_waited\")",
                          "children": [
                            {
                              "value": "\"Completed test_input_pin_always_waited\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "Completed test_input_pin_always_waited",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "@pytest.mark.asyncio(scope=\"session\")\nasync def test_static_input_link_on_graph(server: SpinTestServer):\n    \"\"\"\n    This test is asserting the behaviour of static input link, e.g: reusable input link.\n\n    Test scenario:\n    *StoreValueBlock1*===a=========\\\\\n    *StoreValueBlock2*===a=====\\\\  ||\n    *StoreValueBlock3*===a===*MathBlock*====b / static====*StoreValueBlock5*\n    *StoreValueBlock4*=========================================//\n\n    In this test, there will be three input waiting in the MathBlock input pin `a`.\n    And later, another output is produced on input pin `b`, which is a static link,\n    this input will complete the input of those three incomplete executions.\n    \"\"\"\n    logger.info(\"Starting test_static_input_link_on_graph\")\n    nodes = [\n        graph.Node(block_id=StoreValueBlock().id, input_default={\"input\": 4}),  # a\n        graph.Node(block_id=StoreValueBlock().id, input_default={\"input\": 4}),  # a\n        graph.Node(block_id=StoreValueBlock().id, input_default={\"input\": 4}),  # a\n        graph.Node(block_id=StoreValueBlock().id, input_default={\"input\": 5}),  # b\n        graph.Node(block_id=StoreValueBlock().id),\n        graph.Node(\n            block_id=CalculatorBlock().id,\n            input_default={\"operation\": Operation.ADD.value},\n        ),\n    ]\n    links = [\n        graph.Link(\n            source_id=nodes[0].id,\n            sink_id=nodes[5].id,\n            source_name=\"output\",\n            sink_name=\"a\",\n        ),\n        graph.Link(\n            source_id=nodes[1].id,\n            sink_id=nodes[5].id,\n            source_name=\"output\",\n            sink_name=\"a\",\n        ),\n        graph.Link(\n            source_id=nodes[2].id,\n            sink_id=nodes[5].id,\n            source_name=\"output\",\n            sink_name=\"a\",\n        ),\n        graph.Link(\n            source_id=nodes[3].id,\n            sink_id=nodes[4].id,\n            source_name=\"output\",\n            sink_name=\"input\",\n        ),\n        graph.Link(\n            source_id=nodes[4].id,\n            sink_id=nodes[5].id,\n            source_name=\"output\",\n            sink_name=\"b\",\n            is_static=True,  # This is the static link to test.\n        ),\n    ]\n    test_graph = graph.Graph(\n        name=\"TestGraph\",\n        description=\"Test graph\",\n        nodes=nodes,\n        links=links,\n    )\n    test_user = await create_test_user()\n    test_graph = await create_graph(server, test_graph, test_user)\n    graph_exec_id = await execute_graph(\n        server.agent_server, test_graph, test_user, {}, 8\n    )\n    logger.info(\"Checking execution results\")\n    executions = await server.agent_server.test_get_graph_run_node_execution_results(\n        test_graph.id, graph_exec_id, test_user.id\n    )\n    assert len(executions) == 8\n    # The last 3 executions will be a+b=4+5=9\n    for i, exec_data in enumerate(executions[-3:]):\n        logger.info(f\"Checking execution {i+1} of last 3: {exec_data}\")\n        assert exec_data.status == execution.ExecutionStatus.COMPLETED\n        assert exec_data.output_data == {\"result\": [9]}\n    logger.info(\"Completed test_static_input_link_on_graph\")",
      "children": [
        {
          "value": "@pytest.mark.asyncio(scope=\"session\")",
          "children": [
            {
              "value": "pytest.mark.asyncio(scope=\"session\")",
              "children": [
                {
                  "value": "pytest.mark.asyncio",
                  "children": [
                    {
                      "value": "pytest.mark",
                      "children": [
                        {
                          "value": "pytest",
                          "children": []
                        },
                        {
                          "value": "mark",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "asyncio",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "(scope=\"session\")",
                  "children": [
                    {
                      "value": "scope=\"session\"",
                      "children": [
                        {
                          "value": "scope",
                          "children": []
                        },
                        {
                          "value": "\"session\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "session",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "async def test_static_input_link_on_graph(server: SpinTestServer):\n    \"\"\"\n    This test is asserting the behaviour of static input link, e.g: reusable input link.\n\n    Test scenario:\n    *StoreValueBlock1*===a=========\\\\\n    *StoreValueBlock2*===a=====\\\\  ||\n    *StoreValueBlock3*===a===*MathBlock*====b / static====*StoreValueBlock5*\n    *StoreValueBlock4*=========================================//\n\n    In this test, there will be three input waiting in the MathBlock input pin `a`.\n    And later, another output is produced on input pin `b`, which is a static link,\n    this input will complete the input of those three incomplete executions.\n    \"\"\"\n    logger.info(\"Starting test_static_input_link_on_graph\")\n    nodes = [\n        graph.Node(block_id=StoreValueBlock().id, input_default={\"input\": 4}),  # a\n        graph.Node(block_id=StoreValueBlock().id, input_default={\"input\": 4}),  # a\n        graph.Node(block_id=StoreValueBlock().id, input_default={\"input\": 4}),  # a\n        graph.Node(block_id=StoreValueBlock().id, input_default={\"input\": 5}),  # b\n        graph.Node(block_id=StoreValueBlock().id),\n        graph.Node(\n            block_id=CalculatorBlock().id,\n            input_default={\"operation\": Operation.ADD.value},\n        ),\n    ]\n    links = [\n        graph.Link(\n            source_id=nodes[0].id,\n            sink_id=nodes[5].id,\n            source_name=\"output\",\n            sink_name=\"a\",\n        ),\n        graph.Link(\n            source_id=nodes[1].id,\n            sink_id=nodes[5].id,\n            source_name=\"output\",\n            sink_name=\"a\",\n        ),\n        graph.Link(\n            source_id=nodes[2].id,\n            sink_id=nodes[5].id,\n            source_name=\"output\",\n            sink_name=\"a\",\n        ),\n        graph.Link(\n            source_id=nodes[3].id,\n            sink_id=nodes[4].id,\n            source_name=\"output\",\n            sink_name=\"input\",\n        ),\n        graph.Link(\n            source_id=nodes[4].id,\n            sink_id=nodes[5].id,\n            source_name=\"output\",\n            sink_name=\"b\",\n            is_static=True,  # This is the static link to test.\n        ),\n    ]\n    test_graph = graph.Graph(\n        name=\"TestGraph\",\n        description=\"Test graph\",\n        nodes=nodes,\n        links=links,\n    )\n    test_user = await create_test_user()\n    test_graph = await create_graph(server, test_graph, test_user)\n    graph_exec_id = await execute_graph(\n        server.agent_server, test_graph, test_user, {}, 8\n    )\n    logger.info(\"Checking execution results\")\n    executions = await server.agent_server.test_get_graph_run_node_execution_results(\n        test_graph.id, graph_exec_id, test_user.id\n    )\n    assert len(executions) == 8\n    # The last 3 executions will be a+b=4+5=9\n    for i, exec_data in enumerate(executions[-3:]):\n        logger.info(f\"Checking execution {i+1} of last 3: {exec_data}\")\n        assert exec_data.status == execution.ExecutionStatus.COMPLETED\n        assert exec_data.output_data == {\"result\": [9]}\n    logger.info(\"Completed test_static_input_link_on_graph\")",
          "children": [
            {
              "value": "test_static_input_link_on_graph",
              "children": []
            },
            {
              "value": "(server: SpinTestServer)",
              "children": [
                {
                  "value": "server: SpinTestServer",
                  "children": [
                    {
                      "value": "server",
                      "children": []
                    },
                    {
                      "value": "SpinTestServer",
                      "children": [
                        {
                          "value": "SpinTestServer",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "\"\"\"\n    This test is asserting the behaviour of static input link, e.g: reusable input link.\n\n    Test scenario:\n    *StoreValueBlock1*===a=========\\\\\n    *StoreValueBlock2*===a=====\\\\  ||\n    *StoreValueBlock3*===a===*MathBlock*====b / static====*StoreValueBlock5*\n    *StoreValueBlock4*=========================================//\n\n    In this test, there will be three input waiting in the MathBlock input pin `a`.\n    And later, another output is produced on input pin `b`, which is a static link,\n    this input will complete the input of those three incomplete executions.\n    \"\"\"\n    logger.info(\"Starting test_static_input_link_on_graph\")\n    nodes = [\n        graph.Node(block_id=StoreValueBlock().id, input_default={\"input\": 4}),  # a\n        graph.Node(block_id=StoreValueBlock().id, input_default={\"input\": 4}),  # a\n        graph.Node(block_id=StoreValueBlock().id, input_default={\"input\": 4}),  # a\n        graph.Node(block_id=StoreValueBlock().id, input_default={\"input\": 5}),  # b\n        graph.Node(block_id=StoreValueBlock().id),\n        graph.Node(\n            block_id=CalculatorBlock().id,\n            input_default={\"operation\": Operation.ADD.value},\n        ),\n    ]\n    links = [\n        graph.Link(\n            source_id=nodes[0].id,\n            sink_id=nodes[5].id,\n            source_name=\"output\",\n            sink_name=\"a\",\n        ),\n        graph.Link(\n            source_id=nodes[1].id,\n            sink_id=nodes[5].id,\n            source_name=\"output\",\n            sink_name=\"a\",\n        ),\n        graph.Link(\n            source_id=nodes[2].id,\n            sink_id=nodes[5].id,\n            source_name=\"output\",\n            sink_name=\"a\",\n        ),\n        graph.Link(\n            source_id=nodes[3].id,\n            sink_id=nodes[4].id,\n            source_name=\"output\",\n            sink_name=\"input\",\n        ),\n        graph.Link(\n            source_id=nodes[4].id,\n            sink_id=nodes[5].id,\n            source_name=\"output\",\n            sink_name=\"b\",\n            is_static=True,  # This is the static link to test.\n        ),\n    ]\n    test_graph = graph.Graph(\n        name=\"TestGraph\",\n        description=\"Test graph\",\n        nodes=nodes,\n        links=links,\n    )\n    test_user = await create_test_user()\n    test_graph = await create_graph(server, test_graph, test_user)\n    graph_exec_id = await execute_graph(\n        server.agent_server, test_graph, test_user, {}, 8\n    )\n    logger.info(\"Checking execution results\")\n    executions = await server.agent_server.test_get_graph_run_node_execution_results(\n        test_graph.id, graph_exec_id, test_user.id\n    )\n    assert len(executions) == 8\n    # The last 3 executions will be a+b=4+5=9\n    for i, exec_data in enumerate(executions[-3:]):\n        logger.info(f\"Checking execution {i+1} of last 3: {exec_data}\")\n        assert exec_data.status == execution.ExecutionStatus.COMPLETED\n        assert exec_data.output_data == {\"result\": [9]}\n    logger.info(\"Completed test_static_input_link_on_graph\")",
              "children": [
                {
                  "value": "\"\"\"\n    This test is asserting the behaviour of static input link, e.g: reusable input link.\n\n    Test scenario:\n    *StoreValueBlock1*===a=========\\\\\n    *StoreValueBlock2*===a=====\\\\  ||\n    *StoreValueBlock3*===a===*MathBlock*====b / static====*StoreValueBlock5*\n    *StoreValueBlock4*=========================================//\n\n    In this test, there will be three input waiting in the MathBlock input pin `a`.\n    And later, another output is produced on input pin `b`, which is a static link,\n    this input will complete the input of those three incomplete executions.\n    \"\"\"",
                  "children": [
                    {
                      "value": "\"\"\"\n    This test is asserting the behaviour of static input link, e.g: reusable input link.\n\n    Test scenario:\n    *StoreValueBlock1*===a=========\\\\\n    *StoreValueBlock2*===a=====\\\\  ||\n    *StoreValueBlock3*===a===*MathBlock*====b / static====*StoreValueBlock5*\n    *StoreValueBlock4*=========================================//\n\n    In this test, there will be three input waiting in the MathBlock input pin `a`.\n    And later, another output is produced on input pin `b`, which is a static link,\n    this input will complete the input of those three incomplete executions.\n    \"\"\"",
                      "children": [
                        {
                          "value": "\"\"\"",
                          "children": []
                        },
                        {
                          "value": "This test is asserting the behaviour of static input link, e.g: reusable input link.\n\n    Test scenario:\n    *StoreValueBlock1*===a=========\\\\\n    *StoreValueBlock2*===a=====\\\\  ||\n    *StoreValueBlock3*===a===*MathBlock*====b / static====*StoreValueBlock5*\n    *StoreValueBlock4*=========================================//\n\n    In this test, there will be three input waiting in the MathBlock input pin `a`.\n    And later, another output is produced on input pin `b`, which is a static link,\n    this input will complete the input of those three incomplete executions.",
                          "children": [
                            {
                              "value": "\\\\",
                              "children": []
                            },
                            {
                              "value": "\\\\",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "\"\"\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "logger.info(\"Starting test_static_input_link_on_graph\")",
                  "children": [
                    {
                      "value": "logger.info(\"Starting test_static_input_link_on_graph\")",
                      "children": [
                        {
                          "value": "logger.info",
                          "children": [
                            {
                              "value": "logger",
                              "children": []
                            },
                            {
                              "value": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(\"Starting test_static_input_link_on_graph\")",
                          "children": [
                            {
                              "value": "\"Starting test_static_input_link_on_graph\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "Starting test_static_input_link_on_graph",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "nodes = [\n        graph.Node(block_id=StoreValueBlock().id, input_default={\"input\": 4}),  # a\n        graph.Node(block_id=StoreValueBlock().id, input_default={\"input\": 4}),  # a\n        graph.Node(block_id=StoreValueBlock().id, input_default={\"input\": 4}),  # a\n        graph.Node(block_id=StoreValueBlock().id, input_default={\"input\": 5}),  # b\n        graph.Node(block_id=StoreValueBlock().id),\n        graph.Node(\n            block_id=CalculatorBlock().id,\n            input_default={\"operation\": Operation.ADD.value},\n        ),\n    ]",
                  "children": [
                    {
                      "value": "nodes = [\n        graph.Node(block_id=StoreValueBlock().id, input_default={\"input\": 4}),  # a\n        graph.Node(block_id=StoreValueBlock().id, input_default={\"input\": 4}),  # a\n        graph.Node(block_id=StoreValueBlock().id, input_default={\"input\": 4}),  # a\n        graph.Node(block_id=StoreValueBlock().id, input_default={\"input\": 5}),  # b\n        graph.Node(block_id=StoreValueBlock().id),\n        graph.Node(\n            block_id=CalculatorBlock().id,\n            input_default={\"operation\": Operation.ADD.value},\n        ),\n    ]",
                      "children": [
                        {
                          "value": "nodes",
                          "children": []
                        },
                        {
                          "value": "[\n        graph.Node(block_id=StoreValueBlock().id, input_default={\"input\": 4}),  # a\n        graph.Node(block_id=StoreValueBlock().id, input_default={\"input\": 4}),  # a\n        graph.Node(block_id=StoreValueBlock().id, input_default={\"input\": 4}),  # a\n        graph.Node(block_id=StoreValueBlock().id, input_default={\"input\": 5}),  # b\n        graph.Node(block_id=StoreValueBlock().id),\n        graph.Node(\n            block_id=CalculatorBlock().id,\n            input_default={\"operation\": Operation.ADD.value},\n        ),\n    ]",
                          "children": [
                            {
                              "value": "graph.Node(block_id=StoreValueBlock().id, input_default={\"input\": 4})",
                              "children": [
                                {
                                  "value": "graph.Node",
                                  "children": [
                                    {
                                      "value": "graph",
                                      "children": []
                                    },
                                    {
                                      "value": "Node",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(block_id=StoreValueBlock().id, input_default={\"input\": 4})",
                                  "children": [
                                    {
                                      "value": "block_id=StoreValueBlock().id",
                                      "children": [
                                        {
                                          "value": "block_id",
                                          "children": []
                                        },
                                        {
                                          "value": "StoreValueBlock().id",
                                          "children": [
                                            {
                                              "value": "StoreValueBlock()",
                                              "children": [
                                                {
                                                  "value": "StoreValueBlock",
                                                  "children": []
                                                },
                                                {
                                                  "value": "()",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "id",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "input_default={\"input\": 4}",
                                      "children": [
                                        {
                                          "value": "input_default",
                                          "children": []
                                        },
                                        {
                                          "value": "{\"input\": 4}",
                                          "children": [
                                            {
                                              "value": "\"input\": 4",
                                              "children": [
                                                {
                                                  "value": "\"input\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "input",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "4",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "# a",
                              "children": []
                            },
                            {
                              "value": "graph.Node(block_id=StoreValueBlock().id, input_default={\"input\": 4})",
                              "children": [
                                {
                                  "value": "graph.Node",
                                  "children": [
                                    {
                                      "value": "graph",
                                      "children": []
                                    },
                                    {
                                      "value": "Node",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(block_id=StoreValueBlock().id, input_default={\"input\": 4})",
                                  "children": [
                                    {
                                      "value": "block_id=StoreValueBlock().id",
                                      "children": [
                                        {
                                          "value": "block_id",
                                          "children": []
                                        },
                                        {
                                          "value": "StoreValueBlock().id",
                                          "children": [
                                            {
                                              "value": "StoreValueBlock()",
                                              "children": [
                                                {
                                                  "value": "StoreValueBlock",
                                                  "children": []
                                                },
                                                {
                                                  "value": "()",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "id",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "input_default={\"input\": 4}",
                                      "children": [
                                        {
                                          "value": "input_default",
                                          "children": []
                                        },
                                        {
                                          "value": "{\"input\": 4}",
                                          "children": [
                                            {
                                              "value": "\"input\": 4",
                                              "children": [
                                                {
                                                  "value": "\"input\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "input",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "4",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "# a",
                              "children": []
                            },
                            {
                              "value": "graph.Node(block_id=StoreValueBlock().id, input_default={\"input\": 4})",
                              "children": [
                                {
                                  "value": "graph.Node",
                                  "children": [
                                    {
                                      "value": "graph",
                                      "children": []
                                    },
                                    {
                                      "value": "Node",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(block_id=StoreValueBlock().id, input_default={\"input\": 4})",
                                  "children": [
                                    {
                                      "value": "block_id=StoreValueBlock().id",
                                      "children": [
                                        {
                                          "value": "block_id",
                                          "children": []
                                        },
                                        {
                                          "value": "StoreValueBlock().id",
                                          "children": [
                                            {
                                              "value": "StoreValueBlock()",
                                              "children": [
                                                {
                                                  "value": "StoreValueBlock",
                                                  "children": []
                                                },
                                                {
                                                  "value": "()",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "id",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "input_default={\"input\": 4}",
                                      "children": [
                                        {
                                          "value": "input_default",
                                          "children": []
                                        },
                                        {
                                          "value": "{\"input\": 4}",
                                          "children": [
                                            {
                                              "value": "\"input\": 4",
                                              "children": [
                                                {
                                                  "value": "\"input\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "input",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "4",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "# a",
                              "children": []
                            },
                            {
                              "value": "graph.Node(block_id=StoreValueBlock().id, input_default={\"input\": 5})",
                              "children": [
                                {
                                  "value": "graph.Node",
                                  "children": [
                                    {
                                      "value": "graph",
                                      "children": []
                                    },
                                    {
                                      "value": "Node",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(block_id=StoreValueBlock().id, input_default={\"input\": 5})",
                                  "children": [
                                    {
                                      "value": "block_id=StoreValueBlock().id",
                                      "children": [
                                        {
                                          "value": "block_id",
                                          "children": []
                                        },
                                        {
                                          "value": "StoreValueBlock().id",
                                          "children": [
                                            {
                                              "value": "StoreValueBlock()",
                                              "children": [
                                                {
                                                  "value": "StoreValueBlock",
                                                  "children": []
                                                },
                                                {
                                                  "value": "()",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "id",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "input_default={\"input\": 5}",
                                      "children": [
                                        {
                                          "value": "input_default",
                                          "children": []
                                        },
                                        {
                                          "value": "{\"input\": 5}",
                                          "children": [
                                            {
                                              "value": "\"input\": 5",
                                              "children": [
                                                {
                                                  "value": "\"input\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "input",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "5",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "# b",
                              "children": []
                            },
                            {
                              "value": "graph.Node(block_id=StoreValueBlock().id)",
                              "children": [
                                {
                                  "value": "graph.Node",
                                  "children": [
                                    {
                                      "value": "graph",
                                      "children": []
                                    },
                                    {
                                      "value": "Node",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(block_id=StoreValueBlock().id)",
                                  "children": [
                                    {
                                      "value": "block_id=StoreValueBlock().id",
                                      "children": [
                                        {
                                          "value": "block_id",
                                          "children": []
                                        },
                                        {
                                          "value": "StoreValueBlock().id",
                                          "children": [
                                            {
                                              "value": "StoreValueBlock()",
                                              "children": [
                                                {
                                                  "value": "StoreValueBlock",
                                                  "children": []
                                                },
                                                {
                                                  "value": "()",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "id",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "graph.Node(\n            block_id=CalculatorBlock().id,\n            input_default={\"operation\": Operation.ADD.value},\n        )",
                              "children": [
                                {
                                  "value": "graph.Node",
                                  "children": [
                                    {
                                      "value": "graph",
                                      "children": []
                                    },
                                    {
                                      "value": "Node",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(\n            block_id=CalculatorBlock().id,\n            input_default={\"operation\": Operation.ADD.value},\n        )",
                                  "children": [
                                    {
                                      "value": "block_id=CalculatorBlock().id",
                                      "children": [
                                        {
                                          "value": "block_id",
                                          "children": []
                                        },
                                        {
                                          "value": "CalculatorBlock().id",
                                          "children": [
                                            {
                                              "value": "CalculatorBlock()",
                                              "children": [
                                                {
                                                  "value": "CalculatorBlock",
                                                  "children": []
                                                },
                                                {
                                                  "value": "()",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "id",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "input_default={\"operation\": Operation.ADD.value}",
                                      "children": [
                                        {
                                          "value": "input_default",
                                          "children": []
                                        },
                                        {
                                          "value": "{\"operation\": Operation.ADD.value}",
                                          "children": [
                                            {
                                              "value": "\"operation\": Operation.ADD.value",
                                              "children": [
                                                {
                                                  "value": "\"operation\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "operation",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "Operation.ADD.value",
                                                  "children": [
                                                    {
                                                      "value": "Operation.ADD",
                                                      "children": [
                                                        {
                                                          "value": "Operation",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "ADD",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "value",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "links = [\n        graph.Link(\n            source_id=nodes[0].id,\n            sink_id=nodes[5].id,\n            source_name=\"output\",\n            sink_name=\"a\",\n        ),\n        graph.Link(\n            source_id=nodes[1].id,\n            sink_id=nodes[5].id,\n            source_name=\"output\",\n            sink_name=\"a\",\n        ),\n        graph.Link(\n            source_id=nodes[2].id,\n            sink_id=nodes[5].id,\n            source_name=\"output\",\n            sink_name=\"a\",\n        ),\n        graph.Link(\n            source_id=nodes[3].id,\n            sink_id=nodes[4].id,\n            source_name=\"output\",\n            sink_name=\"input\",\n        ),\n        graph.Link(\n            source_id=nodes[4].id,\n            sink_id=nodes[5].id,\n            source_name=\"output\",\n            sink_name=\"b\",\n            is_static=True,  # This is the static link to test.\n        ),\n    ]",
                  "children": [
                    {
                      "value": "links = [\n        graph.Link(\n            source_id=nodes[0].id,\n            sink_id=nodes[5].id,\n            source_name=\"output\",\n            sink_name=\"a\",\n        ),\n        graph.Link(\n            source_id=nodes[1].id,\n            sink_id=nodes[5].id,\n            source_name=\"output\",\n            sink_name=\"a\",\n        ),\n        graph.Link(\n            source_id=nodes[2].id,\n            sink_id=nodes[5].id,\n            source_name=\"output\",\n            sink_name=\"a\",\n        ),\n        graph.Link(\n            source_id=nodes[3].id,\n            sink_id=nodes[4].id,\n            source_name=\"output\",\n            sink_name=\"input\",\n        ),\n        graph.Link(\n            source_id=nodes[4].id,\n            sink_id=nodes[5].id,\n            source_name=\"output\",\n            sink_name=\"b\",\n            is_static=True,  # This is the static link to test.\n        ),\n    ]",
                      "children": [
                        {
                          "value": "links",
                          "children": []
                        },
                        {
                          "value": "[\n        graph.Link(\n            source_id=nodes[0].id,\n            sink_id=nodes[5].id,\n            source_name=\"output\",\n            sink_name=\"a\",\n        ),\n        graph.Link(\n            source_id=nodes[1].id,\n            sink_id=nodes[5].id,\n            source_name=\"output\",\n            sink_name=\"a\",\n        ),\n        graph.Link(\n            source_id=nodes[2].id,\n            sink_id=nodes[5].id,\n            source_name=\"output\",\n            sink_name=\"a\",\n        ),\n        graph.Link(\n            source_id=nodes[3].id,\n            sink_id=nodes[4].id,\n            source_name=\"output\",\n            sink_name=\"input\",\n        ),\n        graph.Link(\n            source_id=nodes[4].id,\n            sink_id=nodes[5].id,\n            source_name=\"output\",\n            sink_name=\"b\",\n            is_static=True,  # This is the static link to test.\n        ),\n    ]",
                          "children": [
                            {
                              "value": "graph.Link(\n            source_id=nodes[0].id,\n            sink_id=nodes[5].id,\n            source_name=\"output\",\n            sink_name=\"a\",\n        )",
                              "children": [
                                {
                                  "value": "graph.Link",
                                  "children": [
                                    {
                                      "value": "graph",
                                      "children": []
                                    },
                                    {
                                      "value": "Link",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(\n            source_id=nodes[0].id,\n            sink_id=nodes[5].id,\n            source_name=\"output\",\n            sink_name=\"a\",\n        )",
                                  "children": [
                                    {
                                      "value": "source_id=nodes[0].id",
                                      "children": [
                                        {
                                          "value": "source_id",
                                          "children": []
                                        },
                                        {
                                          "value": "nodes[0].id",
                                          "children": [
                                            {
                                              "value": "nodes[0]",
                                              "children": [
                                                {
                                                  "value": "nodes",
                                                  "children": []
                                                },
                                                {
                                                  "value": "0",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "id",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "sink_id=nodes[5].id",
                                      "children": [
                                        {
                                          "value": "sink_id",
                                          "children": []
                                        },
                                        {
                                          "value": "nodes[5].id",
                                          "children": [
                                            {
                                              "value": "nodes[5]",
                                              "children": [
                                                {
                                                  "value": "nodes",
                                                  "children": []
                                                },
                                                {
                                                  "value": "5",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "id",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "source_name=\"output\"",
                                      "children": [
                                        {
                                          "value": "source_name",
                                          "children": []
                                        },
                                        {
                                          "value": "\"output\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "output",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "sink_name=\"a\"",
                                      "children": [
                                        {
                                          "value": "sink_name",
                                          "children": []
                                        },
                                        {
                                          "value": "\"a\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "a",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "graph.Link(\n            source_id=nodes[1].id,\n            sink_id=nodes[5].id,\n            source_name=\"output\",\n            sink_name=\"a\",\n        )",
                              "children": [
                                {
                                  "value": "graph.Link",
                                  "children": [
                                    {
                                      "value": "graph",
                                      "children": []
                                    },
                                    {
                                      "value": "Link",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(\n            source_id=nodes[1].id,\n            sink_id=nodes[5].id,\n            source_name=\"output\",\n            sink_name=\"a\",\n        )",
                                  "children": [
                                    {
                                      "value": "source_id=nodes[1].id",
                                      "children": [
                                        {
                                          "value": "source_id",
                                          "children": []
                                        },
                                        {
                                          "value": "nodes[1].id",
                                          "children": [
                                            {
                                              "value": "nodes[1]",
                                              "children": [
                                                {
                                                  "value": "nodes",
                                                  "children": []
                                                },
                                                {
                                                  "value": "1",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "id",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "sink_id=nodes[5].id",
                                      "children": [
                                        {
                                          "value": "sink_id",
                                          "children": []
                                        },
                                        {
                                          "value": "nodes[5].id",
                                          "children": [
                                            {
                                              "value": "nodes[5]",
                                              "children": [
                                                {
                                                  "value": "nodes",
                                                  "children": []
                                                },
                                                {
                                                  "value": "5",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "id",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "source_name=\"output\"",
                                      "children": [
                                        {
                                          "value": "source_name",
                                          "children": []
                                        },
                                        {
                                          "value": "\"output\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "output",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "sink_name=\"a\"",
                                      "children": [
                                        {
                                          "value": "sink_name",
                                          "children": []
                                        },
                                        {
                                          "value": "\"a\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "a",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "graph.Link(\n            source_id=nodes[2].id,\n            sink_id=nodes[5].id,\n            source_name=\"output\",\n            sink_name=\"a\",\n        )",
                              "children": [
                                {
                                  "value": "graph.Link",
                                  "children": [
                                    {
                                      "value": "graph",
                                      "children": []
                                    },
                                    {
                                      "value": "Link",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(\n            source_id=nodes[2].id,\n            sink_id=nodes[5].id,\n            source_name=\"output\",\n            sink_name=\"a\",\n        )",
                                  "children": [
                                    {
                                      "value": "source_id=nodes[2].id",
                                      "children": [
                                        {
                                          "value": "source_id",
                                          "children": []
                                        },
                                        {
                                          "value": "nodes[2].id",
                                          "children": [
                                            {
                                              "value": "nodes[2]",
                                              "children": [
                                                {
                                                  "value": "nodes",
                                                  "children": []
                                                },
                                                {
                                                  "value": "2",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "id",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "sink_id=nodes[5].id",
                                      "children": [
                                        {
                                          "value": "sink_id",
                                          "children": []
                                        },
                                        {
                                          "value": "nodes[5].id",
                                          "children": [
                                            {
                                              "value": "nodes[5]",
                                              "children": [
                                                {
                                                  "value": "nodes",
                                                  "children": []
                                                },
                                                {
                                                  "value": "5",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "id",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "source_name=\"output\"",
                                      "children": [
                                        {
                                          "value": "source_name",
                                          "children": []
                                        },
                                        {
                                          "value": "\"output\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "output",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "sink_name=\"a\"",
                                      "children": [
                                        {
                                          "value": "sink_name",
                                          "children": []
                                        },
                                        {
                                          "value": "\"a\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "a",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "graph.Link(\n            source_id=nodes[3].id,\n            sink_id=nodes[4].id,\n            source_name=\"output\",\n            sink_name=\"input\",\n        )",
                              "children": [
                                {
                                  "value": "graph.Link",
                                  "children": [
                                    {
                                      "value": "graph",
                                      "children": []
                                    },
                                    {
                                      "value": "Link",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(\n            source_id=nodes[3].id,\n            sink_id=nodes[4].id,\n            source_name=\"output\",\n            sink_name=\"input\",\n        )",
                                  "children": [
                                    {
                                      "value": "source_id=nodes[3].id",
                                      "children": [
                                        {
                                          "value": "source_id",
                                          "children": []
                                        },
                                        {
                                          "value": "nodes[3].id",
                                          "children": [
                                            {
                                              "value": "nodes[3]",
                                              "children": [
                                                {
                                                  "value": "nodes",
                                                  "children": []
                                                },
                                                {
                                                  "value": "3",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "id",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "sink_id=nodes[4].id",
                                      "children": [
                                        {
                                          "value": "sink_id",
                                          "children": []
                                        },
                                        {
                                          "value": "nodes[4].id",
                                          "children": [
                                            {
                                              "value": "nodes[4]",
                                              "children": [
                                                {
                                                  "value": "nodes",
                                                  "children": []
                                                },
                                                {
                                                  "value": "4",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "id",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "source_name=\"output\"",
                                      "children": [
                                        {
                                          "value": "source_name",
                                          "children": []
                                        },
                                        {
                                          "value": "\"output\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "output",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "sink_name=\"input\"",
                                      "children": [
                                        {
                                          "value": "sink_name",
                                          "children": []
                                        },
                                        {
                                          "value": "\"input\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "input",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "graph.Link(\n            source_id=nodes[4].id,\n            sink_id=nodes[5].id,\n            source_name=\"output\",\n            sink_name=\"b\",\n            is_static=True,  # This is the static link to test.\n        )",
                              "children": [
                                {
                                  "value": "graph.Link",
                                  "children": [
                                    {
                                      "value": "graph",
                                      "children": []
                                    },
                                    {
                                      "value": "Link",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(\n            source_id=nodes[4].id,\n            sink_id=nodes[5].id,\n            source_name=\"output\",\n            sink_name=\"b\",\n            is_static=True,  # This is the static link to test.\n        )",
                                  "children": [
                                    {
                                      "value": "source_id=nodes[4].id",
                                      "children": [
                                        {
                                          "value": "source_id",
                                          "children": []
                                        },
                                        {
                                          "value": "nodes[4].id",
                                          "children": [
                                            {
                                              "value": "nodes[4]",
                                              "children": [
                                                {
                                                  "value": "nodes",
                                                  "children": []
                                                },
                                                {
                                                  "value": "4",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "id",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "sink_id=nodes[5].id",
                                      "children": [
                                        {
                                          "value": "sink_id",
                                          "children": []
                                        },
                                        {
                                          "value": "nodes[5].id",
                                          "children": [
                                            {
                                              "value": "nodes[5]",
                                              "children": [
                                                {
                                                  "value": "nodes",
                                                  "children": []
                                                },
                                                {
                                                  "value": "5",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "id",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "source_name=\"output\"",
                                      "children": [
                                        {
                                          "value": "source_name",
                                          "children": []
                                        },
                                        {
                                          "value": "\"output\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "output",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "sink_name=\"b\"",
                                      "children": [
                                        {
                                          "value": "sink_name",
                                          "children": []
                                        },
                                        {
                                          "value": "\"b\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "b",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "is_static=True",
                                      "children": [
                                        {
                                          "value": "is_static",
                                          "children": []
                                        },
                                        {
                                          "value": "True",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "# This is the static link to test.",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "test_graph = graph.Graph(\n        name=\"TestGraph\",\n        description=\"Test graph\",\n        nodes=nodes,\n        links=links,\n    )",
                  "children": [
                    {
                      "value": "test_graph = graph.Graph(\n        name=\"TestGraph\",\n        description=\"Test graph\",\n        nodes=nodes,\n        links=links,\n    )",
                      "children": [
                        {
                          "value": "test_graph",
                          "children": []
                        },
                        {
                          "value": "graph.Graph(\n        name=\"TestGraph\",\n        description=\"Test graph\",\n        nodes=nodes,\n        links=links,\n    )",
                          "children": [
                            {
                              "value": "graph.Graph",
                              "children": [
                                {
                                  "value": "graph",
                                  "children": []
                                },
                                {
                                  "value": "Graph",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\n        name=\"TestGraph\",\n        description=\"Test graph\",\n        nodes=nodes,\n        links=links,\n    )",
                              "children": [
                                {
                                  "value": "name=\"TestGraph\"",
                                  "children": [
                                    {
                                      "value": "name",
                                      "children": []
                                    },
                                    {
                                      "value": "\"TestGraph\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "TestGraph",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "description=\"Test graph\"",
                                  "children": [
                                    {
                                      "value": "description",
                                      "children": []
                                    },
                                    {
                                      "value": "\"Test graph\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "Test graph",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "nodes=nodes",
                                  "children": [
                                    {
                                      "value": "nodes",
                                      "children": []
                                    },
                                    {
                                      "value": "nodes",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "links=links",
                                  "children": [
                                    {
                                      "value": "links",
                                      "children": []
                                    },
                                    {
                                      "value": "links",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "test_user = await create_test_user()",
                  "children": [
                    {
                      "value": "test_user = await create_test_user()",
                      "children": [
                        {
                          "value": "test_user",
                          "children": []
                        },
                        {
                          "value": "await create_test_user()",
                          "children": [
                            {
                              "value": "create_test_user()",
                              "children": [
                                {
                                  "value": "create_test_user",
                                  "children": []
                                },
                                {
                                  "value": "()",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "test_graph = await create_graph(server, test_graph, test_user)",
                  "children": [
                    {
                      "value": "test_graph = await create_graph(server, test_graph, test_user)",
                      "children": [
                        {
                          "value": "test_graph",
                          "children": []
                        },
                        {
                          "value": "await create_graph(server, test_graph, test_user)",
                          "children": [
                            {
                              "value": "create_graph(server, test_graph, test_user)",
                              "children": [
                                {
                                  "value": "create_graph",
                                  "children": []
                                },
                                {
                                  "value": "(server, test_graph, test_user)",
                                  "children": [
                                    {
                                      "value": "server",
                                      "children": []
                                    },
                                    {
                                      "value": "test_graph",
                                      "children": []
                                    },
                                    {
                                      "value": "test_user",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "graph_exec_id = await execute_graph(\n        server.agent_server, test_graph, test_user, {}, 8\n    )",
                  "children": [
                    {
                      "value": "graph_exec_id = await execute_graph(\n        server.agent_server, test_graph, test_user, {}, 8\n    )",
                      "children": [
                        {
                          "value": "graph_exec_id",
                          "children": []
                        },
                        {
                          "value": "await execute_graph(\n        server.agent_server, test_graph, test_user, {}, 8\n    )",
                          "children": [
                            {
                              "value": "execute_graph(\n        server.agent_server, test_graph, test_user, {}, 8\n    )",
                              "children": [
                                {
                                  "value": "execute_graph",
                                  "children": []
                                },
                                {
                                  "value": "(\n        server.agent_server, test_graph, test_user, {}, 8\n    )",
                                  "children": [
                                    {
                                      "value": "server.agent_server",
                                      "children": [
                                        {
                                          "value": "server",
                                          "children": []
                                        },
                                        {
                                          "value": "agent_server",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "test_graph",
                                      "children": []
                                    },
                                    {
                                      "value": "test_user",
                                      "children": []
                                    },
                                    {
                                      "value": "{}",
                                      "children": []
                                    },
                                    {
                                      "value": "8",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "logger.info(\"Checking execution results\")",
                  "children": [
                    {
                      "value": "logger.info(\"Checking execution results\")",
                      "children": [
                        {
                          "value": "logger.info",
                          "children": [
                            {
                              "value": "logger",
                              "children": []
                            },
                            {
                              "value": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(\"Checking execution results\")",
                          "children": [
                            {
                              "value": "\"Checking execution results\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "Checking execution results",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "executions = await server.agent_server.test_get_graph_run_node_execution_results(\n        test_graph.id, graph_exec_id, test_user.id\n    )",
                  "children": [
                    {
                      "value": "executions = await server.agent_server.test_get_graph_run_node_execution_results(\n        test_graph.id, graph_exec_id, test_user.id\n    )",
                      "children": [
                        {
                          "value": "executions",
                          "children": []
                        },
                        {
                          "value": "await server.agent_server.test_get_graph_run_node_execution_results(\n        test_graph.id, graph_exec_id, test_user.id\n    )",
                          "children": [
                            {
                              "value": "server.agent_server.test_get_graph_run_node_execution_results(\n        test_graph.id, graph_exec_id, test_user.id\n    )",
                              "children": [
                                {
                                  "value": "server.agent_server.test_get_graph_run_node_execution_results",
                                  "children": [
                                    {
                                      "value": "server.agent_server",
                                      "children": [
                                        {
                                          "value": "server",
                                          "children": []
                                        },
                                        {
                                          "value": "agent_server",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "test_get_graph_run_node_execution_results",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(\n        test_graph.id, graph_exec_id, test_user.id\n    )",
                                  "children": [
                                    {
                                      "value": "test_graph.id",
                                      "children": [
                                        {
                                          "value": "test_graph",
                                          "children": []
                                        },
                                        {
                                          "value": "id",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "graph_exec_id",
                                      "children": []
                                    },
                                    {
                                      "value": "test_user.id",
                                      "children": [
                                        {
                                          "value": "test_user",
                                          "children": []
                                        },
                                        {
                                          "value": "id",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "assert len(executions) == 8",
                  "children": [
                    {
                      "value": "len(executions) == 8",
                      "children": [
                        {
                          "value": "len(executions)",
                          "children": [
                            {
                              "value": "len",
                              "children": []
                            },
                            {
                              "value": "(executions)",
                              "children": [
                                {
                                  "value": "executions",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "8",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "# The last 3 executions will be a+b=4+5=9",
                  "children": []
                },
                {
                  "value": "for i, exec_data in enumerate(executions[-3:]):\n        logger.info(f\"Checking execution {i+1} of last 3: {exec_data}\")\n        assert exec_data.status == execution.ExecutionStatus.COMPLETED\n        assert exec_data.output_data == {\"result\": [9]}",
                  "children": [
                    {
                      "value": "i, exec_data",
                      "children": [
                        {
                          "value": "i",
                          "children": []
                        },
                        {
                          "value": "exec_data",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "enumerate(executions[-3:])",
                      "children": [
                        {
                          "value": "enumerate",
                          "children": []
                        },
                        {
                          "value": "(executions[-3:])",
                          "children": [
                            {
                              "value": "executions[-3:]",
                              "children": [
                                {
                                  "value": "executions",
                                  "children": []
                                },
                                {
                                  "value": "-3:",
                                  "children": [
                                    {
                                      "value": "-3",
                                      "children": [
                                        {
                                          "value": "3",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "logger.info(f\"Checking execution {i+1} of last 3: {exec_data}\")\n        assert exec_data.status == execution.ExecutionStatus.COMPLETED\n        assert exec_data.output_data == {\"result\": [9]}",
                      "children": [
                        {
                          "value": "logger.info(f\"Checking execution {i+1} of last 3: {exec_data}\")",
                          "children": [
                            {
                              "value": "logger.info(f\"Checking execution {i+1} of last 3: {exec_data}\")",
                              "children": [
                                {
                                  "value": "logger.info",
                                  "children": [
                                    {
                                      "value": "logger",
                                      "children": []
                                    },
                                    {
                                      "value": "info",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(f\"Checking execution {i+1} of last 3: {exec_data}\")",
                                  "children": [
                                    {
                                      "value": "f\"Checking execution {i+1} of last 3: {exec_data}\"",
                                      "children": [
                                        {
                                          "value": "f\"",
                                          "children": []
                                        },
                                        {
                                          "value": "Checking execution",
                                          "children": []
                                        },
                                        {
                                          "value": "{i+1}",
                                          "children": [
                                            {
                                              "value": "i+1",
                                              "children": [
                                                {
                                                  "value": "i",
                                                  "children": []
                                                },
                                                {
                                                  "value": "1",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "of last 3:",
                                          "children": []
                                        },
                                        {
                                          "value": "{exec_data}",
                                          "children": [
                                            {
                                              "value": "exec_data",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "assert exec_data.status == execution.ExecutionStatus.COMPLETED",
                          "children": [
                            {
                              "value": "exec_data.status == execution.ExecutionStatus.COMPLETED",
                              "children": [
                                {
                                  "value": "exec_data.status",
                                  "children": [
                                    {
                                      "value": "exec_data",
                                      "children": []
                                    },
                                    {
                                      "value": "status",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "execution.ExecutionStatus.COMPLETED",
                                  "children": [
                                    {
                                      "value": "execution.ExecutionStatus",
                                      "children": [
                                        {
                                          "value": "execution",
                                          "children": []
                                        },
                                        {
                                          "value": "ExecutionStatus",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "COMPLETED",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "assert exec_data.output_data == {\"result\": [9]}",
                          "children": [
                            {
                              "value": "exec_data.output_data == {\"result\": [9]}",
                              "children": [
                                {
                                  "value": "exec_data.output_data",
                                  "children": [
                                    {
                                      "value": "exec_data",
                                      "children": []
                                    },
                                    {
                                      "value": "output_data",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "{\"result\": [9]}",
                                  "children": [
                                    {
                                      "value": "\"result\": [9]",
                                      "children": [
                                        {
                                          "value": "\"result\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "result",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "[9]",
                                          "children": [
                                            {
                                              "value": "9",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "logger.info(\"Completed test_static_input_link_on_graph\")",
                  "children": [
                    {
                      "value": "logger.info(\"Completed test_static_input_link_on_graph\")",
                      "children": [
                        {
                          "value": "logger.info",
                          "children": [
                            {
                              "value": "logger",
                              "children": []
                            },
                            {
                              "value": "info",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(\"Completed test_static_input_link_on_graph\")",
                          "children": [
                            {
                              "value": "\"Completed test_static_input_link_on_graph\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "Completed test_static_input_link_on_graph",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}