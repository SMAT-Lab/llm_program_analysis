{
  "value": "from abc import ABCMeta, abstractmethod\nfrom enum import Enum\n\n\nclass VehicleSize(Enum):\n\n    MOTORCYCLE = 0\n    COMPACT = 1\n    LARGE = 2\n\n\nclass Vehicle(metaclass=ABCMeta):\n\n    def __init__(self, vehicle_size, license_plate, spot_size):\n        self.vehicle_size = vehicle_size\n        self.license_plate = license_plate\n        self.spot_size\n        self.spots_taken = []\n\n    def clear_spots(self):\n        for spot in self.spots_taken:\n            spot.remove_vehicle(self)\n        self.spots_taken = []\n\n    def take_spot(self, spot):\n        self.spots_taken.append(spot)\n\n    @abstractmethod\n    def can_fit_in_spot(self, spot):\n        pass\n\n\nclass Motorcycle(Vehicle):\n\n    def __init__(self, license_plate):\n        super(Motorcycle, self).__init__(VehicleSize.MOTORCYCLE, license_plate, spot_size=1)\n\n    def can_fit_in_spot(self, spot):\n        return True\n\n\nclass Car(Vehicle):\n\n    def __init__(self, license_plate):\n        super(Car, self).__init__(VehicleSize.COMPACT, license_plate, spot_size=1)\n\n    def can_fit_in_spot(self, spot):\n        return spot.size in (VehicleSize.LARGE, VehicleSize.COMPACT)\n\n\nclass Bus(Vehicle):\n\n    def __init__(self, license_plate):\n        super(Bus, self).__init__(VehicleSize.LARGE, license_plate, spot_size=5)\n\n    def can_fit_in_spot(self, spot):\n        return spot.size == VehicleSize.LARGE\n\n\nclass ParkingLot(object):\n\n    def __init__(self, num_levels):\n        self.num_levels = num_levels\n        self.levels = []  # List of Levels\n\n    def park_vehicle(self, vehicle):\n        for level in self.levels:\n            if level.park_vehicle(vehicle):\n                return True\n        return False\n\n\nclass Level(object):\n\n    SPOTS_PER_ROW = 10\n\n    def __init__(self, floor, total_spots):\n        self.floor = floor\n        self.num_spots = total_spots\n        self.available_spots = 0\n        self.spots = []  # List of ParkingSpots\n\n    def spot_freed(self):\n        self.available_spots += 1\n\n    def park_vehicle(self, vehicle):\n        spot = self._find_available_spot(vehicle)\n        if spot is None:\n            return None\n        else:\n            spot.park_vehicle(vehicle)\n            return spot\n\n    def _find_available_spot(self, vehicle):\n        \"\"\"Find an available spot where vehicle can fit, or return None\"\"\"\n        pass\n\n    def _park_starting_at_spot(self, spot, vehicle):\n        \"\"\"Occupy starting at spot.spot_number to vehicle.spot_size.\"\"\"\n        pass\n\n\nclass ParkingSpot(object):\n\n    def __init__(self, level, row, spot_number, spot_size, vehicle_size):\n        self.level = level\n        self.row = row\n        self.spot_number = spot_number\n        self.spot_size = spot_size\n        self.vehicle_size = vehicle_size\n        self.vehicle = None\n\n    def is_available(self):\n        return True if self.vehicle is None else False\n\n    def can_fit_vehicle(self, vehicle):\n        if self.vehicle is not None:\n            return False\n        return vehicle.can_fit_in_spot(self)\n\n    def park_vehicle(self, vehicle):\n        pass\n\n    def remove_vehicle(self):\n        pass",
  "children": [
    {
      "value": "from abc import ABCMeta, abstractmethod",
      "children": [
        {
          "value": "abc",
          "children": [
            {
              "value": "abc",
              "children": []
            }
          ]
        },
        {
          "value": "ABCMeta",
          "children": [
            {
              "value": "ABCMeta",
              "children": []
            }
          ]
        },
        {
          "value": "abstractmethod",
          "children": [
            {
              "value": "abstractmethod",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from enum import Enum",
      "children": [
        {
          "value": "enum",
          "children": [
            {
              "value": "enum",
              "children": []
            }
          ]
        },
        {
          "value": "Enum",
          "children": [
            {
              "value": "Enum",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "class VehicleSize(Enum):\n\n    MOTORCYCLE = 0\n    COMPACT = 1\n    LARGE = 2",
      "children": [
        {
          "value": "VehicleSize",
          "children": []
        },
        {
          "value": "(Enum)",
          "children": [
            {
              "value": "Enum",
              "children": []
            }
          ]
        },
        {
          "value": "MOTORCYCLE = 0\n    COMPACT = 1\n    LARGE = 2",
          "children": [
            {
              "value": "MOTORCYCLE = 0",
              "children": [
                {
                  "value": "MOTORCYCLE = 0",
                  "children": [
                    {
                      "value": "MOTORCYCLE",
                      "children": []
                    },
                    {
                      "value": "0",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "COMPACT = 1",
              "children": [
                {
                  "value": "COMPACT = 1",
                  "children": [
                    {
                      "value": "COMPACT",
                      "children": []
                    },
                    {
                      "value": "1",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "LARGE = 2",
              "children": [
                {
                  "value": "LARGE = 2",
                  "children": [
                    {
                      "value": "LARGE",
                      "children": []
                    },
                    {
                      "value": "2",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "class Vehicle(metaclass=ABCMeta):\n\n    def __init__(self, vehicle_size, license_plate, spot_size):\n        self.vehicle_size = vehicle_size\n        self.license_plate = license_plate\n        self.spot_size\n        self.spots_taken = []\n\n    def clear_spots(self):\n        for spot in self.spots_taken:\n            spot.remove_vehicle(self)\n        self.spots_taken = []\n\n    def take_spot(self, spot):\n        self.spots_taken.append(spot)\n\n    @abstractmethod\n    def can_fit_in_spot(self, spot):\n        pass",
      "children": [
        {
          "value": "Vehicle",
          "children": []
        },
        {
          "value": "(metaclass=ABCMeta)",
          "children": [
            {
              "value": "metaclass=ABCMeta",
              "children": [
                {
                  "value": "metaclass",
                  "children": []
                },
                {
                  "value": "ABCMeta",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "def __init__(self, vehicle_size, license_plate, spot_size):\n        self.vehicle_size = vehicle_size\n        self.license_plate = license_plate\n        self.spot_size\n        self.spots_taken = []\n\n    def clear_spots(self):\n        for spot in self.spots_taken:\n            spot.remove_vehicle(self)\n        self.spots_taken = []\n\n    def take_spot(self, spot):\n        self.spots_taken.append(spot)\n\n    @abstractmethod\n    def can_fit_in_spot(self, spot):\n        pass",
          "children": [
            {
              "value": "def __init__(self, vehicle_size, license_plate, spot_size):\n        self.vehicle_size = vehicle_size\n        self.license_plate = license_plate\n        self.spot_size\n        self.spots_taken = []",
              "children": [
                {
                  "value": "__init__",
                  "children": []
                },
                {
                  "value": "(self, vehicle_size, license_plate, spot_size)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "vehicle_size",
                      "children": []
                    },
                    {
                      "value": "license_plate",
                      "children": []
                    },
                    {
                      "value": "spot_size",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "self.vehicle_size = vehicle_size\n        self.license_plate = license_plate\n        self.spot_size\n        self.spots_taken = []",
                  "children": [
                    {
                      "value": "self.vehicle_size = vehicle_size",
                      "children": [
                        {
                          "value": "self.vehicle_size = vehicle_size",
                          "children": [
                            {
                              "value": "self.vehicle_size",
                              "children": [
                                {
                                  "value": "self",
                                  "children": []
                                },
                                {
                                  "value": "vehicle_size",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "vehicle_size",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "self.license_plate = license_plate",
                      "children": [
                        {
                          "value": "self.license_plate = license_plate",
                          "children": [
                            {
                              "value": "self.license_plate",
                              "children": [
                                {
                                  "value": "self",
                                  "children": []
                                },
                                {
                                  "value": "license_plate",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "license_plate",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "self.spot_size",
                      "children": [
                        {
                          "value": "self.spot_size",
                          "children": [
                            {
                              "value": "self",
                              "children": []
                            },
                            {
                              "value": "spot_size",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "self.spots_taken = []",
                      "children": [
                        {
                          "value": "self.spots_taken = []",
                          "children": [
                            {
                              "value": "self.spots_taken",
                              "children": [
                                {
                                  "value": "self",
                                  "children": []
                                },
                                {
                                  "value": "spots_taken",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "[]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def clear_spots(self):\n        for spot in self.spots_taken:\n            spot.remove_vehicle(self)\n        self.spots_taken = []",
              "children": [
                {
                  "value": "clear_spots",
                  "children": []
                },
                {
                  "value": "(self)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "for spot in self.spots_taken:\n            spot.remove_vehicle(self)\n        self.spots_taken = []",
                  "children": [
                    {
                      "value": "for spot in self.spots_taken:\n            spot.remove_vehicle(self)",
                      "children": [
                        {
                          "value": "spot",
                          "children": []
                        },
                        {
                          "value": "self.spots_taken",
                          "children": [
                            {
                              "value": "self",
                              "children": []
                            },
                            {
                              "value": "spots_taken",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "spot.remove_vehicle(self)",
                          "children": [
                            {
                              "value": "spot.remove_vehicle(self)",
                              "children": [
                                {
                                  "value": "spot.remove_vehicle(self)",
                                  "children": [
                                    {
                                      "value": "spot.remove_vehicle",
                                      "children": [
                                        {
                                          "value": "spot",
                                          "children": []
                                        },
                                        {
                                          "value": "remove_vehicle",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(self)",
                                      "children": [
                                        {
                                          "value": "self",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "self.spots_taken = []",
                      "children": [
                        {
                          "value": "self.spots_taken = []",
                          "children": [
                            {
                              "value": "self.spots_taken",
                              "children": [
                                {
                                  "value": "self",
                                  "children": []
                                },
                                {
                                  "value": "spots_taken",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "[]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def take_spot(self, spot):\n        self.spots_taken.append(spot)",
              "children": [
                {
                  "value": "take_spot",
                  "children": []
                },
                {
                  "value": "(self, spot)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "spot",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "self.spots_taken.append(spot)",
                  "children": [
                    {
                      "value": "self.spots_taken.append(spot)",
                      "children": [
                        {
                          "value": "self.spots_taken.append(spot)",
                          "children": [
                            {
                              "value": "self.spots_taken.append",
                              "children": [
                                {
                                  "value": "self.spots_taken",
                                  "children": [
                                    {
                                      "value": "self",
                                      "children": []
                                    },
                                    {
                                      "value": "spots_taken",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "append",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(spot)",
                              "children": [
                                {
                                  "value": "spot",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "@abstractmethod\n    def can_fit_in_spot(self, spot):\n        pass",
              "children": [
                {
                  "value": "@abstractmethod",
                  "children": [
                    {
                      "value": "abstractmethod",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "def can_fit_in_spot(self, spot):\n        pass",
                  "children": [
                    {
                      "value": "can_fit_in_spot",
                      "children": []
                    },
                    {
                      "value": "(self, spot)",
                      "children": [
                        {
                          "value": "self",
                          "children": []
                        },
                        {
                          "value": "spot",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "pass",
                      "children": [
                        {
                          "value": "pass",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "class Motorcycle(Vehicle):\n\n    def __init__(self, license_plate):\n        super(Motorcycle, self).__init__(VehicleSize.MOTORCYCLE, license_plate, spot_size=1)\n\n    def can_fit_in_spot(self, spot):\n        return True",
      "children": [
        {
          "value": "Motorcycle",
          "children": []
        },
        {
          "value": "(Vehicle)",
          "children": [
            {
              "value": "Vehicle",
              "children": []
            }
          ]
        },
        {
          "value": "def __init__(self, license_plate):\n        super(Motorcycle, self).__init__(VehicleSize.MOTORCYCLE, license_plate, spot_size=1)\n\n    def can_fit_in_spot(self, spot):\n        return True",
          "children": [
            {
              "value": "def __init__(self, license_plate):\n        super(Motorcycle, self).__init__(VehicleSize.MOTORCYCLE, license_plate, spot_size=1)",
              "children": [
                {
                  "value": "__init__",
                  "children": []
                },
                {
                  "value": "(self, license_plate)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "license_plate",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "super(Motorcycle, self).__init__(VehicleSize.MOTORCYCLE, license_plate, spot_size=1)",
                  "children": [
                    {
                      "value": "super(Motorcycle, self).__init__(VehicleSize.MOTORCYCLE, license_plate, spot_size=1)",
                      "children": [
                        {
                          "value": "super(Motorcycle, self).__init__(VehicleSize.MOTORCYCLE, license_plate, spot_size=1)",
                          "children": [
                            {
                              "value": "super(Motorcycle, self).__init__",
                              "children": [
                                {
                                  "value": "super(Motorcycle, self)",
                                  "children": [
                                    {
                                      "value": "super",
                                      "children": []
                                    },
                                    {
                                      "value": "(Motorcycle, self)",
                                      "children": [
                                        {
                                          "value": "Motorcycle",
                                          "children": []
                                        },
                                        {
                                          "value": "self",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "__init__",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(VehicleSize.MOTORCYCLE, license_plate, spot_size=1)",
                              "children": [
                                {
                                  "value": "VehicleSize.MOTORCYCLE",
                                  "children": [
                                    {
                                      "value": "VehicleSize",
                                      "children": []
                                    },
                                    {
                                      "value": "MOTORCYCLE",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "license_plate",
                                  "children": []
                                },
                                {
                                  "value": "spot_size=1",
                                  "children": [
                                    {
                                      "value": "spot_size",
                                      "children": []
                                    },
                                    {
                                      "value": "1",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def can_fit_in_spot(self, spot):\n        return True",
              "children": [
                {
                  "value": "can_fit_in_spot",
                  "children": []
                },
                {
                  "value": "(self, spot)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "spot",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "return True",
                  "children": [
                    {
                      "value": "return True",
                      "children": [
                        {
                          "value": "True",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "class Car(Vehicle):\n\n    def __init__(self, license_plate):\n        super(Car, self).__init__(VehicleSize.COMPACT, license_plate, spot_size=1)\n\n    def can_fit_in_spot(self, spot):\n        return spot.size in (VehicleSize.LARGE, VehicleSize.COMPACT)",
      "children": [
        {
          "value": "Car",
          "children": []
        },
        {
          "value": "(Vehicle)",
          "children": [
            {
              "value": "Vehicle",
              "children": []
            }
          ]
        },
        {
          "value": "def __init__(self, license_plate):\n        super(Car, self).__init__(VehicleSize.COMPACT, license_plate, spot_size=1)\n\n    def can_fit_in_spot(self, spot):\n        return spot.size in (VehicleSize.LARGE, VehicleSize.COMPACT)",
          "children": [
            {
              "value": "def __init__(self, license_plate):\n        super(Car, self).__init__(VehicleSize.COMPACT, license_plate, spot_size=1)",
              "children": [
                {
                  "value": "__init__",
                  "children": []
                },
                {
                  "value": "(self, license_plate)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "license_plate",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "super(Car, self).__init__(VehicleSize.COMPACT, license_plate, spot_size=1)",
                  "children": [
                    {
                      "value": "super(Car, self).__init__(VehicleSize.COMPACT, license_plate, spot_size=1)",
                      "children": [
                        {
                          "value": "super(Car, self).__init__(VehicleSize.COMPACT, license_plate, spot_size=1)",
                          "children": [
                            {
                              "value": "super(Car, self).__init__",
                              "children": [
                                {
                                  "value": "super(Car, self)",
                                  "children": [
                                    {
                                      "value": "super",
                                      "children": []
                                    },
                                    {
                                      "value": "(Car, self)",
                                      "children": [
                                        {
                                          "value": "Car",
                                          "children": []
                                        },
                                        {
                                          "value": "self",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "__init__",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(VehicleSize.COMPACT, license_plate, spot_size=1)",
                              "children": [
                                {
                                  "value": "VehicleSize.COMPACT",
                                  "children": [
                                    {
                                      "value": "VehicleSize",
                                      "children": []
                                    },
                                    {
                                      "value": "COMPACT",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "license_plate",
                                  "children": []
                                },
                                {
                                  "value": "spot_size=1",
                                  "children": [
                                    {
                                      "value": "spot_size",
                                      "children": []
                                    },
                                    {
                                      "value": "1",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def can_fit_in_spot(self, spot):\n        return spot.size in (VehicleSize.LARGE, VehicleSize.COMPACT)",
              "children": [
                {
                  "value": "can_fit_in_spot",
                  "children": []
                },
                {
                  "value": "(self, spot)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "spot",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "return spot.size in (VehicleSize.LARGE, VehicleSize.COMPACT)",
                  "children": [
                    {
                      "value": "return spot.size in (VehicleSize.LARGE, VehicleSize.COMPACT)",
                      "children": [
                        {
                          "value": "spot.size in (VehicleSize.LARGE, VehicleSize.COMPACT)",
                          "children": [
                            {
                              "value": "spot.size",
                              "children": [
                                {
                                  "value": "spot",
                                  "children": []
                                },
                                {
                                  "value": "size",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(VehicleSize.LARGE, VehicleSize.COMPACT)",
                              "children": [
                                {
                                  "value": "VehicleSize.LARGE",
                                  "children": [
                                    {
                                      "value": "VehicleSize",
                                      "children": []
                                    },
                                    {
                                      "value": "LARGE",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "VehicleSize.COMPACT",
                                  "children": [
                                    {
                                      "value": "VehicleSize",
                                      "children": []
                                    },
                                    {
                                      "value": "COMPACT",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "class Bus(Vehicle):\n\n    def __init__(self, license_plate):\n        super(Bus, self).__init__(VehicleSize.LARGE, license_plate, spot_size=5)\n\n    def can_fit_in_spot(self, spot):\n        return spot.size == VehicleSize.LARGE",
      "children": [
        {
          "value": "Bus",
          "children": []
        },
        {
          "value": "(Vehicle)",
          "children": [
            {
              "value": "Vehicle",
              "children": []
            }
          ]
        },
        {
          "value": "def __init__(self, license_plate):\n        super(Bus, self).__init__(VehicleSize.LARGE, license_plate, spot_size=5)\n\n    def can_fit_in_spot(self, spot):\n        return spot.size == VehicleSize.LARGE",
          "children": [
            {
              "value": "def __init__(self, license_plate):\n        super(Bus, self).__init__(VehicleSize.LARGE, license_plate, spot_size=5)",
              "children": [
                {
                  "value": "__init__",
                  "children": []
                },
                {
                  "value": "(self, license_plate)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "license_plate",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "super(Bus, self).__init__(VehicleSize.LARGE, license_plate, spot_size=5)",
                  "children": [
                    {
                      "value": "super(Bus, self).__init__(VehicleSize.LARGE, license_plate, spot_size=5)",
                      "children": [
                        {
                          "value": "super(Bus, self).__init__(VehicleSize.LARGE, license_plate, spot_size=5)",
                          "children": [
                            {
                              "value": "super(Bus, self).__init__",
                              "children": [
                                {
                                  "value": "super(Bus, self)",
                                  "children": [
                                    {
                                      "value": "super",
                                      "children": []
                                    },
                                    {
                                      "value": "(Bus, self)",
                                      "children": [
                                        {
                                          "value": "Bus",
                                          "children": []
                                        },
                                        {
                                          "value": "self",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "__init__",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(VehicleSize.LARGE, license_plate, spot_size=5)",
                              "children": [
                                {
                                  "value": "VehicleSize.LARGE",
                                  "children": [
                                    {
                                      "value": "VehicleSize",
                                      "children": []
                                    },
                                    {
                                      "value": "LARGE",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "license_plate",
                                  "children": []
                                },
                                {
                                  "value": "spot_size=5",
                                  "children": [
                                    {
                                      "value": "spot_size",
                                      "children": []
                                    },
                                    {
                                      "value": "5",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def can_fit_in_spot(self, spot):\n        return spot.size == VehicleSize.LARGE",
              "children": [
                {
                  "value": "can_fit_in_spot",
                  "children": []
                },
                {
                  "value": "(self, spot)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "spot",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "return spot.size == VehicleSize.LARGE",
                  "children": [
                    {
                      "value": "return spot.size == VehicleSize.LARGE",
                      "children": [
                        {
                          "value": "spot.size == VehicleSize.LARGE",
                          "children": [
                            {
                              "value": "spot.size",
                              "children": [
                                {
                                  "value": "spot",
                                  "children": []
                                },
                                {
                                  "value": "size",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "VehicleSize.LARGE",
                              "children": [
                                {
                                  "value": "VehicleSize",
                                  "children": []
                                },
                                {
                                  "value": "LARGE",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "class ParkingLot(object):\n\n    def __init__(self, num_levels):\n        self.num_levels = num_levels\n        self.levels = []  # List of Levels\n\n    def park_vehicle(self, vehicle):\n        for level in self.levels:\n            if level.park_vehicle(vehicle):\n                return True\n        return False",
      "children": [
        {
          "value": "ParkingLot",
          "children": []
        },
        {
          "value": "(object)",
          "children": [
            {
              "value": "object",
              "children": []
            }
          ]
        },
        {
          "value": "def __init__(self, num_levels):\n        self.num_levels = num_levels\n        self.levels = []  # List of Levels\n\n    def park_vehicle(self, vehicle):\n        for level in self.levels:\n            if level.park_vehicle(vehicle):\n                return True\n        return False",
          "children": [
            {
              "value": "def __init__(self, num_levels):\n        self.num_levels = num_levels\n        self.levels = []  # List of Levels",
              "children": [
                {
                  "value": "__init__",
                  "children": []
                },
                {
                  "value": "(self, num_levels)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "num_levels",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "self.num_levels = num_levels\n        self.levels = []  # List of Levels",
                  "children": [
                    {
                      "value": "self.num_levels = num_levels",
                      "children": [
                        {
                          "value": "self.num_levels = num_levels",
                          "children": [
                            {
                              "value": "self.num_levels",
                              "children": [
                                {
                                  "value": "self",
                                  "children": []
                                },
                                {
                                  "value": "num_levels",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "num_levels",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "self.levels = []",
                      "children": [
                        {
                          "value": "self.levels = []",
                          "children": [
                            {
                              "value": "self.levels",
                              "children": [
                                {
                                  "value": "self",
                                  "children": []
                                },
                                {
                                  "value": "levels",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "[]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "# List of Levels",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "def park_vehicle(self, vehicle):\n        for level in self.levels:\n            if level.park_vehicle(vehicle):\n                return True\n        return False",
              "children": [
                {
                  "value": "park_vehicle",
                  "children": []
                },
                {
                  "value": "(self, vehicle)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "vehicle",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "for level in self.levels:\n            if level.park_vehicle(vehicle):\n                return True\n        return False",
                  "children": [
                    {
                      "value": "for level in self.levels:\n            if level.park_vehicle(vehicle):\n                return True",
                      "children": [
                        {
                          "value": "level",
                          "children": []
                        },
                        {
                          "value": "self.levels",
                          "children": [
                            {
                              "value": "self",
                              "children": []
                            },
                            {
                              "value": "levels",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "if level.park_vehicle(vehicle):\n                return True",
                          "children": [
                            {
                              "value": "if level.park_vehicle(vehicle):\n                return True",
                              "children": [
                                {
                                  "value": "level.park_vehicle(vehicle)",
                                  "children": [
                                    {
                                      "value": "level.park_vehicle",
                                      "children": [
                                        {
                                          "value": "level",
                                          "children": []
                                        },
                                        {
                                          "value": "park_vehicle",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(vehicle)",
                                      "children": [
                                        {
                                          "value": "vehicle",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "return True",
                                  "children": [
                                    {
                                      "value": "return True",
                                      "children": [
                                        {
                                          "value": "True",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "return False",
                      "children": [
                        {
                          "value": "False",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "class Level(object):\n\n    SPOTS_PER_ROW = 10\n\n    def __init__(self, floor, total_spots):\n        self.floor = floor\n        self.num_spots = total_spots\n        self.available_spots = 0\n        self.spots = []  # List of ParkingSpots\n\n    def spot_freed(self):\n        self.available_spots += 1\n\n    def park_vehicle(self, vehicle):\n        spot = self._find_available_spot(vehicle)\n        if spot is None:\n            return None\n        else:\n            spot.park_vehicle(vehicle)\n            return spot\n\n    def _find_available_spot(self, vehicle):\n        \"\"\"Find an available spot where vehicle can fit, or return None\"\"\"\n        pass\n\n    def _park_starting_at_spot(self, spot, vehicle):\n        \"\"\"Occupy starting at spot.spot_number to vehicle.spot_size.\"\"\"\n        pass",
      "children": [
        {
          "value": "Level",
          "children": []
        },
        {
          "value": "(object)",
          "children": [
            {
              "value": "object",
              "children": []
            }
          ]
        },
        {
          "value": "SPOTS_PER_ROW = 10\n\n    def __init__(self, floor, total_spots):\n        self.floor = floor\n        self.num_spots = total_spots\n        self.available_spots = 0\n        self.spots = []  # List of ParkingSpots\n\n    def spot_freed(self):\n        self.available_spots += 1\n\n    def park_vehicle(self, vehicle):\n        spot = self._find_available_spot(vehicle)\n        if spot is None:\n            return None\n        else:\n            spot.park_vehicle(vehicle)\n            return spot\n\n    def _find_available_spot(self, vehicle):\n        \"\"\"Find an available spot where vehicle can fit, or return None\"\"\"\n        pass\n\n    def _park_starting_at_spot(self, spot, vehicle):\n        \"\"\"Occupy starting at spot.spot_number to vehicle.spot_size.\"\"\"\n        pass",
          "children": [
            {
              "value": "SPOTS_PER_ROW = 10",
              "children": [
                {
                  "value": "SPOTS_PER_ROW = 10",
                  "children": [
                    {
                      "value": "SPOTS_PER_ROW",
                      "children": []
                    },
                    {
                      "value": "10",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "def __init__(self, floor, total_spots):\n        self.floor = floor\n        self.num_spots = total_spots\n        self.available_spots = 0\n        self.spots = []  # List of ParkingSpots",
              "children": [
                {
                  "value": "__init__",
                  "children": []
                },
                {
                  "value": "(self, floor, total_spots)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "floor",
                      "children": []
                    },
                    {
                      "value": "total_spots",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "self.floor = floor\n        self.num_spots = total_spots\n        self.available_spots = 0\n        self.spots = []  # List of ParkingSpots",
                  "children": [
                    {
                      "value": "self.floor = floor",
                      "children": [
                        {
                          "value": "self.floor = floor",
                          "children": [
                            {
                              "value": "self.floor",
                              "children": [
                                {
                                  "value": "self",
                                  "children": []
                                },
                                {
                                  "value": "floor",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "floor",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "self.num_spots = total_spots",
                      "children": [
                        {
                          "value": "self.num_spots = total_spots",
                          "children": [
                            {
                              "value": "self.num_spots",
                              "children": [
                                {
                                  "value": "self",
                                  "children": []
                                },
                                {
                                  "value": "num_spots",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "total_spots",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "self.available_spots = 0",
                      "children": [
                        {
                          "value": "self.available_spots = 0",
                          "children": [
                            {
                              "value": "self.available_spots",
                              "children": [
                                {
                                  "value": "self",
                                  "children": []
                                },
                                {
                                  "value": "available_spots",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "0",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "self.spots = []",
                      "children": [
                        {
                          "value": "self.spots = []",
                          "children": [
                            {
                              "value": "self.spots",
                              "children": [
                                {
                                  "value": "self",
                                  "children": []
                                },
                                {
                                  "value": "spots",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "[]",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "# List of ParkingSpots",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "def spot_freed(self):\n        self.available_spots += 1",
              "children": [
                {
                  "value": "spot_freed",
                  "children": []
                },
                {
                  "value": "(self)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "self.available_spots += 1",
                  "children": [
                    {
                      "value": "self.available_spots += 1",
                      "children": [
                        {
                          "value": "self.available_spots += 1",
                          "children": [
                            {
                              "value": "self.available_spots",
                              "children": [
                                {
                                  "value": "self",
                                  "children": []
                                },
                                {
                                  "value": "available_spots",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "1",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def park_vehicle(self, vehicle):\n        spot = self._find_available_spot(vehicle)\n        if spot is None:\n            return None\n        else:\n            spot.park_vehicle(vehicle)\n            return spot",
              "children": [
                {
                  "value": "park_vehicle",
                  "children": []
                },
                {
                  "value": "(self, vehicle)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "vehicle",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "spot = self._find_available_spot(vehicle)\n        if spot is None:\n            return None\n        else:\n            spot.park_vehicle(vehicle)\n            return spot",
                  "children": [
                    {
                      "value": "spot = self._find_available_spot(vehicle)",
                      "children": [
                        {
                          "value": "spot = self._find_available_spot(vehicle)",
                          "children": [
                            {
                              "value": "spot",
                              "children": []
                            },
                            {
                              "value": "self._find_available_spot(vehicle)",
                              "children": [
                                {
                                  "value": "self._find_available_spot",
                                  "children": [
                                    {
                                      "value": "self",
                                      "children": []
                                    },
                                    {
                                      "value": "_find_available_spot",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(vehicle)",
                                  "children": [
                                    {
                                      "value": "vehicle",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "if spot is None:\n            return None\n        else:\n            spot.park_vehicle(vehicle)\n            return spot",
                      "children": [
                        {
                          "value": "spot is None",
                          "children": [
                            {
                              "value": "spot",
                              "children": []
                            },
                            {
                              "value": "None",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "return None",
                          "children": [
                            {
                              "value": "return None",
                              "children": [
                                {
                                  "value": "None",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "else:\n            spot.park_vehicle(vehicle)\n            return spot",
                          "children": [
                            {
                              "value": "spot.park_vehicle(vehicle)\n            return spot",
                              "children": [
                                {
                                  "value": "spot.park_vehicle(vehicle)",
                                  "children": [
                                    {
                                      "value": "spot.park_vehicle(vehicle)",
                                      "children": [
                                        {
                                          "value": "spot.park_vehicle",
                                          "children": [
                                            {
                                              "value": "spot",
                                              "children": []
                                            },
                                            {
                                              "value": "park_vehicle",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(vehicle)",
                                          "children": [
                                            {
                                              "value": "vehicle",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "return spot",
                                  "children": [
                                    {
                                      "value": "spot",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def _find_available_spot(self, vehicle):\n        \"\"\"Find an available spot where vehicle can fit, or return None\"\"\"\n        pass",
              "children": [
                {
                  "value": "_find_available_spot",
                  "children": []
                },
                {
                  "value": "(self, vehicle)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "vehicle",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "\"\"\"Find an available spot where vehicle can fit, or return None\"\"\"\n        pass",
                  "children": [
                    {
                      "value": "\"\"\"Find an available spot where vehicle can fit, or return None\"\"\"",
                      "children": [
                        {
                          "value": "\"\"\"Find an available spot where vehicle can fit, or return None\"\"\"",
                          "children": [
                            {
                              "value": "\"\"\"",
                              "children": []
                            },
                            {
                              "value": "Find an available spot where vehicle can fit, or return None",
                              "children": []
                            },
                            {
                              "value": "\"\"\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "pass",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "def _park_starting_at_spot(self, spot, vehicle):\n        \"\"\"Occupy starting at spot.spot_number to vehicle.spot_size.\"\"\"\n        pass",
              "children": [
                {
                  "value": "_park_starting_at_spot",
                  "children": []
                },
                {
                  "value": "(self, spot, vehicle)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "spot",
                      "children": []
                    },
                    {
                      "value": "vehicle",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "\"\"\"Occupy starting at spot.spot_number to vehicle.spot_size.\"\"\"\n        pass",
                  "children": [
                    {
                      "value": "\"\"\"Occupy starting at spot.spot_number to vehicle.spot_size.\"\"\"",
                      "children": [
                        {
                          "value": "\"\"\"Occupy starting at spot.spot_number to vehicle.spot_size.\"\"\"",
                          "children": [
                            {
                              "value": "\"\"\"",
                              "children": []
                            },
                            {
                              "value": "Occupy starting at spot.spot_number to vehicle.spot_size.",
                              "children": []
                            },
                            {
                              "value": "\"\"\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "pass",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "class ParkingSpot(object):\n\n    def __init__(self, level, row, spot_number, spot_size, vehicle_size):\n        self.level = level\n        self.row = row\n        self.spot_number = spot_number\n        self.spot_size = spot_size\n        self.vehicle_size = vehicle_size\n        self.vehicle = None\n\n    def is_available(self):\n        return True if self.vehicle is None else False\n\n    def can_fit_vehicle(self, vehicle):\n        if self.vehicle is not None:\n            return False\n        return vehicle.can_fit_in_spot(self)\n\n    def park_vehicle(self, vehicle):\n        pass\n\n    def remove_vehicle(self):\n        pass",
      "children": [
        {
          "value": "ParkingSpot",
          "children": []
        },
        {
          "value": "(object)",
          "children": [
            {
              "value": "object",
              "children": []
            }
          ]
        },
        {
          "value": "def __init__(self, level, row, spot_number, spot_size, vehicle_size):\n        self.level = level\n        self.row = row\n        self.spot_number = spot_number\n        self.spot_size = spot_size\n        self.vehicle_size = vehicle_size\n        self.vehicle = None\n\n    def is_available(self):\n        return True if self.vehicle is None else False\n\n    def can_fit_vehicle(self, vehicle):\n        if self.vehicle is not None:\n            return False\n        return vehicle.can_fit_in_spot(self)\n\n    def park_vehicle(self, vehicle):\n        pass\n\n    def remove_vehicle(self):\n        pass",
          "children": [
            {
              "value": "def __init__(self, level, row, spot_number, spot_size, vehicle_size):\n        self.level = level\n        self.row = row\n        self.spot_number = spot_number\n        self.spot_size = spot_size\n        self.vehicle_size = vehicle_size\n        self.vehicle = None",
              "children": [
                {
                  "value": "__init__",
                  "children": []
                },
                {
                  "value": "(self, level, row, spot_number, spot_size, vehicle_size)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "level",
                      "children": []
                    },
                    {
                      "value": "row",
                      "children": []
                    },
                    {
                      "value": "spot_number",
                      "children": []
                    },
                    {
                      "value": "spot_size",
                      "children": []
                    },
                    {
                      "value": "vehicle_size",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "self.level = level\n        self.row = row\n        self.spot_number = spot_number\n        self.spot_size = spot_size\n        self.vehicle_size = vehicle_size\n        self.vehicle = None",
                  "children": [
                    {
                      "value": "self.level = level",
                      "children": [
                        {
                          "value": "self.level = level",
                          "children": [
                            {
                              "value": "self.level",
                              "children": [
                                {
                                  "value": "self",
                                  "children": []
                                },
                                {
                                  "value": "level",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "level",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "self.row = row",
                      "children": [
                        {
                          "value": "self.row = row",
                          "children": [
                            {
                              "value": "self.row",
                              "children": [
                                {
                                  "value": "self",
                                  "children": []
                                },
                                {
                                  "value": "row",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "row",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "self.spot_number = spot_number",
                      "children": [
                        {
                          "value": "self.spot_number = spot_number",
                          "children": [
                            {
                              "value": "self.spot_number",
                              "children": [
                                {
                                  "value": "self",
                                  "children": []
                                },
                                {
                                  "value": "spot_number",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "spot_number",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "self.spot_size = spot_size",
                      "children": [
                        {
                          "value": "self.spot_size = spot_size",
                          "children": [
                            {
                              "value": "self.spot_size",
                              "children": [
                                {
                                  "value": "self",
                                  "children": []
                                },
                                {
                                  "value": "spot_size",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "spot_size",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "self.vehicle_size = vehicle_size",
                      "children": [
                        {
                          "value": "self.vehicle_size = vehicle_size",
                          "children": [
                            {
                              "value": "self.vehicle_size",
                              "children": [
                                {
                                  "value": "self",
                                  "children": []
                                },
                                {
                                  "value": "vehicle_size",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "vehicle_size",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "self.vehicle = None",
                      "children": [
                        {
                          "value": "self.vehicle = None",
                          "children": [
                            {
                              "value": "self.vehicle",
                              "children": [
                                {
                                  "value": "self",
                                  "children": []
                                },
                                {
                                  "value": "vehicle",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "None",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def is_available(self):\n        return True if self.vehicle is None else False",
              "children": [
                {
                  "value": "is_available",
                  "children": []
                },
                {
                  "value": "(self)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "return True if self.vehicle is None else False",
                  "children": [
                    {
                      "value": "return True if self.vehicle is None else False",
                      "children": [
                        {
                          "value": "True if self.vehicle is None else False",
                          "children": [
                            {
                              "value": "True",
                              "children": []
                            },
                            {
                              "value": "self.vehicle is None",
                              "children": [
                                {
                                  "value": "self.vehicle",
                                  "children": [
                                    {
                                      "value": "self",
                                      "children": []
                                    },
                                    {
                                      "value": "vehicle",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "None",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "False",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def can_fit_vehicle(self, vehicle):\n        if self.vehicle is not None:\n            return False\n        return vehicle.can_fit_in_spot(self)",
              "children": [
                {
                  "value": "can_fit_vehicle",
                  "children": []
                },
                {
                  "value": "(self, vehicle)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "vehicle",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "if self.vehicle is not None:\n            return False\n        return vehicle.can_fit_in_spot(self)",
                  "children": [
                    {
                      "value": "if self.vehicle is not None:\n            return False",
                      "children": [
                        {
                          "value": "self.vehicle is not None",
                          "children": [
                            {
                              "value": "self.vehicle",
                              "children": [
                                {
                                  "value": "self",
                                  "children": []
                                },
                                {
                                  "value": "vehicle",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "None",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "return False",
                          "children": [
                            {
                              "value": "return False",
                              "children": [
                                {
                                  "value": "False",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "return vehicle.can_fit_in_spot(self)",
                      "children": [
                        {
                          "value": "vehicle.can_fit_in_spot(self)",
                          "children": [
                            {
                              "value": "vehicle.can_fit_in_spot",
                              "children": [
                                {
                                  "value": "vehicle",
                                  "children": []
                                },
                                {
                                  "value": "can_fit_in_spot",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(self)",
                              "children": [
                                {
                                  "value": "self",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def park_vehicle(self, vehicle):\n        pass",
              "children": [
                {
                  "value": "park_vehicle",
                  "children": []
                },
                {
                  "value": "(self, vehicle)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "vehicle",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "pass",
                  "children": [
                    {
                      "value": "pass",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "def remove_vehicle(self):\n        pass",
              "children": [
                {
                  "value": "remove_vehicle",
                  "children": []
                },
                {
                  "value": "(self)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "pass",
                  "children": [
                    {
                      "value": "pass",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}