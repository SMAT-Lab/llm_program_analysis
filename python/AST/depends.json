{
  "value": "import fastapi\n\nfrom .config import Settings\nfrom .middleware import auth_middleware\nfrom .models import DEFAULT_USER_ID, User\n\n\ndef requires_user(payload: dict = fastapi.Depends(auth_middleware)) -> User:\n    return verify_user(payload, admin_only=False)\n\n\ndef requires_admin_user(\n    payload: dict = fastapi.Depends(auth_middleware),\n) -> User:\n    return verify_user(payload, admin_only=True)\n\n\ndef verify_user(payload: dict | None, admin_only: bool) -> User:\n    if not payload:\n        if Settings.ENABLE_AUTH:\n            raise fastapi.HTTPException(\n                status_code=401, detail=\"Authorization header is missing\"\n            )\n        # This handles the case when authentication is disabled\n        payload = {\"sub\": DEFAULT_USER_ID, \"role\": \"admin\"}\n\n    user_id = payload.get(\"sub\")\n\n    if not user_id:\n        raise fastapi.HTTPException(\n            status_code=401, detail=\"User ID not found in token\"\n        )\n\n    if admin_only and payload[\"role\"] != \"admin\":\n        raise fastapi.HTTPException(status_code=403, detail=\"Admin access required\")\n\n    return User.from_payload(payload)\n\n\ndef get_user_id(payload: dict = fastapi.Depends(auth_middleware)) -> str:\n    user_id = payload.get(\"sub\")\n    if not user_id:\n        raise fastapi.HTTPException(\n            status_code=401, detail=\"User ID not found in token\"\n        )\n    return user_id",
  "children": [
    {
      "value": "import fastapi",
      "children": [
        {
          "value": "fastapi",
          "children": [
            {
              "value": "fastapi",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from .config import Settings",
      "children": [
        {
          "value": ".config",
          "children": [
            {
              "value": ".",
              "children": []
            },
            {
              "value": "config",
              "children": [
                {
                  "value": "config",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "Settings",
          "children": [
            {
              "value": "Settings",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from .middleware import auth_middleware",
      "children": [
        {
          "value": ".middleware",
          "children": [
            {
              "value": ".",
              "children": []
            },
            {
              "value": "middleware",
              "children": [
                {
                  "value": "middleware",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "auth_middleware",
          "children": [
            {
              "value": "auth_middleware",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from .models import DEFAULT_USER_ID, User",
      "children": [
        {
          "value": ".models",
          "children": [
            {
              "value": ".",
              "children": []
            },
            {
              "value": "models",
              "children": [
                {
                  "value": "models",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "DEFAULT_USER_ID",
          "children": [
            {
              "value": "DEFAULT_USER_ID",
              "children": []
            }
          ]
        },
        {
          "value": "User",
          "children": [
            {
              "value": "User",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "def requires_user(payload: dict = fastapi.Depends(auth_middleware)) -> User:\n    return verify_user(payload, admin_only=False)",
      "children": [
        {
          "value": "requires_user",
          "children": []
        },
        {
          "value": "(payload: dict = fastapi.Depends(auth_middleware))",
          "children": [
            {
              "value": "payload: dict = fastapi.Depends(auth_middleware)",
              "children": [
                {
                  "value": "payload",
                  "children": []
                },
                {
                  "value": "dict",
                  "children": [
                    {
                      "value": "dict",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "fastapi.Depends(auth_middleware)",
                  "children": [
                    {
                      "value": "fastapi.Depends",
                      "children": [
                        {
                          "value": "fastapi",
                          "children": []
                        },
                        {
                          "value": "Depends",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "(auth_middleware)",
                      "children": [
                        {
                          "value": "auth_middleware",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "User",
          "children": [
            {
              "value": "User",
              "children": []
            }
          ]
        },
        {
          "value": "return verify_user(payload, admin_only=False)",
          "children": [
            {
              "value": "return verify_user(payload, admin_only=False)",
              "children": [
                {
                  "value": "verify_user(payload, admin_only=False)",
                  "children": [
                    {
                      "value": "verify_user",
                      "children": []
                    },
                    {
                      "value": "(payload, admin_only=False)",
                      "children": [
                        {
                          "value": "payload",
                          "children": []
                        },
                        {
                          "value": "admin_only=False",
                          "children": [
                            {
                              "value": "admin_only",
                              "children": []
                            },
                            {
                              "value": "False",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "def requires_admin_user(\n    payload: dict = fastapi.Depends(auth_middleware),\n) -> User:\n    return verify_user(payload, admin_only=True)",
      "children": [
        {
          "value": "requires_admin_user",
          "children": []
        },
        {
          "value": "(\n    payload: dict = fastapi.Depends(auth_middleware),\n)",
          "children": [
            {
              "value": "payload: dict = fastapi.Depends(auth_middleware)",
              "children": [
                {
                  "value": "payload",
                  "children": []
                },
                {
                  "value": "dict",
                  "children": [
                    {
                      "value": "dict",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "fastapi.Depends(auth_middleware)",
                  "children": [
                    {
                      "value": "fastapi.Depends",
                      "children": [
                        {
                          "value": "fastapi",
                          "children": []
                        },
                        {
                          "value": "Depends",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "(auth_middleware)",
                      "children": [
                        {
                          "value": "auth_middleware",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "User",
          "children": [
            {
              "value": "User",
              "children": []
            }
          ]
        },
        {
          "value": "return verify_user(payload, admin_only=True)",
          "children": [
            {
              "value": "return verify_user(payload, admin_only=True)",
              "children": [
                {
                  "value": "verify_user(payload, admin_only=True)",
                  "children": [
                    {
                      "value": "verify_user",
                      "children": []
                    },
                    {
                      "value": "(payload, admin_only=True)",
                      "children": [
                        {
                          "value": "payload",
                          "children": []
                        },
                        {
                          "value": "admin_only=True",
                          "children": [
                            {
                              "value": "admin_only",
                              "children": []
                            },
                            {
                              "value": "True",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "def verify_user(payload: dict | None, admin_only: bool) -> User:\n    if not payload:\n        if Settings.ENABLE_AUTH:\n            raise fastapi.HTTPException(\n                status_code=401, detail=\"Authorization header is missing\"\n            )\n        # This handles the case when authentication is disabled\n        payload = {\"sub\": DEFAULT_USER_ID, \"role\": \"admin\"}\n\n    user_id = payload.get(\"sub\")\n\n    if not user_id:\n        raise fastapi.HTTPException(\n            status_code=401, detail=\"User ID not found in token\"\n        )\n\n    if admin_only and payload[\"role\"] != \"admin\":\n        raise fastapi.HTTPException(status_code=403, detail=\"Admin access required\")\n\n    return User.from_payload(payload)",
      "children": [
        {
          "value": "verify_user",
          "children": []
        },
        {
          "value": "(payload: dict | None, admin_only: bool)",
          "children": [
            {
              "value": "payload: dict | None",
              "children": [
                {
                  "value": "payload",
                  "children": []
                },
                {
                  "value": "dict | None",
                  "children": [
                    {
                      "value": "dict | None",
                      "children": [
                        {
                          "value": "dict",
                          "children": []
                        },
                        {
                          "value": "None",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "admin_only: bool",
              "children": [
                {
                  "value": "admin_only",
                  "children": []
                },
                {
                  "value": "bool",
                  "children": [
                    {
                      "value": "bool",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "User",
          "children": [
            {
              "value": "User",
              "children": []
            }
          ]
        },
        {
          "value": "if not payload:\n        if Settings.ENABLE_AUTH:\n            raise fastapi.HTTPException(\n                status_code=401, detail=\"Authorization header is missing\"\n            )\n        # This handles the case when authentication is disabled\n        payload = {\"sub\": DEFAULT_USER_ID, \"role\": \"admin\"}\n\n    user_id = payload.get(\"sub\")\n\n    if not user_id:\n        raise fastapi.HTTPException(\n            status_code=401, detail=\"User ID not found in token\"\n        )\n\n    if admin_only and payload[\"role\"] != \"admin\":\n        raise fastapi.HTTPException(status_code=403, detail=\"Admin access required\")\n\n    return User.from_payload(payload)",
          "children": [
            {
              "value": "if not payload:\n        if Settings.ENABLE_AUTH:\n            raise fastapi.HTTPException(\n                status_code=401, detail=\"Authorization header is missing\"\n            )\n        # This handles the case when authentication is disabled\n        payload = {\"sub\": DEFAULT_USER_ID, \"role\": \"admin\"}",
              "children": [
                {
                  "value": "not payload",
                  "children": [
                    {
                      "value": "payload",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "if Settings.ENABLE_AUTH:\n            raise fastapi.HTTPException(\n                status_code=401, detail=\"Authorization header is missing\"\n            )\n        # This handles the case when authentication is disabled\n        payload = {\"sub\": DEFAULT_USER_ID, \"role\": \"admin\"}",
                  "children": [
                    {
                      "value": "if Settings.ENABLE_AUTH:\n            raise fastapi.HTTPException(\n                status_code=401, detail=\"Authorization header is missing\"\n            )",
                      "children": [
                        {
                          "value": "Settings.ENABLE_AUTH",
                          "children": [
                            {
                              "value": "Settings",
                              "children": []
                            },
                            {
                              "value": "ENABLE_AUTH",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "raise fastapi.HTTPException(\n                status_code=401, detail=\"Authorization header is missing\"\n            )",
                          "children": [
                            {
                              "value": "raise fastapi.HTTPException(\n                status_code=401, detail=\"Authorization header is missing\"\n            )",
                              "children": [
                                {
                                  "value": "fastapi.HTTPException(\n                status_code=401, detail=\"Authorization header is missing\"\n            )",
                                  "children": [
                                    {
                                      "value": "fastapi.HTTPException",
                                      "children": [
                                        {
                                          "value": "fastapi",
                                          "children": []
                                        },
                                        {
                                          "value": "HTTPException",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(\n                status_code=401, detail=\"Authorization header is missing\"\n            )",
                                      "children": [
                                        {
                                          "value": "status_code=401",
                                          "children": [
                                            {
                                              "value": "status_code",
                                              "children": []
                                            },
                                            {
                                              "value": "401",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "detail=\"Authorization header is missing\"",
                                          "children": [
                                            {
                                              "value": "detail",
                                              "children": []
                                            },
                                            {
                                              "value": "\"Authorization header is missing\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "Authorization header is missing",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "# This handles the case when authentication is disabled",
                      "children": []
                    },
                    {
                      "value": "payload = {\"sub\": DEFAULT_USER_ID, \"role\": \"admin\"}",
                      "children": [
                        {
                          "value": "payload = {\"sub\": DEFAULT_USER_ID, \"role\": \"admin\"}",
                          "children": [
                            {
                              "value": "payload",
                              "children": []
                            },
                            {
                              "value": "{\"sub\": DEFAULT_USER_ID, \"role\": \"admin\"}",
                              "children": [
                                {
                                  "value": "\"sub\": DEFAULT_USER_ID",
                                  "children": [
                                    {
                                      "value": "\"sub\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "sub",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "DEFAULT_USER_ID",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "\"role\": \"admin\"",
                                  "children": [
                                    {
                                      "value": "\"role\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "role",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"admin\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "admin",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "user_id = payload.get(\"sub\")",
              "children": [
                {
                  "value": "user_id = payload.get(\"sub\")",
                  "children": [
                    {
                      "value": "user_id",
                      "children": []
                    },
                    {
                      "value": "payload.get(\"sub\")",
                      "children": [
                        {
                          "value": "payload.get",
                          "children": [
                            {
                              "value": "payload",
                              "children": []
                            },
                            {
                              "value": "get",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(\"sub\")",
                          "children": [
                            {
                              "value": "\"sub\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "sub",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "if not user_id:\n        raise fastapi.HTTPException(\n            status_code=401, detail=\"User ID not found in token\"\n        )",
              "children": [
                {
                  "value": "not user_id",
                  "children": [
                    {
                      "value": "user_id",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "raise fastapi.HTTPException(\n            status_code=401, detail=\"User ID not found in token\"\n        )",
                  "children": [
                    {
                      "value": "raise fastapi.HTTPException(\n            status_code=401, detail=\"User ID not found in token\"\n        )",
                      "children": [
                        {
                          "value": "fastapi.HTTPException(\n            status_code=401, detail=\"User ID not found in token\"\n        )",
                          "children": [
                            {
                              "value": "fastapi.HTTPException",
                              "children": [
                                {
                                  "value": "fastapi",
                                  "children": []
                                },
                                {
                                  "value": "HTTPException",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\n            status_code=401, detail=\"User ID not found in token\"\n        )",
                              "children": [
                                {
                                  "value": "status_code=401",
                                  "children": [
                                    {
                                      "value": "status_code",
                                      "children": []
                                    },
                                    {
                                      "value": "401",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "detail=\"User ID not found in token\"",
                                  "children": [
                                    {
                                      "value": "detail",
                                      "children": []
                                    },
                                    {
                                      "value": "\"User ID not found in token\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "User ID not found in token",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "if admin_only and payload[\"role\"] != \"admin\":\n        raise fastapi.HTTPException(status_code=403, detail=\"Admin access required\")",
              "children": [
                {
                  "value": "admin_only and payload[\"role\"] != \"admin\"",
                  "children": [
                    {
                      "value": "admin_only",
                      "children": []
                    },
                    {
                      "value": "payload[\"role\"] != \"admin\"",
                      "children": [
                        {
                          "value": "payload[\"role\"]",
                          "children": [
                            {
                              "value": "payload",
                              "children": []
                            },
                            {
                              "value": "\"role\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "role",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "\"admin\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "admin",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "raise fastapi.HTTPException(status_code=403, detail=\"Admin access required\")",
                  "children": [
                    {
                      "value": "raise fastapi.HTTPException(status_code=403, detail=\"Admin access required\")",
                      "children": [
                        {
                          "value": "fastapi.HTTPException(status_code=403, detail=\"Admin access required\")",
                          "children": [
                            {
                              "value": "fastapi.HTTPException",
                              "children": [
                                {
                                  "value": "fastapi",
                                  "children": []
                                },
                                {
                                  "value": "HTTPException",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(status_code=403, detail=\"Admin access required\")",
                              "children": [
                                {
                                  "value": "status_code=403",
                                  "children": [
                                    {
                                      "value": "status_code",
                                      "children": []
                                    },
                                    {
                                      "value": "403",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "detail=\"Admin access required\"",
                                  "children": [
                                    {
                                      "value": "detail",
                                      "children": []
                                    },
                                    {
                                      "value": "\"Admin access required\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "Admin access required",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "return User.from_payload(payload)",
              "children": [
                {
                  "value": "User.from_payload(payload)",
                  "children": [
                    {
                      "value": "User.from_payload",
                      "children": [
                        {
                          "value": "User",
                          "children": []
                        },
                        {
                          "value": "from_payload",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "(payload)",
                      "children": [
                        {
                          "value": "payload",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "def get_user_id(payload: dict = fastapi.Depends(auth_middleware)) -> str:\n    user_id = payload.get(\"sub\")\n    if not user_id:\n        raise fastapi.HTTPException(\n            status_code=401, detail=\"User ID not found in token\"\n        )\n    return user_id",
      "children": [
        {
          "value": "get_user_id",
          "children": []
        },
        {
          "value": "(payload: dict = fastapi.Depends(auth_middleware))",
          "children": [
            {
              "value": "payload: dict = fastapi.Depends(auth_middleware)",
              "children": [
                {
                  "value": "payload",
                  "children": []
                },
                {
                  "value": "dict",
                  "children": [
                    {
                      "value": "dict",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "fastapi.Depends(auth_middleware)",
                  "children": [
                    {
                      "value": "fastapi.Depends",
                      "children": [
                        {
                          "value": "fastapi",
                          "children": []
                        },
                        {
                          "value": "Depends",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "(auth_middleware)",
                      "children": [
                        {
                          "value": "auth_middleware",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "str",
          "children": [
            {
              "value": "str",
              "children": []
            }
          ]
        },
        {
          "value": "user_id = payload.get(\"sub\")\n    if not user_id:\n        raise fastapi.HTTPException(\n            status_code=401, detail=\"User ID not found in token\"\n        )\n    return user_id",
          "children": [
            {
              "value": "user_id = payload.get(\"sub\")",
              "children": [
                {
                  "value": "user_id = payload.get(\"sub\")",
                  "children": [
                    {
                      "value": "user_id",
                      "children": []
                    },
                    {
                      "value": "payload.get(\"sub\")",
                      "children": [
                        {
                          "value": "payload.get",
                          "children": [
                            {
                              "value": "payload",
                              "children": []
                            },
                            {
                              "value": "get",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(\"sub\")",
                          "children": [
                            {
                              "value": "\"sub\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "sub",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "if not user_id:\n        raise fastapi.HTTPException(\n            status_code=401, detail=\"User ID not found in token\"\n        )",
              "children": [
                {
                  "value": "not user_id",
                  "children": [
                    {
                      "value": "user_id",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "raise fastapi.HTTPException(\n            status_code=401, detail=\"User ID not found in token\"\n        )",
                  "children": [
                    {
                      "value": "raise fastapi.HTTPException(\n            status_code=401, detail=\"User ID not found in token\"\n        )",
                      "children": [
                        {
                          "value": "fastapi.HTTPException(\n            status_code=401, detail=\"User ID not found in token\"\n        )",
                          "children": [
                            {
                              "value": "fastapi.HTTPException",
                              "children": [
                                {
                                  "value": "fastapi",
                                  "children": []
                                },
                                {
                                  "value": "HTTPException",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\n            status_code=401, detail=\"User ID not found in token\"\n        )",
                              "children": [
                                {
                                  "value": "status_code=401",
                                  "children": [
                                    {
                                      "value": "status_code",
                                      "children": []
                                    },
                                    {
                                      "value": "401",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "detail=\"User ID not found in token\"",
                                  "children": [
                                    {
                                      "value": "detail",
                                      "children": []
                                    },
                                    {
                                      "value": "\"User ID not found in token\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "User ID not found in token",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "return user_id",
              "children": [
                {
                  "value": "user_id",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}