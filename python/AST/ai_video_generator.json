{
  "value": "import logging\nimport time\nfrom enum import Enum\nfrom typing import Any\n\nimport httpx\n\nfrom backend.blocks.fal._auth import (\n    TEST_CREDENTIALS,\n    TEST_CREDENTIALS_INPUT,\n    FalCredentials,\n    FalCredentialsField,\n    FalCredentialsInput,\n)\nfrom backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import SchemaField\n\nlogger = logging.getLogger(__name__)\n\n\nclass FalModel(str, Enum):\n    MOCHI = \"fal-ai/mochi-v1\"\n    LUMA = \"fal-ai/luma-dream-machine\"\n\n\nclass AIVideoGeneratorBlock(Block):\n    class Input(BlockSchema):\n        prompt: str = SchemaField(\n            description=\"Description of the video to generate.\",\n            placeholder=\"A dog running in a field.\",\n        )\n        model: FalModel = SchemaField(\n            title=\"FAL Model\",\n            default=FalModel.MOCHI,\n            description=\"The FAL model to use for video generation.\",\n        )\n        credentials: FalCredentialsInput = FalCredentialsField()\n\n    class Output(BlockSchema):\n        video_url: str = SchemaField(description=\"The URL of the generated video.\")\n        error: str = SchemaField(\n            description=\"Error message if video generation failed.\"\n        )\n        logs: list[str] = SchemaField(\n            description=\"Generation progress logs.\", optional=True\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"530cf046-2ce0-4854-ae2c-659db17c7a46\",\n            description=\"Generate videos using FAL AI models.\",\n            categories={BlockCategory.AI},\n            input_schema=self.Input,\n            output_schema=self.Output,\n            test_input={\n                \"prompt\": \"A dog running in a field.\",\n                \"model\": FalModel.MOCHI,\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n            },\n            test_credentials=TEST_CREDENTIALS,\n            test_output=[(\"video_url\", \"https://fal.media/files/example/video.mp4\")],\n            test_mock={\n                \"generate_video\": lambda *args, **kwargs: \"https://fal.media/files/example/video.mp4\"\n            },\n        )\n\n    def _get_headers(self, api_key: str) -> dict[str, str]:\n        \"\"\"Get headers for FAL API requests.\"\"\"\n        return {\n            \"Authorization\": f\"Key {api_key}\",\n            \"Content-Type\": \"application/json\",\n        }\n\n    def _submit_request(\n        self, url: str, headers: dict[str, str], data: dict[str, Any]\n    ) -> dict[str, Any]:\n        \"\"\"Submit a request to the FAL API.\"\"\"\n        try:\n            response = httpx.post(url, headers=headers, json=data)\n            response.raise_for_status()\n            return response.json()\n        except httpx.HTTPError as e:\n            logger.error(f\"FAL API request failed: {str(e)}\")\n            raise RuntimeError(f\"Failed to submit request: {str(e)}\")\n\n    def _poll_status(self, status_url: str, headers: dict[str, str]) -> dict[str, Any]:\n        \"\"\"Poll the status endpoint until completion or failure.\"\"\"\n        try:\n            response = httpx.get(status_url, headers=headers)\n            response.raise_for_status()\n            return response.json()\n        except httpx.HTTPError as e:\n            logger.error(f\"Failed to get status: {str(e)}\")\n            raise RuntimeError(f\"Failed to get status: {str(e)}\")\n\n    def generate_video(self, input_data: Input, credentials: FalCredentials) -> str:\n        \"\"\"Generate video using the specified FAL model.\"\"\"\n        base_url = \"https://queue.fal.run\"\n        api_key = credentials.api_key.get_secret_value()\n        headers = self._get_headers(api_key)\n\n        # Submit generation request\n        submit_url = f\"{base_url}/{input_data.model.value}\"\n        submit_data = {\"prompt\": input_data.prompt}\n\n        seen_logs = set()\n\n        try:\n            # Submit request to queue\n            submit_response = httpx.post(submit_url, headers=headers, json=submit_data)\n            submit_response.raise_for_status()\n            request_data = submit_response.json()\n\n            # Get request_id and urls from initial response\n            request_id = request_data.get(\"request_id\")\n            status_url = request_data.get(\"status_url\")\n            result_url = request_data.get(\"response_url\")\n\n            if not all([request_id, status_url, result_url]):\n                raise ValueError(\"Missing required data in submission response\")\n\n            # Poll for status with exponential backoff\n            max_attempts = 30\n            attempt = 0\n            base_wait_time = 5\n\n            while attempt < max_attempts:\n                status_response = httpx.get(f\"{status_url}?logs=1\", headers=headers)\n                status_response.raise_for_status()\n                status_data = status_response.json()\n\n                # Process new logs only\n                logs = status_data.get(\"logs\", [])\n                if logs and isinstance(logs, list):\n                    for log in logs:\n                        if isinstance(log, dict):\n                            # Create a unique key for this log entry\n                            log_key = (\n                                f\"{log.get('timestamp', '')}-{log.get('message', '')}\"\n                            )\n                            if log_key not in seen_logs:\n                                seen_logs.add(log_key)\n                                message = log.get(\"message\", \"\")\n                                if message:\n                                    logger.debug(\n                                        f\"[FAL Generation] [{log.get('level', 'INFO')}] [{log.get('source', '')}] [{log.get('timestamp', '')}] {message}\"\n                                    )\n\n                status = status_data.get(\"status\")\n                if status == \"COMPLETED\":\n                    # Get the final result\n                    result_response = httpx.get(result_url, headers=headers)\n                    result_response.raise_for_status()\n                    result_data = result_response.json()\n\n                    if \"video\" not in result_data or not isinstance(\n                        result_data[\"video\"], dict\n                    ):\n                        raise ValueError(\"Invalid response format - missing video data\")\n\n                    video_url = result_data[\"video\"].get(\"url\")\n                    if not video_url:\n                        raise ValueError(\"No video URL in response\")\n\n                    return video_url\n\n                elif status == \"FAILED\":\n                    error_msg = status_data.get(\"error\", \"No error details provided\")\n                    raise RuntimeError(f\"Video generation failed: {error_msg}\")\n                elif status == \"IN_QUEUE\":\n                    position = status_data.get(\"queue_position\", \"unknown\")\n                    logger.debug(\n                        f\"[FAL Generation] Status: In queue, position: {position}\"\n                    )\n                elif status == \"IN_PROGRESS\":\n                    logger.debug(\n                        \"[FAL Generation] Status: Request is being processed...\"\n                    )\n                else:\n                    logger.info(f\"[FAL Generation] Status: Unknown status: {status}\")\n\n                wait_time = min(base_wait_time * (2**attempt), 60)  # Cap at 60 seconds\n                time.sleep(wait_time)\n                attempt += 1\n\n            raise RuntimeError(\"Maximum polling attempts reached\")\n\n        except httpx.HTTPError as e:\n            raise RuntimeError(f\"API request failed: {str(e)}\")\n\n    def run(\n        self, input_data: Input, *, credentials: FalCredentials, **kwargs\n    ) -> BlockOutput:\n        try:\n            video_url = self.generate_video(input_data, credentials)\n            yield \"video_url\", video_url\n        except Exception as e:\n            error_message = str(e)\n            yield \"error\", error_message",
  "children": [
    {
      "value": "import logging",
      "children": [
        {
          "value": "logging",
          "children": [
            {
              "value": "logging",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "import time",
      "children": [
        {
          "value": "time",
          "children": [
            {
              "value": "time",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from enum import Enum",
      "children": [
        {
          "value": "enum",
          "children": [
            {
              "value": "enum",
              "children": []
            }
          ]
        },
        {
          "value": "Enum",
          "children": [
            {
              "value": "Enum",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from typing import Any",
      "children": [
        {
          "value": "typing",
          "children": [
            {
              "value": "typing",
              "children": []
            }
          ]
        },
        {
          "value": "Any",
          "children": [
            {
              "value": "Any",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "import httpx",
      "children": [
        {
          "value": "httpx",
          "children": [
            {
              "value": "httpx",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.blocks.fal._auth import (\n    TEST_CREDENTIALS,\n    TEST_CREDENTIALS_INPUT,\n    FalCredentials,\n    FalCredentialsField,\n    FalCredentialsInput,\n)",
      "children": [
        {
          "value": "backend.blocks.fal._auth",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "blocks",
              "children": []
            },
            {
              "value": "fal",
              "children": []
            },
            {
              "value": "_auth",
              "children": []
            }
          ]
        },
        {
          "value": "TEST_CREDENTIALS",
          "children": [
            {
              "value": "TEST_CREDENTIALS",
              "children": []
            }
          ]
        },
        {
          "value": "TEST_CREDENTIALS_INPUT",
          "children": [
            {
              "value": "TEST_CREDENTIALS_INPUT",
              "children": []
            }
          ]
        },
        {
          "value": "FalCredentials",
          "children": [
            {
              "value": "FalCredentials",
              "children": []
            }
          ]
        },
        {
          "value": "FalCredentialsField",
          "children": [
            {
              "value": "FalCredentialsField",
              "children": []
            }
          ]
        },
        {
          "value": "FalCredentialsInput",
          "children": [
            {
              "value": "FalCredentialsInput",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema",
      "children": [
        {
          "value": "backend.data.block",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "data",
              "children": []
            },
            {
              "value": "block",
              "children": []
            }
          ]
        },
        {
          "value": "Block",
          "children": [
            {
              "value": "Block",
              "children": []
            }
          ]
        },
        {
          "value": "BlockCategory",
          "children": [
            {
              "value": "BlockCategory",
              "children": []
            }
          ]
        },
        {
          "value": "BlockOutput",
          "children": [
            {
              "value": "BlockOutput",
              "children": []
            }
          ]
        },
        {
          "value": "BlockSchema",
          "children": [
            {
              "value": "BlockSchema",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.data.model import SchemaField",
      "children": [
        {
          "value": "backend.data.model",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "data",
              "children": []
            },
            {
              "value": "model",
              "children": []
            }
          ]
        },
        {
          "value": "SchemaField",
          "children": [
            {
              "value": "SchemaField",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "logger = logging.getLogger(__name__)",
      "children": [
        {
          "value": "logger = logging.getLogger(__name__)",
          "children": [
            {
              "value": "logger",
              "children": []
            },
            {
              "value": "logging.getLogger(__name__)",
              "children": [
                {
                  "value": "logging.getLogger",
                  "children": [
                    {
                      "value": "logging",
                      "children": []
                    },
                    {
                      "value": "getLogger",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "(__name__)",
                  "children": [
                    {
                      "value": "__name__",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "class FalModel(str, Enum):\n    MOCHI = \"fal-ai/mochi-v1\"\n    LUMA = \"fal-ai/luma-dream-machine\"",
      "children": [
        {
          "value": "FalModel",
          "children": []
        },
        {
          "value": "(str, Enum)",
          "children": [
            {
              "value": "str",
              "children": []
            },
            {
              "value": "Enum",
              "children": []
            }
          ]
        },
        {
          "value": "MOCHI = \"fal-ai/mochi-v1\"\n    LUMA = \"fal-ai/luma-dream-machine\"",
          "children": [
            {
              "value": "MOCHI = \"fal-ai/mochi-v1\"",
              "children": [
                {
                  "value": "MOCHI = \"fal-ai/mochi-v1\"",
                  "children": [
                    {
                      "value": "MOCHI",
                      "children": []
                    },
                    {
                      "value": "\"fal-ai/mochi-v1\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "fal-ai/mochi-v1",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "LUMA = \"fal-ai/luma-dream-machine\"",
              "children": [
                {
                  "value": "LUMA = \"fal-ai/luma-dream-machine\"",
                  "children": [
                    {
                      "value": "LUMA",
                      "children": []
                    },
                    {
                      "value": "\"fal-ai/luma-dream-machine\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "fal-ai/luma-dream-machine",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "class AIVideoGeneratorBlock(Block):\n    class Input(BlockSchema):\n        prompt: str = SchemaField(\n            description=\"Description of the video to generate.\",\n            placeholder=\"A dog running in a field.\",\n        )\n        model: FalModel = SchemaField(\n            title=\"FAL Model\",\n            default=FalModel.MOCHI,\n            description=\"The FAL model to use for video generation.\",\n        )\n        credentials: FalCredentialsInput = FalCredentialsField()\n\n    class Output(BlockSchema):\n        video_url: str = SchemaField(description=\"The URL of the generated video.\")\n        error: str = SchemaField(\n            description=\"Error message if video generation failed.\"\n        )\n        logs: list[str] = SchemaField(\n            description=\"Generation progress logs.\", optional=True\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"530cf046-2ce0-4854-ae2c-659db17c7a46\",\n            description=\"Generate videos using FAL AI models.\",\n            categories={BlockCategory.AI},\n            input_schema=self.Input,\n            output_schema=self.Output,\n            test_input={\n                \"prompt\": \"A dog running in a field.\",\n                \"model\": FalModel.MOCHI,\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n            },\n            test_credentials=TEST_CREDENTIALS,\n            test_output=[(\"video_url\", \"https://fal.media/files/example/video.mp4\")],\n            test_mock={\n                \"generate_video\": lambda *args, **kwargs: \"https://fal.media/files/example/video.mp4\"\n            },\n        )\n\n    def _get_headers(self, api_key: str) -> dict[str, str]:\n        \"\"\"Get headers for FAL API requests.\"\"\"\n        return {\n            \"Authorization\": f\"Key {api_key}\",\n            \"Content-Type\": \"application/json\",\n        }\n\n    def _submit_request(\n        self, url: str, headers: dict[str, str], data: dict[str, Any]\n    ) -> dict[str, Any]:\n        \"\"\"Submit a request to the FAL API.\"\"\"\n        try:\n            response = httpx.post(url, headers=headers, json=data)\n            response.raise_for_status()\n            return response.json()\n        except httpx.HTTPError as e:\n            logger.error(f\"FAL API request failed: {str(e)}\")\n            raise RuntimeError(f\"Failed to submit request: {str(e)}\")\n\n    def _poll_status(self, status_url: str, headers: dict[str, str]) -> dict[str, Any]:\n        \"\"\"Poll the status endpoint until completion or failure.\"\"\"\n        try:\n            response = httpx.get(status_url, headers=headers)\n            response.raise_for_status()\n            return response.json()\n        except httpx.HTTPError as e:\n            logger.error(f\"Failed to get status: {str(e)}\")\n            raise RuntimeError(f\"Failed to get status: {str(e)}\")\n\n    def generate_video(self, input_data: Input, credentials: FalCredentials) -> str:\n        \"\"\"Generate video using the specified FAL model.\"\"\"\n        base_url = \"https://queue.fal.run\"\n        api_key = credentials.api_key.get_secret_value()\n        headers = self._get_headers(api_key)\n\n        # Submit generation request\n        submit_url = f\"{base_url}/{input_data.model.value}\"\n        submit_data = {\"prompt\": input_data.prompt}\n\n        seen_logs = set()\n\n        try:\n            # Submit request to queue\n            submit_response = httpx.post(submit_url, headers=headers, json=submit_data)\n            submit_response.raise_for_status()\n            request_data = submit_response.json()\n\n            # Get request_id and urls from initial response\n            request_id = request_data.get(\"request_id\")\n            status_url = request_data.get(\"status_url\")\n            result_url = request_data.get(\"response_url\")\n\n            if not all([request_id, status_url, result_url]):\n                raise ValueError(\"Missing required data in submission response\")\n\n            # Poll for status with exponential backoff\n            max_attempts = 30\n            attempt = 0\n            base_wait_time = 5\n\n            while attempt < max_attempts:\n                status_response = httpx.get(f\"{status_url}?logs=1\", headers=headers)\n                status_response.raise_for_status()\n                status_data = status_response.json()\n\n                # Process new logs only\n                logs = status_data.get(\"logs\", [])\n                if logs and isinstance(logs, list):\n                    for log in logs:\n                        if isinstance(log, dict):\n                            # Create a unique key for this log entry\n                            log_key = (\n                                f\"{log.get('timestamp', '')}-{log.get('message', '')}\"\n                            )\n                            if log_key not in seen_logs:\n                                seen_logs.add(log_key)\n                                message = log.get(\"message\", \"\")\n                                if message:\n                                    logger.debug(\n                                        f\"[FAL Generation] [{log.get('level', 'INFO')}] [{log.get('source', '')}] [{log.get('timestamp', '')}] {message}\"\n                                    )\n\n                status = status_data.get(\"status\")\n                if status == \"COMPLETED\":\n                    # Get the final result\n                    result_response = httpx.get(result_url, headers=headers)\n                    result_response.raise_for_status()\n                    result_data = result_response.json()\n\n                    if \"video\" not in result_data or not isinstance(\n                        result_data[\"video\"], dict\n                    ):\n                        raise ValueError(\"Invalid response format - missing video data\")\n\n                    video_url = result_data[\"video\"].get(\"url\")\n                    if not video_url:\n                        raise ValueError(\"No video URL in response\")\n\n                    return video_url\n\n                elif status == \"FAILED\":\n                    error_msg = status_data.get(\"error\", \"No error details provided\")\n                    raise RuntimeError(f\"Video generation failed: {error_msg}\")\n                elif status == \"IN_QUEUE\":\n                    position = status_data.get(\"queue_position\", \"unknown\")\n                    logger.debug(\n                        f\"[FAL Generation] Status: In queue, position: {position}\"\n                    )\n                elif status == \"IN_PROGRESS\":\n                    logger.debug(\n                        \"[FAL Generation] Status: Request is being processed...\"\n                    )\n                else:\n                    logger.info(f\"[FAL Generation] Status: Unknown status: {status}\")\n\n                wait_time = min(base_wait_time * (2**attempt), 60)  # Cap at 60 seconds\n                time.sleep(wait_time)\n                attempt += 1\n\n            raise RuntimeError(\"Maximum polling attempts reached\")\n\n        except httpx.HTTPError as e:\n            raise RuntimeError(f\"API request failed: {str(e)}\")\n\n    def run(\n        self, input_data: Input, *, credentials: FalCredentials, **kwargs\n    ) -> BlockOutput:\n        try:\n            video_url = self.generate_video(input_data, credentials)\n            yield \"video_url\", video_url\n        except Exception as e:\n            error_message = str(e)\n            yield \"error\", error_message",
      "children": [
        {
          "value": "AIVideoGeneratorBlock",
          "children": []
        },
        {
          "value": "(Block)",
          "children": [
            {
              "value": "Block",
              "children": []
            }
          ]
        },
        {
          "value": "class Input(BlockSchema):\n        prompt: str = SchemaField(\n            description=\"Description of the video to generate.\",\n            placeholder=\"A dog running in a field.\",\n        )\n        model: FalModel = SchemaField(\n            title=\"FAL Model\",\n            default=FalModel.MOCHI,\n            description=\"The FAL model to use for video generation.\",\n        )\n        credentials: FalCredentialsInput = FalCredentialsField()\n\n    class Output(BlockSchema):\n        video_url: str = SchemaField(description=\"The URL of the generated video.\")\n        error: str = SchemaField(\n            description=\"Error message if video generation failed.\"\n        )\n        logs: list[str] = SchemaField(\n            description=\"Generation progress logs.\", optional=True\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"530cf046-2ce0-4854-ae2c-659db17c7a46\",\n            description=\"Generate videos using FAL AI models.\",\n            categories={BlockCategory.AI},\n            input_schema=self.Input,\n            output_schema=self.Output,\n            test_input={\n                \"prompt\": \"A dog running in a field.\",\n                \"model\": FalModel.MOCHI,\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n            },\n            test_credentials=TEST_CREDENTIALS,\n            test_output=[(\"video_url\", \"https://fal.media/files/example/video.mp4\")],\n            test_mock={\n                \"generate_video\": lambda *args, **kwargs: \"https://fal.media/files/example/video.mp4\"\n            },\n        )\n\n    def _get_headers(self, api_key: str) -> dict[str, str]:\n        \"\"\"Get headers for FAL API requests.\"\"\"\n        return {\n            \"Authorization\": f\"Key {api_key}\",\n            \"Content-Type\": \"application/json\",\n        }\n\n    def _submit_request(\n        self, url: str, headers: dict[str, str], data: dict[str, Any]\n    ) -> dict[str, Any]:\n        \"\"\"Submit a request to the FAL API.\"\"\"\n        try:\n            response = httpx.post(url, headers=headers, json=data)\n            response.raise_for_status()\n            return response.json()\n        except httpx.HTTPError as e:\n            logger.error(f\"FAL API request failed: {str(e)}\")\n            raise RuntimeError(f\"Failed to submit request: {str(e)}\")\n\n    def _poll_status(self, status_url: str, headers: dict[str, str]) -> dict[str, Any]:\n        \"\"\"Poll the status endpoint until completion or failure.\"\"\"\n        try:\n            response = httpx.get(status_url, headers=headers)\n            response.raise_for_status()\n            return response.json()\n        except httpx.HTTPError as e:\n            logger.error(f\"Failed to get status: {str(e)}\")\n            raise RuntimeError(f\"Failed to get status: {str(e)}\")\n\n    def generate_video(self, input_data: Input, credentials: FalCredentials) -> str:\n        \"\"\"Generate video using the specified FAL model.\"\"\"\n        base_url = \"https://queue.fal.run\"\n        api_key = credentials.api_key.get_secret_value()\n        headers = self._get_headers(api_key)\n\n        # Submit generation request\n        submit_url = f\"{base_url}/{input_data.model.value}\"\n        submit_data = {\"prompt\": input_data.prompt}\n\n        seen_logs = set()\n\n        try:\n            # Submit request to queue\n            submit_response = httpx.post(submit_url, headers=headers, json=submit_data)\n            submit_response.raise_for_status()\n            request_data = submit_response.json()\n\n            # Get request_id and urls from initial response\n            request_id = request_data.get(\"request_id\")\n            status_url = request_data.get(\"status_url\")\n            result_url = request_data.get(\"response_url\")\n\n            if not all([request_id, status_url, result_url]):\n                raise ValueError(\"Missing required data in submission response\")\n\n            # Poll for status with exponential backoff\n            max_attempts = 30\n            attempt = 0\n            base_wait_time = 5\n\n            while attempt < max_attempts:\n                status_response = httpx.get(f\"{status_url}?logs=1\", headers=headers)\n                status_response.raise_for_status()\n                status_data = status_response.json()\n\n                # Process new logs only\n                logs = status_data.get(\"logs\", [])\n                if logs and isinstance(logs, list):\n                    for log in logs:\n                        if isinstance(log, dict):\n                            # Create a unique key for this log entry\n                            log_key = (\n                                f\"{log.get('timestamp', '')}-{log.get('message', '')}\"\n                            )\n                            if log_key not in seen_logs:\n                                seen_logs.add(log_key)\n                                message = log.get(\"message\", \"\")\n                                if message:\n                                    logger.debug(\n                                        f\"[FAL Generation] [{log.get('level', 'INFO')}] [{log.get('source', '')}] [{log.get('timestamp', '')}] {message}\"\n                                    )\n\n                status = status_data.get(\"status\")\n                if status == \"COMPLETED\":\n                    # Get the final result\n                    result_response = httpx.get(result_url, headers=headers)\n                    result_response.raise_for_status()\n                    result_data = result_response.json()\n\n                    if \"video\" not in result_data or not isinstance(\n                        result_data[\"video\"], dict\n                    ):\n                        raise ValueError(\"Invalid response format - missing video data\")\n\n                    video_url = result_data[\"video\"].get(\"url\")\n                    if not video_url:\n                        raise ValueError(\"No video URL in response\")\n\n                    return video_url\n\n                elif status == \"FAILED\":\n                    error_msg = status_data.get(\"error\", \"No error details provided\")\n                    raise RuntimeError(f\"Video generation failed: {error_msg}\")\n                elif status == \"IN_QUEUE\":\n                    position = status_data.get(\"queue_position\", \"unknown\")\n                    logger.debug(\n                        f\"[FAL Generation] Status: In queue, position: {position}\"\n                    )\n                elif status == \"IN_PROGRESS\":\n                    logger.debug(\n                        \"[FAL Generation] Status: Request is being processed...\"\n                    )\n                else:\n                    logger.info(f\"[FAL Generation] Status: Unknown status: {status}\")\n\n                wait_time = min(base_wait_time * (2**attempt), 60)  # Cap at 60 seconds\n                time.sleep(wait_time)\n                attempt += 1\n\n            raise RuntimeError(\"Maximum polling attempts reached\")\n\n        except httpx.HTTPError as e:\n            raise RuntimeError(f\"API request failed: {str(e)}\")\n\n    def run(\n        self, input_data: Input, *, credentials: FalCredentials, **kwargs\n    ) -> BlockOutput:\n        try:\n            video_url = self.generate_video(input_data, credentials)\n            yield \"video_url\", video_url\n        except Exception as e:\n            error_message = str(e)\n            yield \"error\", error_message",
          "children": [
            {
              "value": "class Input(BlockSchema):\n        prompt: str = SchemaField(\n            description=\"Description of the video to generate.\",\n            placeholder=\"A dog running in a field.\",\n        )\n        model: FalModel = SchemaField(\n            title=\"FAL Model\",\n            default=FalModel.MOCHI,\n            description=\"The FAL model to use for video generation.\",\n        )\n        credentials: FalCredentialsInput = FalCredentialsField()",
              "children": [
                {
                  "value": "Input",
                  "children": []
                },
                {
                  "value": "(BlockSchema)",
                  "children": [
                    {
                      "value": "BlockSchema",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "prompt: str = SchemaField(\n            description=\"Description of the video to generate.\",\n            placeholder=\"A dog running in a field.\",\n        )\n        model: FalModel = SchemaField(\n            title=\"FAL Model\",\n            default=FalModel.MOCHI,\n            description=\"The FAL model to use for video generation.\",\n        )\n        credentials: FalCredentialsInput = FalCredentialsField()",
                  "children": [
                    {
                      "value": "prompt: str = SchemaField(\n            description=\"Description of the video to generate.\",\n            placeholder=\"A dog running in a field.\",\n        )",
                      "children": [
                        {
                          "value": "prompt: str = SchemaField(\n            description=\"Description of the video to generate.\",\n            placeholder=\"A dog running in a field.\",\n        )",
                          "children": [
                            {
                              "value": "prompt",
                              "children": []
                            },
                            {
                              "value": "str",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            description=\"Description of the video to generate.\",\n            placeholder=\"A dog running in a field.\",\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=\"Description of the video to generate.\",\n            placeholder=\"A dog running in a field.\",\n        )",
                                  "children": [
                                    {
                                      "value": "description=\"Description of the video to generate.\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Description of the video to generate.\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Description of the video to generate.",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "placeholder=\"A dog running in a field.\"",
                                      "children": [
                                        {
                                          "value": "placeholder",
                                          "children": []
                                        },
                                        {
                                          "value": "\"A dog running in a field.\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "A dog running in a field.",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "model: FalModel = SchemaField(\n            title=\"FAL Model\",\n            default=FalModel.MOCHI,\n            description=\"The FAL model to use for video generation.\",\n        )",
                      "children": [
                        {
                          "value": "model: FalModel = SchemaField(\n            title=\"FAL Model\",\n            default=FalModel.MOCHI,\n            description=\"The FAL model to use for video generation.\",\n        )",
                          "children": [
                            {
                              "value": "model",
                              "children": []
                            },
                            {
                              "value": "FalModel",
                              "children": [
                                {
                                  "value": "FalModel",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            title=\"FAL Model\",\n            default=FalModel.MOCHI,\n            description=\"The FAL model to use for video generation.\",\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            title=\"FAL Model\",\n            default=FalModel.MOCHI,\n            description=\"The FAL model to use for video generation.\",\n        )",
                                  "children": [
                                    {
                                      "value": "title=\"FAL Model\"",
                                      "children": [
                                        {
                                          "value": "title",
                                          "children": []
                                        },
                                        {
                                          "value": "\"FAL Model\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "FAL Model",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "default=FalModel.MOCHI",
                                      "children": [
                                        {
                                          "value": "default",
                                          "children": []
                                        },
                                        {
                                          "value": "FalModel.MOCHI",
                                          "children": [
                                            {
                                              "value": "FalModel",
                                              "children": []
                                            },
                                            {
                                              "value": "MOCHI",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "description=\"The FAL model to use for video generation.\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"The FAL model to use for video generation.\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "The FAL model to use for video generation.",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "credentials: FalCredentialsInput = FalCredentialsField()",
                      "children": [
                        {
                          "value": "credentials: FalCredentialsInput = FalCredentialsField()",
                          "children": [
                            {
                              "value": "credentials",
                              "children": []
                            },
                            {
                              "value": "FalCredentialsInput",
                              "children": [
                                {
                                  "value": "FalCredentialsInput",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "FalCredentialsField()",
                              "children": [
                                {
                                  "value": "FalCredentialsField",
                                  "children": []
                                },
                                {
                                  "value": "()",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "class Output(BlockSchema):\n        video_url: str = SchemaField(description=\"The URL of the generated video.\")\n        error: str = SchemaField(\n            description=\"Error message if video generation failed.\"\n        )\n        logs: list[str] = SchemaField(\n            description=\"Generation progress logs.\", optional=True\n        )",
              "children": [
                {
                  "value": "Output",
                  "children": []
                },
                {
                  "value": "(BlockSchema)",
                  "children": [
                    {
                      "value": "BlockSchema",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "video_url: str = SchemaField(description=\"The URL of the generated video.\")\n        error: str = SchemaField(\n            description=\"Error message if video generation failed.\"\n        )\n        logs: list[str] = SchemaField(\n            description=\"Generation progress logs.\", optional=True\n        )",
                  "children": [
                    {
                      "value": "video_url: str = SchemaField(description=\"The URL of the generated video.\")",
                      "children": [
                        {
                          "value": "video_url: str = SchemaField(description=\"The URL of the generated video.\")",
                          "children": [
                            {
                              "value": "video_url",
                              "children": []
                            },
                            {
                              "value": "str",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(description=\"The URL of the generated video.\")",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(description=\"The URL of the generated video.\")",
                                  "children": [
                                    {
                                      "value": "description=\"The URL of the generated video.\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"The URL of the generated video.\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "The URL of the generated video.",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "error: str = SchemaField(\n            description=\"Error message if video generation failed.\"\n        )",
                      "children": [
                        {
                          "value": "error: str = SchemaField(\n            description=\"Error message if video generation failed.\"\n        )",
                          "children": [
                            {
                              "value": "error",
                              "children": []
                            },
                            {
                              "value": "str",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            description=\"Error message if video generation failed.\"\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=\"Error message if video generation failed.\"\n        )",
                                  "children": [
                                    {
                                      "value": "description=\"Error message if video generation failed.\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Error message if video generation failed.\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Error message if video generation failed.",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "logs: list[str] = SchemaField(\n            description=\"Generation progress logs.\", optional=True\n        )",
                      "children": [
                        {
                          "value": "logs: list[str] = SchemaField(\n            description=\"Generation progress logs.\", optional=True\n        )",
                          "children": [
                            {
                              "value": "logs",
                              "children": []
                            },
                            {
                              "value": "list[str]",
                              "children": [
                                {
                                  "value": "list[str]",
                                  "children": [
                                    {
                                      "value": "list",
                                      "children": []
                                    },
                                    {
                                      "value": "[str]",
                                      "children": [
                                        {
                                          "value": "str",
                                          "children": [
                                            {
                                              "value": "str",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            description=\"Generation progress logs.\", optional=True\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=\"Generation progress logs.\", optional=True\n        )",
                                  "children": [
                                    {
                                      "value": "description=\"Generation progress logs.\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Generation progress logs.\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Generation progress logs.",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "optional=True",
                                      "children": [
                                        {
                                          "value": "optional",
                                          "children": []
                                        },
                                        {
                                          "value": "True",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def __init__(self):\n        super().__init__(\n            id=\"530cf046-2ce0-4854-ae2c-659db17c7a46\",\n            description=\"Generate videos using FAL AI models.\",\n            categories={BlockCategory.AI},\n            input_schema=self.Input,\n            output_schema=self.Output,\n            test_input={\n                \"prompt\": \"A dog running in a field.\",\n                \"model\": FalModel.MOCHI,\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n            },\n            test_credentials=TEST_CREDENTIALS,\n            test_output=[(\"video_url\", \"https://fal.media/files/example/video.mp4\")],\n            test_mock={\n                \"generate_video\": lambda *args, **kwargs: \"https://fal.media/files/example/video.mp4\"\n            },\n        )",
              "children": [
                {
                  "value": "__init__",
                  "children": []
                },
                {
                  "value": "(self)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "super().__init__(\n            id=\"530cf046-2ce0-4854-ae2c-659db17c7a46\",\n            description=\"Generate videos using FAL AI models.\",\n            categories={BlockCategory.AI},\n            input_schema=self.Input,\n            output_schema=self.Output,\n            test_input={\n                \"prompt\": \"A dog running in a field.\",\n                \"model\": FalModel.MOCHI,\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n            },\n            test_credentials=TEST_CREDENTIALS,\n            test_output=[(\"video_url\", \"https://fal.media/files/example/video.mp4\")],\n            test_mock={\n                \"generate_video\": lambda *args, **kwargs: \"https://fal.media/files/example/video.mp4\"\n            },\n        )",
                  "children": [
                    {
                      "value": "super().__init__(\n            id=\"530cf046-2ce0-4854-ae2c-659db17c7a46\",\n            description=\"Generate videos using FAL AI models.\",\n            categories={BlockCategory.AI},\n            input_schema=self.Input,\n            output_schema=self.Output,\n            test_input={\n                \"prompt\": \"A dog running in a field.\",\n                \"model\": FalModel.MOCHI,\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n            },\n            test_credentials=TEST_CREDENTIALS,\n            test_output=[(\"video_url\", \"https://fal.media/files/example/video.mp4\")],\n            test_mock={\n                \"generate_video\": lambda *args, **kwargs: \"https://fal.media/files/example/video.mp4\"\n            },\n        )",
                      "children": [
                        {
                          "value": "super().__init__(\n            id=\"530cf046-2ce0-4854-ae2c-659db17c7a46\",\n            description=\"Generate videos using FAL AI models.\",\n            categories={BlockCategory.AI},\n            input_schema=self.Input,\n            output_schema=self.Output,\n            test_input={\n                \"prompt\": \"A dog running in a field.\",\n                \"model\": FalModel.MOCHI,\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n            },\n            test_credentials=TEST_CREDENTIALS,\n            test_output=[(\"video_url\", \"https://fal.media/files/example/video.mp4\")],\n            test_mock={\n                \"generate_video\": lambda *args, **kwargs: \"https://fal.media/files/example/video.mp4\"\n            },\n        )",
                          "children": [
                            {
                              "value": "super().__init__",
                              "children": [
                                {
                                  "value": "super()",
                                  "children": [
                                    {
                                      "value": "super",
                                      "children": []
                                    },
                                    {
                                      "value": "()",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "__init__",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\n            id=\"530cf046-2ce0-4854-ae2c-659db17c7a46\",\n            description=\"Generate videos using FAL AI models.\",\n            categories={BlockCategory.AI},\n            input_schema=self.Input,\n            output_schema=self.Output,\n            test_input={\n                \"prompt\": \"A dog running in a field.\",\n                \"model\": FalModel.MOCHI,\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n            },\n            test_credentials=TEST_CREDENTIALS,\n            test_output=[(\"video_url\", \"https://fal.media/files/example/video.mp4\")],\n            test_mock={\n                \"generate_video\": lambda *args, **kwargs: \"https://fal.media/files/example/video.mp4\"\n            },\n        )",
                              "children": [
                                {
                                  "value": "id=\"530cf046-2ce0-4854-ae2c-659db17c7a46\"",
                                  "children": [
                                    {
                                      "value": "id",
                                      "children": []
                                    },
                                    {
                                      "value": "\"530cf046-2ce0-4854-ae2c-659db17c7a46\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "530cf046-2ce0-4854-ae2c-659db17c7a46",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "description=\"Generate videos using FAL AI models.\"",
                                  "children": [
                                    {
                                      "value": "description",
                                      "children": []
                                    },
                                    {
                                      "value": "\"Generate videos using FAL AI models.\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "Generate videos using FAL AI models.",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "categories={BlockCategory.AI}",
                                  "children": [
                                    {
                                      "value": "categories",
                                      "children": []
                                    },
                                    {
                                      "value": "{BlockCategory.AI}",
                                      "children": [
                                        {
                                          "value": "BlockCategory.AI",
                                          "children": [
                                            {
                                              "value": "BlockCategory",
                                              "children": []
                                            },
                                            {
                                              "value": "AI",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "input_schema=self.Input",
                                  "children": [
                                    {
                                      "value": "input_schema",
                                      "children": []
                                    },
                                    {
                                      "value": "self.Input",
                                      "children": [
                                        {
                                          "value": "self",
                                          "children": []
                                        },
                                        {
                                          "value": "Input",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "output_schema=self.Output",
                                  "children": [
                                    {
                                      "value": "output_schema",
                                      "children": []
                                    },
                                    {
                                      "value": "self.Output",
                                      "children": [
                                        {
                                          "value": "self",
                                          "children": []
                                        },
                                        {
                                          "value": "Output",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "test_input={\n                \"prompt\": \"A dog running in a field.\",\n                \"model\": FalModel.MOCHI,\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n            }",
                                  "children": [
                                    {
                                      "value": "test_input",
                                      "children": []
                                    },
                                    {
                                      "value": "{\n                \"prompt\": \"A dog running in a field.\",\n                \"model\": FalModel.MOCHI,\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n            }",
                                      "children": [
                                        {
                                          "value": "\"prompt\": \"A dog running in a field.\"",
                                          "children": [
                                            {
                                              "value": "\"prompt\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "prompt",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"A dog running in a field.\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "A dog running in a field.",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"model\": FalModel.MOCHI",
                                          "children": [
                                            {
                                              "value": "\"model\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "model",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "FalModel.MOCHI",
                                              "children": [
                                                {
                                                  "value": "FalModel",
                                                  "children": []
                                                },
                                                {
                                                  "value": "MOCHI",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"credentials\": TEST_CREDENTIALS_INPUT",
                                          "children": [
                                            {
                                              "value": "\"credentials\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "credentials",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "TEST_CREDENTIALS_INPUT",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "test_credentials=TEST_CREDENTIALS",
                                  "children": [
                                    {
                                      "value": "test_credentials",
                                      "children": []
                                    },
                                    {
                                      "value": "TEST_CREDENTIALS",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "test_output=[(\"video_url\", \"https://fal.media/files/example/video.mp4\")]",
                                  "children": [
                                    {
                                      "value": "test_output",
                                      "children": []
                                    },
                                    {
                                      "value": "[(\"video_url\", \"https://fal.media/files/example/video.mp4\")]",
                                      "children": [
                                        {
                                          "value": "(\"video_url\", \"https://fal.media/files/example/video.mp4\")",
                                          "children": [
                                            {
                                              "value": "\"video_url\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "video_url",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"https://fal.media/files/example/video.mp4\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "https://fal.media/files/example/video.mp4",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "test_mock={\n                \"generate_video\": lambda *args, **kwargs: \"https://fal.media/files/example/video.mp4\"\n            }",
                                  "children": [
                                    {
                                      "value": "test_mock",
                                      "children": []
                                    },
                                    {
                                      "value": "{\n                \"generate_video\": lambda *args, **kwargs: \"https://fal.media/files/example/video.mp4\"\n            }",
                                      "children": [
                                        {
                                          "value": "\"generate_video\": lambda *args, **kwargs: \"https://fal.media/files/example/video.mp4\"",
                                          "children": [
                                            {
                                              "value": "\"generate_video\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "generate_video",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "lambda *args, **kwargs: \"https://fal.media/files/example/video.mp4\"",
                                              "children": [
                                                {
                                                  "value": "*args, **kwargs",
                                                  "children": [
                                                    {
                                                      "value": "*args",
                                                      "children": [
                                                        {
                                                          "value": "args",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "**kwargs",
                                                      "children": [
                                                        {
                                                          "value": "kwargs",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"https://fal.media/files/example/video.mp4\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "https://fal.media/files/example/video.mp4",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def _get_headers(self, api_key: str) -> dict[str, str]:\n        \"\"\"Get headers for FAL API requests.\"\"\"\n        return {\n            \"Authorization\": f\"Key {api_key}\",\n            \"Content-Type\": \"application/json\",\n        }",
              "children": [
                {
                  "value": "_get_headers",
                  "children": []
                },
                {
                  "value": "(self, api_key: str)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "api_key: str",
                      "children": [
                        {
                          "value": "api_key",
                          "children": []
                        },
                        {
                          "value": "str",
                          "children": [
                            {
                              "value": "str",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "dict[str, str]",
                  "children": [
                    {
                      "value": "dict[str, str]",
                      "children": [
                        {
                          "value": "dict",
                          "children": []
                        },
                        {
                          "value": "[str, str]",
                          "children": [
                            {
                              "value": "str",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "str",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "\"\"\"Get headers for FAL API requests.\"\"\"\n        return {\n            \"Authorization\": f\"Key {api_key}\",\n            \"Content-Type\": \"application/json\",\n        }",
                  "children": [
                    {
                      "value": "\"\"\"Get headers for FAL API requests.\"\"\"",
                      "children": [
                        {
                          "value": "\"\"\"Get headers for FAL API requests.\"\"\"",
                          "children": [
                            {
                              "value": "\"\"\"",
                              "children": []
                            },
                            {
                              "value": "Get headers for FAL API requests.",
                              "children": []
                            },
                            {
                              "value": "\"\"\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "return {\n            \"Authorization\": f\"Key {api_key}\",\n            \"Content-Type\": \"application/json\",\n        }",
                      "children": [
                        {
                          "value": "{\n            \"Authorization\": f\"Key {api_key}\",\n            \"Content-Type\": \"application/json\",\n        }",
                          "children": [
                            {
                              "value": "\"Authorization\": f\"Key {api_key}\"",
                              "children": [
                                {
                                  "value": "\"Authorization\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "Authorization",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "f\"Key {api_key}\"",
                                  "children": [
                                    {
                                      "value": "f\"",
                                      "children": []
                                    },
                                    {
                                      "value": "Key",
                                      "children": []
                                    },
                                    {
                                      "value": "{api_key}",
                                      "children": [
                                        {
                                          "value": "api_key",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "\"Content-Type\": \"application/json\"",
                              "children": [
                                {
                                  "value": "\"Content-Type\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "Content-Type",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "\"application/json\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "application/json",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def _submit_request(\n        self, url: str, headers: dict[str, str], data: dict[str, Any]\n    ) -> dict[str, Any]:\n        \"\"\"Submit a request to the FAL API.\"\"\"\n        try:\n            response = httpx.post(url, headers=headers, json=data)\n            response.raise_for_status()\n            return response.json()\n        except httpx.HTTPError as e:\n            logger.error(f\"FAL API request failed: {str(e)}\")\n            raise RuntimeError(f\"Failed to submit request: {str(e)}\")",
              "children": [
                {
                  "value": "_submit_request",
                  "children": []
                },
                {
                  "value": "(\n        self, url: str, headers: dict[str, str], data: dict[str, Any]\n    )",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "url: str",
                      "children": [
                        {
                          "value": "url",
                          "children": []
                        },
                        {
                          "value": "str",
                          "children": [
                            {
                              "value": "str",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "headers: dict[str, str]",
                      "children": [
                        {
                          "value": "headers",
                          "children": []
                        },
                        {
                          "value": "dict[str, str]",
                          "children": [
                            {
                              "value": "dict[str, str]",
                              "children": [
                                {
                                  "value": "dict",
                                  "children": []
                                },
                                {
                                  "value": "[str, str]",
                                  "children": [
                                    {
                                      "value": "str",
                                      "children": [
                                        {
                                          "value": "str",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "str",
                                      "children": [
                                        {
                                          "value": "str",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "data: dict[str, Any]",
                      "children": [
                        {
                          "value": "data",
                          "children": []
                        },
                        {
                          "value": "dict[str, Any]",
                          "children": [
                            {
                              "value": "dict[str, Any]",
                              "children": [
                                {
                                  "value": "dict",
                                  "children": []
                                },
                                {
                                  "value": "[str, Any]",
                                  "children": [
                                    {
                                      "value": "str",
                                      "children": [
                                        {
                                          "value": "str",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "Any",
                                      "children": [
                                        {
                                          "value": "Any",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "dict[str, Any]",
                  "children": [
                    {
                      "value": "dict[str, Any]",
                      "children": [
                        {
                          "value": "dict",
                          "children": []
                        },
                        {
                          "value": "[str, Any]",
                          "children": [
                            {
                              "value": "str",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "Any",
                              "children": [
                                {
                                  "value": "Any",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "\"\"\"Submit a request to the FAL API.\"\"\"\n        try:\n            response = httpx.post(url, headers=headers, json=data)\n            response.raise_for_status()\n            return response.json()\n        except httpx.HTTPError as e:\n            logger.error(f\"FAL API request failed: {str(e)}\")\n            raise RuntimeError(f\"Failed to submit request: {str(e)}\")",
                  "children": [
                    {
                      "value": "\"\"\"Submit a request to the FAL API.\"\"\"",
                      "children": [
                        {
                          "value": "\"\"\"Submit a request to the FAL API.\"\"\"",
                          "children": [
                            {
                              "value": "\"\"\"",
                              "children": []
                            },
                            {
                              "value": "Submit a request to the FAL API.",
                              "children": []
                            },
                            {
                              "value": "\"\"\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "try:\n            response = httpx.post(url, headers=headers, json=data)\n            response.raise_for_status()\n            return response.json()\n        except httpx.HTTPError as e:\n            logger.error(f\"FAL API request failed: {str(e)}\")\n            raise RuntimeError(f\"Failed to submit request: {str(e)}\")",
                      "children": [
                        {
                          "value": "response = httpx.post(url, headers=headers, json=data)\n            response.raise_for_status()\n            return response.json()",
                          "children": [
                            {
                              "value": "response = httpx.post(url, headers=headers, json=data)",
                              "children": [
                                {
                                  "value": "response = httpx.post(url, headers=headers, json=data)",
                                  "children": [
                                    {
                                      "value": "response",
                                      "children": []
                                    },
                                    {
                                      "value": "httpx.post(url, headers=headers, json=data)",
                                      "children": [
                                        {
                                          "value": "httpx.post",
                                          "children": [
                                            {
                                              "value": "httpx",
                                              "children": []
                                            },
                                            {
                                              "value": "post",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(url, headers=headers, json=data)",
                                          "children": [
                                            {
                                              "value": "url",
                                              "children": []
                                            },
                                            {
                                              "value": "headers=headers",
                                              "children": [
                                                {
                                                  "value": "headers",
                                                  "children": []
                                                },
                                                {
                                                  "value": "headers",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "json=data",
                                              "children": [
                                                {
                                                  "value": "json",
                                                  "children": []
                                                },
                                                {
                                                  "value": "data",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "response.raise_for_status()",
                              "children": [
                                {
                                  "value": "response.raise_for_status()",
                                  "children": [
                                    {
                                      "value": "response.raise_for_status",
                                      "children": [
                                        {
                                          "value": "response",
                                          "children": []
                                        },
                                        {
                                          "value": "raise_for_status",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "()",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "return response.json()",
                              "children": [
                                {
                                  "value": "response.json()",
                                  "children": [
                                    {
                                      "value": "response.json",
                                      "children": [
                                        {
                                          "value": "response",
                                          "children": []
                                        },
                                        {
                                          "value": "json",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "()",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "except httpx.HTTPError as e:\n            logger.error(f\"FAL API request failed: {str(e)}\")\n            raise RuntimeError(f\"Failed to submit request: {str(e)}\")",
                          "children": [
                            {
                              "value": "httpx.HTTPError as e",
                              "children": [
                                {
                                  "value": "httpx.HTTPError",
                                  "children": [
                                    {
                                      "value": "httpx",
                                      "children": []
                                    },
                                    {
                                      "value": "HTTPError",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "e",
                                  "children": [
                                    {
                                      "value": "e",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "logger.error(f\"FAL API request failed: {str(e)}\")\n            raise RuntimeError(f\"Failed to submit request: {str(e)}\")",
                              "children": [
                                {
                                  "value": "logger.error(f\"FAL API request failed: {str(e)}\")",
                                  "children": [
                                    {
                                      "value": "logger.error(f\"FAL API request failed: {str(e)}\")",
                                      "children": [
                                        {
                                          "value": "logger.error",
                                          "children": [
                                            {
                                              "value": "logger",
                                              "children": []
                                            },
                                            {
                                              "value": "error",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(f\"FAL API request failed: {str(e)}\")",
                                          "children": [
                                            {
                                              "value": "f\"FAL API request failed: {str(e)}\"",
                                              "children": [
                                                {
                                                  "value": "f\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "FAL API request failed:",
                                                  "children": []
                                                },
                                                {
                                                  "value": "{str(e)}",
                                                  "children": [
                                                    {
                                                      "value": "str(e)",
                                                      "children": [
                                                        {
                                                          "value": "str",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "(e)",
                                                          "children": [
                                                            {
                                                              "value": "e",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "raise RuntimeError(f\"Failed to submit request: {str(e)}\")",
                                  "children": [
                                    {
                                      "value": "RuntimeError(f\"Failed to submit request: {str(e)}\")",
                                      "children": [
                                        {
                                          "value": "RuntimeError",
                                          "children": []
                                        },
                                        {
                                          "value": "(f\"Failed to submit request: {str(e)}\")",
                                          "children": [
                                            {
                                              "value": "f\"Failed to submit request: {str(e)}\"",
                                              "children": [
                                                {
                                                  "value": "f\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "Failed to submit request:",
                                                  "children": []
                                                },
                                                {
                                                  "value": "{str(e)}",
                                                  "children": [
                                                    {
                                                      "value": "str(e)",
                                                      "children": [
                                                        {
                                                          "value": "str",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "(e)",
                                                          "children": [
                                                            {
                                                              "value": "e",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def _poll_status(self, status_url: str, headers: dict[str, str]) -> dict[str, Any]:\n        \"\"\"Poll the status endpoint until completion or failure.\"\"\"\n        try:\n            response = httpx.get(status_url, headers=headers)\n            response.raise_for_status()\n            return response.json()\n        except httpx.HTTPError as e:\n            logger.error(f\"Failed to get status: {str(e)}\")\n            raise RuntimeError(f\"Failed to get status: {str(e)}\")",
              "children": [
                {
                  "value": "_poll_status",
                  "children": []
                },
                {
                  "value": "(self, status_url: str, headers: dict[str, str])",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "status_url: str",
                      "children": [
                        {
                          "value": "status_url",
                          "children": []
                        },
                        {
                          "value": "str",
                          "children": [
                            {
                              "value": "str",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "headers: dict[str, str]",
                      "children": [
                        {
                          "value": "headers",
                          "children": []
                        },
                        {
                          "value": "dict[str, str]",
                          "children": [
                            {
                              "value": "dict[str, str]",
                              "children": [
                                {
                                  "value": "dict",
                                  "children": []
                                },
                                {
                                  "value": "[str, str]",
                                  "children": [
                                    {
                                      "value": "str",
                                      "children": [
                                        {
                                          "value": "str",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "str",
                                      "children": [
                                        {
                                          "value": "str",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "dict[str, Any]",
                  "children": [
                    {
                      "value": "dict[str, Any]",
                      "children": [
                        {
                          "value": "dict",
                          "children": []
                        },
                        {
                          "value": "[str, Any]",
                          "children": [
                            {
                              "value": "str",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "Any",
                              "children": [
                                {
                                  "value": "Any",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "\"\"\"Poll the status endpoint until completion or failure.\"\"\"\n        try:\n            response = httpx.get(status_url, headers=headers)\n            response.raise_for_status()\n            return response.json()\n        except httpx.HTTPError as e:\n            logger.error(f\"Failed to get status: {str(e)}\")\n            raise RuntimeError(f\"Failed to get status: {str(e)}\")",
                  "children": [
                    {
                      "value": "\"\"\"Poll the status endpoint until completion or failure.\"\"\"",
                      "children": [
                        {
                          "value": "\"\"\"Poll the status endpoint until completion or failure.\"\"\"",
                          "children": [
                            {
                              "value": "\"\"\"",
                              "children": []
                            },
                            {
                              "value": "Poll the status endpoint until completion or failure.",
                              "children": []
                            },
                            {
                              "value": "\"\"\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "try:\n            response = httpx.get(status_url, headers=headers)\n            response.raise_for_status()\n            return response.json()\n        except httpx.HTTPError as e:\n            logger.error(f\"Failed to get status: {str(e)}\")\n            raise RuntimeError(f\"Failed to get status: {str(e)}\")",
                      "children": [
                        {
                          "value": "response = httpx.get(status_url, headers=headers)\n            response.raise_for_status()\n            return response.json()",
                          "children": [
                            {
                              "value": "response = httpx.get(status_url, headers=headers)",
                              "children": [
                                {
                                  "value": "response = httpx.get(status_url, headers=headers)",
                                  "children": [
                                    {
                                      "value": "response",
                                      "children": []
                                    },
                                    {
                                      "value": "httpx.get(status_url, headers=headers)",
                                      "children": [
                                        {
                                          "value": "httpx.get",
                                          "children": [
                                            {
                                              "value": "httpx",
                                              "children": []
                                            },
                                            {
                                              "value": "get",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(status_url, headers=headers)",
                                          "children": [
                                            {
                                              "value": "status_url",
                                              "children": []
                                            },
                                            {
                                              "value": "headers=headers",
                                              "children": [
                                                {
                                                  "value": "headers",
                                                  "children": []
                                                },
                                                {
                                                  "value": "headers",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "response.raise_for_status()",
                              "children": [
                                {
                                  "value": "response.raise_for_status()",
                                  "children": [
                                    {
                                      "value": "response.raise_for_status",
                                      "children": [
                                        {
                                          "value": "response",
                                          "children": []
                                        },
                                        {
                                          "value": "raise_for_status",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "()",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "return response.json()",
                              "children": [
                                {
                                  "value": "response.json()",
                                  "children": [
                                    {
                                      "value": "response.json",
                                      "children": [
                                        {
                                          "value": "response",
                                          "children": []
                                        },
                                        {
                                          "value": "json",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "()",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "except httpx.HTTPError as e:\n            logger.error(f\"Failed to get status: {str(e)}\")\n            raise RuntimeError(f\"Failed to get status: {str(e)}\")",
                          "children": [
                            {
                              "value": "httpx.HTTPError as e",
                              "children": [
                                {
                                  "value": "httpx.HTTPError",
                                  "children": [
                                    {
                                      "value": "httpx",
                                      "children": []
                                    },
                                    {
                                      "value": "HTTPError",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "e",
                                  "children": [
                                    {
                                      "value": "e",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "logger.error(f\"Failed to get status: {str(e)}\")\n            raise RuntimeError(f\"Failed to get status: {str(e)}\")",
                              "children": [
                                {
                                  "value": "logger.error(f\"Failed to get status: {str(e)}\")",
                                  "children": [
                                    {
                                      "value": "logger.error(f\"Failed to get status: {str(e)}\")",
                                      "children": [
                                        {
                                          "value": "logger.error",
                                          "children": [
                                            {
                                              "value": "logger",
                                              "children": []
                                            },
                                            {
                                              "value": "error",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(f\"Failed to get status: {str(e)}\")",
                                          "children": [
                                            {
                                              "value": "f\"Failed to get status: {str(e)}\"",
                                              "children": [
                                                {
                                                  "value": "f\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "Failed to get status:",
                                                  "children": []
                                                },
                                                {
                                                  "value": "{str(e)}",
                                                  "children": [
                                                    {
                                                      "value": "str(e)",
                                                      "children": [
                                                        {
                                                          "value": "str",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "(e)",
                                                          "children": [
                                                            {
                                                              "value": "e",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "raise RuntimeError(f\"Failed to get status: {str(e)}\")",
                                  "children": [
                                    {
                                      "value": "RuntimeError(f\"Failed to get status: {str(e)}\")",
                                      "children": [
                                        {
                                          "value": "RuntimeError",
                                          "children": []
                                        },
                                        {
                                          "value": "(f\"Failed to get status: {str(e)}\")",
                                          "children": [
                                            {
                                              "value": "f\"Failed to get status: {str(e)}\"",
                                              "children": [
                                                {
                                                  "value": "f\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "Failed to get status:",
                                                  "children": []
                                                },
                                                {
                                                  "value": "{str(e)}",
                                                  "children": [
                                                    {
                                                      "value": "str(e)",
                                                      "children": [
                                                        {
                                                          "value": "str",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "(e)",
                                                          "children": [
                                                            {
                                                              "value": "e",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def generate_video(self, input_data: Input, credentials: FalCredentials) -> str:\n        \"\"\"Generate video using the specified FAL model.\"\"\"\n        base_url = \"https://queue.fal.run\"\n        api_key = credentials.api_key.get_secret_value()\n        headers = self._get_headers(api_key)\n\n        # Submit generation request\n        submit_url = f\"{base_url}/{input_data.model.value}\"\n        submit_data = {\"prompt\": input_data.prompt}\n\n        seen_logs = set()\n\n        try:\n            # Submit request to queue\n            submit_response = httpx.post(submit_url, headers=headers, json=submit_data)\n            submit_response.raise_for_status()\n            request_data = submit_response.json()\n\n            # Get request_id and urls from initial response\n            request_id = request_data.get(\"request_id\")\n            status_url = request_data.get(\"status_url\")\n            result_url = request_data.get(\"response_url\")\n\n            if not all([request_id, status_url, result_url]):\n                raise ValueError(\"Missing required data in submission response\")\n\n            # Poll for status with exponential backoff\n            max_attempts = 30\n            attempt = 0\n            base_wait_time = 5\n\n            while attempt < max_attempts:\n                status_response = httpx.get(f\"{status_url}?logs=1\", headers=headers)\n                status_response.raise_for_status()\n                status_data = status_response.json()\n\n                # Process new logs only\n                logs = status_data.get(\"logs\", [])\n                if logs and isinstance(logs, list):\n                    for log in logs:\n                        if isinstance(log, dict):\n                            # Create a unique key for this log entry\n                            log_key = (\n                                f\"{log.get('timestamp', '')}-{log.get('message', '')}\"\n                            )\n                            if log_key not in seen_logs:\n                                seen_logs.add(log_key)\n                                message = log.get(\"message\", \"\")\n                                if message:\n                                    logger.debug(\n                                        f\"[FAL Generation] [{log.get('level', 'INFO')}] [{log.get('source', '')}] [{log.get('timestamp', '')}] {message}\"\n                                    )\n\n                status = status_data.get(\"status\")\n                if status == \"COMPLETED\":\n                    # Get the final result\n                    result_response = httpx.get(result_url, headers=headers)\n                    result_response.raise_for_status()\n                    result_data = result_response.json()\n\n                    if \"video\" not in result_data or not isinstance(\n                        result_data[\"video\"], dict\n                    ):\n                        raise ValueError(\"Invalid response format - missing video data\")\n\n                    video_url = result_data[\"video\"].get(\"url\")\n                    if not video_url:\n                        raise ValueError(\"No video URL in response\")\n\n                    return video_url\n\n                elif status == \"FAILED\":\n                    error_msg = status_data.get(\"error\", \"No error details provided\")\n                    raise RuntimeError(f\"Video generation failed: {error_msg}\")\n                elif status == \"IN_QUEUE\":\n                    position = status_data.get(\"queue_position\", \"unknown\")\n                    logger.debug(\n                        f\"[FAL Generation] Status: In queue, position: {position}\"\n                    )\n                elif status == \"IN_PROGRESS\":\n                    logger.debug(\n                        \"[FAL Generation] Status: Request is being processed...\"\n                    )\n                else:\n                    logger.info(f\"[FAL Generation] Status: Unknown status: {status}\")\n\n                wait_time = min(base_wait_time * (2**attempt), 60)  # Cap at 60 seconds\n                time.sleep(wait_time)\n                attempt += 1\n\n            raise RuntimeError(\"Maximum polling attempts reached\")\n\n        except httpx.HTTPError as e:\n            raise RuntimeError(f\"API request failed: {str(e)}\")",
              "children": [
                {
                  "value": "generate_video",
                  "children": []
                },
                {
                  "value": "(self, input_data: Input, credentials: FalCredentials)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "input_data: Input",
                      "children": [
                        {
                          "value": "input_data",
                          "children": []
                        },
                        {
                          "value": "Input",
                          "children": [
                            {
                              "value": "Input",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "credentials: FalCredentials",
                      "children": [
                        {
                          "value": "credentials",
                          "children": []
                        },
                        {
                          "value": "FalCredentials",
                          "children": [
                            {
                              "value": "FalCredentials",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "str",
                  "children": [
                    {
                      "value": "str",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "\"\"\"Generate video using the specified FAL model.\"\"\"\n        base_url = \"https://queue.fal.run\"\n        api_key = credentials.api_key.get_secret_value()\n        headers = self._get_headers(api_key)\n\n        # Submit generation request\n        submit_url = f\"{base_url}/{input_data.model.value}\"\n        submit_data = {\"prompt\": input_data.prompt}\n\n        seen_logs = set()\n\n        try:\n            # Submit request to queue\n            submit_response = httpx.post(submit_url, headers=headers, json=submit_data)\n            submit_response.raise_for_status()\n            request_data = submit_response.json()\n\n            # Get request_id and urls from initial response\n            request_id = request_data.get(\"request_id\")\n            status_url = request_data.get(\"status_url\")\n            result_url = request_data.get(\"response_url\")\n\n            if not all([request_id, status_url, result_url]):\n                raise ValueError(\"Missing required data in submission response\")\n\n            # Poll for status with exponential backoff\n            max_attempts = 30\n            attempt = 0\n            base_wait_time = 5\n\n            while attempt < max_attempts:\n                status_response = httpx.get(f\"{status_url}?logs=1\", headers=headers)\n                status_response.raise_for_status()\n                status_data = status_response.json()\n\n                # Process new logs only\n                logs = status_data.get(\"logs\", [])\n                if logs and isinstance(logs, list):\n                    for log in logs:\n                        if isinstance(log, dict):\n                            # Create a unique key for this log entry\n                            log_key = (\n                                f\"{log.get('timestamp', '')}-{log.get('message', '')}\"\n                            )\n                            if log_key not in seen_logs:\n                                seen_logs.add(log_key)\n                                message = log.get(\"message\", \"\")\n                                if message:\n                                    logger.debug(\n                                        f\"[FAL Generation] [{log.get('level', 'INFO')}] [{log.get('source', '')}] [{log.get('timestamp', '')}] {message}\"\n                                    )\n\n                status = status_data.get(\"status\")\n                if status == \"COMPLETED\":\n                    # Get the final result\n                    result_response = httpx.get(result_url, headers=headers)\n                    result_response.raise_for_status()\n                    result_data = result_response.json()\n\n                    if \"video\" not in result_data or not isinstance(\n                        result_data[\"video\"], dict\n                    ):\n                        raise ValueError(\"Invalid response format - missing video data\")\n\n                    video_url = result_data[\"video\"].get(\"url\")\n                    if not video_url:\n                        raise ValueError(\"No video URL in response\")\n\n                    return video_url\n\n                elif status == \"FAILED\":\n                    error_msg = status_data.get(\"error\", \"No error details provided\")\n                    raise RuntimeError(f\"Video generation failed: {error_msg}\")\n                elif status == \"IN_QUEUE\":\n                    position = status_data.get(\"queue_position\", \"unknown\")\n                    logger.debug(\n                        f\"[FAL Generation] Status: In queue, position: {position}\"\n                    )\n                elif status == \"IN_PROGRESS\":\n                    logger.debug(\n                        \"[FAL Generation] Status: Request is being processed...\"\n                    )\n                else:\n                    logger.info(f\"[FAL Generation] Status: Unknown status: {status}\")\n\n                wait_time = min(base_wait_time * (2**attempt), 60)  # Cap at 60 seconds\n                time.sleep(wait_time)\n                attempt += 1\n\n            raise RuntimeError(\"Maximum polling attempts reached\")\n\n        except httpx.HTTPError as e:\n            raise RuntimeError(f\"API request failed: {str(e)}\")",
                  "children": [
                    {
                      "value": "\"\"\"Generate video using the specified FAL model.\"\"\"",
                      "children": [
                        {
                          "value": "\"\"\"Generate video using the specified FAL model.\"\"\"",
                          "children": [
                            {
                              "value": "\"\"\"",
                              "children": []
                            },
                            {
                              "value": "Generate video using the specified FAL model.",
                              "children": []
                            },
                            {
                              "value": "\"\"\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "base_url = \"https://queue.fal.run\"",
                      "children": [
                        {
                          "value": "base_url = \"https://queue.fal.run\"",
                          "children": [
                            {
                              "value": "base_url",
                              "children": []
                            },
                            {
                              "value": "\"https://queue.fal.run\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "https://queue.fal.run",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "api_key = credentials.api_key.get_secret_value()",
                      "children": [
                        {
                          "value": "api_key = credentials.api_key.get_secret_value()",
                          "children": [
                            {
                              "value": "api_key",
                              "children": []
                            },
                            {
                              "value": "credentials.api_key.get_secret_value()",
                              "children": [
                                {
                                  "value": "credentials.api_key.get_secret_value",
                                  "children": [
                                    {
                                      "value": "credentials.api_key",
                                      "children": [
                                        {
                                          "value": "credentials",
                                          "children": []
                                        },
                                        {
                                          "value": "api_key",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "get_secret_value",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "()",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "headers = self._get_headers(api_key)",
                      "children": [
                        {
                          "value": "headers = self._get_headers(api_key)",
                          "children": [
                            {
                              "value": "headers",
                              "children": []
                            },
                            {
                              "value": "self._get_headers(api_key)",
                              "children": [
                                {
                                  "value": "self._get_headers",
                                  "children": [
                                    {
                                      "value": "self",
                                      "children": []
                                    },
                                    {
                                      "value": "_get_headers",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(api_key)",
                                  "children": [
                                    {
                                      "value": "api_key",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "# Submit generation request",
                      "children": []
                    },
                    {
                      "value": "submit_url = f\"{base_url}/{input_data.model.value}\"",
                      "children": [
                        {
                          "value": "submit_url = f\"{base_url}/{input_data.model.value}\"",
                          "children": [
                            {
                              "value": "submit_url",
                              "children": []
                            },
                            {
                              "value": "f\"{base_url}/{input_data.model.value}\"",
                              "children": [
                                {
                                  "value": "f\"",
                                  "children": []
                                },
                                {
                                  "value": "{base_url}",
                                  "children": [
                                    {
                                      "value": "base_url",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "/",
                                  "children": []
                                },
                                {
                                  "value": "{input_data.model.value}",
                                  "children": [
                                    {
                                      "value": "input_data.model.value",
                                      "children": [
                                        {
                                          "value": "input_data.model",
                                          "children": [
                                            {
                                              "value": "input_data",
                                              "children": []
                                            },
                                            {
                                              "value": "model",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "value",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "submit_data = {\"prompt\": input_data.prompt}",
                      "children": [
                        {
                          "value": "submit_data = {\"prompt\": input_data.prompt}",
                          "children": [
                            {
                              "value": "submit_data",
                              "children": []
                            },
                            {
                              "value": "{\"prompt\": input_data.prompt}",
                              "children": [
                                {
                                  "value": "\"prompt\": input_data.prompt",
                                  "children": [
                                    {
                                      "value": "\"prompt\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "prompt",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "input_data.prompt",
                                      "children": [
                                        {
                                          "value": "input_data",
                                          "children": []
                                        },
                                        {
                                          "value": "prompt",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "seen_logs = set()",
                      "children": [
                        {
                          "value": "seen_logs = set()",
                          "children": [
                            {
                              "value": "seen_logs",
                              "children": []
                            },
                            {
                              "value": "set()",
                              "children": [
                                {
                                  "value": "set",
                                  "children": []
                                },
                                {
                                  "value": "()",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "try:\n            # Submit request to queue\n            submit_response = httpx.post(submit_url, headers=headers, json=submit_data)\n            submit_response.raise_for_status()\n            request_data = submit_response.json()\n\n            # Get request_id and urls from initial response\n            request_id = request_data.get(\"request_id\")\n            status_url = request_data.get(\"status_url\")\n            result_url = request_data.get(\"response_url\")\n\n            if not all([request_id, status_url, result_url]):\n                raise ValueError(\"Missing required data in submission response\")\n\n            # Poll for status with exponential backoff\n            max_attempts = 30\n            attempt = 0\n            base_wait_time = 5\n\n            while attempt < max_attempts:\n                status_response = httpx.get(f\"{status_url}?logs=1\", headers=headers)\n                status_response.raise_for_status()\n                status_data = status_response.json()\n\n                # Process new logs only\n                logs = status_data.get(\"logs\", [])\n                if logs and isinstance(logs, list):\n                    for log in logs:\n                        if isinstance(log, dict):\n                            # Create a unique key for this log entry\n                            log_key = (\n                                f\"{log.get('timestamp', '')}-{log.get('message', '')}\"\n                            )\n                            if log_key not in seen_logs:\n                                seen_logs.add(log_key)\n                                message = log.get(\"message\", \"\")\n                                if message:\n                                    logger.debug(\n                                        f\"[FAL Generation] [{log.get('level', 'INFO')}] [{log.get('source', '')}] [{log.get('timestamp', '')}] {message}\"\n                                    )\n\n                status = status_data.get(\"status\")\n                if status == \"COMPLETED\":\n                    # Get the final result\n                    result_response = httpx.get(result_url, headers=headers)\n                    result_response.raise_for_status()\n                    result_data = result_response.json()\n\n                    if \"video\" not in result_data or not isinstance(\n                        result_data[\"video\"], dict\n                    ):\n                        raise ValueError(\"Invalid response format - missing video data\")\n\n                    video_url = result_data[\"video\"].get(\"url\")\n                    if not video_url:\n                        raise ValueError(\"No video URL in response\")\n\n                    return video_url\n\n                elif status == \"FAILED\":\n                    error_msg = status_data.get(\"error\", \"No error details provided\")\n                    raise RuntimeError(f\"Video generation failed: {error_msg}\")\n                elif status == \"IN_QUEUE\":\n                    position = status_data.get(\"queue_position\", \"unknown\")\n                    logger.debug(\n                        f\"[FAL Generation] Status: In queue, position: {position}\"\n                    )\n                elif status == \"IN_PROGRESS\":\n                    logger.debug(\n                        \"[FAL Generation] Status: Request is being processed...\"\n                    )\n                else:\n                    logger.info(f\"[FAL Generation] Status: Unknown status: {status}\")\n\n                wait_time = min(base_wait_time * (2**attempt), 60)  # Cap at 60 seconds\n                time.sleep(wait_time)\n                attempt += 1\n\n            raise RuntimeError(\"Maximum polling attempts reached\")\n\n        except httpx.HTTPError as e:\n            raise RuntimeError(f\"API request failed: {str(e)}\")",
                      "children": [
                        {
                          "value": "# Submit request to queue",
                          "children": []
                        },
                        {
                          "value": "submit_response = httpx.post(submit_url, headers=headers, json=submit_data)\n            submit_response.raise_for_status()\n            request_data = submit_response.json()\n\n            # Get request_id and urls from initial response\n            request_id = request_data.get(\"request_id\")\n            status_url = request_data.get(\"status_url\")\n            result_url = request_data.get(\"response_url\")\n\n            if not all([request_id, status_url, result_url]):\n                raise ValueError(\"Missing required data in submission response\")\n\n            # Poll for status with exponential backoff\n            max_attempts = 30\n            attempt = 0\n            base_wait_time = 5\n\n            while attempt < max_attempts:\n                status_response = httpx.get(f\"{status_url}?logs=1\", headers=headers)\n                status_response.raise_for_status()\n                status_data = status_response.json()\n\n                # Process new logs only\n                logs = status_data.get(\"logs\", [])\n                if logs and isinstance(logs, list):\n                    for log in logs:\n                        if isinstance(log, dict):\n                            # Create a unique key for this log entry\n                            log_key = (\n                                f\"{log.get('timestamp', '')}-{log.get('message', '')}\"\n                            )\n                            if log_key not in seen_logs:\n                                seen_logs.add(log_key)\n                                message = log.get(\"message\", \"\")\n                                if message:\n                                    logger.debug(\n                                        f\"[FAL Generation] [{log.get('level', 'INFO')}] [{log.get('source', '')}] [{log.get('timestamp', '')}] {message}\"\n                                    )\n\n                status = status_data.get(\"status\")\n                if status == \"COMPLETED\":\n                    # Get the final result\n                    result_response = httpx.get(result_url, headers=headers)\n                    result_response.raise_for_status()\n                    result_data = result_response.json()\n\n                    if \"video\" not in result_data or not isinstance(\n                        result_data[\"video\"], dict\n                    ):\n                        raise ValueError(\"Invalid response format - missing video data\")\n\n                    video_url = result_data[\"video\"].get(\"url\")\n                    if not video_url:\n                        raise ValueError(\"No video URL in response\")\n\n                    return video_url\n\n                elif status == \"FAILED\":\n                    error_msg = status_data.get(\"error\", \"No error details provided\")\n                    raise RuntimeError(f\"Video generation failed: {error_msg}\")\n                elif status == \"IN_QUEUE\":\n                    position = status_data.get(\"queue_position\", \"unknown\")\n                    logger.debug(\n                        f\"[FAL Generation] Status: In queue, position: {position}\"\n                    )\n                elif status == \"IN_PROGRESS\":\n                    logger.debug(\n                        \"[FAL Generation] Status: Request is being processed...\"\n                    )\n                else:\n                    logger.info(f\"[FAL Generation] Status: Unknown status: {status}\")\n\n                wait_time = min(base_wait_time * (2**attempt), 60)  # Cap at 60 seconds\n                time.sleep(wait_time)\n                attempt += 1\n\n            raise RuntimeError(\"Maximum polling attempts reached\")",
                          "children": [
                            {
                              "value": "submit_response = httpx.post(submit_url, headers=headers, json=submit_data)",
                              "children": [
                                {
                                  "value": "submit_response = httpx.post(submit_url, headers=headers, json=submit_data)",
                                  "children": [
                                    {
                                      "value": "submit_response",
                                      "children": []
                                    },
                                    {
                                      "value": "httpx.post(submit_url, headers=headers, json=submit_data)",
                                      "children": [
                                        {
                                          "value": "httpx.post",
                                          "children": [
                                            {
                                              "value": "httpx",
                                              "children": []
                                            },
                                            {
                                              "value": "post",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(submit_url, headers=headers, json=submit_data)",
                                          "children": [
                                            {
                                              "value": "submit_url",
                                              "children": []
                                            },
                                            {
                                              "value": "headers=headers",
                                              "children": [
                                                {
                                                  "value": "headers",
                                                  "children": []
                                                },
                                                {
                                                  "value": "headers",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "json=submit_data",
                                              "children": [
                                                {
                                                  "value": "json",
                                                  "children": []
                                                },
                                                {
                                                  "value": "submit_data",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "submit_response.raise_for_status()",
                              "children": [
                                {
                                  "value": "submit_response.raise_for_status()",
                                  "children": [
                                    {
                                      "value": "submit_response.raise_for_status",
                                      "children": [
                                        {
                                          "value": "submit_response",
                                          "children": []
                                        },
                                        {
                                          "value": "raise_for_status",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "()",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "request_data = submit_response.json()",
                              "children": [
                                {
                                  "value": "request_data = submit_response.json()",
                                  "children": [
                                    {
                                      "value": "request_data",
                                      "children": []
                                    },
                                    {
                                      "value": "submit_response.json()",
                                      "children": [
                                        {
                                          "value": "submit_response.json",
                                          "children": [
                                            {
                                              "value": "submit_response",
                                              "children": []
                                            },
                                            {
                                              "value": "json",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "()",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "# Get request_id and urls from initial response",
                              "children": []
                            },
                            {
                              "value": "request_id = request_data.get(\"request_id\")",
                              "children": [
                                {
                                  "value": "request_id = request_data.get(\"request_id\")",
                                  "children": [
                                    {
                                      "value": "request_id",
                                      "children": []
                                    },
                                    {
                                      "value": "request_data.get(\"request_id\")",
                                      "children": [
                                        {
                                          "value": "request_data.get",
                                          "children": [
                                            {
                                              "value": "request_data",
                                              "children": []
                                            },
                                            {
                                              "value": "get",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(\"request_id\")",
                                          "children": [
                                            {
                                              "value": "\"request_id\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "request_id",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "status_url = request_data.get(\"status_url\")",
                              "children": [
                                {
                                  "value": "status_url = request_data.get(\"status_url\")",
                                  "children": [
                                    {
                                      "value": "status_url",
                                      "children": []
                                    },
                                    {
                                      "value": "request_data.get(\"status_url\")",
                                      "children": [
                                        {
                                          "value": "request_data.get",
                                          "children": [
                                            {
                                              "value": "request_data",
                                              "children": []
                                            },
                                            {
                                              "value": "get",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(\"status_url\")",
                                          "children": [
                                            {
                                              "value": "\"status_url\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "status_url",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "result_url = request_data.get(\"response_url\")",
                              "children": [
                                {
                                  "value": "result_url = request_data.get(\"response_url\")",
                                  "children": [
                                    {
                                      "value": "result_url",
                                      "children": []
                                    },
                                    {
                                      "value": "request_data.get(\"response_url\")",
                                      "children": [
                                        {
                                          "value": "request_data.get",
                                          "children": [
                                            {
                                              "value": "request_data",
                                              "children": []
                                            },
                                            {
                                              "value": "get",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(\"response_url\")",
                                          "children": [
                                            {
                                              "value": "\"response_url\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "response_url",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "if not all([request_id, status_url, result_url]):\n                raise ValueError(\"Missing required data in submission response\")",
                              "children": [
                                {
                                  "value": "not all([request_id, status_url, result_url])",
                                  "children": [
                                    {
                                      "value": "all([request_id, status_url, result_url])",
                                      "children": [
                                        {
                                          "value": "all",
                                          "children": []
                                        },
                                        {
                                          "value": "([request_id, status_url, result_url])",
                                          "children": [
                                            {
                                              "value": "[request_id, status_url, result_url]",
                                              "children": [
                                                {
                                                  "value": "request_id",
                                                  "children": []
                                                },
                                                {
                                                  "value": "status_url",
                                                  "children": []
                                                },
                                                {
                                                  "value": "result_url",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "raise ValueError(\"Missing required data in submission response\")",
                                  "children": [
                                    {
                                      "value": "raise ValueError(\"Missing required data in submission response\")",
                                      "children": [
                                        {
                                          "value": "ValueError(\"Missing required data in submission response\")",
                                          "children": [
                                            {
                                              "value": "ValueError",
                                              "children": []
                                            },
                                            {
                                              "value": "(\"Missing required data in submission response\")",
                                              "children": [
                                                {
                                                  "value": "\"Missing required data in submission response\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "Missing required data in submission response",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "# Poll for status with exponential backoff",
                              "children": []
                            },
                            {
                              "value": "max_attempts = 30",
                              "children": [
                                {
                                  "value": "max_attempts = 30",
                                  "children": [
                                    {
                                      "value": "max_attempts",
                                      "children": []
                                    },
                                    {
                                      "value": "30",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "attempt = 0",
                              "children": [
                                {
                                  "value": "attempt = 0",
                                  "children": [
                                    {
                                      "value": "attempt",
                                      "children": []
                                    },
                                    {
                                      "value": "0",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "base_wait_time = 5",
                              "children": [
                                {
                                  "value": "base_wait_time = 5",
                                  "children": [
                                    {
                                      "value": "base_wait_time",
                                      "children": []
                                    },
                                    {
                                      "value": "5",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "while attempt < max_attempts:\n                status_response = httpx.get(f\"{status_url}?logs=1\", headers=headers)\n                status_response.raise_for_status()\n                status_data = status_response.json()\n\n                # Process new logs only\n                logs = status_data.get(\"logs\", [])\n                if logs and isinstance(logs, list):\n                    for log in logs:\n                        if isinstance(log, dict):\n                            # Create a unique key for this log entry\n                            log_key = (\n                                f\"{log.get('timestamp', '')}-{log.get('message', '')}\"\n                            )\n                            if log_key not in seen_logs:\n                                seen_logs.add(log_key)\n                                message = log.get(\"message\", \"\")\n                                if message:\n                                    logger.debug(\n                                        f\"[FAL Generation] [{log.get('level', 'INFO')}] [{log.get('source', '')}] [{log.get('timestamp', '')}] {message}\"\n                                    )\n\n                status = status_data.get(\"status\")\n                if status == \"COMPLETED\":\n                    # Get the final result\n                    result_response = httpx.get(result_url, headers=headers)\n                    result_response.raise_for_status()\n                    result_data = result_response.json()\n\n                    if \"video\" not in result_data or not isinstance(\n                        result_data[\"video\"], dict\n                    ):\n                        raise ValueError(\"Invalid response format - missing video data\")\n\n                    video_url = result_data[\"video\"].get(\"url\")\n                    if not video_url:\n                        raise ValueError(\"No video URL in response\")\n\n                    return video_url\n\n                elif status == \"FAILED\":\n                    error_msg = status_data.get(\"error\", \"No error details provided\")\n                    raise RuntimeError(f\"Video generation failed: {error_msg}\")\n                elif status == \"IN_QUEUE\":\n                    position = status_data.get(\"queue_position\", \"unknown\")\n                    logger.debug(\n                        f\"[FAL Generation] Status: In queue, position: {position}\"\n                    )\n                elif status == \"IN_PROGRESS\":\n                    logger.debug(\n                        \"[FAL Generation] Status: Request is being processed...\"\n                    )\n                else:\n                    logger.info(f\"[FAL Generation] Status: Unknown status: {status}\")\n\n                wait_time = min(base_wait_time * (2**attempt), 60)  # Cap at 60 seconds\n                time.sleep(wait_time)\n                attempt += 1",
                              "children": [
                                {
                                  "value": "attempt < max_attempts",
                                  "children": [
                                    {
                                      "value": "attempt",
                                      "children": []
                                    },
                                    {
                                      "value": "max_attempts",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "status_response = httpx.get(f\"{status_url}?logs=1\", headers=headers)\n                status_response.raise_for_status()\n                status_data = status_response.json()\n\n                # Process new logs only\n                logs = status_data.get(\"logs\", [])\n                if logs and isinstance(logs, list):\n                    for log in logs:\n                        if isinstance(log, dict):\n                            # Create a unique key for this log entry\n                            log_key = (\n                                f\"{log.get('timestamp', '')}-{log.get('message', '')}\"\n                            )\n                            if log_key not in seen_logs:\n                                seen_logs.add(log_key)\n                                message = log.get(\"message\", \"\")\n                                if message:\n                                    logger.debug(\n                                        f\"[FAL Generation] [{log.get('level', 'INFO')}] [{log.get('source', '')}] [{log.get('timestamp', '')}] {message}\"\n                                    )\n\n                status = status_data.get(\"status\")\n                if status == \"COMPLETED\":\n                    # Get the final result\n                    result_response = httpx.get(result_url, headers=headers)\n                    result_response.raise_for_status()\n                    result_data = result_response.json()\n\n                    if \"video\" not in result_data or not isinstance(\n                        result_data[\"video\"], dict\n                    ):\n                        raise ValueError(\"Invalid response format - missing video data\")\n\n                    video_url = result_data[\"video\"].get(\"url\")\n                    if not video_url:\n                        raise ValueError(\"No video URL in response\")\n\n                    return video_url\n\n                elif status == \"FAILED\":\n                    error_msg = status_data.get(\"error\", \"No error details provided\")\n                    raise RuntimeError(f\"Video generation failed: {error_msg}\")\n                elif status == \"IN_QUEUE\":\n                    position = status_data.get(\"queue_position\", \"unknown\")\n                    logger.debug(\n                        f\"[FAL Generation] Status: In queue, position: {position}\"\n                    )\n                elif status == \"IN_PROGRESS\":\n                    logger.debug(\n                        \"[FAL Generation] Status: Request is being processed...\"\n                    )\n                else:\n                    logger.info(f\"[FAL Generation] Status: Unknown status: {status}\")\n\n                wait_time = min(base_wait_time * (2**attempt), 60)  # Cap at 60 seconds\n                time.sleep(wait_time)\n                attempt += 1",
                                  "children": [
                                    {
                                      "value": "status_response = httpx.get(f\"{status_url}?logs=1\", headers=headers)",
                                      "children": [
                                        {
                                          "value": "status_response = httpx.get(f\"{status_url}?logs=1\", headers=headers)",
                                          "children": [
                                            {
                                              "value": "status_response",
                                              "children": []
                                            },
                                            {
                                              "value": "httpx.get(f\"{status_url}?logs=1\", headers=headers)",
                                              "children": [
                                                {
                                                  "value": "httpx.get",
                                                  "children": [
                                                    {
                                                      "value": "httpx",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "get",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "(f\"{status_url}?logs=1\", headers=headers)",
                                                  "children": [
                                                    {
                                                      "value": "f\"{status_url}?logs=1\"",
                                                      "children": [
                                                        {
                                                          "value": "f\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "{status_url}",
                                                          "children": [
                                                            {
                                                              "value": "status_url",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "?logs=1",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "headers=headers",
                                                      "children": [
                                                        {
                                                          "value": "headers",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "headers",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "status_response.raise_for_status()",
                                      "children": [
                                        {
                                          "value": "status_response.raise_for_status()",
                                          "children": [
                                            {
                                              "value": "status_response.raise_for_status",
                                              "children": [
                                                {
                                                  "value": "status_response",
                                                  "children": []
                                                },
                                                {
                                                  "value": "raise_for_status",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "()",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "status_data = status_response.json()",
                                      "children": [
                                        {
                                          "value": "status_data = status_response.json()",
                                          "children": [
                                            {
                                              "value": "status_data",
                                              "children": []
                                            },
                                            {
                                              "value": "status_response.json()",
                                              "children": [
                                                {
                                                  "value": "status_response.json",
                                                  "children": [
                                                    {
                                                      "value": "status_response",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "json",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "()",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "# Process new logs only",
                                      "children": []
                                    },
                                    {
                                      "value": "logs = status_data.get(\"logs\", [])",
                                      "children": [
                                        {
                                          "value": "logs = status_data.get(\"logs\", [])",
                                          "children": [
                                            {
                                              "value": "logs",
                                              "children": []
                                            },
                                            {
                                              "value": "status_data.get(\"logs\", [])",
                                              "children": [
                                                {
                                                  "value": "status_data.get",
                                                  "children": [
                                                    {
                                                      "value": "status_data",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "get",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "(\"logs\", [])",
                                                  "children": [
                                                    {
                                                      "value": "\"logs\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "logs",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "[]",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "if logs and isinstance(logs, list):\n                    for log in logs:\n                        if isinstance(log, dict):\n                            # Create a unique key for this log entry\n                            log_key = (\n                                f\"{log.get('timestamp', '')}-{log.get('message', '')}\"\n                            )\n                            if log_key not in seen_logs:\n                                seen_logs.add(log_key)\n                                message = log.get(\"message\", \"\")\n                                if message:\n                                    logger.debug(\n                                        f\"[FAL Generation] [{log.get('level', 'INFO')}] [{log.get('source', '')}] [{log.get('timestamp', '')}] {message}\"\n                                    )",
                                      "children": [
                                        {
                                          "value": "logs and isinstance(logs, list)",
                                          "children": [
                                            {
                                              "value": "logs",
                                              "children": []
                                            },
                                            {
                                              "value": "isinstance(logs, list)",
                                              "children": [
                                                {
                                                  "value": "isinstance",
                                                  "children": []
                                                },
                                                {
                                                  "value": "(logs, list)",
                                                  "children": [
                                                    {
                                                      "value": "logs",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "list",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "for log in logs:\n                        if isinstance(log, dict):\n                            # Create a unique key for this log entry\n                            log_key = (\n                                f\"{log.get('timestamp', '')}-{log.get('message', '')}\"\n                            )\n                            if log_key not in seen_logs:\n                                seen_logs.add(log_key)\n                                message = log.get(\"message\", \"\")\n                                if message:\n                                    logger.debug(\n                                        f\"[FAL Generation] [{log.get('level', 'INFO')}] [{log.get('source', '')}] [{log.get('timestamp', '')}] {message}\"\n                                    )",
                                          "children": [
                                            {
                                              "value": "for log in logs:\n                        if isinstance(log, dict):\n                            # Create a unique key for this log entry\n                            log_key = (\n                                f\"{log.get('timestamp', '')}-{log.get('message', '')}\"\n                            )\n                            if log_key not in seen_logs:\n                                seen_logs.add(log_key)\n                                message = log.get(\"message\", \"\")\n                                if message:\n                                    logger.debug(\n                                        f\"[FAL Generation] [{log.get('level', 'INFO')}] [{log.get('source', '')}] [{log.get('timestamp', '')}] {message}\"\n                                    )",
                                              "children": [
                                                {
                                                  "value": "log",
                                                  "children": []
                                                },
                                                {
                                                  "value": "logs",
                                                  "children": []
                                                },
                                                {
                                                  "value": "if isinstance(log, dict):\n                            # Create a unique key for this log entry\n                            log_key = (\n                                f\"{log.get('timestamp', '')}-{log.get('message', '')}\"\n                            )\n                            if log_key not in seen_logs:\n                                seen_logs.add(log_key)\n                                message = log.get(\"message\", \"\")\n                                if message:\n                                    logger.debug(\n                                        f\"[FAL Generation] [{log.get('level', 'INFO')}] [{log.get('source', '')}] [{log.get('timestamp', '')}] {message}\"\n                                    )",
                                                  "children": [
                                                    {
                                                      "value": "if isinstance(log, dict):\n                            # Create a unique key for this log entry\n                            log_key = (\n                                f\"{log.get('timestamp', '')}-{log.get('message', '')}\"\n                            )\n                            if log_key not in seen_logs:\n                                seen_logs.add(log_key)\n                                message = log.get(\"message\", \"\")\n                                if message:\n                                    logger.debug(\n                                        f\"[FAL Generation] [{log.get('level', 'INFO')}] [{log.get('source', '')}] [{log.get('timestamp', '')}] {message}\"\n                                    )",
                                                      "children": [
                                                        {
                                                          "value": "isinstance(log, dict)",
                                                          "children": [
                                                            {
                                                              "value": "isinstance",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "(log, dict)",
                                                              "children": [
                                                                {
                                                                  "value": "log",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "dict",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "# Create a unique key for this log entry",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "log_key = (\n                                f\"{log.get('timestamp', '')}-{log.get('message', '')}\"\n                            )\n                            if log_key not in seen_logs:\n                                seen_logs.add(log_key)\n                                message = log.get(\"message\", \"\")\n                                if message:\n                                    logger.debug(\n                                        f\"[FAL Generation] [{log.get('level', 'INFO')}] [{log.get('source', '')}] [{log.get('timestamp', '')}] {message}\"\n                                    )",
                                                          "children": [
                                                            {
                                                              "value": "log_key = (\n                                f\"{log.get('timestamp', '')}-{log.get('message', '')}\"\n                            )",
                                                              "children": [
                                                                {
                                                                  "value": "log_key = (\n                                f\"{log.get('timestamp', '')}-{log.get('message', '')}\"\n                            )",
                                                                  "children": [
                                                                    {
                                                                      "value": "log_key",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "(\n                                f\"{log.get('timestamp', '')}-{log.get('message', '')}\"\n                            )",
                                                                      "children": [
                                                                        {
                                                                          "value": "f\"{log.get('timestamp', '')}-{log.get('message', '')}\"",
                                                                          "children": [
                                                                            {
                                                                              "value": "f\"",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "value": "{log.get('timestamp', '')}",
                                                                              "children": [
                                                                                {
                                                                                  "value": "log.get('timestamp', '')",
                                                                                  "children": [
                                                                                    {
                                                                                      "value": "log.get",
                                                                                      "children": [
                                                                                        {
                                                                                          "value": "log",
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "value": "get",
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "value": "('timestamp', '')",
                                                                                      "children": [
                                                                                        {
                                                                                          "value": "'timestamp'",
                                                                                          "children": [
                                                                                            {
                                                                                              "value": "'",
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "value": "timestamp",
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "value": "'",
                                                                                              "children": []
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        {
                                                                                          "value": "''",
                                                                                          "children": [
                                                                                            {
                                                                                              "value": "'",
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "value": "'",
                                                                                              "children": []
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "value": "-",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "value": "{log.get('message', '')}",
                                                                              "children": [
                                                                                {
                                                                                  "value": "log.get('message', '')",
                                                                                  "children": [
                                                                                    {
                                                                                      "value": "log.get",
                                                                                      "children": [
                                                                                        {
                                                                                          "value": "log",
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "value": "get",
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "value": "('message', '')",
                                                                                      "children": [
                                                                                        {
                                                                                          "value": "'message'",
                                                                                          "children": [
                                                                                            {
                                                                                              "value": "'",
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "value": "message",
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "value": "'",
                                                                                              "children": []
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        {
                                                                                          "value": "''",
                                                                                          "children": [
                                                                                            {
                                                                                              "value": "'",
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "value": "'",
                                                                                              "children": []
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "value": "\"",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "if log_key not in seen_logs:\n                                seen_logs.add(log_key)\n                                message = log.get(\"message\", \"\")\n                                if message:\n                                    logger.debug(\n                                        f\"[FAL Generation] [{log.get('level', 'INFO')}] [{log.get('source', '')}] [{log.get('timestamp', '')}] {message}\"\n                                    )",
                                                              "children": [
                                                                {
                                                                  "value": "log_key not in seen_logs",
                                                                  "children": [
                                                                    {
                                                                      "value": "log_key",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "seen_logs",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "value": "seen_logs.add(log_key)\n                                message = log.get(\"message\", \"\")\n                                if message:\n                                    logger.debug(\n                                        f\"[FAL Generation] [{log.get('level', 'INFO')}] [{log.get('source', '')}] [{log.get('timestamp', '')}] {message}\"\n                                    )",
                                                                  "children": [
                                                                    {
                                                                      "value": "seen_logs.add(log_key)",
                                                                      "children": [
                                                                        {
                                                                          "value": "seen_logs.add(log_key)",
                                                                          "children": [
                                                                            {
                                                                              "value": "seen_logs.add",
                                                                              "children": [
                                                                                {
                                                                                  "value": "seen_logs",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "value": "add",
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "value": "(log_key)",
                                                                              "children": [
                                                                                {
                                                                                  "value": "log_key",
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "value": "message = log.get(\"message\", \"\")",
                                                                      "children": [
                                                                        {
                                                                          "value": "message = log.get(\"message\", \"\")",
                                                                          "children": [
                                                                            {
                                                                              "value": "message",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "value": "log.get(\"message\", \"\")",
                                                                              "children": [
                                                                                {
                                                                                  "value": "log.get",
                                                                                  "children": [
                                                                                    {
                                                                                      "value": "log",
                                                                                      "children": []
                                                                                    },
                                                                                    {
                                                                                      "value": "get",
                                                                                      "children": []
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                {
                                                                                  "value": "(\"message\", \"\")",
                                                                                  "children": [
                                                                                    {
                                                                                      "value": "\"message\"",
                                                                                      "children": [
                                                                                        {
                                                                                          "value": "\"",
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "value": "message",
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "value": "\"",
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "value": "\"\"",
                                                                                      "children": [
                                                                                        {
                                                                                          "value": "\"",
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "value": "\"",
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "value": "if message:\n                                    logger.debug(\n                                        f\"[FAL Generation] [{log.get('level', 'INFO')}] [{log.get('source', '')}] [{log.get('timestamp', '')}] {message}\"\n                                    )",
                                                                      "children": [
                                                                        {
                                                                          "value": "message",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "value": "logger.debug(\n                                        f\"[FAL Generation] [{log.get('level', 'INFO')}] [{log.get('source', '')}] [{log.get('timestamp', '')}] {message}\"\n                                    )",
                                                                          "children": [
                                                                            {
                                                                              "value": "logger.debug(\n                                        f\"[FAL Generation] [{log.get('level', 'INFO')}] [{log.get('source', '')}] [{log.get('timestamp', '')}] {message}\"\n                                    )",
                                                                              "children": [
                                                                                {
                                                                                  "value": "logger.debug(\n                                        f\"[FAL Generation] [{log.get('level', 'INFO')}] [{log.get('source', '')}] [{log.get('timestamp', '')}] {message}\"\n                                    )",
                                                                                  "children": [
                                                                                    {
                                                                                      "value": "logger.debug",
                                                                                      "children": [
                                                                                        {
                                                                                          "value": "logger",
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "value": "debug",
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    {
                                                                                      "value": "(\n                                        f\"[FAL Generation] [{log.get('level', 'INFO')}] [{log.get('source', '')}] [{log.get('timestamp', '')}] {message}\"\n                                    )",
                                                                                      "children": [
                                                                                        {
                                                                                          "value": "f\"[FAL Generation] [{log.get('level', 'INFO')}] [{log.get('source', '')}] [{log.get('timestamp', '')}] {message}\"",
                                                                                          "children": [
                                                                                            {
                                                                                              "value": "f\"",
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "value": "[FAL Generation] [",
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "value": "{log.get('level', 'INFO')}",
                                                                                              "children": [
                                                                                                {
                                                                                                  "value": "log.get('level', 'INFO')",
                                                                                                  "children": [
                                                                                                    {
                                                                                                      "value": "log.get",
                                                                                                      "children": [
                                                                                                        {
                                                                                                          "value": "log",
                                                                                                          "children": []
                                                                                                        },
                                                                                                        {
                                                                                                          "value": "get",
                                                                                                          "children": []
                                                                                                        }
                                                                                                      ]
                                                                                                    },
                                                                                                    {
                                                                                                      "value": "('level', 'INFO')",
                                                                                                      "children": [
                                                                                                        {
                                                                                                          "value": "'level'",
                                                                                                          "children": [
                                                                                                            {
                                                                                                              "value": "'",
                                                                                                              "children": []
                                                                                                            },
                                                                                                            {
                                                                                                              "value": "level",
                                                                                                              "children": []
                                                                                                            },
                                                                                                            {
                                                                                                              "value": "'",
                                                                                                              "children": []
                                                                                                            }
                                                                                                          ]
                                                                                                        },
                                                                                                        {
                                                                                                          "value": "'INFO'",
                                                                                                          "children": [
                                                                                                            {
                                                                                                              "value": "'",
                                                                                                              "children": []
                                                                                                            },
                                                                                                            {
                                                                                                              "value": "INFO",
                                                                                                              "children": []
                                                                                                            },
                                                                                                            {
                                                                                                              "value": "'",
                                                                                                              "children": []
                                                                                                            }
                                                                                                          ]
                                                                                                        }
                                                                                                      ]
                                                                                                    }
                                                                                                  ]
                                                                                                }
                                                                                              ]
                                                                                            },
                                                                                            {
                                                                                              "value": "] [",
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "value": "{log.get('source', '')}",
                                                                                              "children": [
                                                                                                {
                                                                                                  "value": "log.get('source', '')",
                                                                                                  "children": [
                                                                                                    {
                                                                                                      "value": "log.get",
                                                                                                      "children": [
                                                                                                        {
                                                                                                          "value": "log",
                                                                                                          "children": []
                                                                                                        },
                                                                                                        {
                                                                                                          "value": "get",
                                                                                                          "children": []
                                                                                                        }
                                                                                                      ]
                                                                                                    },
                                                                                                    {
                                                                                                      "value": "('source', '')",
                                                                                                      "children": [
                                                                                                        {
                                                                                                          "value": "'source'",
                                                                                                          "children": [
                                                                                                            {
                                                                                                              "value": "'",
                                                                                                              "children": []
                                                                                                            },
                                                                                                            {
                                                                                                              "value": "source",
                                                                                                              "children": []
                                                                                                            },
                                                                                                            {
                                                                                                              "value": "'",
                                                                                                              "children": []
                                                                                                            }
                                                                                                          ]
                                                                                                        },
                                                                                                        {
                                                                                                          "value": "''",
                                                                                                          "children": [
                                                                                                            {
                                                                                                              "value": "'",
                                                                                                              "children": []
                                                                                                            },
                                                                                                            {
                                                                                                              "value": "'",
                                                                                                              "children": []
                                                                                                            }
                                                                                                          ]
                                                                                                        }
                                                                                                      ]
                                                                                                    }
                                                                                                  ]
                                                                                                }
                                                                                              ]
                                                                                            },
                                                                                            {
                                                                                              "value": "] [",
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "value": "{log.get('timestamp', '')}",
                                                                                              "children": [
                                                                                                {
                                                                                                  "value": "log.get('timestamp', '')",
                                                                                                  "children": [
                                                                                                    {
                                                                                                      "value": "log.get",
                                                                                                      "children": [
                                                                                                        {
                                                                                                          "value": "log",
                                                                                                          "children": []
                                                                                                        },
                                                                                                        {
                                                                                                          "value": "get",
                                                                                                          "children": []
                                                                                                        }
                                                                                                      ]
                                                                                                    },
                                                                                                    {
                                                                                                      "value": "('timestamp', '')",
                                                                                                      "children": [
                                                                                                        {
                                                                                                          "value": "'timestamp'",
                                                                                                          "children": [
                                                                                                            {
                                                                                                              "value": "'",
                                                                                                              "children": []
                                                                                                            },
                                                                                                            {
                                                                                                              "value": "timestamp",
                                                                                                              "children": []
                                                                                                            },
                                                                                                            {
                                                                                                              "value": "'",
                                                                                                              "children": []
                                                                                                            }
                                                                                                          ]
                                                                                                        },
                                                                                                        {
                                                                                                          "value": "''",
                                                                                                          "children": [
                                                                                                            {
                                                                                                              "value": "'",
                                                                                                              "children": []
                                                                                                            },
                                                                                                            {
                                                                                                              "value": "'",
                                                                                                              "children": []
                                                                                                            }
                                                                                                          ]
                                                                                                        }
                                                                                                      ]
                                                                                                    }
                                                                                                  ]
                                                                                                }
                                                                                              ]
                                                                                            },
                                                                                            {
                                                                                              "value": "]",
                                                                                              "children": []
                                                                                            },
                                                                                            {
                                                                                              "value": "{message}",
                                                                                              "children": [
                                                                                                {
                                                                                                  "value": "message",
                                                                                                  "children": []
                                                                                                }
                                                                                              ]
                                                                                            },
                                                                                            {
                                                                                              "value": "\"",
                                                                                              "children": []
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "status = status_data.get(\"status\")",
                                      "children": [
                                        {
                                          "value": "status = status_data.get(\"status\")",
                                          "children": [
                                            {
                                              "value": "status",
                                              "children": []
                                            },
                                            {
                                              "value": "status_data.get(\"status\")",
                                              "children": [
                                                {
                                                  "value": "status_data.get",
                                                  "children": [
                                                    {
                                                      "value": "status_data",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "get",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "(\"status\")",
                                                  "children": [
                                                    {
                                                      "value": "\"status\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "status",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "if status == \"COMPLETED\":\n                    # Get the final result\n                    result_response = httpx.get(result_url, headers=headers)\n                    result_response.raise_for_status()\n                    result_data = result_response.json()\n\n                    if \"video\" not in result_data or not isinstance(\n                        result_data[\"video\"], dict\n                    ):\n                        raise ValueError(\"Invalid response format - missing video data\")\n\n                    video_url = result_data[\"video\"].get(\"url\")\n                    if not video_url:\n                        raise ValueError(\"No video URL in response\")\n\n                    return video_url\n\n                elif status == \"FAILED\":\n                    error_msg = status_data.get(\"error\", \"No error details provided\")\n                    raise RuntimeError(f\"Video generation failed: {error_msg}\")\n                elif status == \"IN_QUEUE\":\n                    position = status_data.get(\"queue_position\", \"unknown\")\n                    logger.debug(\n                        f\"[FAL Generation] Status: In queue, position: {position}\"\n                    )\n                elif status == \"IN_PROGRESS\":\n                    logger.debug(\n                        \"[FAL Generation] Status: Request is being processed...\"\n                    )\n                else:\n                    logger.info(f\"[FAL Generation] Status: Unknown status: {status}\")",
                                      "children": [
                                        {
                                          "value": "status == \"COMPLETED\"",
                                          "children": [
                                            {
                                              "value": "status",
                                              "children": []
                                            },
                                            {
                                              "value": "\"COMPLETED\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "COMPLETED",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "# Get the final result",
                                          "children": []
                                        },
                                        {
                                          "value": "result_response = httpx.get(result_url, headers=headers)\n                    result_response.raise_for_status()\n                    result_data = result_response.json()\n\n                    if \"video\" not in result_data or not isinstance(\n                        result_data[\"video\"], dict\n                    ):\n                        raise ValueError(\"Invalid response format - missing video data\")\n\n                    video_url = result_data[\"video\"].get(\"url\")\n                    if not video_url:\n                        raise ValueError(\"No video URL in response\")\n\n                    return video_url",
                                          "children": [
                                            {
                                              "value": "result_response = httpx.get(result_url, headers=headers)",
                                              "children": [
                                                {
                                                  "value": "result_response = httpx.get(result_url, headers=headers)",
                                                  "children": [
                                                    {
                                                      "value": "result_response",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "httpx.get(result_url, headers=headers)",
                                                      "children": [
                                                        {
                                                          "value": "httpx.get",
                                                          "children": [
                                                            {
                                                              "value": "httpx",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "get",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "(result_url, headers=headers)",
                                                          "children": [
                                                            {
                                                              "value": "result_url",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "headers=headers",
                                                              "children": [
                                                                {
                                                                  "value": "headers",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "headers",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "result_response.raise_for_status()",
                                              "children": [
                                                {
                                                  "value": "result_response.raise_for_status()",
                                                  "children": [
                                                    {
                                                      "value": "result_response.raise_for_status",
                                                      "children": [
                                                        {
                                                          "value": "result_response",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "raise_for_status",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "()",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "result_data = result_response.json()",
                                              "children": [
                                                {
                                                  "value": "result_data = result_response.json()",
                                                  "children": [
                                                    {
                                                      "value": "result_data",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "result_response.json()",
                                                      "children": [
                                                        {
                                                          "value": "result_response.json",
                                                          "children": [
                                                            {
                                                              "value": "result_response",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "json",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "()",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "if \"video\" not in result_data or not isinstance(\n                        result_data[\"video\"], dict\n                    ):\n                        raise ValueError(\"Invalid response format - missing video data\")",
                                              "children": [
                                                {
                                                  "value": "\"video\" not in result_data or not isinstance(\n                        result_data[\"video\"], dict\n                    )",
                                                  "children": [
                                                    {
                                                      "value": "\"video\" not in result_data",
                                                      "children": [
                                                        {
                                                          "value": "\"video\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "video",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "result_data",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "not isinstance(\n                        result_data[\"video\"], dict\n                    )",
                                                      "children": [
                                                        {
                                                          "value": "isinstance(\n                        result_data[\"video\"], dict\n                    )",
                                                          "children": [
                                                            {
                                                              "value": "isinstance",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "(\n                        result_data[\"video\"], dict\n                    )",
                                                              "children": [
                                                                {
                                                                  "value": "result_data[\"video\"]",
                                                                  "children": [
                                                                    {
                                                                      "value": "result_data",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "\"video\"",
                                                                      "children": [
                                                                        {
                                                                          "value": "\"",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "value": "video",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "value": "\"",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "value": "dict",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "raise ValueError(\"Invalid response format - missing video data\")",
                                                  "children": [
                                                    {
                                                      "value": "raise ValueError(\"Invalid response format - missing video data\")",
                                                      "children": [
                                                        {
                                                          "value": "ValueError(\"Invalid response format - missing video data\")",
                                                          "children": [
                                                            {
                                                              "value": "ValueError",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "(\"Invalid response format - missing video data\")",
                                                              "children": [
                                                                {
                                                                  "value": "\"Invalid response format - missing video data\"",
                                                                  "children": [
                                                                    {
                                                                      "value": "\"",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "Invalid response format - missing video data",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "\"",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "video_url = result_data[\"video\"].get(\"url\")",
                                              "children": [
                                                {
                                                  "value": "video_url = result_data[\"video\"].get(\"url\")",
                                                  "children": [
                                                    {
                                                      "value": "video_url",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "result_data[\"video\"].get(\"url\")",
                                                      "children": [
                                                        {
                                                          "value": "result_data[\"video\"].get",
                                                          "children": [
                                                            {
                                                              "value": "result_data[\"video\"]",
                                                              "children": [
                                                                {
                                                                  "value": "result_data",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "\"video\"",
                                                                  "children": [
                                                                    {
                                                                      "value": "\"",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "video",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "\"",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "get",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "(\"url\")",
                                                          "children": [
                                                            {
                                                              "value": "\"url\"",
                                                              "children": [
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "url",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "if not video_url:\n                        raise ValueError(\"No video URL in response\")",
                                              "children": [
                                                {
                                                  "value": "not video_url",
                                                  "children": [
                                                    {
                                                      "value": "video_url",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "raise ValueError(\"No video URL in response\")",
                                                  "children": [
                                                    {
                                                      "value": "raise ValueError(\"No video URL in response\")",
                                                      "children": [
                                                        {
                                                          "value": "ValueError(\"No video URL in response\")",
                                                          "children": [
                                                            {
                                                              "value": "ValueError",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "(\"No video URL in response\")",
                                                              "children": [
                                                                {
                                                                  "value": "\"No video URL in response\"",
                                                                  "children": [
                                                                    {
                                                                      "value": "\"",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "No video URL in response",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "\"",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "return video_url",
                                              "children": [
                                                {
                                                  "value": "video_url",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "elif status == \"FAILED\":\n                    error_msg = status_data.get(\"error\", \"No error details provided\")\n                    raise RuntimeError(f\"Video generation failed: {error_msg}\")",
                                          "children": [
                                            {
                                              "value": "status == \"FAILED\"",
                                              "children": [
                                                {
                                                  "value": "status",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"FAILED\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "FAILED",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "error_msg = status_data.get(\"error\", \"No error details provided\")\n                    raise RuntimeError(f\"Video generation failed: {error_msg}\")",
                                              "children": [
                                                {
                                                  "value": "error_msg = status_data.get(\"error\", \"No error details provided\")",
                                                  "children": [
                                                    {
                                                      "value": "error_msg = status_data.get(\"error\", \"No error details provided\")",
                                                      "children": [
                                                        {
                                                          "value": "error_msg",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "status_data.get(\"error\", \"No error details provided\")",
                                                          "children": [
                                                            {
                                                              "value": "status_data.get",
                                                              "children": [
                                                                {
                                                                  "value": "status_data",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "get",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "(\"error\", \"No error details provided\")",
                                                              "children": [
                                                                {
                                                                  "value": "\"error\"",
                                                                  "children": [
                                                                    {
                                                                      "value": "\"",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "error",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "\"",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "value": "\"No error details provided\"",
                                                                  "children": [
                                                                    {
                                                                      "value": "\"",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "No error details provided",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "\"",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "raise RuntimeError(f\"Video generation failed: {error_msg}\")",
                                                  "children": [
                                                    {
                                                      "value": "RuntimeError(f\"Video generation failed: {error_msg}\")",
                                                      "children": [
                                                        {
                                                          "value": "RuntimeError",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "(f\"Video generation failed: {error_msg}\")",
                                                          "children": [
                                                            {
                                                              "value": "f\"Video generation failed: {error_msg}\"",
                                                              "children": [
                                                                {
                                                                  "value": "f\"",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "Video generation failed:",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "{error_msg}",
                                                                  "children": [
                                                                    {
                                                                      "value": "error_msg",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "elif status == \"IN_QUEUE\":\n                    position = status_data.get(\"queue_position\", \"unknown\")\n                    logger.debug(\n                        f\"[FAL Generation] Status: In queue, position: {position}\"\n                    )",
                                          "children": [
                                            {
                                              "value": "status == \"IN_QUEUE\"",
                                              "children": [
                                                {
                                                  "value": "status",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"IN_QUEUE\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "IN_QUEUE",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "position = status_data.get(\"queue_position\", \"unknown\")\n                    logger.debug(\n                        f\"[FAL Generation] Status: In queue, position: {position}\"\n                    )",
                                              "children": [
                                                {
                                                  "value": "position = status_data.get(\"queue_position\", \"unknown\")",
                                                  "children": [
                                                    {
                                                      "value": "position = status_data.get(\"queue_position\", \"unknown\")",
                                                      "children": [
                                                        {
                                                          "value": "position",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "status_data.get(\"queue_position\", \"unknown\")",
                                                          "children": [
                                                            {
                                                              "value": "status_data.get",
                                                              "children": [
                                                                {
                                                                  "value": "status_data",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "get",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "(\"queue_position\", \"unknown\")",
                                                              "children": [
                                                                {
                                                                  "value": "\"queue_position\"",
                                                                  "children": [
                                                                    {
                                                                      "value": "\"",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "queue_position",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "\"",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "value": "\"unknown\"",
                                                                  "children": [
                                                                    {
                                                                      "value": "\"",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "unknown",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "\"",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "logger.debug(\n                        f\"[FAL Generation] Status: In queue, position: {position}\"\n                    )",
                                                  "children": [
                                                    {
                                                      "value": "logger.debug(\n                        f\"[FAL Generation] Status: In queue, position: {position}\"\n                    )",
                                                      "children": [
                                                        {
                                                          "value": "logger.debug",
                                                          "children": [
                                                            {
                                                              "value": "logger",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "debug",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "(\n                        f\"[FAL Generation] Status: In queue, position: {position}\"\n                    )",
                                                          "children": [
                                                            {
                                                              "value": "f\"[FAL Generation] Status: In queue, position: {position}\"",
                                                              "children": [
                                                                {
                                                                  "value": "f\"",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "[FAL Generation] Status: In queue, position:",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "{position}",
                                                                  "children": [
                                                                    {
                                                                      "value": "position",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "elif status == \"IN_PROGRESS\":\n                    logger.debug(\n                        \"[FAL Generation] Status: Request is being processed...\"\n                    )",
                                          "children": [
                                            {
                                              "value": "status == \"IN_PROGRESS\"",
                                              "children": [
                                                {
                                                  "value": "status",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"IN_PROGRESS\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "IN_PROGRESS",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "logger.debug(\n                        \"[FAL Generation] Status: Request is being processed...\"\n                    )",
                                              "children": [
                                                {
                                                  "value": "logger.debug(\n                        \"[FAL Generation] Status: Request is being processed...\"\n                    )",
                                                  "children": [
                                                    {
                                                      "value": "logger.debug(\n                        \"[FAL Generation] Status: Request is being processed...\"\n                    )",
                                                      "children": [
                                                        {
                                                          "value": "logger.debug",
                                                          "children": [
                                                            {
                                                              "value": "logger",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "debug",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "(\n                        \"[FAL Generation] Status: Request is being processed...\"\n                    )",
                                                          "children": [
                                                            {
                                                              "value": "\"[FAL Generation] Status: Request is being processed...\"",
                                                              "children": [
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "[FAL Generation] Status: Request is being processed...",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "else:\n                    logger.info(f\"[FAL Generation] Status: Unknown status: {status}\")",
                                          "children": [
                                            {
                                              "value": "logger.info(f\"[FAL Generation] Status: Unknown status: {status}\")",
                                              "children": [
                                                {
                                                  "value": "logger.info(f\"[FAL Generation] Status: Unknown status: {status}\")",
                                                  "children": [
                                                    {
                                                      "value": "logger.info(f\"[FAL Generation] Status: Unknown status: {status}\")",
                                                      "children": [
                                                        {
                                                          "value": "logger.info",
                                                          "children": [
                                                            {
                                                              "value": "logger",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "info",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "(f\"[FAL Generation] Status: Unknown status: {status}\")",
                                                          "children": [
                                                            {
                                                              "value": "f\"[FAL Generation] Status: Unknown status: {status}\"",
                                                              "children": [
                                                                {
                                                                  "value": "f\"",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "[FAL Generation] Status: Unknown status:",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "{status}",
                                                                  "children": [
                                                                    {
                                                                      "value": "status",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "wait_time = min(base_wait_time * (2**attempt), 60)",
                                      "children": [
                                        {
                                          "value": "wait_time = min(base_wait_time * (2**attempt), 60)",
                                          "children": [
                                            {
                                              "value": "wait_time",
                                              "children": []
                                            },
                                            {
                                              "value": "min(base_wait_time * (2**attempt), 60)",
                                              "children": [
                                                {
                                                  "value": "min",
                                                  "children": []
                                                },
                                                {
                                                  "value": "(base_wait_time * (2**attempt), 60)",
                                                  "children": [
                                                    {
                                                      "value": "base_wait_time * (2**attempt)",
                                                      "children": [
                                                        {
                                                          "value": "base_wait_time",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "(2**attempt)",
                                                          "children": [
                                                            {
                                                              "value": "2**attempt",
                                                              "children": [
                                                                {
                                                                  "value": "2",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "attempt",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "60",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "# Cap at 60 seconds",
                                      "children": []
                                    },
                                    {
                                      "value": "time.sleep(wait_time)",
                                      "children": [
                                        {
                                          "value": "time.sleep(wait_time)",
                                          "children": [
                                            {
                                              "value": "time.sleep",
                                              "children": [
                                                {
                                                  "value": "time",
                                                  "children": []
                                                },
                                                {
                                                  "value": "sleep",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "(wait_time)",
                                              "children": [
                                                {
                                                  "value": "wait_time",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "attempt += 1",
                                      "children": [
                                        {
                                          "value": "attempt += 1",
                                          "children": [
                                            {
                                              "value": "attempt",
                                              "children": []
                                            },
                                            {
                                              "value": "1",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "raise RuntimeError(\"Maximum polling attempts reached\")",
                              "children": [
                                {
                                  "value": "RuntimeError(\"Maximum polling attempts reached\")",
                                  "children": [
                                    {
                                      "value": "RuntimeError",
                                      "children": []
                                    },
                                    {
                                      "value": "(\"Maximum polling attempts reached\")",
                                      "children": [
                                        {
                                          "value": "\"Maximum polling attempts reached\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Maximum polling attempts reached",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "except httpx.HTTPError as e:\n            raise RuntimeError(f\"API request failed: {str(e)}\")",
                          "children": [
                            {
                              "value": "httpx.HTTPError as e",
                              "children": [
                                {
                                  "value": "httpx.HTTPError",
                                  "children": [
                                    {
                                      "value": "httpx",
                                      "children": []
                                    },
                                    {
                                      "value": "HTTPError",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "e",
                                  "children": [
                                    {
                                      "value": "e",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "raise RuntimeError(f\"API request failed: {str(e)}\")",
                              "children": [
                                {
                                  "value": "raise RuntimeError(f\"API request failed: {str(e)}\")",
                                  "children": [
                                    {
                                      "value": "RuntimeError(f\"API request failed: {str(e)}\")",
                                      "children": [
                                        {
                                          "value": "RuntimeError",
                                          "children": []
                                        },
                                        {
                                          "value": "(f\"API request failed: {str(e)}\")",
                                          "children": [
                                            {
                                              "value": "f\"API request failed: {str(e)}\"",
                                              "children": [
                                                {
                                                  "value": "f\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "API request failed:",
                                                  "children": []
                                                },
                                                {
                                                  "value": "{str(e)}",
                                                  "children": [
                                                    {
                                                      "value": "str(e)",
                                                      "children": [
                                                        {
                                                          "value": "str",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "(e)",
                                                          "children": [
                                                            {
                                                              "value": "e",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def run(\n        self, input_data: Input, *, credentials: FalCredentials, **kwargs\n    ) -> BlockOutput:\n        try:\n            video_url = self.generate_video(input_data, credentials)\n            yield \"video_url\", video_url\n        except Exception as e:\n            error_message = str(e)\n            yield \"error\", error_message",
              "children": [
                {
                  "value": "run",
                  "children": []
                },
                {
                  "value": "(\n        self, input_data: Input, *, credentials: FalCredentials, **kwargs\n    )",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "input_data: Input",
                      "children": [
                        {
                          "value": "input_data",
                          "children": []
                        },
                        {
                          "value": "Input",
                          "children": [
                            {
                              "value": "Input",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "*",
                      "children": []
                    },
                    {
                      "value": "credentials: FalCredentials",
                      "children": [
                        {
                          "value": "credentials",
                          "children": []
                        },
                        {
                          "value": "FalCredentials",
                          "children": [
                            {
                              "value": "FalCredentials",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "**kwargs",
                      "children": [
                        {
                          "value": "kwargs",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "BlockOutput",
                  "children": [
                    {
                      "value": "BlockOutput",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "try:\n            video_url = self.generate_video(input_data, credentials)\n            yield \"video_url\", video_url\n        except Exception as e:\n            error_message = str(e)\n            yield \"error\", error_message",
                  "children": [
                    {
                      "value": "try:\n            video_url = self.generate_video(input_data, credentials)\n            yield \"video_url\", video_url\n        except Exception as e:\n            error_message = str(e)\n            yield \"error\", error_message",
                      "children": [
                        {
                          "value": "video_url = self.generate_video(input_data, credentials)\n            yield \"video_url\", video_url",
                          "children": [
                            {
                              "value": "video_url = self.generate_video(input_data, credentials)",
                              "children": [
                                {
                                  "value": "video_url = self.generate_video(input_data, credentials)",
                                  "children": [
                                    {
                                      "value": "video_url",
                                      "children": []
                                    },
                                    {
                                      "value": "self.generate_video(input_data, credentials)",
                                      "children": [
                                        {
                                          "value": "self.generate_video",
                                          "children": [
                                            {
                                              "value": "self",
                                              "children": []
                                            },
                                            {
                                              "value": "generate_video",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(input_data, credentials)",
                                          "children": [
                                            {
                                              "value": "input_data",
                                              "children": []
                                            },
                                            {
                                              "value": "credentials",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "yield \"video_url\", video_url",
                              "children": [
                                {
                                  "value": "yield \"video_url\", video_url",
                                  "children": [
                                    {
                                      "value": "\"video_url\", video_url",
                                      "children": [
                                        {
                                          "value": "\"video_url\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "video_url",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "video_url",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "except Exception as e:\n            error_message = str(e)\n            yield \"error\", error_message",
                          "children": [
                            {
                              "value": "Exception as e",
                              "children": [
                                {
                                  "value": "Exception",
                                  "children": []
                                },
                                {
                                  "value": "e",
                                  "children": [
                                    {
                                      "value": "e",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "error_message = str(e)\n            yield \"error\", error_message",
                              "children": [
                                {
                                  "value": "error_message = str(e)",
                                  "children": [
                                    {
                                      "value": "error_message = str(e)",
                                      "children": [
                                        {
                                          "value": "error_message",
                                          "children": []
                                        },
                                        {
                                          "value": "str(e)",
                                          "children": [
                                            {
                                              "value": "str",
                                              "children": []
                                            },
                                            {
                                              "value": "(e)",
                                              "children": [
                                                {
                                                  "value": "e",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "yield \"error\", error_message",
                                  "children": [
                                    {
                                      "value": "yield \"error\", error_message",
                                      "children": [
                                        {
                                          "value": "\"error\", error_message",
                                          "children": [
                                            {
                                              "value": "\"error\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "error",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "error_message",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}