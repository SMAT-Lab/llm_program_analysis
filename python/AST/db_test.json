{
  "value": "from datetime import datetime\n\nimport prisma.errors\nimport prisma.models\nimport pytest\nfrom prisma import Prisma\n\nimport backend.server.v2.store.db as db\nfrom backend.server.v2.store.model import Profile\n\n\n@pytest.fixture(autouse=True)\nasync def setup_prisma():\n    # Don't register client if already registered\n    try:\n        Prisma()\n    except prisma.errors.ClientAlreadyRegisteredError:\n        pass\n    yield\n\n\n@pytest.mark.asyncio\nasync def test_get_store_agents(mocker):\n    # Mock data\n    mock_agents = [\n        prisma.models.StoreAgent(\n            listing_id=\"test-id\",\n            storeListingVersionId=\"version123\",\n            slug=\"test-agent\",\n            agent_name=\"Test Agent\",\n            agent_video=None,\n            agent_image=[\"image.jpg\"],\n            featured=False,\n            creator_username=\"creator\",\n            creator_avatar=\"avatar.jpg\",\n            sub_heading=\"Test heading\",\n            description=\"Test description\",\n            categories=[],\n            runs=10,\n            rating=4.5,\n            versions=[\"1.0\"],\n            updated_at=datetime.now(),\n        )\n    ]\n\n    # Mock prisma calls\n    mock_store_agent = mocker.patch(\"prisma.models.StoreAgent.prisma\")\n    mock_store_agent.return_value.find_many = mocker.AsyncMock(return_value=mock_agents)\n    mock_store_agent.return_value.count = mocker.AsyncMock(return_value=1)\n\n    # Call function\n    result = await db.get_store_agents()\n\n    # Verify results\n    assert len(result.agents) == 1\n    assert result.agents[0].slug == \"test-agent\"\n    assert result.pagination.total_items == 1\n\n    # Verify mocks called correctly\n    mock_store_agent.return_value.find_many.assert_called_once()\n    mock_store_agent.return_value.count.assert_called_once()\n\n\n@pytest.mark.asyncio\nasync def test_get_store_agent_details(mocker):\n    # Mock data\n    mock_agent = prisma.models.StoreAgent(\n        listing_id=\"test-id\",\n        storeListingVersionId=\"version123\",\n        slug=\"test-agent\",\n        agent_name=\"Test Agent\",\n        agent_video=\"video.mp4\",\n        agent_image=[\"image.jpg\"],\n        featured=False,\n        creator_username=\"creator\",\n        creator_avatar=\"avatar.jpg\",\n        sub_heading=\"Test heading\",\n        description=\"Test description\",\n        categories=[\"test\"],\n        runs=10,\n        rating=4.5,\n        versions=[\"1.0\"],\n        updated_at=datetime.now(),\n    )\n\n    # Mock prisma call\n    mock_store_agent = mocker.patch(\"prisma.models.StoreAgent.prisma\")\n    mock_store_agent.return_value.find_first = mocker.AsyncMock(return_value=mock_agent)\n\n    # Call function\n    result = await db.get_store_agent_details(\"creator\", \"test-agent\")\n\n    # Verify results\n    assert result.slug == \"test-agent\"\n    assert result.agent_name == \"Test Agent\"\n\n    # Verify mock called correctly\n    mock_store_agent.return_value.find_first.assert_called_once_with(\n        where={\"creator_username\": \"creator\", \"slug\": \"test-agent\"}\n    )\n\n\n@pytest.mark.asyncio\nasync def test_get_store_creator_details(mocker):\n    # Mock data\n    mock_creator_data = prisma.models.Creator(\n        name=\"Test Creator\",\n        username=\"creator\",\n        description=\"Test description\",\n        links=[\"link1\"],\n        avatar_url=\"avatar.jpg\",\n        num_agents=1,\n        agent_rating=4.5,\n        agent_runs=10,\n        top_categories=[\"test\"],\n        is_featured=False,\n    )\n\n    # Mock prisma call\n    mock_creator = mocker.patch(\"prisma.models.Creator.prisma\")\n    mock_creator.return_value.find_unique = mocker.AsyncMock()\n    # Configure the mock to return values that will pass validation\n    mock_creator.return_value.find_unique.return_value = mock_creator_data\n\n    # Call function\n    result = await db.get_store_creator_details(\"creator\")\n\n    # Verify results\n    assert result.username == \"creator\"\n    assert result.name == \"Test Creator\"\n    assert result.description == \"Test description\"\n    assert result.avatar_url == \"avatar.jpg\"\n\n    # Verify mock called correctly\n    mock_creator.return_value.find_unique.assert_called_once_with(\n        where={\"username\": \"creator\"}\n    )\n\n\n@pytest.mark.asyncio\nasync def test_create_store_submission(mocker):\n    # Mock data\n    mock_agent = prisma.models.AgentGraph(\n        id=\"agent-id\",\n        version=1,\n        userId=\"user-id\",\n        createdAt=datetime.now(),\n        isActive=True,\n        isTemplate=False,\n    )\n\n    mock_listing = prisma.models.StoreListing(\n        id=\"listing-id\",\n        createdAt=datetime.now(),\n        updatedAt=datetime.now(),\n        isDeleted=False,\n        isApproved=False,\n        agentId=\"agent-id\",\n        agentVersion=1,\n        owningUserId=\"user-id\",\n    )\n\n    # Mock prisma calls\n    mock_agent_graph = mocker.patch(\"prisma.models.AgentGraph.prisma\")\n    mock_agent_graph.return_value.find_first = mocker.AsyncMock(return_value=mock_agent)\n\n    mock_store_listing = mocker.patch(\"prisma.models.StoreListing.prisma\")\n    mock_store_listing.return_value.find_first = mocker.AsyncMock(return_value=None)\n    mock_store_listing.return_value.create = mocker.AsyncMock(return_value=mock_listing)\n\n    # Call function\n    result = await db.create_store_submission(\n        user_id=\"user-id\",\n        agent_id=\"agent-id\",\n        agent_version=1,\n        slug=\"test-agent\",\n        name=\"Test Agent\",\n        description=\"Test description\",\n    )\n\n    # Verify results\n    assert result.name == \"Test Agent\"\n    assert result.description == \"Test description\"\n\n    # Verify mocks called correctly\n    mock_agent_graph.return_value.find_first.assert_called_once()\n    mock_store_listing.return_value.find_first.assert_called_once()\n    mock_store_listing.return_value.create.assert_called_once()\n\n\n@pytest.mark.asyncio\nasync def test_update_profile(mocker):\n    # Mock data\n    mock_profile = prisma.models.Profile(\n        id=\"profile-id\",\n        name=\"Test Creator\",\n        username=\"creator\",\n        description=\"Test description\",\n        links=[\"link1\"],\n        avatarUrl=\"avatar.jpg\",\n        isFeatured=False,\n        createdAt=datetime.now(),\n        updatedAt=datetime.now(),\n    )\n\n    # Mock prisma calls\n    mock_profile_db = mocker.patch(\"prisma.models.Profile.prisma\")\n    mock_profile_db.return_value.find_first = mocker.AsyncMock(\n        return_value=mock_profile\n    )\n    mock_profile_db.return_value.update = mocker.AsyncMock(return_value=mock_profile)\n\n    # Test data\n    profile = Profile(\n        name=\"Test Creator\",\n        username=\"creator\",\n        description=\"Test description\",\n        links=[\"link1\"],\n        avatar_url=\"avatar.jpg\",\n        is_featured=False,\n    )\n\n    # Call function\n    result = await db.update_or_create_profile(\"user-id\", profile)\n\n    # Verify results\n    assert result.username == \"creator\"\n    assert result.name == \"Test Creator\"\n\n    # Verify mocks called correctly\n    mock_profile_db.return_value.find_first.assert_called_once()\n    mock_profile_db.return_value.update.assert_called_once()\n\n\n@pytest.mark.asyncio\nasync def test_get_user_profile(mocker):\n    # Mock data\n    mock_profile = prisma.models.Profile(\n        id=\"profile-id\",\n        name=\"No Profile Data\",\n        username=\"testuser\",\n        description=\"Test description\",\n        links=[\"link1\", \"link2\"],\n        avatarUrl=\"avatar.jpg\",\n        isFeatured=False,\n        createdAt=datetime.now(),\n        updatedAt=datetime.now(),\n    )\n\n    # Mock prisma calls\n    mock_profile_db = mocker.patch(\"prisma.models.Profile.prisma\")\n    mock_profile_db.return_value.find_unique = mocker.AsyncMock(\n        return_value=mock_profile\n    )\n\n    # Call function\n    result = await db.get_user_profile(\"user-id\")\n\n    # Verify results\n    assert result.name == \"No Profile Data\"\n    assert result.username == \"No Profile Data\"\n    assert result.description == \"No Profile Data\"\n    assert result.links == []\n    assert result.avatar_url == \"\"",
  "children": [
    {
      "value": "from datetime import datetime",
      "children": [
        {
          "value": "datetime",
          "children": [
            {
              "value": "datetime",
              "children": []
            }
          ]
        },
        {
          "value": "datetime",
          "children": [
            {
              "value": "datetime",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "import prisma.errors",
      "children": [
        {
          "value": "prisma.errors",
          "children": [
            {
              "value": "prisma",
              "children": []
            },
            {
              "value": "errors",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "import prisma.models",
      "children": [
        {
          "value": "prisma.models",
          "children": [
            {
              "value": "prisma",
              "children": []
            },
            {
              "value": "models",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "import pytest",
      "children": [
        {
          "value": "pytest",
          "children": [
            {
              "value": "pytest",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from prisma import Prisma",
      "children": [
        {
          "value": "prisma",
          "children": [
            {
              "value": "prisma",
              "children": []
            }
          ]
        },
        {
          "value": "Prisma",
          "children": [
            {
              "value": "Prisma",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "import backend.server.v2.store.db as db",
      "children": [
        {
          "value": "backend.server.v2.store.db as db",
          "children": [
            {
              "value": "backend.server.v2.store.db",
              "children": [
                {
                  "value": "backend",
                  "children": []
                },
                {
                  "value": "server",
                  "children": []
                },
                {
                  "value": "v2",
                  "children": []
                },
                {
                  "value": "store",
                  "children": []
                },
                {
                  "value": "db",
                  "children": []
                }
              ]
            },
            {
              "value": "db",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.server.v2.store.model import Profile",
      "children": [
        {
          "value": "backend.server.v2.store.model",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "server",
              "children": []
            },
            {
              "value": "v2",
              "children": []
            },
            {
              "value": "store",
              "children": []
            },
            {
              "value": "model",
              "children": []
            }
          ]
        },
        {
          "value": "Profile",
          "children": [
            {
              "value": "Profile",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "@pytest.fixture(autouse=True)\nasync def setup_prisma():\n    # Don't register client if already registered\n    try:\n        Prisma()\n    except prisma.errors.ClientAlreadyRegisteredError:\n        pass\n    yield",
      "children": [
        {
          "value": "@pytest.fixture(autouse=True)",
          "children": [
            {
              "value": "pytest.fixture(autouse=True)",
              "children": [
                {
                  "value": "pytest.fixture",
                  "children": [
                    {
                      "value": "pytest",
                      "children": []
                    },
                    {
                      "value": "fixture",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "(autouse=True)",
                  "children": [
                    {
                      "value": "autouse=True",
                      "children": [
                        {
                          "value": "autouse",
                          "children": []
                        },
                        {
                          "value": "True",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "async def setup_prisma():\n    # Don't register client if already registered\n    try:\n        Prisma()\n    except prisma.errors.ClientAlreadyRegisteredError:\n        pass\n    yield",
          "children": [
            {
              "value": "setup_prisma",
              "children": []
            },
            {
              "value": "()",
              "children": []
            },
            {
              "value": "# Don't register client if already registered",
              "children": []
            },
            {
              "value": "try:\n        Prisma()\n    except prisma.errors.ClientAlreadyRegisteredError:\n        pass\n    yield",
              "children": [
                {
                  "value": "try:\n        Prisma()\n    except prisma.errors.ClientAlreadyRegisteredError:\n        pass",
                  "children": [
                    {
                      "value": "Prisma()",
                      "children": [
                        {
                          "value": "Prisma()",
                          "children": [
                            {
                              "value": "Prisma()",
                              "children": [
                                {
                                  "value": "Prisma",
                                  "children": []
                                },
                                {
                                  "value": "()",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "except prisma.errors.ClientAlreadyRegisteredError:\n        pass",
                      "children": [
                        {
                          "value": "prisma.errors.ClientAlreadyRegisteredError",
                          "children": [
                            {
                              "value": "prisma.errors",
                              "children": [
                                {
                                  "value": "prisma",
                                  "children": []
                                },
                                {
                                  "value": "errors",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "ClientAlreadyRegisteredError",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "pass",
                          "children": [
                            {
                              "value": "pass",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "yield",
                  "children": [
                    {
                      "value": "yield",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "@pytest.mark.asyncio\nasync def test_get_store_agents(mocker):\n    # Mock data\n    mock_agents = [\n        prisma.models.StoreAgent(\n            listing_id=\"test-id\",\n            storeListingVersionId=\"version123\",\n            slug=\"test-agent\",\n            agent_name=\"Test Agent\",\n            agent_video=None,\n            agent_image=[\"image.jpg\"],\n            featured=False,\n            creator_username=\"creator\",\n            creator_avatar=\"avatar.jpg\",\n            sub_heading=\"Test heading\",\n            description=\"Test description\",\n            categories=[],\n            runs=10,\n            rating=4.5,\n            versions=[\"1.0\"],\n            updated_at=datetime.now(),\n        )\n    ]\n\n    # Mock prisma calls\n    mock_store_agent = mocker.patch(\"prisma.models.StoreAgent.prisma\")\n    mock_store_agent.return_value.find_many = mocker.AsyncMock(return_value=mock_agents)\n    mock_store_agent.return_value.count = mocker.AsyncMock(return_value=1)\n\n    # Call function\n    result = await db.get_store_agents()\n\n    # Verify results\n    assert len(result.agents) == 1\n    assert result.agents[0].slug == \"test-agent\"\n    assert result.pagination.total_items == 1\n\n    # Verify mocks called correctly\n    mock_store_agent.return_value.find_many.assert_called_once()\n    mock_store_agent.return_value.count.assert_called_once()",
      "children": [
        {
          "value": "@pytest.mark.asyncio",
          "children": [
            {
              "value": "pytest.mark.asyncio",
              "children": [
                {
                  "value": "pytest.mark",
                  "children": [
                    {
                      "value": "pytest",
                      "children": []
                    },
                    {
                      "value": "mark",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "asyncio",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "async def test_get_store_agents(mocker):\n    # Mock data\n    mock_agents = [\n        prisma.models.StoreAgent(\n            listing_id=\"test-id\",\n            storeListingVersionId=\"version123\",\n            slug=\"test-agent\",\n            agent_name=\"Test Agent\",\n            agent_video=None,\n            agent_image=[\"image.jpg\"],\n            featured=False,\n            creator_username=\"creator\",\n            creator_avatar=\"avatar.jpg\",\n            sub_heading=\"Test heading\",\n            description=\"Test description\",\n            categories=[],\n            runs=10,\n            rating=4.5,\n            versions=[\"1.0\"],\n            updated_at=datetime.now(),\n        )\n    ]\n\n    # Mock prisma calls\n    mock_store_agent = mocker.patch(\"prisma.models.StoreAgent.prisma\")\n    mock_store_agent.return_value.find_many = mocker.AsyncMock(return_value=mock_agents)\n    mock_store_agent.return_value.count = mocker.AsyncMock(return_value=1)\n\n    # Call function\n    result = await db.get_store_agents()\n\n    # Verify results\n    assert len(result.agents) == 1\n    assert result.agents[0].slug == \"test-agent\"\n    assert result.pagination.total_items == 1\n\n    # Verify mocks called correctly\n    mock_store_agent.return_value.find_many.assert_called_once()\n    mock_store_agent.return_value.count.assert_called_once()",
          "children": [
            {
              "value": "test_get_store_agents",
              "children": []
            },
            {
              "value": "(mocker)",
              "children": [
                {
                  "value": "mocker",
                  "children": []
                }
              ]
            },
            {
              "value": "# Mock data",
              "children": []
            },
            {
              "value": "mock_agents = [\n        prisma.models.StoreAgent(\n            listing_id=\"test-id\",\n            storeListingVersionId=\"version123\",\n            slug=\"test-agent\",\n            agent_name=\"Test Agent\",\n            agent_video=None,\n            agent_image=[\"image.jpg\"],\n            featured=False,\n            creator_username=\"creator\",\n            creator_avatar=\"avatar.jpg\",\n            sub_heading=\"Test heading\",\n            description=\"Test description\",\n            categories=[],\n            runs=10,\n            rating=4.5,\n            versions=[\"1.0\"],\n            updated_at=datetime.now(),\n        )\n    ]\n\n    # Mock prisma calls\n    mock_store_agent = mocker.patch(\"prisma.models.StoreAgent.prisma\")\n    mock_store_agent.return_value.find_many = mocker.AsyncMock(return_value=mock_agents)\n    mock_store_agent.return_value.count = mocker.AsyncMock(return_value=1)\n\n    # Call function\n    result = await db.get_store_agents()\n\n    # Verify results\n    assert len(result.agents) == 1\n    assert result.agents[0].slug == \"test-agent\"\n    assert result.pagination.total_items == 1\n\n    # Verify mocks called correctly\n    mock_store_agent.return_value.find_many.assert_called_once()\n    mock_store_agent.return_value.count.assert_called_once()",
              "children": [
                {
                  "value": "mock_agents = [\n        prisma.models.StoreAgent(\n            listing_id=\"test-id\",\n            storeListingVersionId=\"version123\",\n            slug=\"test-agent\",\n            agent_name=\"Test Agent\",\n            agent_video=None,\n            agent_image=[\"image.jpg\"],\n            featured=False,\n            creator_username=\"creator\",\n            creator_avatar=\"avatar.jpg\",\n            sub_heading=\"Test heading\",\n            description=\"Test description\",\n            categories=[],\n            runs=10,\n            rating=4.5,\n            versions=[\"1.0\"],\n            updated_at=datetime.now(),\n        )\n    ]",
                  "children": [
                    {
                      "value": "mock_agents = [\n        prisma.models.StoreAgent(\n            listing_id=\"test-id\",\n            storeListingVersionId=\"version123\",\n            slug=\"test-agent\",\n            agent_name=\"Test Agent\",\n            agent_video=None,\n            agent_image=[\"image.jpg\"],\n            featured=False,\n            creator_username=\"creator\",\n            creator_avatar=\"avatar.jpg\",\n            sub_heading=\"Test heading\",\n            description=\"Test description\",\n            categories=[],\n            runs=10,\n            rating=4.5,\n            versions=[\"1.0\"],\n            updated_at=datetime.now(),\n        )\n    ]",
                      "children": [
                        {
                          "value": "mock_agents",
                          "children": []
                        },
                        {
                          "value": "[\n        prisma.models.StoreAgent(\n            listing_id=\"test-id\",\n            storeListingVersionId=\"version123\",\n            slug=\"test-agent\",\n            agent_name=\"Test Agent\",\n            agent_video=None,\n            agent_image=[\"image.jpg\"],\n            featured=False,\n            creator_username=\"creator\",\n            creator_avatar=\"avatar.jpg\",\n            sub_heading=\"Test heading\",\n            description=\"Test description\",\n            categories=[],\n            runs=10,\n            rating=4.5,\n            versions=[\"1.0\"],\n            updated_at=datetime.now(),\n        )\n    ]",
                          "children": [
                            {
                              "value": "prisma.models.StoreAgent(\n            listing_id=\"test-id\",\n            storeListingVersionId=\"version123\",\n            slug=\"test-agent\",\n            agent_name=\"Test Agent\",\n            agent_video=None,\n            agent_image=[\"image.jpg\"],\n            featured=False,\n            creator_username=\"creator\",\n            creator_avatar=\"avatar.jpg\",\n            sub_heading=\"Test heading\",\n            description=\"Test description\",\n            categories=[],\n            runs=10,\n            rating=4.5,\n            versions=[\"1.0\"],\n            updated_at=datetime.now(),\n        )",
                              "children": [
                                {
                                  "value": "prisma.models.StoreAgent",
                                  "children": [
                                    {
                                      "value": "prisma.models",
                                      "children": [
                                        {
                                          "value": "prisma",
                                          "children": []
                                        },
                                        {
                                          "value": "models",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "StoreAgent",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(\n            listing_id=\"test-id\",\n            storeListingVersionId=\"version123\",\n            slug=\"test-agent\",\n            agent_name=\"Test Agent\",\n            agent_video=None,\n            agent_image=[\"image.jpg\"],\n            featured=False,\n            creator_username=\"creator\",\n            creator_avatar=\"avatar.jpg\",\n            sub_heading=\"Test heading\",\n            description=\"Test description\",\n            categories=[],\n            runs=10,\n            rating=4.5,\n            versions=[\"1.0\"],\n            updated_at=datetime.now(),\n        )",
                                  "children": [
                                    {
                                      "value": "listing_id=\"test-id\"",
                                      "children": [
                                        {
                                          "value": "listing_id",
                                          "children": []
                                        },
                                        {
                                          "value": "\"test-id\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "test-id",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "storeListingVersionId=\"version123\"",
                                      "children": [
                                        {
                                          "value": "storeListingVersionId",
                                          "children": []
                                        },
                                        {
                                          "value": "\"version123\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "version123",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "slug=\"test-agent\"",
                                      "children": [
                                        {
                                          "value": "slug",
                                          "children": []
                                        },
                                        {
                                          "value": "\"test-agent\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "test-agent",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "agent_name=\"Test Agent\"",
                                      "children": [
                                        {
                                          "value": "agent_name",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Test Agent\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Test Agent",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "agent_video=None",
                                      "children": [
                                        {
                                          "value": "agent_video",
                                          "children": []
                                        },
                                        {
                                          "value": "None",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "agent_image=[\"image.jpg\"]",
                                      "children": [
                                        {
                                          "value": "agent_image",
                                          "children": []
                                        },
                                        {
                                          "value": "[\"image.jpg\"]",
                                          "children": [
                                            {
                                              "value": "\"image.jpg\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "image.jpg",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "featured=False",
                                      "children": [
                                        {
                                          "value": "featured",
                                          "children": []
                                        },
                                        {
                                          "value": "False",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "creator_username=\"creator\"",
                                      "children": [
                                        {
                                          "value": "creator_username",
                                          "children": []
                                        },
                                        {
                                          "value": "\"creator\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "creator",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "creator_avatar=\"avatar.jpg\"",
                                      "children": [
                                        {
                                          "value": "creator_avatar",
                                          "children": []
                                        },
                                        {
                                          "value": "\"avatar.jpg\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "avatar.jpg",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "sub_heading=\"Test heading\"",
                                      "children": [
                                        {
                                          "value": "sub_heading",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Test heading\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Test heading",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "description=\"Test description\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Test description\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Test description",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "categories=[]",
                                      "children": [
                                        {
                                          "value": "categories",
                                          "children": []
                                        },
                                        {
                                          "value": "[]",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "runs=10",
                                      "children": [
                                        {
                                          "value": "runs",
                                          "children": []
                                        },
                                        {
                                          "value": "10",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "rating=4.5",
                                      "children": [
                                        {
                                          "value": "rating",
                                          "children": []
                                        },
                                        {
                                          "value": "4.5",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "versions=[\"1.0\"]",
                                      "children": [
                                        {
                                          "value": "versions",
                                          "children": []
                                        },
                                        {
                                          "value": "[\"1.0\"]",
                                          "children": [
                                            {
                                              "value": "\"1.0\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "1.0",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "updated_at=datetime.now()",
                                      "children": [
                                        {
                                          "value": "updated_at",
                                          "children": []
                                        },
                                        {
                                          "value": "datetime.now()",
                                          "children": [
                                            {
                                              "value": "datetime.now",
                                              "children": [
                                                {
                                                  "value": "datetime",
                                                  "children": []
                                                },
                                                {
                                                  "value": "now",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "()",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "# Mock prisma calls",
                  "children": []
                },
                {
                  "value": "mock_store_agent = mocker.patch(\"prisma.models.StoreAgent.prisma\")",
                  "children": [
                    {
                      "value": "mock_store_agent = mocker.patch(\"prisma.models.StoreAgent.prisma\")",
                      "children": [
                        {
                          "value": "mock_store_agent",
                          "children": []
                        },
                        {
                          "value": "mocker.patch(\"prisma.models.StoreAgent.prisma\")",
                          "children": [
                            {
                              "value": "mocker.patch",
                              "children": [
                                {
                                  "value": "mocker",
                                  "children": []
                                },
                                {
                                  "value": "patch",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\"prisma.models.StoreAgent.prisma\")",
                              "children": [
                                {
                                  "value": "\"prisma.models.StoreAgent.prisma\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "prisma.models.StoreAgent.prisma",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "mock_store_agent.return_value.find_many = mocker.AsyncMock(return_value=mock_agents)",
                  "children": [
                    {
                      "value": "mock_store_agent.return_value.find_many = mocker.AsyncMock(return_value=mock_agents)",
                      "children": [
                        {
                          "value": "mock_store_agent.return_value.find_many",
                          "children": [
                            {
                              "value": "mock_store_agent.return_value",
                              "children": [
                                {
                                  "value": "mock_store_agent",
                                  "children": []
                                },
                                {
                                  "value": "return_value",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "find_many",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "mocker.AsyncMock(return_value=mock_agents)",
                          "children": [
                            {
                              "value": "mocker.AsyncMock",
                              "children": [
                                {
                                  "value": "mocker",
                                  "children": []
                                },
                                {
                                  "value": "AsyncMock",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(return_value=mock_agents)",
                              "children": [
                                {
                                  "value": "return_value=mock_agents",
                                  "children": [
                                    {
                                      "value": "return_value",
                                      "children": []
                                    },
                                    {
                                      "value": "mock_agents",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "mock_store_agent.return_value.count = mocker.AsyncMock(return_value=1)",
                  "children": [
                    {
                      "value": "mock_store_agent.return_value.count = mocker.AsyncMock(return_value=1)",
                      "children": [
                        {
                          "value": "mock_store_agent.return_value.count",
                          "children": [
                            {
                              "value": "mock_store_agent.return_value",
                              "children": [
                                {
                                  "value": "mock_store_agent",
                                  "children": []
                                },
                                {
                                  "value": "return_value",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "count",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "mocker.AsyncMock(return_value=1)",
                          "children": [
                            {
                              "value": "mocker.AsyncMock",
                              "children": [
                                {
                                  "value": "mocker",
                                  "children": []
                                },
                                {
                                  "value": "AsyncMock",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(return_value=1)",
                              "children": [
                                {
                                  "value": "return_value=1",
                                  "children": [
                                    {
                                      "value": "return_value",
                                      "children": []
                                    },
                                    {
                                      "value": "1",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "# Call function",
                  "children": []
                },
                {
                  "value": "result = await db.get_store_agents()",
                  "children": [
                    {
                      "value": "result = await db.get_store_agents()",
                      "children": [
                        {
                          "value": "result",
                          "children": []
                        },
                        {
                          "value": "await db.get_store_agents()",
                          "children": [
                            {
                              "value": "db.get_store_agents()",
                              "children": [
                                {
                                  "value": "db.get_store_agents",
                                  "children": [
                                    {
                                      "value": "db",
                                      "children": []
                                    },
                                    {
                                      "value": "get_store_agents",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "()",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "# Verify results",
                  "children": []
                },
                {
                  "value": "assert len(result.agents) == 1",
                  "children": [
                    {
                      "value": "len(result.agents) == 1",
                      "children": [
                        {
                          "value": "len(result.agents)",
                          "children": [
                            {
                              "value": "len",
                              "children": []
                            },
                            {
                              "value": "(result.agents)",
                              "children": [
                                {
                                  "value": "result.agents",
                                  "children": [
                                    {
                                      "value": "result",
                                      "children": []
                                    },
                                    {
                                      "value": "agents",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "1",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "assert result.agents[0].slug == \"test-agent\"",
                  "children": [
                    {
                      "value": "result.agents[0].slug == \"test-agent\"",
                      "children": [
                        {
                          "value": "result.agents[0].slug",
                          "children": [
                            {
                              "value": "result.agents[0]",
                              "children": [
                                {
                                  "value": "result.agents",
                                  "children": [
                                    {
                                      "value": "result",
                                      "children": []
                                    },
                                    {
                                      "value": "agents",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "slug",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "\"test-agent\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "test-agent",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "assert result.pagination.total_items == 1",
                  "children": [
                    {
                      "value": "result.pagination.total_items == 1",
                      "children": [
                        {
                          "value": "result.pagination.total_items",
                          "children": [
                            {
                              "value": "result.pagination",
                              "children": [
                                {
                                  "value": "result",
                                  "children": []
                                },
                                {
                                  "value": "pagination",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "total_items",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "1",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "# Verify mocks called correctly",
                  "children": []
                },
                {
                  "value": "mock_store_agent.return_value.find_many.assert_called_once()",
                  "children": [
                    {
                      "value": "mock_store_agent.return_value.find_many.assert_called_once()",
                      "children": [
                        {
                          "value": "mock_store_agent.return_value.find_many.assert_called_once",
                          "children": [
                            {
                              "value": "mock_store_agent.return_value.find_many",
                              "children": [
                                {
                                  "value": "mock_store_agent.return_value",
                                  "children": [
                                    {
                                      "value": "mock_store_agent",
                                      "children": []
                                    },
                                    {
                                      "value": "return_value",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "find_many",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "assert_called_once",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "()",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "mock_store_agent.return_value.count.assert_called_once()",
                  "children": [
                    {
                      "value": "mock_store_agent.return_value.count.assert_called_once()",
                      "children": [
                        {
                          "value": "mock_store_agent.return_value.count.assert_called_once",
                          "children": [
                            {
                              "value": "mock_store_agent.return_value.count",
                              "children": [
                                {
                                  "value": "mock_store_agent.return_value",
                                  "children": [
                                    {
                                      "value": "mock_store_agent",
                                      "children": []
                                    },
                                    {
                                      "value": "return_value",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "count",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "assert_called_once",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "()",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "@pytest.mark.asyncio\nasync def test_get_store_agent_details(mocker):\n    # Mock data\n    mock_agent = prisma.models.StoreAgent(\n        listing_id=\"test-id\",\n        storeListingVersionId=\"version123\",\n        slug=\"test-agent\",\n        agent_name=\"Test Agent\",\n        agent_video=\"video.mp4\",\n        agent_image=[\"image.jpg\"],\n        featured=False,\n        creator_username=\"creator\",\n        creator_avatar=\"avatar.jpg\",\n        sub_heading=\"Test heading\",\n        description=\"Test description\",\n        categories=[\"test\"],\n        runs=10,\n        rating=4.5,\n        versions=[\"1.0\"],\n        updated_at=datetime.now(),\n    )\n\n    # Mock prisma call\n    mock_store_agent = mocker.patch(\"prisma.models.StoreAgent.prisma\")\n    mock_store_agent.return_value.find_first = mocker.AsyncMock(return_value=mock_agent)\n\n    # Call function\n    result = await db.get_store_agent_details(\"creator\", \"test-agent\")\n\n    # Verify results\n    assert result.slug == \"test-agent\"\n    assert result.agent_name == \"Test Agent\"\n\n    # Verify mock called correctly\n    mock_store_agent.return_value.find_first.assert_called_once_with(\n        where={\"creator_username\": \"creator\", \"slug\": \"test-agent\"}\n    )",
      "children": [
        {
          "value": "@pytest.mark.asyncio",
          "children": [
            {
              "value": "pytest.mark.asyncio",
              "children": [
                {
                  "value": "pytest.mark",
                  "children": [
                    {
                      "value": "pytest",
                      "children": []
                    },
                    {
                      "value": "mark",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "asyncio",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "async def test_get_store_agent_details(mocker):\n    # Mock data\n    mock_agent = prisma.models.StoreAgent(\n        listing_id=\"test-id\",\n        storeListingVersionId=\"version123\",\n        slug=\"test-agent\",\n        agent_name=\"Test Agent\",\n        agent_video=\"video.mp4\",\n        agent_image=[\"image.jpg\"],\n        featured=False,\n        creator_username=\"creator\",\n        creator_avatar=\"avatar.jpg\",\n        sub_heading=\"Test heading\",\n        description=\"Test description\",\n        categories=[\"test\"],\n        runs=10,\n        rating=4.5,\n        versions=[\"1.0\"],\n        updated_at=datetime.now(),\n    )\n\n    # Mock prisma call\n    mock_store_agent = mocker.patch(\"prisma.models.StoreAgent.prisma\")\n    mock_store_agent.return_value.find_first = mocker.AsyncMock(return_value=mock_agent)\n\n    # Call function\n    result = await db.get_store_agent_details(\"creator\", \"test-agent\")\n\n    # Verify results\n    assert result.slug == \"test-agent\"\n    assert result.agent_name == \"Test Agent\"\n\n    # Verify mock called correctly\n    mock_store_agent.return_value.find_first.assert_called_once_with(\n        where={\"creator_username\": \"creator\", \"slug\": \"test-agent\"}\n    )",
          "children": [
            {
              "value": "test_get_store_agent_details",
              "children": []
            },
            {
              "value": "(mocker)",
              "children": [
                {
                  "value": "mocker",
                  "children": []
                }
              ]
            },
            {
              "value": "# Mock data",
              "children": []
            },
            {
              "value": "mock_agent = prisma.models.StoreAgent(\n        listing_id=\"test-id\",\n        storeListingVersionId=\"version123\",\n        slug=\"test-agent\",\n        agent_name=\"Test Agent\",\n        agent_video=\"video.mp4\",\n        agent_image=[\"image.jpg\"],\n        featured=False,\n        creator_username=\"creator\",\n        creator_avatar=\"avatar.jpg\",\n        sub_heading=\"Test heading\",\n        description=\"Test description\",\n        categories=[\"test\"],\n        runs=10,\n        rating=4.5,\n        versions=[\"1.0\"],\n        updated_at=datetime.now(),\n    )\n\n    # Mock prisma call\n    mock_store_agent = mocker.patch(\"prisma.models.StoreAgent.prisma\")\n    mock_store_agent.return_value.find_first = mocker.AsyncMock(return_value=mock_agent)\n\n    # Call function\n    result = await db.get_store_agent_details(\"creator\", \"test-agent\")\n\n    # Verify results\n    assert result.slug == \"test-agent\"\n    assert result.agent_name == \"Test Agent\"\n\n    # Verify mock called correctly\n    mock_store_agent.return_value.find_first.assert_called_once_with(\n        where={\"creator_username\": \"creator\", \"slug\": \"test-agent\"}\n    )",
              "children": [
                {
                  "value": "mock_agent = prisma.models.StoreAgent(\n        listing_id=\"test-id\",\n        storeListingVersionId=\"version123\",\n        slug=\"test-agent\",\n        agent_name=\"Test Agent\",\n        agent_video=\"video.mp4\",\n        agent_image=[\"image.jpg\"],\n        featured=False,\n        creator_username=\"creator\",\n        creator_avatar=\"avatar.jpg\",\n        sub_heading=\"Test heading\",\n        description=\"Test description\",\n        categories=[\"test\"],\n        runs=10,\n        rating=4.5,\n        versions=[\"1.0\"],\n        updated_at=datetime.now(),\n    )",
                  "children": [
                    {
                      "value": "mock_agent = prisma.models.StoreAgent(\n        listing_id=\"test-id\",\n        storeListingVersionId=\"version123\",\n        slug=\"test-agent\",\n        agent_name=\"Test Agent\",\n        agent_video=\"video.mp4\",\n        agent_image=[\"image.jpg\"],\n        featured=False,\n        creator_username=\"creator\",\n        creator_avatar=\"avatar.jpg\",\n        sub_heading=\"Test heading\",\n        description=\"Test description\",\n        categories=[\"test\"],\n        runs=10,\n        rating=4.5,\n        versions=[\"1.0\"],\n        updated_at=datetime.now(),\n    )",
                      "children": [
                        {
                          "value": "mock_agent",
                          "children": []
                        },
                        {
                          "value": "prisma.models.StoreAgent(\n        listing_id=\"test-id\",\n        storeListingVersionId=\"version123\",\n        slug=\"test-agent\",\n        agent_name=\"Test Agent\",\n        agent_video=\"video.mp4\",\n        agent_image=[\"image.jpg\"],\n        featured=False,\n        creator_username=\"creator\",\n        creator_avatar=\"avatar.jpg\",\n        sub_heading=\"Test heading\",\n        description=\"Test description\",\n        categories=[\"test\"],\n        runs=10,\n        rating=4.5,\n        versions=[\"1.0\"],\n        updated_at=datetime.now(),\n    )",
                          "children": [
                            {
                              "value": "prisma.models.StoreAgent",
                              "children": [
                                {
                                  "value": "prisma.models",
                                  "children": [
                                    {
                                      "value": "prisma",
                                      "children": []
                                    },
                                    {
                                      "value": "models",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "StoreAgent",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\n        listing_id=\"test-id\",\n        storeListingVersionId=\"version123\",\n        slug=\"test-agent\",\n        agent_name=\"Test Agent\",\n        agent_video=\"video.mp4\",\n        agent_image=[\"image.jpg\"],\n        featured=False,\n        creator_username=\"creator\",\n        creator_avatar=\"avatar.jpg\",\n        sub_heading=\"Test heading\",\n        description=\"Test description\",\n        categories=[\"test\"],\n        runs=10,\n        rating=4.5,\n        versions=[\"1.0\"],\n        updated_at=datetime.now(),\n    )",
                              "children": [
                                {
                                  "value": "listing_id=\"test-id\"",
                                  "children": [
                                    {
                                      "value": "listing_id",
                                      "children": []
                                    },
                                    {
                                      "value": "\"test-id\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "test-id",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "storeListingVersionId=\"version123\"",
                                  "children": [
                                    {
                                      "value": "storeListingVersionId",
                                      "children": []
                                    },
                                    {
                                      "value": "\"version123\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "version123",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "slug=\"test-agent\"",
                                  "children": [
                                    {
                                      "value": "slug",
                                      "children": []
                                    },
                                    {
                                      "value": "\"test-agent\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "test-agent",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "agent_name=\"Test Agent\"",
                                  "children": [
                                    {
                                      "value": "agent_name",
                                      "children": []
                                    },
                                    {
                                      "value": "\"Test Agent\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "Test Agent",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "agent_video=\"video.mp4\"",
                                  "children": [
                                    {
                                      "value": "agent_video",
                                      "children": []
                                    },
                                    {
                                      "value": "\"video.mp4\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "video.mp4",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "agent_image=[\"image.jpg\"]",
                                  "children": [
                                    {
                                      "value": "agent_image",
                                      "children": []
                                    },
                                    {
                                      "value": "[\"image.jpg\"]",
                                      "children": [
                                        {
                                          "value": "\"image.jpg\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "image.jpg",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "featured=False",
                                  "children": [
                                    {
                                      "value": "featured",
                                      "children": []
                                    },
                                    {
                                      "value": "False",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "creator_username=\"creator\"",
                                  "children": [
                                    {
                                      "value": "creator_username",
                                      "children": []
                                    },
                                    {
                                      "value": "\"creator\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "creator",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "creator_avatar=\"avatar.jpg\"",
                                  "children": [
                                    {
                                      "value": "creator_avatar",
                                      "children": []
                                    },
                                    {
                                      "value": "\"avatar.jpg\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "avatar.jpg",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "sub_heading=\"Test heading\"",
                                  "children": [
                                    {
                                      "value": "sub_heading",
                                      "children": []
                                    },
                                    {
                                      "value": "\"Test heading\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "Test heading",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "description=\"Test description\"",
                                  "children": [
                                    {
                                      "value": "description",
                                      "children": []
                                    },
                                    {
                                      "value": "\"Test description\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "Test description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "categories=[\"test\"]",
                                  "children": [
                                    {
                                      "value": "categories",
                                      "children": []
                                    },
                                    {
                                      "value": "[\"test\"]",
                                      "children": [
                                        {
                                          "value": "\"test\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "test",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "runs=10",
                                  "children": [
                                    {
                                      "value": "runs",
                                      "children": []
                                    },
                                    {
                                      "value": "10",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "rating=4.5",
                                  "children": [
                                    {
                                      "value": "rating",
                                      "children": []
                                    },
                                    {
                                      "value": "4.5",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "versions=[\"1.0\"]",
                                  "children": [
                                    {
                                      "value": "versions",
                                      "children": []
                                    },
                                    {
                                      "value": "[\"1.0\"]",
                                      "children": [
                                        {
                                          "value": "\"1.0\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "1.0",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "updated_at=datetime.now()",
                                  "children": [
                                    {
                                      "value": "updated_at",
                                      "children": []
                                    },
                                    {
                                      "value": "datetime.now()",
                                      "children": [
                                        {
                                          "value": "datetime.now",
                                          "children": [
                                            {
                                              "value": "datetime",
                                              "children": []
                                            },
                                            {
                                              "value": "now",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "()",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "# Mock prisma call",
                  "children": []
                },
                {
                  "value": "mock_store_agent = mocker.patch(\"prisma.models.StoreAgent.prisma\")",
                  "children": [
                    {
                      "value": "mock_store_agent = mocker.patch(\"prisma.models.StoreAgent.prisma\")",
                      "children": [
                        {
                          "value": "mock_store_agent",
                          "children": []
                        },
                        {
                          "value": "mocker.patch(\"prisma.models.StoreAgent.prisma\")",
                          "children": [
                            {
                              "value": "mocker.patch",
                              "children": [
                                {
                                  "value": "mocker",
                                  "children": []
                                },
                                {
                                  "value": "patch",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\"prisma.models.StoreAgent.prisma\")",
                              "children": [
                                {
                                  "value": "\"prisma.models.StoreAgent.prisma\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "prisma.models.StoreAgent.prisma",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "mock_store_agent.return_value.find_first = mocker.AsyncMock(return_value=mock_agent)",
                  "children": [
                    {
                      "value": "mock_store_agent.return_value.find_first = mocker.AsyncMock(return_value=mock_agent)",
                      "children": [
                        {
                          "value": "mock_store_agent.return_value.find_first",
                          "children": [
                            {
                              "value": "mock_store_agent.return_value",
                              "children": [
                                {
                                  "value": "mock_store_agent",
                                  "children": []
                                },
                                {
                                  "value": "return_value",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "find_first",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "mocker.AsyncMock(return_value=mock_agent)",
                          "children": [
                            {
                              "value": "mocker.AsyncMock",
                              "children": [
                                {
                                  "value": "mocker",
                                  "children": []
                                },
                                {
                                  "value": "AsyncMock",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(return_value=mock_agent)",
                              "children": [
                                {
                                  "value": "return_value=mock_agent",
                                  "children": [
                                    {
                                      "value": "return_value",
                                      "children": []
                                    },
                                    {
                                      "value": "mock_agent",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "# Call function",
                  "children": []
                },
                {
                  "value": "result = await db.get_store_agent_details(\"creator\", \"test-agent\")",
                  "children": [
                    {
                      "value": "result = await db.get_store_agent_details(\"creator\", \"test-agent\")",
                      "children": [
                        {
                          "value": "result",
                          "children": []
                        },
                        {
                          "value": "await db.get_store_agent_details(\"creator\", \"test-agent\")",
                          "children": [
                            {
                              "value": "db.get_store_agent_details(\"creator\", \"test-agent\")",
                              "children": [
                                {
                                  "value": "db.get_store_agent_details",
                                  "children": [
                                    {
                                      "value": "db",
                                      "children": []
                                    },
                                    {
                                      "value": "get_store_agent_details",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(\"creator\", \"test-agent\")",
                                  "children": [
                                    {
                                      "value": "\"creator\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "creator",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"test-agent\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "test-agent",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "# Verify results",
                  "children": []
                },
                {
                  "value": "assert result.slug == \"test-agent\"",
                  "children": [
                    {
                      "value": "result.slug == \"test-agent\"",
                      "children": [
                        {
                          "value": "result.slug",
                          "children": [
                            {
                              "value": "result",
                              "children": []
                            },
                            {
                              "value": "slug",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "\"test-agent\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "test-agent",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "assert result.agent_name == \"Test Agent\"",
                  "children": [
                    {
                      "value": "result.agent_name == \"Test Agent\"",
                      "children": [
                        {
                          "value": "result.agent_name",
                          "children": [
                            {
                              "value": "result",
                              "children": []
                            },
                            {
                              "value": "agent_name",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "\"Test Agent\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "Test Agent",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "# Verify mock called correctly",
                  "children": []
                },
                {
                  "value": "mock_store_agent.return_value.find_first.assert_called_once_with(\n        where={\"creator_username\": \"creator\", \"slug\": \"test-agent\"}\n    )",
                  "children": [
                    {
                      "value": "mock_store_agent.return_value.find_first.assert_called_once_with(\n        where={\"creator_username\": \"creator\", \"slug\": \"test-agent\"}\n    )",
                      "children": [
                        {
                          "value": "mock_store_agent.return_value.find_first.assert_called_once_with",
                          "children": [
                            {
                              "value": "mock_store_agent.return_value.find_first",
                              "children": [
                                {
                                  "value": "mock_store_agent.return_value",
                                  "children": [
                                    {
                                      "value": "mock_store_agent",
                                      "children": []
                                    },
                                    {
                                      "value": "return_value",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "find_first",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "assert_called_once_with",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(\n        where={\"creator_username\": \"creator\", \"slug\": \"test-agent\"}\n    )",
                          "children": [
                            {
                              "value": "where={\"creator_username\": \"creator\", \"slug\": \"test-agent\"}",
                              "children": [
                                {
                                  "value": "where",
                                  "children": []
                                },
                                {
                                  "value": "{\"creator_username\": \"creator\", \"slug\": \"test-agent\"}",
                                  "children": [
                                    {
                                      "value": "\"creator_username\": \"creator\"",
                                      "children": [
                                        {
                                          "value": "\"creator_username\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "creator_username",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"creator\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "creator",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"slug\": \"test-agent\"",
                                      "children": [
                                        {
                                          "value": "\"slug\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "slug",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"test-agent\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "test-agent",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "@pytest.mark.asyncio\nasync def test_get_store_creator_details(mocker):\n    # Mock data\n    mock_creator_data = prisma.models.Creator(\n        name=\"Test Creator\",\n        username=\"creator\",\n        description=\"Test description\",\n        links=[\"link1\"],\n        avatar_url=\"avatar.jpg\",\n        num_agents=1,\n        agent_rating=4.5,\n        agent_runs=10,\n        top_categories=[\"test\"],\n        is_featured=False,\n    )\n\n    # Mock prisma call\n    mock_creator = mocker.patch(\"prisma.models.Creator.prisma\")\n    mock_creator.return_value.find_unique = mocker.AsyncMock()\n    # Configure the mock to return values that will pass validation\n    mock_creator.return_value.find_unique.return_value = mock_creator_data\n\n    # Call function\n    result = await db.get_store_creator_details(\"creator\")\n\n    # Verify results\n    assert result.username == \"creator\"\n    assert result.name == \"Test Creator\"\n    assert result.description == \"Test description\"\n    assert result.avatar_url == \"avatar.jpg\"\n\n    # Verify mock called correctly\n    mock_creator.return_value.find_unique.assert_called_once_with(\n        where={\"username\": \"creator\"}\n    )",
      "children": [
        {
          "value": "@pytest.mark.asyncio",
          "children": [
            {
              "value": "pytest.mark.asyncio",
              "children": [
                {
                  "value": "pytest.mark",
                  "children": [
                    {
                      "value": "pytest",
                      "children": []
                    },
                    {
                      "value": "mark",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "asyncio",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "async def test_get_store_creator_details(mocker):\n    # Mock data\n    mock_creator_data = prisma.models.Creator(\n        name=\"Test Creator\",\n        username=\"creator\",\n        description=\"Test description\",\n        links=[\"link1\"],\n        avatar_url=\"avatar.jpg\",\n        num_agents=1,\n        agent_rating=4.5,\n        agent_runs=10,\n        top_categories=[\"test\"],\n        is_featured=False,\n    )\n\n    # Mock prisma call\n    mock_creator = mocker.patch(\"prisma.models.Creator.prisma\")\n    mock_creator.return_value.find_unique = mocker.AsyncMock()\n    # Configure the mock to return values that will pass validation\n    mock_creator.return_value.find_unique.return_value = mock_creator_data\n\n    # Call function\n    result = await db.get_store_creator_details(\"creator\")\n\n    # Verify results\n    assert result.username == \"creator\"\n    assert result.name == \"Test Creator\"\n    assert result.description == \"Test description\"\n    assert result.avatar_url == \"avatar.jpg\"\n\n    # Verify mock called correctly\n    mock_creator.return_value.find_unique.assert_called_once_with(\n        where={\"username\": \"creator\"}\n    )",
          "children": [
            {
              "value": "test_get_store_creator_details",
              "children": []
            },
            {
              "value": "(mocker)",
              "children": [
                {
                  "value": "mocker",
                  "children": []
                }
              ]
            },
            {
              "value": "# Mock data",
              "children": []
            },
            {
              "value": "mock_creator_data = prisma.models.Creator(\n        name=\"Test Creator\",\n        username=\"creator\",\n        description=\"Test description\",\n        links=[\"link1\"],\n        avatar_url=\"avatar.jpg\",\n        num_agents=1,\n        agent_rating=4.5,\n        agent_runs=10,\n        top_categories=[\"test\"],\n        is_featured=False,\n    )\n\n    # Mock prisma call\n    mock_creator = mocker.patch(\"prisma.models.Creator.prisma\")\n    mock_creator.return_value.find_unique = mocker.AsyncMock()\n    # Configure the mock to return values that will pass validation\n    mock_creator.return_value.find_unique.return_value = mock_creator_data\n\n    # Call function\n    result = await db.get_store_creator_details(\"creator\")\n\n    # Verify results\n    assert result.username == \"creator\"\n    assert result.name == \"Test Creator\"\n    assert result.description == \"Test description\"\n    assert result.avatar_url == \"avatar.jpg\"\n\n    # Verify mock called correctly\n    mock_creator.return_value.find_unique.assert_called_once_with(\n        where={\"username\": \"creator\"}\n    )",
              "children": [
                {
                  "value": "mock_creator_data = prisma.models.Creator(\n        name=\"Test Creator\",\n        username=\"creator\",\n        description=\"Test description\",\n        links=[\"link1\"],\n        avatar_url=\"avatar.jpg\",\n        num_agents=1,\n        agent_rating=4.5,\n        agent_runs=10,\n        top_categories=[\"test\"],\n        is_featured=False,\n    )",
                  "children": [
                    {
                      "value": "mock_creator_data = prisma.models.Creator(\n        name=\"Test Creator\",\n        username=\"creator\",\n        description=\"Test description\",\n        links=[\"link1\"],\n        avatar_url=\"avatar.jpg\",\n        num_agents=1,\n        agent_rating=4.5,\n        agent_runs=10,\n        top_categories=[\"test\"],\n        is_featured=False,\n    )",
                      "children": [
                        {
                          "value": "mock_creator_data",
                          "children": []
                        },
                        {
                          "value": "prisma.models.Creator(\n        name=\"Test Creator\",\n        username=\"creator\",\n        description=\"Test description\",\n        links=[\"link1\"],\n        avatar_url=\"avatar.jpg\",\n        num_agents=1,\n        agent_rating=4.5,\n        agent_runs=10,\n        top_categories=[\"test\"],\n        is_featured=False,\n    )",
                          "children": [
                            {
                              "value": "prisma.models.Creator",
                              "children": [
                                {
                                  "value": "prisma.models",
                                  "children": [
                                    {
                                      "value": "prisma",
                                      "children": []
                                    },
                                    {
                                      "value": "models",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "Creator",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\n        name=\"Test Creator\",\n        username=\"creator\",\n        description=\"Test description\",\n        links=[\"link1\"],\n        avatar_url=\"avatar.jpg\",\n        num_agents=1,\n        agent_rating=4.5,\n        agent_runs=10,\n        top_categories=[\"test\"],\n        is_featured=False,\n    )",
                              "children": [
                                {
                                  "value": "name=\"Test Creator\"",
                                  "children": [
                                    {
                                      "value": "name",
                                      "children": []
                                    },
                                    {
                                      "value": "\"Test Creator\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "Test Creator",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "username=\"creator\"",
                                  "children": [
                                    {
                                      "value": "username",
                                      "children": []
                                    },
                                    {
                                      "value": "\"creator\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "creator",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "description=\"Test description\"",
                                  "children": [
                                    {
                                      "value": "description",
                                      "children": []
                                    },
                                    {
                                      "value": "\"Test description\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "Test description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "links=[\"link1\"]",
                                  "children": [
                                    {
                                      "value": "links",
                                      "children": []
                                    },
                                    {
                                      "value": "[\"link1\"]",
                                      "children": [
                                        {
                                          "value": "\"link1\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "link1",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "avatar_url=\"avatar.jpg\"",
                                  "children": [
                                    {
                                      "value": "avatar_url",
                                      "children": []
                                    },
                                    {
                                      "value": "\"avatar.jpg\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "avatar.jpg",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "num_agents=1",
                                  "children": [
                                    {
                                      "value": "num_agents",
                                      "children": []
                                    },
                                    {
                                      "value": "1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "agent_rating=4.5",
                                  "children": [
                                    {
                                      "value": "agent_rating",
                                      "children": []
                                    },
                                    {
                                      "value": "4.5",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "agent_runs=10",
                                  "children": [
                                    {
                                      "value": "agent_runs",
                                      "children": []
                                    },
                                    {
                                      "value": "10",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "top_categories=[\"test\"]",
                                  "children": [
                                    {
                                      "value": "top_categories",
                                      "children": []
                                    },
                                    {
                                      "value": "[\"test\"]",
                                      "children": [
                                        {
                                          "value": "\"test\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "test",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "is_featured=False",
                                  "children": [
                                    {
                                      "value": "is_featured",
                                      "children": []
                                    },
                                    {
                                      "value": "False",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "# Mock prisma call",
                  "children": []
                },
                {
                  "value": "mock_creator = mocker.patch(\"prisma.models.Creator.prisma\")",
                  "children": [
                    {
                      "value": "mock_creator = mocker.patch(\"prisma.models.Creator.prisma\")",
                      "children": [
                        {
                          "value": "mock_creator",
                          "children": []
                        },
                        {
                          "value": "mocker.patch(\"prisma.models.Creator.prisma\")",
                          "children": [
                            {
                              "value": "mocker.patch",
                              "children": [
                                {
                                  "value": "mocker",
                                  "children": []
                                },
                                {
                                  "value": "patch",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\"prisma.models.Creator.prisma\")",
                              "children": [
                                {
                                  "value": "\"prisma.models.Creator.prisma\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "prisma.models.Creator.prisma",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "mock_creator.return_value.find_unique = mocker.AsyncMock()",
                  "children": [
                    {
                      "value": "mock_creator.return_value.find_unique = mocker.AsyncMock()",
                      "children": [
                        {
                          "value": "mock_creator.return_value.find_unique",
                          "children": [
                            {
                              "value": "mock_creator.return_value",
                              "children": [
                                {
                                  "value": "mock_creator",
                                  "children": []
                                },
                                {
                                  "value": "return_value",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "find_unique",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "mocker.AsyncMock()",
                          "children": [
                            {
                              "value": "mocker.AsyncMock",
                              "children": [
                                {
                                  "value": "mocker",
                                  "children": []
                                },
                                {
                                  "value": "AsyncMock",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "()",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "# Configure the mock to return values that will pass validation",
                  "children": []
                },
                {
                  "value": "mock_creator.return_value.find_unique.return_value = mock_creator_data",
                  "children": [
                    {
                      "value": "mock_creator.return_value.find_unique.return_value = mock_creator_data",
                      "children": [
                        {
                          "value": "mock_creator.return_value.find_unique.return_value",
                          "children": [
                            {
                              "value": "mock_creator.return_value.find_unique",
                              "children": [
                                {
                                  "value": "mock_creator.return_value",
                                  "children": [
                                    {
                                      "value": "mock_creator",
                                      "children": []
                                    },
                                    {
                                      "value": "return_value",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "find_unique",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "return_value",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "mock_creator_data",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "# Call function",
                  "children": []
                },
                {
                  "value": "result = await db.get_store_creator_details(\"creator\")",
                  "children": [
                    {
                      "value": "result = await db.get_store_creator_details(\"creator\")",
                      "children": [
                        {
                          "value": "result",
                          "children": []
                        },
                        {
                          "value": "await db.get_store_creator_details(\"creator\")",
                          "children": [
                            {
                              "value": "db.get_store_creator_details(\"creator\")",
                              "children": [
                                {
                                  "value": "db.get_store_creator_details",
                                  "children": [
                                    {
                                      "value": "db",
                                      "children": []
                                    },
                                    {
                                      "value": "get_store_creator_details",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(\"creator\")",
                                  "children": [
                                    {
                                      "value": "\"creator\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "creator",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "# Verify results",
                  "children": []
                },
                {
                  "value": "assert result.username == \"creator\"",
                  "children": [
                    {
                      "value": "result.username == \"creator\"",
                      "children": [
                        {
                          "value": "result.username",
                          "children": [
                            {
                              "value": "result",
                              "children": []
                            },
                            {
                              "value": "username",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "\"creator\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "creator",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "assert result.name == \"Test Creator\"",
                  "children": [
                    {
                      "value": "result.name == \"Test Creator\"",
                      "children": [
                        {
                          "value": "result.name",
                          "children": [
                            {
                              "value": "result",
                              "children": []
                            },
                            {
                              "value": "name",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "\"Test Creator\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "Test Creator",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "assert result.description == \"Test description\"",
                  "children": [
                    {
                      "value": "result.description == \"Test description\"",
                      "children": [
                        {
                          "value": "result.description",
                          "children": [
                            {
                              "value": "result",
                              "children": []
                            },
                            {
                              "value": "description",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "\"Test description\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "Test description",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "assert result.avatar_url == \"avatar.jpg\"",
                  "children": [
                    {
                      "value": "result.avatar_url == \"avatar.jpg\"",
                      "children": [
                        {
                          "value": "result.avatar_url",
                          "children": [
                            {
                              "value": "result",
                              "children": []
                            },
                            {
                              "value": "avatar_url",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "\"avatar.jpg\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "avatar.jpg",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "# Verify mock called correctly",
                  "children": []
                },
                {
                  "value": "mock_creator.return_value.find_unique.assert_called_once_with(\n        where={\"username\": \"creator\"}\n    )",
                  "children": [
                    {
                      "value": "mock_creator.return_value.find_unique.assert_called_once_with(\n        where={\"username\": \"creator\"}\n    )",
                      "children": [
                        {
                          "value": "mock_creator.return_value.find_unique.assert_called_once_with",
                          "children": [
                            {
                              "value": "mock_creator.return_value.find_unique",
                              "children": [
                                {
                                  "value": "mock_creator.return_value",
                                  "children": [
                                    {
                                      "value": "mock_creator",
                                      "children": []
                                    },
                                    {
                                      "value": "return_value",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "find_unique",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "assert_called_once_with",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(\n        where={\"username\": \"creator\"}\n    )",
                          "children": [
                            {
                              "value": "where={\"username\": \"creator\"}",
                              "children": [
                                {
                                  "value": "where",
                                  "children": []
                                },
                                {
                                  "value": "{\"username\": \"creator\"}",
                                  "children": [
                                    {
                                      "value": "\"username\": \"creator\"",
                                      "children": [
                                        {
                                          "value": "\"username\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "username",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"creator\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "creator",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "@pytest.mark.asyncio\nasync def test_create_store_submission(mocker):\n    # Mock data\n    mock_agent = prisma.models.AgentGraph(\n        id=\"agent-id\",\n        version=1,\n        userId=\"user-id\",\n        createdAt=datetime.now(),\n        isActive=True,\n        isTemplate=False,\n    )\n\n    mock_listing = prisma.models.StoreListing(\n        id=\"listing-id\",\n        createdAt=datetime.now(),\n        updatedAt=datetime.now(),\n        isDeleted=False,\n        isApproved=False,\n        agentId=\"agent-id\",\n        agentVersion=1,\n        owningUserId=\"user-id\",\n    )\n\n    # Mock prisma calls\n    mock_agent_graph = mocker.patch(\"prisma.models.AgentGraph.prisma\")\n    mock_agent_graph.return_value.find_first = mocker.AsyncMock(return_value=mock_agent)\n\n    mock_store_listing = mocker.patch(\"prisma.models.StoreListing.prisma\")\n    mock_store_listing.return_value.find_first = mocker.AsyncMock(return_value=None)\n    mock_store_listing.return_value.create = mocker.AsyncMock(return_value=mock_listing)\n\n    # Call function\n    result = await db.create_store_submission(\n        user_id=\"user-id\",\n        agent_id=\"agent-id\",\n        agent_version=1,\n        slug=\"test-agent\",\n        name=\"Test Agent\",\n        description=\"Test description\",\n    )\n\n    # Verify results\n    assert result.name == \"Test Agent\"\n    assert result.description == \"Test description\"\n\n    # Verify mocks called correctly\n    mock_agent_graph.return_value.find_first.assert_called_once()\n    mock_store_listing.return_value.find_first.assert_called_once()\n    mock_store_listing.return_value.create.assert_called_once()",
      "children": [
        {
          "value": "@pytest.mark.asyncio",
          "children": [
            {
              "value": "pytest.mark.asyncio",
              "children": [
                {
                  "value": "pytest.mark",
                  "children": [
                    {
                      "value": "pytest",
                      "children": []
                    },
                    {
                      "value": "mark",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "asyncio",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "async def test_create_store_submission(mocker):\n    # Mock data\n    mock_agent = prisma.models.AgentGraph(\n        id=\"agent-id\",\n        version=1,\n        userId=\"user-id\",\n        createdAt=datetime.now(),\n        isActive=True,\n        isTemplate=False,\n    )\n\n    mock_listing = prisma.models.StoreListing(\n        id=\"listing-id\",\n        createdAt=datetime.now(),\n        updatedAt=datetime.now(),\n        isDeleted=False,\n        isApproved=False,\n        agentId=\"agent-id\",\n        agentVersion=1,\n        owningUserId=\"user-id\",\n    )\n\n    # Mock prisma calls\n    mock_agent_graph = mocker.patch(\"prisma.models.AgentGraph.prisma\")\n    mock_agent_graph.return_value.find_first = mocker.AsyncMock(return_value=mock_agent)\n\n    mock_store_listing = mocker.patch(\"prisma.models.StoreListing.prisma\")\n    mock_store_listing.return_value.find_first = mocker.AsyncMock(return_value=None)\n    mock_store_listing.return_value.create = mocker.AsyncMock(return_value=mock_listing)\n\n    # Call function\n    result = await db.create_store_submission(\n        user_id=\"user-id\",\n        agent_id=\"agent-id\",\n        agent_version=1,\n        slug=\"test-agent\",\n        name=\"Test Agent\",\n        description=\"Test description\",\n    )\n\n    # Verify results\n    assert result.name == \"Test Agent\"\n    assert result.description == \"Test description\"\n\n    # Verify mocks called correctly\n    mock_agent_graph.return_value.find_first.assert_called_once()\n    mock_store_listing.return_value.find_first.assert_called_once()\n    mock_store_listing.return_value.create.assert_called_once()",
          "children": [
            {
              "value": "test_create_store_submission",
              "children": []
            },
            {
              "value": "(mocker)",
              "children": [
                {
                  "value": "mocker",
                  "children": []
                }
              ]
            },
            {
              "value": "# Mock data",
              "children": []
            },
            {
              "value": "mock_agent = prisma.models.AgentGraph(\n        id=\"agent-id\",\n        version=1,\n        userId=\"user-id\",\n        createdAt=datetime.now(),\n        isActive=True,\n        isTemplate=False,\n    )\n\n    mock_listing = prisma.models.StoreListing(\n        id=\"listing-id\",\n        createdAt=datetime.now(),\n        updatedAt=datetime.now(),\n        isDeleted=False,\n        isApproved=False,\n        agentId=\"agent-id\",\n        agentVersion=1,\n        owningUserId=\"user-id\",\n    )\n\n    # Mock prisma calls\n    mock_agent_graph = mocker.patch(\"prisma.models.AgentGraph.prisma\")\n    mock_agent_graph.return_value.find_first = mocker.AsyncMock(return_value=mock_agent)\n\n    mock_store_listing = mocker.patch(\"prisma.models.StoreListing.prisma\")\n    mock_store_listing.return_value.find_first = mocker.AsyncMock(return_value=None)\n    mock_store_listing.return_value.create = mocker.AsyncMock(return_value=mock_listing)\n\n    # Call function\n    result = await db.create_store_submission(\n        user_id=\"user-id\",\n        agent_id=\"agent-id\",\n        agent_version=1,\n        slug=\"test-agent\",\n        name=\"Test Agent\",\n        description=\"Test description\",\n    )\n\n    # Verify results\n    assert result.name == \"Test Agent\"\n    assert result.description == \"Test description\"\n\n    # Verify mocks called correctly\n    mock_agent_graph.return_value.find_first.assert_called_once()\n    mock_store_listing.return_value.find_first.assert_called_once()\n    mock_store_listing.return_value.create.assert_called_once()",
              "children": [
                {
                  "value": "mock_agent = prisma.models.AgentGraph(\n        id=\"agent-id\",\n        version=1,\n        userId=\"user-id\",\n        createdAt=datetime.now(),\n        isActive=True,\n        isTemplate=False,\n    )",
                  "children": [
                    {
                      "value": "mock_agent = prisma.models.AgentGraph(\n        id=\"agent-id\",\n        version=1,\n        userId=\"user-id\",\n        createdAt=datetime.now(),\n        isActive=True,\n        isTemplate=False,\n    )",
                      "children": [
                        {
                          "value": "mock_agent",
                          "children": []
                        },
                        {
                          "value": "prisma.models.AgentGraph(\n        id=\"agent-id\",\n        version=1,\n        userId=\"user-id\",\n        createdAt=datetime.now(),\n        isActive=True,\n        isTemplate=False,\n    )",
                          "children": [
                            {
                              "value": "prisma.models.AgentGraph",
                              "children": [
                                {
                                  "value": "prisma.models",
                                  "children": [
                                    {
                                      "value": "prisma",
                                      "children": []
                                    },
                                    {
                                      "value": "models",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "AgentGraph",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\n        id=\"agent-id\",\n        version=1,\n        userId=\"user-id\",\n        createdAt=datetime.now(),\n        isActive=True,\n        isTemplate=False,\n    )",
                              "children": [
                                {
                                  "value": "id=\"agent-id\"",
                                  "children": [
                                    {
                                      "value": "id",
                                      "children": []
                                    },
                                    {
                                      "value": "\"agent-id\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "agent-id",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "version=1",
                                  "children": [
                                    {
                                      "value": "version",
                                      "children": []
                                    },
                                    {
                                      "value": "1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "userId=\"user-id\"",
                                  "children": [
                                    {
                                      "value": "userId",
                                      "children": []
                                    },
                                    {
                                      "value": "\"user-id\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "user-id",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "createdAt=datetime.now()",
                                  "children": [
                                    {
                                      "value": "createdAt",
                                      "children": []
                                    },
                                    {
                                      "value": "datetime.now()",
                                      "children": [
                                        {
                                          "value": "datetime.now",
                                          "children": [
                                            {
                                              "value": "datetime",
                                              "children": []
                                            },
                                            {
                                              "value": "now",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "()",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "isActive=True",
                                  "children": [
                                    {
                                      "value": "isActive",
                                      "children": []
                                    },
                                    {
                                      "value": "True",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "isTemplate=False",
                                  "children": [
                                    {
                                      "value": "isTemplate",
                                      "children": []
                                    },
                                    {
                                      "value": "False",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "mock_listing = prisma.models.StoreListing(\n        id=\"listing-id\",\n        createdAt=datetime.now(),\n        updatedAt=datetime.now(),\n        isDeleted=False,\n        isApproved=False,\n        agentId=\"agent-id\",\n        agentVersion=1,\n        owningUserId=\"user-id\",\n    )",
                  "children": [
                    {
                      "value": "mock_listing = prisma.models.StoreListing(\n        id=\"listing-id\",\n        createdAt=datetime.now(),\n        updatedAt=datetime.now(),\n        isDeleted=False,\n        isApproved=False,\n        agentId=\"agent-id\",\n        agentVersion=1,\n        owningUserId=\"user-id\",\n    )",
                      "children": [
                        {
                          "value": "mock_listing",
                          "children": []
                        },
                        {
                          "value": "prisma.models.StoreListing(\n        id=\"listing-id\",\n        createdAt=datetime.now(),\n        updatedAt=datetime.now(),\n        isDeleted=False,\n        isApproved=False,\n        agentId=\"agent-id\",\n        agentVersion=1,\n        owningUserId=\"user-id\",\n    )",
                          "children": [
                            {
                              "value": "prisma.models.StoreListing",
                              "children": [
                                {
                                  "value": "prisma.models",
                                  "children": [
                                    {
                                      "value": "prisma",
                                      "children": []
                                    },
                                    {
                                      "value": "models",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "StoreListing",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\n        id=\"listing-id\",\n        createdAt=datetime.now(),\n        updatedAt=datetime.now(),\n        isDeleted=False,\n        isApproved=False,\n        agentId=\"agent-id\",\n        agentVersion=1,\n        owningUserId=\"user-id\",\n    )",
                              "children": [
                                {
                                  "value": "id=\"listing-id\"",
                                  "children": [
                                    {
                                      "value": "id",
                                      "children": []
                                    },
                                    {
                                      "value": "\"listing-id\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "listing-id",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "createdAt=datetime.now()",
                                  "children": [
                                    {
                                      "value": "createdAt",
                                      "children": []
                                    },
                                    {
                                      "value": "datetime.now()",
                                      "children": [
                                        {
                                          "value": "datetime.now",
                                          "children": [
                                            {
                                              "value": "datetime",
                                              "children": []
                                            },
                                            {
                                              "value": "now",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "()",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "updatedAt=datetime.now()",
                                  "children": [
                                    {
                                      "value": "updatedAt",
                                      "children": []
                                    },
                                    {
                                      "value": "datetime.now()",
                                      "children": [
                                        {
                                          "value": "datetime.now",
                                          "children": [
                                            {
                                              "value": "datetime",
                                              "children": []
                                            },
                                            {
                                              "value": "now",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "()",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "isDeleted=False",
                                  "children": [
                                    {
                                      "value": "isDeleted",
                                      "children": []
                                    },
                                    {
                                      "value": "False",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "isApproved=False",
                                  "children": [
                                    {
                                      "value": "isApproved",
                                      "children": []
                                    },
                                    {
                                      "value": "False",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "agentId=\"agent-id\"",
                                  "children": [
                                    {
                                      "value": "agentId",
                                      "children": []
                                    },
                                    {
                                      "value": "\"agent-id\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "agent-id",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "agentVersion=1",
                                  "children": [
                                    {
                                      "value": "agentVersion",
                                      "children": []
                                    },
                                    {
                                      "value": "1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "owningUserId=\"user-id\"",
                                  "children": [
                                    {
                                      "value": "owningUserId",
                                      "children": []
                                    },
                                    {
                                      "value": "\"user-id\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "user-id",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "# Mock prisma calls",
                  "children": []
                },
                {
                  "value": "mock_agent_graph = mocker.patch(\"prisma.models.AgentGraph.prisma\")",
                  "children": [
                    {
                      "value": "mock_agent_graph = mocker.patch(\"prisma.models.AgentGraph.prisma\")",
                      "children": [
                        {
                          "value": "mock_agent_graph",
                          "children": []
                        },
                        {
                          "value": "mocker.patch(\"prisma.models.AgentGraph.prisma\")",
                          "children": [
                            {
                              "value": "mocker.patch",
                              "children": [
                                {
                                  "value": "mocker",
                                  "children": []
                                },
                                {
                                  "value": "patch",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\"prisma.models.AgentGraph.prisma\")",
                              "children": [
                                {
                                  "value": "\"prisma.models.AgentGraph.prisma\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "prisma.models.AgentGraph.prisma",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "mock_agent_graph.return_value.find_first = mocker.AsyncMock(return_value=mock_agent)",
                  "children": [
                    {
                      "value": "mock_agent_graph.return_value.find_first = mocker.AsyncMock(return_value=mock_agent)",
                      "children": [
                        {
                          "value": "mock_agent_graph.return_value.find_first",
                          "children": [
                            {
                              "value": "mock_agent_graph.return_value",
                              "children": [
                                {
                                  "value": "mock_agent_graph",
                                  "children": []
                                },
                                {
                                  "value": "return_value",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "find_first",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "mocker.AsyncMock(return_value=mock_agent)",
                          "children": [
                            {
                              "value": "mocker.AsyncMock",
                              "children": [
                                {
                                  "value": "mocker",
                                  "children": []
                                },
                                {
                                  "value": "AsyncMock",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(return_value=mock_agent)",
                              "children": [
                                {
                                  "value": "return_value=mock_agent",
                                  "children": [
                                    {
                                      "value": "return_value",
                                      "children": []
                                    },
                                    {
                                      "value": "mock_agent",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "mock_store_listing = mocker.patch(\"prisma.models.StoreListing.prisma\")",
                  "children": [
                    {
                      "value": "mock_store_listing = mocker.patch(\"prisma.models.StoreListing.prisma\")",
                      "children": [
                        {
                          "value": "mock_store_listing",
                          "children": []
                        },
                        {
                          "value": "mocker.patch(\"prisma.models.StoreListing.prisma\")",
                          "children": [
                            {
                              "value": "mocker.patch",
                              "children": [
                                {
                                  "value": "mocker",
                                  "children": []
                                },
                                {
                                  "value": "patch",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\"prisma.models.StoreListing.prisma\")",
                              "children": [
                                {
                                  "value": "\"prisma.models.StoreListing.prisma\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "prisma.models.StoreListing.prisma",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "mock_store_listing.return_value.find_first = mocker.AsyncMock(return_value=None)",
                  "children": [
                    {
                      "value": "mock_store_listing.return_value.find_first = mocker.AsyncMock(return_value=None)",
                      "children": [
                        {
                          "value": "mock_store_listing.return_value.find_first",
                          "children": [
                            {
                              "value": "mock_store_listing.return_value",
                              "children": [
                                {
                                  "value": "mock_store_listing",
                                  "children": []
                                },
                                {
                                  "value": "return_value",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "find_first",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "mocker.AsyncMock(return_value=None)",
                          "children": [
                            {
                              "value": "mocker.AsyncMock",
                              "children": [
                                {
                                  "value": "mocker",
                                  "children": []
                                },
                                {
                                  "value": "AsyncMock",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(return_value=None)",
                              "children": [
                                {
                                  "value": "return_value=None",
                                  "children": [
                                    {
                                      "value": "return_value",
                                      "children": []
                                    },
                                    {
                                      "value": "None",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "mock_store_listing.return_value.create = mocker.AsyncMock(return_value=mock_listing)",
                  "children": [
                    {
                      "value": "mock_store_listing.return_value.create = mocker.AsyncMock(return_value=mock_listing)",
                      "children": [
                        {
                          "value": "mock_store_listing.return_value.create",
                          "children": [
                            {
                              "value": "mock_store_listing.return_value",
                              "children": [
                                {
                                  "value": "mock_store_listing",
                                  "children": []
                                },
                                {
                                  "value": "return_value",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "create",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "mocker.AsyncMock(return_value=mock_listing)",
                          "children": [
                            {
                              "value": "mocker.AsyncMock",
                              "children": [
                                {
                                  "value": "mocker",
                                  "children": []
                                },
                                {
                                  "value": "AsyncMock",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(return_value=mock_listing)",
                              "children": [
                                {
                                  "value": "return_value=mock_listing",
                                  "children": [
                                    {
                                      "value": "return_value",
                                      "children": []
                                    },
                                    {
                                      "value": "mock_listing",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "# Call function",
                  "children": []
                },
                {
                  "value": "result = await db.create_store_submission(\n        user_id=\"user-id\",\n        agent_id=\"agent-id\",\n        agent_version=1,\n        slug=\"test-agent\",\n        name=\"Test Agent\",\n        description=\"Test description\",\n    )",
                  "children": [
                    {
                      "value": "result = await db.create_store_submission(\n        user_id=\"user-id\",\n        agent_id=\"agent-id\",\n        agent_version=1,\n        slug=\"test-agent\",\n        name=\"Test Agent\",\n        description=\"Test description\",\n    )",
                      "children": [
                        {
                          "value": "result",
                          "children": []
                        },
                        {
                          "value": "await db.create_store_submission(\n        user_id=\"user-id\",\n        agent_id=\"agent-id\",\n        agent_version=1,\n        slug=\"test-agent\",\n        name=\"Test Agent\",\n        description=\"Test description\",\n    )",
                          "children": [
                            {
                              "value": "db.create_store_submission(\n        user_id=\"user-id\",\n        agent_id=\"agent-id\",\n        agent_version=1,\n        slug=\"test-agent\",\n        name=\"Test Agent\",\n        description=\"Test description\",\n    )",
                              "children": [
                                {
                                  "value": "db.create_store_submission",
                                  "children": [
                                    {
                                      "value": "db",
                                      "children": []
                                    },
                                    {
                                      "value": "create_store_submission",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(\n        user_id=\"user-id\",\n        agent_id=\"agent-id\",\n        agent_version=1,\n        slug=\"test-agent\",\n        name=\"Test Agent\",\n        description=\"Test description\",\n    )",
                                  "children": [
                                    {
                                      "value": "user_id=\"user-id\"",
                                      "children": [
                                        {
                                          "value": "user_id",
                                          "children": []
                                        },
                                        {
                                          "value": "\"user-id\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "user-id",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "agent_id=\"agent-id\"",
                                      "children": [
                                        {
                                          "value": "agent_id",
                                          "children": []
                                        },
                                        {
                                          "value": "\"agent-id\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "agent-id",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "agent_version=1",
                                      "children": [
                                        {
                                          "value": "agent_version",
                                          "children": []
                                        },
                                        {
                                          "value": "1",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "slug=\"test-agent\"",
                                      "children": [
                                        {
                                          "value": "slug",
                                          "children": []
                                        },
                                        {
                                          "value": "\"test-agent\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "test-agent",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "name=\"Test Agent\"",
                                      "children": [
                                        {
                                          "value": "name",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Test Agent\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Test Agent",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "description=\"Test description\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Test description\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Test description",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "# Verify results",
                  "children": []
                },
                {
                  "value": "assert result.name == \"Test Agent\"",
                  "children": [
                    {
                      "value": "result.name == \"Test Agent\"",
                      "children": [
                        {
                          "value": "result.name",
                          "children": [
                            {
                              "value": "result",
                              "children": []
                            },
                            {
                              "value": "name",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "\"Test Agent\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "Test Agent",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "assert result.description == \"Test description\"",
                  "children": [
                    {
                      "value": "result.description == \"Test description\"",
                      "children": [
                        {
                          "value": "result.description",
                          "children": [
                            {
                              "value": "result",
                              "children": []
                            },
                            {
                              "value": "description",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "\"Test description\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "Test description",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "# Verify mocks called correctly",
                  "children": []
                },
                {
                  "value": "mock_agent_graph.return_value.find_first.assert_called_once()",
                  "children": [
                    {
                      "value": "mock_agent_graph.return_value.find_first.assert_called_once()",
                      "children": [
                        {
                          "value": "mock_agent_graph.return_value.find_first.assert_called_once",
                          "children": [
                            {
                              "value": "mock_agent_graph.return_value.find_first",
                              "children": [
                                {
                                  "value": "mock_agent_graph.return_value",
                                  "children": [
                                    {
                                      "value": "mock_agent_graph",
                                      "children": []
                                    },
                                    {
                                      "value": "return_value",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "find_first",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "assert_called_once",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "()",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "mock_store_listing.return_value.find_first.assert_called_once()",
                  "children": [
                    {
                      "value": "mock_store_listing.return_value.find_first.assert_called_once()",
                      "children": [
                        {
                          "value": "mock_store_listing.return_value.find_first.assert_called_once",
                          "children": [
                            {
                              "value": "mock_store_listing.return_value.find_first",
                              "children": [
                                {
                                  "value": "mock_store_listing.return_value",
                                  "children": [
                                    {
                                      "value": "mock_store_listing",
                                      "children": []
                                    },
                                    {
                                      "value": "return_value",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "find_first",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "assert_called_once",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "()",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "mock_store_listing.return_value.create.assert_called_once()",
                  "children": [
                    {
                      "value": "mock_store_listing.return_value.create.assert_called_once()",
                      "children": [
                        {
                          "value": "mock_store_listing.return_value.create.assert_called_once",
                          "children": [
                            {
                              "value": "mock_store_listing.return_value.create",
                              "children": [
                                {
                                  "value": "mock_store_listing.return_value",
                                  "children": [
                                    {
                                      "value": "mock_store_listing",
                                      "children": []
                                    },
                                    {
                                      "value": "return_value",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "create",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "assert_called_once",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "()",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "@pytest.mark.asyncio\nasync def test_update_profile(mocker):\n    # Mock data\n    mock_profile = prisma.models.Profile(\n        id=\"profile-id\",\n        name=\"Test Creator\",\n        username=\"creator\",\n        description=\"Test description\",\n        links=[\"link1\"],\n        avatarUrl=\"avatar.jpg\",\n        isFeatured=False,\n        createdAt=datetime.now(),\n        updatedAt=datetime.now(),\n    )\n\n    # Mock prisma calls\n    mock_profile_db = mocker.patch(\"prisma.models.Profile.prisma\")\n    mock_profile_db.return_value.find_first = mocker.AsyncMock(\n        return_value=mock_profile\n    )\n    mock_profile_db.return_value.update = mocker.AsyncMock(return_value=mock_profile)\n\n    # Test data\n    profile = Profile(\n        name=\"Test Creator\",\n        username=\"creator\",\n        description=\"Test description\",\n        links=[\"link1\"],\n        avatar_url=\"avatar.jpg\",\n        is_featured=False,\n    )\n\n    # Call function\n    result = await db.update_or_create_profile(\"user-id\", profile)\n\n    # Verify results\n    assert result.username == \"creator\"\n    assert result.name == \"Test Creator\"\n\n    # Verify mocks called correctly\n    mock_profile_db.return_value.find_first.assert_called_once()\n    mock_profile_db.return_value.update.assert_called_once()",
      "children": [
        {
          "value": "@pytest.mark.asyncio",
          "children": [
            {
              "value": "pytest.mark.asyncio",
              "children": [
                {
                  "value": "pytest.mark",
                  "children": [
                    {
                      "value": "pytest",
                      "children": []
                    },
                    {
                      "value": "mark",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "asyncio",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "async def test_update_profile(mocker):\n    # Mock data\n    mock_profile = prisma.models.Profile(\n        id=\"profile-id\",\n        name=\"Test Creator\",\n        username=\"creator\",\n        description=\"Test description\",\n        links=[\"link1\"],\n        avatarUrl=\"avatar.jpg\",\n        isFeatured=False,\n        createdAt=datetime.now(),\n        updatedAt=datetime.now(),\n    )\n\n    # Mock prisma calls\n    mock_profile_db = mocker.patch(\"prisma.models.Profile.prisma\")\n    mock_profile_db.return_value.find_first = mocker.AsyncMock(\n        return_value=mock_profile\n    )\n    mock_profile_db.return_value.update = mocker.AsyncMock(return_value=mock_profile)\n\n    # Test data\n    profile = Profile(\n        name=\"Test Creator\",\n        username=\"creator\",\n        description=\"Test description\",\n        links=[\"link1\"],\n        avatar_url=\"avatar.jpg\",\n        is_featured=False,\n    )\n\n    # Call function\n    result = await db.update_or_create_profile(\"user-id\", profile)\n\n    # Verify results\n    assert result.username == \"creator\"\n    assert result.name == \"Test Creator\"\n\n    # Verify mocks called correctly\n    mock_profile_db.return_value.find_first.assert_called_once()\n    mock_profile_db.return_value.update.assert_called_once()",
          "children": [
            {
              "value": "test_update_profile",
              "children": []
            },
            {
              "value": "(mocker)",
              "children": [
                {
                  "value": "mocker",
                  "children": []
                }
              ]
            },
            {
              "value": "# Mock data",
              "children": []
            },
            {
              "value": "mock_profile = prisma.models.Profile(\n        id=\"profile-id\",\n        name=\"Test Creator\",\n        username=\"creator\",\n        description=\"Test description\",\n        links=[\"link1\"],\n        avatarUrl=\"avatar.jpg\",\n        isFeatured=False,\n        createdAt=datetime.now(),\n        updatedAt=datetime.now(),\n    )\n\n    # Mock prisma calls\n    mock_profile_db = mocker.patch(\"prisma.models.Profile.prisma\")\n    mock_profile_db.return_value.find_first = mocker.AsyncMock(\n        return_value=mock_profile\n    )\n    mock_profile_db.return_value.update = mocker.AsyncMock(return_value=mock_profile)\n\n    # Test data\n    profile = Profile(\n        name=\"Test Creator\",\n        username=\"creator\",\n        description=\"Test description\",\n        links=[\"link1\"],\n        avatar_url=\"avatar.jpg\",\n        is_featured=False,\n    )\n\n    # Call function\n    result = await db.update_or_create_profile(\"user-id\", profile)\n\n    # Verify results\n    assert result.username == \"creator\"\n    assert result.name == \"Test Creator\"\n\n    # Verify mocks called correctly\n    mock_profile_db.return_value.find_first.assert_called_once()\n    mock_profile_db.return_value.update.assert_called_once()",
              "children": [
                {
                  "value": "mock_profile = prisma.models.Profile(\n        id=\"profile-id\",\n        name=\"Test Creator\",\n        username=\"creator\",\n        description=\"Test description\",\n        links=[\"link1\"],\n        avatarUrl=\"avatar.jpg\",\n        isFeatured=False,\n        createdAt=datetime.now(),\n        updatedAt=datetime.now(),\n    )",
                  "children": [
                    {
                      "value": "mock_profile = prisma.models.Profile(\n        id=\"profile-id\",\n        name=\"Test Creator\",\n        username=\"creator\",\n        description=\"Test description\",\n        links=[\"link1\"],\n        avatarUrl=\"avatar.jpg\",\n        isFeatured=False,\n        createdAt=datetime.now(),\n        updatedAt=datetime.now(),\n    )",
                      "children": [
                        {
                          "value": "mock_profile",
                          "children": []
                        },
                        {
                          "value": "prisma.models.Profile(\n        id=\"profile-id\",\n        name=\"Test Creator\",\n        username=\"creator\",\n        description=\"Test description\",\n        links=[\"link1\"],\n        avatarUrl=\"avatar.jpg\",\n        isFeatured=False,\n        createdAt=datetime.now(),\n        updatedAt=datetime.now(),\n    )",
                          "children": [
                            {
                              "value": "prisma.models.Profile",
                              "children": [
                                {
                                  "value": "prisma.models",
                                  "children": [
                                    {
                                      "value": "prisma",
                                      "children": []
                                    },
                                    {
                                      "value": "models",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "Profile",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\n        id=\"profile-id\",\n        name=\"Test Creator\",\n        username=\"creator\",\n        description=\"Test description\",\n        links=[\"link1\"],\n        avatarUrl=\"avatar.jpg\",\n        isFeatured=False,\n        createdAt=datetime.now(),\n        updatedAt=datetime.now(),\n    )",
                              "children": [
                                {
                                  "value": "id=\"profile-id\"",
                                  "children": [
                                    {
                                      "value": "id",
                                      "children": []
                                    },
                                    {
                                      "value": "\"profile-id\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "profile-id",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "name=\"Test Creator\"",
                                  "children": [
                                    {
                                      "value": "name",
                                      "children": []
                                    },
                                    {
                                      "value": "\"Test Creator\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "Test Creator",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "username=\"creator\"",
                                  "children": [
                                    {
                                      "value": "username",
                                      "children": []
                                    },
                                    {
                                      "value": "\"creator\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "creator",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "description=\"Test description\"",
                                  "children": [
                                    {
                                      "value": "description",
                                      "children": []
                                    },
                                    {
                                      "value": "\"Test description\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "Test description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "links=[\"link1\"]",
                                  "children": [
                                    {
                                      "value": "links",
                                      "children": []
                                    },
                                    {
                                      "value": "[\"link1\"]",
                                      "children": [
                                        {
                                          "value": "\"link1\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "link1",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "avatarUrl=\"avatar.jpg\"",
                                  "children": [
                                    {
                                      "value": "avatarUrl",
                                      "children": []
                                    },
                                    {
                                      "value": "\"avatar.jpg\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "avatar.jpg",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "isFeatured=False",
                                  "children": [
                                    {
                                      "value": "isFeatured",
                                      "children": []
                                    },
                                    {
                                      "value": "False",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "createdAt=datetime.now()",
                                  "children": [
                                    {
                                      "value": "createdAt",
                                      "children": []
                                    },
                                    {
                                      "value": "datetime.now()",
                                      "children": [
                                        {
                                          "value": "datetime.now",
                                          "children": [
                                            {
                                              "value": "datetime",
                                              "children": []
                                            },
                                            {
                                              "value": "now",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "()",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "updatedAt=datetime.now()",
                                  "children": [
                                    {
                                      "value": "updatedAt",
                                      "children": []
                                    },
                                    {
                                      "value": "datetime.now()",
                                      "children": [
                                        {
                                          "value": "datetime.now",
                                          "children": [
                                            {
                                              "value": "datetime",
                                              "children": []
                                            },
                                            {
                                              "value": "now",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "()",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "# Mock prisma calls",
                  "children": []
                },
                {
                  "value": "mock_profile_db = mocker.patch(\"prisma.models.Profile.prisma\")",
                  "children": [
                    {
                      "value": "mock_profile_db = mocker.patch(\"prisma.models.Profile.prisma\")",
                      "children": [
                        {
                          "value": "mock_profile_db",
                          "children": []
                        },
                        {
                          "value": "mocker.patch(\"prisma.models.Profile.prisma\")",
                          "children": [
                            {
                              "value": "mocker.patch",
                              "children": [
                                {
                                  "value": "mocker",
                                  "children": []
                                },
                                {
                                  "value": "patch",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\"prisma.models.Profile.prisma\")",
                              "children": [
                                {
                                  "value": "\"prisma.models.Profile.prisma\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "prisma.models.Profile.prisma",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "mock_profile_db.return_value.find_first = mocker.AsyncMock(\n        return_value=mock_profile\n    )",
                  "children": [
                    {
                      "value": "mock_profile_db.return_value.find_first = mocker.AsyncMock(\n        return_value=mock_profile\n    )",
                      "children": [
                        {
                          "value": "mock_profile_db.return_value.find_first",
                          "children": [
                            {
                              "value": "mock_profile_db.return_value",
                              "children": [
                                {
                                  "value": "mock_profile_db",
                                  "children": []
                                },
                                {
                                  "value": "return_value",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "find_first",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "mocker.AsyncMock(\n        return_value=mock_profile\n    )",
                          "children": [
                            {
                              "value": "mocker.AsyncMock",
                              "children": [
                                {
                                  "value": "mocker",
                                  "children": []
                                },
                                {
                                  "value": "AsyncMock",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\n        return_value=mock_profile\n    )",
                              "children": [
                                {
                                  "value": "return_value=mock_profile",
                                  "children": [
                                    {
                                      "value": "return_value",
                                      "children": []
                                    },
                                    {
                                      "value": "mock_profile",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "mock_profile_db.return_value.update = mocker.AsyncMock(return_value=mock_profile)",
                  "children": [
                    {
                      "value": "mock_profile_db.return_value.update = mocker.AsyncMock(return_value=mock_profile)",
                      "children": [
                        {
                          "value": "mock_profile_db.return_value.update",
                          "children": [
                            {
                              "value": "mock_profile_db.return_value",
                              "children": [
                                {
                                  "value": "mock_profile_db",
                                  "children": []
                                },
                                {
                                  "value": "return_value",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "update",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "mocker.AsyncMock(return_value=mock_profile)",
                          "children": [
                            {
                              "value": "mocker.AsyncMock",
                              "children": [
                                {
                                  "value": "mocker",
                                  "children": []
                                },
                                {
                                  "value": "AsyncMock",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(return_value=mock_profile)",
                              "children": [
                                {
                                  "value": "return_value=mock_profile",
                                  "children": [
                                    {
                                      "value": "return_value",
                                      "children": []
                                    },
                                    {
                                      "value": "mock_profile",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "# Test data",
                  "children": []
                },
                {
                  "value": "profile = Profile(\n        name=\"Test Creator\",\n        username=\"creator\",\n        description=\"Test description\",\n        links=[\"link1\"],\n        avatar_url=\"avatar.jpg\",\n        is_featured=False,\n    )",
                  "children": [
                    {
                      "value": "profile = Profile(\n        name=\"Test Creator\",\n        username=\"creator\",\n        description=\"Test description\",\n        links=[\"link1\"],\n        avatar_url=\"avatar.jpg\",\n        is_featured=False,\n    )",
                      "children": [
                        {
                          "value": "profile",
                          "children": []
                        },
                        {
                          "value": "Profile(\n        name=\"Test Creator\",\n        username=\"creator\",\n        description=\"Test description\",\n        links=[\"link1\"],\n        avatar_url=\"avatar.jpg\",\n        is_featured=False,\n    )",
                          "children": [
                            {
                              "value": "Profile",
                              "children": []
                            },
                            {
                              "value": "(\n        name=\"Test Creator\",\n        username=\"creator\",\n        description=\"Test description\",\n        links=[\"link1\"],\n        avatar_url=\"avatar.jpg\",\n        is_featured=False,\n    )",
                              "children": [
                                {
                                  "value": "name=\"Test Creator\"",
                                  "children": [
                                    {
                                      "value": "name",
                                      "children": []
                                    },
                                    {
                                      "value": "\"Test Creator\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "Test Creator",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "username=\"creator\"",
                                  "children": [
                                    {
                                      "value": "username",
                                      "children": []
                                    },
                                    {
                                      "value": "\"creator\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "creator",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "description=\"Test description\"",
                                  "children": [
                                    {
                                      "value": "description",
                                      "children": []
                                    },
                                    {
                                      "value": "\"Test description\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "Test description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "links=[\"link1\"]",
                                  "children": [
                                    {
                                      "value": "links",
                                      "children": []
                                    },
                                    {
                                      "value": "[\"link1\"]",
                                      "children": [
                                        {
                                          "value": "\"link1\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "link1",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "avatar_url=\"avatar.jpg\"",
                                  "children": [
                                    {
                                      "value": "avatar_url",
                                      "children": []
                                    },
                                    {
                                      "value": "\"avatar.jpg\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "avatar.jpg",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "is_featured=False",
                                  "children": [
                                    {
                                      "value": "is_featured",
                                      "children": []
                                    },
                                    {
                                      "value": "False",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "# Call function",
                  "children": []
                },
                {
                  "value": "result = await db.update_or_create_profile(\"user-id\", profile)",
                  "children": [
                    {
                      "value": "result = await db.update_or_create_profile(\"user-id\", profile)",
                      "children": [
                        {
                          "value": "result",
                          "children": []
                        },
                        {
                          "value": "await db.update_or_create_profile(\"user-id\", profile)",
                          "children": [
                            {
                              "value": "db.update_or_create_profile(\"user-id\", profile)",
                              "children": [
                                {
                                  "value": "db.update_or_create_profile",
                                  "children": [
                                    {
                                      "value": "db",
                                      "children": []
                                    },
                                    {
                                      "value": "update_or_create_profile",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(\"user-id\", profile)",
                                  "children": [
                                    {
                                      "value": "\"user-id\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "user-id",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "profile",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "# Verify results",
                  "children": []
                },
                {
                  "value": "assert result.username == \"creator\"",
                  "children": [
                    {
                      "value": "result.username == \"creator\"",
                      "children": [
                        {
                          "value": "result.username",
                          "children": [
                            {
                              "value": "result",
                              "children": []
                            },
                            {
                              "value": "username",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "\"creator\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "creator",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "assert result.name == \"Test Creator\"",
                  "children": [
                    {
                      "value": "result.name == \"Test Creator\"",
                      "children": [
                        {
                          "value": "result.name",
                          "children": [
                            {
                              "value": "result",
                              "children": []
                            },
                            {
                              "value": "name",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "\"Test Creator\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "Test Creator",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "# Verify mocks called correctly",
                  "children": []
                },
                {
                  "value": "mock_profile_db.return_value.find_first.assert_called_once()",
                  "children": [
                    {
                      "value": "mock_profile_db.return_value.find_first.assert_called_once()",
                      "children": [
                        {
                          "value": "mock_profile_db.return_value.find_first.assert_called_once",
                          "children": [
                            {
                              "value": "mock_profile_db.return_value.find_first",
                              "children": [
                                {
                                  "value": "mock_profile_db.return_value",
                                  "children": [
                                    {
                                      "value": "mock_profile_db",
                                      "children": []
                                    },
                                    {
                                      "value": "return_value",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "find_first",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "assert_called_once",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "()",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "mock_profile_db.return_value.update.assert_called_once()",
                  "children": [
                    {
                      "value": "mock_profile_db.return_value.update.assert_called_once()",
                      "children": [
                        {
                          "value": "mock_profile_db.return_value.update.assert_called_once",
                          "children": [
                            {
                              "value": "mock_profile_db.return_value.update",
                              "children": [
                                {
                                  "value": "mock_profile_db.return_value",
                                  "children": [
                                    {
                                      "value": "mock_profile_db",
                                      "children": []
                                    },
                                    {
                                      "value": "return_value",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "update",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "assert_called_once",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "()",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "@pytest.mark.asyncio\nasync def test_get_user_profile(mocker):\n    # Mock data\n    mock_profile = prisma.models.Profile(\n        id=\"profile-id\",\n        name=\"No Profile Data\",\n        username=\"testuser\",\n        description=\"Test description\",\n        links=[\"link1\", \"link2\"],\n        avatarUrl=\"avatar.jpg\",\n        isFeatured=False,\n        createdAt=datetime.now(),\n        updatedAt=datetime.now(),\n    )\n\n    # Mock prisma calls\n    mock_profile_db = mocker.patch(\"prisma.models.Profile.prisma\")\n    mock_profile_db.return_value.find_unique = mocker.AsyncMock(\n        return_value=mock_profile\n    )\n\n    # Call function\n    result = await db.get_user_profile(\"user-id\")\n\n    # Verify results\n    assert result.name == \"No Profile Data\"\n    assert result.username == \"No Profile Data\"\n    assert result.description == \"No Profile Data\"\n    assert result.links == []\n    assert result.avatar_url == \"\"",
      "children": [
        {
          "value": "@pytest.mark.asyncio",
          "children": [
            {
              "value": "pytest.mark.asyncio",
              "children": [
                {
                  "value": "pytest.mark",
                  "children": [
                    {
                      "value": "pytest",
                      "children": []
                    },
                    {
                      "value": "mark",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "asyncio",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "async def test_get_user_profile(mocker):\n    # Mock data\n    mock_profile = prisma.models.Profile(\n        id=\"profile-id\",\n        name=\"No Profile Data\",\n        username=\"testuser\",\n        description=\"Test description\",\n        links=[\"link1\", \"link2\"],\n        avatarUrl=\"avatar.jpg\",\n        isFeatured=False,\n        createdAt=datetime.now(),\n        updatedAt=datetime.now(),\n    )\n\n    # Mock prisma calls\n    mock_profile_db = mocker.patch(\"prisma.models.Profile.prisma\")\n    mock_profile_db.return_value.find_unique = mocker.AsyncMock(\n        return_value=mock_profile\n    )\n\n    # Call function\n    result = await db.get_user_profile(\"user-id\")\n\n    # Verify results\n    assert result.name == \"No Profile Data\"\n    assert result.username == \"No Profile Data\"\n    assert result.description == \"No Profile Data\"\n    assert result.links == []\n    assert result.avatar_url == \"\"",
          "children": [
            {
              "value": "test_get_user_profile",
              "children": []
            },
            {
              "value": "(mocker)",
              "children": [
                {
                  "value": "mocker",
                  "children": []
                }
              ]
            },
            {
              "value": "# Mock data",
              "children": []
            },
            {
              "value": "mock_profile = prisma.models.Profile(\n        id=\"profile-id\",\n        name=\"No Profile Data\",\n        username=\"testuser\",\n        description=\"Test description\",\n        links=[\"link1\", \"link2\"],\n        avatarUrl=\"avatar.jpg\",\n        isFeatured=False,\n        createdAt=datetime.now(),\n        updatedAt=datetime.now(),\n    )\n\n    # Mock prisma calls\n    mock_profile_db = mocker.patch(\"prisma.models.Profile.prisma\")\n    mock_profile_db.return_value.find_unique = mocker.AsyncMock(\n        return_value=mock_profile\n    )\n\n    # Call function\n    result = await db.get_user_profile(\"user-id\")\n\n    # Verify results\n    assert result.name == \"No Profile Data\"\n    assert result.username == \"No Profile Data\"\n    assert result.description == \"No Profile Data\"\n    assert result.links == []\n    assert result.avatar_url == \"\"",
              "children": [
                {
                  "value": "mock_profile = prisma.models.Profile(\n        id=\"profile-id\",\n        name=\"No Profile Data\",\n        username=\"testuser\",\n        description=\"Test description\",\n        links=[\"link1\", \"link2\"],\n        avatarUrl=\"avatar.jpg\",\n        isFeatured=False,\n        createdAt=datetime.now(),\n        updatedAt=datetime.now(),\n    )",
                  "children": [
                    {
                      "value": "mock_profile = prisma.models.Profile(\n        id=\"profile-id\",\n        name=\"No Profile Data\",\n        username=\"testuser\",\n        description=\"Test description\",\n        links=[\"link1\", \"link2\"],\n        avatarUrl=\"avatar.jpg\",\n        isFeatured=False,\n        createdAt=datetime.now(),\n        updatedAt=datetime.now(),\n    )",
                      "children": [
                        {
                          "value": "mock_profile",
                          "children": []
                        },
                        {
                          "value": "prisma.models.Profile(\n        id=\"profile-id\",\n        name=\"No Profile Data\",\n        username=\"testuser\",\n        description=\"Test description\",\n        links=[\"link1\", \"link2\"],\n        avatarUrl=\"avatar.jpg\",\n        isFeatured=False,\n        createdAt=datetime.now(),\n        updatedAt=datetime.now(),\n    )",
                          "children": [
                            {
                              "value": "prisma.models.Profile",
                              "children": [
                                {
                                  "value": "prisma.models",
                                  "children": [
                                    {
                                      "value": "prisma",
                                      "children": []
                                    },
                                    {
                                      "value": "models",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "Profile",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\n        id=\"profile-id\",\n        name=\"No Profile Data\",\n        username=\"testuser\",\n        description=\"Test description\",\n        links=[\"link1\", \"link2\"],\n        avatarUrl=\"avatar.jpg\",\n        isFeatured=False,\n        createdAt=datetime.now(),\n        updatedAt=datetime.now(),\n    )",
                              "children": [
                                {
                                  "value": "id=\"profile-id\"",
                                  "children": [
                                    {
                                      "value": "id",
                                      "children": []
                                    },
                                    {
                                      "value": "\"profile-id\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "profile-id",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "name=\"No Profile Data\"",
                                  "children": [
                                    {
                                      "value": "name",
                                      "children": []
                                    },
                                    {
                                      "value": "\"No Profile Data\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "No Profile Data",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "username=\"testuser\"",
                                  "children": [
                                    {
                                      "value": "username",
                                      "children": []
                                    },
                                    {
                                      "value": "\"testuser\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "testuser",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "description=\"Test description\"",
                                  "children": [
                                    {
                                      "value": "description",
                                      "children": []
                                    },
                                    {
                                      "value": "\"Test description\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "Test description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "links=[\"link1\", \"link2\"]",
                                  "children": [
                                    {
                                      "value": "links",
                                      "children": []
                                    },
                                    {
                                      "value": "[\"link1\", \"link2\"]",
                                      "children": [
                                        {
                                          "value": "\"link1\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "link1",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"link2\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "link2",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "avatarUrl=\"avatar.jpg\"",
                                  "children": [
                                    {
                                      "value": "avatarUrl",
                                      "children": []
                                    },
                                    {
                                      "value": "\"avatar.jpg\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "avatar.jpg",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "isFeatured=False",
                                  "children": [
                                    {
                                      "value": "isFeatured",
                                      "children": []
                                    },
                                    {
                                      "value": "False",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "createdAt=datetime.now()",
                                  "children": [
                                    {
                                      "value": "createdAt",
                                      "children": []
                                    },
                                    {
                                      "value": "datetime.now()",
                                      "children": [
                                        {
                                          "value": "datetime.now",
                                          "children": [
                                            {
                                              "value": "datetime",
                                              "children": []
                                            },
                                            {
                                              "value": "now",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "()",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "updatedAt=datetime.now()",
                                  "children": [
                                    {
                                      "value": "updatedAt",
                                      "children": []
                                    },
                                    {
                                      "value": "datetime.now()",
                                      "children": [
                                        {
                                          "value": "datetime.now",
                                          "children": [
                                            {
                                              "value": "datetime",
                                              "children": []
                                            },
                                            {
                                              "value": "now",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "()",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "# Mock prisma calls",
                  "children": []
                },
                {
                  "value": "mock_profile_db = mocker.patch(\"prisma.models.Profile.prisma\")",
                  "children": [
                    {
                      "value": "mock_profile_db = mocker.patch(\"prisma.models.Profile.prisma\")",
                      "children": [
                        {
                          "value": "mock_profile_db",
                          "children": []
                        },
                        {
                          "value": "mocker.patch(\"prisma.models.Profile.prisma\")",
                          "children": [
                            {
                              "value": "mocker.patch",
                              "children": [
                                {
                                  "value": "mocker",
                                  "children": []
                                },
                                {
                                  "value": "patch",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\"prisma.models.Profile.prisma\")",
                              "children": [
                                {
                                  "value": "\"prisma.models.Profile.prisma\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "prisma.models.Profile.prisma",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "mock_profile_db.return_value.find_unique = mocker.AsyncMock(\n        return_value=mock_profile\n    )",
                  "children": [
                    {
                      "value": "mock_profile_db.return_value.find_unique = mocker.AsyncMock(\n        return_value=mock_profile\n    )",
                      "children": [
                        {
                          "value": "mock_profile_db.return_value.find_unique",
                          "children": [
                            {
                              "value": "mock_profile_db.return_value",
                              "children": [
                                {
                                  "value": "mock_profile_db",
                                  "children": []
                                },
                                {
                                  "value": "return_value",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "find_unique",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "mocker.AsyncMock(\n        return_value=mock_profile\n    )",
                          "children": [
                            {
                              "value": "mocker.AsyncMock",
                              "children": [
                                {
                                  "value": "mocker",
                                  "children": []
                                },
                                {
                                  "value": "AsyncMock",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\n        return_value=mock_profile\n    )",
                              "children": [
                                {
                                  "value": "return_value=mock_profile",
                                  "children": [
                                    {
                                      "value": "return_value",
                                      "children": []
                                    },
                                    {
                                      "value": "mock_profile",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "# Call function",
                  "children": []
                },
                {
                  "value": "result = await db.get_user_profile(\"user-id\")",
                  "children": [
                    {
                      "value": "result = await db.get_user_profile(\"user-id\")",
                      "children": [
                        {
                          "value": "result",
                          "children": []
                        },
                        {
                          "value": "await db.get_user_profile(\"user-id\")",
                          "children": [
                            {
                              "value": "db.get_user_profile(\"user-id\")",
                              "children": [
                                {
                                  "value": "db.get_user_profile",
                                  "children": [
                                    {
                                      "value": "db",
                                      "children": []
                                    },
                                    {
                                      "value": "get_user_profile",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(\"user-id\")",
                                  "children": [
                                    {
                                      "value": "\"user-id\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "user-id",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "# Verify results",
                  "children": []
                },
                {
                  "value": "assert result.name == \"No Profile Data\"",
                  "children": [
                    {
                      "value": "result.name == \"No Profile Data\"",
                      "children": [
                        {
                          "value": "result.name",
                          "children": [
                            {
                              "value": "result",
                              "children": []
                            },
                            {
                              "value": "name",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "\"No Profile Data\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "No Profile Data",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "assert result.username == \"No Profile Data\"",
                  "children": [
                    {
                      "value": "result.username == \"No Profile Data\"",
                      "children": [
                        {
                          "value": "result.username",
                          "children": [
                            {
                              "value": "result",
                              "children": []
                            },
                            {
                              "value": "username",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "\"No Profile Data\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "No Profile Data",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "assert result.description == \"No Profile Data\"",
                  "children": [
                    {
                      "value": "result.description == \"No Profile Data\"",
                      "children": [
                        {
                          "value": "result.description",
                          "children": [
                            {
                              "value": "result",
                              "children": []
                            },
                            {
                              "value": "description",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "\"No Profile Data\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "No Profile Data",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "assert result.links == []",
                  "children": [
                    {
                      "value": "result.links == []",
                      "children": [
                        {
                          "value": "result.links",
                          "children": [
                            {
                              "value": "result",
                              "children": []
                            },
                            {
                              "value": "links",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "[]",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "assert result.avatar_url == \"\"",
                  "children": [
                    {
                      "value": "result.avatar_url == \"\"",
                      "children": [
                        {
                          "value": "result.avatar_url",
                          "children": [
                            {
                              "value": "result",
                              "children": []
                            },
                            {
                              "value": "avatar_url",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "\"\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}