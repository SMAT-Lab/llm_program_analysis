{
  "value": "#!/usr/bin/env python\n# coding: utf-8\n\n\"\"\"\n    The approach taken is explained below. I decided to do it simply.\n    Initially I was considering parsing the data into some sort of\n    structure and then generating an appropriate README. I am still\n    considering doing it - but for now this should work. The only issue\n    I see is that it only sorts the entries at the lowest level, and that\n    the order of the top-level contents do not match the order of the actual\n    entries.\n\n    This could be extended by having nested blocks, sorting them recursively\n    and flattening the end structure into a list of lines. Revision 2 maybe ^.^.\n\"\"\"\n\ndef sort_blocks():\n    # First, we load the current README into memory\n    with open('README.md', 'r') as read_me_file:\n        read_me = read_me_file.read()\n\n    # Separating the 'table of contents' from the contents (blocks)\n    table_of_contents = ''.join(read_me.split('- - -')[0])\n    blocks = ''.join(read_me.split('- - -')[1]).split('\\n# ')\n    for i in range(len(blocks)):\n        if i == 0:\n            blocks[i] = blocks[i] + '\\n'\n        else:\n            blocks[i] = '# ' + blocks[i] + '\\n'\n\n    # Sorting the libraries\n    inner_blocks = sorted(blocks[0].split('##'))\n    for i in range(1, len(inner_blocks)):\n        if inner_blocks[i][0] != '#':\n            inner_blocks[i] = '##' + inner_blocks[i]\n    inner_blocks = ''.join(inner_blocks)\n\n    # Replacing the non-sorted libraries by the sorted ones and gathering all at the final_README file\n    blocks[0] = inner_blocks\n    final_README = table_of_contents + '- - -' + ''.join(blocks)\n\n    with open('README.md', 'w+') as sorted_file:\n        sorted_file.write(final_README)\n\ndef main():\n    # First, we load the current README into memory as an array of lines\n    with open('README.md', 'r') as read_me_file:\n        read_me = read_me_file.readlines()\n\n    # Then we cluster the lines together as blocks\n    # Each block represents a collection of lines that should be sorted\n    # This was done by assuming only links ([...](...)) are meant to be sorted\n    # Clustering is done by indentation\n    blocks = []\n    last_indent = None\n    for line in read_me:\n        s_line = line.lstrip()\n        indent = len(line) - len(s_line)\n\n        if any([s_line.startswith(s) for s in ['* [', '- [']]):\n            if indent == last_indent:\n                blocks[-1].append(line)\n            else:\n                blocks.append([line])\n            last_indent = indent\n        else:\n            blocks.append([line])\n            last_indent = None\n\n    with open('README.md', 'w+') as sorted_file:\n        # Then all of the blocks are sorted individually\n        blocks = [\n            ''.join(sorted(block, key=str.lower)) for block in blocks\n        ]\n        # And the result is written back to README.md\n        sorted_file.write(''.join(blocks))\n\n    # Then we call the sorting method\n    sort_blocks()\n\n\nif __name__ == \"__main__\":\n    main()",
  "children": [
    {
      "value": "#!/usr/bin/env python",
      "children": []
    },
    {
      "value": "# coding: utf-8",
      "children": []
    },
    {
      "value": "\"\"\"\n    The approach taken is explained below. I decided to do it simply.\n    Initially I was considering parsing the data into some sort of\n    structure and then generating an appropriate README. I am still\n    considering doing it - but for now this should work. The only issue\n    I see is that it only sorts the entries at the lowest level, and that\n    the order of the top-level contents do not match the order of the actual\n    entries.\n\n    This could be extended by having nested blocks, sorting them recursively\n    and flattening the end structure into a list of lines. Revision 2 maybe ^.^.\n\"\"\"",
      "children": [
        {
          "value": "\"\"\"\n    The approach taken is explained below. I decided to do it simply.\n    Initially I was considering parsing the data into some sort of\n    structure and then generating an appropriate README. I am still\n    considering doing it - but for now this should work. The only issue\n    I see is that it only sorts the entries at the lowest level, and that\n    the order of the top-level contents do not match the order of the actual\n    entries.\n\n    This could be extended by having nested blocks, sorting them recursively\n    and flattening the end structure into a list of lines. Revision 2 maybe ^.^.\n\"\"\"",
          "children": [
            {
              "value": "\"\"\"",
              "children": []
            },
            {
              "value": "The approach taken is explained below. I decided to do it simply.\n    Initially I was considering parsing the data into some sort of\n    structure and then generating an appropriate README. I am still\n    considering doing it - but for now this should work. The only issue\n    I see is that it only sorts the entries at the lowest level, and that\n    the order of the top-level contents do not match the order of the actual\n    entries.\n\n    This could be extended by having nested blocks, sorting them recursively\n    and flattening the end structure into a list of lines. Revision 2 maybe ^.^.",
              "children": []
            },
            {
              "value": "\"\"\"",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "def sort_blocks():\n    # First, we load the current README into memory\n    with open('README.md', 'r') as read_me_file:\n        read_me = read_me_file.read()\n\n    # Separating the 'table of contents' from the contents (blocks)\n    table_of_contents = ''.join(read_me.split('- - -')[0])\n    blocks = ''.join(read_me.split('- - -')[1]).split('\\n# ')\n    for i in range(len(blocks)):\n        if i == 0:\n            blocks[i] = blocks[i] + '\\n'\n        else:\n            blocks[i] = '# ' + blocks[i] + '\\n'\n\n    # Sorting the libraries\n    inner_blocks = sorted(blocks[0].split('##'))\n    for i in range(1, len(inner_blocks)):\n        if inner_blocks[i][0] != '#':\n            inner_blocks[i] = '##' + inner_blocks[i]\n    inner_blocks = ''.join(inner_blocks)\n\n    # Replacing the non-sorted libraries by the sorted ones and gathering all at the final_README file\n    blocks[0] = inner_blocks\n    final_README = table_of_contents + '- - -' + ''.join(blocks)\n\n    with open('README.md', 'w+') as sorted_file:\n        sorted_file.write(final_README)",
      "children": [
        {
          "value": "sort_blocks",
          "children": []
        },
        {
          "value": "()",
          "children": []
        },
        {
          "value": "# First, we load the current README into memory",
          "children": []
        },
        {
          "value": "with open('README.md', 'r') as read_me_file:\n        read_me = read_me_file.read()\n\n    # Separating the 'table of contents' from the contents (blocks)\n    table_of_contents = ''.join(read_me.split('- - -')[0])\n    blocks = ''.join(read_me.split('- - -')[1]).split('\\n# ')\n    for i in range(len(blocks)):\n        if i == 0:\n            blocks[i] = blocks[i] + '\\n'\n        else:\n            blocks[i] = '# ' + blocks[i] + '\\n'\n\n    # Sorting the libraries\n    inner_blocks = sorted(blocks[0].split('##'))\n    for i in range(1, len(inner_blocks)):\n        if inner_blocks[i][0] != '#':\n            inner_blocks[i] = '##' + inner_blocks[i]\n    inner_blocks = ''.join(inner_blocks)\n\n    # Replacing the non-sorted libraries by the sorted ones and gathering all at the final_README file\n    blocks[0] = inner_blocks\n    final_README = table_of_contents + '- - -' + ''.join(blocks)\n\n    with open('README.md', 'w+') as sorted_file:\n        sorted_file.write(final_README)",
          "children": [
            {
              "value": "with open('README.md', 'r') as read_me_file:\n        read_me = read_me_file.read()",
              "children": [
                {
                  "value": "open('README.md', 'r') as read_me_file",
                  "children": [
                    {
                      "value": "open('README.md', 'r') as read_me_file",
                      "children": [
                        {
                          "value": "open('README.md', 'r') as read_me_file",
                          "children": [
                            {
                              "value": "open('README.md', 'r')",
                              "children": [
                                {
                                  "value": "open",
                                  "children": []
                                },
                                {
                                  "value": "('README.md', 'r')",
                                  "children": [
                                    {
                                      "value": "'README.md'",
                                      "children": [
                                        {
                                          "value": "'",
                                          "children": []
                                        },
                                        {
                                          "value": "README.md",
                                          "children": []
                                        },
                                        {
                                          "value": "'",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "'r'",
                                      "children": [
                                        {
                                          "value": "'",
                                          "children": []
                                        },
                                        {
                                          "value": "r",
                                          "children": []
                                        },
                                        {
                                          "value": "'",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "read_me_file",
                              "children": [
                                {
                                  "value": "read_me_file",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "read_me = read_me_file.read()",
                  "children": [
                    {
                      "value": "read_me = read_me_file.read()",
                      "children": [
                        {
                          "value": "read_me = read_me_file.read()",
                          "children": [
                            {
                              "value": "read_me",
                              "children": []
                            },
                            {
                              "value": "read_me_file.read()",
                              "children": [
                                {
                                  "value": "read_me_file.read",
                                  "children": [
                                    {
                                      "value": "read_me_file",
                                      "children": []
                                    },
                                    {
                                      "value": "read",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "()",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Separating the 'table of contents' from the contents (blocks)",
              "children": []
            },
            {
              "value": "table_of_contents = ''.join(read_me.split('- - -')[0])",
              "children": [
                {
                  "value": "table_of_contents = ''.join(read_me.split('- - -')[0])",
                  "children": [
                    {
                      "value": "table_of_contents",
                      "children": []
                    },
                    {
                      "value": "''.join(read_me.split('- - -')[0])",
                      "children": [
                        {
                          "value": "''.join",
                          "children": [
                            {
                              "value": "''",
                              "children": [
                                {
                                  "value": "'",
                                  "children": []
                                },
                                {
                                  "value": "'",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "join",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(read_me.split('- - -')[0])",
                          "children": [
                            {
                              "value": "read_me.split('- - -')[0]",
                              "children": [
                                {
                                  "value": "read_me.split('- - -')",
                                  "children": [
                                    {
                                      "value": "read_me.split",
                                      "children": [
                                        {
                                          "value": "read_me",
                                          "children": []
                                        },
                                        {
                                          "value": "split",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "('- - -')",
                                      "children": [
                                        {
                                          "value": "'- - -'",
                                          "children": [
                                            {
                                              "value": "'",
                                              "children": []
                                            },
                                            {
                                              "value": "- - -",
                                              "children": []
                                            },
                                            {
                                              "value": "'",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "0",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "blocks = ''.join(read_me.split('- - -')[1]).split('\\n# ')",
              "children": [
                {
                  "value": "blocks = ''.join(read_me.split('- - -')[1]).split('\\n# ')",
                  "children": [
                    {
                      "value": "blocks",
                      "children": []
                    },
                    {
                      "value": "''.join(read_me.split('- - -')[1]).split('\\n# ')",
                      "children": [
                        {
                          "value": "''.join(read_me.split('- - -')[1]).split",
                          "children": [
                            {
                              "value": "''.join(read_me.split('- - -')[1])",
                              "children": [
                                {
                                  "value": "''.join",
                                  "children": [
                                    {
                                      "value": "''",
                                      "children": [
                                        {
                                          "value": "'",
                                          "children": []
                                        },
                                        {
                                          "value": "'",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "join",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(read_me.split('- - -')[1])",
                                  "children": [
                                    {
                                      "value": "read_me.split('- - -')[1]",
                                      "children": [
                                        {
                                          "value": "read_me.split('- - -')",
                                          "children": [
                                            {
                                              "value": "read_me.split",
                                              "children": [
                                                {
                                                  "value": "read_me",
                                                  "children": []
                                                },
                                                {
                                                  "value": "split",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "('- - -')",
                                              "children": [
                                                {
                                                  "value": "'- - -'",
                                                  "children": [
                                                    {
                                                      "value": "'",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "- - -",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "'",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "1",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "split",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "('\\n# ')",
                          "children": [
                            {
                              "value": "'\\n# '",
                              "children": [
                                {
                                  "value": "'",
                                  "children": []
                                },
                                {
                                  "value": "\\n#",
                                  "children": [
                                    {
                                      "value": "\\n",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "for i in range(len(blocks)):\n        if i == 0:\n            blocks[i] = blocks[i] + '\\n'\n        else:\n            blocks[i] = '# ' + blocks[i] + '\\n'",
              "children": [
                {
                  "value": "i",
                  "children": []
                },
                {
                  "value": "range(len(blocks))",
                  "children": [
                    {
                      "value": "range",
                      "children": []
                    },
                    {
                      "value": "(len(blocks))",
                      "children": [
                        {
                          "value": "len(blocks)",
                          "children": [
                            {
                              "value": "len",
                              "children": []
                            },
                            {
                              "value": "(blocks)",
                              "children": [
                                {
                                  "value": "blocks",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "if i == 0:\n            blocks[i] = blocks[i] + '\\n'\n        else:\n            blocks[i] = '# ' + blocks[i] + '\\n'",
                  "children": [
                    {
                      "value": "if i == 0:\n            blocks[i] = blocks[i] + '\\n'\n        else:\n            blocks[i] = '# ' + blocks[i] + '\\n'",
                      "children": [
                        {
                          "value": "i == 0",
                          "children": [
                            {
                              "value": "i",
                              "children": []
                            },
                            {
                              "value": "0",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "blocks[i] = blocks[i] + '\\n'",
                          "children": [
                            {
                              "value": "blocks[i] = blocks[i] + '\\n'",
                              "children": [
                                {
                                  "value": "blocks[i] = blocks[i] + '\\n'",
                                  "children": [
                                    {
                                      "value": "blocks[i]",
                                      "children": [
                                        {
                                          "value": "blocks",
                                          "children": []
                                        },
                                        {
                                          "value": "i",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "blocks[i] + '\\n'",
                                      "children": [
                                        {
                                          "value": "blocks[i]",
                                          "children": [
                                            {
                                              "value": "blocks",
                                              "children": []
                                            },
                                            {
                                              "value": "i",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "'\\n'",
                                          "children": [
                                            {
                                              "value": "'",
                                              "children": []
                                            },
                                            {
                                              "value": "\\n",
                                              "children": [
                                                {
                                                  "value": "\\n",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "'",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "else:\n            blocks[i] = '# ' + blocks[i] + '\\n'",
                          "children": [
                            {
                              "value": "blocks[i] = '# ' + blocks[i] + '\\n'",
                              "children": [
                                {
                                  "value": "blocks[i] = '# ' + blocks[i] + '\\n'",
                                  "children": [
                                    {
                                      "value": "blocks[i] = '# ' + blocks[i] + '\\n'",
                                      "children": [
                                        {
                                          "value": "blocks[i]",
                                          "children": [
                                            {
                                              "value": "blocks",
                                              "children": []
                                            },
                                            {
                                              "value": "i",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "'# ' + blocks[i] + '\\n'",
                                          "children": [
                                            {
                                              "value": "'# ' + blocks[i]",
                                              "children": [
                                                {
                                                  "value": "'# '",
                                                  "children": [
                                                    {
                                                      "value": "'",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "#",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "'",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "blocks[i]",
                                                  "children": [
                                                    {
                                                      "value": "blocks",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "i",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "'\\n'",
                                              "children": [
                                                {
                                                  "value": "'",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\\n",
                                                  "children": [
                                                    {
                                                      "value": "\\n",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "'",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Sorting the libraries",
              "children": []
            },
            {
              "value": "inner_blocks = sorted(blocks[0].split('##'))",
              "children": [
                {
                  "value": "inner_blocks = sorted(blocks[0].split('##'))",
                  "children": [
                    {
                      "value": "inner_blocks",
                      "children": []
                    },
                    {
                      "value": "sorted(blocks[0].split('##'))",
                      "children": [
                        {
                          "value": "sorted",
                          "children": []
                        },
                        {
                          "value": "(blocks[0].split('##'))",
                          "children": [
                            {
                              "value": "blocks[0].split('##')",
                              "children": [
                                {
                                  "value": "blocks[0].split",
                                  "children": [
                                    {
                                      "value": "blocks[0]",
                                      "children": [
                                        {
                                          "value": "blocks",
                                          "children": []
                                        },
                                        {
                                          "value": "0",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "split",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "('##')",
                                  "children": [
                                    {
                                      "value": "'##'",
                                      "children": [
                                        {
                                          "value": "'",
                                          "children": []
                                        },
                                        {
                                          "value": "##",
                                          "children": []
                                        },
                                        {
                                          "value": "'",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "for i in range(1, len(inner_blocks)):\n        if inner_blocks[i][0] != '#':\n            inner_blocks[i] = '##' + inner_blocks[i]",
              "children": [
                {
                  "value": "i",
                  "children": []
                },
                {
                  "value": "range(1, len(inner_blocks))",
                  "children": [
                    {
                      "value": "range",
                      "children": []
                    },
                    {
                      "value": "(1, len(inner_blocks))",
                      "children": [
                        {
                          "value": "1",
                          "children": []
                        },
                        {
                          "value": "len(inner_blocks)",
                          "children": [
                            {
                              "value": "len",
                              "children": []
                            },
                            {
                              "value": "(inner_blocks)",
                              "children": [
                                {
                                  "value": "inner_blocks",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "if inner_blocks[i][0] != '#':\n            inner_blocks[i] = '##' + inner_blocks[i]",
                  "children": [
                    {
                      "value": "if inner_blocks[i][0] != '#':\n            inner_blocks[i] = '##' + inner_blocks[i]",
                      "children": [
                        {
                          "value": "inner_blocks[i][0] != '#'",
                          "children": [
                            {
                              "value": "inner_blocks[i][0]",
                              "children": [
                                {
                                  "value": "inner_blocks[i]",
                                  "children": [
                                    {
                                      "value": "inner_blocks",
                                      "children": []
                                    },
                                    {
                                      "value": "i",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "'#'",
                              "children": [
                                {
                                  "value": "'",
                                  "children": []
                                },
                                {
                                  "value": "#",
                                  "children": []
                                },
                                {
                                  "value": "'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "inner_blocks[i] = '##' + inner_blocks[i]",
                          "children": [
                            {
                              "value": "inner_blocks[i] = '##' + inner_blocks[i]",
                              "children": [
                                {
                                  "value": "inner_blocks[i] = '##' + inner_blocks[i]",
                                  "children": [
                                    {
                                      "value": "inner_blocks[i]",
                                      "children": [
                                        {
                                          "value": "inner_blocks",
                                          "children": []
                                        },
                                        {
                                          "value": "i",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "'##' + inner_blocks[i]",
                                      "children": [
                                        {
                                          "value": "'##'",
                                          "children": [
                                            {
                                              "value": "'",
                                              "children": []
                                            },
                                            {
                                              "value": "##",
                                              "children": []
                                            },
                                            {
                                              "value": "'",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "inner_blocks[i]",
                                          "children": [
                                            {
                                              "value": "inner_blocks",
                                              "children": []
                                            },
                                            {
                                              "value": "i",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "inner_blocks = ''.join(inner_blocks)",
              "children": [
                {
                  "value": "inner_blocks = ''.join(inner_blocks)",
                  "children": [
                    {
                      "value": "inner_blocks",
                      "children": []
                    },
                    {
                      "value": "''.join(inner_blocks)",
                      "children": [
                        {
                          "value": "''.join",
                          "children": [
                            {
                              "value": "''",
                              "children": [
                                {
                                  "value": "'",
                                  "children": []
                                },
                                {
                                  "value": "'",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "join",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(inner_blocks)",
                          "children": [
                            {
                              "value": "inner_blocks",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Replacing the non-sorted libraries by the sorted ones and gathering all at the final_README file",
              "children": []
            },
            {
              "value": "blocks[0] = inner_blocks",
              "children": [
                {
                  "value": "blocks[0] = inner_blocks",
                  "children": [
                    {
                      "value": "blocks[0]",
                      "children": [
                        {
                          "value": "blocks",
                          "children": []
                        },
                        {
                          "value": "0",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "inner_blocks",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "final_README = table_of_contents + '- - -' + ''.join(blocks)",
              "children": [
                {
                  "value": "final_README = table_of_contents + '- - -' + ''.join(blocks)",
                  "children": [
                    {
                      "value": "final_README",
                      "children": []
                    },
                    {
                      "value": "table_of_contents + '- - -' + ''.join(blocks)",
                      "children": [
                        {
                          "value": "table_of_contents + '- - -'",
                          "children": [
                            {
                              "value": "table_of_contents",
                              "children": []
                            },
                            {
                              "value": "'- - -'",
                              "children": [
                                {
                                  "value": "'",
                                  "children": []
                                },
                                {
                                  "value": "- - -",
                                  "children": []
                                },
                                {
                                  "value": "'",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "''.join(blocks)",
                          "children": [
                            {
                              "value": "''.join",
                              "children": [
                                {
                                  "value": "''",
                                  "children": [
                                    {
                                      "value": "'",
                                      "children": []
                                    },
                                    {
                                      "value": "'",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "join",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(blocks)",
                              "children": [
                                {
                                  "value": "blocks",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "with open('README.md', 'w+') as sorted_file:\n        sorted_file.write(final_README)",
              "children": [
                {
                  "value": "open('README.md', 'w+') as sorted_file",
                  "children": [
                    {
                      "value": "open('README.md', 'w+') as sorted_file",
                      "children": [
                        {
                          "value": "open('README.md', 'w+') as sorted_file",
                          "children": [
                            {
                              "value": "open('README.md', 'w+')",
                              "children": [
                                {
                                  "value": "open",
                                  "children": []
                                },
                                {
                                  "value": "('README.md', 'w+')",
                                  "children": [
                                    {
                                      "value": "'README.md'",
                                      "children": [
                                        {
                                          "value": "'",
                                          "children": []
                                        },
                                        {
                                          "value": "README.md",
                                          "children": []
                                        },
                                        {
                                          "value": "'",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "'w+'",
                                      "children": [
                                        {
                                          "value": "'",
                                          "children": []
                                        },
                                        {
                                          "value": "w+",
                                          "children": []
                                        },
                                        {
                                          "value": "'",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "sorted_file",
                              "children": [
                                {
                                  "value": "sorted_file",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "sorted_file.write(final_README)",
                  "children": [
                    {
                      "value": "sorted_file.write(final_README)",
                      "children": [
                        {
                          "value": "sorted_file.write(final_README)",
                          "children": [
                            {
                              "value": "sorted_file.write",
                              "children": [
                                {
                                  "value": "sorted_file",
                                  "children": []
                                },
                                {
                                  "value": "write",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(final_README)",
                              "children": [
                                {
                                  "value": "final_README",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "def main():\n    # First, we load the current README into memory as an array of lines\n    with open('README.md', 'r') as read_me_file:\n        read_me = read_me_file.readlines()\n\n    # Then we cluster the lines together as blocks\n    # Each block represents a collection of lines that should be sorted\n    # This was done by assuming only links ([...](...)) are meant to be sorted\n    # Clustering is done by indentation\n    blocks = []\n    last_indent = None\n    for line in read_me:\n        s_line = line.lstrip()\n        indent = len(line) - len(s_line)\n\n        if any([s_line.startswith(s) for s in ['* [', '- [']]):\n            if indent == last_indent:\n                blocks[-1].append(line)\n            else:\n                blocks.append([line])\n            last_indent = indent\n        else:\n            blocks.append([line])\n            last_indent = None\n\n    with open('README.md', 'w+') as sorted_file:\n        # Then all of the blocks are sorted individually\n        blocks = [\n            ''.join(sorted(block, key=str.lower)) for block in blocks\n        ]\n        # And the result is written back to README.md\n        sorted_file.write(''.join(blocks))\n\n    # Then we call the sorting method\n    sort_blocks()",
      "children": [
        {
          "value": "main",
          "children": []
        },
        {
          "value": "()",
          "children": []
        },
        {
          "value": "# First, we load the current README into memory as an array of lines",
          "children": []
        },
        {
          "value": "with open('README.md', 'r') as read_me_file:\n        read_me = read_me_file.readlines()\n\n    # Then we cluster the lines together as blocks\n    # Each block represents a collection of lines that should be sorted\n    # This was done by assuming only links ([...](...)) are meant to be sorted\n    # Clustering is done by indentation\n    blocks = []\n    last_indent = None\n    for line in read_me:\n        s_line = line.lstrip()\n        indent = len(line) - len(s_line)\n\n        if any([s_line.startswith(s) for s in ['* [', '- [']]):\n            if indent == last_indent:\n                blocks[-1].append(line)\n            else:\n                blocks.append([line])\n            last_indent = indent\n        else:\n            blocks.append([line])\n            last_indent = None\n\n    with open('README.md', 'w+') as sorted_file:\n        # Then all of the blocks are sorted individually\n        blocks = [\n            ''.join(sorted(block, key=str.lower)) for block in blocks\n        ]\n        # And the result is written back to README.md\n        sorted_file.write(''.join(blocks))\n\n    # Then we call the sorting method\n    sort_blocks()",
          "children": [
            {
              "value": "with open('README.md', 'r') as read_me_file:\n        read_me = read_me_file.readlines()",
              "children": [
                {
                  "value": "open('README.md', 'r') as read_me_file",
                  "children": [
                    {
                      "value": "open('README.md', 'r') as read_me_file",
                      "children": [
                        {
                          "value": "open('README.md', 'r') as read_me_file",
                          "children": [
                            {
                              "value": "open('README.md', 'r')",
                              "children": [
                                {
                                  "value": "open",
                                  "children": []
                                },
                                {
                                  "value": "('README.md', 'r')",
                                  "children": [
                                    {
                                      "value": "'README.md'",
                                      "children": [
                                        {
                                          "value": "'",
                                          "children": []
                                        },
                                        {
                                          "value": "README.md",
                                          "children": []
                                        },
                                        {
                                          "value": "'",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "'r'",
                                      "children": [
                                        {
                                          "value": "'",
                                          "children": []
                                        },
                                        {
                                          "value": "r",
                                          "children": []
                                        },
                                        {
                                          "value": "'",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "read_me_file",
                              "children": [
                                {
                                  "value": "read_me_file",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "read_me = read_me_file.readlines()",
                  "children": [
                    {
                      "value": "read_me = read_me_file.readlines()",
                      "children": [
                        {
                          "value": "read_me = read_me_file.readlines()",
                          "children": [
                            {
                              "value": "read_me",
                              "children": []
                            },
                            {
                              "value": "read_me_file.readlines()",
                              "children": [
                                {
                                  "value": "read_me_file.readlines",
                                  "children": [
                                    {
                                      "value": "read_me_file",
                                      "children": []
                                    },
                                    {
                                      "value": "readlines",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "()",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Then we cluster the lines together as blocks",
              "children": []
            },
            {
              "value": "# Each block represents a collection of lines that should be sorted",
              "children": []
            },
            {
              "value": "# This was done by assuming only links ([...](...)) are meant to be sorted",
              "children": []
            },
            {
              "value": "# Clustering is done by indentation",
              "children": []
            },
            {
              "value": "blocks = []",
              "children": [
                {
                  "value": "blocks = []",
                  "children": [
                    {
                      "value": "blocks",
                      "children": []
                    },
                    {
                      "value": "[]",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "last_indent = None",
              "children": [
                {
                  "value": "last_indent = None",
                  "children": [
                    {
                      "value": "last_indent",
                      "children": []
                    },
                    {
                      "value": "None",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "for line in read_me:\n        s_line = line.lstrip()\n        indent = len(line) - len(s_line)\n\n        if any([s_line.startswith(s) for s in ['* [', '- [']]):\n            if indent == last_indent:\n                blocks[-1].append(line)\n            else:\n                blocks.append([line])\n            last_indent = indent\n        else:\n            blocks.append([line])\n            last_indent = None",
              "children": [
                {
                  "value": "line",
                  "children": []
                },
                {
                  "value": "read_me",
                  "children": []
                },
                {
                  "value": "s_line = line.lstrip()\n        indent = len(line) - len(s_line)\n\n        if any([s_line.startswith(s) for s in ['* [', '- [']]):\n            if indent == last_indent:\n                blocks[-1].append(line)\n            else:\n                blocks.append([line])\n            last_indent = indent\n        else:\n            blocks.append([line])\n            last_indent = None",
                  "children": [
                    {
                      "value": "s_line = line.lstrip()",
                      "children": [
                        {
                          "value": "s_line = line.lstrip()",
                          "children": [
                            {
                              "value": "s_line",
                              "children": []
                            },
                            {
                              "value": "line.lstrip()",
                              "children": [
                                {
                                  "value": "line.lstrip",
                                  "children": [
                                    {
                                      "value": "line",
                                      "children": []
                                    },
                                    {
                                      "value": "lstrip",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "()",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "indent = len(line) - len(s_line)",
                      "children": [
                        {
                          "value": "indent = len(line) - len(s_line)",
                          "children": [
                            {
                              "value": "indent",
                              "children": []
                            },
                            {
                              "value": "len(line) - len(s_line)",
                              "children": [
                                {
                                  "value": "len(line)",
                                  "children": [
                                    {
                                      "value": "len",
                                      "children": []
                                    },
                                    {
                                      "value": "(line)",
                                      "children": [
                                        {
                                          "value": "line",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "len(s_line)",
                                  "children": [
                                    {
                                      "value": "len",
                                      "children": []
                                    },
                                    {
                                      "value": "(s_line)",
                                      "children": [
                                        {
                                          "value": "s_line",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "if any([s_line.startswith(s) for s in ['* [', '- [']]):\n            if indent == last_indent:\n                blocks[-1].append(line)\n            else:\n                blocks.append([line])\n            last_indent = indent\n        else:\n            blocks.append([line])\n            last_indent = None",
                      "children": [
                        {
                          "value": "any([s_line.startswith(s) for s in ['* [', '- [']])",
                          "children": [
                            {
                              "value": "any",
                              "children": []
                            },
                            {
                              "value": "([s_line.startswith(s) for s in ['* [', '- [']])",
                              "children": [
                                {
                                  "value": "[s_line.startswith(s) for s in ['* [', '- [']]",
                                  "children": [
                                    {
                                      "value": "s_line.startswith(s)",
                                      "children": [
                                        {
                                          "value": "s_line.startswith",
                                          "children": [
                                            {
                                              "value": "s_line",
                                              "children": []
                                            },
                                            {
                                              "value": "startswith",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(s)",
                                          "children": [
                                            {
                                              "value": "s",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "for s in ['* [', '- [']",
                                      "children": [
                                        {
                                          "value": "s",
                                          "children": []
                                        },
                                        {
                                          "value": "['* [', '- [']",
                                          "children": [
                                            {
                                              "value": "'* ['",
                                              "children": [
                                                {
                                                  "value": "'",
                                                  "children": []
                                                },
                                                {
                                                  "value": "* [",
                                                  "children": []
                                                },
                                                {
                                                  "value": "'",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "'- ['",
                                              "children": [
                                                {
                                                  "value": "'",
                                                  "children": []
                                                },
                                                {
                                                  "value": "- [",
                                                  "children": []
                                                },
                                                {
                                                  "value": "'",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "if indent == last_indent:\n                blocks[-1].append(line)\n            else:\n                blocks.append([line])\n            last_indent = indent",
                          "children": [
                            {
                              "value": "if indent == last_indent:\n                blocks[-1].append(line)\n            else:\n                blocks.append([line])",
                              "children": [
                                {
                                  "value": "indent == last_indent",
                                  "children": [
                                    {
                                      "value": "indent",
                                      "children": []
                                    },
                                    {
                                      "value": "last_indent",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "blocks[-1].append(line)",
                                  "children": [
                                    {
                                      "value": "blocks[-1].append(line)",
                                      "children": [
                                        {
                                          "value": "blocks[-1].append(line)",
                                          "children": [
                                            {
                                              "value": "blocks[-1].append",
                                              "children": [
                                                {
                                                  "value": "blocks[-1]",
                                                  "children": [
                                                    {
                                                      "value": "blocks",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "-1",
                                                      "children": [
                                                        {
                                                          "value": "1",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "append",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "(line)",
                                              "children": [
                                                {
                                                  "value": "line",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "else:\n                blocks.append([line])",
                                  "children": [
                                    {
                                      "value": "blocks.append([line])",
                                      "children": [
                                        {
                                          "value": "blocks.append([line])",
                                          "children": [
                                            {
                                              "value": "blocks.append([line])",
                                              "children": [
                                                {
                                                  "value": "blocks.append",
                                                  "children": [
                                                    {
                                                      "value": "blocks",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "append",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "([line])",
                                                  "children": [
                                                    {
                                                      "value": "[line]",
                                                      "children": [
                                                        {
                                                          "value": "line",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "last_indent = indent",
                              "children": [
                                {
                                  "value": "last_indent = indent",
                                  "children": [
                                    {
                                      "value": "last_indent",
                                      "children": []
                                    },
                                    {
                                      "value": "indent",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "else:\n            blocks.append([line])\n            last_indent = None",
                          "children": [
                            {
                              "value": "blocks.append([line])\n            last_indent = None",
                              "children": [
                                {
                                  "value": "blocks.append([line])",
                                  "children": [
                                    {
                                      "value": "blocks.append([line])",
                                      "children": [
                                        {
                                          "value": "blocks.append",
                                          "children": [
                                            {
                                              "value": "blocks",
                                              "children": []
                                            },
                                            {
                                              "value": "append",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "([line])",
                                          "children": [
                                            {
                                              "value": "[line]",
                                              "children": [
                                                {
                                                  "value": "line",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "last_indent = None",
                                  "children": [
                                    {
                                      "value": "last_indent = None",
                                      "children": [
                                        {
                                          "value": "last_indent",
                                          "children": []
                                        },
                                        {
                                          "value": "None",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "with open('README.md', 'w+') as sorted_file:\n        # Then all of the blocks are sorted individually\n        blocks = [\n            ''.join(sorted(block, key=str.lower)) for block in blocks\n        ]\n        # And the result is written back to README.md\n        sorted_file.write(''.join(blocks))",
              "children": [
                {
                  "value": "open('README.md', 'w+') as sorted_file",
                  "children": [
                    {
                      "value": "open('README.md', 'w+') as sorted_file",
                      "children": [
                        {
                          "value": "open('README.md', 'w+') as sorted_file",
                          "children": [
                            {
                              "value": "open('README.md', 'w+')",
                              "children": [
                                {
                                  "value": "open",
                                  "children": []
                                },
                                {
                                  "value": "('README.md', 'w+')",
                                  "children": [
                                    {
                                      "value": "'README.md'",
                                      "children": [
                                        {
                                          "value": "'",
                                          "children": []
                                        },
                                        {
                                          "value": "README.md",
                                          "children": []
                                        },
                                        {
                                          "value": "'",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "'w+'",
                                      "children": [
                                        {
                                          "value": "'",
                                          "children": []
                                        },
                                        {
                                          "value": "w+",
                                          "children": []
                                        },
                                        {
                                          "value": "'",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "sorted_file",
                              "children": [
                                {
                                  "value": "sorted_file",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "# Then all of the blocks are sorted individually",
                  "children": []
                },
                {
                  "value": "blocks = [\n            ''.join(sorted(block, key=str.lower)) for block in blocks\n        ]\n        # And the result is written back to README.md\n        sorted_file.write(''.join(blocks))",
                  "children": [
                    {
                      "value": "blocks = [\n            ''.join(sorted(block, key=str.lower)) for block in blocks\n        ]",
                      "children": [
                        {
                          "value": "blocks = [\n            ''.join(sorted(block, key=str.lower)) for block in blocks\n        ]",
                          "children": [
                            {
                              "value": "blocks",
                              "children": []
                            },
                            {
                              "value": "[\n            ''.join(sorted(block, key=str.lower)) for block in blocks\n        ]",
                              "children": [
                                {
                                  "value": "''.join(sorted(block, key=str.lower))",
                                  "children": [
                                    {
                                      "value": "''.join",
                                      "children": [
                                        {
                                          "value": "''",
                                          "children": [
                                            {
                                              "value": "'",
                                              "children": []
                                            },
                                            {
                                              "value": "'",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "join",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(sorted(block, key=str.lower))",
                                      "children": [
                                        {
                                          "value": "sorted(block, key=str.lower)",
                                          "children": [
                                            {
                                              "value": "sorted",
                                              "children": []
                                            },
                                            {
                                              "value": "(block, key=str.lower)",
                                              "children": [
                                                {
                                                  "value": "block",
                                                  "children": []
                                                },
                                                {
                                                  "value": "key=str.lower",
                                                  "children": [
                                                    {
                                                      "value": "key",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "str.lower",
                                                      "children": [
                                                        {
                                                          "value": "str",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "lower",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "for block in blocks",
                                  "children": [
                                    {
                                      "value": "block",
                                      "children": []
                                    },
                                    {
                                      "value": "blocks",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "# And the result is written back to README.md",
                      "children": []
                    },
                    {
                      "value": "sorted_file.write(''.join(blocks))",
                      "children": [
                        {
                          "value": "sorted_file.write(''.join(blocks))",
                          "children": [
                            {
                              "value": "sorted_file.write",
                              "children": [
                                {
                                  "value": "sorted_file",
                                  "children": []
                                },
                                {
                                  "value": "write",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(''.join(blocks))",
                              "children": [
                                {
                                  "value": "''.join(blocks)",
                                  "children": [
                                    {
                                      "value": "''.join",
                                      "children": [
                                        {
                                          "value": "''",
                                          "children": [
                                            {
                                              "value": "'",
                                              "children": []
                                            },
                                            {
                                              "value": "'",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "join",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(blocks)",
                                      "children": [
                                        {
                                          "value": "blocks",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Then we call the sorting method",
              "children": []
            },
            {
              "value": "sort_blocks()",
              "children": [
                {
                  "value": "sort_blocks()",
                  "children": [
                    {
                      "value": "sort_blocks",
                      "children": []
                    },
                    {
                      "value": "()",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "if __name__ == \"__main__\":\n    main()",
      "children": [
        {
          "value": "__name__ == \"__main__\"",
          "children": [
            {
              "value": "__name__",
              "children": []
            },
            {
              "value": "\"__main__\"",
              "children": [
                {
                  "value": "\"",
                  "children": []
                },
                {
                  "value": "__main__",
                  "children": []
                },
                {
                  "value": "\"",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "main()",
          "children": [
            {
              "value": "main()",
              "children": [
                {
                  "value": "main()",
                  "children": [
                    {
                      "value": "main",
                      "children": []
                    },
                    {
                      "value": "()",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}