{
  "value": "import asyncio\n\nimport pytest\n\nfrom backend.util.retry import conn_retry\n\n\ndef test_conn_retry_sync_function():\n    retry_count = 0\n\n    @conn_retry(\"Test\", \"Test function\", max_retry=2, max_wait=0.1, min_wait=0.1)\n    def test_function():\n        nonlocal retry_count\n        retry_count -= 1\n        if retry_count > 0:\n            raise ValueError(\"Test error\")\n        return \"Success\"\n\n    retry_count = 2\n    res = test_function()\n    assert res == \"Success\"\n\n    retry_count = 100\n    with pytest.raises(ValueError) as e:\n        test_function()\n        assert str(e.value) == \"Test error\"\n\n\n@pytest.mark.asyncio\nasync def test_conn_retry_async_function():\n    retry_count = 0\n\n    @conn_retry(\"Test\", \"Test function\", max_retry=2, max_wait=0.1, min_wait=0.1)\n    async def test_function():\n        nonlocal retry_count\n        await asyncio.sleep(1)\n        retry_count -= 1\n        if retry_count > 0:\n            raise ValueError(\"Test error\")\n        return \"Success\"\n\n    retry_count = 2\n    res = await test_function()\n    assert res == \"Success\"\n\n    retry_count = 100\n    with pytest.raises(ValueError) as e:\n        await test_function()\n        assert str(e.value) == \"Test error\"",
  "children": [
    {
      "value": "import asyncio",
      "children": [
        {
          "value": "asyncio",
          "children": [
            {
              "value": "asyncio",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "import pytest",
      "children": [
        {
          "value": "pytest",
          "children": [
            {
              "value": "pytest",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.util.retry import conn_retry",
      "children": [
        {
          "value": "backend.util.retry",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "util",
              "children": []
            },
            {
              "value": "retry",
              "children": []
            }
          ]
        },
        {
          "value": "conn_retry",
          "children": [
            {
              "value": "conn_retry",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "def test_conn_retry_sync_function():\n    retry_count = 0\n\n    @conn_retry(\"Test\", \"Test function\", max_retry=2, max_wait=0.1, min_wait=0.1)\n    def test_function():\n        nonlocal retry_count\n        retry_count -= 1\n        if retry_count > 0:\n            raise ValueError(\"Test error\")\n        return \"Success\"\n\n    retry_count = 2\n    res = test_function()\n    assert res == \"Success\"\n\n    retry_count = 100\n    with pytest.raises(ValueError) as e:\n        test_function()\n        assert str(e.value) == \"Test error\"",
      "children": [
        {
          "value": "test_conn_retry_sync_function",
          "children": []
        },
        {
          "value": "()",
          "children": []
        },
        {
          "value": "retry_count = 0\n\n    @conn_retry(\"Test\", \"Test function\", max_retry=2, max_wait=0.1, min_wait=0.1)\n    def test_function():\n        nonlocal retry_count\n        retry_count -= 1\n        if retry_count > 0:\n            raise ValueError(\"Test error\")\n        return \"Success\"\n\n    retry_count = 2\n    res = test_function()\n    assert res == \"Success\"\n\n    retry_count = 100\n    with pytest.raises(ValueError) as e:\n        test_function()\n        assert str(e.value) == \"Test error\"",
          "children": [
            {
              "value": "retry_count = 0",
              "children": [
                {
                  "value": "retry_count = 0",
                  "children": [
                    {
                      "value": "retry_count",
                      "children": []
                    },
                    {
                      "value": "0",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "@conn_retry(\"Test\", \"Test function\", max_retry=2, max_wait=0.1, min_wait=0.1)\n    def test_function():\n        nonlocal retry_count\n        retry_count -= 1\n        if retry_count > 0:\n            raise ValueError(\"Test error\")\n        return \"Success\"",
              "children": [
                {
                  "value": "@conn_retry(\"Test\", \"Test function\", max_retry=2, max_wait=0.1, min_wait=0.1)",
                  "children": [
                    {
                      "value": "conn_retry(\"Test\", \"Test function\", max_retry=2, max_wait=0.1, min_wait=0.1)",
                      "children": [
                        {
                          "value": "conn_retry",
                          "children": []
                        },
                        {
                          "value": "(\"Test\", \"Test function\", max_retry=2, max_wait=0.1, min_wait=0.1)",
                          "children": [
                            {
                              "value": "\"Test\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "Test",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "\"Test function\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "Test function",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "max_retry=2",
                              "children": [
                                {
                                  "value": "max_retry",
                                  "children": []
                                },
                                {
                                  "value": "2",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "max_wait=0.1",
                              "children": [
                                {
                                  "value": "max_wait",
                                  "children": []
                                },
                                {
                                  "value": "0.1",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "min_wait=0.1",
                              "children": [
                                {
                                  "value": "min_wait",
                                  "children": []
                                },
                                {
                                  "value": "0.1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "def test_function():\n        nonlocal retry_count\n        retry_count -= 1\n        if retry_count > 0:\n            raise ValueError(\"Test error\")\n        return \"Success\"",
                  "children": [
                    {
                      "value": "test_function",
                      "children": []
                    },
                    {
                      "value": "()",
                      "children": []
                    },
                    {
                      "value": "nonlocal retry_count\n        retry_count -= 1\n        if retry_count > 0:\n            raise ValueError(\"Test error\")\n        return \"Success\"",
                      "children": [
                        {
                          "value": "nonlocal retry_count",
                          "children": [
                            {
                              "value": "retry_count",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "retry_count -= 1",
                          "children": [
                            {
                              "value": "retry_count -= 1",
                              "children": [
                                {
                                  "value": "retry_count",
                                  "children": []
                                },
                                {
                                  "value": "1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "if retry_count > 0:\n            raise ValueError(\"Test error\")",
                          "children": [
                            {
                              "value": "retry_count > 0",
                              "children": [
                                {
                                  "value": "retry_count",
                                  "children": []
                                },
                                {
                                  "value": "0",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "raise ValueError(\"Test error\")",
                              "children": [
                                {
                                  "value": "raise ValueError(\"Test error\")",
                                  "children": [
                                    {
                                      "value": "ValueError(\"Test error\")",
                                      "children": [
                                        {
                                          "value": "ValueError",
                                          "children": []
                                        },
                                        {
                                          "value": "(\"Test error\")",
                                          "children": [
                                            {
                                              "value": "\"Test error\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "Test error",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "return \"Success\"",
                          "children": [
                            {
                              "value": "\"Success\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "Success",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "retry_count = 2",
              "children": [
                {
                  "value": "retry_count = 2",
                  "children": [
                    {
                      "value": "retry_count",
                      "children": []
                    },
                    {
                      "value": "2",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "res = test_function()",
              "children": [
                {
                  "value": "res = test_function()",
                  "children": [
                    {
                      "value": "res",
                      "children": []
                    },
                    {
                      "value": "test_function()",
                      "children": [
                        {
                          "value": "test_function",
                          "children": []
                        },
                        {
                          "value": "()",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "assert res == \"Success\"",
              "children": [
                {
                  "value": "res == \"Success\"",
                  "children": [
                    {
                      "value": "res",
                      "children": []
                    },
                    {
                      "value": "\"Success\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "Success",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "retry_count = 100",
              "children": [
                {
                  "value": "retry_count = 100",
                  "children": [
                    {
                      "value": "retry_count",
                      "children": []
                    },
                    {
                      "value": "100",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "with pytest.raises(ValueError) as e:\n        test_function()\n        assert str(e.value) == \"Test error\"",
              "children": [
                {
                  "value": "pytest.raises(ValueError) as e",
                  "children": [
                    {
                      "value": "pytest.raises(ValueError) as e",
                      "children": [
                        {
                          "value": "pytest.raises(ValueError) as e",
                          "children": [
                            {
                              "value": "pytest.raises(ValueError)",
                              "children": [
                                {
                                  "value": "pytest.raises",
                                  "children": [
                                    {
                                      "value": "pytest",
                                      "children": []
                                    },
                                    {
                                      "value": "raises",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(ValueError)",
                                  "children": [
                                    {
                                      "value": "ValueError",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "e",
                              "children": [
                                {
                                  "value": "e",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "test_function()\n        assert str(e.value) == \"Test error\"",
                  "children": [
                    {
                      "value": "test_function()",
                      "children": [
                        {
                          "value": "test_function()",
                          "children": [
                            {
                              "value": "test_function",
                              "children": []
                            },
                            {
                              "value": "()",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "assert str(e.value) == \"Test error\"",
                      "children": [
                        {
                          "value": "str(e.value) == \"Test error\"",
                          "children": [
                            {
                              "value": "str(e.value)",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                },
                                {
                                  "value": "(e.value)",
                                  "children": [
                                    {
                                      "value": "e.value",
                                      "children": [
                                        {
                                          "value": "e",
                                          "children": []
                                        },
                                        {
                                          "value": "value",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "\"Test error\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "Test error",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "@pytest.mark.asyncio\nasync def test_conn_retry_async_function():\n    retry_count = 0\n\n    @conn_retry(\"Test\", \"Test function\", max_retry=2, max_wait=0.1, min_wait=0.1)\n    async def test_function():\n        nonlocal retry_count\n        await asyncio.sleep(1)\n        retry_count -= 1\n        if retry_count > 0:\n            raise ValueError(\"Test error\")\n        return \"Success\"\n\n    retry_count = 2\n    res = await test_function()\n    assert res == \"Success\"\n\n    retry_count = 100\n    with pytest.raises(ValueError) as e:\n        await test_function()\n        assert str(e.value) == \"Test error\"",
      "children": [
        {
          "value": "@pytest.mark.asyncio",
          "children": [
            {
              "value": "pytest.mark.asyncio",
              "children": [
                {
                  "value": "pytest.mark",
                  "children": [
                    {
                      "value": "pytest",
                      "children": []
                    },
                    {
                      "value": "mark",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "asyncio",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "async def test_conn_retry_async_function():\n    retry_count = 0\n\n    @conn_retry(\"Test\", \"Test function\", max_retry=2, max_wait=0.1, min_wait=0.1)\n    async def test_function():\n        nonlocal retry_count\n        await asyncio.sleep(1)\n        retry_count -= 1\n        if retry_count > 0:\n            raise ValueError(\"Test error\")\n        return \"Success\"\n\n    retry_count = 2\n    res = await test_function()\n    assert res == \"Success\"\n\n    retry_count = 100\n    with pytest.raises(ValueError) as e:\n        await test_function()\n        assert str(e.value) == \"Test error\"",
          "children": [
            {
              "value": "test_conn_retry_async_function",
              "children": []
            },
            {
              "value": "()",
              "children": []
            },
            {
              "value": "retry_count = 0\n\n    @conn_retry(\"Test\", \"Test function\", max_retry=2, max_wait=0.1, min_wait=0.1)\n    async def test_function():\n        nonlocal retry_count\n        await asyncio.sleep(1)\n        retry_count -= 1\n        if retry_count > 0:\n            raise ValueError(\"Test error\")\n        return \"Success\"\n\n    retry_count = 2\n    res = await test_function()\n    assert res == \"Success\"\n\n    retry_count = 100\n    with pytest.raises(ValueError) as e:\n        await test_function()\n        assert str(e.value) == \"Test error\"",
              "children": [
                {
                  "value": "retry_count = 0",
                  "children": [
                    {
                      "value": "retry_count = 0",
                      "children": [
                        {
                          "value": "retry_count",
                          "children": []
                        },
                        {
                          "value": "0",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "@conn_retry(\"Test\", \"Test function\", max_retry=2, max_wait=0.1, min_wait=0.1)\n    async def test_function():\n        nonlocal retry_count\n        await asyncio.sleep(1)\n        retry_count -= 1\n        if retry_count > 0:\n            raise ValueError(\"Test error\")\n        return \"Success\"",
                  "children": [
                    {
                      "value": "@conn_retry(\"Test\", \"Test function\", max_retry=2, max_wait=0.1, min_wait=0.1)",
                      "children": [
                        {
                          "value": "conn_retry(\"Test\", \"Test function\", max_retry=2, max_wait=0.1, min_wait=0.1)",
                          "children": [
                            {
                              "value": "conn_retry",
                              "children": []
                            },
                            {
                              "value": "(\"Test\", \"Test function\", max_retry=2, max_wait=0.1, min_wait=0.1)",
                              "children": [
                                {
                                  "value": "\"Test\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "Test",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "\"Test function\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "Test function",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "max_retry=2",
                                  "children": [
                                    {
                                      "value": "max_retry",
                                      "children": []
                                    },
                                    {
                                      "value": "2",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "max_wait=0.1",
                                  "children": [
                                    {
                                      "value": "max_wait",
                                      "children": []
                                    },
                                    {
                                      "value": "0.1",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "min_wait=0.1",
                                  "children": [
                                    {
                                      "value": "min_wait",
                                      "children": []
                                    },
                                    {
                                      "value": "0.1",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "async def test_function():\n        nonlocal retry_count\n        await asyncio.sleep(1)\n        retry_count -= 1\n        if retry_count > 0:\n            raise ValueError(\"Test error\")\n        return \"Success\"",
                      "children": [
                        {
                          "value": "test_function",
                          "children": []
                        },
                        {
                          "value": "()",
                          "children": []
                        },
                        {
                          "value": "nonlocal retry_count\n        await asyncio.sleep(1)\n        retry_count -= 1\n        if retry_count > 0:\n            raise ValueError(\"Test error\")\n        return \"Success\"",
                          "children": [
                            {
                              "value": "nonlocal retry_count",
                              "children": [
                                {
                                  "value": "retry_count",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "await asyncio.sleep(1)",
                              "children": [
                                {
                                  "value": "await asyncio.sleep(1)",
                                  "children": [
                                    {
                                      "value": "asyncio.sleep(1)",
                                      "children": [
                                        {
                                          "value": "asyncio.sleep",
                                          "children": [
                                            {
                                              "value": "asyncio",
                                              "children": []
                                            },
                                            {
                                              "value": "sleep",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(1)",
                                          "children": [
                                            {
                                              "value": "1",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "retry_count -= 1",
                              "children": [
                                {
                                  "value": "retry_count -= 1",
                                  "children": [
                                    {
                                      "value": "retry_count",
                                      "children": []
                                    },
                                    {
                                      "value": "1",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "if retry_count > 0:\n            raise ValueError(\"Test error\")",
                              "children": [
                                {
                                  "value": "retry_count > 0",
                                  "children": [
                                    {
                                      "value": "retry_count",
                                      "children": []
                                    },
                                    {
                                      "value": "0",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "raise ValueError(\"Test error\")",
                                  "children": [
                                    {
                                      "value": "raise ValueError(\"Test error\")",
                                      "children": [
                                        {
                                          "value": "ValueError(\"Test error\")",
                                          "children": [
                                            {
                                              "value": "ValueError",
                                              "children": []
                                            },
                                            {
                                              "value": "(\"Test error\")",
                                              "children": [
                                                {
                                                  "value": "\"Test error\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "Test error",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "return \"Success\"",
                              "children": [
                                {
                                  "value": "\"Success\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "Success",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "retry_count = 2",
                  "children": [
                    {
                      "value": "retry_count = 2",
                      "children": [
                        {
                          "value": "retry_count",
                          "children": []
                        },
                        {
                          "value": "2",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "res = await test_function()",
                  "children": [
                    {
                      "value": "res = await test_function()",
                      "children": [
                        {
                          "value": "res",
                          "children": []
                        },
                        {
                          "value": "await test_function()",
                          "children": [
                            {
                              "value": "test_function()",
                              "children": [
                                {
                                  "value": "test_function",
                                  "children": []
                                },
                                {
                                  "value": "()",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "assert res == \"Success\"",
                  "children": [
                    {
                      "value": "res == \"Success\"",
                      "children": [
                        {
                          "value": "res",
                          "children": []
                        },
                        {
                          "value": "\"Success\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "Success",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "retry_count = 100",
                  "children": [
                    {
                      "value": "retry_count = 100",
                      "children": [
                        {
                          "value": "retry_count",
                          "children": []
                        },
                        {
                          "value": "100",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "with pytest.raises(ValueError) as e:\n        await test_function()\n        assert str(e.value) == \"Test error\"",
                  "children": [
                    {
                      "value": "pytest.raises(ValueError) as e",
                      "children": [
                        {
                          "value": "pytest.raises(ValueError) as e",
                          "children": [
                            {
                              "value": "pytest.raises(ValueError) as e",
                              "children": [
                                {
                                  "value": "pytest.raises(ValueError)",
                                  "children": [
                                    {
                                      "value": "pytest.raises",
                                      "children": [
                                        {
                                          "value": "pytest",
                                          "children": []
                                        },
                                        {
                                          "value": "raises",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(ValueError)",
                                      "children": [
                                        {
                                          "value": "ValueError",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "e",
                                  "children": [
                                    {
                                      "value": "e",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "await test_function()\n        assert str(e.value) == \"Test error\"",
                      "children": [
                        {
                          "value": "await test_function()",
                          "children": [
                            {
                              "value": "await test_function()",
                              "children": [
                                {
                                  "value": "test_function()",
                                  "children": [
                                    {
                                      "value": "test_function",
                                      "children": []
                                    },
                                    {
                                      "value": "()",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "assert str(e.value) == \"Test error\"",
                          "children": [
                            {
                              "value": "str(e.value) == \"Test error\"",
                              "children": [
                                {
                                  "value": "str(e.value)",
                                  "children": [
                                    {
                                      "value": "str",
                                      "children": []
                                    },
                                    {
                                      "value": "(e.value)",
                                      "children": [
                                        {
                                          "value": "e.value",
                                          "children": [
                                            {
                                              "value": "e",
                                              "children": []
                                            },
                                            {
                                              "value": "value",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "\"Test error\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "Test error",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}