{
  "value": "from urllib.parse import quote\n\nimport requests\n\nfrom backend.blocks.jina._auth import (\n    JinaCredentials,\n    JinaCredentialsField,\n    JinaCredentialsInput,\n)\nfrom backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import SchemaField\n\n\nclass FactCheckerBlock(Block):\n    class Input(BlockSchema):\n        statement: str = SchemaField(\n            description=\"The statement to check for factuality\"\n        )\n        credentials: JinaCredentialsInput = JinaCredentialsField()\n\n    class Output(BlockSchema):\n        factuality: float = SchemaField(\n            description=\"The factuality score of the statement\"\n        )\n        result: bool = SchemaField(description=\"The result of the factuality check\")\n        reason: str = SchemaField(description=\"The reason for the factuality result\")\n        error: str = SchemaField(description=\"Error message if the check fails\")\n\n    def __init__(self):\n        super().__init__(\n            id=\"d38b6c5e-9968-4271-8423-6cfe60d6e7e6\",\n            description=\"This block checks the factuality of a given statement using Jina AI's Grounding API.\",\n            categories={BlockCategory.SEARCH},\n            input_schema=FactCheckerBlock.Input,\n            output_schema=FactCheckerBlock.Output,\n        )\n\n    def run(\n        self, input_data: Input, *, credentials: JinaCredentials, **kwargs\n    ) -> BlockOutput:\n        encoded_statement = quote(input_data.statement)\n        url = f\"https://g.jina.ai/{encoded_statement}\"\n\n        headers = {\n            \"Accept\": \"application/json\",\n            \"Authorization\": f\"Bearer {credentials.api_key.get_secret_value()}\",\n        }\n\n        response = requests.get(url, headers=headers)\n        response.raise_for_status()\n        data = response.json()\n\n        if \"data\" in data:\n            data = data[\"data\"]\n            yield \"factuality\", data[\"factuality\"]\n            yield \"result\", data[\"result\"]\n            yield \"reason\", data[\"reason\"]\n        else:\n            raise RuntimeError(f\"Expected 'data' key not found in response: {data}\")",
  "children": [
    {
      "value": "from urllib.parse import quote",
      "children": [
        {
          "value": "urllib.parse",
          "children": [
            {
              "value": "urllib",
              "children": []
            },
            {
              "value": "parse",
              "children": []
            }
          ]
        },
        {
          "value": "quote",
          "children": [
            {
              "value": "quote",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "import requests",
      "children": [
        {
          "value": "requests",
          "children": [
            {
              "value": "requests",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.blocks.jina._auth import (\n    JinaCredentials,\n    JinaCredentialsField,\n    JinaCredentialsInput,\n)",
      "children": [
        {
          "value": "backend.blocks.jina._auth",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "blocks",
              "children": []
            },
            {
              "value": "jina",
              "children": []
            },
            {
              "value": "_auth",
              "children": []
            }
          ]
        },
        {
          "value": "JinaCredentials",
          "children": [
            {
              "value": "JinaCredentials",
              "children": []
            }
          ]
        },
        {
          "value": "JinaCredentialsField",
          "children": [
            {
              "value": "JinaCredentialsField",
              "children": []
            }
          ]
        },
        {
          "value": "JinaCredentialsInput",
          "children": [
            {
              "value": "JinaCredentialsInput",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema",
      "children": [
        {
          "value": "backend.data.block",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "data",
              "children": []
            },
            {
              "value": "block",
              "children": []
            }
          ]
        },
        {
          "value": "Block",
          "children": [
            {
              "value": "Block",
              "children": []
            }
          ]
        },
        {
          "value": "BlockCategory",
          "children": [
            {
              "value": "BlockCategory",
              "children": []
            }
          ]
        },
        {
          "value": "BlockOutput",
          "children": [
            {
              "value": "BlockOutput",
              "children": []
            }
          ]
        },
        {
          "value": "BlockSchema",
          "children": [
            {
              "value": "BlockSchema",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.data.model import SchemaField",
      "children": [
        {
          "value": "backend.data.model",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "data",
              "children": []
            },
            {
              "value": "model",
              "children": []
            }
          ]
        },
        {
          "value": "SchemaField",
          "children": [
            {
              "value": "SchemaField",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "class FactCheckerBlock(Block):\n    class Input(BlockSchema):\n        statement: str = SchemaField(\n            description=\"The statement to check for factuality\"\n        )\n        credentials: JinaCredentialsInput = JinaCredentialsField()\n\n    class Output(BlockSchema):\n        factuality: float = SchemaField(\n            description=\"The factuality score of the statement\"\n        )\n        result: bool = SchemaField(description=\"The result of the factuality check\")\n        reason: str = SchemaField(description=\"The reason for the factuality result\")\n        error: str = SchemaField(description=\"Error message if the check fails\")\n\n    def __init__(self):\n        super().__init__(\n            id=\"d38b6c5e-9968-4271-8423-6cfe60d6e7e6\",\n            description=\"This block checks the factuality of a given statement using Jina AI's Grounding API.\",\n            categories={BlockCategory.SEARCH},\n            input_schema=FactCheckerBlock.Input,\n            output_schema=FactCheckerBlock.Output,\n        )\n\n    def run(\n        self, input_data: Input, *, credentials: JinaCredentials, **kwargs\n    ) -> BlockOutput:\n        encoded_statement = quote(input_data.statement)\n        url = f\"https://g.jina.ai/{encoded_statement}\"\n\n        headers = {\n            \"Accept\": \"application/json\",\n            \"Authorization\": f\"Bearer {credentials.api_key.get_secret_value()}\",\n        }\n\n        response = requests.get(url, headers=headers)\n        response.raise_for_status()\n        data = response.json()\n\n        if \"data\" in data:\n            data = data[\"data\"]\n            yield \"factuality\", data[\"factuality\"]\n            yield \"result\", data[\"result\"]\n            yield \"reason\", data[\"reason\"]\n        else:\n            raise RuntimeError(f\"Expected 'data' key not found in response: {data}\")",
      "children": [
        {
          "value": "FactCheckerBlock",
          "children": []
        },
        {
          "value": "(Block)",
          "children": [
            {
              "value": "Block",
              "children": []
            }
          ]
        },
        {
          "value": "class Input(BlockSchema):\n        statement: str = SchemaField(\n            description=\"The statement to check for factuality\"\n        )\n        credentials: JinaCredentialsInput = JinaCredentialsField()\n\n    class Output(BlockSchema):\n        factuality: float = SchemaField(\n            description=\"The factuality score of the statement\"\n        )\n        result: bool = SchemaField(description=\"The result of the factuality check\")\n        reason: str = SchemaField(description=\"The reason for the factuality result\")\n        error: str = SchemaField(description=\"Error message if the check fails\")\n\n    def __init__(self):\n        super().__init__(\n            id=\"d38b6c5e-9968-4271-8423-6cfe60d6e7e6\",\n            description=\"This block checks the factuality of a given statement using Jina AI's Grounding API.\",\n            categories={BlockCategory.SEARCH},\n            input_schema=FactCheckerBlock.Input,\n            output_schema=FactCheckerBlock.Output,\n        )\n\n    def run(\n        self, input_data: Input, *, credentials: JinaCredentials, **kwargs\n    ) -> BlockOutput:\n        encoded_statement = quote(input_data.statement)\n        url = f\"https://g.jina.ai/{encoded_statement}\"\n\n        headers = {\n            \"Accept\": \"application/json\",\n            \"Authorization\": f\"Bearer {credentials.api_key.get_secret_value()}\",\n        }\n\n        response = requests.get(url, headers=headers)\n        response.raise_for_status()\n        data = response.json()\n\n        if \"data\" in data:\n            data = data[\"data\"]\n            yield \"factuality\", data[\"factuality\"]\n            yield \"result\", data[\"result\"]\n            yield \"reason\", data[\"reason\"]\n        else:\n            raise RuntimeError(f\"Expected 'data' key not found in response: {data}\")",
          "children": [
            {
              "value": "class Input(BlockSchema):\n        statement: str = SchemaField(\n            description=\"The statement to check for factuality\"\n        )\n        credentials: JinaCredentialsInput = JinaCredentialsField()",
              "children": [
                {
                  "value": "Input",
                  "children": []
                },
                {
                  "value": "(BlockSchema)",
                  "children": [
                    {
                      "value": "BlockSchema",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "statement: str = SchemaField(\n            description=\"The statement to check for factuality\"\n        )\n        credentials: JinaCredentialsInput = JinaCredentialsField()",
                  "children": [
                    {
                      "value": "statement: str = SchemaField(\n            description=\"The statement to check for factuality\"\n        )",
                      "children": [
                        {
                          "value": "statement: str = SchemaField(\n            description=\"The statement to check for factuality\"\n        )",
                          "children": [
                            {
                              "value": "statement",
                              "children": []
                            },
                            {
                              "value": "str",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            description=\"The statement to check for factuality\"\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=\"The statement to check for factuality\"\n        )",
                                  "children": [
                                    {
                                      "value": "description=\"The statement to check for factuality\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"The statement to check for factuality\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "The statement to check for factuality",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "credentials: JinaCredentialsInput = JinaCredentialsField()",
                      "children": [
                        {
                          "value": "credentials: JinaCredentialsInput = JinaCredentialsField()",
                          "children": [
                            {
                              "value": "credentials",
                              "children": []
                            },
                            {
                              "value": "JinaCredentialsInput",
                              "children": [
                                {
                                  "value": "JinaCredentialsInput",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "JinaCredentialsField()",
                              "children": [
                                {
                                  "value": "JinaCredentialsField",
                                  "children": []
                                },
                                {
                                  "value": "()",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "class Output(BlockSchema):\n        factuality: float = SchemaField(\n            description=\"The factuality score of the statement\"\n        )\n        result: bool = SchemaField(description=\"The result of the factuality check\")\n        reason: str = SchemaField(description=\"The reason for the factuality result\")\n        error: str = SchemaField(description=\"Error message if the check fails\")",
              "children": [
                {
                  "value": "Output",
                  "children": []
                },
                {
                  "value": "(BlockSchema)",
                  "children": [
                    {
                      "value": "BlockSchema",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "factuality: float = SchemaField(\n            description=\"The factuality score of the statement\"\n        )\n        result: bool = SchemaField(description=\"The result of the factuality check\")\n        reason: str = SchemaField(description=\"The reason for the factuality result\")\n        error: str = SchemaField(description=\"Error message if the check fails\")",
                  "children": [
                    {
                      "value": "factuality: float = SchemaField(\n            description=\"The factuality score of the statement\"\n        )",
                      "children": [
                        {
                          "value": "factuality: float = SchemaField(\n            description=\"The factuality score of the statement\"\n        )",
                          "children": [
                            {
                              "value": "factuality",
                              "children": []
                            },
                            {
                              "value": "float",
                              "children": [
                                {
                                  "value": "float",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            description=\"The factuality score of the statement\"\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=\"The factuality score of the statement\"\n        )",
                                  "children": [
                                    {
                                      "value": "description=\"The factuality score of the statement\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"The factuality score of the statement\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "The factuality score of the statement",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "result: bool = SchemaField(description=\"The result of the factuality check\")",
                      "children": [
                        {
                          "value": "result: bool = SchemaField(description=\"The result of the factuality check\")",
                          "children": [
                            {
                              "value": "result",
                              "children": []
                            },
                            {
                              "value": "bool",
                              "children": [
                                {
                                  "value": "bool",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(description=\"The result of the factuality check\")",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(description=\"The result of the factuality check\")",
                                  "children": [
                                    {
                                      "value": "description=\"The result of the factuality check\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"The result of the factuality check\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "The result of the factuality check",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "reason: str = SchemaField(description=\"The reason for the factuality result\")",
                      "children": [
                        {
                          "value": "reason: str = SchemaField(description=\"The reason for the factuality result\")",
                          "children": [
                            {
                              "value": "reason",
                              "children": []
                            },
                            {
                              "value": "str",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(description=\"The reason for the factuality result\")",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(description=\"The reason for the factuality result\")",
                                  "children": [
                                    {
                                      "value": "description=\"The reason for the factuality result\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"The reason for the factuality result\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "The reason for the factuality result",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "error: str = SchemaField(description=\"Error message if the check fails\")",
                      "children": [
                        {
                          "value": "error: str = SchemaField(description=\"Error message if the check fails\")",
                          "children": [
                            {
                              "value": "error",
                              "children": []
                            },
                            {
                              "value": "str",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(description=\"Error message if the check fails\")",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(description=\"Error message if the check fails\")",
                                  "children": [
                                    {
                                      "value": "description=\"Error message if the check fails\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Error message if the check fails\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Error message if the check fails",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def __init__(self):\n        super().__init__(\n            id=\"d38b6c5e-9968-4271-8423-6cfe60d6e7e6\",\n            description=\"This block checks the factuality of a given statement using Jina AI's Grounding API.\",\n            categories={BlockCategory.SEARCH},\n            input_schema=FactCheckerBlock.Input,\n            output_schema=FactCheckerBlock.Output,\n        )",
              "children": [
                {
                  "value": "__init__",
                  "children": []
                },
                {
                  "value": "(self)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "super().__init__(\n            id=\"d38b6c5e-9968-4271-8423-6cfe60d6e7e6\",\n            description=\"This block checks the factuality of a given statement using Jina AI's Grounding API.\",\n            categories={BlockCategory.SEARCH},\n            input_schema=FactCheckerBlock.Input,\n            output_schema=FactCheckerBlock.Output,\n        )",
                  "children": [
                    {
                      "value": "super().__init__(\n            id=\"d38b6c5e-9968-4271-8423-6cfe60d6e7e6\",\n            description=\"This block checks the factuality of a given statement using Jina AI's Grounding API.\",\n            categories={BlockCategory.SEARCH},\n            input_schema=FactCheckerBlock.Input,\n            output_schema=FactCheckerBlock.Output,\n        )",
                      "children": [
                        {
                          "value": "super().__init__(\n            id=\"d38b6c5e-9968-4271-8423-6cfe60d6e7e6\",\n            description=\"This block checks the factuality of a given statement using Jina AI's Grounding API.\",\n            categories={BlockCategory.SEARCH},\n            input_schema=FactCheckerBlock.Input,\n            output_schema=FactCheckerBlock.Output,\n        )",
                          "children": [
                            {
                              "value": "super().__init__",
                              "children": [
                                {
                                  "value": "super()",
                                  "children": [
                                    {
                                      "value": "super",
                                      "children": []
                                    },
                                    {
                                      "value": "()",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "__init__",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\n            id=\"d38b6c5e-9968-4271-8423-6cfe60d6e7e6\",\n            description=\"This block checks the factuality of a given statement using Jina AI's Grounding API.\",\n            categories={BlockCategory.SEARCH},\n            input_schema=FactCheckerBlock.Input,\n            output_schema=FactCheckerBlock.Output,\n        )",
                              "children": [
                                {
                                  "value": "id=\"d38b6c5e-9968-4271-8423-6cfe60d6e7e6\"",
                                  "children": [
                                    {
                                      "value": "id",
                                      "children": []
                                    },
                                    {
                                      "value": "\"d38b6c5e-9968-4271-8423-6cfe60d6e7e6\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "d38b6c5e-9968-4271-8423-6cfe60d6e7e6",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "description=\"This block checks the factuality of a given statement using Jina AI's Grounding API.\"",
                                  "children": [
                                    {
                                      "value": "description",
                                      "children": []
                                    },
                                    {
                                      "value": "\"This block checks the factuality of a given statement using Jina AI's Grounding API.\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "This block checks the factuality of a given statement using Jina AI's Grounding API.",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "categories={BlockCategory.SEARCH}",
                                  "children": [
                                    {
                                      "value": "categories",
                                      "children": []
                                    },
                                    {
                                      "value": "{BlockCategory.SEARCH}",
                                      "children": [
                                        {
                                          "value": "BlockCategory.SEARCH",
                                          "children": [
                                            {
                                              "value": "BlockCategory",
                                              "children": []
                                            },
                                            {
                                              "value": "SEARCH",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "input_schema=FactCheckerBlock.Input",
                                  "children": [
                                    {
                                      "value": "input_schema",
                                      "children": []
                                    },
                                    {
                                      "value": "FactCheckerBlock.Input",
                                      "children": [
                                        {
                                          "value": "FactCheckerBlock",
                                          "children": []
                                        },
                                        {
                                          "value": "Input",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "output_schema=FactCheckerBlock.Output",
                                  "children": [
                                    {
                                      "value": "output_schema",
                                      "children": []
                                    },
                                    {
                                      "value": "FactCheckerBlock.Output",
                                      "children": [
                                        {
                                          "value": "FactCheckerBlock",
                                          "children": []
                                        },
                                        {
                                          "value": "Output",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def run(\n        self, input_data: Input, *, credentials: JinaCredentials, **kwargs\n    ) -> BlockOutput:\n        encoded_statement = quote(input_data.statement)\n        url = f\"https://g.jina.ai/{encoded_statement}\"\n\n        headers = {\n            \"Accept\": \"application/json\",\n            \"Authorization\": f\"Bearer {credentials.api_key.get_secret_value()}\",\n        }\n\n        response = requests.get(url, headers=headers)\n        response.raise_for_status()\n        data = response.json()\n\n        if \"data\" in data:\n            data = data[\"data\"]\n            yield \"factuality\", data[\"factuality\"]\n            yield \"result\", data[\"result\"]\n            yield \"reason\", data[\"reason\"]\n        else:\n            raise RuntimeError(f\"Expected 'data' key not found in response: {data}\")",
              "children": [
                {
                  "value": "run",
                  "children": []
                },
                {
                  "value": "(\n        self, input_data: Input, *, credentials: JinaCredentials, **kwargs\n    )",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "input_data: Input",
                      "children": [
                        {
                          "value": "input_data",
                          "children": []
                        },
                        {
                          "value": "Input",
                          "children": [
                            {
                              "value": "Input",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "*",
                      "children": []
                    },
                    {
                      "value": "credentials: JinaCredentials",
                      "children": [
                        {
                          "value": "credentials",
                          "children": []
                        },
                        {
                          "value": "JinaCredentials",
                          "children": [
                            {
                              "value": "JinaCredentials",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "**kwargs",
                      "children": [
                        {
                          "value": "kwargs",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "BlockOutput",
                  "children": [
                    {
                      "value": "BlockOutput",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "encoded_statement = quote(input_data.statement)\n        url = f\"https://g.jina.ai/{encoded_statement}\"\n\n        headers = {\n            \"Accept\": \"application/json\",\n            \"Authorization\": f\"Bearer {credentials.api_key.get_secret_value()}\",\n        }\n\n        response = requests.get(url, headers=headers)\n        response.raise_for_status()\n        data = response.json()\n\n        if \"data\" in data:\n            data = data[\"data\"]\n            yield \"factuality\", data[\"factuality\"]\n            yield \"result\", data[\"result\"]\n            yield \"reason\", data[\"reason\"]\n        else:\n            raise RuntimeError(f\"Expected 'data' key not found in response: {data}\")",
                  "children": [
                    {
                      "value": "encoded_statement = quote(input_data.statement)",
                      "children": [
                        {
                          "value": "encoded_statement = quote(input_data.statement)",
                          "children": [
                            {
                              "value": "encoded_statement",
                              "children": []
                            },
                            {
                              "value": "quote(input_data.statement)",
                              "children": [
                                {
                                  "value": "quote",
                                  "children": []
                                },
                                {
                                  "value": "(input_data.statement)",
                                  "children": [
                                    {
                                      "value": "input_data.statement",
                                      "children": [
                                        {
                                          "value": "input_data",
                                          "children": []
                                        },
                                        {
                                          "value": "statement",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "url = f\"https://g.jina.ai/{encoded_statement}\"",
                      "children": [
                        {
                          "value": "url = f\"https://g.jina.ai/{encoded_statement}\"",
                          "children": [
                            {
                              "value": "url",
                              "children": []
                            },
                            {
                              "value": "f\"https://g.jina.ai/{encoded_statement}\"",
                              "children": [
                                {
                                  "value": "f\"",
                                  "children": []
                                },
                                {
                                  "value": "https://g.jina.ai/",
                                  "children": []
                                },
                                {
                                  "value": "{encoded_statement}",
                                  "children": [
                                    {
                                      "value": "encoded_statement",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "headers = {\n            \"Accept\": \"application/json\",\n            \"Authorization\": f\"Bearer {credentials.api_key.get_secret_value()}\",\n        }",
                      "children": [
                        {
                          "value": "headers = {\n            \"Accept\": \"application/json\",\n            \"Authorization\": f\"Bearer {credentials.api_key.get_secret_value()}\",\n        }",
                          "children": [
                            {
                              "value": "headers",
                              "children": []
                            },
                            {
                              "value": "{\n            \"Accept\": \"application/json\",\n            \"Authorization\": f\"Bearer {credentials.api_key.get_secret_value()}\",\n        }",
                              "children": [
                                {
                                  "value": "\"Accept\": \"application/json\"",
                                  "children": [
                                    {
                                      "value": "\"Accept\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "Accept",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"application/json\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "application/json",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "\"Authorization\": f\"Bearer {credentials.api_key.get_secret_value()}\"",
                                  "children": [
                                    {
                                      "value": "\"Authorization\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "Authorization",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "f\"Bearer {credentials.api_key.get_secret_value()}\"",
                                      "children": [
                                        {
                                          "value": "f\"",
                                          "children": []
                                        },
                                        {
                                          "value": "Bearer",
                                          "children": []
                                        },
                                        {
                                          "value": "{credentials.api_key.get_secret_value()}",
                                          "children": [
                                            {
                                              "value": "credentials.api_key.get_secret_value()",
                                              "children": [
                                                {
                                                  "value": "credentials.api_key.get_secret_value",
                                                  "children": [
                                                    {
                                                      "value": "credentials.api_key",
                                                      "children": [
                                                        {
                                                          "value": "credentials",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "api_key",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "get_secret_value",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "()",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "response = requests.get(url, headers=headers)",
                      "children": [
                        {
                          "value": "response = requests.get(url, headers=headers)",
                          "children": [
                            {
                              "value": "response",
                              "children": []
                            },
                            {
                              "value": "requests.get(url, headers=headers)",
                              "children": [
                                {
                                  "value": "requests.get",
                                  "children": [
                                    {
                                      "value": "requests",
                                      "children": []
                                    },
                                    {
                                      "value": "get",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(url, headers=headers)",
                                  "children": [
                                    {
                                      "value": "url",
                                      "children": []
                                    },
                                    {
                                      "value": "headers=headers",
                                      "children": [
                                        {
                                          "value": "headers",
                                          "children": []
                                        },
                                        {
                                          "value": "headers",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "response.raise_for_status()",
                      "children": [
                        {
                          "value": "response.raise_for_status()",
                          "children": [
                            {
                              "value": "response.raise_for_status",
                              "children": [
                                {
                                  "value": "response",
                                  "children": []
                                },
                                {
                                  "value": "raise_for_status",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "()",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "data = response.json()",
                      "children": [
                        {
                          "value": "data = response.json()",
                          "children": [
                            {
                              "value": "data",
                              "children": []
                            },
                            {
                              "value": "response.json()",
                              "children": [
                                {
                                  "value": "response.json",
                                  "children": [
                                    {
                                      "value": "response",
                                      "children": []
                                    },
                                    {
                                      "value": "json",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "()",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "if \"data\" in data:\n            data = data[\"data\"]\n            yield \"factuality\", data[\"factuality\"]\n            yield \"result\", data[\"result\"]\n            yield \"reason\", data[\"reason\"]\n        else:\n            raise RuntimeError(f\"Expected 'data' key not found in response: {data}\")",
                      "children": [
                        {
                          "value": "\"data\" in data",
                          "children": [
                            {
                              "value": "\"data\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "data",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "data",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "data = data[\"data\"]\n            yield \"factuality\", data[\"factuality\"]\n            yield \"result\", data[\"result\"]\n            yield \"reason\", data[\"reason\"]",
                          "children": [
                            {
                              "value": "data = data[\"data\"]",
                              "children": [
                                {
                                  "value": "data = data[\"data\"]",
                                  "children": [
                                    {
                                      "value": "data",
                                      "children": []
                                    },
                                    {
                                      "value": "data[\"data\"]",
                                      "children": [
                                        {
                                          "value": "data",
                                          "children": []
                                        },
                                        {
                                          "value": "\"data\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "data",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "yield \"factuality\", data[\"factuality\"]",
                              "children": [
                                {
                                  "value": "yield \"factuality\", data[\"factuality\"]",
                                  "children": [
                                    {
                                      "value": "\"factuality\", data[\"factuality\"]",
                                      "children": [
                                        {
                                          "value": "\"factuality\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "factuality",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "data[\"factuality\"]",
                                          "children": [
                                            {
                                              "value": "data",
                                              "children": []
                                            },
                                            {
                                              "value": "\"factuality\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "factuality",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "yield \"result\", data[\"result\"]",
                              "children": [
                                {
                                  "value": "yield \"result\", data[\"result\"]",
                                  "children": [
                                    {
                                      "value": "\"result\", data[\"result\"]",
                                      "children": [
                                        {
                                          "value": "\"result\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "result",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "data[\"result\"]",
                                          "children": [
                                            {
                                              "value": "data",
                                              "children": []
                                            },
                                            {
                                              "value": "\"result\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "result",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "yield \"reason\", data[\"reason\"]",
                              "children": [
                                {
                                  "value": "yield \"reason\", data[\"reason\"]",
                                  "children": [
                                    {
                                      "value": "\"reason\", data[\"reason\"]",
                                      "children": [
                                        {
                                          "value": "\"reason\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "reason",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "data[\"reason\"]",
                                          "children": [
                                            {
                                              "value": "data",
                                              "children": []
                                            },
                                            {
                                              "value": "\"reason\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "reason",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "else:\n            raise RuntimeError(f\"Expected 'data' key not found in response: {data}\")",
                          "children": [
                            {
                              "value": "raise RuntimeError(f\"Expected 'data' key not found in response: {data}\")",
                              "children": [
                                {
                                  "value": "raise RuntimeError(f\"Expected 'data' key not found in response: {data}\")",
                                  "children": [
                                    {
                                      "value": "RuntimeError(f\"Expected 'data' key not found in response: {data}\")",
                                      "children": [
                                        {
                                          "value": "RuntimeError",
                                          "children": []
                                        },
                                        {
                                          "value": "(f\"Expected 'data' key not found in response: {data}\")",
                                          "children": [
                                            {
                                              "value": "f\"Expected 'data' key not found in response: {data}\"",
                                              "children": [
                                                {
                                                  "value": "f\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "Expected 'data' key not found in response:",
                                                  "children": []
                                                },
                                                {
                                                  "value": "{data}",
                                                  "children": [
                                                    {
                                                      "value": "data",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}