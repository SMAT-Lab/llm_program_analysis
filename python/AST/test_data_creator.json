{
  "value": "import asyncio\nimport random\nfrom datetime import datetime\n\nimport prisma.enums\nfrom faker import Faker\nfrom prisma import Prisma\n\nfaker = Faker()\n\n# Constants for data generation limits\n\n# Base entities\nNUM_USERS = 100  # Creates 100 user records\nNUM_AGENT_BLOCKS = 100  # Creates 100 agent block templates\n\n# Per-user entities\nMIN_GRAPHS_PER_USER = 1  # Each user will have between 1-5 graphs\nMAX_GRAPHS_PER_USER = 5  # Total graphs: 500-2500 (NUM_USERS * MIN/MAX_GRAPHS)\n\n# Per-graph entities\nMIN_NODES_PER_GRAPH = 2  # Each graph will have between 2-5 nodes\nMAX_NODES_PER_GRAPH = (\n    5  # Total nodes: 1000-2500 (GRAPHS_PER_USER * NUM_USERS * MIN/MAX_NODES)\n)\n\n# Additional per-user entities\nMIN_PRESETS_PER_USER = 1  # Each user will have between 1-2 presets\nMAX_PRESETS_PER_USER = 5  # Total presets: 500-2500 (NUM_USERS * MIN/MAX_PRESETS)\nMIN_AGENTS_PER_USER = 1  # Each user will have between 1-2 agents\nMAX_AGENTS_PER_USER = 10  # Total agents: 500-5000 (NUM_USERS * MIN/MAX_AGENTS)\n\n# Execution and review records\nMIN_EXECUTIONS_PER_GRAPH = 1  # Each graph will have between 1-5 execution records\nMAX_EXECUTIONS_PER_GRAPH = (\n    20  # Total executions: 1000-5000 (TOTAL_GRAPHS * MIN/MAX_EXECUTIONS)\n)\nMIN_REVIEWS_PER_VERSION = 1  # Each version will have between 1-3 reviews\nMAX_REVIEWS_PER_VERSION = 5  # Total reviews depends on number of versions created\n\n\ndef get_image():\n    url = faker.image_url()\n    while \"placekitten.com\" in url:\n        url = faker.image_url()\n    return url\n\n\nasync def main():\n    db = Prisma()\n    await db.connect()\n\n    # Insert Users\n    print(f\"Inserting {NUM_USERS} users\")\n    users = []\n    for _ in range(NUM_USERS):\n        user = await db.user.create(\n            data={\n                \"id\": str(faker.uuid4()),\n                \"email\": faker.unique.email(),\n                \"name\": faker.name(),\n                \"metadata\": prisma.Json({}),\n                \"integrations\": \"\",\n            }\n        )\n        users.append(user)\n\n    # Insert AgentBlocks\n    agent_blocks = []\n    print(f\"Inserting {NUM_AGENT_BLOCKS} agent blocks\")\n    for _ in range(NUM_AGENT_BLOCKS):\n        block = await db.agentblock.create(\n            data={\n                \"name\": f\"{faker.word()}_{str(faker.uuid4())[:8]}\",\n                \"inputSchema\": \"{}\",\n                \"outputSchema\": \"{}\",\n            }\n        )\n        agent_blocks.append(block)\n\n    # Insert AgentGraphs\n    agent_graphs = []\n    print(f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER} agent graphs\")\n    for user in users:\n        for _ in range(\n            random.randint(MIN_GRAPHS_PER_USER, MAX_GRAPHS_PER_USER)\n        ):  # Adjust the range to create more graphs per user if desired\n            graph = await db.agentgraph.create(\n                data={\n                    \"name\": faker.sentence(nb_words=3),\n                    \"description\": faker.text(max_nb_chars=200),\n                    \"userId\": user.id,\n                    \"isActive\": True,\n                    \"isTemplate\": False,\n                }\n            )\n            agent_graphs.append(graph)\n\n    # Insert AgentNodes\n    agent_nodes = []\n    print(\n        f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER * MAX_NODES_PER_GRAPH} agent nodes\"\n    )\n    for graph in agent_graphs:\n        num_nodes = random.randint(MIN_NODES_PER_GRAPH, MAX_NODES_PER_GRAPH)\n        for _ in range(num_nodes):  # Create 5 AgentNodes per graph\n            block = random.choice(agent_blocks)\n            node = await db.agentnode.create(\n                data={\n                    \"agentBlockId\": block.id,\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"constantInput\": \"{}\",\n                    \"metadata\": \"{}\",\n                }\n            )\n            agent_nodes.append(node)\n\n    # Insert AgentPresets\n    agent_presets = []\n    print(f\"Inserting {NUM_USERS * MAX_PRESETS_PER_USER} agent presets\")\n    for user in users:\n        num_presets = random.randint(MIN_PRESETS_PER_USER, MAX_PRESETS_PER_USER)\n        for _ in range(num_presets):  # Create 1 AgentPreset per user\n            graph = random.choice(agent_graphs)\n            preset = await db.agentpreset.create(\n                data={\n                    \"name\": faker.sentence(nb_words=3),\n                    \"description\": faker.text(max_nb_chars=200),\n                    \"userId\": user.id,\n                    \"agentId\": graph.id,\n                    \"agentVersion\": graph.version,\n                    \"isActive\": True,\n                }\n            )\n            agent_presets.append(preset)\n\n    # Insert UserAgents\n    user_agents = []\n    print(f\"Inserting {NUM_USERS * MAX_AGENTS_PER_USER} user agents\")\n    for user in users:\n        num_agents = random.randint(MIN_AGENTS_PER_USER, MAX_AGENTS_PER_USER)\n        for _ in range(num_agents):  # Create 1 UserAgent per user\n            graph = random.choice(agent_graphs)\n            preset = random.choice(agent_presets)\n            user_agent = await db.useragent.create(\n                data={\n                    \"userId\": user.id,\n                    \"agentId\": graph.id,\n                    \"agentVersion\": graph.version,\n                    \"agentPresetId\": preset.id,\n                    \"isFavorite\": random.choice([True, False]),\n                    \"isCreatedByUser\": random.choice([True, False]),\n                    \"isArchived\": random.choice([True, False]),\n                    \"isDeleted\": random.choice([True, False]),\n                }\n            )\n            user_agents.append(user_agent)\n\n    # Insert AgentGraphExecutions\n    # Insert AgentGraphExecutions\n    agent_graph_executions = []\n    print(\n        f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER * MAX_EXECUTIONS_PER_GRAPH} agent graph executions\"\n    )\n    graph_execution_data = []\n    for graph in agent_graphs:\n        user = random.choice(users)\n        num_executions = random.randint(\n            MIN_EXECUTIONS_PER_GRAPH, MAX_EXECUTIONS_PER_GRAPH\n        )\n        for _ in range(num_executions):\n            matching_presets = [p for p in agent_presets if p.agentId == graph.id]\n            preset = (\n                random.choice(matching_presets)\n                if matching_presets and random.random() < 0.5\n                else None\n            )\n\n            graph_execution_data.append(\n                {\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"userId\": user.id,\n                    \"executionStatus\": prisma.enums.AgentExecutionStatus.COMPLETED,\n                    \"startedAt\": faker.date_time_this_year(),\n                    \"agentPresetId\": preset.id if preset else None,\n                }\n            )\n\n    agent_graph_executions = await db.agentgraphexecution.create_many(\n        data=graph_execution_data\n    )\n    # Need to fetch the created records since create_many doesn't return them\n    agent_graph_executions = await db.agentgraphexecution.find_many()\n\n    # Insert AgentNodeExecutions\n    print(\n        f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER * MAX_EXECUTIONS_PER_GRAPH} agent node executions\"\n    )\n    node_execution_data = []\n    for execution in agent_graph_executions:\n        nodes = [\n            node for node in agent_nodes if node.agentGraphId == execution.agentGraphId\n        ]\n        for node in nodes:\n            node_execution_data.append(\n                {\n                    \"agentGraphExecutionId\": execution.id,\n                    \"agentNodeId\": node.id,\n                    \"executionStatus\": prisma.enums.AgentExecutionStatus.COMPLETED,\n                    \"addedTime\": datetime.now(),\n                }\n            )\n\n    agent_node_executions = await db.agentnodeexecution.create_many(\n        data=node_execution_data\n    )\n    # Need to fetch the created records since create_many doesn't return them\n    agent_node_executions = await db.agentnodeexecution.find_many()\n\n    # Insert AgentNodeExecutionInputOutput\n    print(\n        f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER * MAX_EXECUTIONS_PER_GRAPH} agent node execution input/outputs\"\n    )\n    input_output_data = []\n    for node_execution in agent_node_executions:\n        # Input data\n        input_output_data.append(\n            {\n                \"name\": \"input1\",\n                \"data\": \"{}\",\n                \"time\": datetime.now(),\n                \"referencedByInputExecId\": node_execution.id,\n            }\n        )\n        # Output data\n        input_output_data.append(\n            {\n                \"name\": \"output1\",\n                \"data\": \"{}\",\n                \"time\": datetime.now(),\n                \"referencedByOutputExecId\": node_execution.id,\n            }\n        )\n\n    await db.agentnodeexecutioninputoutput.create_many(data=input_output_data)\n\n    # Insert AgentNodeLinks\n    print(f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER} agent node links\")\n    for graph in agent_graphs:\n        nodes = [node for node in agent_nodes if node.agentGraphId == graph.id]\n        if len(nodes) >= 2:\n            source_node = nodes[0]\n            sink_node = nodes[1]\n            await db.agentnodelink.create(\n                data={\n                    \"agentNodeSourceId\": source_node.id,\n                    \"sourceName\": \"output1\",\n                    \"agentNodeSinkId\": sink_node.id,\n                    \"sinkName\": \"input1\",\n                    \"isStatic\": False,\n                }\n            )\n\n    # Insert AnalyticsDetails\n    print(f\"Inserting {NUM_USERS} analytics details\")\n    for user in users:\n        for _ in range(1):\n            await db.analyticsdetails.create(\n                data={\n                    \"userId\": user.id,\n                    \"type\": faker.word(),\n                    \"data\": prisma.Json({}),\n                    \"dataIndex\": faker.word(),\n                }\n            )\n\n    # Insert AnalyticsMetrics\n    print(f\"Inserting {NUM_USERS} analytics metrics\")\n    for user in users:\n        for _ in range(1):\n            await db.analyticsmetrics.create(\n                data={\n                    \"userId\": user.id,\n                    \"analyticMetric\": faker.word(),\n                    \"value\": random.uniform(0, 100),\n                    \"dataString\": faker.word(),\n                }\n            )\n\n    # Insert CreditTransaction (formerly UserBlockCredit)\n    print(f\"Inserting {NUM_USERS} credit transactions\")\n    for user in users:\n        for _ in range(1):\n            block = random.choice(agent_blocks)\n            await db.credittransaction.create(\n                data={\n                    \"transactionKey\": str(faker.uuid4()),\n                    \"userId\": user.id,\n                    \"blockId\": block.id,\n                    \"amount\": random.randint(1, 100),\n                    \"type\": (\n                        prisma.enums.CreditTransactionType.TOP_UP\n                        if random.random() < 0.5\n                        else prisma.enums.CreditTransactionType.USAGE\n                    ),\n                    \"metadata\": prisma.Json({}),\n                }\n            )\n\n    # Insert Profiles\n    profiles = []\n    print(f\"Inserting {NUM_USERS} profiles\")\n    for user in users:\n        profile = await db.profile.create(\n            data={\n                \"userId\": user.id,\n                \"name\": user.name or faker.name(),\n                \"username\": faker.unique.user_name(),\n                \"description\": faker.text(),\n                \"links\": [faker.url() for _ in range(3)],\n                \"avatarUrl\": get_image(),\n            }\n        )\n        profiles.append(profile)\n\n    # Insert StoreListings\n    store_listings = []\n    print(f\"Inserting {NUM_USERS} store listings\")\n    for graph in agent_graphs:\n        user = random.choice(users)\n        listing = await db.storelisting.create(\n            data={\n                \"agentId\": graph.id,\n                \"agentVersion\": graph.version,\n                \"owningUserId\": user.id,\n                \"isApproved\": random.choice([True, False]),\n            }\n        )\n        store_listings.append(listing)\n\n    # Insert StoreListingVersions\n    store_listing_versions = []\n    print(f\"Inserting {NUM_USERS} store listing versions\")\n    for listing in store_listings:\n        graph = [g for g in agent_graphs if g.id == listing.agentId][0]\n        version = await db.storelistingversion.create(\n            data={\n                \"agentId\": graph.id,\n                \"agentVersion\": graph.version,\n                \"slug\": faker.slug(),\n                \"name\": graph.name or faker.sentence(nb_words=3),\n                \"subHeading\": faker.sentence(),\n                \"videoUrl\": faker.url(),\n                \"imageUrls\": [get_image() for _ in range(3)],\n                \"description\": faker.text(),\n                \"categories\": [faker.word() for _ in range(3)],\n                \"isFeatured\": random.choice([True, False]),\n                \"isAvailable\": True,\n                \"isApproved\": random.choice([True, False]),\n                \"storeListingId\": listing.id,\n            }\n        )\n        store_listing_versions.append(version)\n\n    # Insert StoreListingReviews\n    print(f\"Inserting {NUM_USERS * MAX_REVIEWS_PER_VERSION} store listing reviews\")\n    for version in store_listing_versions:\n        # Create a copy of users list and shuffle it to avoid duplicates\n        available_reviewers = users.copy()\n        random.shuffle(available_reviewers)\n\n        # Limit number of reviews to available unique reviewers\n        num_reviews = min(\n            random.randint(MIN_REVIEWS_PER_VERSION, MAX_REVIEWS_PER_VERSION),\n            len(available_reviewers),\n        )\n\n        # Take only the first num_reviews reviewers\n        for reviewer in available_reviewers[:num_reviews]:\n            await db.storelistingreview.create(\n                data={\n                    \"storeListingVersionId\": version.id,\n                    \"reviewByUserId\": reviewer.id,\n                    \"score\": random.randint(1, 5),\n                    \"comments\": faker.text(),\n                }\n            )\n\n    # Insert StoreListingSubmissions\n    print(f\"Inserting {NUM_USERS} store listing submissions\")\n    for listing in store_listings:\n        version = random.choice(store_listing_versions)\n        reviewer = random.choice(users)\n        status: prisma.enums.SubmissionStatus = random.choice(\n            [\n                prisma.enums.SubmissionStatus.PENDING,\n                prisma.enums.SubmissionStatus.APPROVED,\n                prisma.enums.SubmissionStatus.REJECTED,\n            ]\n        )\n        await db.storelistingsubmission.create(\n            data={\n                \"storeListingId\": listing.id,\n                \"storeListingVersionId\": version.id,\n                \"reviewerId\": reviewer.id,\n                \"Status\": status,\n                \"reviewComments\": faker.text(),\n            }\n        )\n\n    # Insert APIKeys\n    print(f\"Inserting {NUM_USERS} api keys\")\n    for user in users:\n        await db.apikey.create(\n            data={\n                \"name\": faker.word(),\n                \"prefix\": str(faker.uuid4())[:8],\n                \"postfix\": str(faker.uuid4())[-8:],\n                \"key\": str(faker.sha256()),\n                \"status\": prisma.enums.APIKeyStatus.ACTIVE,\n                \"permissions\": [\n                    prisma.enums.APIKeyPermission.EXECUTE_GRAPH,\n                    prisma.enums.APIKeyPermission.READ_GRAPH,\n                ],\n                \"description\": faker.text(),\n                \"userId\": user.id,\n            }\n        )\n\n    await db.disconnect()\n\n\nif __name__ == \"__main__\":\n    asyncio.run(main())",
  "children": [
    {
      "value": "import asyncio",
      "children": [
        {
          "value": "asyncio",
          "children": [
            {
              "value": "asyncio",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "import random",
      "children": [
        {
          "value": "random",
          "children": [
            {
              "value": "random",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from datetime import datetime",
      "children": [
        {
          "value": "datetime",
          "children": [
            {
              "value": "datetime",
              "children": []
            }
          ]
        },
        {
          "value": "datetime",
          "children": [
            {
              "value": "datetime",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "import prisma.enums",
      "children": [
        {
          "value": "prisma.enums",
          "children": [
            {
              "value": "prisma",
              "children": []
            },
            {
              "value": "enums",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from faker import Faker",
      "children": [
        {
          "value": "faker",
          "children": [
            {
              "value": "faker",
              "children": []
            }
          ]
        },
        {
          "value": "Faker",
          "children": [
            {
              "value": "Faker",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from prisma import Prisma",
      "children": [
        {
          "value": "prisma",
          "children": [
            {
              "value": "prisma",
              "children": []
            }
          ]
        },
        {
          "value": "Prisma",
          "children": [
            {
              "value": "Prisma",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "faker = Faker()",
      "children": [
        {
          "value": "faker = Faker()",
          "children": [
            {
              "value": "faker",
              "children": []
            },
            {
              "value": "Faker()",
              "children": [
                {
                  "value": "Faker",
                  "children": []
                },
                {
                  "value": "()",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "# Constants for data generation limits",
      "children": []
    },
    {
      "value": "# Base entities",
      "children": []
    },
    {
      "value": "NUM_USERS = 100",
      "children": [
        {
          "value": "NUM_USERS = 100",
          "children": [
            {
              "value": "NUM_USERS",
              "children": []
            },
            {
              "value": "100",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "# Creates 100 user records",
      "children": []
    },
    {
      "value": "NUM_AGENT_BLOCKS = 100",
      "children": [
        {
          "value": "NUM_AGENT_BLOCKS = 100",
          "children": [
            {
              "value": "NUM_AGENT_BLOCKS",
              "children": []
            },
            {
              "value": "100",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "# Creates 100 agent block templates",
      "children": []
    },
    {
      "value": "# Per-user entities",
      "children": []
    },
    {
      "value": "MIN_GRAPHS_PER_USER = 1",
      "children": [
        {
          "value": "MIN_GRAPHS_PER_USER = 1",
          "children": [
            {
              "value": "MIN_GRAPHS_PER_USER",
              "children": []
            },
            {
              "value": "1",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "# Each user will have between 1-5 graphs",
      "children": []
    },
    {
      "value": "MAX_GRAPHS_PER_USER = 5",
      "children": [
        {
          "value": "MAX_GRAPHS_PER_USER = 5",
          "children": [
            {
              "value": "MAX_GRAPHS_PER_USER",
              "children": []
            },
            {
              "value": "5",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "# Total graphs: 500-2500 (NUM_USERS * MIN/MAX_GRAPHS)",
      "children": []
    },
    {
      "value": "# Per-graph entities",
      "children": []
    },
    {
      "value": "MIN_NODES_PER_GRAPH = 2",
      "children": [
        {
          "value": "MIN_NODES_PER_GRAPH = 2",
          "children": [
            {
              "value": "MIN_NODES_PER_GRAPH",
              "children": []
            },
            {
              "value": "2",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "# Each graph will have between 2-5 nodes",
      "children": []
    },
    {
      "value": "MAX_NODES_PER_GRAPH = (\n    5  # Total nodes: 1000-2500 (GRAPHS_PER_USER * NUM_USERS * MIN/MAX_NODES)\n)",
      "children": [
        {
          "value": "MAX_NODES_PER_GRAPH = (\n    5  # Total nodes: 1000-2500 (GRAPHS_PER_USER * NUM_USERS * MIN/MAX_NODES)\n)",
          "children": [
            {
              "value": "MAX_NODES_PER_GRAPH",
              "children": []
            },
            {
              "value": "(\n    5  # Total nodes: 1000-2500 (GRAPHS_PER_USER * NUM_USERS * MIN/MAX_NODES)\n)",
              "children": [
                {
                  "value": "5",
                  "children": []
                },
                {
                  "value": "# Total nodes: 1000-2500 (GRAPHS_PER_USER * NUM_USERS * MIN/MAX_NODES)",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "# Additional per-user entities",
      "children": []
    },
    {
      "value": "MIN_PRESETS_PER_USER = 1",
      "children": [
        {
          "value": "MIN_PRESETS_PER_USER = 1",
          "children": [
            {
              "value": "MIN_PRESETS_PER_USER",
              "children": []
            },
            {
              "value": "1",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "# Each user will have between 1-2 presets",
      "children": []
    },
    {
      "value": "MAX_PRESETS_PER_USER = 5",
      "children": [
        {
          "value": "MAX_PRESETS_PER_USER = 5",
          "children": [
            {
              "value": "MAX_PRESETS_PER_USER",
              "children": []
            },
            {
              "value": "5",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "# Total presets: 500-2500 (NUM_USERS * MIN/MAX_PRESETS)",
      "children": []
    },
    {
      "value": "MIN_AGENTS_PER_USER = 1",
      "children": [
        {
          "value": "MIN_AGENTS_PER_USER = 1",
          "children": [
            {
              "value": "MIN_AGENTS_PER_USER",
              "children": []
            },
            {
              "value": "1",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "# Each user will have between 1-2 agents",
      "children": []
    },
    {
      "value": "MAX_AGENTS_PER_USER = 10",
      "children": [
        {
          "value": "MAX_AGENTS_PER_USER = 10",
          "children": [
            {
              "value": "MAX_AGENTS_PER_USER",
              "children": []
            },
            {
              "value": "10",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "# Total agents: 500-5000 (NUM_USERS * MIN/MAX_AGENTS)",
      "children": []
    },
    {
      "value": "# Execution and review records",
      "children": []
    },
    {
      "value": "MIN_EXECUTIONS_PER_GRAPH = 1",
      "children": [
        {
          "value": "MIN_EXECUTIONS_PER_GRAPH = 1",
          "children": [
            {
              "value": "MIN_EXECUTIONS_PER_GRAPH",
              "children": []
            },
            {
              "value": "1",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "# Each graph will have between 1-5 execution records",
      "children": []
    },
    {
      "value": "MAX_EXECUTIONS_PER_GRAPH = (\n    20  # Total executions: 1000-5000 (TOTAL_GRAPHS * MIN/MAX_EXECUTIONS)\n)",
      "children": [
        {
          "value": "MAX_EXECUTIONS_PER_GRAPH = (\n    20  # Total executions: 1000-5000 (TOTAL_GRAPHS * MIN/MAX_EXECUTIONS)\n)",
          "children": [
            {
              "value": "MAX_EXECUTIONS_PER_GRAPH",
              "children": []
            },
            {
              "value": "(\n    20  # Total executions: 1000-5000 (TOTAL_GRAPHS * MIN/MAX_EXECUTIONS)\n)",
              "children": [
                {
                  "value": "20",
                  "children": []
                },
                {
                  "value": "# Total executions: 1000-5000 (TOTAL_GRAPHS * MIN/MAX_EXECUTIONS)",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "MIN_REVIEWS_PER_VERSION = 1",
      "children": [
        {
          "value": "MIN_REVIEWS_PER_VERSION = 1",
          "children": [
            {
              "value": "MIN_REVIEWS_PER_VERSION",
              "children": []
            },
            {
              "value": "1",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "# Each version will have between 1-3 reviews",
      "children": []
    },
    {
      "value": "MAX_REVIEWS_PER_VERSION = 5",
      "children": [
        {
          "value": "MAX_REVIEWS_PER_VERSION = 5",
          "children": [
            {
              "value": "MAX_REVIEWS_PER_VERSION",
              "children": []
            },
            {
              "value": "5",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "# Total reviews depends on number of versions created",
      "children": []
    },
    {
      "value": "def get_image():\n    url = faker.image_url()\n    while \"placekitten.com\" in url:\n        url = faker.image_url()\n    return url",
      "children": [
        {
          "value": "get_image",
          "children": []
        },
        {
          "value": "()",
          "children": []
        },
        {
          "value": "url = faker.image_url()\n    while \"placekitten.com\" in url:\n        url = faker.image_url()\n    return url",
          "children": [
            {
              "value": "url = faker.image_url()",
              "children": [
                {
                  "value": "url = faker.image_url()",
                  "children": [
                    {
                      "value": "url",
                      "children": []
                    },
                    {
                      "value": "faker.image_url()",
                      "children": [
                        {
                          "value": "faker.image_url",
                          "children": [
                            {
                              "value": "faker",
                              "children": []
                            },
                            {
                              "value": "image_url",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "()",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "while \"placekitten.com\" in url:\n        url = faker.image_url()",
              "children": [
                {
                  "value": "\"placekitten.com\" in url",
                  "children": [
                    {
                      "value": "\"placekitten.com\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "placekitten.com",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "url",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "url = faker.image_url()",
                  "children": [
                    {
                      "value": "url = faker.image_url()",
                      "children": [
                        {
                          "value": "url = faker.image_url()",
                          "children": [
                            {
                              "value": "url",
                              "children": []
                            },
                            {
                              "value": "faker.image_url()",
                              "children": [
                                {
                                  "value": "faker.image_url",
                                  "children": [
                                    {
                                      "value": "faker",
                                      "children": []
                                    },
                                    {
                                      "value": "image_url",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "()",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "return url",
              "children": [
                {
                  "value": "url",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "async def main():\n    db = Prisma()\n    await db.connect()\n\n    # Insert Users\n    print(f\"Inserting {NUM_USERS} users\")\n    users = []\n    for _ in range(NUM_USERS):\n        user = await db.user.create(\n            data={\n                \"id\": str(faker.uuid4()),\n                \"email\": faker.unique.email(),\n                \"name\": faker.name(),\n                \"metadata\": prisma.Json({}),\n                \"integrations\": \"\",\n            }\n        )\n        users.append(user)\n\n    # Insert AgentBlocks\n    agent_blocks = []\n    print(f\"Inserting {NUM_AGENT_BLOCKS} agent blocks\")\n    for _ in range(NUM_AGENT_BLOCKS):\n        block = await db.agentblock.create(\n            data={\n                \"name\": f\"{faker.word()}_{str(faker.uuid4())[:8]}\",\n                \"inputSchema\": \"{}\",\n                \"outputSchema\": \"{}\",\n            }\n        )\n        agent_blocks.append(block)\n\n    # Insert AgentGraphs\n    agent_graphs = []\n    print(f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER} agent graphs\")\n    for user in users:\n        for _ in range(\n            random.randint(MIN_GRAPHS_PER_USER, MAX_GRAPHS_PER_USER)\n        ):  # Adjust the range to create more graphs per user if desired\n            graph = await db.agentgraph.create(\n                data={\n                    \"name\": faker.sentence(nb_words=3),\n                    \"description\": faker.text(max_nb_chars=200),\n                    \"userId\": user.id,\n                    \"isActive\": True,\n                    \"isTemplate\": False,\n                }\n            )\n            agent_graphs.append(graph)\n\n    # Insert AgentNodes\n    agent_nodes = []\n    print(\n        f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER * MAX_NODES_PER_GRAPH} agent nodes\"\n    )\n    for graph in agent_graphs:\n        num_nodes = random.randint(MIN_NODES_PER_GRAPH, MAX_NODES_PER_GRAPH)\n        for _ in range(num_nodes):  # Create 5 AgentNodes per graph\n            block = random.choice(agent_blocks)\n            node = await db.agentnode.create(\n                data={\n                    \"agentBlockId\": block.id,\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"constantInput\": \"{}\",\n                    \"metadata\": \"{}\",\n                }\n            )\n            agent_nodes.append(node)\n\n    # Insert AgentPresets\n    agent_presets = []\n    print(f\"Inserting {NUM_USERS * MAX_PRESETS_PER_USER} agent presets\")\n    for user in users:\n        num_presets = random.randint(MIN_PRESETS_PER_USER, MAX_PRESETS_PER_USER)\n        for _ in range(num_presets):  # Create 1 AgentPreset per user\n            graph = random.choice(agent_graphs)\n            preset = await db.agentpreset.create(\n                data={\n                    \"name\": faker.sentence(nb_words=3),\n                    \"description\": faker.text(max_nb_chars=200),\n                    \"userId\": user.id,\n                    \"agentId\": graph.id,\n                    \"agentVersion\": graph.version,\n                    \"isActive\": True,\n                }\n            )\n            agent_presets.append(preset)\n\n    # Insert UserAgents\n    user_agents = []\n    print(f\"Inserting {NUM_USERS * MAX_AGENTS_PER_USER} user agents\")\n    for user in users:\n        num_agents = random.randint(MIN_AGENTS_PER_USER, MAX_AGENTS_PER_USER)\n        for _ in range(num_agents):  # Create 1 UserAgent per user\n            graph = random.choice(agent_graphs)\n            preset = random.choice(agent_presets)\n            user_agent = await db.useragent.create(\n                data={\n                    \"userId\": user.id,\n                    \"agentId\": graph.id,\n                    \"agentVersion\": graph.version,\n                    \"agentPresetId\": preset.id,\n                    \"isFavorite\": random.choice([True, False]),\n                    \"isCreatedByUser\": random.choice([True, False]),\n                    \"isArchived\": random.choice([True, False]),\n                    \"isDeleted\": random.choice([True, False]),\n                }\n            )\n            user_agents.append(user_agent)\n\n    # Insert AgentGraphExecutions\n    # Insert AgentGraphExecutions\n    agent_graph_executions = []\n    print(\n        f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER * MAX_EXECUTIONS_PER_GRAPH} agent graph executions\"\n    )\n    graph_execution_data = []\n    for graph in agent_graphs:\n        user = random.choice(users)\n        num_executions = random.randint(\n            MIN_EXECUTIONS_PER_GRAPH, MAX_EXECUTIONS_PER_GRAPH\n        )\n        for _ in range(num_executions):\n            matching_presets = [p for p in agent_presets if p.agentId == graph.id]\n            preset = (\n                random.choice(matching_presets)\n                if matching_presets and random.random() < 0.5\n                else None\n            )\n\n            graph_execution_data.append(\n                {\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"userId\": user.id,\n                    \"executionStatus\": prisma.enums.AgentExecutionStatus.COMPLETED,\n                    \"startedAt\": faker.date_time_this_year(),\n                    \"agentPresetId\": preset.id if preset else None,\n                }\n            )\n\n    agent_graph_executions = await db.agentgraphexecution.create_many(\n        data=graph_execution_data\n    )\n    # Need to fetch the created records since create_many doesn't return them\n    agent_graph_executions = await db.agentgraphexecution.find_many()\n\n    # Insert AgentNodeExecutions\n    print(\n        f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER * MAX_EXECUTIONS_PER_GRAPH} agent node executions\"\n    )\n    node_execution_data = []\n    for execution in agent_graph_executions:\n        nodes = [\n            node for node in agent_nodes if node.agentGraphId == execution.agentGraphId\n        ]\n        for node in nodes:\n            node_execution_data.append(\n                {\n                    \"agentGraphExecutionId\": execution.id,\n                    \"agentNodeId\": node.id,\n                    \"executionStatus\": prisma.enums.AgentExecutionStatus.COMPLETED,\n                    \"addedTime\": datetime.now(),\n                }\n            )\n\n    agent_node_executions = await db.agentnodeexecution.create_many(\n        data=node_execution_data\n    )\n    # Need to fetch the created records since create_many doesn't return them\n    agent_node_executions = await db.agentnodeexecution.find_many()\n\n    # Insert AgentNodeExecutionInputOutput\n    print(\n        f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER * MAX_EXECUTIONS_PER_GRAPH} agent node execution input/outputs\"\n    )\n    input_output_data = []\n    for node_execution in agent_node_executions:\n        # Input data\n        input_output_data.append(\n            {\n                \"name\": \"input1\",\n                \"data\": \"{}\",\n                \"time\": datetime.now(),\n                \"referencedByInputExecId\": node_execution.id,\n            }\n        )\n        # Output data\n        input_output_data.append(\n            {\n                \"name\": \"output1\",\n                \"data\": \"{}\",\n                \"time\": datetime.now(),\n                \"referencedByOutputExecId\": node_execution.id,\n            }\n        )\n\n    await db.agentnodeexecutioninputoutput.create_many(data=input_output_data)\n\n    # Insert AgentNodeLinks\n    print(f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER} agent node links\")\n    for graph in agent_graphs:\n        nodes = [node for node in agent_nodes if node.agentGraphId == graph.id]\n        if len(nodes) >= 2:\n            source_node = nodes[0]\n            sink_node = nodes[1]\n            await db.agentnodelink.create(\n                data={\n                    \"agentNodeSourceId\": source_node.id,\n                    \"sourceName\": \"output1\",\n                    \"agentNodeSinkId\": sink_node.id,\n                    \"sinkName\": \"input1\",\n                    \"isStatic\": False,\n                }\n            )\n\n    # Insert AnalyticsDetails\n    print(f\"Inserting {NUM_USERS} analytics details\")\n    for user in users:\n        for _ in range(1):\n            await db.analyticsdetails.create(\n                data={\n                    \"userId\": user.id,\n                    \"type\": faker.word(),\n                    \"data\": prisma.Json({}),\n                    \"dataIndex\": faker.word(),\n                }\n            )\n\n    # Insert AnalyticsMetrics\n    print(f\"Inserting {NUM_USERS} analytics metrics\")\n    for user in users:\n        for _ in range(1):\n            await db.analyticsmetrics.create(\n                data={\n                    \"userId\": user.id,\n                    \"analyticMetric\": faker.word(),\n                    \"value\": random.uniform(0, 100),\n                    \"dataString\": faker.word(),\n                }\n            )\n\n    # Insert CreditTransaction (formerly UserBlockCredit)\n    print(f\"Inserting {NUM_USERS} credit transactions\")\n    for user in users:\n        for _ in range(1):\n            block = random.choice(agent_blocks)\n            await db.credittransaction.create(\n                data={\n                    \"transactionKey\": str(faker.uuid4()),\n                    \"userId\": user.id,\n                    \"blockId\": block.id,\n                    \"amount\": random.randint(1, 100),\n                    \"type\": (\n                        prisma.enums.CreditTransactionType.TOP_UP\n                        if random.random() < 0.5\n                        else prisma.enums.CreditTransactionType.USAGE\n                    ),\n                    \"metadata\": prisma.Json({}),\n                }\n            )\n\n    # Insert Profiles\n    profiles = []\n    print(f\"Inserting {NUM_USERS} profiles\")\n    for user in users:\n        profile = await db.profile.create(\n            data={\n                \"userId\": user.id,\n                \"name\": user.name or faker.name(),\n                \"username\": faker.unique.user_name(),\n                \"description\": faker.text(),\n                \"links\": [faker.url() for _ in range(3)],\n                \"avatarUrl\": get_image(),\n            }\n        )\n        profiles.append(profile)\n\n    # Insert StoreListings\n    store_listings = []\n    print(f\"Inserting {NUM_USERS} store listings\")\n    for graph in agent_graphs:\n        user = random.choice(users)\n        listing = await db.storelisting.create(\n            data={\n                \"agentId\": graph.id,\n                \"agentVersion\": graph.version,\n                \"owningUserId\": user.id,\n                \"isApproved\": random.choice([True, False]),\n            }\n        )\n        store_listings.append(listing)\n\n    # Insert StoreListingVersions\n    store_listing_versions = []\n    print(f\"Inserting {NUM_USERS} store listing versions\")\n    for listing in store_listings:\n        graph = [g for g in agent_graphs if g.id == listing.agentId][0]\n        version = await db.storelistingversion.create(\n            data={\n                \"agentId\": graph.id,\n                \"agentVersion\": graph.version,\n                \"slug\": faker.slug(),\n                \"name\": graph.name or faker.sentence(nb_words=3),\n                \"subHeading\": faker.sentence(),\n                \"videoUrl\": faker.url(),\n                \"imageUrls\": [get_image() for _ in range(3)],\n                \"description\": faker.text(),\n                \"categories\": [faker.word() for _ in range(3)],\n                \"isFeatured\": random.choice([True, False]),\n                \"isAvailable\": True,\n                \"isApproved\": random.choice([True, False]),\n                \"storeListingId\": listing.id,\n            }\n        )\n        store_listing_versions.append(version)\n\n    # Insert StoreListingReviews\n    print(f\"Inserting {NUM_USERS * MAX_REVIEWS_PER_VERSION} store listing reviews\")\n    for version in store_listing_versions:\n        # Create a copy of users list and shuffle it to avoid duplicates\n        available_reviewers = users.copy()\n        random.shuffle(available_reviewers)\n\n        # Limit number of reviews to available unique reviewers\n        num_reviews = min(\n            random.randint(MIN_REVIEWS_PER_VERSION, MAX_REVIEWS_PER_VERSION),\n            len(available_reviewers),\n        )\n\n        # Take only the first num_reviews reviewers\n        for reviewer in available_reviewers[:num_reviews]:\n            await db.storelistingreview.create(\n                data={\n                    \"storeListingVersionId\": version.id,\n                    \"reviewByUserId\": reviewer.id,\n                    \"score\": random.randint(1, 5),\n                    \"comments\": faker.text(),\n                }\n            )\n\n    # Insert StoreListingSubmissions\n    print(f\"Inserting {NUM_USERS} store listing submissions\")\n    for listing in store_listings:\n        version = random.choice(store_listing_versions)\n        reviewer = random.choice(users)\n        status: prisma.enums.SubmissionStatus = random.choice(\n            [\n                prisma.enums.SubmissionStatus.PENDING,\n                prisma.enums.SubmissionStatus.APPROVED,\n                prisma.enums.SubmissionStatus.REJECTED,\n            ]\n        )\n        await db.storelistingsubmission.create(\n            data={\n                \"storeListingId\": listing.id,\n                \"storeListingVersionId\": version.id,\n                \"reviewerId\": reviewer.id,\n                \"Status\": status,\n                \"reviewComments\": faker.text(),\n            }\n        )\n\n    # Insert APIKeys\n    print(f\"Inserting {NUM_USERS} api keys\")\n    for user in users:\n        await db.apikey.create(\n            data={\n                \"name\": faker.word(),\n                \"prefix\": str(faker.uuid4())[:8],\n                \"postfix\": str(faker.uuid4())[-8:],\n                \"key\": str(faker.sha256()),\n                \"status\": prisma.enums.APIKeyStatus.ACTIVE,\n                \"permissions\": [\n                    prisma.enums.APIKeyPermission.EXECUTE_GRAPH,\n                    prisma.enums.APIKeyPermission.READ_GRAPH,\n                ],\n                \"description\": faker.text(),\n                \"userId\": user.id,\n            }\n        )\n\n    await db.disconnect()",
      "children": [
        {
          "value": "main",
          "children": []
        },
        {
          "value": "()",
          "children": []
        },
        {
          "value": "db = Prisma()\n    await db.connect()\n\n    # Insert Users\n    print(f\"Inserting {NUM_USERS} users\")\n    users = []\n    for _ in range(NUM_USERS):\n        user = await db.user.create(\n            data={\n                \"id\": str(faker.uuid4()),\n                \"email\": faker.unique.email(),\n                \"name\": faker.name(),\n                \"metadata\": prisma.Json({}),\n                \"integrations\": \"\",\n            }\n        )\n        users.append(user)\n\n    # Insert AgentBlocks\n    agent_blocks = []\n    print(f\"Inserting {NUM_AGENT_BLOCKS} agent blocks\")\n    for _ in range(NUM_AGENT_BLOCKS):\n        block = await db.agentblock.create(\n            data={\n                \"name\": f\"{faker.word()}_{str(faker.uuid4())[:8]}\",\n                \"inputSchema\": \"{}\",\n                \"outputSchema\": \"{}\",\n            }\n        )\n        agent_blocks.append(block)\n\n    # Insert AgentGraphs\n    agent_graphs = []\n    print(f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER} agent graphs\")\n    for user in users:\n        for _ in range(\n            random.randint(MIN_GRAPHS_PER_USER, MAX_GRAPHS_PER_USER)\n        ):  # Adjust the range to create more graphs per user if desired\n            graph = await db.agentgraph.create(\n                data={\n                    \"name\": faker.sentence(nb_words=3),\n                    \"description\": faker.text(max_nb_chars=200),\n                    \"userId\": user.id,\n                    \"isActive\": True,\n                    \"isTemplate\": False,\n                }\n            )\n            agent_graphs.append(graph)\n\n    # Insert AgentNodes\n    agent_nodes = []\n    print(\n        f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER * MAX_NODES_PER_GRAPH} agent nodes\"\n    )\n    for graph in agent_graphs:\n        num_nodes = random.randint(MIN_NODES_PER_GRAPH, MAX_NODES_PER_GRAPH)\n        for _ in range(num_nodes):  # Create 5 AgentNodes per graph\n            block = random.choice(agent_blocks)\n            node = await db.agentnode.create(\n                data={\n                    \"agentBlockId\": block.id,\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"constantInput\": \"{}\",\n                    \"metadata\": \"{}\",\n                }\n            )\n            agent_nodes.append(node)\n\n    # Insert AgentPresets\n    agent_presets = []\n    print(f\"Inserting {NUM_USERS * MAX_PRESETS_PER_USER} agent presets\")\n    for user in users:\n        num_presets = random.randint(MIN_PRESETS_PER_USER, MAX_PRESETS_PER_USER)\n        for _ in range(num_presets):  # Create 1 AgentPreset per user\n            graph = random.choice(agent_graphs)\n            preset = await db.agentpreset.create(\n                data={\n                    \"name\": faker.sentence(nb_words=3),\n                    \"description\": faker.text(max_nb_chars=200),\n                    \"userId\": user.id,\n                    \"agentId\": graph.id,\n                    \"agentVersion\": graph.version,\n                    \"isActive\": True,\n                }\n            )\n            agent_presets.append(preset)\n\n    # Insert UserAgents\n    user_agents = []\n    print(f\"Inserting {NUM_USERS * MAX_AGENTS_PER_USER} user agents\")\n    for user in users:\n        num_agents = random.randint(MIN_AGENTS_PER_USER, MAX_AGENTS_PER_USER)\n        for _ in range(num_agents):  # Create 1 UserAgent per user\n            graph = random.choice(agent_graphs)\n            preset = random.choice(agent_presets)\n            user_agent = await db.useragent.create(\n                data={\n                    \"userId\": user.id,\n                    \"agentId\": graph.id,\n                    \"agentVersion\": graph.version,\n                    \"agentPresetId\": preset.id,\n                    \"isFavorite\": random.choice([True, False]),\n                    \"isCreatedByUser\": random.choice([True, False]),\n                    \"isArchived\": random.choice([True, False]),\n                    \"isDeleted\": random.choice([True, False]),\n                }\n            )\n            user_agents.append(user_agent)\n\n    # Insert AgentGraphExecutions\n    # Insert AgentGraphExecutions\n    agent_graph_executions = []\n    print(\n        f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER * MAX_EXECUTIONS_PER_GRAPH} agent graph executions\"\n    )\n    graph_execution_data = []\n    for graph in agent_graphs:\n        user = random.choice(users)\n        num_executions = random.randint(\n            MIN_EXECUTIONS_PER_GRAPH, MAX_EXECUTIONS_PER_GRAPH\n        )\n        for _ in range(num_executions):\n            matching_presets = [p for p in agent_presets if p.agentId == graph.id]\n            preset = (\n                random.choice(matching_presets)\n                if matching_presets and random.random() < 0.5\n                else None\n            )\n\n            graph_execution_data.append(\n                {\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"userId\": user.id,\n                    \"executionStatus\": prisma.enums.AgentExecutionStatus.COMPLETED,\n                    \"startedAt\": faker.date_time_this_year(),\n                    \"agentPresetId\": preset.id if preset else None,\n                }\n            )\n\n    agent_graph_executions = await db.agentgraphexecution.create_many(\n        data=graph_execution_data\n    )\n    # Need to fetch the created records since create_many doesn't return them\n    agent_graph_executions = await db.agentgraphexecution.find_many()\n\n    # Insert AgentNodeExecutions\n    print(\n        f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER * MAX_EXECUTIONS_PER_GRAPH} agent node executions\"\n    )\n    node_execution_data = []\n    for execution in agent_graph_executions:\n        nodes = [\n            node for node in agent_nodes if node.agentGraphId == execution.agentGraphId\n        ]\n        for node in nodes:\n            node_execution_data.append(\n                {\n                    \"agentGraphExecutionId\": execution.id,\n                    \"agentNodeId\": node.id,\n                    \"executionStatus\": prisma.enums.AgentExecutionStatus.COMPLETED,\n                    \"addedTime\": datetime.now(),\n                }\n            )\n\n    agent_node_executions = await db.agentnodeexecution.create_many(\n        data=node_execution_data\n    )\n    # Need to fetch the created records since create_many doesn't return them\n    agent_node_executions = await db.agentnodeexecution.find_many()\n\n    # Insert AgentNodeExecutionInputOutput\n    print(\n        f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER * MAX_EXECUTIONS_PER_GRAPH} agent node execution input/outputs\"\n    )\n    input_output_data = []\n    for node_execution in agent_node_executions:\n        # Input data\n        input_output_data.append(\n            {\n                \"name\": \"input1\",\n                \"data\": \"{}\",\n                \"time\": datetime.now(),\n                \"referencedByInputExecId\": node_execution.id,\n            }\n        )\n        # Output data\n        input_output_data.append(\n            {\n                \"name\": \"output1\",\n                \"data\": \"{}\",\n                \"time\": datetime.now(),\n                \"referencedByOutputExecId\": node_execution.id,\n            }\n        )\n\n    await db.agentnodeexecutioninputoutput.create_many(data=input_output_data)\n\n    # Insert AgentNodeLinks\n    print(f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER} agent node links\")\n    for graph in agent_graphs:\n        nodes = [node for node in agent_nodes if node.agentGraphId == graph.id]\n        if len(nodes) >= 2:\n            source_node = nodes[0]\n            sink_node = nodes[1]\n            await db.agentnodelink.create(\n                data={\n                    \"agentNodeSourceId\": source_node.id,\n                    \"sourceName\": \"output1\",\n                    \"agentNodeSinkId\": sink_node.id,\n                    \"sinkName\": \"input1\",\n                    \"isStatic\": False,\n                }\n            )\n\n    # Insert AnalyticsDetails\n    print(f\"Inserting {NUM_USERS} analytics details\")\n    for user in users:\n        for _ in range(1):\n            await db.analyticsdetails.create(\n                data={\n                    \"userId\": user.id,\n                    \"type\": faker.word(),\n                    \"data\": prisma.Json({}),\n                    \"dataIndex\": faker.word(),\n                }\n            )\n\n    # Insert AnalyticsMetrics\n    print(f\"Inserting {NUM_USERS} analytics metrics\")\n    for user in users:\n        for _ in range(1):\n            await db.analyticsmetrics.create(\n                data={\n                    \"userId\": user.id,\n                    \"analyticMetric\": faker.word(),\n                    \"value\": random.uniform(0, 100),\n                    \"dataString\": faker.word(),\n                }\n            )\n\n    # Insert CreditTransaction (formerly UserBlockCredit)\n    print(f\"Inserting {NUM_USERS} credit transactions\")\n    for user in users:\n        for _ in range(1):\n            block = random.choice(agent_blocks)\n            await db.credittransaction.create(\n                data={\n                    \"transactionKey\": str(faker.uuid4()),\n                    \"userId\": user.id,\n                    \"blockId\": block.id,\n                    \"amount\": random.randint(1, 100),\n                    \"type\": (\n                        prisma.enums.CreditTransactionType.TOP_UP\n                        if random.random() < 0.5\n                        else prisma.enums.CreditTransactionType.USAGE\n                    ),\n                    \"metadata\": prisma.Json({}),\n                }\n            )\n\n    # Insert Profiles\n    profiles = []\n    print(f\"Inserting {NUM_USERS} profiles\")\n    for user in users:\n        profile = await db.profile.create(\n            data={\n                \"userId\": user.id,\n                \"name\": user.name or faker.name(),\n                \"username\": faker.unique.user_name(),\n                \"description\": faker.text(),\n                \"links\": [faker.url() for _ in range(3)],\n                \"avatarUrl\": get_image(),\n            }\n        )\n        profiles.append(profile)\n\n    # Insert StoreListings\n    store_listings = []\n    print(f\"Inserting {NUM_USERS} store listings\")\n    for graph in agent_graphs:\n        user = random.choice(users)\n        listing = await db.storelisting.create(\n            data={\n                \"agentId\": graph.id,\n                \"agentVersion\": graph.version,\n                \"owningUserId\": user.id,\n                \"isApproved\": random.choice([True, False]),\n            }\n        )\n        store_listings.append(listing)\n\n    # Insert StoreListingVersions\n    store_listing_versions = []\n    print(f\"Inserting {NUM_USERS} store listing versions\")\n    for listing in store_listings:\n        graph = [g for g in agent_graphs if g.id == listing.agentId][0]\n        version = await db.storelistingversion.create(\n            data={\n                \"agentId\": graph.id,\n                \"agentVersion\": graph.version,\n                \"slug\": faker.slug(),\n                \"name\": graph.name or faker.sentence(nb_words=3),\n                \"subHeading\": faker.sentence(),\n                \"videoUrl\": faker.url(),\n                \"imageUrls\": [get_image() for _ in range(3)],\n                \"description\": faker.text(),\n                \"categories\": [faker.word() for _ in range(3)],\n                \"isFeatured\": random.choice([True, False]),\n                \"isAvailable\": True,\n                \"isApproved\": random.choice([True, False]),\n                \"storeListingId\": listing.id,\n            }\n        )\n        store_listing_versions.append(version)\n\n    # Insert StoreListingReviews\n    print(f\"Inserting {NUM_USERS * MAX_REVIEWS_PER_VERSION} store listing reviews\")\n    for version in store_listing_versions:\n        # Create a copy of users list and shuffle it to avoid duplicates\n        available_reviewers = users.copy()\n        random.shuffle(available_reviewers)\n\n        # Limit number of reviews to available unique reviewers\n        num_reviews = min(\n            random.randint(MIN_REVIEWS_PER_VERSION, MAX_REVIEWS_PER_VERSION),\n            len(available_reviewers),\n        )\n\n        # Take only the first num_reviews reviewers\n        for reviewer in available_reviewers[:num_reviews]:\n            await db.storelistingreview.create(\n                data={\n                    \"storeListingVersionId\": version.id,\n                    \"reviewByUserId\": reviewer.id,\n                    \"score\": random.randint(1, 5),\n                    \"comments\": faker.text(),\n                }\n            )\n\n    # Insert StoreListingSubmissions\n    print(f\"Inserting {NUM_USERS} store listing submissions\")\n    for listing in store_listings:\n        version = random.choice(store_listing_versions)\n        reviewer = random.choice(users)\n        status: prisma.enums.SubmissionStatus = random.choice(\n            [\n                prisma.enums.SubmissionStatus.PENDING,\n                prisma.enums.SubmissionStatus.APPROVED,\n                prisma.enums.SubmissionStatus.REJECTED,\n            ]\n        )\n        await db.storelistingsubmission.create(\n            data={\n                \"storeListingId\": listing.id,\n                \"storeListingVersionId\": version.id,\n                \"reviewerId\": reviewer.id,\n                \"Status\": status,\n                \"reviewComments\": faker.text(),\n            }\n        )\n\n    # Insert APIKeys\n    print(f\"Inserting {NUM_USERS} api keys\")\n    for user in users:\n        await db.apikey.create(\n            data={\n                \"name\": faker.word(),\n                \"prefix\": str(faker.uuid4())[:8],\n                \"postfix\": str(faker.uuid4())[-8:],\n                \"key\": str(faker.sha256()),\n                \"status\": prisma.enums.APIKeyStatus.ACTIVE,\n                \"permissions\": [\n                    prisma.enums.APIKeyPermission.EXECUTE_GRAPH,\n                    prisma.enums.APIKeyPermission.READ_GRAPH,\n                ],\n                \"description\": faker.text(),\n                \"userId\": user.id,\n            }\n        )\n\n    await db.disconnect()",
          "children": [
            {
              "value": "db = Prisma()",
              "children": [
                {
                  "value": "db = Prisma()",
                  "children": [
                    {
                      "value": "db",
                      "children": []
                    },
                    {
                      "value": "Prisma()",
                      "children": [
                        {
                          "value": "Prisma",
                          "children": []
                        },
                        {
                          "value": "()",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "await db.connect()",
              "children": [
                {
                  "value": "await db.connect()",
                  "children": [
                    {
                      "value": "db.connect()",
                      "children": [
                        {
                          "value": "db.connect",
                          "children": [
                            {
                              "value": "db",
                              "children": []
                            },
                            {
                              "value": "connect",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "()",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Insert Users",
              "children": []
            },
            {
              "value": "print(f\"Inserting {NUM_USERS} users\")",
              "children": [
                {
                  "value": "print(f\"Inserting {NUM_USERS} users\")",
                  "children": [
                    {
                      "value": "print",
                      "children": []
                    },
                    {
                      "value": "(f\"Inserting {NUM_USERS} users\")",
                      "children": [
                        {
                          "value": "f\"Inserting {NUM_USERS} users\"",
                          "children": [
                            {
                              "value": "f\"",
                              "children": []
                            },
                            {
                              "value": "Inserting",
                              "children": []
                            },
                            {
                              "value": "{NUM_USERS}",
                              "children": [
                                {
                                  "value": "NUM_USERS",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "users",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "users = []",
              "children": [
                {
                  "value": "users = []",
                  "children": [
                    {
                      "value": "users",
                      "children": []
                    },
                    {
                      "value": "[]",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "for _ in range(NUM_USERS):\n        user = await db.user.create(\n            data={\n                \"id\": str(faker.uuid4()),\n                \"email\": faker.unique.email(),\n                \"name\": faker.name(),\n                \"metadata\": prisma.Json({}),\n                \"integrations\": \"\",\n            }\n        )\n        users.append(user)",
              "children": [
                {
                  "value": "_",
                  "children": []
                },
                {
                  "value": "range(NUM_USERS)",
                  "children": [
                    {
                      "value": "range",
                      "children": []
                    },
                    {
                      "value": "(NUM_USERS)",
                      "children": [
                        {
                          "value": "NUM_USERS",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "user = await db.user.create(\n            data={\n                \"id\": str(faker.uuid4()),\n                \"email\": faker.unique.email(),\n                \"name\": faker.name(),\n                \"metadata\": prisma.Json({}),\n                \"integrations\": \"\",\n            }\n        )\n        users.append(user)",
                  "children": [
                    {
                      "value": "user = await db.user.create(\n            data={\n                \"id\": str(faker.uuid4()),\n                \"email\": faker.unique.email(),\n                \"name\": faker.name(),\n                \"metadata\": prisma.Json({}),\n                \"integrations\": \"\",\n            }\n        )",
                      "children": [
                        {
                          "value": "user = await db.user.create(\n            data={\n                \"id\": str(faker.uuid4()),\n                \"email\": faker.unique.email(),\n                \"name\": faker.name(),\n                \"metadata\": prisma.Json({}),\n                \"integrations\": \"\",\n            }\n        )",
                          "children": [
                            {
                              "value": "user",
                              "children": []
                            },
                            {
                              "value": "await db.user.create(\n            data={\n                \"id\": str(faker.uuid4()),\n                \"email\": faker.unique.email(),\n                \"name\": faker.name(),\n                \"metadata\": prisma.Json({}),\n                \"integrations\": \"\",\n            }\n        )",
                              "children": [
                                {
                                  "value": "db.user.create(\n            data={\n                \"id\": str(faker.uuid4()),\n                \"email\": faker.unique.email(),\n                \"name\": faker.name(),\n                \"metadata\": prisma.Json({}),\n                \"integrations\": \"\",\n            }\n        )",
                                  "children": [
                                    {
                                      "value": "db.user.create",
                                      "children": [
                                        {
                                          "value": "db.user",
                                          "children": [
                                            {
                                              "value": "db",
                                              "children": []
                                            },
                                            {
                                              "value": "user",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "create",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(\n            data={\n                \"id\": str(faker.uuid4()),\n                \"email\": faker.unique.email(),\n                \"name\": faker.name(),\n                \"metadata\": prisma.Json({}),\n                \"integrations\": \"\",\n            }\n        )",
                                      "children": [
                                        {
                                          "value": "data={\n                \"id\": str(faker.uuid4()),\n                \"email\": faker.unique.email(),\n                \"name\": faker.name(),\n                \"metadata\": prisma.Json({}),\n                \"integrations\": \"\",\n            }",
                                          "children": [
                                            {
                                              "value": "data",
                                              "children": []
                                            },
                                            {
                                              "value": "{\n                \"id\": str(faker.uuid4()),\n                \"email\": faker.unique.email(),\n                \"name\": faker.name(),\n                \"metadata\": prisma.Json({}),\n                \"integrations\": \"\",\n            }",
                                              "children": [
                                                {
                                                  "value": "\"id\": str(faker.uuid4())",
                                                  "children": [
                                                    {
                                                      "value": "\"id\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "id",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "str(faker.uuid4())",
                                                      "children": [
                                                        {
                                                          "value": "str",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "(faker.uuid4())",
                                                          "children": [
                                                            {
                                                              "value": "faker.uuid4()",
                                                              "children": [
                                                                {
                                                                  "value": "faker.uuid4",
                                                                  "children": [
                                                                    {
                                                                      "value": "faker",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "uuid4",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "value": "()",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"email\": faker.unique.email()",
                                                  "children": [
                                                    {
                                                      "value": "\"email\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "email",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "faker.unique.email()",
                                                      "children": [
                                                        {
                                                          "value": "faker.unique.email",
                                                          "children": [
                                                            {
                                                              "value": "faker.unique",
                                                              "children": [
                                                                {
                                                                  "value": "faker",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "unique",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "email",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "()",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"name\": faker.name()",
                                                  "children": [
                                                    {
                                                      "value": "\"name\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "name",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "faker.name()",
                                                      "children": [
                                                        {
                                                          "value": "faker.name",
                                                          "children": [
                                                            {
                                                              "value": "faker",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "name",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "()",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"metadata\": prisma.Json({})",
                                                  "children": [
                                                    {
                                                      "value": "\"metadata\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "metadata",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "prisma.Json({})",
                                                      "children": [
                                                        {
                                                          "value": "prisma.Json",
                                                          "children": [
                                                            {
                                                              "value": "prisma",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "Json",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "({})",
                                                          "children": [
                                                            {
                                                              "value": "{}",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"integrations\": \"\"",
                                                  "children": [
                                                    {
                                                      "value": "\"integrations\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "integrations",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "users.append(user)",
                      "children": [
                        {
                          "value": "users.append(user)",
                          "children": [
                            {
                              "value": "users.append",
                              "children": [
                                {
                                  "value": "users",
                                  "children": []
                                },
                                {
                                  "value": "append",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(user)",
                              "children": [
                                {
                                  "value": "user",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Insert AgentBlocks",
              "children": []
            },
            {
              "value": "agent_blocks = []",
              "children": [
                {
                  "value": "agent_blocks = []",
                  "children": [
                    {
                      "value": "agent_blocks",
                      "children": []
                    },
                    {
                      "value": "[]",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "print(f\"Inserting {NUM_AGENT_BLOCKS} agent blocks\")",
              "children": [
                {
                  "value": "print(f\"Inserting {NUM_AGENT_BLOCKS} agent blocks\")",
                  "children": [
                    {
                      "value": "print",
                      "children": []
                    },
                    {
                      "value": "(f\"Inserting {NUM_AGENT_BLOCKS} agent blocks\")",
                      "children": [
                        {
                          "value": "f\"Inserting {NUM_AGENT_BLOCKS} agent blocks\"",
                          "children": [
                            {
                              "value": "f\"",
                              "children": []
                            },
                            {
                              "value": "Inserting",
                              "children": []
                            },
                            {
                              "value": "{NUM_AGENT_BLOCKS}",
                              "children": [
                                {
                                  "value": "NUM_AGENT_BLOCKS",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "agent blocks",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "for _ in range(NUM_AGENT_BLOCKS):\n        block = await db.agentblock.create(\n            data={\n                \"name\": f\"{faker.word()}_{str(faker.uuid4())[:8]}\",\n                \"inputSchema\": \"{}\",\n                \"outputSchema\": \"{}\",\n            }\n        )\n        agent_blocks.append(block)",
              "children": [
                {
                  "value": "_",
                  "children": []
                },
                {
                  "value": "range(NUM_AGENT_BLOCKS)",
                  "children": [
                    {
                      "value": "range",
                      "children": []
                    },
                    {
                      "value": "(NUM_AGENT_BLOCKS)",
                      "children": [
                        {
                          "value": "NUM_AGENT_BLOCKS",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "block = await db.agentblock.create(\n            data={\n                \"name\": f\"{faker.word()}_{str(faker.uuid4())[:8]}\",\n                \"inputSchema\": \"{}\",\n                \"outputSchema\": \"{}\",\n            }\n        )\n        agent_blocks.append(block)",
                  "children": [
                    {
                      "value": "block = await db.agentblock.create(\n            data={\n                \"name\": f\"{faker.word()}_{str(faker.uuid4())[:8]}\",\n                \"inputSchema\": \"{}\",\n                \"outputSchema\": \"{}\",\n            }\n        )",
                      "children": [
                        {
                          "value": "block = await db.agentblock.create(\n            data={\n                \"name\": f\"{faker.word()}_{str(faker.uuid4())[:8]}\",\n                \"inputSchema\": \"{}\",\n                \"outputSchema\": \"{}\",\n            }\n        )",
                          "children": [
                            {
                              "value": "block",
                              "children": []
                            },
                            {
                              "value": "await db.agentblock.create(\n            data={\n                \"name\": f\"{faker.word()}_{str(faker.uuid4())[:8]}\",\n                \"inputSchema\": \"{}\",\n                \"outputSchema\": \"{}\",\n            }\n        )",
                              "children": [
                                {
                                  "value": "db.agentblock.create(\n            data={\n                \"name\": f\"{faker.word()}_{str(faker.uuid4())[:8]}\",\n                \"inputSchema\": \"{}\",\n                \"outputSchema\": \"{}\",\n            }\n        )",
                                  "children": [
                                    {
                                      "value": "db.agentblock.create",
                                      "children": [
                                        {
                                          "value": "db.agentblock",
                                          "children": [
                                            {
                                              "value": "db",
                                              "children": []
                                            },
                                            {
                                              "value": "agentblock",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "create",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(\n            data={\n                \"name\": f\"{faker.word()}_{str(faker.uuid4())[:8]}\",\n                \"inputSchema\": \"{}\",\n                \"outputSchema\": \"{}\",\n            }\n        )",
                                      "children": [
                                        {
                                          "value": "data={\n                \"name\": f\"{faker.word()}_{str(faker.uuid4())[:8]}\",\n                \"inputSchema\": \"{}\",\n                \"outputSchema\": \"{}\",\n            }",
                                          "children": [
                                            {
                                              "value": "data",
                                              "children": []
                                            },
                                            {
                                              "value": "{\n                \"name\": f\"{faker.word()}_{str(faker.uuid4())[:8]}\",\n                \"inputSchema\": \"{}\",\n                \"outputSchema\": \"{}\",\n            }",
                                              "children": [
                                                {
                                                  "value": "\"name\": f\"{faker.word()}_{str(faker.uuid4())[:8]}\"",
                                                  "children": [
                                                    {
                                                      "value": "\"name\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "name",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "f\"{faker.word()}_{str(faker.uuid4())[:8]}\"",
                                                      "children": [
                                                        {
                                                          "value": "f\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "{faker.word()}",
                                                          "children": [
                                                            {
                                                              "value": "faker.word()",
                                                              "children": [
                                                                {
                                                                  "value": "faker.word",
                                                                  "children": [
                                                                    {
                                                                      "value": "faker",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "word",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "value": "()",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "_",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "{str(faker.uuid4())[:8]}",
                                                          "children": [
                                                            {
                                                              "value": "str(faker.uuid4())[:8]",
                                                              "children": [
                                                                {
                                                                  "value": "str(faker.uuid4())",
                                                                  "children": [
                                                                    {
                                                                      "value": "str",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "(faker.uuid4())",
                                                                      "children": [
                                                                        {
                                                                          "value": "faker.uuid4()",
                                                                          "children": [
                                                                            {
                                                                              "value": "faker.uuid4",
                                                                              "children": [
                                                                                {
                                                                                  "value": "faker",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "value": "uuid4",
                                                                                  "children": []
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "value": "()",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "value": ":8",
                                                                  "children": [
                                                                    {
                                                                      "value": "8",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"inputSchema\": \"{}\"",
                                                  "children": [
                                                    {
                                                      "value": "\"inputSchema\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "inputSchema",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"{}\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "{}",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"outputSchema\": \"{}\"",
                                                  "children": [
                                                    {
                                                      "value": "\"outputSchema\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "outputSchema",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"{}\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "{}",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "agent_blocks.append(block)",
                      "children": [
                        {
                          "value": "agent_blocks.append(block)",
                          "children": [
                            {
                              "value": "agent_blocks.append",
                              "children": [
                                {
                                  "value": "agent_blocks",
                                  "children": []
                                },
                                {
                                  "value": "append",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(block)",
                              "children": [
                                {
                                  "value": "block",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Insert AgentGraphs",
              "children": []
            },
            {
              "value": "agent_graphs = []",
              "children": [
                {
                  "value": "agent_graphs = []",
                  "children": [
                    {
                      "value": "agent_graphs",
                      "children": []
                    },
                    {
                      "value": "[]",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "print(f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER} agent graphs\")",
              "children": [
                {
                  "value": "print(f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER} agent graphs\")",
                  "children": [
                    {
                      "value": "print",
                      "children": []
                    },
                    {
                      "value": "(f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER} agent graphs\")",
                      "children": [
                        {
                          "value": "f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER} agent graphs\"",
                          "children": [
                            {
                              "value": "f\"",
                              "children": []
                            },
                            {
                              "value": "Inserting",
                              "children": []
                            },
                            {
                              "value": "{NUM_USERS * MAX_GRAPHS_PER_USER}",
                              "children": [
                                {
                                  "value": "NUM_USERS * MAX_GRAPHS_PER_USER",
                                  "children": [
                                    {
                                      "value": "NUM_USERS",
                                      "children": []
                                    },
                                    {
                                      "value": "MAX_GRAPHS_PER_USER",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "agent graphs",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "for user in users:\n        for _ in range(\n            random.randint(MIN_GRAPHS_PER_USER, MAX_GRAPHS_PER_USER)\n        ):  # Adjust the range to create more graphs per user if desired\n            graph = await db.agentgraph.create(\n                data={\n                    \"name\": faker.sentence(nb_words=3),\n                    \"description\": faker.text(max_nb_chars=200),\n                    \"userId\": user.id,\n                    \"isActive\": True,\n                    \"isTemplate\": False,\n                }\n            )\n            agent_graphs.append(graph)",
              "children": [
                {
                  "value": "user",
                  "children": []
                },
                {
                  "value": "users",
                  "children": []
                },
                {
                  "value": "for _ in range(\n            random.randint(MIN_GRAPHS_PER_USER, MAX_GRAPHS_PER_USER)\n        ):  # Adjust the range to create more graphs per user if desired\n            graph = await db.agentgraph.create(\n                data={\n                    \"name\": faker.sentence(nb_words=3),\n                    \"description\": faker.text(max_nb_chars=200),\n                    \"userId\": user.id,\n                    \"isActive\": True,\n                    \"isTemplate\": False,\n                }\n            )\n            agent_graphs.append(graph)",
                  "children": [
                    {
                      "value": "for _ in range(\n            random.randint(MIN_GRAPHS_PER_USER, MAX_GRAPHS_PER_USER)\n        ):  # Adjust the range to create more graphs per user if desired\n            graph = await db.agentgraph.create(\n                data={\n                    \"name\": faker.sentence(nb_words=3),\n                    \"description\": faker.text(max_nb_chars=200),\n                    \"userId\": user.id,\n                    \"isActive\": True,\n                    \"isTemplate\": False,\n                }\n            )\n            agent_graphs.append(graph)",
                      "children": [
                        {
                          "value": "_",
                          "children": []
                        },
                        {
                          "value": "range(\n            random.randint(MIN_GRAPHS_PER_USER, MAX_GRAPHS_PER_USER)\n        )",
                          "children": [
                            {
                              "value": "range",
                              "children": []
                            },
                            {
                              "value": "(\n            random.randint(MIN_GRAPHS_PER_USER, MAX_GRAPHS_PER_USER)\n        )",
                              "children": [
                                {
                                  "value": "random.randint(MIN_GRAPHS_PER_USER, MAX_GRAPHS_PER_USER)",
                                  "children": [
                                    {
                                      "value": "random.randint",
                                      "children": [
                                        {
                                          "value": "random",
                                          "children": []
                                        },
                                        {
                                          "value": "randint",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(MIN_GRAPHS_PER_USER, MAX_GRAPHS_PER_USER)",
                                      "children": [
                                        {
                                          "value": "MIN_GRAPHS_PER_USER",
                                          "children": []
                                        },
                                        {
                                          "value": "MAX_GRAPHS_PER_USER",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "# Adjust the range to create more graphs per user if desired",
                          "children": []
                        },
                        {
                          "value": "graph = await db.agentgraph.create(\n                data={\n                    \"name\": faker.sentence(nb_words=3),\n                    \"description\": faker.text(max_nb_chars=200),\n                    \"userId\": user.id,\n                    \"isActive\": True,\n                    \"isTemplate\": False,\n                }\n            )\n            agent_graphs.append(graph)",
                          "children": [
                            {
                              "value": "graph = await db.agentgraph.create(\n                data={\n                    \"name\": faker.sentence(nb_words=3),\n                    \"description\": faker.text(max_nb_chars=200),\n                    \"userId\": user.id,\n                    \"isActive\": True,\n                    \"isTemplate\": False,\n                }\n            )",
                              "children": [
                                {
                                  "value": "graph = await db.agentgraph.create(\n                data={\n                    \"name\": faker.sentence(nb_words=3),\n                    \"description\": faker.text(max_nb_chars=200),\n                    \"userId\": user.id,\n                    \"isActive\": True,\n                    \"isTemplate\": False,\n                }\n            )",
                                  "children": [
                                    {
                                      "value": "graph",
                                      "children": []
                                    },
                                    {
                                      "value": "await db.agentgraph.create(\n                data={\n                    \"name\": faker.sentence(nb_words=3),\n                    \"description\": faker.text(max_nb_chars=200),\n                    \"userId\": user.id,\n                    \"isActive\": True,\n                    \"isTemplate\": False,\n                }\n            )",
                                      "children": [
                                        {
                                          "value": "db.agentgraph.create(\n                data={\n                    \"name\": faker.sentence(nb_words=3),\n                    \"description\": faker.text(max_nb_chars=200),\n                    \"userId\": user.id,\n                    \"isActive\": True,\n                    \"isTemplate\": False,\n                }\n            )",
                                          "children": [
                                            {
                                              "value": "db.agentgraph.create",
                                              "children": [
                                                {
                                                  "value": "db.agentgraph",
                                                  "children": [
                                                    {
                                                      "value": "db",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "agentgraph",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "create",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "(\n                data={\n                    \"name\": faker.sentence(nb_words=3),\n                    \"description\": faker.text(max_nb_chars=200),\n                    \"userId\": user.id,\n                    \"isActive\": True,\n                    \"isTemplate\": False,\n                }\n            )",
                                              "children": [
                                                {
                                                  "value": "data={\n                    \"name\": faker.sentence(nb_words=3),\n                    \"description\": faker.text(max_nb_chars=200),\n                    \"userId\": user.id,\n                    \"isActive\": True,\n                    \"isTemplate\": False,\n                }",
                                                  "children": [
                                                    {
                                                      "value": "data",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "{\n                    \"name\": faker.sentence(nb_words=3),\n                    \"description\": faker.text(max_nb_chars=200),\n                    \"userId\": user.id,\n                    \"isActive\": True,\n                    \"isTemplate\": False,\n                }",
                                                      "children": [
                                                        {
                                                          "value": "\"name\": faker.sentence(nb_words=3)",
                                                          "children": [
                                                            {
                                                              "value": "\"name\"",
                                                              "children": [
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "name",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "faker.sentence(nb_words=3)",
                                                              "children": [
                                                                {
                                                                  "value": "faker.sentence",
                                                                  "children": [
                                                                    {
                                                                      "value": "faker",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "sentence",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "value": "(nb_words=3)",
                                                                  "children": [
                                                                    {
                                                                      "value": "nb_words=3",
                                                                      "children": [
                                                                        {
                                                                          "value": "nb_words",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "value": "3",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "\"description\": faker.text(max_nb_chars=200)",
                                                          "children": [
                                                            {
                                                              "value": "\"description\"",
                                                              "children": [
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "description",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "faker.text(max_nb_chars=200)",
                                                              "children": [
                                                                {
                                                                  "value": "faker.text",
                                                                  "children": [
                                                                    {
                                                                      "value": "faker",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "text",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "value": "(max_nb_chars=200)",
                                                                  "children": [
                                                                    {
                                                                      "value": "max_nb_chars=200",
                                                                      "children": [
                                                                        {
                                                                          "value": "max_nb_chars",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "value": "200",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "\"userId\": user.id",
                                                          "children": [
                                                            {
                                                              "value": "\"userId\"",
                                                              "children": [
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "userId",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "user.id",
                                                              "children": [
                                                                {
                                                                  "value": "user",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "id",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "\"isActive\": True",
                                                          "children": [
                                                            {
                                                              "value": "\"isActive\"",
                                                              "children": [
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "isActive",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "True",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "\"isTemplate\": False",
                                                          "children": [
                                                            {
                                                              "value": "\"isTemplate\"",
                                                              "children": [
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "isTemplate",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "False",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "agent_graphs.append(graph)",
                              "children": [
                                {
                                  "value": "agent_graphs.append(graph)",
                                  "children": [
                                    {
                                      "value": "agent_graphs.append",
                                      "children": [
                                        {
                                          "value": "agent_graphs",
                                          "children": []
                                        },
                                        {
                                          "value": "append",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(graph)",
                                      "children": [
                                        {
                                          "value": "graph",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Insert AgentNodes",
              "children": []
            },
            {
              "value": "agent_nodes = []",
              "children": [
                {
                  "value": "agent_nodes = []",
                  "children": [
                    {
                      "value": "agent_nodes",
                      "children": []
                    },
                    {
                      "value": "[]",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "print(\n        f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER * MAX_NODES_PER_GRAPH} agent nodes\"\n    )",
              "children": [
                {
                  "value": "print(\n        f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER * MAX_NODES_PER_GRAPH} agent nodes\"\n    )",
                  "children": [
                    {
                      "value": "print",
                      "children": []
                    },
                    {
                      "value": "(\n        f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER * MAX_NODES_PER_GRAPH} agent nodes\"\n    )",
                      "children": [
                        {
                          "value": "f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER * MAX_NODES_PER_GRAPH} agent nodes\"",
                          "children": [
                            {
                              "value": "f\"",
                              "children": []
                            },
                            {
                              "value": "Inserting",
                              "children": []
                            },
                            {
                              "value": "{NUM_USERS * MAX_GRAPHS_PER_USER * MAX_NODES_PER_GRAPH}",
                              "children": [
                                {
                                  "value": "NUM_USERS * MAX_GRAPHS_PER_USER * MAX_NODES_PER_GRAPH",
                                  "children": [
                                    {
                                      "value": "NUM_USERS * MAX_GRAPHS_PER_USER",
                                      "children": [
                                        {
                                          "value": "NUM_USERS",
                                          "children": []
                                        },
                                        {
                                          "value": "MAX_GRAPHS_PER_USER",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "MAX_NODES_PER_GRAPH",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "agent nodes",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "for graph in agent_graphs:\n        num_nodes = random.randint(MIN_NODES_PER_GRAPH, MAX_NODES_PER_GRAPH)\n        for _ in range(num_nodes):  # Create 5 AgentNodes per graph\n            block = random.choice(agent_blocks)\n            node = await db.agentnode.create(\n                data={\n                    \"agentBlockId\": block.id,\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"constantInput\": \"{}\",\n                    \"metadata\": \"{}\",\n                }\n            )\n            agent_nodes.append(node)",
              "children": [
                {
                  "value": "graph",
                  "children": []
                },
                {
                  "value": "agent_graphs",
                  "children": []
                },
                {
                  "value": "num_nodes = random.randint(MIN_NODES_PER_GRAPH, MAX_NODES_PER_GRAPH)\n        for _ in range(num_nodes):  # Create 5 AgentNodes per graph\n            block = random.choice(agent_blocks)\n            node = await db.agentnode.create(\n                data={\n                    \"agentBlockId\": block.id,\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"constantInput\": \"{}\",\n                    \"metadata\": \"{}\",\n                }\n            )\n            agent_nodes.append(node)",
                  "children": [
                    {
                      "value": "num_nodes = random.randint(MIN_NODES_PER_GRAPH, MAX_NODES_PER_GRAPH)",
                      "children": [
                        {
                          "value": "num_nodes = random.randint(MIN_NODES_PER_GRAPH, MAX_NODES_PER_GRAPH)",
                          "children": [
                            {
                              "value": "num_nodes",
                              "children": []
                            },
                            {
                              "value": "random.randint(MIN_NODES_PER_GRAPH, MAX_NODES_PER_GRAPH)",
                              "children": [
                                {
                                  "value": "random.randint",
                                  "children": [
                                    {
                                      "value": "random",
                                      "children": []
                                    },
                                    {
                                      "value": "randint",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(MIN_NODES_PER_GRAPH, MAX_NODES_PER_GRAPH)",
                                  "children": [
                                    {
                                      "value": "MIN_NODES_PER_GRAPH",
                                      "children": []
                                    },
                                    {
                                      "value": "MAX_NODES_PER_GRAPH",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "for _ in range(num_nodes):  # Create 5 AgentNodes per graph\n            block = random.choice(agent_blocks)\n            node = await db.agentnode.create(\n                data={\n                    \"agentBlockId\": block.id,\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"constantInput\": \"{}\",\n                    \"metadata\": \"{}\",\n                }\n            )\n            agent_nodes.append(node)",
                      "children": [
                        {
                          "value": "_",
                          "children": []
                        },
                        {
                          "value": "range(num_nodes)",
                          "children": [
                            {
                              "value": "range",
                              "children": []
                            },
                            {
                              "value": "(num_nodes)",
                              "children": [
                                {
                                  "value": "num_nodes",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "# Create 5 AgentNodes per graph",
                          "children": []
                        },
                        {
                          "value": "block = random.choice(agent_blocks)\n            node = await db.agentnode.create(\n                data={\n                    \"agentBlockId\": block.id,\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"constantInput\": \"{}\",\n                    \"metadata\": \"{}\",\n                }\n            )\n            agent_nodes.append(node)",
                          "children": [
                            {
                              "value": "block = random.choice(agent_blocks)",
                              "children": [
                                {
                                  "value": "block = random.choice(agent_blocks)",
                                  "children": [
                                    {
                                      "value": "block",
                                      "children": []
                                    },
                                    {
                                      "value": "random.choice(agent_blocks)",
                                      "children": [
                                        {
                                          "value": "random.choice",
                                          "children": [
                                            {
                                              "value": "random",
                                              "children": []
                                            },
                                            {
                                              "value": "choice",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(agent_blocks)",
                                          "children": [
                                            {
                                              "value": "agent_blocks",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "node = await db.agentnode.create(\n                data={\n                    \"agentBlockId\": block.id,\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"constantInput\": \"{}\",\n                    \"metadata\": \"{}\",\n                }\n            )",
                              "children": [
                                {
                                  "value": "node = await db.agentnode.create(\n                data={\n                    \"agentBlockId\": block.id,\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"constantInput\": \"{}\",\n                    \"metadata\": \"{}\",\n                }\n            )",
                                  "children": [
                                    {
                                      "value": "node",
                                      "children": []
                                    },
                                    {
                                      "value": "await db.agentnode.create(\n                data={\n                    \"agentBlockId\": block.id,\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"constantInput\": \"{}\",\n                    \"metadata\": \"{}\",\n                }\n            )",
                                      "children": [
                                        {
                                          "value": "db.agentnode.create(\n                data={\n                    \"agentBlockId\": block.id,\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"constantInput\": \"{}\",\n                    \"metadata\": \"{}\",\n                }\n            )",
                                          "children": [
                                            {
                                              "value": "db.agentnode.create",
                                              "children": [
                                                {
                                                  "value": "db.agentnode",
                                                  "children": [
                                                    {
                                                      "value": "db",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "agentnode",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "create",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "(\n                data={\n                    \"agentBlockId\": block.id,\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"constantInput\": \"{}\",\n                    \"metadata\": \"{}\",\n                }\n            )",
                                              "children": [
                                                {
                                                  "value": "data={\n                    \"agentBlockId\": block.id,\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"constantInput\": \"{}\",\n                    \"metadata\": \"{}\",\n                }",
                                                  "children": [
                                                    {
                                                      "value": "data",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "{\n                    \"agentBlockId\": block.id,\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"constantInput\": \"{}\",\n                    \"metadata\": \"{}\",\n                }",
                                                      "children": [
                                                        {
                                                          "value": "\"agentBlockId\": block.id",
                                                          "children": [
                                                            {
                                                              "value": "\"agentBlockId\"",
                                                              "children": [
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "agentBlockId",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "block.id",
                                                              "children": [
                                                                {
                                                                  "value": "block",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "id",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "\"agentGraphId\": graph.id",
                                                          "children": [
                                                            {
                                                              "value": "\"agentGraphId\"",
                                                              "children": [
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "agentGraphId",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "graph.id",
                                                              "children": [
                                                                {
                                                                  "value": "graph",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "id",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "\"agentGraphVersion\": graph.version",
                                                          "children": [
                                                            {
                                                              "value": "\"agentGraphVersion\"",
                                                              "children": [
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "agentGraphVersion",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "graph.version",
                                                              "children": [
                                                                {
                                                                  "value": "graph",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "version",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "\"constantInput\": \"{}\"",
                                                          "children": [
                                                            {
                                                              "value": "\"constantInput\"",
                                                              "children": [
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "constantInput",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "\"{}\"",
                                                              "children": [
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "{}",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "\"metadata\": \"{}\"",
                                                          "children": [
                                                            {
                                                              "value": "\"metadata\"",
                                                              "children": [
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "metadata",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "\"{}\"",
                                                              "children": [
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "{}",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "agent_nodes.append(node)",
                              "children": [
                                {
                                  "value": "agent_nodes.append(node)",
                                  "children": [
                                    {
                                      "value": "agent_nodes.append",
                                      "children": [
                                        {
                                          "value": "agent_nodes",
                                          "children": []
                                        },
                                        {
                                          "value": "append",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(node)",
                                      "children": [
                                        {
                                          "value": "node",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Insert AgentPresets",
              "children": []
            },
            {
              "value": "agent_presets = []",
              "children": [
                {
                  "value": "agent_presets = []",
                  "children": [
                    {
                      "value": "agent_presets",
                      "children": []
                    },
                    {
                      "value": "[]",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "print(f\"Inserting {NUM_USERS * MAX_PRESETS_PER_USER} agent presets\")",
              "children": [
                {
                  "value": "print(f\"Inserting {NUM_USERS * MAX_PRESETS_PER_USER} agent presets\")",
                  "children": [
                    {
                      "value": "print",
                      "children": []
                    },
                    {
                      "value": "(f\"Inserting {NUM_USERS * MAX_PRESETS_PER_USER} agent presets\")",
                      "children": [
                        {
                          "value": "f\"Inserting {NUM_USERS * MAX_PRESETS_PER_USER} agent presets\"",
                          "children": [
                            {
                              "value": "f\"",
                              "children": []
                            },
                            {
                              "value": "Inserting",
                              "children": []
                            },
                            {
                              "value": "{NUM_USERS * MAX_PRESETS_PER_USER}",
                              "children": [
                                {
                                  "value": "NUM_USERS * MAX_PRESETS_PER_USER",
                                  "children": [
                                    {
                                      "value": "NUM_USERS",
                                      "children": []
                                    },
                                    {
                                      "value": "MAX_PRESETS_PER_USER",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "agent presets",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "for user in users:\n        num_presets = random.randint(MIN_PRESETS_PER_USER, MAX_PRESETS_PER_USER)\n        for _ in range(num_presets):  # Create 1 AgentPreset per user\n            graph = random.choice(agent_graphs)\n            preset = await db.agentpreset.create(\n                data={\n                    \"name\": faker.sentence(nb_words=3),\n                    \"description\": faker.text(max_nb_chars=200),\n                    \"userId\": user.id,\n                    \"agentId\": graph.id,\n                    \"agentVersion\": graph.version,\n                    \"isActive\": True,\n                }\n            )\n            agent_presets.append(preset)",
              "children": [
                {
                  "value": "user",
                  "children": []
                },
                {
                  "value": "users",
                  "children": []
                },
                {
                  "value": "num_presets = random.randint(MIN_PRESETS_PER_USER, MAX_PRESETS_PER_USER)\n        for _ in range(num_presets):  # Create 1 AgentPreset per user\n            graph = random.choice(agent_graphs)\n            preset = await db.agentpreset.create(\n                data={\n                    \"name\": faker.sentence(nb_words=3),\n                    \"description\": faker.text(max_nb_chars=200),\n                    \"userId\": user.id,\n                    \"agentId\": graph.id,\n                    \"agentVersion\": graph.version,\n                    \"isActive\": True,\n                }\n            )\n            agent_presets.append(preset)",
                  "children": [
                    {
                      "value": "num_presets = random.randint(MIN_PRESETS_PER_USER, MAX_PRESETS_PER_USER)",
                      "children": [
                        {
                          "value": "num_presets = random.randint(MIN_PRESETS_PER_USER, MAX_PRESETS_PER_USER)",
                          "children": [
                            {
                              "value": "num_presets",
                              "children": []
                            },
                            {
                              "value": "random.randint(MIN_PRESETS_PER_USER, MAX_PRESETS_PER_USER)",
                              "children": [
                                {
                                  "value": "random.randint",
                                  "children": [
                                    {
                                      "value": "random",
                                      "children": []
                                    },
                                    {
                                      "value": "randint",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(MIN_PRESETS_PER_USER, MAX_PRESETS_PER_USER)",
                                  "children": [
                                    {
                                      "value": "MIN_PRESETS_PER_USER",
                                      "children": []
                                    },
                                    {
                                      "value": "MAX_PRESETS_PER_USER",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "for _ in range(num_presets):  # Create 1 AgentPreset per user\n            graph = random.choice(agent_graphs)\n            preset = await db.agentpreset.create(\n                data={\n                    \"name\": faker.sentence(nb_words=3),\n                    \"description\": faker.text(max_nb_chars=200),\n                    \"userId\": user.id,\n                    \"agentId\": graph.id,\n                    \"agentVersion\": graph.version,\n                    \"isActive\": True,\n                }\n            )\n            agent_presets.append(preset)",
                      "children": [
                        {
                          "value": "_",
                          "children": []
                        },
                        {
                          "value": "range(num_presets)",
                          "children": [
                            {
                              "value": "range",
                              "children": []
                            },
                            {
                              "value": "(num_presets)",
                              "children": [
                                {
                                  "value": "num_presets",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "# Create 1 AgentPreset per user",
                          "children": []
                        },
                        {
                          "value": "graph = random.choice(agent_graphs)\n            preset = await db.agentpreset.create(\n                data={\n                    \"name\": faker.sentence(nb_words=3),\n                    \"description\": faker.text(max_nb_chars=200),\n                    \"userId\": user.id,\n                    \"agentId\": graph.id,\n                    \"agentVersion\": graph.version,\n                    \"isActive\": True,\n                }\n            )\n            agent_presets.append(preset)",
                          "children": [
                            {
                              "value": "graph = random.choice(agent_graphs)",
                              "children": [
                                {
                                  "value": "graph = random.choice(agent_graphs)",
                                  "children": [
                                    {
                                      "value": "graph",
                                      "children": []
                                    },
                                    {
                                      "value": "random.choice(agent_graphs)",
                                      "children": [
                                        {
                                          "value": "random.choice",
                                          "children": [
                                            {
                                              "value": "random",
                                              "children": []
                                            },
                                            {
                                              "value": "choice",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(agent_graphs)",
                                          "children": [
                                            {
                                              "value": "agent_graphs",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "preset = await db.agentpreset.create(\n                data={\n                    \"name\": faker.sentence(nb_words=3),\n                    \"description\": faker.text(max_nb_chars=200),\n                    \"userId\": user.id,\n                    \"agentId\": graph.id,\n                    \"agentVersion\": graph.version,\n                    \"isActive\": True,\n                }\n            )",
                              "children": [
                                {
                                  "value": "preset = await db.agentpreset.create(\n                data={\n                    \"name\": faker.sentence(nb_words=3),\n                    \"description\": faker.text(max_nb_chars=200),\n                    \"userId\": user.id,\n                    \"agentId\": graph.id,\n                    \"agentVersion\": graph.version,\n                    \"isActive\": True,\n                }\n            )",
                                  "children": [
                                    {
                                      "value": "preset",
                                      "children": []
                                    },
                                    {
                                      "value": "await db.agentpreset.create(\n                data={\n                    \"name\": faker.sentence(nb_words=3),\n                    \"description\": faker.text(max_nb_chars=200),\n                    \"userId\": user.id,\n                    \"agentId\": graph.id,\n                    \"agentVersion\": graph.version,\n                    \"isActive\": True,\n                }\n            )",
                                      "children": [
                                        {
                                          "value": "db.agentpreset.create(\n                data={\n                    \"name\": faker.sentence(nb_words=3),\n                    \"description\": faker.text(max_nb_chars=200),\n                    \"userId\": user.id,\n                    \"agentId\": graph.id,\n                    \"agentVersion\": graph.version,\n                    \"isActive\": True,\n                }\n            )",
                                          "children": [
                                            {
                                              "value": "db.agentpreset.create",
                                              "children": [
                                                {
                                                  "value": "db.agentpreset",
                                                  "children": [
                                                    {
                                                      "value": "db",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "agentpreset",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "create",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "(\n                data={\n                    \"name\": faker.sentence(nb_words=3),\n                    \"description\": faker.text(max_nb_chars=200),\n                    \"userId\": user.id,\n                    \"agentId\": graph.id,\n                    \"agentVersion\": graph.version,\n                    \"isActive\": True,\n                }\n            )",
                                              "children": [
                                                {
                                                  "value": "data={\n                    \"name\": faker.sentence(nb_words=3),\n                    \"description\": faker.text(max_nb_chars=200),\n                    \"userId\": user.id,\n                    \"agentId\": graph.id,\n                    \"agentVersion\": graph.version,\n                    \"isActive\": True,\n                }",
                                                  "children": [
                                                    {
                                                      "value": "data",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "{\n                    \"name\": faker.sentence(nb_words=3),\n                    \"description\": faker.text(max_nb_chars=200),\n                    \"userId\": user.id,\n                    \"agentId\": graph.id,\n                    \"agentVersion\": graph.version,\n                    \"isActive\": True,\n                }",
                                                      "children": [
                                                        {
                                                          "value": "\"name\": faker.sentence(nb_words=3)",
                                                          "children": [
                                                            {
                                                              "value": "\"name\"",
                                                              "children": [
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "name",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "faker.sentence(nb_words=3)",
                                                              "children": [
                                                                {
                                                                  "value": "faker.sentence",
                                                                  "children": [
                                                                    {
                                                                      "value": "faker",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "sentence",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "value": "(nb_words=3)",
                                                                  "children": [
                                                                    {
                                                                      "value": "nb_words=3",
                                                                      "children": [
                                                                        {
                                                                          "value": "nb_words",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "value": "3",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "\"description\": faker.text(max_nb_chars=200)",
                                                          "children": [
                                                            {
                                                              "value": "\"description\"",
                                                              "children": [
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "description",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "faker.text(max_nb_chars=200)",
                                                              "children": [
                                                                {
                                                                  "value": "faker.text",
                                                                  "children": [
                                                                    {
                                                                      "value": "faker",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "text",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "value": "(max_nb_chars=200)",
                                                                  "children": [
                                                                    {
                                                                      "value": "max_nb_chars=200",
                                                                      "children": [
                                                                        {
                                                                          "value": "max_nb_chars",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "value": "200",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "\"userId\": user.id",
                                                          "children": [
                                                            {
                                                              "value": "\"userId\"",
                                                              "children": [
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "userId",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "user.id",
                                                              "children": [
                                                                {
                                                                  "value": "user",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "id",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "\"agentId\": graph.id",
                                                          "children": [
                                                            {
                                                              "value": "\"agentId\"",
                                                              "children": [
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "agentId",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "graph.id",
                                                              "children": [
                                                                {
                                                                  "value": "graph",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "id",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "\"agentVersion\": graph.version",
                                                          "children": [
                                                            {
                                                              "value": "\"agentVersion\"",
                                                              "children": [
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "agentVersion",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "graph.version",
                                                              "children": [
                                                                {
                                                                  "value": "graph",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "version",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "\"isActive\": True",
                                                          "children": [
                                                            {
                                                              "value": "\"isActive\"",
                                                              "children": [
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "isActive",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "True",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "agent_presets.append(preset)",
                              "children": [
                                {
                                  "value": "agent_presets.append(preset)",
                                  "children": [
                                    {
                                      "value": "agent_presets.append",
                                      "children": [
                                        {
                                          "value": "agent_presets",
                                          "children": []
                                        },
                                        {
                                          "value": "append",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(preset)",
                                      "children": [
                                        {
                                          "value": "preset",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Insert UserAgents",
              "children": []
            },
            {
              "value": "user_agents = []",
              "children": [
                {
                  "value": "user_agents = []",
                  "children": [
                    {
                      "value": "user_agents",
                      "children": []
                    },
                    {
                      "value": "[]",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "print(f\"Inserting {NUM_USERS * MAX_AGENTS_PER_USER} user agents\")",
              "children": [
                {
                  "value": "print(f\"Inserting {NUM_USERS * MAX_AGENTS_PER_USER} user agents\")",
                  "children": [
                    {
                      "value": "print",
                      "children": []
                    },
                    {
                      "value": "(f\"Inserting {NUM_USERS * MAX_AGENTS_PER_USER} user agents\")",
                      "children": [
                        {
                          "value": "f\"Inserting {NUM_USERS * MAX_AGENTS_PER_USER} user agents\"",
                          "children": [
                            {
                              "value": "f\"",
                              "children": []
                            },
                            {
                              "value": "Inserting",
                              "children": []
                            },
                            {
                              "value": "{NUM_USERS * MAX_AGENTS_PER_USER}",
                              "children": [
                                {
                                  "value": "NUM_USERS * MAX_AGENTS_PER_USER",
                                  "children": [
                                    {
                                      "value": "NUM_USERS",
                                      "children": []
                                    },
                                    {
                                      "value": "MAX_AGENTS_PER_USER",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "user agents",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "for user in users:\n        num_agents = random.randint(MIN_AGENTS_PER_USER, MAX_AGENTS_PER_USER)\n        for _ in range(num_agents):  # Create 1 UserAgent per user\n            graph = random.choice(agent_graphs)\n            preset = random.choice(agent_presets)\n            user_agent = await db.useragent.create(\n                data={\n                    \"userId\": user.id,\n                    \"agentId\": graph.id,\n                    \"agentVersion\": graph.version,\n                    \"agentPresetId\": preset.id,\n                    \"isFavorite\": random.choice([True, False]),\n                    \"isCreatedByUser\": random.choice([True, False]),\n                    \"isArchived\": random.choice([True, False]),\n                    \"isDeleted\": random.choice([True, False]),\n                }\n            )\n            user_agents.append(user_agent)",
              "children": [
                {
                  "value": "user",
                  "children": []
                },
                {
                  "value": "users",
                  "children": []
                },
                {
                  "value": "num_agents = random.randint(MIN_AGENTS_PER_USER, MAX_AGENTS_PER_USER)\n        for _ in range(num_agents):  # Create 1 UserAgent per user\n            graph = random.choice(agent_graphs)\n            preset = random.choice(agent_presets)\n            user_agent = await db.useragent.create(\n                data={\n                    \"userId\": user.id,\n                    \"agentId\": graph.id,\n                    \"agentVersion\": graph.version,\n                    \"agentPresetId\": preset.id,\n                    \"isFavorite\": random.choice([True, False]),\n                    \"isCreatedByUser\": random.choice([True, False]),\n                    \"isArchived\": random.choice([True, False]),\n                    \"isDeleted\": random.choice([True, False]),\n                }\n            )\n            user_agents.append(user_agent)",
                  "children": [
                    {
                      "value": "num_agents = random.randint(MIN_AGENTS_PER_USER, MAX_AGENTS_PER_USER)",
                      "children": [
                        {
                          "value": "num_agents = random.randint(MIN_AGENTS_PER_USER, MAX_AGENTS_PER_USER)",
                          "children": [
                            {
                              "value": "num_agents",
                              "children": []
                            },
                            {
                              "value": "random.randint(MIN_AGENTS_PER_USER, MAX_AGENTS_PER_USER)",
                              "children": [
                                {
                                  "value": "random.randint",
                                  "children": [
                                    {
                                      "value": "random",
                                      "children": []
                                    },
                                    {
                                      "value": "randint",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(MIN_AGENTS_PER_USER, MAX_AGENTS_PER_USER)",
                                  "children": [
                                    {
                                      "value": "MIN_AGENTS_PER_USER",
                                      "children": []
                                    },
                                    {
                                      "value": "MAX_AGENTS_PER_USER",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "for _ in range(num_agents):  # Create 1 UserAgent per user\n            graph = random.choice(agent_graphs)\n            preset = random.choice(agent_presets)\n            user_agent = await db.useragent.create(\n                data={\n                    \"userId\": user.id,\n                    \"agentId\": graph.id,\n                    \"agentVersion\": graph.version,\n                    \"agentPresetId\": preset.id,\n                    \"isFavorite\": random.choice([True, False]),\n                    \"isCreatedByUser\": random.choice([True, False]),\n                    \"isArchived\": random.choice([True, False]),\n                    \"isDeleted\": random.choice([True, False]),\n                }\n            )\n            user_agents.append(user_agent)",
                      "children": [
                        {
                          "value": "_",
                          "children": []
                        },
                        {
                          "value": "range(num_agents)",
                          "children": [
                            {
                              "value": "range",
                              "children": []
                            },
                            {
                              "value": "(num_agents)",
                              "children": [
                                {
                                  "value": "num_agents",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "# Create 1 UserAgent per user",
                          "children": []
                        },
                        {
                          "value": "graph = random.choice(agent_graphs)\n            preset = random.choice(agent_presets)\n            user_agent = await db.useragent.create(\n                data={\n                    \"userId\": user.id,\n                    \"agentId\": graph.id,\n                    \"agentVersion\": graph.version,\n                    \"agentPresetId\": preset.id,\n                    \"isFavorite\": random.choice([True, False]),\n                    \"isCreatedByUser\": random.choice([True, False]),\n                    \"isArchived\": random.choice([True, False]),\n                    \"isDeleted\": random.choice([True, False]),\n                }\n            )\n            user_agents.append(user_agent)",
                          "children": [
                            {
                              "value": "graph = random.choice(agent_graphs)",
                              "children": [
                                {
                                  "value": "graph = random.choice(agent_graphs)",
                                  "children": [
                                    {
                                      "value": "graph",
                                      "children": []
                                    },
                                    {
                                      "value": "random.choice(agent_graphs)",
                                      "children": [
                                        {
                                          "value": "random.choice",
                                          "children": [
                                            {
                                              "value": "random",
                                              "children": []
                                            },
                                            {
                                              "value": "choice",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(agent_graphs)",
                                          "children": [
                                            {
                                              "value": "agent_graphs",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "preset = random.choice(agent_presets)",
                              "children": [
                                {
                                  "value": "preset = random.choice(agent_presets)",
                                  "children": [
                                    {
                                      "value": "preset",
                                      "children": []
                                    },
                                    {
                                      "value": "random.choice(agent_presets)",
                                      "children": [
                                        {
                                          "value": "random.choice",
                                          "children": [
                                            {
                                              "value": "random",
                                              "children": []
                                            },
                                            {
                                              "value": "choice",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(agent_presets)",
                                          "children": [
                                            {
                                              "value": "agent_presets",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "user_agent = await db.useragent.create(\n                data={\n                    \"userId\": user.id,\n                    \"agentId\": graph.id,\n                    \"agentVersion\": graph.version,\n                    \"agentPresetId\": preset.id,\n                    \"isFavorite\": random.choice([True, False]),\n                    \"isCreatedByUser\": random.choice([True, False]),\n                    \"isArchived\": random.choice([True, False]),\n                    \"isDeleted\": random.choice([True, False]),\n                }\n            )",
                              "children": [
                                {
                                  "value": "user_agent = await db.useragent.create(\n                data={\n                    \"userId\": user.id,\n                    \"agentId\": graph.id,\n                    \"agentVersion\": graph.version,\n                    \"agentPresetId\": preset.id,\n                    \"isFavorite\": random.choice([True, False]),\n                    \"isCreatedByUser\": random.choice([True, False]),\n                    \"isArchived\": random.choice([True, False]),\n                    \"isDeleted\": random.choice([True, False]),\n                }\n            )",
                                  "children": [
                                    {
                                      "value": "user_agent",
                                      "children": []
                                    },
                                    {
                                      "value": "await db.useragent.create(\n                data={\n                    \"userId\": user.id,\n                    \"agentId\": graph.id,\n                    \"agentVersion\": graph.version,\n                    \"agentPresetId\": preset.id,\n                    \"isFavorite\": random.choice([True, False]),\n                    \"isCreatedByUser\": random.choice([True, False]),\n                    \"isArchived\": random.choice([True, False]),\n                    \"isDeleted\": random.choice([True, False]),\n                }\n            )",
                                      "children": [
                                        {
                                          "value": "db.useragent.create(\n                data={\n                    \"userId\": user.id,\n                    \"agentId\": graph.id,\n                    \"agentVersion\": graph.version,\n                    \"agentPresetId\": preset.id,\n                    \"isFavorite\": random.choice([True, False]),\n                    \"isCreatedByUser\": random.choice([True, False]),\n                    \"isArchived\": random.choice([True, False]),\n                    \"isDeleted\": random.choice([True, False]),\n                }\n            )",
                                          "children": [
                                            {
                                              "value": "db.useragent.create",
                                              "children": [
                                                {
                                                  "value": "db.useragent",
                                                  "children": [
                                                    {
                                                      "value": "db",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "useragent",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "create",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "(\n                data={\n                    \"userId\": user.id,\n                    \"agentId\": graph.id,\n                    \"agentVersion\": graph.version,\n                    \"agentPresetId\": preset.id,\n                    \"isFavorite\": random.choice([True, False]),\n                    \"isCreatedByUser\": random.choice([True, False]),\n                    \"isArchived\": random.choice([True, False]),\n                    \"isDeleted\": random.choice([True, False]),\n                }\n            )",
                                              "children": [
                                                {
                                                  "value": "data={\n                    \"userId\": user.id,\n                    \"agentId\": graph.id,\n                    \"agentVersion\": graph.version,\n                    \"agentPresetId\": preset.id,\n                    \"isFavorite\": random.choice([True, False]),\n                    \"isCreatedByUser\": random.choice([True, False]),\n                    \"isArchived\": random.choice([True, False]),\n                    \"isDeleted\": random.choice([True, False]),\n                }",
                                                  "children": [
                                                    {
                                                      "value": "data",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "{\n                    \"userId\": user.id,\n                    \"agentId\": graph.id,\n                    \"agentVersion\": graph.version,\n                    \"agentPresetId\": preset.id,\n                    \"isFavorite\": random.choice([True, False]),\n                    \"isCreatedByUser\": random.choice([True, False]),\n                    \"isArchived\": random.choice([True, False]),\n                    \"isDeleted\": random.choice([True, False]),\n                }",
                                                      "children": [
                                                        {
                                                          "value": "\"userId\": user.id",
                                                          "children": [
                                                            {
                                                              "value": "\"userId\"",
                                                              "children": [
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "userId",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "user.id",
                                                              "children": [
                                                                {
                                                                  "value": "user",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "id",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "\"agentId\": graph.id",
                                                          "children": [
                                                            {
                                                              "value": "\"agentId\"",
                                                              "children": [
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "agentId",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "graph.id",
                                                              "children": [
                                                                {
                                                                  "value": "graph",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "id",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "\"agentVersion\": graph.version",
                                                          "children": [
                                                            {
                                                              "value": "\"agentVersion\"",
                                                              "children": [
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "agentVersion",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "graph.version",
                                                              "children": [
                                                                {
                                                                  "value": "graph",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "version",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "\"agentPresetId\": preset.id",
                                                          "children": [
                                                            {
                                                              "value": "\"agentPresetId\"",
                                                              "children": [
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "agentPresetId",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "preset.id",
                                                              "children": [
                                                                {
                                                                  "value": "preset",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "id",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "\"isFavorite\": random.choice([True, False])",
                                                          "children": [
                                                            {
                                                              "value": "\"isFavorite\"",
                                                              "children": [
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "isFavorite",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "random.choice([True, False])",
                                                              "children": [
                                                                {
                                                                  "value": "random.choice",
                                                                  "children": [
                                                                    {
                                                                      "value": "random",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "choice",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "value": "([True, False])",
                                                                  "children": [
                                                                    {
                                                                      "value": "[True, False]",
                                                                      "children": [
                                                                        {
                                                                          "value": "True",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "value": "False",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "\"isCreatedByUser\": random.choice([True, False])",
                                                          "children": [
                                                            {
                                                              "value": "\"isCreatedByUser\"",
                                                              "children": [
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "isCreatedByUser",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "random.choice([True, False])",
                                                              "children": [
                                                                {
                                                                  "value": "random.choice",
                                                                  "children": [
                                                                    {
                                                                      "value": "random",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "choice",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "value": "([True, False])",
                                                                  "children": [
                                                                    {
                                                                      "value": "[True, False]",
                                                                      "children": [
                                                                        {
                                                                          "value": "True",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "value": "False",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "\"isArchived\": random.choice([True, False])",
                                                          "children": [
                                                            {
                                                              "value": "\"isArchived\"",
                                                              "children": [
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "isArchived",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "random.choice([True, False])",
                                                              "children": [
                                                                {
                                                                  "value": "random.choice",
                                                                  "children": [
                                                                    {
                                                                      "value": "random",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "choice",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "value": "([True, False])",
                                                                  "children": [
                                                                    {
                                                                      "value": "[True, False]",
                                                                      "children": [
                                                                        {
                                                                          "value": "True",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "value": "False",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "\"isDeleted\": random.choice([True, False])",
                                                          "children": [
                                                            {
                                                              "value": "\"isDeleted\"",
                                                              "children": [
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "isDeleted",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "random.choice([True, False])",
                                                              "children": [
                                                                {
                                                                  "value": "random.choice",
                                                                  "children": [
                                                                    {
                                                                      "value": "random",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "choice",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "value": "([True, False])",
                                                                  "children": [
                                                                    {
                                                                      "value": "[True, False]",
                                                                      "children": [
                                                                        {
                                                                          "value": "True",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "value": "False",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "user_agents.append(user_agent)",
                              "children": [
                                {
                                  "value": "user_agents.append(user_agent)",
                                  "children": [
                                    {
                                      "value": "user_agents.append",
                                      "children": [
                                        {
                                          "value": "user_agents",
                                          "children": []
                                        },
                                        {
                                          "value": "append",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(user_agent)",
                                      "children": [
                                        {
                                          "value": "user_agent",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Insert AgentGraphExecutions",
              "children": []
            },
            {
              "value": "# Insert AgentGraphExecutions",
              "children": []
            },
            {
              "value": "agent_graph_executions = []",
              "children": [
                {
                  "value": "agent_graph_executions = []",
                  "children": [
                    {
                      "value": "agent_graph_executions",
                      "children": []
                    },
                    {
                      "value": "[]",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "print(\n        f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER * MAX_EXECUTIONS_PER_GRAPH} agent graph executions\"\n    )",
              "children": [
                {
                  "value": "print(\n        f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER * MAX_EXECUTIONS_PER_GRAPH} agent graph executions\"\n    )",
                  "children": [
                    {
                      "value": "print",
                      "children": []
                    },
                    {
                      "value": "(\n        f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER * MAX_EXECUTIONS_PER_GRAPH} agent graph executions\"\n    )",
                      "children": [
                        {
                          "value": "f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER * MAX_EXECUTIONS_PER_GRAPH} agent graph executions\"",
                          "children": [
                            {
                              "value": "f\"",
                              "children": []
                            },
                            {
                              "value": "Inserting",
                              "children": []
                            },
                            {
                              "value": "{NUM_USERS * MAX_GRAPHS_PER_USER * MAX_EXECUTIONS_PER_GRAPH}",
                              "children": [
                                {
                                  "value": "NUM_USERS * MAX_GRAPHS_PER_USER * MAX_EXECUTIONS_PER_GRAPH",
                                  "children": [
                                    {
                                      "value": "NUM_USERS * MAX_GRAPHS_PER_USER",
                                      "children": [
                                        {
                                          "value": "NUM_USERS",
                                          "children": []
                                        },
                                        {
                                          "value": "MAX_GRAPHS_PER_USER",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "MAX_EXECUTIONS_PER_GRAPH",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "agent graph executions",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "graph_execution_data = []",
              "children": [
                {
                  "value": "graph_execution_data = []",
                  "children": [
                    {
                      "value": "graph_execution_data",
                      "children": []
                    },
                    {
                      "value": "[]",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "for graph in agent_graphs:\n        user = random.choice(users)\n        num_executions = random.randint(\n            MIN_EXECUTIONS_PER_GRAPH, MAX_EXECUTIONS_PER_GRAPH\n        )\n        for _ in range(num_executions):\n            matching_presets = [p for p in agent_presets if p.agentId == graph.id]\n            preset = (\n                random.choice(matching_presets)\n                if matching_presets and random.random() < 0.5\n                else None\n            )\n\n            graph_execution_data.append(\n                {\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"userId\": user.id,\n                    \"executionStatus\": prisma.enums.AgentExecutionStatus.COMPLETED,\n                    \"startedAt\": faker.date_time_this_year(),\n                    \"agentPresetId\": preset.id if preset else None,\n                }\n            )",
              "children": [
                {
                  "value": "graph",
                  "children": []
                },
                {
                  "value": "agent_graphs",
                  "children": []
                },
                {
                  "value": "user = random.choice(users)\n        num_executions = random.randint(\n            MIN_EXECUTIONS_PER_GRAPH, MAX_EXECUTIONS_PER_GRAPH\n        )\n        for _ in range(num_executions):\n            matching_presets = [p for p in agent_presets if p.agentId == graph.id]\n            preset = (\n                random.choice(matching_presets)\n                if matching_presets and random.random() < 0.5\n                else None\n            )\n\n            graph_execution_data.append(\n                {\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"userId\": user.id,\n                    \"executionStatus\": prisma.enums.AgentExecutionStatus.COMPLETED,\n                    \"startedAt\": faker.date_time_this_year(),\n                    \"agentPresetId\": preset.id if preset else None,\n                }\n            )",
                  "children": [
                    {
                      "value": "user = random.choice(users)",
                      "children": [
                        {
                          "value": "user = random.choice(users)",
                          "children": [
                            {
                              "value": "user",
                              "children": []
                            },
                            {
                              "value": "random.choice(users)",
                              "children": [
                                {
                                  "value": "random.choice",
                                  "children": [
                                    {
                                      "value": "random",
                                      "children": []
                                    },
                                    {
                                      "value": "choice",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(users)",
                                  "children": [
                                    {
                                      "value": "users",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "num_executions = random.randint(\n            MIN_EXECUTIONS_PER_GRAPH, MAX_EXECUTIONS_PER_GRAPH\n        )",
                      "children": [
                        {
                          "value": "num_executions = random.randint(\n            MIN_EXECUTIONS_PER_GRAPH, MAX_EXECUTIONS_PER_GRAPH\n        )",
                          "children": [
                            {
                              "value": "num_executions",
                              "children": []
                            },
                            {
                              "value": "random.randint(\n            MIN_EXECUTIONS_PER_GRAPH, MAX_EXECUTIONS_PER_GRAPH\n        )",
                              "children": [
                                {
                                  "value": "random.randint",
                                  "children": [
                                    {
                                      "value": "random",
                                      "children": []
                                    },
                                    {
                                      "value": "randint",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(\n            MIN_EXECUTIONS_PER_GRAPH, MAX_EXECUTIONS_PER_GRAPH\n        )",
                                  "children": [
                                    {
                                      "value": "MIN_EXECUTIONS_PER_GRAPH",
                                      "children": []
                                    },
                                    {
                                      "value": "MAX_EXECUTIONS_PER_GRAPH",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "for _ in range(num_executions):\n            matching_presets = [p for p in agent_presets if p.agentId == graph.id]\n            preset = (\n                random.choice(matching_presets)\n                if matching_presets and random.random() < 0.5\n                else None\n            )\n\n            graph_execution_data.append(\n                {\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"userId\": user.id,\n                    \"executionStatus\": prisma.enums.AgentExecutionStatus.COMPLETED,\n                    \"startedAt\": faker.date_time_this_year(),\n                    \"agentPresetId\": preset.id if preset else None,\n                }\n            )",
                      "children": [
                        {
                          "value": "_",
                          "children": []
                        },
                        {
                          "value": "range(num_executions)",
                          "children": [
                            {
                              "value": "range",
                              "children": []
                            },
                            {
                              "value": "(num_executions)",
                              "children": [
                                {
                                  "value": "num_executions",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "matching_presets = [p for p in agent_presets if p.agentId == graph.id]\n            preset = (\n                random.choice(matching_presets)\n                if matching_presets and random.random() < 0.5\n                else None\n            )\n\n            graph_execution_data.append(\n                {\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"userId\": user.id,\n                    \"executionStatus\": prisma.enums.AgentExecutionStatus.COMPLETED,\n                    \"startedAt\": faker.date_time_this_year(),\n                    \"agentPresetId\": preset.id if preset else None,\n                }\n            )",
                          "children": [
                            {
                              "value": "matching_presets = [p for p in agent_presets if p.agentId == graph.id]",
                              "children": [
                                {
                                  "value": "matching_presets = [p for p in agent_presets if p.agentId == graph.id]",
                                  "children": [
                                    {
                                      "value": "matching_presets",
                                      "children": []
                                    },
                                    {
                                      "value": "[p for p in agent_presets if p.agentId == graph.id]",
                                      "children": [
                                        {
                                          "value": "p",
                                          "children": []
                                        },
                                        {
                                          "value": "for p in agent_presets",
                                          "children": [
                                            {
                                              "value": "p",
                                              "children": []
                                            },
                                            {
                                              "value": "agent_presets",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "if p.agentId == graph.id",
                                          "children": [
                                            {
                                              "value": "p.agentId == graph.id",
                                              "children": [
                                                {
                                                  "value": "p.agentId",
                                                  "children": [
                                                    {
                                                      "value": "p",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "agentId",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "graph.id",
                                                  "children": [
                                                    {
                                                      "value": "graph",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "id",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "preset = (\n                random.choice(matching_presets)\n                if matching_presets and random.random() < 0.5\n                else None\n            )",
                              "children": [
                                {
                                  "value": "preset = (\n                random.choice(matching_presets)\n                if matching_presets and random.random() < 0.5\n                else None\n            )",
                                  "children": [
                                    {
                                      "value": "preset",
                                      "children": []
                                    },
                                    {
                                      "value": "(\n                random.choice(matching_presets)\n                if matching_presets and random.random() < 0.5\n                else None\n            )",
                                      "children": [
                                        {
                                          "value": "random.choice(matching_presets)\n                if matching_presets and random.random() < 0.5\n                else None",
                                          "children": [
                                            {
                                              "value": "random.choice(matching_presets)",
                                              "children": [
                                                {
                                                  "value": "random.choice",
                                                  "children": [
                                                    {
                                                      "value": "random",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "choice",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "(matching_presets)",
                                                  "children": [
                                                    {
                                                      "value": "matching_presets",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "matching_presets and random.random() < 0.5",
                                              "children": [
                                                {
                                                  "value": "matching_presets",
                                                  "children": []
                                                },
                                                {
                                                  "value": "random.random() < 0.5",
                                                  "children": [
                                                    {
                                                      "value": "random.random()",
                                                      "children": [
                                                        {
                                                          "value": "random.random",
                                                          "children": [
                                                            {
                                                              "value": "random",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "random",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "()",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "0.5",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "None",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "graph_execution_data.append(\n                {\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"userId\": user.id,\n                    \"executionStatus\": prisma.enums.AgentExecutionStatus.COMPLETED,\n                    \"startedAt\": faker.date_time_this_year(),\n                    \"agentPresetId\": preset.id if preset else None,\n                }\n            )",
                              "children": [
                                {
                                  "value": "graph_execution_data.append(\n                {\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"userId\": user.id,\n                    \"executionStatus\": prisma.enums.AgentExecutionStatus.COMPLETED,\n                    \"startedAt\": faker.date_time_this_year(),\n                    \"agentPresetId\": preset.id if preset else None,\n                }\n            )",
                                  "children": [
                                    {
                                      "value": "graph_execution_data.append",
                                      "children": [
                                        {
                                          "value": "graph_execution_data",
                                          "children": []
                                        },
                                        {
                                          "value": "append",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(\n                {\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"userId\": user.id,\n                    \"executionStatus\": prisma.enums.AgentExecutionStatus.COMPLETED,\n                    \"startedAt\": faker.date_time_this_year(),\n                    \"agentPresetId\": preset.id if preset else None,\n                }\n            )",
                                      "children": [
                                        {
                                          "value": "{\n                    \"agentGraphId\": graph.id,\n                    \"agentGraphVersion\": graph.version,\n                    \"userId\": user.id,\n                    \"executionStatus\": prisma.enums.AgentExecutionStatus.COMPLETED,\n                    \"startedAt\": faker.date_time_this_year(),\n                    \"agentPresetId\": preset.id if preset else None,\n                }",
                                          "children": [
                                            {
                                              "value": "\"agentGraphId\": graph.id",
                                              "children": [
                                                {
                                                  "value": "\"agentGraphId\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "agentGraphId",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "graph.id",
                                                  "children": [
                                                    {
                                                      "value": "graph",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "id",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"agentGraphVersion\": graph.version",
                                              "children": [
                                                {
                                                  "value": "\"agentGraphVersion\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "agentGraphVersion",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "graph.version",
                                                  "children": [
                                                    {
                                                      "value": "graph",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "version",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"userId\": user.id",
                                              "children": [
                                                {
                                                  "value": "\"userId\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "userId",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "user.id",
                                                  "children": [
                                                    {
                                                      "value": "user",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "id",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"executionStatus\": prisma.enums.AgentExecutionStatus.COMPLETED",
                                              "children": [
                                                {
                                                  "value": "\"executionStatus\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "executionStatus",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "prisma.enums.AgentExecutionStatus.COMPLETED",
                                                  "children": [
                                                    {
                                                      "value": "prisma.enums.AgentExecutionStatus",
                                                      "children": [
                                                        {
                                                          "value": "prisma.enums",
                                                          "children": [
                                                            {
                                                              "value": "prisma",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "enums",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "AgentExecutionStatus",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "COMPLETED",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"startedAt\": faker.date_time_this_year()",
                                              "children": [
                                                {
                                                  "value": "\"startedAt\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "startedAt",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "faker.date_time_this_year()",
                                                  "children": [
                                                    {
                                                      "value": "faker.date_time_this_year",
                                                      "children": [
                                                        {
                                                          "value": "faker",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "date_time_this_year",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "()",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"agentPresetId\": preset.id if preset else None",
                                              "children": [
                                                {
                                                  "value": "\"agentPresetId\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "agentPresetId",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "preset.id if preset else None",
                                                  "children": [
                                                    {
                                                      "value": "preset.id",
                                                      "children": [
                                                        {
                                                          "value": "preset",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "id",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "preset",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "None",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "agent_graph_executions = await db.agentgraphexecution.create_many(\n        data=graph_execution_data\n    )",
              "children": [
                {
                  "value": "agent_graph_executions = await db.agentgraphexecution.create_many(\n        data=graph_execution_data\n    )",
                  "children": [
                    {
                      "value": "agent_graph_executions",
                      "children": []
                    },
                    {
                      "value": "await db.agentgraphexecution.create_many(\n        data=graph_execution_data\n    )",
                      "children": [
                        {
                          "value": "db.agentgraphexecution.create_many(\n        data=graph_execution_data\n    )",
                          "children": [
                            {
                              "value": "db.agentgraphexecution.create_many",
                              "children": [
                                {
                                  "value": "db.agentgraphexecution",
                                  "children": [
                                    {
                                      "value": "db",
                                      "children": []
                                    },
                                    {
                                      "value": "agentgraphexecution",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "create_many",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\n        data=graph_execution_data\n    )",
                              "children": [
                                {
                                  "value": "data=graph_execution_data",
                                  "children": [
                                    {
                                      "value": "data",
                                      "children": []
                                    },
                                    {
                                      "value": "graph_execution_data",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Need to fetch the created records since create_many doesn't return them",
              "children": []
            },
            {
              "value": "agent_graph_executions = await db.agentgraphexecution.find_many()",
              "children": [
                {
                  "value": "agent_graph_executions = await db.agentgraphexecution.find_many()",
                  "children": [
                    {
                      "value": "agent_graph_executions",
                      "children": []
                    },
                    {
                      "value": "await db.agentgraphexecution.find_many()",
                      "children": [
                        {
                          "value": "db.agentgraphexecution.find_many()",
                          "children": [
                            {
                              "value": "db.agentgraphexecution.find_many",
                              "children": [
                                {
                                  "value": "db.agentgraphexecution",
                                  "children": [
                                    {
                                      "value": "db",
                                      "children": []
                                    },
                                    {
                                      "value": "agentgraphexecution",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "find_many",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "()",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Insert AgentNodeExecutions",
              "children": []
            },
            {
              "value": "print(\n        f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER * MAX_EXECUTIONS_PER_GRAPH} agent node executions\"\n    )",
              "children": [
                {
                  "value": "print(\n        f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER * MAX_EXECUTIONS_PER_GRAPH} agent node executions\"\n    )",
                  "children": [
                    {
                      "value": "print",
                      "children": []
                    },
                    {
                      "value": "(\n        f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER * MAX_EXECUTIONS_PER_GRAPH} agent node executions\"\n    )",
                      "children": [
                        {
                          "value": "f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER * MAX_EXECUTIONS_PER_GRAPH} agent node executions\"",
                          "children": [
                            {
                              "value": "f\"",
                              "children": []
                            },
                            {
                              "value": "Inserting",
                              "children": []
                            },
                            {
                              "value": "{NUM_USERS * MAX_GRAPHS_PER_USER * MAX_EXECUTIONS_PER_GRAPH}",
                              "children": [
                                {
                                  "value": "NUM_USERS * MAX_GRAPHS_PER_USER * MAX_EXECUTIONS_PER_GRAPH",
                                  "children": [
                                    {
                                      "value": "NUM_USERS * MAX_GRAPHS_PER_USER",
                                      "children": [
                                        {
                                          "value": "NUM_USERS",
                                          "children": []
                                        },
                                        {
                                          "value": "MAX_GRAPHS_PER_USER",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "MAX_EXECUTIONS_PER_GRAPH",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "agent node executions",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "node_execution_data = []",
              "children": [
                {
                  "value": "node_execution_data = []",
                  "children": [
                    {
                      "value": "node_execution_data",
                      "children": []
                    },
                    {
                      "value": "[]",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "for execution in agent_graph_executions:\n        nodes = [\n            node for node in agent_nodes if node.agentGraphId == execution.agentGraphId\n        ]\n        for node in nodes:\n            node_execution_data.append(\n                {\n                    \"agentGraphExecutionId\": execution.id,\n                    \"agentNodeId\": node.id,\n                    \"executionStatus\": prisma.enums.AgentExecutionStatus.COMPLETED,\n                    \"addedTime\": datetime.now(),\n                }\n            )",
              "children": [
                {
                  "value": "execution",
                  "children": []
                },
                {
                  "value": "agent_graph_executions",
                  "children": []
                },
                {
                  "value": "nodes = [\n            node for node in agent_nodes if node.agentGraphId == execution.agentGraphId\n        ]\n        for node in nodes:\n            node_execution_data.append(\n                {\n                    \"agentGraphExecutionId\": execution.id,\n                    \"agentNodeId\": node.id,\n                    \"executionStatus\": prisma.enums.AgentExecutionStatus.COMPLETED,\n                    \"addedTime\": datetime.now(),\n                }\n            )",
                  "children": [
                    {
                      "value": "nodes = [\n            node for node in agent_nodes if node.agentGraphId == execution.agentGraphId\n        ]",
                      "children": [
                        {
                          "value": "nodes = [\n            node for node in agent_nodes if node.agentGraphId == execution.agentGraphId\n        ]",
                          "children": [
                            {
                              "value": "nodes",
                              "children": []
                            },
                            {
                              "value": "[\n            node for node in agent_nodes if node.agentGraphId == execution.agentGraphId\n        ]",
                              "children": [
                                {
                                  "value": "node",
                                  "children": []
                                },
                                {
                                  "value": "for node in agent_nodes",
                                  "children": [
                                    {
                                      "value": "node",
                                      "children": []
                                    },
                                    {
                                      "value": "agent_nodes",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "if node.agentGraphId == execution.agentGraphId",
                                  "children": [
                                    {
                                      "value": "node.agentGraphId == execution.agentGraphId",
                                      "children": [
                                        {
                                          "value": "node.agentGraphId",
                                          "children": [
                                            {
                                              "value": "node",
                                              "children": []
                                            },
                                            {
                                              "value": "agentGraphId",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "execution.agentGraphId",
                                          "children": [
                                            {
                                              "value": "execution",
                                              "children": []
                                            },
                                            {
                                              "value": "agentGraphId",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "for node in nodes:\n            node_execution_data.append(\n                {\n                    \"agentGraphExecutionId\": execution.id,\n                    \"agentNodeId\": node.id,\n                    \"executionStatus\": prisma.enums.AgentExecutionStatus.COMPLETED,\n                    \"addedTime\": datetime.now(),\n                }\n            )",
                      "children": [
                        {
                          "value": "node",
                          "children": []
                        },
                        {
                          "value": "nodes",
                          "children": []
                        },
                        {
                          "value": "node_execution_data.append(\n                {\n                    \"agentGraphExecutionId\": execution.id,\n                    \"agentNodeId\": node.id,\n                    \"executionStatus\": prisma.enums.AgentExecutionStatus.COMPLETED,\n                    \"addedTime\": datetime.now(),\n                }\n            )",
                          "children": [
                            {
                              "value": "node_execution_data.append(\n                {\n                    \"agentGraphExecutionId\": execution.id,\n                    \"agentNodeId\": node.id,\n                    \"executionStatus\": prisma.enums.AgentExecutionStatus.COMPLETED,\n                    \"addedTime\": datetime.now(),\n                }\n            )",
                              "children": [
                                {
                                  "value": "node_execution_data.append(\n                {\n                    \"agentGraphExecutionId\": execution.id,\n                    \"agentNodeId\": node.id,\n                    \"executionStatus\": prisma.enums.AgentExecutionStatus.COMPLETED,\n                    \"addedTime\": datetime.now(),\n                }\n            )",
                                  "children": [
                                    {
                                      "value": "node_execution_data.append",
                                      "children": [
                                        {
                                          "value": "node_execution_data",
                                          "children": []
                                        },
                                        {
                                          "value": "append",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(\n                {\n                    \"agentGraphExecutionId\": execution.id,\n                    \"agentNodeId\": node.id,\n                    \"executionStatus\": prisma.enums.AgentExecutionStatus.COMPLETED,\n                    \"addedTime\": datetime.now(),\n                }\n            )",
                                      "children": [
                                        {
                                          "value": "{\n                    \"agentGraphExecutionId\": execution.id,\n                    \"agentNodeId\": node.id,\n                    \"executionStatus\": prisma.enums.AgentExecutionStatus.COMPLETED,\n                    \"addedTime\": datetime.now(),\n                }",
                                          "children": [
                                            {
                                              "value": "\"agentGraphExecutionId\": execution.id",
                                              "children": [
                                                {
                                                  "value": "\"agentGraphExecutionId\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "agentGraphExecutionId",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "execution.id",
                                                  "children": [
                                                    {
                                                      "value": "execution",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "id",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"agentNodeId\": node.id",
                                              "children": [
                                                {
                                                  "value": "\"agentNodeId\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "agentNodeId",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "node.id",
                                                  "children": [
                                                    {
                                                      "value": "node",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "id",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"executionStatus\": prisma.enums.AgentExecutionStatus.COMPLETED",
                                              "children": [
                                                {
                                                  "value": "\"executionStatus\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "executionStatus",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "prisma.enums.AgentExecutionStatus.COMPLETED",
                                                  "children": [
                                                    {
                                                      "value": "prisma.enums.AgentExecutionStatus",
                                                      "children": [
                                                        {
                                                          "value": "prisma.enums",
                                                          "children": [
                                                            {
                                                              "value": "prisma",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "enums",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "AgentExecutionStatus",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "COMPLETED",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"addedTime\": datetime.now()",
                                              "children": [
                                                {
                                                  "value": "\"addedTime\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "addedTime",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "datetime.now()",
                                                  "children": [
                                                    {
                                                      "value": "datetime.now",
                                                      "children": [
                                                        {
                                                          "value": "datetime",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "now",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "()",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "agent_node_executions = await db.agentnodeexecution.create_many(\n        data=node_execution_data\n    )",
              "children": [
                {
                  "value": "agent_node_executions = await db.agentnodeexecution.create_many(\n        data=node_execution_data\n    )",
                  "children": [
                    {
                      "value": "agent_node_executions",
                      "children": []
                    },
                    {
                      "value": "await db.agentnodeexecution.create_many(\n        data=node_execution_data\n    )",
                      "children": [
                        {
                          "value": "db.agentnodeexecution.create_many(\n        data=node_execution_data\n    )",
                          "children": [
                            {
                              "value": "db.agentnodeexecution.create_many",
                              "children": [
                                {
                                  "value": "db.agentnodeexecution",
                                  "children": [
                                    {
                                      "value": "db",
                                      "children": []
                                    },
                                    {
                                      "value": "agentnodeexecution",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "create_many",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\n        data=node_execution_data\n    )",
                              "children": [
                                {
                                  "value": "data=node_execution_data",
                                  "children": [
                                    {
                                      "value": "data",
                                      "children": []
                                    },
                                    {
                                      "value": "node_execution_data",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Need to fetch the created records since create_many doesn't return them",
              "children": []
            },
            {
              "value": "agent_node_executions = await db.agentnodeexecution.find_many()",
              "children": [
                {
                  "value": "agent_node_executions = await db.agentnodeexecution.find_many()",
                  "children": [
                    {
                      "value": "agent_node_executions",
                      "children": []
                    },
                    {
                      "value": "await db.agentnodeexecution.find_many()",
                      "children": [
                        {
                          "value": "db.agentnodeexecution.find_many()",
                          "children": [
                            {
                              "value": "db.agentnodeexecution.find_many",
                              "children": [
                                {
                                  "value": "db.agentnodeexecution",
                                  "children": [
                                    {
                                      "value": "db",
                                      "children": []
                                    },
                                    {
                                      "value": "agentnodeexecution",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "find_many",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "()",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Insert AgentNodeExecutionInputOutput",
              "children": []
            },
            {
              "value": "print(\n        f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER * MAX_EXECUTIONS_PER_GRAPH} agent node execution input/outputs\"\n    )",
              "children": [
                {
                  "value": "print(\n        f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER * MAX_EXECUTIONS_PER_GRAPH} agent node execution input/outputs\"\n    )",
                  "children": [
                    {
                      "value": "print",
                      "children": []
                    },
                    {
                      "value": "(\n        f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER * MAX_EXECUTIONS_PER_GRAPH} agent node execution input/outputs\"\n    )",
                      "children": [
                        {
                          "value": "f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER * MAX_EXECUTIONS_PER_GRAPH} agent node execution input/outputs\"",
                          "children": [
                            {
                              "value": "f\"",
                              "children": []
                            },
                            {
                              "value": "Inserting",
                              "children": []
                            },
                            {
                              "value": "{NUM_USERS * MAX_GRAPHS_PER_USER * MAX_EXECUTIONS_PER_GRAPH}",
                              "children": [
                                {
                                  "value": "NUM_USERS * MAX_GRAPHS_PER_USER * MAX_EXECUTIONS_PER_GRAPH",
                                  "children": [
                                    {
                                      "value": "NUM_USERS * MAX_GRAPHS_PER_USER",
                                      "children": [
                                        {
                                          "value": "NUM_USERS",
                                          "children": []
                                        },
                                        {
                                          "value": "MAX_GRAPHS_PER_USER",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "MAX_EXECUTIONS_PER_GRAPH",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "agent node execution input/outputs",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "input_output_data = []",
              "children": [
                {
                  "value": "input_output_data = []",
                  "children": [
                    {
                      "value": "input_output_data",
                      "children": []
                    },
                    {
                      "value": "[]",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "for node_execution in agent_node_executions:\n        # Input data\n        input_output_data.append(\n            {\n                \"name\": \"input1\",\n                \"data\": \"{}\",\n                \"time\": datetime.now(),\n                \"referencedByInputExecId\": node_execution.id,\n            }\n        )\n        # Output data\n        input_output_data.append(\n            {\n                \"name\": \"output1\",\n                \"data\": \"{}\",\n                \"time\": datetime.now(),\n                \"referencedByOutputExecId\": node_execution.id,\n            }\n        )",
              "children": [
                {
                  "value": "node_execution",
                  "children": []
                },
                {
                  "value": "agent_node_executions",
                  "children": []
                },
                {
                  "value": "# Input data",
                  "children": []
                },
                {
                  "value": "input_output_data.append(\n            {\n                \"name\": \"input1\",\n                \"data\": \"{}\",\n                \"time\": datetime.now(),\n                \"referencedByInputExecId\": node_execution.id,\n            }\n        )\n        # Output data\n        input_output_data.append(\n            {\n                \"name\": \"output1\",\n                \"data\": \"{}\",\n                \"time\": datetime.now(),\n                \"referencedByOutputExecId\": node_execution.id,\n            }\n        )",
                  "children": [
                    {
                      "value": "input_output_data.append(\n            {\n                \"name\": \"input1\",\n                \"data\": \"{}\",\n                \"time\": datetime.now(),\n                \"referencedByInputExecId\": node_execution.id,\n            }\n        )",
                      "children": [
                        {
                          "value": "input_output_data.append(\n            {\n                \"name\": \"input1\",\n                \"data\": \"{}\",\n                \"time\": datetime.now(),\n                \"referencedByInputExecId\": node_execution.id,\n            }\n        )",
                          "children": [
                            {
                              "value": "input_output_data.append",
                              "children": [
                                {
                                  "value": "input_output_data",
                                  "children": []
                                },
                                {
                                  "value": "append",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\n            {\n                \"name\": \"input1\",\n                \"data\": \"{}\",\n                \"time\": datetime.now(),\n                \"referencedByInputExecId\": node_execution.id,\n            }\n        )",
                              "children": [
                                {
                                  "value": "{\n                \"name\": \"input1\",\n                \"data\": \"{}\",\n                \"time\": datetime.now(),\n                \"referencedByInputExecId\": node_execution.id,\n            }",
                                  "children": [
                                    {
                                      "value": "\"name\": \"input1\"",
                                      "children": [
                                        {
                                          "value": "\"name\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "name",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"input1\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "input1",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"data\": \"{}\"",
                                      "children": [
                                        {
                                          "value": "\"data\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "data",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"{}\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "{}",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"time\": datetime.now()",
                                      "children": [
                                        {
                                          "value": "\"time\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "time",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "datetime.now()",
                                          "children": [
                                            {
                                              "value": "datetime.now",
                                              "children": [
                                                {
                                                  "value": "datetime",
                                                  "children": []
                                                },
                                                {
                                                  "value": "now",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "()",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"referencedByInputExecId\": node_execution.id",
                                      "children": [
                                        {
                                          "value": "\"referencedByInputExecId\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "referencedByInputExecId",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "node_execution.id",
                                          "children": [
                                            {
                                              "value": "node_execution",
                                              "children": []
                                            },
                                            {
                                              "value": "id",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "# Output data",
                      "children": []
                    },
                    {
                      "value": "input_output_data.append(\n            {\n                \"name\": \"output1\",\n                \"data\": \"{}\",\n                \"time\": datetime.now(),\n                \"referencedByOutputExecId\": node_execution.id,\n            }\n        )",
                      "children": [
                        {
                          "value": "input_output_data.append(\n            {\n                \"name\": \"output1\",\n                \"data\": \"{}\",\n                \"time\": datetime.now(),\n                \"referencedByOutputExecId\": node_execution.id,\n            }\n        )",
                          "children": [
                            {
                              "value": "input_output_data.append",
                              "children": [
                                {
                                  "value": "input_output_data",
                                  "children": []
                                },
                                {
                                  "value": "append",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\n            {\n                \"name\": \"output1\",\n                \"data\": \"{}\",\n                \"time\": datetime.now(),\n                \"referencedByOutputExecId\": node_execution.id,\n            }\n        )",
                              "children": [
                                {
                                  "value": "{\n                \"name\": \"output1\",\n                \"data\": \"{}\",\n                \"time\": datetime.now(),\n                \"referencedByOutputExecId\": node_execution.id,\n            }",
                                  "children": [
                                    {
                                      "value": "\"name\": \"output1\"",
                                      "children": [
                                        {
                                          "value": "\"name\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "name",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"output1\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "output1",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"data\": \"{}\"",
                                      "children": [
                                        {
                                          "value": "\"data\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "data",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"{}\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "{}",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"time\": datetime.now()",
                                      "children": [
                                        {
                                          "value": "\"time\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "time",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "datetime.now()",
                                          "children": [
                                            {
                                              "value": "datetime.now",
                                              "children": [
                                                {
                                                  "value": "datetime",
                                                  "children": []
                                                },
                                                {
                                                  "value": "now",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "()",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"referencedByOutputExecId\": node_execution.id",
                                      "children": [
                                        {
                                          "value": "\"referencedByOutputExecId\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "referencedByOutputExecId",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "node_execution.id",
                                          "children": [
                                            {
                                              "value": "node_execution",
                                              "children": []
                                            },
                                            {
                                              "value": "id",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "await db.agentnodeexecutioninputoutput.create_many(data=input_output_data)",
              "children": [
                {
                  "value": "await db.agentnodeexecutioninputoutput.create_many(data=input_output_data)",
                  "children": [
                    {
                      "value": "db.agentnodeexecutioninputoutput.create_many(data=input_output_data)",
                      "children": [
                        {
                          "value": "db.agentnodeexecutioninputoutput.create_many",
                          "children": [
                            {
                              "value": "db.agentnodeexecutioninputoutput",
                              "children": [
                                {
                                  "value": "db",
                                  "children": []
                                },
                                {
                                  "value": "agentnodeexecutioninputoutput",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "create_many",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(data=input_output_data)",
                          "children": [
                            {
                              "value": "data=input_output_data",
                              "children": [
                                {
                                  "value": "data",
                                  "children": []
                                },
                                {
                                  "value": "input_output_data",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Insert AgentNodeLinks",
              "children": []
            },
            {
              "value": "print(f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER} agent node links\")",
              "children": [
                {
                  "value": "print(f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER} agent node links\")",
                  "children": [
                    {
                      "value": "print",
                      "children": []
                    },
                    {
                      "value": "(f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER} agent node links\")",
                      "children": [
                        {
                          "value": "f\"Inserting {NUM_USERS * MAX_GRAPHS_PER_USER} agent node links\"",
                          "children": [
                            {
                              "value": "f\"",
                              "children": []
                            },
                            {
                              "value": "Inserting",
                              "children": []
                            },
                            {
                              "value": "{NUM_USERS * MAX_GRAPHS_PER_USER}",
                              "children": [
                                {
                                  "value": "NUM_USERS * MAX_GRAPHS_PER_USER",
                                  "children": [
                                    {
                                      "value": "NUM_USERS",
                                      "children": []
                                    },
                                    {
                                      "value": "MAX_GRAPHS_PER_USER",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "agent node links",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "for graph in agent_graphs:\n        nodes = [node for node in agent_nodes if node.agentGraphId == graph.id]\n        if len(nodes) >= 2:\n            source_node = nodes[0]\n            sink_node = nodes[1]\n            await db.agentnodelink.create(\n                data={\n                    \"agentNodeSourceId\": source_node.id,\n                    \"sourceName\": \"output1\",\n                    \"agentNodeSinkId\": sink_node.id,\n                    \"sinkName\": \"input1\",\n                    \"isStatic\": False,\n                }\n            )",
              "children": [
                {
                  "value": "graph",
                  "children": []
                },
                {
                  "value": "agent_graphs",
                  "children": []
                },
                {
                  "value": "nodes = [node for node in agent_nodes if node.agentGraphId == graph.id]\n        if len(nodes) >= 2:\n            source_node = nodes[0]\n            sink_node = nodes[1]\n            await db.agentnodelink.create(\n                data={\n                    \"agentNodeSourceId\": source_node.id,\n                    \"sourceName\": \"output1\",\n                    \"agentNodeSinkId\": sink_node.id,\n                    \"sinkName\": \"input1\",\n                    \"isStatic\": False,\n                }\n            )",
                  "children": [
                    {
                      "value": "nodes = [node for node in agent_nodes if node.agentGraphId == graph.id]",
                      "children": [
                        {
                          "value": "nodes = [node for node in agent_nodes if node.agentGraphId == graph.id]",
                          "children": [
                            {
                              "value": "nodes",
                              "children": []
                            },
                            {
                              "value": "[node for node in agent_nodes if node.agentGraphId == graph.id]",
                              "children": [
                                {
                                  "value": "node",
                                  "children": []
                                },
                                {
                                  "value": "for node in agent_nodes",
                                  "children": [
                                    {
                                      "value": "node",
                                      "children": []
                                    },
                                    {
                                      "value": "agent_nodes",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "if node.agentGraphId == graph.id",
                                  "children": [
                                    {
                                      "value": "node.agentGraphId == graph.id",
                                      "children": [
                                        {
                                          "value": "node.agentGraphId",
                                          "children": [
                                            {
                                              "value": "node",
                                              "children": []
                                            },
                                            {
                                              "value": "agentGraphId",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "graph.id",
                                          "children": [
                                            {
                                              "value": "graph",
                                              "children": []
                                            },
                                            {
                                              "value": "id",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "if len(nodes) >= 2:\n            source_node = nodes[0]\n            sink_node = nodes[1]\n            await db.agentnodelink.create(\n                data={\n                    \"agentNodeSourceId\": source_node.id,\n                    \"sourceName\": \"output1\",\n                    \"agentNodeSinkId\": sink_node.id,\n                    \"sinkName\": \"input1\",\n                    \"isStatic\": False,\n                }\n            )",
                      "children": [
                        {
                          "value": "len(nodes) >= 2",
                          "children": [
                            {
                              "value": "len(nodes)",
                              "children": [
                                {
                                  "value": "len",
                                  "children": []
                                },
                                {
                                  "value": "(nodes)",
                                  "children": [
                                    {
                                      "value": "nodes",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "2",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "source_node = nodes[0]\n            sink_node = nodes[1]\n            await db.agentnodelink.create(\n                data={\n                    \"agentNodeSourceId\": source_node.id,\n                    \"sourceName\": \"output1\",\n                    \"agentNodeSinkId\": sink_node.id,\n                    \"sinkName\": \"input1\",\n                    \"isStatic\": False,\n                }\n            )",
                          "children": [
                            {
                              "value": "source_node = nodes[0]",
                              "children": [
                                {
                                  "value": "source_node = nodes[0]",
                                  "children": [
                                    {
                                      "value": "source_node",
                                      "children": []
                                    },
                                    {
                                      "value": "nodes[0]",
                                      "children": [
                                        {
                                          "value": "nodes",
                                          "children": []
                                        },
                                        {
                                          "value": "0",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "sink_node = nodes[1]",
                              "children": [
                                {
                                  "value": "sink_node = nodes[1]",
                                  "children": [
                                    {
                                      "value": "sink_node",
                                      "children": []
                                    },
                                    {
                                      "value": "nodes[1]",
                                      "children": [
                                        {
                                          "value": "nodes",
                                          "children": []
                                        },
                                        {
                                          "value": "1",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "await db.agentnodelink.create(\n                data={\n                    \"agentNodeSourceId\": source_node.id,\n                    \"sourceName\": \"output1\",\n                    \"agentNodeSinkId\": sink_node.id,\n                    \"sinkName\": \"input1\",\n                    \"isStatic\": False,\n                }\n            )",
                              "children": [
                                {
                                  "value": "await db.agentnodelink.create(\n                data={\n                    \"agentNodeSourceId\": source_node.id,\n                    \"sourceName\": \"output1\",\n                    \"agentNodeSinkId\": sink_node.id,\n                    \"sinkName\": \"input1\",\n                    \"isStatic\": False,\n                }\n            )",
                                  "children": [
                                    {
                                      "value": "db.agentnodelink.create(\n                data={\n                    \"agentNodeSourceId\": source_node.id,\n                    \"sourceName\": \"output1\",\n                    \"agentNodeSinkId\": sink_node.id,\n                    \"sinkName\": \"input1\",\n                    \"isStatic\": False,\n                }\n            )",
                                      "children": [
                                        {
                                          "value": "db.agentnodelink.create",
                                          "children": [
                                            {
                                              "value": "db.agentnodelink",
                                              "children": [
                                                {
                                                  "value": "db",
                                                  "children": []
                                                },
                                                {
                                                  "value": "agentnodelink",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "create",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(\n                data={\n                    \"agentNodeSourceId\": source_node.id,\n                    \"sourceName\": \"output1\",\n                    \"agentNodeSinkId\": sink_node.id,\n                    \"sinkName\": \"input1\",\n                    \"isStatic\": False,\n                }\n            )",
                                          "children": [
                                            {
                                              "value": "data={\n                    \"agentNodeSourceId\": source_node.id,\n                    \"sourceName\": \"output1\",\n                    \"agentNodeSinkId\": sink_node.id,\n                    \"sinkName\": \"input1\",\n                    \"isStatic\": False,\n                }",
                                              "children": [
                                                {
                                                  "value": "data",
                                                  "children": []
                                                },
                                                {
                                                  "value": "{\n                    \"agentNodeSourceId\": source_node.id,\n                    \"sourceName\": \"output1\",\n                    \"agentNodeSinkId\": sink_node.id,\n                    \"sinkName\": \"input1\",\n                    \"isStatic\": False,\n                }",
                                                  "children": [
                                                    {
                                                      "value": "\"agentNodeSourceId\": source_node.id",
                                                      "children": [
                                                        {
                                                          "value": "\"agentNodeSourceId\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "agentNodeSourceId",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "source_node.id",
                                                          "children": [
                                                            {
                                                              "value": "source_node",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "id",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"sourceName\": \"output1\"",
                                                      "children": [
                                                        {
                                                          "value": "\"sourceName\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "sourceName",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "\"output1\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "output1",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"agentNodeSinkId\": sink_node.id",
                                                      "children": [
                                                        {
                                                          "value": "\"agentNodeSinkId\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "agentNodeSinkId",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "sink_node.id",
                                                          "children": [
                                                            {
                                                              "value": "sink_node",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "id",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"sinkName\": \"input1\"",
                                                      "children": [
                                                        {
                                                          "value": "\"sinkName\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "sinkName",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "\"input1\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "input1",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"isStatic\": False",
                                                      "children": [
                                                        {
                                                          "value": "\"isStatic\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "isStatic",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "False",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Insert AnalyticsDetails",
              "children": []
            },
            {
              "value": "print(f\"Inserting {NUM_USERS} analytics details\")",
              "children": [
                {
                  "value": "print(f\"Inserting {NUM_USERS} analytics details\")",
                  "children": [
                    {
                      "value": "print",
                      "children": []
                    },
                    {
                      "value": "(f\"Inserting {NUM_USERS} analytics details\")",
                      "children": [
                        {
                          "value": "f\"Inserting {NUM_USERS} analytics details\"",
                          "children": [
                            {
                              "value": "f\"",
                              "children": []
                            },
                            {
                              "value": "Inserting",
                              "children": []
                            },
                            {
                              "value": "{NUM_USERS}",
                              "children": [
                                {
                                  "value": "NUM_USERS",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "analytics details",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "for user in users:\n        for _ in range(1):\n            await db.analyticsdetails.create(\n                data={\n                    \"userId\": user.id,\n                    \"type\": faker.word(),\n                    \"data\": prisma.Json({}),\n                    \"dataIndex\": faker.word(),\n                }\n            )",
              "children": [
                {
                  "value": "user",
                  "children": []
                },
                {
                  "value": "users",
                  "children": []
                },
                {
                  "value": "for _ in range(1):\n            await db.analyticsdetails.create(\n                data={\n                    \"userId\": user.id,\n                    \"type\": faker.word(),\n                    \"data\": prisma.Json({}),\n                    \"dataIndex\": faker.word(),\n                }\n            )",
                  "children": [
                    {
                      "value": "for _ in range(1):\n            await db.analyticsdetails.create(\n                data={\n                    \"userId\": user.id,\n                    \"type\": faker.word(),\n                    \"data\": prisma.Json({}),\n                    \"dataIndex\": faker.word(),\n                }\n            )",
                      "children": [
                        {
                          "value": "_",
                          "children": []
                        },
                        {
                          "value": "range(1)",
                          "children": [
                            {
                              "value": "range",
                              "children": []
                            },
                            {
                              "value": "(1)",
                              "children": [
                                {
                                  "value": "1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "await db.analyticsdetails.create(\n                data={\n                    \"userId\": user.id,\n                    \"type\": faker.word(),\n                    \"data\": prisma.Json({}),\n                    \"dataIndex\": faker.word(),\n                }\n            )",
                          "children": [
                            {
                              "value": "await db.analyticsdetails.create(\n                data={\n                    \"userId\": user.id,\n                    \"type\": faker.word(),\n                    \"data\": prisma.Json({}),\n                    \"dataIndex\": faker.word(),\n                }\n            )",
                              "children": [
                                {
                                  "value": "await db.analyticsdetails.create(\n                data={\n                    \"userId\": user.id,\n                    \"type\": faker.word(),\n                    \"data\": prisma.Json({}),\n                    \"dataIndex\": faker.word(),\n                }\n            )",
                                  "children": [
                                    {
                                      "value": "db.analyticsdetails.create(\n                data={\n                    \"userId\": user.id,\n                    \"type\": faker.word(),\n                    \"data\": prisma.Json({}),\n                    \"dataIndex\": faker.word(),\n                }\n            )",
                                      "children": [
                                        {
                                          "value": "db.analyticsdetails.create",
                                          "children": [
                                            {
                                              "value": "db.analyticsdetails",
                                              "children": [
                                                {
                                                  "value": "db",
                                                  "children": []
                                                },
                                                {
                                                  "value": "analyticsdetails",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "create",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(\n                data={\n                    \"userId\": user.id,\n                    \"type\": faker.word(),\n                    \"data\": prisma.Json({}),\n                    \"dataIndex\": faker.word(),\n                }\n            )",
                                          "children": [
                                            {
                                              "value": "data={\n                    \"userId\": user.id,\n                    \"type\": faker.word(),\n                    \"data\": prisma.Json({}),\n                    \"dataIndex\": faker.word(),\n                }",
                                              "children": [
                                                {
                                                  "value": "data",
                                                  "children": []
                                                },
                                                {
                                                  "value": "{\n                    \"userId\": user.id,\n                    \"type\": faker.word(),\n                    \"data\": prisma.Json({}),\n                    \"dataIndex\": faker.word(),\n                }",
                                                  "children": [
                                                    {
                                                      "value": "\"userId\": user.id",
                                                      "children": [
                                                        {
                                                          "value": "\"userId\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "userId",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "user.id",
                                                          "children": [
                                                            {
                                                              "value": "user",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "id",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"type\": faker.word()",
                                                      "children": [
                                                        {
                                                          "value": "\"type\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "type",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "faker.word()",
                                                          "children": [
                                                            {
                                                              "value": "faker.word",
                                                              "children": [
                                                                {
                                                                  "value": "faker",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "word",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "()",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"data\": prisma.Json({})",
                                                      "children": [
                                                        {
                                                          "value": "\"data\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "data",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "prisma.Json({})",
                                                          "children": [
                                                            {
                                                              "value": "prisma.Json",
                                                              "children": [
                                                                {
                                                                  "value": "prisma",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "Json",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "({})",
                                                              "children": [
                                                                {
                                                                  "value": "{}",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"dataIndex\": faker.word()",
                                                      "children": [
                                                        {
                                                          "value": "\"dataIndex\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "dataIndex",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "faker.word()",
                                                          "children": [
                                                            {
                                                              "value": "faker.word",
                                                              "children": [
                                                                {
                                                                  "value": "faker",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "word",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "()",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Insert AnalyticsMetrics",
              "children": []
            },
            {
              "value": "print(f\"Inserting {NUM_USERS} analytics metrics\")",
              "children": [
                {
                  "value": "print(f\"Inserting {NUM_USERS} analytics metrics\")",
                  "children": [
                    {
                      "value": "print",
                      "children": []
                    },
                    {
                      "value": "(f\"Inserting {NUM_USERS} analytics metrics\")",
                      "children": [
                        {
                          "value": "f\"Inserting {NUM_USERS} analytics metrics\"",
                          "children": [
                            {
                              "value": "f\"",
                              "children": []
                            },
                            {
                              "value": "Inserting",
                              "children": []
                            },
                            {
                              "value": "{NUM_USERS}",
                              "children": [
                                {
                                  "value": "NUM_USERS",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "analytics metrics",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "for user in users:\n        for _ in range(1):\n            await db.analyticsmetrics.create(\n                data={\n                    \"userId\": user.id,\n                    \"analyticMetric\": faker.word(),\n                    \"value\": random.uniform(0, 100),\n                    \"dataString\": faker.word(),\n                }\n            )",
              "children": [
                {
                  "value": "user",
                  "children": []
                },
                {
                  "value": "users",
                  "children": []
                },
                {
                  "value": "for _ in range(1):\n            await db.analyticsmetrics.create(\n                data={\n                    \"userId\": user.id,\n                    \"analyticMetric\": faker.word(),\n                    \"value\": random.uniform(0, 100),\n                    \"dataString\": faker.word(),\n                }\n            )",
                  "children": [
                    {
                      "value": "for _ in range(1):\n            await db.analyticsmetrics.create(\n                data={\n                    \"userId\": user.id,\n                    \"analyticMetric\": faker.word(),\n                    \"value\": random.uniform(0, 100),\n                    \"dataString\": faker.word(),\n                }\n            )",
                      "children": [
                        {
                          "value": "_",
                          "children": []
                        },
                        {
                          "value": "range(1)",
                          "children": [
                            {
                              "value": "range",
                              "children": []
                            },
                            {
                              "value": "(1)",
                              "children": [
                                {
                                  "value": "1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "await db.analyticsmetrics.create(\n                data={\n                    \"userId\": user.id,\n                    \"analyticMetric\": faker.word(),\n                    \"value\": random.uniform(0, 100),\n                    \"dataString\": faker.word(),\n                }\n            )",
                          "children": [
                            {
                              "value": "await db.analyticsmetrics.create(\n                data={\n                    \"userId\": user.id,\n                    \"analyticMetric\": faker.word(),\n                    \"value\": random.uniform(0, 100),\n                    \"dataString\": faker.word(),\n                }\n            )",
                              "children": [
                                {
                                  "value": "await db.analyticsmetrics.create(\n                data={\n                    \"userId\": user.id,\n                    \"analyticMetric\": faker.word(),\n                    \"value\": random.uniform(0, 100),\n                    \"dataString\": faker.word(),\n                }\n            )",
                                  "children": [
                                    {
                                      "value": "db.analyticsmetrics.create(\n                data={\n                    \"userId\": user.id,\n                    \"analyticMetric\": faker.word(),\n                    \"value\": random.uniform(0, 100),\n                    \"dataString\": faker.word(),\n                }\n            )",
                                      "children": [
                                        {
                                          "value": "db.analyticsmetrics.create",
                                          "children": [
                                            {
                                              "value": "db.analyticsmetrics",
                                              "children": [
                                                {
                                                  "value": "db",
                                                  "children": []
                                                },
                                                {
                                                  "value": "analyticsmetrics",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "create",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(\n                data={\n                    \"userId\": user.id,\n                    \"analyticMetric\": faker.word(),\n                    \"value\": random.uniform(0, 100),\n                    \"dataString\": faker.word(),\n                }\n            )",
                                          "children": [
                                            {
                                              "value": "data={\n                    \"userId\": user.id,\n                    \"analyticMetric\": faker.word(),\n                    \"value\": random.uniform(0, 100),\n                    \"dataString\": faker.word(),\n                }",
                                              "children": [
                                                {
                                                  "value": "data",
                                                  "children": []
                                                },
                                                {
                                                  "value": "{\n                    \"userId\": user.id,\n                    \"analyticMetric\": faker.word(),\n                    \"value\": random.uniform(0, 100),\n                    \"dataString\": faker.word(),\n                }",
                                                  "children": [
                                                    {
                                                      "value": "\"userId\": user.id",
                                                      "children": [
                                                        {
                                                          "value": "\"userId\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "userId",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "user.id",
                                                          "children": [
                                                            {
                                                              "value": "user",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "id",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"analyticMetric\": faker.word()",
                                                      "children": [
                                                        {
                                                          "value": "\"analyticMetric\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "analyticMetric",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "faker.word()",
                                                          "children": [
                                                            {
                                                              "value": "faker.word",
                                                              "children": [
                                                                {
                                                                  "value": "faker",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "word",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "()",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"value\": random.uniform(0, 100)",
                                                      "children": [
                                                        {
                                                          "value": "\"value\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "value",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "random.uniform(0, 100)",
                                                          "children": [
                                                            {
                                                              "value": "random.uniform",
                                                              "children": [
                                                                {
                                                                  "value": "random",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "uniform",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "(0, 100)",
                                                              "children": [
                                                                {
                                                                  "value": "0",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "100",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"dataString\": faker.word()",
                                                      "children": [
                                                        {
                                                          "value": "\"dataString\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "dataString",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "faker.word()",
                                                          "children": [
                                                            {
                                                              "value": "faker.word",
                                                              "children": [
                                                                {
                                                                  "value": "faker",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "word",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "()",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Insert CreditTransaction (formerly UserBlockCredit)",
              "children": []
            },
            {
              "value": "print(f\"Inserting {NUM_USERS} credit transactions\")",
              "children": [
                {
                  "value": "print(f\"Inserting {NUM_USERS} credit transactions\")",
                  "children": [
                    {
                      "value": "print",
                      "children": []
                    },
                    {
                      "value": "(f\"Inserting {NUM_USERS} credit transactions\")",
                      "children": [
                        {
                          "value": "f\"Inserting {NUM_USERS} credit transactions\"",
                          "children": [
                            {
                              "value": "f\"",
                              "children": []
                            },
                            {
                              "value": "Inserting",
                              "children": []
                            },
                            {
                              "value": "{NUM_USERS}",
                              "children": [
                                {
                                  "value": "NUM_USERS",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "credit transactions",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "for user in users:\n        for _ in range(1):\n            block = random.choice(agent_blocks)\n            await db.credittransaction.create(\n                data={\n                    \"transactionKey\": str(faker.uuid4()),\n                    \"userId\": user.id,\n                    \"blockId\": block.id,\n                    \"amount\": random.randint(1, 100),\n                    \"type\": (\n                        prisma.enums.CreditTransactionType.TOP_UP\n                        if random.random() < 0.5\n                        else prisma.enums.CreditTransactionType.USAGE\n                    ),\n                    \"metadata\": prisma.Json({}),\n                }\n            )",
              "children": [
                {
                  "value": "user",
                  "children": []
                },
                {
                  "value": "users",
                  "children": []
                },
                {
                  "value": "for _ in range(1):\n            block = random.choice(agent_blocks)\n            await db.credittransaction.create(\n                data={\n                    \"transactionKey\": str(faker.uuid4()),\n                    \"userId\": user.id,\n                    \"blockId\": block.id,\n                    \"amount\": random.randint(1, 100),\n                    \"type\": (\n                        prisma.enums.CreditTransactionType.TOP_UP\n                        if random.random() < 0.5\n                        else prisma.enums.CreditTransactionType.USAGE\n                    ),\n                    \"metadata\": prisma.Json({}),\n                }\n            )",
                  "children": [
                    {
                      "value": "for _ in range(1):\n            block = random.choice(agent_blocks)\n            await db.credittransaction.create(\n                data={\n                    \"transactionKey\": str(faker.uuid4()),\n                    \"userId\": user.id,\n                    \"blockId\": block.id,\n                    \"amount\": random.randint(1, 100),\n                    \"type\": (\n                        prisma.enums.CreditTransactionType.TOP_UP\n                        if random.random() < 0.5\n                        else prisma.enums.CreditTransactionType.USAGE\n                    ),\n                    \"metadata\": prisma.Json({}),\n                }\n            )",
                      "children": [
                        {
                          "value": "_",
                          "children": []
                        },
                        {
                          "value": "range(1)",
                          "children": [
                            {
                              "value": "range",
                              "children": []
                            },
                            {
                              "value": "(1)",
                              "children": [
                                {
                                  "value": "1",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "block = random.choice(agent_blocks)\n            await db.credittransaction.create(\n                data={\n                    \"transactionKey\": str(faker.uuid4()),\n                    \"userId\": user.id,\n                    \"blockId\": block.id,\n                    \"amount\": random.randint(1, 100),\n                    \"type\": (\n                        prisma.enums.CreditTransactionType.TOP_UP\n                        if random.random() < 0.5\n                        else prisma.enums.CreditTransactionType.USAGE\n                    ),\n                    \"metadata\": prisma.Json({}),\n                }\n            )",
                          "children": [
                            {
                              "value": "block = random.choice(agent_blocks)",
                              "children": [
                                {
                                  "value": "block = random.choice(agent_blocks)",
                                  "children": [
                                    {
                                      "value": "block",
                                      "children": []
                                    },
                                    {
                                      "value": "random.choice(agent_blocks)",
                                      "children": [
                                        {
                                          "value": "random.choice",
                                          "children": [
                                            {
                                              "value": "random",
                                              "children": []
                                            },
                                            {
                                              "value": "choice",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(agent_blocks)",
                                          "children": [
                                            {
                                              "value": "agent_blocks",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "await db.credittransaction.create(\n                data={\n                    \"transactionKey\": str(faker.uuid4()),\n                    \"userId\": user.id,\n                    \"blockId\": block.id,\n                    \"amount\": random.randint(1, 100),\n                    \"type\": (\n                        prisma.enums.CreditTransactionType.TOP_UP\n                        if random.random() < 0.5\n                        else prisma.enums.CreditTransactionType.USAGE\n                    ),\n                    \"metadata\": prisma.Json({}),\n                }\n            )",
                              "children": [
                                {
                                  "value": "await db.credittransaction.create(\n                data={\n                    \"transactionKey\": str(faker.uuid4()),\n                    \"userId\": user.id,\n                    \"blockId\": block.id,\n                    \"amount\": random.randint(1, 100),\n                    \"type\": (\n                        prisma.enums.CreditTransactionType.TOP_UP\n                        if random.random() < 0.5\n                        else prisma.enums.CreditTransactionType.USAGE\n                    ),\n                    \"metadata\": prisma.Json({}),\n                }\n            )",
                                  "children": [
                                    {
                                      "value": "db.credittransaction.create(\n                data={\n                    \"transactionKey\": str(faker.uuid4()),\n                    \"userId\": user.id,\n                    \"blockId\": block.id,\n                    \"amount\": random.randint(1, 100),\n                    \"type\": (\n                        prisma.enums.CreditTransactionType.TOP_UP\n                        if random.random() < 0.5\n                        else prisma.enums.CreditTransactionType.USAGE\n                    ),\n                    \"metadata\": prisma.Json({}),\n                }\n            )",
                                      "children": [
                                        {
                                          "value": "db.credittransaction.create",
                                          "children": [
                                            {
                                              "value": "db.credittransaction",
                                              "children": [
                                                {
                                                  "value": "db",
                                                  "children": []
                                                },
                                                {
                                                  "value": "credittransaction",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "create",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(\n                data={\n                    \"transactionKey\": str(faker.uuid4()),\n                    \"userId\": user.id,\n                    \"blockId\": block.id,\n                    \"amount\": random.randint(1, 100),\n                    \"type\": (\n                        prisma.enums.CreditTransactionType.TOP_UP\n                        if random.random() < 0.5\n                        else prisma.enums.CreditTransactionType.USAGE\n                    ),\n                    \"metadata\": prisma.Json({}),\n                }\n            )",
                                          "children": [
                                            {
                                              "value": "data={\n                    \"transactionKey\": str(faker.uuid4()),\n                    \"userId\": user.id,\n                    \"blockId\": block.id,\n                    \"amount\": random.randint(1, 100),\n                    \"type\": (\n                        prisma.enums.CreditTransactionType.TOP_UP\n                        if random.random() < 0.5\n                        else prisma.enums.CreditTransactionType.USAGE\n                    ),\n                    \"metadata\": prisma.Json({}),\n                }",
                                              "children": [
                                                {
                                                  "value": "data",
                                                  "children": []
                                                },
                                                {
                                                  "value": "{\n                    \"transactionKey\": str(faker.uuid4()),\n                    \"userId\": user.id,\n                    \"blockId\": block.id,\n                    \"amount\": random.randint(1, 100),\n                    \"type\": (\n                        prisma.enums.CreditTransactionType.TOP_UP\n                        if random.random() < 0.5\n                        else prisma.enums.CreditTransactionType.USAGE\n                    ),\n                    \"metadata\": prisma.Json({}),\n                }",
                                                  "children": [
                                                    {
                                                      "value": "\"transactionKey\": str(faker.uuid4())",
                                                      "children": [
                                                        {
                                                          "value": "\"transactionKey\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "transactionKey",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "str(faker.uuid4())",
                                                          "children": [
                                                            {
                                                              "value": "str",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "(faker.uuid4())",
                                                              "children": [
                                                                {
                                                                  "value": "faker.uuid4()",
                                                                  "children": [
                                                                    {
                                                                      "value": "faker.uuid4",
                                                                      "children": [
                                                                        {
                                                                          "value": "faker",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "value": "uuid4",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "value": "()",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"userId\": user.id",
                                                      "children": [
                                                        {
                                                          "value": "\"userId\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "userId",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "user.id",
                                                          "children": [
                                                            {
                                                              "value": "user",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "id",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"blockId\": block.id",
                                                      "children": [
                                                        {
                                                          "value": "\"blockId\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "blockId",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "block.id",
                                                          "children": [
                                                            {
                                                              "value": "block",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "id",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"amount\": random.randint(1, 100)",
                                                      "children": [
                                                        {
                                                          "value": "\"amount\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "amount",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "random.randint(1, 100)",
                                                          "children": [
                                                            {
                                                              "value": "random.randint",
                                                              "children": [
                                                                {
                                                                  "value": "random",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "randint",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "(1, 100)",
                                                              "children": [
                                                                {
                                                                  "value": "1",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "100",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"type\": (\n                        prisma.enums.CreditTransactionType.TOP_UP\n                        if random.random() < 0.5\n                        else prisma.enums.CreditTransactionType.USAGE\n                    )",
                                                      "children": [
                                                        {
                                                          "value": "\"type\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "type",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "(\n                        prisma.enums.CreditTransactionType.TOP_UP\n                        if random.random() < 0.5\n                        else prisma.enums.CreditTransactionType.USAGE\n                    )",
                                                          "children": [
                                                            {
                                                              "value": "prisma.enums.CreditTransactionType.TOP_UP\n                        if random.random() < 0.5\n                        else prisma.enums.CreditTransactionType.USAGE",
                                                              "children": [
                                                                {
                                                                  "value": "prisma.enums.CreditTransactionType.TOP_UP",
                                                                  "children": [
                                                                    {
                                                                      "value": "prisma.enums.CreditTransactionType",
                                                                      "children": [
                                                                        {
                                                                          "value": "prisma.enums",
                                                                          "children": [
                                                                            {
                                                                              "value": "prisma",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "value": "enums",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "value": "CreditTransactionType",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "value": "TOP_UP",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "value": "random.random() < 0.5",
                                                                  "children": [
                                                                    {
                                                                      "value": "random.random()",
                                                                      "children": [
                                                                        {
                                                                          "value": "random.random",
                                                                          "children": [
                                                                            {
                                                                              "value": "random",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "value": "random",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "value": "()",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "value": "0.5",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "value": "prisma.enums.CreditTransactionType.USAGE",
                                                                  "children": [
                                                                    {
                                                                      "value": "prisma.enums.CreditTransactionType",
                                                                      "children": [
                                                                        {
                                                                          "value": "prisma.enums",
                                                                          "children": [
                                                                            {
                                                                              "value": "prisma",
                                                                              "children": []
                                                                            },
                                                                            {
                                                                              "value": "enums",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "value": "CreditTransactionType",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    },
                                                                    {
                                                                      "value": "USAGE",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"metadata\": prisma.Json({})",
                                                      "children": [
                                                        {
                                                          "value": "\"metadata\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "metadata",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "prisma.Json({})",
                                                          "children": [
                                                            {
                                                              "value": "prisma.Json",
                                                              "children": [
                                                                {
                                                                  "value": "prisma",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "Json",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "({})",
                                                              "children": [
                                                                {
                                                                  "value": "{}",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Insert Profiles",
              "children": []
            },
            {
              "value": "profiles = []",
              "children": [
                {
                  "value": "profiles = []",
                  "children": [
                    {
                      "value": "profiles",
                      "children": []
                    },
                    {
                      "value": "[]",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "print(f\"Inserting {NUM_USERS} profiles\")",
              "children": [
                {
                  "value": "print(f\"Inserting {NUM_USERS} profiles\")",
                  "children": [
                    {
                      "value": "print",
                      "children": []
                    },
                    {
                      "value": "(f\"Inserting {NUM_USERS} profiles\")",
                      "children": [
                        {
                          "value": "f\"Inserting {NUM_USERS} profiles\"",
                          "children": [
                            {
                              "value": "f\"",
                              "children": []
                            },
                            {
                              "value": "Inserting",
                              "children": []
                            },
                            {
                              "value": "{NUM_USERS}",
                              "children": [
                                {
                                  "value": "NUM_USERS",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "profiles",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "for user in users:\n        profile = await db.profile.create(\n            data={\n                \"userId\": user.id,\n                \"name\": user.name or faker.name(),\n                \"username\": faker.unique.user_name(),\n                \"description\": faker.text(),\n                \"links\": [faker.url() for _ in range(3)],\n                \"avatarUrl\": get_image(),\n            }\n        )\n        profiles.append(profile)",
              "children": [
                {
                  "value": "user",
                  "children": []
                },
                {
                  "value": "users",
                  "children": []
                },
                {
                  "value": "profile = await db.profile.create(\n            data={\n                \"userId\": user.id,\n                \"name\": user.name or faker.name(),\n                \"username\": faker.unique.user_name(),\n                \"description\": faker.text(),\n                \"links\": [faker.url() for _ in range(3)],\n                \"avatarUrl\": get_image(),\n            }\n        )\n        profiles.append(profile)",
                  "children": [
                    {
                      "value": "profile = await db.profile.create(\n            data={\n                \"userId\": user.id,\n                \"name\": user.name or faker.name(),\n                \"username\": faker.unique.user_name(),\n                \"description\": faker.text(),\n                \"links\": [faker.url() for _ in range(3)],\n                \"avatarUrl\": get_image(),\n            }\n        )",
                      "children": [
                        {
                          "value": "profile = await db.profile.create(\n            data={\n                \"userId\": user.id,\n                \"name\": user.name or faker.name(),\n                \"username\": faker.unique.user_name(),\n                \"description\": faker.text(),\n                \"links\": [faker.url() for _ in range(3)],\n                \"avatarUrl\": get_image(),\n            }\n        )",
                          "children": [
                            {
                              "value": "profile",
                              "children": []
                            },
                            {
                              "value": "await db.profile.create(\n            data={\n                \"userId\": user.id,\n                \"name\": user.name or faker.name(),\n                \"username\": faker.unique.user_name(),\n                \"description\": faker.text(),\n                \"links\": [faker.url() for _ in range(3)],\n                \"avatarUrl\": get_image(),\n            }\n        )",
                              "children": [
                                {
                                  "value": "db.profile.create(\n            data={\n                \"userId\": user.id,\n                \"name\": user.name or faker.name(),\n                \"username\": faker.unique.user_name(),\n                \"description\": faker.text(),\n                \"links\": [faker.url() for _ in range(3)],\n                \"avatarUrl\": get_image(),\n            }\n        )",
                                  "children": [
                                    {
                                      "value": "db.profile.create",
                                      "children": [
                                        {
                                          "value": "db.profile",
                                          "children": [
                                            {
                                              "value": "db",
                                              "children": []
                                            },
                                            {
                                              "value": "profile",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "create",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(\n            data={\n                \"userId\": user.id,\n                \"name\": user.name or faker.name(),\n                \"username\": faker.unique.user_name(),\n                \"description\": faker.text(),\n                \"links\": [faker.url() for _ in range(3)],\n                \"avatarUrl\": get_image(),\n            }\n        )",
                                      "children": [
                                        {
                                          "value": "data={\n                \"userId\": user.id,\n                \"name\": user.name or faker.name(),\n                \"username\": faker.unique.user_name(),\n                \"description\": faker.text(),\n                \"links\": [faker.url() for _ in range(3)],\n                \"avatarUrl\": get_image(),\n            }",
                                          "children": [
                                            {
                                              "value": "data",
                                              "children": []
                                            },
                                            {
                                              "value": "{\n                \"userId\": user.id,\n                \"name\": user.name or faker.name(),\n                \"username\": faker.unique.user_name(),\n                \"description\": faker.text(),\n                \"links\": [faker.url() for _ in range(3)],\n                \"avatarUrl\": get_image(),\n            }",
                                              "children": [
                                                {
                                                  "value": "\"userId\": user.id",
                                                  "children": [
                                                    {
                                                      "value": "\"userId\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "userId",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "user.id",
                                                      "children": [
                                                        {
                                                          "value": "user",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "id",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"name\": user.name or faker.name()",
                                                  "children": [
                                                    {
                                                      "value": "\"name\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "name",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "user.name or faker.name()",
                                                      "children": [
                                                        {
                                                          "value": "user.name",
                                                          "children": [
                                                            {
                                                              "value": "user",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "name",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "faker.name()",
                                                          "children": [
                                                            {
                                                              "value": "faker.name",
                                                              "children": [
                                                                {
                                                                  "value": "faker",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "name",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "()",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"username\": faker.unique.user_name()",
                                                  "children": [
                                                    {
                                                      "value": "\"username\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "username",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "faker.unique.user_name()",
                                                      "children": [
                                                        {
                                                          "value": "faker.unique.user_name",
                                                          "children": [
                                                            {
                                                              "value": "faker.unique",
                                                              "children": [
                                                                {
                                                                  "value": "faker",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "unique",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "user_name",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "()",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"description\": faker.text()",
                                                  "children": [
                                                    {
                                                      "value": "\"description\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "description",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "faker.text()",
                                                      "children": [
                                                        {
                                                          "value": "faker.text",
                                                          "children": [
                                                            {
                                                              "value": "faker",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "text",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "()",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"links\": [faker.url() for _ in range(3)]",
                                                  "children": [
                                                    {
                                                      "value": "\"links\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "links",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "[faker.url() for _ in range(3)]",
                                                      "children": [
                                                        {
                                                          "value": "faker.url()",
                                                          "children": [
                                                            {
                                                              "value": "faker.url",
                                                              "children": [
                                                                {
                                                                  "value": "faker",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "url",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "()",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "for _ in range(3)",
                                                          "children": [
                                                            {
                                                              "value": "_",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "range(3)",
                                                              "children": [
                                                                {
                                                                  "value": "range",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "(3)",
                                                                  "children": [
                                                                    {
                                                                      "value": "3",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"avatarUrl\": get_image()",
                                                  "children": [
                                                    {
                                                      "value": "\"avatarUrl\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "avatarUrl",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "get_image()",
                                                      "children": [
                                                        {
                                                          "value": "get_image",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "()",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "profiles.append(profile)",
                      "children": [
                        {
                          "value": "profiles.append(profile)",
                          "children": [
                            {
                              "value": "profiles.append",
                              "children": [
                                {
                                  "value": "profiles",
                                  "children": []
                                },
                                {
                                  "value": "append",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(profile)",
                              "children": [
                                {
                                  "value": "profile",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Insert StoreListings",
              "children": []
            },
            {
              "value": "store_listings = []",
              "children": [
                {
                  "value": "store_listings = []",
                  "children": [
                    {
                      "value": "store_listings",
                      "children": []
                    },
                    {
                      "value": "[]",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "print(f\"Inserting {NUM_USERS} store listings\")",
              "children": [
                {
                  "value": "print(f\"Inserting {NUM_USERS} store listings\")",
                  "children": [
                    {
                      "value": "print",
                      "children": []
                    },
                    {
                      "value": "(f\"Inserting {NUM_USERS} store listings\")",
                      "children": [
                        {
                          "value": "f\"Inserting {NUM_USERS} store listings\"",
                          "children": [
                            {
                              "value": "f\"",
                              "children": []
                            },
                            {
                              "value": "Inserting",
                              "children": []
                            },
                            {
                              "value": "{NUM_USERS}",
                              "children": [
                                {
                                  "value": "NUM_USERS",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "store listings",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "for graph in agent_graphs:\n        user = random.choice(users)\n        listing = await db.storelisting.create(\n            data={\n                \"agentId\": graph.id,\n                \"agentVersion\": graph.version,\n                \"owningUserId\": user.id,\n                \"isApproved\": random.choice([True, False]),\n            }\n        )\n        store_listings.append(listing)",
              "children": [
                {
                  "value": "graph",
                  "children": []
                },
                {
                  "value": "agent_graphs",
                  "children": []
                },
                {
                  "value": "user = random.choice(users)\n        listing = await db.storelisting.create(\n            data={\n                \"agentId\": graph.id,\n                \"agentVersion\": graph.version,\n                \"owningUserId\": user.id,\n                \"isApproved\": random.choice([True, False]),\n            }\n        )\n        store_listings.append(listing)",
                  "children": [
                    {
                      "value": "user = random.choice(users)",
                      "children": [
                        {
                          "value": "user = random.choice(users)",
                          "children": [
                            {
                              "value": "user",
                              "children": []
                            },
                            {
                              "value": "random.choice(users)",
                              "children": [
                                {
                                  "value": "random.choice",
                                  "children": [
                                    {
                                      "value": "random",
                                      "children": []
                                    },
                                    {
                                      "value": "choice",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(users)",
                                  "children": [
                                    {
                                      "value": "users",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "listing = await db.storelisting.create(\n            data={\n                \"agentId\": graph.id,\n                \"agentVersion\": graph.version,\n                \"owningUserId\": user.id,\n                \"isApproved\": random.choice([True, False]),\n            }\n        )",
                      "children": [
                        {
                          "value": "listing = await db.storelisting.create(\n            data={\n                \"agentId\": graph.id,\n                \"agentVersion\": graph.version,\n                \"owningUserId\": user.id,\n                \"isApproved\": random.choice([True, False]),\n            }\n        )",
                          "children": [
                            {
                              "value": "listing",
                              "children": []
                            },
                            {
                              "value": "await db.storelisting.create(\n            data={\n                \"agentId\": graph.id,\n                \"agentVersion\": graph.version,\n                \"owningUserId\": user.id,\n                \"isApproved\": random.choice([True, False]),\n            }\n        )",
                              "children": [
                                {
                                  "value": "db.storelisting.create(\n            data={\n                \"agentId\": graph.id,\n                \"agentVersion\": graph.version,\n                \"owningUserId\": user.id,\n                \"isApproved\": random.choice([True, False]),\n            }\n        )",
                                  "children": [
                                    {
                                      "value": "db.storelisting.create",
                                      "children": [
                                        {
                                          "value": "db.storelisting",
                                          "children": [
                                            {
                                              "value": "db",
                                              "children": []
                                            },
                                            {
                                              "value": "storelisting",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "create",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(\n            data={\n                \"agentId\": graph.id,\n                \"agentVersion\": graph.version,\n                \"owningUserId\": user.id,\n                \"isApproved\": random.choice([True, False]),\n            }\n        )",
                                      "children": [
                                        {
                                          "value": "data={\n                \"agentId\": graph.id,\n                \"agentVersion\": graph.version,\n                \"owningUserId\": user.id,\n                \"isApproved\": random.choice([True, False]),\n            }",
                                          "children": [
                                            {
                                              "value": "data",
                                              "children": []
                                            },
                                            {
                                              "value": "{\n                \"agentId\": graph.id,\n                \"agentVersion\": graph.version,\n                \"owningUserId\": user.id,\n                \"isApproved\": random.choice([True, False]),\n            }",
                                              "children": [
                                                {
                                                  "value": "\"agentId\": graph.id",
                                                  "children": [
                                                    {
                                                      "value": "\"agentId\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "agentId",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "graph.id",
                                                      "children": [
                                                        {
                                                          "value": "graph",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "id",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"agentVersion\": graph.version",
                                                  "children": [
                                                    {
                                                      "value": "\"agentVersion\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "agentVersion",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "graph.version",
                                                      "children": [
                                                        {
                                                          "value": "graph",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "version",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"owningUserId\": user.id",
                                                  "children": [
                                                    {
                                                      "value": "\"owningUserId\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "owningUserId",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "user.id",
                                                      "children": [
                                                        {
                                                          "value": "user",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "id",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"isApproved\": random.choice([True, False])",
                                                  "children": [
                                                    {
                                                      "value": "\"isApproved\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "isApproved",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "random.choice([True, False])",
                                                      "children": [
                                                        {
                                                          "value": "random.choice",
                                                          "children": [
                                                            {
                                                              "value": "random",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "choice",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "([True, False])",
                                                          "children": [
                                                            {
                                                              "value": "[True, False]",
                                                              "children": [
                                                                {
                                                                  "value": "True",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "False",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "store_listings.append(listing)",
                      "children": [
                        {
                          "value": "store_listings.append(listing)",
                          "children": [
                            {
                              "value": "store_listings.append",
                              "children": [
                                {
                                  "value": "store_listings",
                                  "children": []
                                },
                                {
                                  "value": "append",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(listing)",
                              "children": [
                                {
                                  "value": "listing",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Insert StoreListingVersions",
              "children": []
            },
            {
              "value": "store_listing_versions = []",
              "children": [
                {
                  "value": "store_listing_versions = []",
                  "children": [
                    {
                      "value": "store_listing_versions",
                      "children": []
                    },
                    {
                      "value": "[]",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "print(f\"Inserting {NUM_USERS} store listing versions\")",
              "children": [
                {
                  "value": "print(f\"Inserting {NUM_USERS} store listing versions\")",
                  "children": [
                    {
                      "value": "print",
                      "children": []
                    },
                    {
                      "value": "(f\"Inserting {NUM_USERS} store listing versions\")",
                      "children": [
                        {
                          "value": "f\"Inserting {NUM_USERS} store listing versions\"",
                          "children": [
                            {
                              "value": "f\"",
                              "children": []
                            },
                            {
                              "value": "Inserting",
                              "children": []
                            },
                            {
                              "value": "{NUM_USERS}",
                              "children": [
                                {
                                  "value": "NUM_USERS",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "store listing versions",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "for listing in store_listings:\n        graph = [g for g in agent_graphs if g.id == listing.agentId][0]\n        version = await db.storelistingversion.create(\n            data={\n                \"agentId\": graph.id,\n                \"agentVersion\": graph.version,\n                \"slug\": faker.slug(),\n                \"name\": graph.name or faker.sentence(nb_words=3),\n                \"subHeading\": faker.sentence(),\n                \"videoUrl\": faker.url(),\n                \"imageUrls\": [get_image() for _ in range(3)],\n                \"description\": faker.text(),\n                \"categories\": [faker.word() for _ in range(3)],\n                \"isFeatured\": random.choice([True, False]),\n                \"isAvailable\": True,\n                \"isApproved\": random.choice([True, False]),\n                \"storeListingId\": listing.id,\n            }\n        )\n        store_listing_versions.append(version)",
              "children": [
                {
                  "value": "listing",
                  "children": []
                },
                {
                  "value": "store_listings",
                  "children": []
                },
                {
                  "value": "graph = [g for g in agent_graphs if g.id == listing.agentId][0]\n        version = await db.storelistingversion.create(\n            data={\n                \"agentId\": graph.id,\n                \"agentVersion\": graph.version,\n                \"slug\": faker.slug(),\n                \"name\": graph.name or faker.sentence(nb_words=3),\n                \"subHeading\": faker.sentence(),\n                \"videoUrl\": faker.url(),\n                \"imageUrls\": [get_image() for _ in range(3)],\n                \"description\": faker.text(),\n                \"categories\": [faker.word() for _ in range(3)],\n                \"isFeatured\": random.choice([True, False]),\n                \"isAvailable\": True,\n                \"isApproved\": random.choice([True, False]),\n                \"storeListingId\": listing.id,\n            }\n        )\n        store_listing_versions.append(version)",
                  "children": [
                    {
                      "value": "graph = [g for g in agent_graphs if g.id == listing.agentId][0]",
                      "children": [
                        {
                          "value": "graph = [g for g in agent_graphs if g.id == listing.agentId][0]",
                          "children": [
                            {
                              "value": "graph",
                              "children": []
                            },
                            {
                              "value": "[g for g in agent_graphs if g.id == listing.agentId][0]",
                              "children": [
                                {
                                  "value": "[g for g in agent_graphs if g.id == listing.agentId]",
                                  "children": [
                                    {
                                      "value": "g",
                                      "children": []
                                    },
                                    {
                                      "value": "for g in agent_graphs",
                                      "children": [
                                        {
                                          "value": "g",
                                          "children": []
                                        },
                                        {
                                          "value": "agent_graphs",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "if g.id == listing.agentId",
                                      "children": [
                                        {
                                          "value": "g.id == listing.agentId",
                                          "children": [
                                            {
                                              "value": "g.id",
                                              "children": [
                                                {
                                                  "value": "g",
                                                  "children": []
                                                },
                                                {
                                                  "value": "id",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "listing.agentId",
                                              "children": [
                                                {
                                                  "value": "listing",
                                                  "children": []
                                                },
                                                {
                                                  "value": "agentId",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "0",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "version = await db.storelistingversion.create(\n            data={\n                \"agentId\": graph.id,\n                \"agentVersion\": graph.version,\n                \"slug\": faker.slug(),\n                \"name\": graph.name or faker.sentence(nb_words=3),\n                \"subHeading\": faker.sentence(),\n                \"videoUrl\": faker.url(),\n                \"imageUrls\": [get_image() for _ in range(3)],\n                \"description\": faker.text(),\n                \"categories\": [faker.word() for _ in range(3)],\n                \"isFeatured\": random.choice([True, False]),\n                \"isAvailable\": True,\n                \"isApproved\": random.choice([True, False]),\n                \"storeListingId\": listing.id,\n            }\n        )",
                      "children": [
                        {
                          "value": "version = await db.storelistingversion.create(\n            data={\n                \"agentId\": graph.id,\n                \"agentVersion\": graph.version,\n                \"slug\": faker.slug(),\n                \"name\": graph.name or faker.sentence(nb_words=3),\n                \"subHeading\": faker.sentence(),\n                \"videoUrl\": faker.url(),\n                \"imageUrls\": [get_image() for _ in range(3)],\n                \"description\": faker.text(),\n                \"categories\": [faker.word() for _ in range(3)],\n                \"isFeatured\": random.choice([True, False]),\n                \"isAvailable\": True,\n                \"isApproved\": random.choice([True, False]),\n                \"storeListingId\": listing.id,\n            }\n        )",
                          "children": [
                            {
                              "value": "version",
                              "children": []
                            },
                            {
                              "value": "await db.storelistingversion.create(\n            data={\n                \"agentId\": graph.id,\n                \"agentVersion\": graph.version,\n                \"slug\": faker.slug(),\n                \"name\": graph.name or faker.sentence(nb_words=3),\n                \"subHeading\": faker.sentence(),\n                \"videoUrl\": faker.url(),\n                \"imageUrls\": [get_image() for _ in range(3)],\n                \"description\": faker.text(),\n                \"categories\": [faker.word() for _ in range(3)],\n                \"isFeatured\": random.choice([True, False]),\n                \"isAvailable\": True,\n                \"isApproved\": random.choice([True, False]),\n                \"storeListingId\": listing.id,\n            }\n        )",
                              "children": [
                                {
                                  "value": "db.storelistingversion.create(\n            data={\n                \"agentId\": graph.id,\n                \"agentVersion\": graph.version,\n                \"slug\": faker.slug(),\n                \"name\": graph.name or faker.sentence(nb_words=3),\n                \"subHeading\": faker.sentence(),\n                \"videoUrl\": faker.url(),\n                \"imageUrls\": [get_image() for _ in range(3)],\n                \"description\": faker.text(),\n                \"categories\": [faker.word() for _ in range(3)],\n                \"isFeatured\": random.choice([True, False]),\n                \"isAvailable\": True,\n                \"isApproved\": random.choice([True, False]),\n                \"storeListingId\": listing.id,\n            }\n        )",
                                  "children": [
                                    {
                                      "value": "db.storelistingversion.create",
                                      "children": [
                                        {
                                          "value": "db.storelistingversion",
                                          "children": [
                                            {
                                              "value": "db",
                                              "children": []
                                            },
                                            {
                                              "value": "storelistingversion",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "create",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(\n            data={\n                \"agentId\": graph.id,\n                \"agentVersion\": graph.version,\n                \"slug\": faker.slug(),\n                \"name\": graph.name or faker.sentence(nb_words=3),\n                \"subHeading\": faker.sentence(),\n                \"videoUrl\": faker.url(),\n                \"imageUrls\": [get_image() for _ in range(3)],\n                \"description\": faker.text(),\n                \"categories\": [faker.word() for _ in range(3)],\n                \"isFeatured\": random.choice([True, False]),\n                \"isAvailable\": True,\n                \"isApproved\": random.choice([True, False]),\n                \"storeListingId\": listing.id,\n            }\n        )",
                                      "children": [
                                        {
                                          "value": "data={\n                \"agentId\": graph.id,\n                \"agentVersion\": graph.version,\n                \"slug\": faker.slug(),\n                \"name\": graph.name or faker.sentence(nb_words=3),\n                \"subHeading\": faker.sentence(),\n                \"videoUrl\": faker.url(),\n                \"imageUrls\": [get_image() for _ in range(3)],\n                \"description\": faker.text(),\n                \"categories\": [faker.word() for _ in range(3)],\n                \"isFeatured\": random.choice([True, False]),\n                \"isAvailable\": True,\n                \"isApproved\": random.choice([True, False]),\n                \"storeListingId\": listing.id,\n            }",
                                          "children": [
                                            {
                                              "value": "data",
                                              "children": []
                                            },
                                            {
                                              "value": "{\n                \"agentId\": graph.id,\n                \"agentVersion\": graph.version,\n                \"slug\": faker.slug(),\n                \"name\": graph.name or faker.sentence(nb_words=3),\n                \"subHeading\": faker.sentence(),\n                \"videoUrl\": faker.url(),\n                \"imageUrls\": [get_image() for _ in range(3)],\n                \"description\": faker.text(),\n                \"categories\": [faker.word() for _ in range(3)],\n                \"isFeatured\": random.choice([True, False]),\n                \"isAvailable\": True,\n                \"isApproved\": random.choice([True, False]),\n                \"storeListingId\": listing.id,\n            }",
                                              "children": [
                                                {
                                                  "value": "\"agentId\": graph.id",
                                                  "children": [
                                                    {
                                                      "value": "\"agentId\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "agentId",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "graph.id",
                                                      "children": [
                                                        {
                                                          "value": "graph",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "id",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"agentVersion\": graph.version",
                                                  "children": [
                                                    {
                                                      "value": "\"agentVersion\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "agentVersion",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "graph.version",
                                                      "children": [
                                                        {
                                                          "value": "graph",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "version",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"slug\": faker.slug()",
                                                  "children": [
                                                    {
                                                      "value": "\"slug\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "slug",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "faker.slug()",
                                                      "children": [
                                                        {
                                                          "value": "faker.slug",
                                                          "children": [
                                                            {
                                                              "value": "faker",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "slug",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "()",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"name\": graph.name or faker.sentence(nb_words=3)",
                                                  "children": [
                                                    {
                                                      "value": "\"name\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "name",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "graph.name or faker.sentence(nb_words=3)",
                                                      "children": [
                                                        {
                                                          "value": "graph.name",
                                                          "children": [
                                                            {
                                                              "value": "graph",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "name",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "faker.sentence(nb_words=3)",
                                                          "children": [
                                                            {
                                                              "value": "faker.sentence",
                                                              "children": [
                                                                {
                                                                  "value": "faker",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "sentence",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "(nb_words=3)",
                                                              "children": [
                                                                {
                                                                  "value": "nb_words=3",
                                                                  "children": [
                                                                    {
                                                                      "value": "nb_words",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "3",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"subHeading\": faker.sentence()",
                                                  "children": [
                                                    {
                                                      "value": "\"subHeading\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "subHeading",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "faker.sentence()",
                                                      "children": [
                                                        {
                                                          "value": "faker.sentence",
                                                          "children": [
                                                            {
                                                              "value": "faker",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "sentence",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "()",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"videoUrl\": faker.url()",
                                                  "children": [
                                                    {
                                                      "value": "\"videoUrl\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "videoUrl",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "faker.url()",
                                                      "children": [
                                                        {
                                                          "value": "faker.url",
                                                          "children": [
                                                            {
                                                              "value": "faker",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "url",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "()",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"imageUrls\": [get_image() for _ in range(3)]",
                                                  "children": [
                                                    {
                                                      "value": "\"imageUrls\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "imageUrls",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "[get_image() for _ in range(3)]",
                                                      "children": [
                                                        {
                                                          "value": "get_image()",
                                                          "children": [
                                                            {
                                                              "value": "get_image",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "()",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "for _ in range(3)",
                                                          "children": [
                                                            {
                                                              "value": "_",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "range(3)",
                                                              "children": [
                                                                {
                                                                  "value": "range",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "(3)",
                                                                  "children": [
                                                                    {
                                                                      "value": "3",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"description\": faker.text()",
                                                  "children": [
                                                    {
                                                      "value": "\"description\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "description",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "faker.text()",
                                                      "children": [
                                                        {
                                                          "value": "faker.text",
                                                          "children": [
                                                            {
                                                              "value": "faker",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "text",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "()",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"categories\": [faker.word() for _ in range(3)]",
                                                  "children": [
                                                    {
                                                      "value": "\"categories\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "categories",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "[faker.word() for _ in range(3)]",
                                                      "children": [
                                                        {
                                                          "value": "faker.word()",
                                                          "children": [
                                                            {
                                                              "value": "faker.word",
                                                              "children": [
                                                                {
                                                                  "value": "faker",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "word",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "()",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "for _ in range(3)",
                                                          "children": [
                                                            {
                                                              "value": "_",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "range(3)",
                                                              "children": [
                                                                {
                                                                  "value": "range",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "(3)",
                                                                  "children": [
                                                                    {
                                                                      "value": "3",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"isFeatured\": random.choice([True, False])",
                                                  "children": [
                                                    {
                                                      "value": "\"isFeatured\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "isFeatured",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "random.choice([True, False])",
                                                      "children": [
                                                        {
                                                          "value": "random.choice",
                                                          "children": [
                                                            {
                                                              "value": "random",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "choice",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "([True, False])",
                                                          "children": [
                                                            {
                                                              "value": "[True, False]",
                                                              "children": [
                                                                {
                                                                  "value": "True",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "False",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"isAvailable\": True",
                                                  "children": [
                                                    {
                                                      "value": "\"isAvailable\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "isAvailable",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "True",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"isApproved\": random.choice([True, False])",
                                                  "children": [
                                                    {
                                                      "value": "\"isApproved\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "isApproved",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "random.choice([True, False])",
                                                      "children": [
                                                        {
                                                          "value": "random.choice",
                                                          "children": [
                                                            {
                                                              "value": "random",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "choice",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "([True, False])",
                                                          "children": [
                                                            {
                                                              "value": "[True, False]",
                                                              "children": [
                                                                {
                                                                  "value": "True",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "False",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"storeListingId\": listing.id",
                                                  "children": [
                                                    {
                                                      "value": "\"storeListingId\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "storeListingId",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "listing.id",
                                                      "children": [
                                                        {
                                                          "value": "listing",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "id",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "store_listing_versions.append(version)",
                      "children": [
                        {
                          "value": "store_listing_versions.append(version)",
                          "children": [
                            {
                              "value": "store_listing_versions.append",
                              "children": [
                                {
                                  "value": "store_listing_versions",
                                  "children": []
                                },
                                {
                                  "value": "append",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(version)",
                              "children": [
                                {
                                  "value": "version",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Insert StoreListingReviews",
              "children": []
            },
            {
              "value": "print(f\"Inserting {NUM_USERS * MAX_REVIEWS_PER_VERSION} store listing reviews\")",
              "children": [
                {
                  "value": "print(f\"Inserting {NUM_USERS * MAX_REVIEWS_PER_VERSION} store listing reviews\")",
                  "children": [
                    {
                      "value": "print",
                      "children": []
                    },
                    {
                      "value": "(f\"Inserting {NUM_USERS * MAX_REVIEWS_PER_VERSION} store listing reviews\")",
                      "children": [
                        {
                          "value": "f\"Inserting {NUM_USERS * MAX_REVIEWS_PER_VERSION} store listing reviews\"",
                          "children": [
                            {
                              "value": "f\"",
                              "children": []
                            },
                            {
                              "value": "Inserting",
                              "children": []
                            },
                            {
                              "value": "{NUM_USERS * MAX_REVIEWS_PER_VERSION}",
                              "children": [
                                {
                                  "value": "NUM_USERS * MAX_REVIEWS_PER_VERSION",
                                  "children": [
                                    {
                                      "value": "NUM_USERS",
                                      "children": []
                                    },
                                    {
                                      "value": "MAX_REVIEWS_PER_VERSION",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "store listing reviews",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "for version in store_listing_versions:\n        # Create a copy of users list and shuffle it to avoid duplicates\n        available_reviewers = users.copy()\n        random.shuffle(available_reviewers)\n\n        # Limit number of reviews to available unique reviewers\n        num_reviews = min(\n            random.randint(MIN_REVIEWS_PER_VERSION, MAX_REVIEWS_PER_VERSION),\n            len(available_reviewers),\n        )\n\n        # Take only the first num_reviews reviewers\n        for reviewer in available_reviewers[:num_reviews]:\n            await db.storelistingreview.create(\n                data={\n                    \"storeListingVersionId\": version.id,\n                    \"reviewByUserId\": reviewer.id,\n                    \"score\": random.randint(1, 5),\n                    \"comments\": faker.text(),\n                }\n            )",
              "children": [
                {
                  "value": "version",
                  "children": []
                },
                {
                  "value": "store_listing_versions",
                  "children": []
                },
                {
                  "value": "# Create a copy of users list and shuffle it to avoid duplicates",
                  "children": []
                },
                {
                  "value": "available_reviewers = users.copy()\n        random.shuffle(available_reviewers)\n\n        # Limit number of reviews to available unique reviewers\n        num_reviews = min(\n            random.randint(MIN_REVIEWS_PER_VERSION, MAX_REVIEWS_PER_VERSION),\n            len(available_reviewers),\n        )\n\n        # Take only the first num_reviews reviewers\n        for reviewer in available_reviewers[:num_reviews]:\n            await db.storelistingreview.create(\n                data={\n                    \"storeListingVersionId\": version.id,\n                    \"reviewByUserId\": reviewer.id,\n                    \"score\": random.randint(1, 5),\n                    \"comments\": faker.text(),\n                }\n            )",
                  "children": [
                    {
                      "value": "available_reviewers = users.copy()",
                      "children": [
                        {
                          "value": "available_reviewers = users.copy()",
                          "children": [
                            {
                              "value": "available_reviewers",
                              "children": []
                            },
                            {
                              "value": "users.copy()",
                              "children": [
                                {
                                  "value": "users.copy",
                                  "children": [
                                    {
                                      "value": "users",
                                      "children": []
                                    },
                                    {
                                      "value": "copy",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "()",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "random.shuffle(available_reviewers)",
                      "children": [
                        {
                          "value": "random.shuffle(available_reviewers)",
                          "children": [
                            {
                              "value": "random.shuffle",
                              "children": [
                                {
                                  "value": "random",
                                  "children": []
                                },
                                {
                                  "value": "shuffle",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(available_reviewers)",
                              "children": [
                                {
                                  "value": "available_reviewers",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "# Limit number of reviews to available unique reviewers",
                      "children": []
                    },
                    {
                      "value": "num_reviews = min(\n            random.randint(MIN_REVIEWS_PER_VERSION, MAX_REVIEWS_PER_VERSION),\n            len(available_reviewers),\n        )",
                      "children": [
                        {
                          "value": "num_reviews = min(\n            random.randint(MIN_REVIEWS_PER_VERSION, MAX_REVIEWS_PER_VERSION),\n            len(available_reviewers),\n        )",
                          "children": [
                            {
                              "value": "num_reviews",
                              "children": []
                            },
                            {
                              "value": "min(\n            random.randint(MIN_REVIEWS_PER_VERSION, MAX_REVIEWS_PER_VERSION),\n            len(available_reviewers),\n        )",
                              "children": [
                                {
                                  "value": "min",
                                  "children": []
                                },
                                {
                                  "value": "(\n            random.randint(MIN_REVIEWS_PER_VERSION, MAX_REVIEWS_PER_VERSION),\n            len(available_reviewers),\n        )",
                                  "children": [
                                    {
                                      "value": "random.randint(MIN_REVIEWS_PER_VERSION, MAX_REVIEWS_PER_VERSION)",
                                      "children": [
                                        {
                                          "value": "random.randint",
                                          "children": [
                                            {
                                              "value": "random",
                                              "children": []
                                            },
                                            {
                                              "value": "randint",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(MIN_REVIEWS_PER_VERSION, MAX_REVIEWS_PER_VERSION)",
                                          "children": [
                                            {
                                              "value": "MIN_REVIEWS_PER_VERSION",
                                              "children": []
                                            },
                                            {
                                              "value": "MAX_REVIEWS_PER_VERSION",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "len(available_reviewers)",
                                      "children": [
                                        {
                                          "value": "len",
                                          "children": []
                                        },
                                        {
                                          "value": "(available_reviewers)",
                                          "children": [
                                            {
                                              "value": "available_reviewers",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "# Take only the first num_reviews reviewers",
                      "children": []
                    },
                    {
                      "value": "for reviewer in available_reviewers[:num_reviews]:\n            await db.storelistingreview.create(\n                data={\n                    \"storeListingVersionId\": version.id,\n                    \"reviewByUserId\": reviewer.id,\n                    \"score\": random.randint(1, 5),\n                    \"comments\": faker.text(),\n                }\n            )",
                      "children": [
                        {
                          "value": "reviewer",
                          "children": []
                        },
                        {
                          "value": "available_reviewers[:num_reviews]",
                          "children": [
                            {
                              "value": "available_reviewers",
                              "children": []
                            },
                            {
                              "value": ":num_reviews",
                              "children": [
                                {
                                  "value": "num_reviews",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "await db.storelistingreview.create(\n                data={\n                    \"storeListingVersionId\": version.id,\n                    \"reviewByUserId\": reviewer.id,\n                    \"score\": random.randint(1, 5),\n                    \"comments\": faker.text(),\n                }\n            )",
                          "children": [
                            {
                              "value": "await db.storelistingreview.create(\n                data={\n                    \"storeListingVersionId\": version.id,\n                    \"reviewByUserId\": reviewer.id,\n                    \"score\": random.randint(1, 5),\n                    \"comments\": faker.text(),\n                }\n            )",
                              "children": [
                                {
                                  "value": "await db.storelistingreview.create(\n                data={\n                    \"storeListingVersionId\": version.id,\n                    \"reviewByUserId\": reviewer.id,\n                    \"score\": random.randint(1, 5),\n                    \"comments\": faker.text(),\n                }\n            )",
                                  "children": [
                                    {
                                      "value": "db.storelistingreview.create(\n                data={\n                    \"storeListingVersionId\": version.id,\n                    \"reviewByUserId\": reviewer.id,\n                    \"score\": random.randint(1, 5),\n                    \"comments\": faker.text(),\n                }\n            )",
                                      "children": [
                                        {
                                          "value": "db.storelistingreview.create",
                                          "children": [
                                            {
                                              "value": "db.storelistingreview",
                                              "children": [
                                                {
                                                  "value": "db",
                                                  "children": []
                                                },
                                                {
                                                  "value": "storelistingreview",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "create",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(\n                data={\n                    \"storeListingVersionId\": version.id,\n                    \"reviewByUserId\": reviewer.id,\n                    \"score\": random.randint(1, 5),\n                    \"comments\": faker.text(),\n                }\n            )",
                                          "children": [
                                            {
                                              "value": "data={\n                    \"storeListingVersionId\": version.id,\n                    \"reviewByUserId\": reviewer.id,\n                    \"score\": random.randint(1, 5),\n                    \"comments\": faker.text(),\n                }",
                                              "children": [
                                                {
                                                  "value": "data",
                                                  "children": []
                                                },
                                                {
                                                  "value": "{\n                    \"storeListingVersionId\": version.id,\n                    \"reviewByUserId\": reviewer.id,\n                    \"score\": random.randint(1, 5),\n                    \"comments\": faker.text(),\n                }",
                                                  "children": [
                                                    {
                                                      "value": "\"storeListingVersionId\": version.id",
                                                      "children": [
                                                        {
                                                          "value": "\"storeListingVersionId\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "storeListingVersionId",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "version.id",
                                                          "children": [
                                                            {
                                                              "value": "version",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "id",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"reviewByUserId\": reviewer.id",
                                                      "children": [
                                                        {
                                                          "value": "\"reviewByUserId\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "reviewByUserId",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "reviewer.id",
                                                          "children": [
                                                            {
                                                              "value": "reviewer",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "id",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"score\": random.randint(1, 5)",
                                                      "children": [
                                                        {
                                                          "value": "\"score\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "score",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "random.randint(1, 5)",
                                                          "children": [
                                                            {
                                                              "value": "random.randint",
                                                              "children": [
                                                                {
                                                                  "value": "random",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "randint",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "(1, 5)",
                                                              "children": [
                                                                {
                                                                  "value": "1",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "5",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"comments\": faker.text()",
                                                      "children": [
                                                        {
                                                          "value": "\"comments\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "comments",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "faker.text()",
                                                          "children": [
                                                            {
                                                              "value": "faker.text",
                                                              "children": [
                                                                {
                                                                  "value": "faker",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "text",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "()",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Insert StoreListingSubmissions",
              "children": []
            },
            {
              "value": "print(f\"Inserting {NUM_USERS} store listing submissions\")",
              "children": [
                {
                  "value": "print(f\"Inserting {NUM_USERS} store listing submissions\")",
                  "children": [
                    {
                      "value": "print",
                      "children": []
                    },
                    {
                      "value": "(f\"Inserting {NUM_USERS} store listing submissions\")",
                      "children": [
                        {
                          "value": "f\"Inserting {NUM_USERS} store listing submissions\"",
                          "children": [
                            {
                              "value": "f\"",
                              "children": []
                            },
                            {
                              "value": "Inserting",
                              "children": []
                            },
                            {
                              "value": "{NUM_USERS}",
                              "children": [
                                {
                                  "value": "NUM_USERS",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "store listing submissions",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "for listing in store_listings:\n        version = random.choice(store_listing_versions)\n        reviewer = random.choice(users)\n        status: prisma.enums.SubmissionStatus = random.choice(\n            [\n                prisma.enums.SubmissionStatus.PENDING,\n                prisma.enums.SubmissionStatus.APPROVED,\n                prisma.enums.SubmissionStatus.REJECTED,\n            ]\n        )\n        await db.storelistingsubmission.create(\n            data={\n                \"storeListingId\": listing.id,\n                \"storeListingVersionId\": version.id,\n                \"reviewerId\": reviewer.id,\n                \"Status\": status,\n                \"reviewComments\": faker.text(),\n            }\n        )",
              "children": [
                {
                  "value": "listing",
                  "children": []
                },
                {
                  "value": "store_listings",
                  "children": []
                },
                {
                  "value": "version = random.choice(store_listing_versions)\n        reviewer = random.choice(users)\n        status: prisma.enums.SubmissionStatus = random.choice(\n            [\n                prisma.enums.SubmissionStatus.PENDING,\n                prisma.enums.SubmissionStatus.APPROVED,\n                prisma.enums.SubmissionStatus.REJECTED,\n            ]\n        )\n        await db.storelistingsubmission.create(\n            data={\n                \"storeListingId\": listing.id,\n                \"storeListingVersionId\": version.id,\n                \"reviewerId\": reviewer.id,\n                \"Status\": status,\n                \"reviewComments\": faker.text(),\n            }\n        )",
                  "children": [
                    {
                      "value": "version = random.choice(store_listing_versions)",
                      "children": [
                        {
                          "value": "version = random.choice(store_listing_versions)",
                          "children": [
                            {
                              "value": "version",
                              "children": []
                            },
                            {
                              "value": "random.choice(store_listing_versions)",
                              "children": [
                                {
                                  "value": "random.choice",
                                  "children": [
                                    {
                                      "value": "random",
                                      "children": []
                                    },
                                    {
                                      "value": "choice",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(store_listing_versions)",
                                  "children": [
                                    {
                                      "value": "store_listing_versions",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "reviewer = random.choice(users)",
                      "children": [
                        {
                          "value": "reviewer = random.choice(users)",
                          "children": [
                            {
                              "value": "reviewer",
                              "children": []
                            },
                            {
                              "value": "random.choice(users)",
                              "children": [
                                {
                                  "value": "random.choice",
                                  "children": [
                                    {
                                      "value": "random",
                                      "children": []
                                    },
                                    {
                                      "value": "choice",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(users)",
                                  "children": [
                                    {
                                      "value": "users",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "status: prisma.enums.SubmissionStatus = random.choice(\n            [\n                prisma.enums.SubmissionStatus.PENDING,\n                prisma.enums.SubmissionStatus.APPROVED,\n                prisma.enums.SubmissionStatus.REJECTED,\n            ]\n        )",
                      "children": [
                        {
                          "value": "status: prisma.enums.SubmissionStatus = random.choice(\n            [\n                prisma.enums.SubmissionStatus.PENDING,\n                prisma.enums.SubmissionStatus.APPROVED,\n                prisma.enums.SubmissionStatus.REJECTED,\n            ]\n        )",
                          "children": [
                            {
                              "value": "status",
                              "children": []
                            },
                            {
                              "value": "prisma.enums.SubmissionStatus",
                              "children": [
                                {
                                  "value": "prisma.enums.SubmissionStatus",
                                  "children": [
                                    {
                                      "value": "prisma.enums",
                                      "children": [
                                        {
                                          "value": "prisma",
                                          "children": []
                                        },
                                        {
                                          "value": "enums",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "SubmissionStatus",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "random.choice(\n            [\n                prisma.enums.SubmissionStatus.PENDING,\n                prisma.enums.SubmissionStatus.APPROVED,\n                prisma.enums.SubmissionStatus.REJECTED,\n            ]\n        )",
                              "children": [
                                {
                                  "value": "random.choice",
                                  "children": [
                                    {
                                      "value": "random",
                                      "children": []
                                    },
                                    {
                                      "value": "choice",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(\n            [\n                prisma.enums.SubmissionStatus.PENDING,\n                prisma.enums.SubmissionStatus.APPROVED,\n                prisma.enums.SubmissionStatus.REJECTED,\n            ]\n        )",
                                  "children": [
                                    {
                                      "value": "[\n                prisma.enums.SubmissionStatus.PENDING,\n                prisma.enums.SubmissionStatus.APPROVED,\n                prisma.enums.SubmissionStatus.REJECTED,\n            ]",
                                      "children": [
                                        {
                                          "value": "prisma.enums.SubmissionStatus.PENDING",
                                          "children": [
                                            {
                                              "value": "prisma.enums.SubmissionStatus",
                                              "children": [
                                                {
                                                  "value": "prisma.enums",
                                                  "children": [
                                                    {
                                                      "value": "prisma",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "enums",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "SubmissionStatus",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "PENDING",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "prisma.enums.SubmissionStatus.APPROVED",
                                          "children": [
                                            {
                                              "value": "prisma.enums.SubmissionStatus",
                                              "children": [
                                                {
                                                  "value": "prisma.enums",
                                                  "children": [
                                                    {
                                                      "value": "prisma",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "enums",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "SubmissionStatus",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "APPROVED",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "prisma.enums.SubmissionStatus.REJECTED",
                                          "children": [
                                            {
                                              "value": "prisma.enums.SubmissionStatus",
                                              "children": [
                                                {
                                                  "value": "prisma.enums",
                                                  "children": [
                                                    {
                                                      "value": "prisma",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "enums",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "SubmissionStatus",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "REJECTED",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "await db.storelistingsubmission.create(\n            data={\n                \"storeListingId\": listing.id,\n                \"storeListingVersionId\": version.id,\n                \"reviewerId\": reviewer.id,\n                \"Status\": status,\n                \"reviewComments\": faker.text(),\n            }\n        )",
                      "children": [
                        {
                          "value": "await db.storelistingsubmission.create(\n            data={\n                \"storeListingId\": listing.id,\n                \"storeListingVersionId\": version.id,\n                \"reviewerId\": reviewer.id,\n                \"Status\": status,\n                \"reviewComments\": faker.text(),\n            }\n        )",
                          "children": [
                            {
                              "value": "db.storelistingsubmission.create(\n            data={\n                \"storeListingId\": listing.id,\n                \"storeListingVersionId\": version.id,\n                \"reviewerId\": reviewer.id,\n                \"Status\": status,\n                \"reviewComments\": faker.text(),\n            }\n        )",
                              "children": [
                                {
                                  "value": "db.storelistingsubmission.create",
                                  "children": [
                                    {
                                      "value": "db.storelistingsubmission",
                                      "children": [
                                        {
                                          "value": "db",
                                          "children": []
                                        },
                                        {
                                          "value": "storelistingsubmission",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "create",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(\n            data={\n                \"storeListingId\": listing.id,\n                \"storeListingVersionId\": version.id,\n                \"reviewerId\": reviewer.id,\n                \"Status\": status,\n                \"reviewComments\": faker.text(),\n            }\n        )",
                                  "children": [
                                    {
                                      "value": "data={\n                \"storeListingId\": listing.id,\n                \"storeListingVersionId\": version.id,\n                \"reviewerId\": reviewer.id,\n                \"Status\": status,\n                \"reviewComments\": faker.text(),\n            }",
                                      "children": [
                                        {
                                          "value": "data",
                                          "children": []
                                        },
                                        {
                                          "value": "{\n                \"storeListingId\": listing.id,\n                \"storeListingVersionId\": version.id,\n                \"reviewerId\": reviewer.id,\n                \"Status\": status,\n                \"reviewComments\": faker.text(),\n            }",
                                          "children": [
                                            {
                                              "value": "\"storeListingId\": listing.id",
                                              "children": [
                                                {
                                                  "value": "\"storeListingId\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "storeListingId",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "listing.id",
                                                  "children": [
                                                    {
                                                      "value": "listing",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "id",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"storeListingVersionId\": version.id",
                                              "children": [
                                                {
                                                  "value": "\"storeListingVersionId\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "storeListingVersionId",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "version.id",
                                                  "children": [
                                                    {
                                                      "value": "version",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "id",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"reviewerId\": reviewer.id",
                                              "children": [
                                                {
                                                  "value": "\"reviewerId\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "reviewerId",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "reviewer.id",
                                                  "children": [
                                                    {
                                                      "value": "reviewer",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "id",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"Status\": status",
                                              "children": [
                                                {
                                                  "value": "\"Status\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "Status",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "status",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"reviewComments\": faker.text()",
                                              "children": [
                                                {
                                                  "value": "\"reviewComments\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "reviewComments",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "faker.text()",
                                                  "children": [
                                                    {
                                                      "value": "faker.text",
                                                      "children": [
                                                        {
                                                          "value": "faker",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "text",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "()",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Insert APIKeys",
              "children": []
            },
            {
              "value": "print(f\"Inserting {NUM_USERS} api keys\")",
              "children": [
                {
                  "value": "print(f\"Inserting {NUM_USERS} api keys\")",
                  "children": [
                    {
                      "value": "print",
                      "children": []
                    },
                    {
                      "value": "(f\"Inserting {NUM_USERS} api keys\")",
                      "children": [
                        {
                          "value": "f\"Inserting {NUM_USERS} api keys\"",
                          "children": [
                            {
                              "value": "f\"",
                              "children": []
                            },
                            {
                              "value": "Inserting",
                              "children": []
                            },
                            {
                              "value": "{NUM_USERS}",
                              "children": [
                                {
                                  "value": "NUM_USERS",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "api keys",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "for user in users:\n        await db.apikey.create(\n            data={\n                \"name\": faker.word(),\n                \"prefix\": str(faker.uuid4())[:8],\n                \"postfix\": str(faker.uuid4())[-8:],\n                \"key\": str(faker.sha256()),\n                \"status\": prisma.enums.APIKeyStatus.ACTIVE,\n                \"permissions\": [\n                    prisma.enums.APIKeyPermission.EXECUTE_GRAPH,\n                    prisma.enums.APIKeyPermission.READ_GRAPH,\n                ],\n                \"description\": faker.text(),\n                \"userId\": user.id,\n            }\n        )",
              "children": [
                {
                  "value": "user",
                  "children": []
                },
                {
                  "value": "users",
                  "children": []
                },
                {
                  "value": "await db.apikey.create(\n            data={\n                \"name\": faker.word(),\n                \"prefix\": str(faker.uuid4())[:8],\n                \"postfix\": str(faker.uuid4())[-8:],\n                \"key\": str(faker.sha256()),\n                \"status\": prisma.enums.APIKeyStatus.ACTIVE,\n                \"permissions\": [\n                    prisma.enums.APIKeyPermission.EXECUTE_GRAPH,\n                    prisma.enums.APIKeyPermission.READ_GRAPH,\n                ],\n                \"description\": faker.text(),\n                \"userId\": user.id,\n            }\n        )",
                  "children": [
                    {
                      "value": "await db.apikey.create(\n            data={\n                \"name\": faker.word(),\n                \"prefix\": str(faker.uuid4())[:8],\n                \"postfix\": str(faker.uuid4())[-8:],\n                \"key\": str(faker.sha256()),\n                \"status\": prisma.enums.APIKeyStatus.ACTIVE,\n                \"permissions\": [\n                    prisma.enums.APIKeyPermission.EXECUTE_GRAPH,\n                    prisma.enums.APIKeyPermission.READ_GRAPH,\n                ],\n                \"description\": faker.text(),\n                \"userId\": user.id,\n            }\n        )",
                      "children": [
                        {
                          "value": "await db.apikey.create(\n            data={\n                \"name\": faker.word(),\n                \"prefix\": str(faker.uuid4())[:8],\n                \"postfix\": str(faker.uuid4())[-8:],\n                \"key\": str(faker.sha256()),\n                \"status\": prisma.enums.APIKeyStatus.ACTIVE,\n                \"permissions\": [\n                    prisma.enums.APIKeyPermission.EXECUTE_GRAPH,\n                    prisma.enums.APIKeyPermission.READ_GRAPH,\n                ],\n                \"description\": faker.text(),\n                \"userId\": user.id,\n            }\n        )",
                          "children": [
                            {
                              "value": "db.apikey.create(\n            data={\n                \"name\": faker.word(),\n                \"prefix\": str(faker.uuid4())[:8],\n                \"postfix\": str(faker.uuid4())[-8:],\n                \"key\": str(faker.sha256()),\n                \"status\": prisma.enums.APIKeyStatus.ACTIVE,\n                \"permissions\": [\n                    prisma.enums.APIKeyPermission.EXECUTE_GRAPH,\n                    prisma.enums.APIKeyPermission.READ_GRAPH,\n                ],\n                \"description\": faker.text(),\n                \"userId\": user.id,\n            }\n        )",
                              "children": [
                                {
                                  "value": "db.apikey.create",
                                  "children": [
                                    {
                                      "value": "db.apikey",
                                      "children": [
                                        {
                                          "value": "db",
                                          "children": []
                                        },
                                        {
                                          "value": "apikey",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "create",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(\n            data={\n                \"name\": faker.word(),\n                \"prefix\": str(faker.uuid4())[:8],\n                \"postfix\": str(faker.uuid4())[-8:],\n                \"key\": str(faker.sha256()),\n                \"status\": prisma.enums.APIKeyStatus.ACTIVE,\n                \"permissions\": [\n                    prisma.enums.APIKeyPermission.EXECUTE_GRAPH,\n                    prisma.enums.APIKeyPermission.READ_GRAPH,\n                ],\n                \"description\": faker.text(),\n                \"userId\": user.id,\n            }\n        )",
                                  "children": [
                                    {
                                      "value": "data={\n                \"name\": faker.word(),\n                \"prefix\": str(faker.uuid4())[:8],\n                \"postfix\": str(faker.uuid4())[-8:],\n                \"key\": str(faker.sha256()),\n                \"status\": prisma.enums.APIKeyStatus.ACTIVE,\n                \"permissions\": [\n                    prisma.enums.APIKeyPermission.EXECUTE_GRAPH,\n                    prisma.enums.APIKeyPermission.READ_GRAPH,\n                ],\n                \"description\": faker.text(),\n                \"userId\": user.id,\n            }",
                                      "children": [
                                        {
                                          "value": "data",
                                          "children": []
                                        },
                                        {
                                          "value": "{\n                \"name\": faker.word(),\n                \"prefix\": str(faker.uuid4())[:8],\n                \"postfix\": str(faker.uuid4())[-8:],\n                \"key\": str(faker.sha256()),\n                \"status\": prisma.enums.APIKeyStatus.ACTIVE,\n                \"permissions\": [\n                    prisma.enums.APIKeyPermission.EXECUTE_GRAPH,\n                    prisma.enums.APIKeyPermission.READ_GRAPH,\n                ],\n                \"description\": faker.text(),\n                \"userId\": user.id,\n            }",
                                          "children": [
                                            {
                                              "value": "\"name\": faker.word()",
                                              "children": [
                                                {
                                                  "value": "\"name\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "name",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "faker.word()",
                                                  "children": [
                                                    {
                                                      "value": "faker.word",
                                                      "children": [
                                                        {
                                                          "value": "faker",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "word",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "()",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"prefix\": str(faker.uuid4())[:8]",
                                              "children": [
                                                {
                                                  "value": "\"prefix\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "prefix",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "str(faker.uuid4())[:8]",
                                                  "children": [
                                                    {
                                                      "value": "str(faker.uuid4())",
                                                      "children": [
                                                        {
                                                          "value": "str",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "(faker.uuid4())",
                                                          "children": [
                                                            {
                                                              "value": "faker.uuid4()",
                                                              "children": [
                                                                {
                                                                  "value": "faker.uuid4",
                                                                  "children": [
                                                                    {
                                                                      "value": "faker",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "uuid4",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "value": "()",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": ":8",
                                                      "children": [
                                                        {
                                                          "value": "8",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"postfix\": str(faker.uuid4())[-8:]",
                                              "children": [
                                                {
                                                  "value": "\"postfix\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "postfix",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "str(faker.uuid4())[-8:]",
                                                  "children": [
                                                    {
                                                      "value": "str(faker.uuid4())",
                                                      "children": [
                                                        {
                                                          "value": "str",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "(faker.uuid4())",
                                                          "children": [
                                                            {
                                                              "value": "faker.uuid4()",
                                                              "children": [
                                                                {
                                                                  "value": "faker.uuid4",
                                                                  "children": [
                                                                    {
                                                                      "value": "faker",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "uuid4",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "value": "()",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "-8:",
                                                      "children": [
                                                        {
                                                          "value": "-8",
                                                          "children": [
                                                            {
                                                              "value": "8",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"key\": str(faker.sha256())",
                                              "children": [
                                                {
                                                  "value": "\"key\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "key",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "str(faker.sha256())",
                                                  "children": [
                                                    {
                                                      "value": "str",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "(faker.sha256())",
                                                      "children": [
                                                        {
                                                          "value": "faker.sha256()",
                                                          "children": [
                                                            {
                                                              "value": "faker.sha256",
                                                              "children": [
                                                                {
                                                                  "value": "faker",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "sha256",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "()",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"status\": prisma.enums.APIKeyStatus.ACTIVE",
                                              "children": [
                                                {
                                                  "value": "\"status\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "status",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "prisma.enums.APIKeyStatus.ACTIVE",
                                                  "children": [
                                                    {
                                                      "value": "prisma.enums.APIKeyStatus",
                                                      "children": [
                                                        {
                                                          "value": "prisma.enums",
                                                          "children": [
                                                            {
                                                              "value": "prisma",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "enums",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "APIKeyStatus",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "ACTIVE",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"permissions\": [\n                    prisma.enums.APIKeyPermission.EXECUTE_GRAPH,\n                    prisma.enums.APIKeyPermission.READ_GRAPH,\n                ]",
                                              "children": [
                                                {
                                                  "value": "\"permissions\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "permissions",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "[\n                    prisma.enums.APIKeyPermission.EXECUTE_GRAPH,\n                    prisma.enums.APIKeyPermission.READ_GRAPH,\n                ]",
                                                  "children": [
                                                    {
                                                      "value": "prisma.enums.APIKeyPermission.EXECUTE_GRAPH",
                                                      "children": [
                                                        {
                                                          "value": "prisma.enums.APIKeyPermission",
                                                          "children": [
                                                            {
                                                              "value": "prisma.enums",
                                                              "children": [
                                                                {
                                                                  "value": "prisma",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "enums",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "APIKeyPermission",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "EXECUTE_GRAPH",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "prisma.enums.APIKeyPermission.READ_GRAPH",
                                                      "children": [
                                                        {
                                                          "value": "prisma.enums.APIKeyPermission",
                                                          "children": [
                                                            {
                                                              "value": "prisma.enums",
                                                              "children": [
                                                                {
                                                                  "value": "prisma",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "enums",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "APIKeyPermission",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "READ_GRAPH",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"description\": faker.text()",
                                              "children": [
                                                {
                                                  "value": "\"description\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "description",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "faker.text()",
                                                  "children": [
                                                    {
                                                      "value": "faker.text",
                                                      "children": [
                                                        {
                                                          "value": "faker",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "text",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "()",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"userId\": user.id",
                                              "children": [
                                                {
                                                  "value": "\"userId\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "userId",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "user.id",
                                                  "children": [
                                                    {
                                                      "value": "user",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "id",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "await db.disconnect()",
              "children": [
                {
                  "value": "await db.disconnect()",
                  "children": [
                    {
                      "value": "db.disconnect()",
                      "children": [
                        {
                          "value": "db.disconnect",
                          "children": [
                            {
                              "value": "db",
                              "children": []
                            },
                            {
                              "value": "disconnect",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "()",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "if __name__ == \"__main__\":\n    asyncio.run(main())",
      "children": [
        {
          "value": "__name__ == \"__main__\"",
          "children": [
            {
              "value": "__name__",
              "children": []
            },
            {
              "value": "\"__main__\"",
              "children": [
                {
                  "value": "\"",
                  "children": []
                },
                {
                  "value": "__main__",
                  "children": []
                },
                {
                  "value": "\"",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "asyncio.run(main())",
          "children": [
            {
              "value": "asyncio.run(main())",
              "children": [
                {
                  "value": "asyncio.run(main())",
                  "children": [
                    {
                      "value": "asyncio.run",
                      "children": [
                        {
                          "value": "asyncio",
                          "children": []
                        },
                        {
                          "value": "run",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "(main())",
                      "children": [
                        {
                          "value": "main()",
                          "children": [
                            {
                              "value": "main",
                              "children": []
                            },
                            {
                              "value": "()",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}