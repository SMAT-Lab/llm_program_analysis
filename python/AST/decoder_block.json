{
  "value": "import codecs\n\nfrom backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema\nfrom backend.data.model import SchemaField\n\n\nclass TextDecoderBlock(Block):\n    class Input(BlockSchema):\n        text: str = SchemaField(\n            description=\"A string containing escaped characters to be decoded\",\n            placeholder='Your entire text block with \\\\n and \\\\\" escaped characters',\n        )\n\n    class Output(BlockSchema):\n        decoded_text: str = SchemaField(\n            description=\"The decoded text with escape sequences processed\"\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"2570e8fe-8447-43ed-84c7-70d657923231\",\n            description=\"Decodes a string containing escape sequences into actual text\",\n            categories={BlockCategory.TEXT},\n            input_schema=TextDecoderBlock.Input,\n            output_schema=TextDecoderBlock.Output,\n            test_input={\"text\": \"\"\"Hello\\nWorld!\\nThis is a \\\"quoted\\\" string.\"\"\"},\n            test_output=[\n                (\n                    \"decoded_text\",\n                    \"\"\"Hello\nWorld!\nThis is a \"quoted\" string.\"\"\",\n                )\n            ],\n        )\n\n    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        decoded_text = codecs.decode(input_data.text, \"unicode_escape\")\n        yield \"decoded_text\", decoded_text",
  "children": [
    {
      "value": "import codecs",
      "children": [
        {
          "value": "codecs",
          "children": [
            {
              "value": "codecs",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.data.block import Block, BlockCategory, BlockOutput, BlockSchema",
      "children": [
        {
          "value": "backend.data.block",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "data",
              "children": []
            },
            {
              "value": "block",
              "children": []
            }
          ]
        },
        {
          "value": "Block",
          "children": [
            {
              "value": "Block",
              "children": []
            }
          ]
        },
        {
          "value": "BlockCategory",
          "children": [
            {
              "value": "BlockCategory",
              "children": []
            }
          ]
        },
        {
          "value": "BlockOutput",
          "children": [
            {
              "value": "BlockOutput",
              "children": []
            }
          ]
        },
        {
          "value": "BlockSchema",
          "children": [
            {
              "value": "BlockSchema",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.data.model import SchemaField",
      "children": [
        {
          "value": "backend.data.model",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "data",
              "children": []
            },
            {
              "value": "model",
              "children": []
            }
          ]
        },
        {
          "value": "SchemaField",
          "children": [
            {
              "value": "SchemaField",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "class TextDecoderBlock(Block):\n    class Input(BlockSchema):\n        text: str = SchemaField(\n            description=\"A string containing escaped characters to be decoded\",\n            placeholder='Your entire text block with \\\\n and \\\\\" escaped characters',\n        )\n\n    class Output(BlockSchema):\n        decoded_text: str = SchemaField(\n            description=\"The decoded text with escape sequences processed\"\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"2570e8fe-8447-43ed-84c7-70d657923231\",\n            description=\"Decodes a string containing escape sequences into actual text\",\n            categories={BlockCategory.TEXT},\n            input_schema=TextDecoderBlock.Input,\n            output_schema=TextDecoderBlock.Output,\n            test_input={\"text\": \"\"\"Hello\\nWorld!\\nThis is a \\\"quoted\\\" string.\"\"\"},\n            test_output=[\n                (\n                    \"decoded_text\",\n                    \"\"\"Hello\nWorld!\nThis is a \"quoted\" string.\"\"\",\n                )\n            ],\n        )\n\n    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        decoded_text = codecs.decode(input_data.text, \"unicode_escape\")\n        yield \"decoded_text\", decoded_text",
      "children": [
        {
          "value": "TextDecoderBlock",
          "children": []
        },
        {
          "value": "(Block)",
          "children": [
            {
              "value": "Block",
              "children": []
            }
          ]
        },
        {
          "value": "class Input(BlockSchema):\n        text: str = SchemaField(\n            description=\"A string containing escaped characters to be decoded\",\n            placeholder='Your entire text block with \\\\n and \\\\\" escaped characters',\n        )\n\n    class Output(BlockSchema):\n        decoded_text: str = SchemaField(\n            description=\"The decoded text with escape sequences processed\"\n        )\n\n    def __init__(self):\n        super().__init__(\n            id=\"2570e8fe-8447-43ed-84c7-70d657923231\",\n            description=\"Decodes a string containing escape sequences into actual text\",\n            categories={BlockCategory.TEXT},\n            input_schema=TextDecoderBlock.Input,\n            output_schema=TextDecoderBlock.Output,\n            test_input={\"text\": \"\"\"Hello\\nWorld!\\nThis is a \\\"quoted\\\" string.\"\"\"},\n            test_output=[\n                (\n                    \"decoded_text\",\n                    \"\"\"Hello\nWorld!\nThis is a \"quoted\" string.\"\"\",\n                )\n            ],\n        )\n\n    def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        decoded_text = codecs.decode(input_data.text, \"unicode_escape\")\n        yield \"decoded_text\", decoded_text",
          "children": [
            {
              "value": "class Input(BlockSchema):\n        text: str = SchemaField(\n            description=\"A string containing escaped characters to be decoded\",\n            placeholder='Your entire text block with \\\\n and \\\\\" escaped characters',\n        )",
              "children": [
                {
                  "value": "Input",
                  "children": []
                },
                {
                  "value": "(BlockSchema)",
                  "children": [
                    {
                      "value": "BlockSchema",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "text: str = SchemaField(\n            description=\"A string containing escaped characters to be decoded\",\n            placeholder='Your entire text block with \\\\n and \\\\\" escaped characters',\n        )",
                  "children": [
                    {
                      "value": "text: str = SchemaField(\n            description=\"A string containing escaped characters to be decoded\",\n            placeholder='Your entire text block with \\\\n and \\\\\" escaped characters',\n        )",
                      "children": [
                        {
                          "value": "text: str = SchemaField(\n            description=\"A string containing escaped characters to be decoded\",\n            placeholder='Your entire text block with \\\\n and \\\\\" escaped characters',\n        )",
                          "children": [
                            {
                              "value": "text",
                              "children": []
                            },
                            {
                              "value": "str",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            description=\"A string containing escaped characters to be decoded\",\n            placeholder='Your entire text block with \\\\n and \\\\\" escaped characters',\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=\"A string containing escaped characters to be decoded\",\n            placeholder='Your entire text block with \\\\n and \\\\\" escaped characters',\n        )",
                                  "children": [
                                    {
                                      "value": "description=\"A string containing escaped characters to be decoded\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"A string containing escaped characters to be decoded\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "A string containing escaped characters to be decoded",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "placeholder='Your entire text block with \\\\n and \\\\\" escaped characters'",
                                      "children": [
                                        {
                                          "value": "placeholder",
                                          "children": []
                                        },
                                        {
                                          "value": "'Your entire text block with \\\\n and \\\\\" escaped characters'",
                                          "children": [
                                            {
                                              "value": "'",
                                              "children": []
                                            },
                                            {
                                              "value": "Your entire text block with \\\\n and \\\\\" escaped characters",
                                              "children": [
                                                {
                                                  "value": "\\\\",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\\\\",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "'",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "class Output(BlockSchema):\n        decoded_text: str = SchemaField(\n            description=\"The decoded text with escape sequences processed\"\n        )",
              "children": [
                {
                  "value": "Output",
                  "children": []
                },
                {
                  "value": "(BlockSchema)",
                  "children": [
                    {
                      "value": "BlockSchema",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "decoded_text: str = SchemaField(\n            description=\"The decoded text with escape sequences processed\"\n        )",
                  "children": [
                    {
                      "value": "decoded_text: str = SchemaField(\n            description=\"The decoded text with escape sequences processed\"\n        )",
                      "children": [
                        {
                          "value": "decoded_text: str = SchemaField(\n            description=\"The decoded text with escape sequences processed\"\n        )",
                          "children": [
                            {
                              "value": "decoded_text",
                              "children": []
                            },
                            {
                              "value": "str",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            description=\"The decoded text with escape sequences processed\"\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=\"The decoded text with escape sequences processed\"\n        )",
                                  "children": [
                                    {
                                      "value": "description=\"The decoded text with escape sequences processed\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"The decoded text with escape sequences processed\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "The decoded text with escape sequences processed",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def __init__(self):\n        super().__init__(\n            id=\"2570e8fe-8447-43ed-84c7-70d657923231\",\n            description=\"Decodes a string containing escape sequences into actual text\",\n            categories={BlockCategory.TEXT},\n            input_schema=TextDecoderBlock.Input,\n            output_schema=TextDecoderBlock.Output,\n            test_input={\"text\": \"\"\"Hello\\nWorld!\\nThis is a \\\"quoted\\\" string.\"\"\"},\n            test_output=[\n                (\n                    \"decoded_text\",\n                    \"\"\"Hello\nWorld!\nThis is a \"quoted\" string.\"\"\",\n                )\n            ],\n        )",
              "children": [
                {
                  "value": "__init__",
                  "children": []
                },
                {
                  "value": "(self)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "super().__init__(\n            id=\"2570e8fe-8447-43ed-84c7-70d657923231\",\n            description=\"Decodes a string containing escape sequences into actual text\",\n            categories={BlockCategory.TEXT},\n            input_schema=TextDecoderBlock.Input,\n            output_schema=TextDecoderBlock.Output,\n            test_input={\"text\": \"\"\"Hello\\nWorld!\\nThis is a \\\"quoted\\\" string.\"\"\"},\n            test_output=[\n                (\n                    \"decoded_text\",\n                    \"\"\"Hello\nWorld!\nThis is a \"quoted\" string.\"\"\",\n                )\n            ],\n        )",
                  "children": [
                    {
                      "value": "super().__init__(\n            id=\"2570e8fe-8447-43ed-84c7-70d657923231\",\n            description=\"Decodes a string containing escape sequences into actual text\",\n            categories={BlockCategory.TEXT},\n            input_schema=TextDecoderBlock.Input,\n            output_schema=TextDecoderBlock.Output,\n            test_input={\"text\": \"\"\"Hello\\nWorld!\\nThis is a \\\"quoted\\\" string.\"\"\"},\n            test_output=[\n                (\n                    \"decoded_text\",\n                    \"\"\"Hello\nWorld!\nThis is a \"quoted\" string.\"\"\",\n                )\n            ],\n        )",
                      "children": [
                        {
                          "value": "super().__init__(\n            id=\"2570e8fe-8447-43ed-84c7-70d657923231\",\n            description=\"Decodes a string containing escape sequences into actual text\",\n            categories={BlockCategory.TEXT},\n            input_schema=TextDecoderBlock.Input,\n            output_schema=TextDecoderBlock.Output,\n            test_input={\"text\": \"\"\"Hello\\nWorld!\\nThis is a \\\"quoted\\\" string.\"\"\"},\n            test_output=[\n                (\n                    \"decoded_text\",\n                    \"\"\"Hello\nWorld!\nThis is a \"quoted\" string.\"\"\",\n                )\n            ],\n        )",
                          "children": [
                            {
                              "value": "super().__init__",
                              "children": [
                                {
                                  "value": "super()",
                                  "children": [
                                    {
                                      "value": "super",
                                      "children": []
                                    },
                                    {
                                      "value": "()",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "__init__",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\n            id=\"2570e8fe-8447-43ed-84c7-70d657923231\",\n            description=\"Decodes a string containing escape sequences into actual text\",\n            categories={BlockCategory.TEXT},\n            input_schema=TextDecoderBlock.Input,\n            output_schema=TextDecoderBlock.Output,\n            test_input={\"text\": \"\"\"Hello\\nWorld!\\nThis is a \\\"quoted\\\" string.\"\"\"},\n            test_output=[\n                (\n                    \"decoded_text\",\n                    \"\"\"Hello\nWorld!\nThis is a \"quoted\" string.\"\"\",\n                )\n            ],\n        )",
                              "children": [
                                {
                                  "value": "id=\"2570e8fe-8447-43ed-84c7-70d657923231\"",
                                  "children": [
                                    {
                                      "value": "id",
                                      "children": []
                                    },
                                    {
                                      "value": "\"2570e8fe-8447-43ed-84c7-70d657923231\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "2570e8fe-8447-43ed-84c7-70d657923231",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "description=\"Decodes a string containing escape sequences into actual text\"",
                                  "children": [
                                    {
                                      "value": "description",
                                      "children": []
                                    },
                                    {
                                      "value": "\"Decodes a string containing escape sequences into actual text\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "Decodes a string containing escape sequences into actual text",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "categories={BlockCategory.TEXT}",
                                  "children": [
                                    {
                                      "value": "categories",
                                      "children": []
                                    },
                                    {
                                      "value": "{BlockCategory.TEXT}",
                                      "children": [
                                        {
                                          "value": "BlockCategory.TEXT",
                                          "children": [
                                            {
                                              "value": "BlockCategory",
                                              "children": []
                                            },
                                            {
                                              "value": "TEXT",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "input_schema=TextDecoderBlock.Input",
                                  "children": [
                                    {
                                      "value": "input_schema",
                                      "children": []
                                    },
                                    {
                                      "value": "TextDecoderBlock.Input",
                                      "children": [
                                        {
                                          "value": "TextDecoderBlock",
                                          "children": []
                                        },
                                        {
                                          "value": "Input",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "output_schema=TextDecoderBlock.Output",
                                  "children": [
                                    {
                                      "value": "output_schema",
                                      "children": []
                                    },
                                    {
                                      "value": "TextDecoderBlock.Output",
                                      "children": [
                                        {
                                          "value": "TextDecoderBlock",
                                          "children": []
                                        },
                                        {
                                          "value": "Output",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "test_input={\"text\": \"\"\"Hello\\nWorld!\\nThis is a \\\"quoted\\\" string.\"\"\"}",
                                  "children": [
                                    {
                                      "value": "test_input",
                                      "children": []
                                    },
                                    {
                                      "value": "{\"text\": \"\"\"Hello\\nWorld!\\nThis is a \\\"quoted\\\" string.\"\"\"}",
                                      "children": [
                                        {
                                          "value": "\"text\": \"\"\"Hello\\nWorld!\\nThis is a \\\"quoted\\\" string.\"\"\"",
                                          "children": [
                                            {
                                              "value": "\"text\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "text",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"\"\"Hello\\nWorld!\\nThis is a \\\"quoted\\\" string.\"\"\"",
                                              "children": [
                                                {
                                                  "value": "\"\"\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "Hello\\nWorld!\\nThis is a \\\"quoted\\\" string.",
                                                  "children": [
                                                    {
                                                      "value": "\\n",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\\n",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\\\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\\\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"\"\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "test_output=[\n                (\n                    \"decoded_text\",\n                    \"\"\"Hello\nWorld!\nThis is a \"quoted\" string.\"\"\",\n                )\n            ]",
                                  "children": [
                                    {
                                      "value": "test_output",
                                      "children": []
                                    },
                                    {
                                      "value": "[\n                (\n                    \"decoded_text\",\n                    \"\"\"Hello\nWorld!\nThis is a \"quoted\" string.\"\"\",\n                )\n            ]",
                                      "children": [
                                        {
                                          "value": "(\n                    \"decoded_text\",\n                    \"\"\"Hello\nWorld!\nThis is a \"quoted\" string.\"\"\",\n                )",
                                          "children": [
                                            {
                                              "value": "\"decoded_text\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "decoded_text",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"\"\"Hello\nWorld!\nThis is a \"quoted\" string.\"\"\"",
                                              "children": [
                                                {
                                                  "value": "\"\"\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "Hello\nWorld!\nThis is a \"quoted\" string.",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"\"\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def run(self, input_data: Input, **kwargs) -> BlockOutput:\n        decoded_text = codecs.decode(input_data.text, \"unicode_escape\")\n        yield \"decoded_text\", decoded_text",
              "children": [
                {
                  "value": "run",
                  "children": []
                },
                {
                  "value": "(self, input_data: Input, **kwargs)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "input_data: Input",
                      "children": [
                        {
                          "value": "input_data",
                          "children": []
                        },
                        {
                          "value": "Input",
                          "children": [
                            {
                              "value": "Input",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "**kwargs",
                      "children": [
                        {
                          "value": "kwargs",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "BlockOutput",
                  "children": [
                    {
                      "value": "BlockOutput",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "decoded_text = codecs.decode(input_data.text, \"unicode_escape\")\n        yield \"decoded_text\", decoded_text",
                  "children": [
                    {
                      "value": "decoded_text = codecs.decode(input_data.text, \"unicode_escape\")",
                      "children": [
                        {
                          "value": "decoded_text = codecs.decode(input_data.text, \"unicode_escape\")",
                          "children": [
                            {
                              "value": "decoded_text",
                              "children": []
                            },
                            {
                              "value": "codecs.decode(input_data.text, \"unicode_escape\")",
                              "children": [
                                {
                                  "value": "codecs.decode",
                                  "children": [
                                    {
                                      "value": "codecs",
                                      "children": []
                                    },
                                    {
                                      "value": "decode",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(input_data.text, \"unicode_escape\")",
                                  "children": [
                                    {
                                      "value": "input_data.text",
                                      "children": [
                                        {
                                          "value": "input_data",
                                          "children": []
                                        },
                                        {
                                          "value": "text",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"unicode_escape\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "unicode_escape",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "yield \"decoded_text\", decoded_text",
                      "children": [
                        {
                          "value": "yield \"decoded_text\", decoded_text",
                          "children": [
                            {
                              "value": "\"decoded_text\", decoded_text",
                              "children": [
                                {
                                  "value": "\"decoded_text\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "decoded_text",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "decoded_text",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}