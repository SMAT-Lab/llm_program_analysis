{
  "value": "\"\"\"\nThe command line interface for the agent server\n\"\"\"\n\nimport os\nimport pathlib\n\nimport click\nimport psutil\n\nfrom backend import app\nfrom backend.util.process import AppProcess\n\n\ndef get_pid_path() -> pathlib.Path:\n    home_dir = pathlib.Path.home()\n    new_dir = home_dir / \".config\" / \"agpt\"\n    file_path = new_dir / \"running.tmp\"\n    return file_path\n\n\ndef get_pid() -> int | None:\n    file_path = get_pid_path()\n    if not file_path.exists():\n        return None\n\n    os.makedirs(file_path.parent, exist_ok=True)\n    with open(file_path, \"r\", encoding=\"utf-8\") as file:\n        pid = file.read()\n    try:\n        return int(pid)\n    except ValueError:\n        return None\n\n\ndef write_pid(pid: int):\n    file_path = get_pid_path()\n    os.makedirs(file_path.parent, exist_ok=True)\n    with open(file_path, \"w\", encoding=\"utf-8\") as file:\n        file.write(str(pid))\n\n\nclass MainApp(AppProcess):\n    def run(self):\n        app.main(silent=True)\n\n\n@click.group()\ndef main():\n    \"\"\"AutoGPT Server CLI Tool\"\"\"\n    pass\n\n\n@main.command()\ndef start():\n    \"\"\"\n    Starts the server in the background and saves the PID\n    \"\"\"\n    # Define the path for the new directory and file\n    pid = get_pid()\n    if pid and psutil.pid_exists(pid):\n        print(\"Server is already running\")\n        exit(1)\n    elif pid:\n        print(\"PID does not exist deleting file\")\n        os.remove(get_pid_path())\n\n    print(\"Starting server\")\n    pid = MainApp().start(background=True, silent=True)\n    print(f\"Server running in process: {pid}\")\n\n    write_pid(pid)\n    print(\"done\")\n    os._exit(status=0)\n\n\n@main.command()\ndef stop():\n    \"\"\"\n    Stops the server\n    \"\"\"\n    pid = get_pid()\n    if not pid:\n        print(\"Server is not running\")\n        return\n\n    os.remove(get_pid_path())\n    process = psutil.Process(int(pid))\n    for child in process.children(recursive=True):\n        child.terminate()\n    process.terminate()\n\n    print(\"Server Stopped\")\n\n\n@main.command()\ndef gen_encrypt_key():\n    \"\"\"\n    Generate a new encryption key\n    \"\"\"\n    from cryptography.fernet import Fernet\n\n    print(Fernet.generate_key().decode())\n\n\n@click.group()\ndef test():\n    \"\"\"\n    Group for test commands\n    \"\"\"\n    pass\n\n\n@test.command()\n@click.argument(\"server_address\")\ndef reddit(server_address: str):\n    \"\"\"\n    Create an event graph\n    \"\"\"\n    import requests\n\n    from backend.usecases.reddit_marketing import create_test_graph\n\n    test_graph = create_test_graph()\n    url = f\"{server_address}/graphs\"\n    headers = {\"Content-Type\": \"application/json\"}\n    data = test_graph.model_dump_json()\n\n    response = requests.post(url, headers=headers, data=data)\n\n    graph_id = response.json()[\"id\"]\n    print(f\"Graph created with ID: {graph_id}\")\n\n\n@test.command()\n@click.argument(\"server_address\")\ndef populate_db(server_address: str):\n    \"\"\"\n    Create an event graph\n    \"\"\"\n    import requests\n\n    from backend.usecases.sample import create_test_graph\n\n    test_graph = create_test_graph()\n    url = f\"{server_address}/graphs\"\n    headers = {\"Content-Type\": \"application/json\"}\n    data = test_graph.model_dump_json()\n\n    response = requests.post(url, headers=headers, data=data)\n\n    graph_id = response.json()[\"id\"]\n\n    if response.status_code == 200:\n        execute_url = f\"{server_address}/graphs/{response.json()['id']}/execute\"\n        text = \"Hello, World!\"\n        input_data = {\"input\": text}\n        response = requests.post(execute_url, headers=headers, json=input_data)\n\n        schedule_url = f\"{server_address}/graphs/{graph_id}/schedules\"\n        data = {\n            \"graph_id\": graph_id,\n            \"cron\": \"*/5 * * * *\",\n            \"input_data\": {\"input\": \"Hello, World!\"},\n        }\n        response = requests.post(schedule_url, headers=headers, json=data)\n\n    print(\"Database populated with: \\n- graph\\n- execution\\n- schedule\")\n\n\n@test.command()\n@click.argument(\"server_address\")\ndef graph(server_address: str):\n    \"\"\"\n    Create an event graph\n    \"\"\"\n    import requests\n\n    from backend.usecases.sample import create_test_graph\n\n    url = f\"{server_address}/graphs\"\n    headers = {\"Content-Type\": \"application/json\"}\n    data = create_test_graph().model_dump_json()\n    response = requests.post(url, headers=headers, data=data)\n\n    if response.status_code == 200:\n        print(response.json()[\"id\"])\n        execute_url = f\"{server_address}/graphs/{response.json()['id']}/execute\"\n        text = \"Hello, World!\"\n        input_data = {\"input\": text}\n        response = requests.post(execute_url, headers=headers, json=input_data)\n\n    else:\n        print(\"Failed to send graph\")\n        print(f\"Response: {response.text}\")\n\n\n@test.command()\n@click.argument(\"graph_id\")\n@click.argument(\"content\")\ndef execute(graph_id: str, content: dict):\n    \"\"\"\n    Create an event graph\n    \"\"\"\n    import requests\n\n    headers = {\"Content-Type\": \"application/json\"}\n\n    execute_url = f\"http://0.0.0.0:8000/graphs/{graph_id}/execute\"\n    requests.post(execute_url, headers=headers, json=content)\n\n\n@test.command()\ndef event():\n    \"\"\"\n    Send an event to the running server\n    \"\"\"\n    print(\"Event sent\")\n\n\n@test.command()\n@click.argument(\"server_address\")\n@click.argument(\"graph_id\")\ndef websocket(server_address: str, graph_id: str):\n    \"\"\"\n    Tests the websocket connection.\n    \"\"\"\n    import asyncio\n\n    import websockets.asyncio.client\n\n    from backend.server.ws_api import ExecutionSubscription, Methods, WsMessage\n\n    async def send_message(server_address: str):\n        uri = f\"ws://{server_address}\"\n        async with websockets.asyncio.client.connect(uri) as websocket:\n            try:\n                msg = WsMessage(\n                    method=Methods.SUBSCRIBE,\n                    data=ExecutionSubscription(graph_id=graph_id).model_dump(),\n                ).model_dump_json()\n                await websocket.send(msg)\n                print(f\"Sending: {msg}\")\n                while True:\n                    response = await websocket.recv()\n                    print(f\"Response from server: {response}\")\n            except InterruptedError:\n                exit(0)\n\n    asyncio.run(send_message(server_address))\n    print(\"Testing WS\")\n\n\nmain.add_command(test)\n\nif __name__ == \"__main__\":\n    main()",
  "children": [
    {
      "value": "\"\"\"\nThe command line interface for the agent server\n\"\"\"",
      "children": [
        {
          "value": "\"\"\"\nThe command line interface for the agent server\n\"\"\"",
          "children": [
            {
              "value": "\"\"\"",
              "children": []
            },
            {
              "value": "The command line interface for the agent server",
              "children": []
            },
            {
              "value": "\"\"\"",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "import os",
      "children": [
        {
          "value": "os",
          "children": [
            {
              "value": "os",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "import pathlib",
      "children": [
        {
          "value": "pathlib",
          "children": [
            {
              "value": "pathlib",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "import click",
      "children": [
        {
          "value": "click",
          "children": [
            {
              "value": "click",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "import psutil",
      "children": [
        {
          "value": "psutil",
          "children": [
            {
              "value": "psutil",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend import app",
      "children": [
        {
          "value": "backend",
          "children": [
            {
              "value": "backend",
              "children": []
            }
          ]
        },
        {
          "value": "app",
          "children": [
            {
              "value": "app",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.util.process import AppProcess",
      "children": [
        {
          "value": "backend.util.process",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "util",
              "children": []
            },
            {
              "value": "process",
              "children": []
            }
          ]
        },
        {
          "value": "AppProcess",
          "children": [
            {
              "value": "AppProcess",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "def get_pid_path() -> pathlib.Path:\n    home_dir = pathlib.Path.home()\n    new_dir = home_dir / \".config\" / \"agpt\"\n    file_path = new_dir / \"running.tmp\"\n    return file_path",
      "children": [
        {
          "value": "get_pid_path",
          "children": []
        },
        {
          "value": "()",
          "children": []
        },
        {
          "value": "pathlib.Path",
          "children": [
            {
              "value": "pathlib.Path",
              "children": [
                {
                  "value": "pathlib",
                  "children": []
                },
                {
                  "value": "Path",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "home_dir = pathlib.Path.home()\n    new_dir = home_dir / \".config\" / \"agpt\"\n    file_path = new_dir / \"running.tmp\"\n    return file_path",
          "children": [
            {
              "value": "home_dir = pathlib.Path.home()",
              "children": [
                {
                  "value": "home_dir = pathlib.Path.home()",
                  "children": [
                    {
                      "value": "home_dir",
                      "children": []
                    },
                    {
                      "value": "pathlib.Path.home()",
                      "children": [
                        {
                          "value": "pathlib.Path.home",
                          "children": [
                            {
                              "value": "pathlib.Path",
                              "children": [
                                {
                                  "value": "pathlib",
                                  "children": []
                                },
                                {
                                  "value": "Path",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "home",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "()",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "new_dir = home_dir / \".config\" / \"agpt\"",
              "children": [
                {
                  "value": "new_dir = home_dir / \".config\" / \"agpt\"",
                  "children": [
                    {
                      "value": "new_dir",
                      "children": []
                    },
                    {
                      "value": "home_dir / \".config\" / \"agpt\"",
                      "children": [
                        {
                          "value": "home_dir / \".config\"",
                          "children": [
                            {
                              "value": "home_dir",
                              "children": []
                            },
                            {
                              "value": "\".config\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": ".config",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "\"agpt\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "agpt",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "file_path = new_dir / \"running.tmp\"",
              "children": [
                {
                  "value": "file_path = new_dir / \"running.tmp\"",
                  "children": [
                    {
                      "value": "file_path",
                      "children": []
                    },
                    {
                      "value": "new_dir / \"running.tmp\"",
                      "children": [
                        {
                          "value": "new_dir",
                          "children": []
                        },
                        {
                          "value": "\"running.tmp\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "running.tmp",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "return file_path",
              "children": [
                {
                  "value": "file_path",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "def get_pid() -> int | None:\n    file_path = get_pid_path()\n    if not file_path.exists():\n        return None\n\n    os.makedirs(file_path.parent, exist_ok=True)\n    with open(file_path, \"r\", encoding=\"utf-8\") as file:\n        pid = file.read()\n    try:\n        return int(pid)\n    except ValueError:\n        return None",
      "children": [
        {
          "value": "get_pid",
          "children": []
        },
        {
          "value": "()",
          "children": []
        },
        {
          "value": "int | None",
          "children": [
            {
              "value": "int | None",
              "children": [
                {
                  "value": "int",
                  "children": []
                },
                {
                  "value": "None",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "file_path = get_pid_path()\n    if not file_path.exists():\n        return None\n\n    os.makedirs(file_path.parent, exist_ok=True)\n    with open(file_path, \"r\", encoding=\"utf-8\") as file:\n        pid = file.read()\n    try:\n        return int(pid)\n    except ValueError:\n        return None",
          "children": [
            {
              "value": "file_path = get_pid_path()",
              "children": [
                {
                  "value": "file_path = get_pid_path()",
                  "children": [
                    {
                      "value": "file_path",
                      "children": []
                    },
                    {
                      "value": "get_pid_path()",
                      "children": [
                        {
                          "value": "get_pid_path",
                          "children": []
                        },
                        {
                          "value": "()",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "if not file_path.exists():\n        return None",
              "children": [
                {
                  "value": "not file_path.exists()",
                  "children": [
                    {
                      "value": "file_path.exists()",
                      "children": [
                        {
                          "value": "file_path.exists",
                          "children": [
                            {
                              "value": "file_path",
                              "children": []
                            },
                            {
                              "value": "exists",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "()",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "return None",
                  "children": [
                    {
                      "value": "return None",
                      "children": [
                        {
                          "value": "None",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "os.makedirs(file_path.parent, exist_ok=True)",
              "children": [
                {
                  "value": "os.makedirs(file_path.parent, exist_ok=True)",
                  "children": [
                    {
                      "value": "os.makedirs",
                      "children": [
                        {
                          "value": "os",
                          "children": []
                        },
                        {
                          "value": "makedirs",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "(file_path.parent, exist_ok=True)",
                      "children": [
                        {
                          "value": "file_path.parent",
                          "children": [
                            {
                              "value": "file_path",
                              "children": []
                            },
                            {
                              "value": "parent",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "exist_ok=True",
                          "children": [
                            {
                              "value": "exist_ok",
                              "children": []
                            },
                            {
                              "value": "True",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "with open(file_path, \"r\", encoding=\"utf-8\") as file:\n        pid = file.read()",
              "children": [
                {
                  "value": "open(file_path, \"r\", encoding=\"utf-8\") as file",
                  "children": [
                    {
                      "value": "open(file_path, \"r\", encoding=\"utf-8\") as file",
                      "children": [
                        {
                          "value": "open(file_path, \"r\", encoding=\"utf-8\") as file",
                          "children": [
                            {
                              "value": "open(file_path, \"r\", encoding=\"utf-8\")",
                              "children": [
                                {
                                  "value": "open",
                                  "children": []
                                },
                                {
                                  "value": "(file_path, \"r\", encoding=\"utf-8\")",
                                  "children": [
                                    {
                                      "value": "file_path",
                                      "children": []
                                    },
                                    {
                                      "value": "\"r\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "r",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "encoding=\"utf-8\"",
                                      "children": [
                                        {
                                          "value": "encoding",
                                          "children": []
                                        },
                                        {
                                          "value": "\"utf-8\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "utf-8",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "file",
                              "children": [
                                {
                                  "value": "file",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "pid = file.read()",
                  "children": [
                    {
                      "value": "pid = file.read()",
                      "children": [
                        {
                          "value": "pid = file.read()",
                          "children": [
                            {
                              "value": "pid",
                              "children": []
                            },
                            {
                              "value": "file.read()",
                              "children": [
                                {
                                  "value": "file.read",
                                  "children": [
                                    {
                                      "value": "file",
                                      "children": []
                                    },
                                    {
                                      "value": "read",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "()",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "try:\n        return int(pid)\n    except ValueError:\n        return None",
              "children": [
                {
                  "value": "return int(pid)",
                  "children": [
                    {
                      "value": "return int(pid)",
                      "children": [
                        {
                          "value": "int(pid)",
                          "children": [
                            {
                              "value": "int",
                              "children": []
                            },
                            {
                              "value": "(pid)",
                              "children": [
                                {
                                  "value": "pid",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "except ValueError:\n        return None",
                  "children": [
                    {
                      "value": "ValueError",
                      "children": []
                    },
                    {
                      "value": "return None",
                      "children": [
                        {
                          "value": "return None",
                          "children": [
                            {
                              "value": "None",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "def write_pid(pid: int):\n    file_path = get_pid_path()\n    os.makedirs(file_path.parent, exist_ok=True)\n    with open(file_path, \"w\", encoding=\"utf-8\") as file:\n        file.write(str(pid))",
      "children": [
        {
          "value": "write_pid",
          "children": []
        },
        {
          "value": "(pid: int)",
          "children": [
            {
              "value": "pid: int",
              "children": [
                {
                  "value": "pid",
                  "children": []
                },
                {
                  "value": "int",
                  "children": [
                    {
                      "value": "int",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "file_path = get_pid_path()\n    os.makedirs(file_path.parent, exist_ok=True)\n    with open(file_path, \"w\", encoding=\"utf-8\") as file:\n        file.write(str(pid))",
          "children": [
            {
              "value": "file_path = get_pid_path()",
              "children": [
                {
                  "value": "file_path = get_pid_path()",
                  "children": [
                    {
                      "value": "file_path",
                      "children": []
                    },
                    {
                      "value": "get_pid_path()",
                      "children": [
                        {
                          "value": "get_pid_path",
                          "children": []
                        },
                        {
                          "value": "()",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "os.makedirs(file_path.parent, exist_ok=True)",
              "children": [
                {
                  "value": "os.makedirs(file_path.parent, exist_ok=True)",
                  "children": [
                    {
                      "value": "os.makedirs",
                      "children": [
                        {
                          "value": "os",
                          "children": []
                        },
                        {
                          "value": "makedirs",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "(file_path.parent, exist_ok=True)",
                      "children": [
                        {
                          "value": "file_path.parent",
                          "children": [
                            {
                              "value": "file_path",
                              "children": []
                            },
                            {
                              "value": "parent",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "exist_ok=True",
                          "children": [
                            {
                              "value": "exist_ok",
                              "children": []
                            },
                            {
                              "value": "True",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "with open(file_path, \"w\", encoding=\"utf-8\") as file:\n        file.write(str(pid))",
              "children": [
                {
                  "value": "open(file_path, \"w\", encoding=\"utf-8\") as file",
                  "children": [
                    {
                      "value": "open(file_path, \"w\", encoding=\"utf-8\") as file",
                      "children": [
                        {
                          "value": "open(file_path, \"w\", encoding=\"utf-8\") as file",
                          "children": [
                            {
                              "value": "open(file_path, \"w\", encoding=\"utf-8\")",
                              "children": [
                                {
                                  "value": "open",
                                  "children": []
                                },
                                {
                                  "value": "(file_path, \"w\", encoding=\"utf-8\")",
                                  "children": [
                                    {
                                      "value": "file_path",
                                      "children": []
                                    },
                                    {
                                      "value": "\"w\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "w",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "encoding=\"utf-8\"",
                                      "children": [
                                        {
                                          "value": "encoding",
                                          "children": []
                                        },
                                        {
                                          "value": "\"utf-8\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "utf-8",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "file",
                              "children": [
                                {
                                  "value": "file",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "file.write(str(pid))",
                  "children": [
                    {
                      "value": "file.write(str(pid))",
                      "children": [
                        {
                          "value": "file.write(str(pid))",
                          "children": [
                            {
                              "value": "file.write",
                              "children": [
                                {
                                  "value": "file",
                                  "children": []
                                },
                                {
                                  "value": "write",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(str(pid))",
                              "children": [
                                {
                                  "value": "str(pid)",
                                  "children": [
                                    {
                                      "value": "str",
                                      "children": []
                                    },
                                    {
                                      "value": "(pid)",
                                      "children": [
                                        {
                                          "value": "pid",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "class MainApp(AppProcess):\n    def run(self):\n        app.main(silent=True)",
      "children": [
        {
          "value": "MainApp",
          "children": []
        },
        {
          "value": "(AppProcess)",
          "children": [
            {
              "value": "AppProcess",
              "children": []
            }
          ]
        },
        {
          "value": "def run(self):\n        app.main(silent=True)",
          "children": [
            {
              "value": "def run(self):\n        app.main(silent=True)",
              "children": [
                {
                  "value": "run",
                  "children": []
                },
                {
                  "value": "(self)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "app.main(silent=True)",
                  "children": [
                    {
                      "value": "app.main(silent=True)",
                      "children": [
                        {
                          "value": "app.main(silent=True)",
                          "children": [
                            {
                              "value": "app.main",
                              "children": [
                                {
                                  "value": "app",
                                  "children": []
                                },
                                {
                                  "value": "main",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(silent=True)",
                              "children": [
                                {
                                  "value": "silent=True",
                                  "children": [
                                    {
                                      "value": "silent",
                                      "children": []
                                    },
                                    {
                                      "value": "True",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "@click.group()\ndef main():\n    \"\"\"AutoGPT Server CLI Tool\"\"\"\n    pass",
      "children": [
        {
          "value": "@click.group()",
          "children": [
            {
              "value": "click.group()",
              "children": [
                {
                  "value": "click.group",
                  "children": [
                    {
                      "value": "click",
                      "children": []
                    },
                    {
                      "value": "group",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "()",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "def main():\n    \"\"\"AutoGPT Server CLI Tool\"\"\"\n    pass",
          "children": [
            {
              "value": "main",
              "children": []
            },
            {
              "value": "()",
              "children": []
            },
            {
              "value": "\"\"\"AutoGPT Server CLI Tool\"\"\"\n    pass",
              "children": [
                {
                  "value": "\"\"\"AutoGPT Server CLI Tool\"\"\"",
                  "children": [
                    {
                      "value": "\"\"\"AutoGPT Server CLI Tool\"\"\"",
                      "children": [
                        {
                          "value": "\"\"\"",
                          "children": []
                        },
                        {
                          "value": "AutoGPT Server CLI Tool",
                          "children": []
                        },
                        {
                          "value": "\"\"\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "pass",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "@main.command()\ndef start():\n    \"\"\"\n    Starts the server in the background and saves the PID\n    \"\"\"\n    # Define the path for the new directory and file\n    pid = get_pid()\n    if pid and psutil.pid_exists(pid):\n        print(\"Server is already running\")\n        exit(1)\n    elif pid:\n        print(\"PID does not exist deleting file\")\n        os.remove(get_pid_path())\n\n    print(\"Starting server\")\n    pid = MainApp().start(background=True, silent=True)\n    print(f\"Server running in process: {pid}\")\n\n    write_pid(pid)\n    print(\"done\")\n    os._exit(status=0)",
      "children": [
        {
          "value": "@main.command()",
          "children": [
            {
              "value": "main.command()",
              "children": [
                {
                  "value": "main.command",
                  "children": [
                    {
                      "value": "main",
                      "children": []
                    },
                    {
                      "value": "command",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "()",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "def start():\n    \"\"\"\n    Starts the server in the background and saves the PID\n    \"\"\"\n    # Define the path for the new directory and file\n    pid = get_pid()\n    if pid and psutil.pid_exists(pid):\n        print(\"Server is already running\")\n        exit(1)\n    elif pid:\n        print(\"PID does not exist deleting file\")\n        os.remove(get_pid_path())\n\n    print(\"Starting server\")\n    pid = MainApp().start(background=True, silent=True)\n    print(f\"Server running in process: {pid}\")\n\n    write_pid(pid)\n    print(\"done\")\n    os._exit(status=0)",
          "children": [
            {
              "value": "start",
              "children": []
            },
            {
              "value": "()",
              "children": []
            },
            {
              "value": "\"\"\"\n    Starts the server in the background and saves the PID\n    \"\"\"\n    # Define the path for the new directory and file\n    pid = get_pid()\n    if pid and psutil.pid_exists(pid):\n        print(\"Server is already running\")\n        exit(1)\n    elif pid:\n        print(\"PID does not exist deleting file\")\n        os.remove(get_pid_path())\n\n    print(\"Starting server\")\n    pid = MainApp().start(background=True, silent=True)\n    print(f\"Server running in process: {pid}\")\n\n    write_pid(pid)\n    print(\"done\")\n    os._exit(status=0)",
              "children": [
                {
                  "value": "\"\"\"\n    Starts the server in the background and saves the PID\n    \"\"\"",
                  "children": [
                    {
                      "value": "\"\"\"\n    Starts the server in the background and saves the PID\n    \"\"\"",
                      "children": [
                        {
                          "value": "\"\"\"",
                          "children": []
                        },
                        {
                          "value": "Starts the server in the background and saves the PID",
                          "children": []
                        },
                        {
                          "value": "\"\"\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "# Define the path for the new directory and file",
                  "children": []
                },
                {
                  "value": "pid = get_pid()",
                  "children": [
                    {
                      "value": "pid = get_pid()",
                      "children": [
                        {
                          "value": "pid",
                          "children": []
                        },
                        {
                          "value": "get_pid()",
                          "children": [
                            {
                              "value": "get_pid",
                              "children": []
                            },
                            {
                              "value": "()",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "if pid and psutil.pid_exists(pid):\n        print(\"Server is already running\")\n        exit(1)\n    elif pid:\n        print(\"PID does not exist deleting file\")\n        os.remove(get_pid_path())",
                  "children": [
                    {
                      "value": "pid and psutil.pid_exists(pid)",
                      "children": [
                        {
                          "value": "pid",
                          "children": []
                        },
                        {
                          "value": "psutil.pid_exists(pid)",
                          "children": [
                            {
                              "value": "psutil.pid_exists",
                              "children": [
                                {
                                  "value": "psutil",
                                  "children": []
                                },
                                {
                                  "value": "pid_exists",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(pid)",
                              "children": [
                                {
                                  "value": "pid",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "print(\"Server is already running\")\n        exit(1)",
                      "children": [
                        {
                          "value": "print(\"Server is already running\")",
                          "children": [
                            {
                              "value": "print(\"Server is already running\")",
                              "children": [
                                {
                                  "value": "print",
                                  "children": []
                                },
                                {
                                  "value": "(\"Server is already running\")",
                                  "children": [
                                    {
                                      "value": "\"Server is already running\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "Server is already running",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "exit(1)",
                          "children": [
                            {
                              "value": "exit(1)",
                              "children": [
                                {
                                  "value": "exit",
                                  "children": []
                                },
                                {
                                  "value": "(1)",
                                  "children": [
                                    {
                                      "value": "1",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "elif pid:\n        print(\"PID does not exist deleting file\")\n        os.remove(get_pid_path())",
                      "children": [
                        {
                          "value": "pid",
                          "children": []
                        },
                        {
                          "value": "print(\"PID does not exist deleting file\")\n        os.remove(get_pid_path())",
                          "children": [
                            {
                              "value": "print(\"PID does not exist deleting file\")",
                              "children": [
                                {
                                  "value": "print(\"PID does not exist deleting file\")",
                                  "children": [
                                    {
                                      "value": "print",
                                      "children": []
                                    },
                                    {
                                      "value": "(\"PID does not exist deleting file\")",
                                      "children": [
                                        {
                                          "value": "\"PID does not exist deleting file\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "PID does not exist deleting file",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "os.remove(get_pid_path())",
                              "children": [
                                {
                                  "value": "os.remove(get_pid_path())",
                                  "children": [
                                    {
                                      "value": "os.remove",
                                      "children": [
                                        {
                                          "value": "os",
                                          "children": []
                                        },
                                        {
                                          "value": "remove",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(get_pid_path())",
                                      "children": [
                                        {
                                          "value": "get_pid_path()",
                                          "children": [
                                            {
                                              "value": "get_pid_path",
                                              "children": []
                                            },
                                            {
                                              "value": "()",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "print(\"Starting server\")",
                  "children": [
                    {
                      "value": "print(\"Starting server\")",
                      "children": [
                        {
                          "value": "print",
                          "children": []
                        },
                        {
                          "value": "(\"Starting server\")",
                          "children": [
                            {
                              "value": "\"Starting server\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "Starting server",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "pid = MainApp().start(background=True, silent=True)",
                  "children": [
                    {
                      "value": "pid = MainApp().start(background=True, silent=True)",
                      "children": [
                        {
                          "value": "pid",
                          "children": []
                        },
                        {
                          "value": "MainApp().start(background=True, silent=True)",
                          "children": [
                            {
                              "value": "MainApp().start",
                              "children": [
                                {
                                  "value": "MainApp()",
                                  "children": [
                                    {
                                      "value": "MainApp",
                                      "children": []
                                    },
                                    {
                                      "value": "()",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "start",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(background=True, silent=True)",
                              "children": [
                                {
                                  "value": "background=True",
                                  "children": [
                                    {
                                      "value": "background",
                                      "children": []
                                    },
                                    {
                                      "value": "True",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "silent=True",
                                  "children": [
                                    {
                                      "value": "silent",
                                      "children": []
                                    },
                                    {
                                      "value": "True",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "print(f\"Server running in process: {pid}\")",
                  "children": [
                    {
                      "value": "print(f\"Server running in process: {pid}\")",
                      "children": [
                        {
                          "value": "print",
                          "children": []
                        },
                        {
                          "value": "(f\"Server running in process: {pid}\")",
                          "children": [
                            {
                              "value": "f\"Server running in process: {pid}\"",
                              "children": [
                                {
                                  "value": "f\"",
                                  "children": []
                                },
                                {
                                  "value": "Server running in process:",
                                  "children": []
                                },
                                {
                                  "value": "{pid}",
                                  "children": [
                                    {
                                      "value": "pid",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "write_pid(pid)",
                  "children": [
                    {
                      "value": "write_pid(pid)",
                      "children": [
                        {
                          "value": "write_pid",
                          "children": []
                        },
                        {
                          "value": "(pid)",
                          "children": [
                            {
                              "value": "pid",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "print(\"done\")",
                  "children": [
                    {
                      "value": "print(\"done\")",
                      "children": [
                        {
                          "value": "print",
                          "children": []
                        },
                        {
                          "value": "(\"done\")",
                          "children": [
                            {
                              "value": "\"done\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "done",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "os._exit(status=0)",
                  "children": [
                    {
                      "value": "os._exit(status=0)",
                      "children": [
                        {
                          "value": "os._exit",
                          "children": [
                            {
                              "value": "os",
                              "children": []
                            },
                            {
                              "value": "_exit",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(status=0)",
                          "children": [
                            {
                              "value": "status=0",
                              "children": [
                                {
                                  "value": "status",
                                  "children": []
                                },
                                {
                                  "value": "0",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "@main.command()\ndef stop():\n    \"\"\"\n    Stops the server\n    \"\"\"\n    pid = get_pid()\n    if not pid:\n        print(\"Server is not running\")\n        return\n\n    os.remove(get_pid_path())\n    process = psutil.Process(int(pid))\n    for child in process.children(recursive=True):\n        child.terminate()\n    process.terminate()\n\n    print(\"Server Stopped\")",
      "children": [
        {
          "value": "@main.command()",
          "children": [
            {
              "value": "main.command()",
              "children": [
                {
                  "value": "main.command",
                  "children": [
                    {
                      "value": "main",
                      "children": []
                    },
                    {
                      "value": "command",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "()",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "def stop():\n    \"\"\"\n    Stops the server\n    \"\"\"\n    pid = get_pid()\n    if not pid:\n        print(\"Server is not running\")\n        return\n\n    os.remove(get_pid_path())\n    process = psutil.Process(int(pid))\n    for child in process.children(recursive=True):\n        child.terminate()\n    process.terminate()\n\n    print(\"Server Stopped\")",
          "children": [
            {
              "value": "stop",
              "children": []
            },
            {
              "value": "()",
              "children": []
            },
            {
              "value": "\"\"\"\n    Stops the server\n    \"\"\"\n    pid = get_pid()\n    if not pid:\n        print(\"Server is not running\")\n        return\n\n    os.remove(get_pid_path())\n    process = psutil.Process(int(pid))\n    for child in process.children(recursive=True):\n        child.terminate()\n    process.terminate()\n\n    print(\"Server Stopped\")",
              "children": [
                {
                  "value": "\"\"\"\n    Stops the server\n    \"\"\"",
                  "children": [
                    {
                      "value": "\"\"\"\n    Stops the server\n    \"\"\"",
                      "children": [
                        {
                          "value": "\"\"\"",
                          "children": []
                        },
                        {
                          "value": "Stops the server",
                          "children": []
                        },
                        {
                          "value": "\"\"\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "pid = get_pid()",
                  "children": [
                    {
                      "value": "pid = get_pid()",
                      "children": [
                        {
                          "value": "pid",
                          "children": []
                        },
                        {
                          "value": "get_pid()",
                          "children": [
                            {
                              "value": "get_pid",
                              "children": []
                            },
                            {
                              "value": "()",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "if not pid:\n        print(\"Server is not running\")\n        return",
                  "children": [
                    {
                      "value": "not pid",
                      "children": [
                        {
                          "value": "pid",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "print(\"Server is not running\")\n        return",
                      "children": [
                        {
                          "value": "print(\"Server is not running\")",
                          "children": [
                            {
                              "value": "print(\"Server is not running\")",
                              "children": [
                                {
                                  "value": "print",
                                  "children": []
                                },
                                {
                                  "value": "(\"Server is not running\")",
                                  "children": [
                                    {
                                      "value": "\"Server is not running\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "Server is not running",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "return",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "os.remove(get_pid_path())",
                  "children": [
                    {
                      "value": "os.remove(get_pid_path())",
                      "children": [
                        {
                          "value": "os.remove",
                          "children": [
                            {
                              "value": "os",
                              "children": []
                            },
                            {
                              "value": "remove",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(get_pid_path())",
                          "children": [
                            {
                              "value": "get_pid_path()",
                              "children": [
                                {
                                  "value": "get_pid_path",
                                  "children": []
                                },
                                {
                                  "value": "()",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "process = psutil.Process(int(pid))",
                  "children": [
                    {
                      "value": "process = psutil.Process(int(pid))",
                      "children": [
                        {
                          "value": "process",
                          "children": []
                        },
                        {
                          "value": "psutil.Process(int(pid))",
                          "children": [
                            {
                              "value": "psutil.Process",
                              "children": [
                                {
                                  "value": "psutil",
                                  "children": []
                                },
                                {
                                  "value": "Process",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(int(pid))",
                              "children": [
                                {
                                  "value": "int(pid)",
                                  "children": [
                                    {
                                      "value": "int",
                                      "children": []
                                    },
                                    {
                                      "value": "(pid)",
                                      "children": [
                                        {
                                          "value": "pid",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "for child in process.children(recursive=True):\n        child.terminate()",
                  "children": [
                    {
                      "value": "child",
                      "children": []
                    },
                    {
                      "value": "process.children(recursive=True)",
                      "children": [
                        {
                          "value": "process.children",
                          "children": [
                            {
                              "value": "process",
                              "children": []
                            },
                            {
                              "value": "children",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(recursive=True)",
                          "children": [
                            {
                              "value": "recursive=True",
                              "children": [
                                {
                                  "value": "recursive",
                                  "children": []
                                },
                                {
                                  "value": "True",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "child.terminate()",
                      "children": [
                        {
                          "value": "child.terminate()",
                          "children": [
                            {
                              "value": "child.terminate()",
                              "children": [
                                {
                                  "value": "child.terminate",
                                  "children": [
                                    {
                                      "value": "child",
                                      "children": []
                                    },
                                    {
                                      "value": "terminate",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "()",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "process.terminate()",
                  "children": [
                    {
                      "value": "process.terminate()",
                      "children": [
                        {
                          "value": "process.terminate",
                          "children": [
                            {
                              "value": "process",
                              "children": []
                            },
                            {
                              "value": "terminate",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "()",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "print(\"Server Stopped\")",
                  "children": [
                    {
                      "value": "print(\"Server Stopped\")",
                      "children": [
                        {
                          "value": "print",
                          "children": []
                        },
                        {
                          "value": "(\"Server Stopped\")",
                          "children": [
                            {
                              "value": "\"Server Stopped\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "Server Stopped",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "@main.command()\ndef gen_encrypt_key():\n    \"\"\"\n    Generate a new encryption key\n    \"\"\"\n    from cryptography.fernet import Fernet\n\n    print(Fernet.generate_key().decode())",
      "children": [
        {
          "value": "@main.command()",
          "children": [
            {
              "value": "main.command()",
              "children": [
                {
                  "value": "main.command",
                  "children": [
                    {
                      "value": "main",
                      "children": []
                    },
                    {
                      "value": "command",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "()",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "def gen_encrypt_key():\n    \"\"\"\n    Generate a new encryption key\n    \"\"\"\n    from cryptography.fernet import Fernet\n\n    print(Fernet.generate_key().decode())",
          "children": [
            {
              "value": "gen_encrypt_key",
              "children": []
            },
            {
              "value": "()",
              "children": []
            },
            {
              "value": "\"\"\"\n    Generate a new encryption key\n    \"\"\"\n    from cryptography.fernet import Fernet\n\n    print(Fernet.generate_key().decode())",
              "children": [
                {
                  "value": "\"\"\"\n    Generate a new encryption key\n    \"\"\"",
                  "children": [
                    {
                      "value": "\"\"\"\n    Generate a new encryption key\n    \"\"\"",
                      "children": [
                        {
                          "value": "\"\"\"",
                          "children": []
                        },
                        {
                          "value": "Generate a new encryption key",
                          "children": []
                        },
                        {
                          "value": "\"\"\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "from cryptography.fernet import Fernet",
                  "children": [
                    {
                      "value": "cryptography.fernet",
                      "children": [
                        {
                          "value": "cryptography",
                          "children": []
                        },
                        {
                          "value": "fernet",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "Fernet",
                      "children": [
                        {
                          "value": "Fernet",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "print(Fernet.generate_key().decode())",
                  "children": [
                    {
                      "value": "print(Fernet.generate_key().decode())",
                      "children": [
                        {
                          "value": "print",
                          "children": []
                        },
                        {
                          "value": "(Fernet.generate_key().decode())",
                          "children": [
                            {
                              "value": "Fernet.generate_key().decode()",
                              "children": [
                                {
                                  "value": "Fernet.generate_key().decode",
                                  "children": [
                                    {
                                      "value": "Fernet.generate_key()",
                                      "children": [
                                        {
                                          "value": "Fernet.generate_key",
                                          "children": [
                                            {
                                              "value": "Fernet",
                                              "children": []
                                            },
                                            {
                                              "value": "generate_key",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "()",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "decode",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "()",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "@click.group()\ndef test():\n    \"\"\"\n    Group for test commands\n    \"\"\"\n    pass",
      "children": [
        {
          "value": "@click.group()",
          "children": [
            {
              "value": "click.group()",
              "children": [
                {
                  "value": "click.group",
                  "children": [
                    {
                      "value": "click",
                      "children": []
                    },
                    {
                      "value": "group",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "()",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "def test():\n    \"\"\"\n    Group for test commands\n    \"\"\"\n    pass",
          "children": [
            {
              "value": "test",
              "children": []
            },
            {
              "value": "()",
              "children": []
            },
            {
              "value": "\"\"\"\n    Group for test commands\n    \"\"\"\n    pass",
              "children": [
                {
                  "value": "\"\"\"\n    Group for test commands\n    \"\"\"",
                  "children": [
                    {
                      "value": "\"\"\"\n    Group for test commands\n    \"\"\"",
                      "children": [
                        {
                          "value": "\"\"\"",
                          "children": []
                        },
                        {
                          "value": "Group for test commands",
                          "children": []
                        },
                        {
                          "value": "\"\"\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "pass",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "@test.command()\n@click.argument(\"server_address\")\ndef reddit(server_address: str):\n    \"\"\"\n    Create an event graph\n    \"\"\"\n    import requests\n\n    from backend.usecases.reddit_marketing import create_test_graph\n\n    test_graph = create_test_graph()\n    url = f\"{server_address}/graphs\"\n    headers = {\"Content-Type\": \"application/json\"}\n    data = test_graph.model_dump_json()\n\n    response = requests.post(url, headers=headers, data=data)\n\n    graph_id = response.json()[\"id\"]\n    print(f\"Graph created with ID: {graph_id}\")",
      "children": [
        {
          "value": "@test.command()",
          "children": [
            {
              "value": "test.command()",
              "children": [
                {
                  "value": "test.command",
                  "children": [
                    {
                      "value": "test",
                      "children": []
                    },
                    {
                      "value": "command",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "()",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "@click.argument(\"server_address\")",
          "children": [
            {
              "value": "click.argument(\"server_address\")",
              "children": [
                {
                  "value": "click.argument",
                  "children": [
                    {
                      "value": "click",
                      "children": []
                    },
                    {
                      "value": "argument",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "(\"server_address\")",
                  "children": [
                    {
                      "value": "\"server_address\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "server_address",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "def reddit(server_address: str):\n    \"\"\"\n    Create an event graph\n    \"\"\"\n    import requests\n\n    from backend.usecases.reddit_marketing import create_test_graph\n\n    test_graph = create_test_graph()\n    url = f\"{server_address}/graphs\"\n    headers = {\"Content-Type\": \"application/json\"}\n    data = test_graph.model_dump_json()\n\n    response = requests.post(url, headers=headers, data=data)\n\n    graph_id = response.json()[\"id\"]\n    print(f\"Graph created with ID: {graph_id}\")",
          "children": [
            {
              "value": "reddit",
              "children": []
            },
            {
              "value": "(server_address: str)",
              "children": [
                {
                  "value": "server_address: str",
                  "children": [
                    {
                      "value": "server_address",
                      "children": []
                    },
                    {
                      "value": "str",
                      "children": [
                        {
                          "value": "str",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "\"\"\"\n    Create an event graph\n    \"\"\"\n    import requests\n\n    from backend.usecases.reddit_marketing import create_test_graph\n\n    test_graph = create_test_graph()\n    url = f\"{server_address}/graphs\"\n    headers = {\"Content-Type\": \"application/json\"}\n    data = test_graph.model_dump_json()\n\n    response = requests.post(url, headers=headers, data=data)\n\n    graph_id = response.json()[\"id\"]\n    print(f\"Graph created with ID: {graph_id}\")",
              "children": [
                {
                  "value": "\"\"\"\n    Create an event graph\n    \"\"\"",
                  "children": [
                    {
                      "value": "\"\"\"\n    Create an event graph\n    \"\"\"",
                      "children": [
                        {
                          "value": "\"\"\"",
                          "children": []
                        },
                        {
                          "value": "Create an event graph",
                          "children": []
                        },
                        {
                          "value": "\"\"\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "import requests",
                  "children": [
                    {
                      "value": "requests",
                      "children": [
                        {
                          "value": "requests",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "from backend.usecases.reddit_marketing import create_test_graph",
                  "children": [
                    {
                      "value": "backend.usecases.reddit_marketing",
                      "children": [
                        {
                          "value": "backend",
                          "children": []
                        },
                        {
                          "value": "usecases",
                          "children": []
                        },
                        {
                          "value": "reddit_marketing",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "create_test_graph",
                      "children": [
                        {
                          "value": "create_test_graph",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "test_graph = create_test_graph()",
                  "children": [
                    {
                      "value": "test_graph = create_test_graph()",
                      "children": [
                        {
                          "value": "test_graph",
                          "children": []
                        },
                        {
                          "value": "create_test_graph()",
                          "children": [
                            {
                              "value": "create_test_graph",
                              "children": []
                            },
                            {
                              "value": "()",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "url = f\"{server_address}/graphs\"",
                  "children": [
                    {
                      "value": "url = f\"{server_address}/graphs\"",
                      "children": [
                        {
                          "value": "url",
                          "children": []
                        },
                        {
                          "value": "f\"{server_address}/graphs\"",
                          "children": [
                            {
                              "value": "f\"",
                              "children": []
                            },
                            {
                              "value": "{server_address}",
                              "children": [
                                {
                                  "value": "server_address",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "/graphs",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "headers = {\"Content-Type\": \"application/json\"}",
                  "children": [
                    {
                      "value": "headers = {\"Content-Type\": \"application/json\"}",
                      "children": [
                        {
                          "value": "headers",
                          "children": []
                        },
                        {
                          "value": "{\"Content-Type\": \"application/json\"}",
                          "children": [
                            {
                              "value": "\"Content-Type\": \"application/json\"",
                              "children": [
                                {
                                  "value": "\"Content-Type\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "Content-Type",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "\"application/json\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "application/json",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "data = test_graph.model_dump_json()",
                  "children": [
                    {
                      "value": "data = test_graph.model_dump_json()",
                      "children": [
                        {
                          "value": "data",
                          "children": []
                        },
                        {
                          "value": "test_graph.model_dump_json()",
                          "children": [
                            {
                              "value": "test_graph.model_dump_json",
                              "children": [
                                {
                                  "value": "test_graph",
                                  "children": []
                                },
                                {
                                  "value": "model_dump_json",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "()",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "response = requests.post(url, headers=headers, data=data)",
                  "children": [
                    {
                      "value": "response = requests.post(url, headers=headers, data=data)",
                      "children": [
                        {
                          "value": "response",
                          "children": []
                        },
                        {
                          "value": "requests.post(url, headers=headers, data=data)",
                          "children": [
                            {
                              "value": "requests.post",
                              "children": [
                                {
                                  "value": "requests",
                                  "children": []
                                },
                                {
                                  "value": "post",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(url, headers=headers, data=data)",
                              "children": [
                                {
                                  "value": "url",
                                  "children": []
                                },
                                {
                                  "value": "headers=headers",
                                  "children": [
                                    {
                                      "value": "headers",
                                      "children": []
                                    },
                                    {
                                      "value": "headers",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "data=data",
                                  "children": [
                                    {
                                      "value": "data",
                                      "children": []
                                    },
                                    {
                                      "value": "data",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "graph_id = response.json()[\"id\"]",
                  "children": [
                    {
                      "value": "graph_id = response.json()[\"id\"]",
                      "children": [
                        {
                          "value": "graph_id",
                          "children": []
                        },
                        {
                          "value": "response.json()[\"id\"]",
                          "children": [
                            {
                              "value": "response.json()",
                              "children": [
                                {
                                  "value": "response.json",
                                  "children": [
                                    {
                                      "value": "response",
                                      "children": []
                                    },
                                    {
                                      "value": "json",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "()",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "\"id\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "id",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "print(f\"Graph created with ID: {graph_id}\")",
                  "children": [
                    {
                      "value": "print(f\"Graph created with ID: {graph_id}\")",
                      "children": [
                        {
                          "value": "print",
                          "children": []
                        },
                        {
                          "value": "(f\"Graph created with ID: {graph_id}\")",
                          "children": [
                            {
                              "value": "f\"Graph created with ID: {graph_id}\"",
                              "children": [
                                {
                                  "value": "f\"",
                                  "children": []
                                },
                                {
                                  "value": "Graph created with ID:",
                                  "children": []
                                },
                                {
                                  "value": "{graph_id}",
                                  "children": [
                                    {
                                      "value": "graph_id",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "@test.command()\n@click.argument(\"server_address\")\ndef populate_db(server_address: str):\n    \"\"\"\n    Create an event graph\n    \"\"\"\n    import requests\n\n    from backend.usecases.sample import create_test_graph\n\n    test_graph = create_test_graph()\n    url = f\"{server_address}/graphs\"\n    headers = {\"Content-Type\": \"application/json\"}\n    data = test_graph.model_dump_json()\n\n    response = requests.post(url, headers=headers, data=data)\n\n    graph_id = response.json()[\"id\"]\n\n    if response.status_code == 200:\n        execute_url = f\"{server_address}/graphs/{response.json()['id']}/execute\"\n        text = \"Hello, World!\"\n        input_data = {\"input\": text}\n        response = requests.post(execute_url, headers=headers, json=input_data)\n\n        schedule_url = f\"{server_address}/graphs/{graph_id}/schedules\"\n        data = {\n            \"graph_id\": graph_id,\n            \"cron\": \"*/5 * * * *\",\n            \"input_data\": {\"input\": \"Hello, World!\"},\n        }\n        response = requests.post(schedule_url, headers=headers, json=data)\n\n    print(\"Database populated with: \\n- graph\\n- execution\\n- schedule\")",
      "children": [
        {
          "value": "@test.command()",
          "children": [
            {
              "value": "test.command()",
              "children": [
                {
                  "value": "test.command",
                  "children": [
                    {
                      "value": "test",
                      "children": []
                    },
                    {
                      "value": "command",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "()",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "@click.argument(\"server_address\")",
          "children": [
            {
              "value": "click.argument(\"server_address\")",
              "children": [
                {
                  "value": "click.argument",
                  "children": [
                    {
                      "value": "click",
                      "children": []
                    },
                    {
                      "value": "argument",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "(\"server_address\")",
                  "children": [
                    {
                      "value": "\"server_address\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "server_address",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "def populate_db(server_address: str):\n    \"\"\"\n    Create an event graph\n    \"\"\"\n    import requests\n\n    from backend.usecases.sample import create_test_graph\n\n    test_graph = create_test_graph()\n    url = f\"{server_address}/graphs\"\n    headers = {\"Content-Type\": \"application/json\"}\n    data = test_graph.model_dump_json()\n\n    response = requests.post(url, headers=headers, data=data)\n\n    graph_id = response.json()[\"id\"]\n\n    if response.status_code == 200:\n        execute_url = f\"{server_address}/graphs/{response.json()['id']}/execute\"\n        text = \"Hello, World!\"\n        input_data = {\"input\": text}\n        response = requests.post(execute_url, headers=headers, json=input_data)\n\n        schedule_url = f\"{server_address}/graphs/{graph_id}/schedules\"\n        data = {\n            \"graph_id\": graph_id,\n            \"cron\": \"*/5 * * * *\",\n            \"input_data\": {\"input\": \"Hello, World!\"},\n        }\n        response = requests.post(schedule_url, headers=headers, json=data)\n\n    print(\"Database populated with: \\n- graph\\n- execution\\n- schedule\")",
          "children": [
            {
              "value": "populate_db",
              "children": []
            },
            {
              "value": "(server_address: str)",
              "children": [
                {
                  "value": "server_address: str",
                  "children": [
                    {
                      "value": "server_address",
                      "children": []
                    },
                    {
                      "value": "str",
                      "children": [
                        {
                          "value": "str",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "\"\"\"\n    Create an event graph\n    \"\"\"\n    import requests\n\n    from backend.usecases.sample import create_test_graph\n\n    test_graph = create_test_graph()\n    url = f\"{server_address}/graphs\"\n    headers = {\"Content-Type\": \"application/json\"}\n    data = test_graph.model_dump_json()\n\n    response = requests.post(url, headers=headers, data=data)\n\n    graph_id = response.json()[\"id\"]\n\n    if response.status_code == 200:\n        execute_url = f\"{server_address}/graphs/{response.json()['id']}/execute\"\n        text = \"Hello, World!\"\n        input_data = {\"input\": text}\n        response = requests.post(execute_url, headers=headers, json=input_data)\n\n        schedule_url = f\"{server_address}/graphs/{graph_id}/schedules\"\n        data = {\n            \"graph_id\": graph_id,\n            \"cron\": \"*/5 * * * *\",\n            \"input_data\": {\"input\": \"Hello, World!\"},\n        }\n        response = requests.post(schedule_url, headers=headers, json=data)\n\n    print(\"Database populated with: \\n- graph\\n- execution\\n- schedule\")",
              "children": [
                {
                  "value": "\"\"\"\n    Create an event graph\n    \"\"\"",
                  "children": [
                    {
                      "value": "\"\"\"\n    Create an event graph\n    \"\"\"",
                      "children": [
                        {
                          "value": "\"\"\"",
                          "children": []
                        },
                        {
                          "value": "Create an event graph",
                          "children": []
                        },
                        {
                          "value": "\"\"\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "import requests",
                  "children": [
                    {
                      "value": "requests",
                      "children": [
                        {
                          "value": "requests",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "from backend.usecases.sample import create_test_graph",
                  "children": [
                    {
                      "value": "backend.usecases.sample",
                      "children": [
                        {
                          "value": "backend",
                          "children": []
                        },
                        {
                          "value": "usecases",
                          "children": []
                        },
                        {
                          "value": "sample",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "create_test_graph",
                      "children": [
                        {
                          "value": "create_test_graph",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "test_graph = create_test_graph()",
                  "children": [
                    {
                      "value": "test_graph = create_test_graph()",
                      "children": [
                        {
                          "value": "test_graph",
                          "children": []
                        },
                        {
                          "value": "create_test_graph()",
                          "children": [
                            {
                              "value": "create_test_graph",
                              "children": []
                            },
                            {
                              "value": "()",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "url = f\"{server_address}/graphs\"",
                  "children": [
                    {
                      "value": "url = f\"{server_address}/graphs\"",
                      "children": [
                        {
                          "value": "url",
                          "children": []
                        },
                        {
                          "value": "f\"{server_address}/graphs\"",
                          "children": [
                            {
                              "value": "f\"",
                              "children": []
                            },
                            {
                              "value": "{server_address}",
                              "children": [
                                {
                                  "value": "server_address",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "/graphs",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "headers = {\"Content-Type\": \"application/json\"}",
                  "children": [
                    {
                      "value": "headers = {\"Content-Type\": \"application/json\"}",
                      "children": [
                        {
                          "value": "headers",
                          "children": []
                        },
                        {
                          "value": "{\"Content-Type\": \"application/json\"}",
                          "children": [
                            {
                              "value": "\"Content-Type\": \"application/json\"",
                              "children": [
                                {
                                  "value": "\"Content-Type\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "Content-Type",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "\"application/json\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "application/json",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "data = test_graph.model_dump_json()",
                  "children": [
                    {
                      "value": "data = test_graph.model_dump_json()",
                      "children": [
                        {
                          "value": "data",
                          "children": []
                        },
                        {
                          "value": "test_graph.model_dump_json()",
                          "children": [
                            {
                              "value": "test_graph.model_dump_json",
                              "children": [
                                {
                                  "value": "test_graph",
                                  "children": []
                                },
                                {
                                  "value": "model_dump_json",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "()",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "response = requests.post(url, headers=headers, data=data)",
                  "children": [
                    {
                      "value": "response = requests.post(url, headers=headers, data=data)",
                      "children": [
                        {
                          "value": "response",
                          "children": []
                        },
                        {
                          "value": "requests.post(url, headers=headers, data=data)",
                          "children": [
                            {
                              "value": "requests.post",
                              "children": [
                                {
                                  "value": "requests",
                                  "children": []
                                },
                                {
                                  "value": "post",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(url, headers=headers, data=data)",
                              "children": [
                                {
                                  "value": "url",
                                  "children": []
                                },
                                {
                                  "value": "headers=headers",
                                  "children": [
                                    {
                                      "value": "headers",
                                      "children": []
                                    },
                                    {
                                      "value": "headers",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "data=data",
                                  "children": [
                                    {
                                      "value": "data",
                                      "children": []
                                    },
                                    {
                                      "value": "data",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "graph_id = response.json()[\"id\"]",
                  "children": [
                    {
                      "value": "graph_id = response.json()[\"id\"]",
                      "children": [
                        {
                          "value": "graph_id",
                          "children": []
                        },
                        {
                          "value": "response.json()[\"id\"]",
                          "children": [
                            {
                              "value": "response.json()",
                              "children": [
                                {
                                  "value": "response.json",
                                  "children": [
                                    {
                                      "value": "response",
                                      "children": []
                                    },
                                    {
                                      "value": "json",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "()",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "\"id\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "id",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "if response.status_code == 200:\n        execute_url = f\"{server_address}/graphs/{response.json()['id']}/execute\"\n        text = \"Hello, World!\"\n        input_data = {\"input\": text}\n        response = requests.post(execute_url, headers=headers, json=input_data)\n\n        schedule_url = f\"{server_address}/graphs/{graph_id}/schedules\"\n        data = {\n            \"graph_id\": graph_id,\n            \"cron\": \"*/5 * * * *\",\n            \"input_data\": {\"input\": \"Hello, World!\"},\n        }\n        response = requests.post(schedule_url, headers=headers, json=data)",
                  "children": [
                    {
                      "value": "response.status_code == 200",
                      "children": [
                        {
                          "value": "response.status_code",
                          "children": [
                            {
                              "value": "response",
                              "children": []
                            },
                            {
                              "value": "status_code",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "200",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "execute_url = f\"{server_address}/graphs/{response.json()['id']}/execute\"\n        text = \"Hello, World!\"\n        input_data = {\"input\": text}\n        response = requests.post(execute_url, headers=headers, json=input_data)\n\n        schedule_url = f\"{server_address}/graphs/{graph_id}/schedules\"\n        data = {\n            \"graph_id\": graph_id,\n            \"cron\": \"*/5 * * * *\",\n            \"input_data\": {\"input\": \"Hello, World!\"},\n        }\n        response = requests.post(schedule_url, headers=headers, json=data)",
                      "children": [
                        {
                          "value": "execute_url = f\"{server_address}/graphs/{response.json()['id']}/execute\"",
                          "children": [
                            {
                              "value": "execute_url = f\"{server_address}/graphs/{response.json()['id']}/execute\"",
                              "children": [
                                {
                                  "value": "execute_url",
                                  "children": []
                                },
                                {
                                  "value": "f\"{server_address}/graphs/{response.json()['id']}/execute\"",
                                  "children": [
                                    {
                                      "value": "f\"",
                                      "children": []
                                    },
                                    {
                                      "value": "{server_address}",
                                      "children": [
                                        {
                                          "value": "server_address",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "/graphs/",
                                      "children": []
                                    },
                                    {
                                      "value": "{response.json()['id']}",
                                      "children": [
                                        {
                                          "value": "response.json()['id']",
                                          "children": [
                                            {
                                              "value": "response.json()",
                                              "children": [
                                                {
                                                  "value": "response.json",
                                                  "children": [
                                                    {
                                                      "value": "response",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "json",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "()",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "'id'",
                                              "children": [
                                                {
                                                  "value": "'",
                                                  "children": []
                                                },
                                                {
                                                  "value": "id",
                                                  "children": []
                                                },
                                                {
                                                  "value": "'",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "/execute",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "text = \"Hello, World!\"",
                          "children": [
                            {
                              "value": "text = \"Hello, World!\"",
                              "children": [
                                {
                                  "value": "text",
                                  "children": []
                                },
                                {
                                  "value": "\"Hello, World!\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "Hello, World!",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "input_data = {\"input\": text}",
                          "children": [
                            {
                              "value": "input_data = {\"input\": text}",
                              "children": [
                                {
                                  "value": "input_data",
                                  "children": []
                                },
                                {
                                  "value": "{\"input\": text}",
                                  "children": [
                                    {
                                      "value": "\"input\": text",
                                      "children": [
                                        {
                                          "value": "\"input\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "input",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "text",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "response = requests.post(execute_url, headers=headers, json=input_data)",
                          "children": [
                            {
                              "value": "response = requests.post(execute_url, headers=headers, json=input_data)",
                              "children": [
                                {
                                  "value": "response",
                                  "children": []
                                },
                                {
                                  "value": "requests.post(execute_url, headers=headers, json=input_data)",
                                  "children": [
                                    {
                                      "value": "requests.post",
                                      "children": [
                                        {
                                          "value": "requests",
                                          "children": []
                                        },
                                        {
                                          "value": "post",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(execute_url, headers=headers, json=input_data)",
                                      "children": [
                                        {
                                          "value": "execute_url",
                                          "children": []
                                        },
                                        {
                                          "value": "headers=headers",
                                          "children": [
                                            {
                                              "value": "headers",
                                              "children": []
                                            },
                                            {
                                              "value": "headers",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "json=input_data",
                                          "children": [
                                            {
                                              "value": "json",
                                              "children": []
                                            },
                                            {
                                              "value": "input_data",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "schedule_url = f\"{server_address}/graphs/{graph_id}/schedules\"",
                          "children": [
                            {
                              "value": "schedule_url = f\"{server_address}/graphs/{graph_id}/schedules\"",
                              "children": [
                                {
                                  "value": "schedule_url",
                                  "children": []
                                },
                                {
                                  "value": "f\"{server_address}/graphs/{graph_id}/schedules\"",
                                  "children": [
                                    {
                                      "value": "f\"",
                                      "children": []
                                    },
                                    {
                                      "value": "{server_address}",
                                      "children": [
                                        {
                                          "value": "server_address",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "/graphs/",
                                      "children": []
                                    },
                                    {
                                      "value": "{graph_id}",
                                      "children": [
                                        {
                                          "value": "graph_id",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "/schedules",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "data = {\n            \"graph_id\": graph_id,\n            \"cron\": \"*/5 * * * *\",\n            \"input_data\": {\"input\": \"Hello, World!\"},\n        }",
                          "children": [
                            {
                              "value": "data = {\n            \"graph_id\": graph_id,\n            \"cron\": \"*/5 * * * *\",\n            \"input_data\": {\"input\": \"Hello, World!\"},\n        }",
                              "children": [
                                {
                                  "value": "data",
                                  "children": []
                                },
                                {
                                  "value": "{\n            \"graph_id\": graph_id,\n            \"cron\": \"*/5 * * * *\",\n            \"input_data\": {\"input\": \"Hello, World!\"},\n        }",
                                  "children": [
                                    {
                                      "value": "\"graph_id\": graph_id",
                                      "children": [
                                        {
                                          "value": "\"graph_id\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "graph_id",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "graph_id",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"cron\": \"*/5 * * * *\"",
                                      "children": [
                                        {
                                          "value": "\"cron\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "cron",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"*/5 * * * *\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "*/5 * * * *",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"input_data\": {\"input\": \"Hello, World!\"}",
                                      "children": [
                                        {
                                          "value": "\"input_data\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "input_data",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "{\"input\": \"Hello, World!\"}",
                                          "children": [
                                            {
                                              "value": "\"input\": \"Hello, World!\"",
                                              "children": [
                                                {
                                                  "value": "\"input\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "input",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"Hello, World!\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "Hello, World!",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "response = requests.post(schedule_url, headers=headers, json=data)",
                          "children": [
                            {
                              "value": "response = requests.post(schedule_url, headers=headers, json=data)",
                              "children": [
                                {
                                  "value": "response",
                                  "children": []
                                },
                                {
                                  "value": "requests.post(schedule_url, headers=headers, json=data)",
                                  "children": [
                                    {
                                      "value": "requests.post",
                                      "children": [
                                        {
                                          "value": "requests",
                                          "children": []
                                        },
                                        {
                                          "value": "post",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(schedule_url, headers=headers, json=data)",
                                      "children": [
                                        {
                                          "value": "schedule_url",
                                          "children": []
                                        },
                                        {
                                          "value": "headers=headers",
                                          "children": [
                                            {
                                              "value": "headers",
                                              "children": []
                                            },
                                            {
                                              "value": "headers",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "json=data",
                                          "children": [
                                            {
                                              "value": "json",
                                              "children": []
                                            },
                                            {
                                              "value": "data",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "print(\"Database populated with: \\n- graph\\n- execution\\n- schedule\")",
                  "children": [
                    {
                      "value": "print(\"Database populated with: \\n- graph\\n- execution\\n- schedule\")",
                      "children": [
                        {
                          "value": "print",
                          "children": []
                        },
                        {
                          "value": "(\"Database populated with: \\n- graph\\n- execution\\n- schedule\")",
                          "children": [
                            {
                              "value": "\"Database populated with: \\n- graph\\n- execution\\n- schedule\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "Database populated with: \\n- graph\\n- execution\\n- schedule",
                                  "children": [
                                    {
                                      "value": "\\n",
                                      "children": []
                                    },
                                    {
                                      "value": "\\n",
                                      "children": []
                                    },
                                    {
                                      "value": "\\n",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "@test.command()\n@click.argument(\"server_address\")\ndef graph(server_address: str):\n    \"\"\"\n    Create an event graph\n    \"\"\"\n    import requests\n\n    from backend.usecases.sample import create_test_graph\n\n    url = f\"{server_address}/graphs\"\n    headers = {\"Content-Type\": \"application/json\"}\n    data = create_test_graph().model_dump_json()\n    response = requests.post(url, headers=headers, data=data)\n\n    if response.status_code == 200:\n        print(response.json()[\"id\"])\n        execute_url = f\"{server_address}/graphs/{response.json()['id']}/execute\"\n        text = \"Hello, World!\"\n        input_data = {\"input\": text}\n        response = requests.post(execute_url, headers=headers, json=input_data)\n\n    else:\n        print(\"Failed to send graph\")\n        print(f\"Response: {response.text}\")",
      "children": [
        {
          "value": "@test.command()",
          "children": [
            {
              "value": "test.command()",
              "children": [
                {
                  "value": "test.command",
                  "children": [
                    {
                      "value": "test",
                      "children": []
                    },
                    {
                      "value": "command",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "()",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "@click.argument(\"server_address\")",
          "children": [
            {
              "value": "click.argument(\"server_address\")",
              "children": [
                {
                  "value": "click.argument",
                  "children": [
                    {
                      "value": "click",
                      "children": []
                    },
                    {
                      "value": "argument",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "(\"server_address\")",
                  "children": [
                    {
                      "value": "\"server_address\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "server_address",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "def graph(server_address: str):\n    \"\"\"\n    Create an event graph\n    \"\"\"\n    import requests\n\n    from backend.usecases.sample import create_test_graph\n\n    url = f\"{server_address}/graphs\"\n    headers = {\"Content-Type\": \"application/json\"}\n    data = create_test_graph().model_dump_json()\n    response = requests.post(url, headers=headers, data=data)\n\n    if response.status_code == 200:\n        print(response.json()[\"id\"])\n        execute_url = f\"{server_address}/graphs/{response.json()['id']}/execute\"\n        text = \"Hello, World!\"\n        input_data = {\"input\": text}\n        response = requests.post(execute_url, headers=headers, json=input_data)\n\n    else:\n        print(\"Failed to send graph\")\n        print(f\"Response: {response.text}\")",
          "children": [
            {
              "value": "graph",
              "children": []
            },
            {
              "value": "(server_address: str)",
              "children": [
                {
                  "value": "server_address: str",
                  "children": [
                    {
                      "value": "server_address",
                      "children": []
                    },
                    {
                      "value": "str",
                      "children": [
                        {
                          "value": "str",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "\"\"\"\n    Create an event graph\n    \"\"\"\n    import requests\n\n    from backend.usecases.sample import create_test_graph\n\n    url = f\"{server_address}/graphs\"\n    headers = {\"Content-Type\": \"application/json\"}\n    data = create_test_graph().model_dump_json()\n    response = requests.post(url, headers=headers, data=data)\n\n    if response.status_code == 200:\n        print(response.json()[\"id\"])\n        execute_url = f\"{server_address}/graphs/{response.json()['id']}/execute\"\n        text = \"Hello, World!\"\n        input_data = {\"input\": text}\n        response = requests.post(execute_url, headers=headers, json=input_data)\n\n    else:\n        print(\"Failed to send graph\")\n        print(f\"Response: {response.text}\")",
              "children": [
                {
                  "value": "\"\"\"\n    Create an event graph\n    \"\"\"",
                  "children": [
                    {
                      "value": "\"\"\"\n    Create an event graph\n    \"\"\"",
                      "children": [
                        {
                          "value": "\"\"\"",
                          "children": []
                        },
                        {
                          "value": "Create an event graph",
                          "children": []
                        },
                        {
                          "value": "\"\"\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "import requests",
                  "children": [
                    {
                      "value": "requests",
                      "children": [
                        {
                          "value": "requests",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "from backend.usecases.sample import create_test_graph",
                  "children": [
                    {
                      "value": "backend.usecases.sample",
                      "children": [
                        {
                          "value": "backend",
                          "children": []
                        },
                        {
                          "value": "usecases",
                          "children": []
                        },
                        {
                          "value": "sample",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "create_test_graph",
                      "children": [
                        {
                          "value": "create_test_graph",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "url = f\"{server_address}/graphs\"",
                  "children": [
                    {
                      "value": "url = f\"{server_address}/graphs\"",
                      "children": [
                        {
                          "value": "url",
                          "children": []
                        },
                        {
                          "value": "f\"{server_address}/graphs\"",
                          "children": [
                            {
                              "value": "f\"",
                              "children": []
                            },
                            {
                              "value": "{server_address}",
                              "children": [
                                {
                                  "value": "server_address",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "/graphs",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "headers = {\"Content-Type\": \"application/json\"}",
                  "children": [
                    {
                      "value": "headers = {\"Content-Type\": \"application/json\"}",
                      "children": [
                        {
                          "value": "headers",
                          "children": []
                        },
                        {
                          "value": "{\"Content-Type\": \"application/json\"}",
                          "children": [
                            {
                              "value": "\"Content-Type\": \"application/json\"",
                              "children": [
                                {
                                  "value": "\"Content-Type\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "Content-Type",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "\"application/json\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "application/json",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "data = create_test_graph().model_dump_json()",
                  "children": [
                    {
                      "value": "data = create_test_graph().model_dump_json()",
                      "children": [
                        {
                          "value": "data",
                          "children": []
                        },
                        {
                          "value": "create_test_graph().model_dump_json()",
                          "children": [
                            {
                              "value": "create_test_graph().model_dump_json",
                              "children": [
                                {
                                  "value": "create_test_graph()",
                                  "children": [
                                    {
                                      "value": "create_test_graph",
                                      "children": []
                                    },
                                    {
                                      "value": "()",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "model_dump_json",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "()",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "response = requests.post(url, headers=headers, data=data)",
                  "children": [
                    {
                      "value": "response = requests.post(url, headers=headers, data=data)",
                      "children": [
                        {
                          "value": "response",
                          "children": []
                        },
                        {
                          "value": "requests.post(url, headers=headers, data=data)",
                          "children": [
                            {
                              "value": "requests.post",
                              "children": [
                                {
                                  "value": "requests",
                                  "children": []
                                },
                                {
                                  "value": "post",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(url, headers=headers, data=data)",
                              "children": [
                                {
                                  "value": "url",
                                  "children": []
                                },
                                {
                                  "value": "headers=headers",
                                  "children": [
                                    {
                                      "value": "headers",
                                      "children": []
                                    },
                                    {
                                      "value": "headers",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "data=data",
                                  "children": [
                                    {
                                      "value": "data",
                                      "children": []
                                    },
                                    {
                                      "value": "data",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "if response.status_code == 200:\n        print(response.json()[\"id\"])\n        execute_url = f\"{server_address}/graphs/{response.json()['id']}/execute\"\n        text = \"Hello, World!\"\n        input_data = {\"input\": text}\n        response = requests.post(execute_url, headers=headers, json=input_data)\n\n    else:\n        print(\"Failed to send graph\")\n        print(f\"Response: {response.text}\")",
                  "children": [
                    {
                      "value": "response.status_code == 200",
                      "children": [
                        {
                          "value": "response.status_code",
                          "children": [
                            {
                              "value": "response",
                              "children": []
                            },
                            {
                              "value": "status_code",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "200",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "print(response.json()[\"id\"])\n        execute_url = f\"{server_address}/graphs/{response.json()['id']}/execute\"\n        text = \"Hello, World!\"\n        input_data = {\"input\": text}\n        response = requests.post(execute_url, headers=headers, json=input_data)",
                      "children": [
                        {
                          "value": "print(response.json()[\"id\"])",
                          "children": [
                            {
                              "value": "print(response.json()[\"id\"])",
                              "children": [
                                {
                                  "value": "print",
                                  "children": []
                                },
                                {
                                  "value": "(response.json()[\"id\"])",
                                  "children": [
                                    {
                                      "value": "response.json()[\"id\"]",
                                      "children": [
                                        {
                                          "value": "response.json()",
                                          "children": [
                                            {
                                              "value": "response.json",
                                              "children": [
                                                {
                                                  "value": "response",
                                                  "children": []
                                                },
                                                {
                                                  "value": "json",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "()",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"id\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "id",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "execute_url = f\"{server_address}/graphs/{response.json()['id']}/execute\"",
                          "children": [
                            {
                              "value": "execute_url = f\"{server_address}/graphs/{response.json()['id']}/execute\"",
                              "children": [
                                {
                                  "value": "execute_url",
                                  "children": []
                                },
                                {
                                  "value": "f\"{server_address}/graphs/{response.json()['id']}/execute\"",
                                  "children": [
                                    {
                                      "value": "f\"",
                                      "children": []
                                    },
                                    {
                                      "value": "{server_address}",
                                      "children": [
                                        {
                                          "value": "server_address",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "/graphs/",
                                      "children": []
                                    },
                                    {
                                      "value": "{response.json()['id']}",
                                      "children": [
                                        {
                                          "value": "response.json()['id']",
                                          "children": [
                                            {
                                              "value": "response.json()",
                                              "children": [
                                                {
                                                  "value": "response.json",
                                                  "children": [
                                                    {
                                                      "value": "response",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "json",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "()",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "'id'",
                                              "children": [
                                                {
                                                  "value": "'",
                                                  "children": []
                                                },
                                                {
                                                  "value": "id",
                                                  "children": []
                                                },
                                                {
                                                  "value": "'",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "/execute",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "text = \"Hello, World!\"",
                          "children": [
                            {
                              "value": "text = \"Hello, World!\"",
                              "children": [
                                {
                                  "value": "text",
                                  "children": []
                                },
                                {
                                  "value": "\"Hello, World!\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "Hello, World!",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "input_data = {\"input\": text}",
                          "children": [
                            {
                              "value": "input_data = {\"input\": text}",
                              "children": [
                                {
                                  "value": "input_data",
                                  "children": []
                                },
                                {
                                  "value": "{\"input\": text}",
                                  "children": [
                                    {
                                      "value": "\"input\": text",
                                      "children": [
                                        {
                                          "value": "\"input\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "input",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "text",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "response = requests.post(execute_url, headers=headers, json=input_data)",
                          "children": [
                            {
                              "value": "response = requests.post(execute_url, headers=headers, json=input_data)",
                              "children": [
                                {
                                  "value": "response",
                                  "children": []
                                },
                                {
                                  "value": "requests.post(execute_url, headers=headers, json=input_data)",
                                  "children": [
                                    {
                                      "value": "requests.post",
                                      "children": [
                                        {
                                          "value": "requests",
                                          "children": []
                                        },
                                        {
                                          "value": "post",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "(execute_url, headers=headers, json=input_data)",
                                      "children": [
                                        {
                                          "value": "execute_url",
                                          "children": []
                                        },
                                        {
                                          "value": "headers=headers",
                                          "children": [
                                            {
                                              "value": "headers",
                                              "children": []
                                            },
                                            {
                                              "value": "headers",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "json=input_data",
                                          "children": [
                                            {
                                              "value": "json",
                                              "children": []
                                            },
                                            {
                                              "value": "input_data",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "else:\n        print(\"Failed to send graph\")\n        print(f\"Response: {response.text}\")",
                      "children": [
                        {
                          "value": "print(\"Failed to send graph\")\n        print(f\"Response: {response.text}\")",
                          "children": [
                            {
                              "value": "print(\"Failed to send graph\")",
                              "children": [
                                {
                                  "value": "print(\"Failed to send graph\")",
                                  "children": [
                                    {
                                      "value": "print",
                                      "children": []
                                    },
                                    {
                                      "value": "(\"Failed to send graph\")",
                                      "children": [
                                        {
                                          "value": "\"Failed to send graph\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Failed to send graph",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "print(f\"Response: {response.text}\")",
                              "children": [
                                {
                                  "value": "print(f\"Response: {response.text}\")",
                                  "children": [
                                    {
                                      "value": "print",
                                      "children": []
                                    },
                                    {
                                      "value": "(f\"Response: {response.text}\")",
                                      "children": [
                                        {
                                          "value": "f\"Response: {response.text}\"",
                                          "children": [
                                            {
                                              "value": "f\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Response:",
                                              "children": []
                                            },
                                            {
                                              "value": "{response.text}",
                                              "children": [
                                                {
                                                  "value": "response.text",
                                                  "children": [
                                                    {
                                                      "value": "response",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "text",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "@test.command()\n@click.argument(\"graph_id\")\n@click.argument(\"content\")\ndef execute(graph_id: str, content: dict):\n    \"\"\"\n    Create an event graph\n    \"\"\"\n    import requests\n\n    headers = {\"Content-Type\": \"application/json\"}\n\n    execute_url = f\"http://0.0.0.0:8000/graphs/{graph_id}/execute\"\n    requests.post(execute_url, headers=headers, json=content)",
      "children": [
        {
          "value": "@test.command()",
          "children": [
            {
              "value": "test.command()",
              "children": [
                {
                  "value": "test.command",
                  "children": [
                    {
                      "value": "test",
                      "children": []
                    },
                    {
                      "value": "command",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "()",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "@click.argument(\"graph_id\")",
          "children": [
            {
              "value": "click.argument(\"graph_id\")",
              "children": [
                {
                  "value": "click.argument",
                  "children": [
                    {
                      "value": "click",
                      "children": []
                    },
                    {
                      "value": "argument",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "(\"graph_id\")",
                  "children": [
                    {
                      "value": "\"graph_id\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "graph_id",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "@click.argument(\"content\")",
          "children": [
            {
              "value": "click.argument(\"content\")",
              "children": [
                {
                  "value": "click.argument",
                  "children": [
                    {
                      "value": "click",
                      "children": []
                    },
                    {
                      "value": "argument",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "(\"content\")",
                  "children": [
                    {
                      "value": "\"content\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "content",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "def execute(graph_id: str, content: dict):\n    \"\"\"\n    Create an event graph\n    \"\"\"\n    import requests\n\n    headers = {\"Content-Type\": \"application/json\"}\n\n    execute_url = f\"http://0.0.0.0:8000/graphs/{graph_id}/execute\"\n    requests.post(execute_url, headers=headers, json=content)",
          "children": [
            {
              "value": "execute",
              "children": []
            },
            {
              "value": "(graph_id: str, content: dict)",
              "children": [
                {
                  "value": "graph_id: str",
                  "children": [
                    {
                      "value": "graph_id",
                      "children": []
                    },
                    {
                      "value": "str",
                      "children": [
                        {
                          "value": "str",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "content: dict",
                  "children": [
                    {
                      "value": "content",
                      "children": []
                    },
                    {
                      "value": "dict",
                      "children": [
                        {
                          "value": "dict",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "\"\"\"\n    Create an event graph\n    \"\"\"\n    import requests\n\n    headers = {\"Content-Type\": \"application/json\"}\n\n    execute_url = f\"http://0.0.0.0:8000/graphs/{graph_id}/execute\"\n    requests.post(execute_url, headers=headers, json=content)",
              "children": [
                {
                  "value": "\"\"\"\n    Create an event graph\n    \"\"\"",
                  "children": [
                    {
                      "value": "\"\"\"\n    Create an event graph\n    \"\"\"",
                      "children": [
                        {
                          "value": "\"\"\"",
                          "children": []
                        },
                        {
                          "value": "Create an event graph",
                          "children": []
                        },
                        {
                          "value": "\"\"\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "import requests",
                  "children": [
                    {
                      "value": "requests",
                      "children": [
                        {
                          "value": "requests",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "headers = {\"Content-Type\": \"application/json\"}",
                  "children": [
                    {
                      "value": "headers = {\"Content-Type\": \"application/json\"}",
                      "children": [
                        {
                          "value": "headers",
                          "children": []
                        },
                        {
                          "value": "{\"Content-Type\": \"application/json\"}",
                          "children": [
                            {
                              "value": "\"Content-Type\": \"application/json\"",
                              "children": [
                                {
                                  "value": "\"Content-Type\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "Content-Type",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "\"application/json\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "application/json",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "execute_url = f\"http://0.0.0.0:8000/graphs/{graph_id}/execute\"",
                  "children": [
                    {
                      "value": "execute_url = f\"http://0.0.0.0:8000/graphs/{graph_id}/execute\"",
                      "children": [
                        {
                          "value": "execute_url",
                          "children": []
                        },
                        {
                          "value": "f\"http://0.0.0.0:8000/graphs/{graph_id}/execute\"",
                          "children": [
                            {
                              "value": "f\"",
                              "children": []
                            },
                            {
                              "value": "http://0.0.0.0:8000/graphs/",
                              "children": []
                            },
                            {
                              "value": "{graph_id}",
                              "children": [
                                {
                                  "value": "graph_id",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "/execute",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "requests.post(execute_url, headers=headers, json=content)",
                  "children": [
                    {
                      "value": "requests.post(execute_url, headers=headers, json=content)",
                      "children": [
                        {
                          "value": "requests.post",
                          "children": [
                            {
                              "value": "requests",
                              "children": []
                            },
                            {
                              "value": "post",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(execute_url, headers=headers, json=content)",
                          "children": [
                            {
                              "value": "execute_url",
                              "children": []
                            },
                            {
                              "value": "headers=headers",
                              "children": [
                                {
                                  "value": "headers",
                                  "children": []
                                },
                                {
                                  "value": "headers",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "json=content",
                              "children": [
                                {
                                  "value": "json",
                                  "children": []
                                },
                                {
                                  "value": "content",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "@test.command()\ndef event():\n    \"\"\"\n    Send an event to the running server\n    \"\"\"\n    print(\"Event sent\")",
      "children": [
        {
          "value": "@test.command()",
          "children": [
            {
              "value": "test.command()",
              "children": [
                {
                  "value": "test.command",
                  "children": [
                    {
                      "value": "test",
                      "children": []
                    },
                    {
                      "value": "command",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "()",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "def event():\n    \"\"\"\n    Send an event to the running server\n    \"\"\"\n    print(\"Event sent\")",
          "children": [
            {
              "value": "event",
              "children": []
            },
            {
              "value": "()",
              "children": []
            },
            {
              "value": "\"\"\"\n    Send an event to the running server\n    \"\"\"\n    print(\"Event sent\")",
              "children": [
                {
                  "value": "\"\"\"\n    Send an event to the running server\n    \"\"\"",
                  "children": [
                    {
                      "value": "\"\"\"\n    Send an event to the running server\n    \"\"\"",
                      "children": [
                        {
                          "value": "\"\"\"",
                          "children": []
                        },
                        {
                          "value": "Send an event to the running server",
                          "children": []
                        },
                        {
                          "value": "\"\"\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "print(\"Event sent\")",
                  "children": [
                    {
                      "value": "print(\"Event sent\")",
                      "children": [
                        {
                          "value": "print",
                          "children": []
                        },
                        {
                          "value": "(\"Event sent\")",
                          "children": [
                            {
                              "value": "\"Event sent\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "Event sent",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "@test.command()\n@click.argument(\"server_address\")\n@click.argument(\"graph_id\")\ndef websocket(server_address: str, graph_id: str):\n    \"\"\"\n    Tests the websocket connection.\n    \"\"\"\n    import asyncio\n\n    import websockets.asyncio.client\n\n    from backend.server.ws_api import ExecutionSubscription, Methods, WsMessage\n\n    async def send_message(server_address: str):\n        uri = f\"ws://{server_address}\"\n        async with websockets.asyncio.client.connect(uri) as websocket:\n            try:\n                msg = WsMessage(\n                    method=Methods.SUBSCRIBE,\n                    data=ExecutionSubscription(graph_id=graph_id).model_dump(),\n                ).model_dump_json()\n                await websocket.send(msg)\n                print(f\"Sending: {msg}\")\n                while True:\n                    response = await websocket.recv()\n                    print(f\"Response from server: {response}\")\n            except InterruptedError:\n                exit(0)\n\n    asyncio.run(send_message(server_address))\n    print(\"Testing WS\")",
      "children": [
        {
          "value": "@test.command()",
          "children": [
            {
              "value": "test.command()",
              "children": [
                {
                  "value": "test.command",
                  "children": [
                    {
                      "value": "test",
                      "children": []
                    },
                    {
                      "value": "command",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "()",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "@click.argument(\"server_address\")",
          "children": [
            {
              "value": "click.argument(\"server_address\")",
              "children": [
                {
                  "value": "click.argument",
                  "children": [
                    {
                      "value": "click",
                      "children": []
                    },
                    {
                      "value": "argument",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "(\"server_address\")",
                  "children": [
                    {
                      "value": "\"server_address\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "server_address",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "@click.argument(\"graph_id\")",
          "children": [
            {
              "value": "click.argument(\"graph_id\")",
              "children": [
                {
                  "value": "click.argument",
                  "children": [
                    {
                      "value": "click",
                      "children": []
                    },
                    {
                      "value": "argument",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "(\"graph_id\")",
                  "children": [
                    {
                      "value": "\"graph_id\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "graph_id",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "def websocket(server_address: str, graph_id: str):\n    \"\"\"\n    Tests the websocket connection.\n    \"\"\"\n    import asyncio\n\n    import websockets.asyncio.client\n\n    from backend.server.ws_api import ExecutionSubscription, Methods, WsMessage\n\n    async def send_message(server_address: str):\n        uri = f\"ws://{server_address}\"\n        async with websockets.asyncio.client.connect(uri) as websocket:\n            try:\n                msg = WsMessage(\n                    method=Methods.SUBSCRIBE,\n                    data=ExecutionSubscription(graph_id=graph_id).model_dump(),\n                ).model_dump_json()\n                await websocket.send(msg)\n                print(f\"Sending: {msg}\")\n                while True:\n                    response = await websocket.recv()\n                    print(f\"Response from server: {response}\")\n            except InterruptedError:\n                exit(0)\n\n    asyncio.run(send_message(server_address))\n    print(\"Testing WS\")",
          "children": [
            {
              "value": "websocket",
              "children": []
            },
            {
              "value": "(server_address: str, graph_id: str)",
              "children": [
                {
                  "value": "server_address: str",
                  "children": [
                    {
                      "value": "server_address",
                      "children": []
                    },
                    {
                      "value": "str",
                      "children": [
                        {
                          "value": "str",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "graph_id: str",
                  "children": [
                    {
                      "value": "graph_id",
                      "children": []
                    },
                    {
                      "value": "str",
                      "children": [
                        {
                          "value": "str",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "\"\"\"\n    Tests the websocket connection.\n    \"\"\"\n    import asyncio\n\n    import websockets.asyncio.client\n\n    from backend.server.ws_api import ExecutionSubscription, Methods, WsMessage\n\n    async def send_message(server_address: str):\n        uri = f\"ws://{server_address}\"\n        async with websockets.asyncio.client.connect(uri) as websocket:\n            try:\n                msg = WsMessage(\n                    method=Methods.SUBSCRIBE,\n                    data=ExecutionSubscription(graph_id=graph_id).model_dump(),\n                ).model_dump_json()\n                await websocket.send(msg)\n                print(f\"Sending: {msg}\")\n                while True:\n                    response = await websocket.recv()\n                    print(f\"Response from server: {response}\")\n            except InterruptedError:\n                exit(0)\n\n    asyncio.run(send_message(server_address))\n    print(\"Testing WS\")",
              "children": [
                {
                  "value": "\"\"\"\n    Tests the websocket connection.\n    \"\"\"",
                  "children": [
                    {
                      "value": "\"\"\"\n    Tests the websocket connection.\n    \"\"\"",
                      "children": [
                        {
                          "value": "\"\"\"",
                          "children": []
                        },
                        {
                          "value": "Tests the websocket connection.",
                          "children": []
                        },
                        {
                          "value": "\"\"\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "import asyncio",
                  "children": [
                    {
                      "value": "asyncio",
                      "children": [
                        {
                          "value": "asyncio",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "import websockets.asyncio.client",
                  "children": [
                    {
                      "value": "websockets.asyncio.client",
                      "children": [
                        {
                          "value": "websockets",
                          "children": []
                        },
                        {
                          "value": "asyncio",
                          "children": []
                        },
                        {
                          "value": "client",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "from backend.server.ws_api import ExecutionSubscription, Methods, WsMessage",
                  "children": [
                    {
                      "value": "backend.server.ws_api",
                      "children": [
                        {
                          "value": "backend",
                          "children": []
                        },
                        {
                          "value": "server",
                          "children": []
                        },
                        {
                          "value": "ws_api",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "ExecutionSubscription",
                      "children": [
                        {
                          "value": "ExecutionSubscription",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "Methods",
                      "children": [
                        {
                          "value": "Methods",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "WsMessage",
                      "children": [
                        {
                          "value": "WsMessage",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "async def send_message(server_address: str):\n        uri = f\"ws://{server_address}\"\n        async with websockets.asyncio.client.connect(uri) as websocket:\n            try:\n                msg = WsMessage(\n                    method=Methods.SUBSCRIBE,\n                    data=ExecutionSubscription(graph_id=graph_id).model_dump(),\n                ).model_dump_json()\n                await websocket.send(msg)\n                print(f\"Sending: {msg}\")\n                while True:\n                    response = await websocket.recv()\n                    print(f\"Response from server: {response}\")\n            except InterruptedError:\n                exit(0)",
                  "children": [
                    {
                      "value": "send_message",
                      "children": []
                    },
                    {
                      "value": "(server_address: str)",
                      "children": [
                        {
                          "value": "server_address: str",
                          "children": [
                            {
                              "value": "server_address",
                              "children": []
                            },
                            {
                              "value": "str",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "uri = f\"ws://{server_address}\"\n        async with websockets.asyncio.client.connect(uri) as websocket:\n            try:\n                msg = WsMessage(\n                    method=Methods.SUBSCRIBE,\n                    data=ExecutionSubscription(graph_id=graph_id).model_dump(),\n                ).model_dump_json()\n                await websocket.send(msg)\n                print(f\"Sending: {msg}\")\n                while True:\n                    response = await websocket.recv()\n                    print(f\"Response from server: {response}\")\n            except InterruptedError:\n                exit(0)",
                      "children": [
                        {
                          "value": "uri = f\"ws://{server_address}\"",
                          "children": [
                            {
                              "value": "uri = f\"ws://{server_address}\"",
                              "children": [
                                {
                                  "value": "uri",
                                  "children": []
                                },
                                {
                                  "value": "f\"ws://{server_address}\"",
                                  "children": [
                                    {
                                      "value": "f\"",
                                      "children": []
                                    },
                                    {
                                      "value": "ws://",
                                      "children": []
                                    },
                                    {
                                      "value": "{server_address}",
                                      "children": [
                                        {
                                          "value": "server_address",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "async with websockets.asyncio.client.connect(uri) as websocket:\n            try:\n                msg = WsMessage(\n                    method=Methods.SUBSCRIBE,\n                    data=ExecutionSubscription(graph_id=graph_id).model_dump(),\n                ).model_dump_json()\n                await websocket.send(msg)\n                print(f\"Sending: {msg}\")\n                while True:\n                    response = await websocket.recv()\n                    print(f\"Response from server: {response}\")\n            except InterruptedError:\n                exit(0)",
                          "children": [
                            {
                              "value": "websockets.asyncio.client.connect(uri) as websocket",
                              "children": [
                                {
                                  "value": "websockets.asyncio.client.connect(uri) as websocket",
                                  "children": [
                                    {
                                      "value": "websockets.asyncio.client.connect(uri) as websocket",
                                      "children": [
                                        {
                                          "value": "websockets.asyncio.client.connect(uri)",
                                          "children": [
                                            {
                                              "value": "websockets.asyncio.client.connect",
                                              "children": [
                                                {
                                                  "value": "websockets.asyncio.client",
                                                  "children": [
                                                    {
                                                      "value": "websockets.asyncio",
                                                      "children": [
                                                        {
                                                          "value": "websockets",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "asyncio",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "client",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "connect",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "(uri)",
                                              "children": [
                                                {
                                                  "value": "uri",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "websocket",
                                          "children": [
                                            {
                                              "value": "websocket",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "try:\n                msg = WsMessage(\n                    method=Methods.SUBSCRIBE,\n                    data=ExecutionSubscription(graph_id=graph_id).model_dump(),\n                ).model_dump_json()\n                await websocket.send(msg)\n                print(f\"Sending: {msg}\")\n                while True:\n                    response = await websocket.recv()\n                    print(f\"Response from server: {response}\")\n            except InterruptedError:\n                exit(0)",
                              "children": [
                                {
                                  "value": "try:\n                msg = WsMessage(\n                    method=Methods.SUBSCRIBE,\n                    data=ExecutionSubscription(graph_id=graph_id).model_dump(),\n                ).model_dump_json()\n                await websocket.send(msg)\n                print(f\"Sending: {msg}\")\n                while True:\n                    response = await websocket.recv()\n                    print(f\"Response from server: {response}\")\n            except InterruptedError:\n                exit(0)",
                                  "children": [
                                    {
                                      "value": "msg = WsMessage(\n                    method=Methods.SUBSCRIBE,\n                    data=ExecutionSubscription(graph_id=graph_id).model_dump(),\n                ).model_dump_json()\n                await websocket.send(msg)\n                print(f\"Sending: {msg}\")\n                while True:\n                    response = await websocket.recv()\n                    print(f\"Response from server: {response}\")",
                                      "children": [
                                        {
                                          "value": "msg = WsMessage(\n                    method=Methods.SUBSCRIBE,\n                    data=ExecutionSubscription(graph_id=graph_id).model_dump(),\n                ).model_dump_json()",
                                          "children": [
                                            {
                                              "value": "msg = WsMessage(\n                    method=Methods.SUBSCRIBE,\n                    data=ExecutionSubscription(graph_id=graph_id).model_dump(),\n                ).model_dump_json()",
                                              "children": [
                                                {
                                                  "value": "msg",
                                                  "children": []
                                                },
                                                {
                                                  "value": "WsMessage(\n                    method=Methods.SUBSCRIBE,\n                    data=ExecutionSubscription(graph_id=graph_id).model_dump(),\n                ).model_dump_json()",
                                                  "children": [
                                                    {
                                                      "value": "WsMessage(\n                    method=Methods.SUBSCRIBE,\n                    data=ExecutionSubscription(graph_id=graph_id).model_dump(),\n                ).model_dump_json",
                                                      "children": [
                                                        {
                                                          "value": "WsMessage(\n                    method=Methods.SUBSCRIBE,\n                    data=ExecutionSubscription(graph_id=graph_id).model_dump(),\n                )",
                                                          "children": [
                                                            {
                                                              "value": "WsMessage",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "(\n                    method=Methods.SUBSCRIBE,\n                    data=ExecutionSubscription(graph_id=graph_id).model_dump(),\n                )",
                                                              "children": [
                                                                {
                                                                  "value": "method=Methods.SUBSCRIBE",
                                                                  "children": [
                                                                    {
                                                                      "value": "method",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "Methods.SUBSCRIBE",
                                                                      "children": [
                                                                        {
                                                                          "value": "Methods",
                                                                          "children": []
                                                                        },
                                                                        {
                                                                          "value": "SUBSCRIBE",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "value": "data=ExecutionSubscription(graph_id=graph_id).model_dump()",
                                                                  "children": [
                                                                    {
                                                                      "value": "data",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "ExecutionSubscription(graph_id=graph_id).model_dump()",
                                                                      "children": [
                                                                        {
                                                                          "value": "ExecutionSubscription(graph_id=graph_id).model_dump",
                                                                          "children": [
                                                                            {
                                                                              "value": "ExecutionSubscription(graph_id=graph_id)",
                                                                              "children": [
                                                                                {
                                                                                  "value": "ExecutionSubscription",
                                                                                  "children": []
                                                                                },
                                                                                {
                                                                                  "value": "(graph_id=graph_id)",
                                                                                  "children": [
                                                                                    {
                                                                                      "value": "graph_id=graph_id",
                                                                                      "children": [
                                                                                        {
                                                                                          "value": "graph_id",
                                                                                          "children": []
                                                                                        },
                                                                                        {
                                                                                          "value": "graph_id",
                                                                                          "children": []
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "value": "model_dump",
                                                                              "children": []
                                                                            }
                                                                          ]
                                                                        },
                                                                        {
                                                                          "value": "()",
                                                                          "children": []
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "model_dump_json",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "()",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "await websocket.send(msg)",
                                          "children": [
                                            {
                                              "value": "await websocket.send(msg)",
                                              "children": [
                                                {
                                                  "value": "websocket.send(msg)",
                                                  "children": [
                                                    {
                                                      "value": "websocket.send",
                                                      "children": [
                                                        {
                                                          "value": "websocket",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "send",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "(msg)",
                                                      "children": [
                                                        {
                                                          "value": "msg",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "print(f\"Sending: {msg}\")",
                                          "children": [
                                            {
                                              "value": "print(f\"Sending: {msg}\")",
                                              "children": [
                                                {
                                                  "value": "print",
                                                  "children": []
                                                },
                                                {
                                                  "value": "(f\"Sending: {msg}\")",
                                                  "children": [
                                                    {
                                                      "value": "f\"Sending: {msg}\"",
                                                      "children": [
                                                        {
                                                          "value": "f\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "Sending:",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "{msg}",
                                                          "children": [
                                                            {
                                                              "value": "msg",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "while True:\n                    response = await websocket.recv()\n                    print(f\"Response from server: {response}\")",
                                          "children": [
                                            {
                                              "value": "True",
                                              "children": []
                                            },
                                            {
                                              "value": "response = await websocket.recv()\n                    print(f\"Response from server: {response}\")",
                                              "children": [
                                                {
                                                  "value": "response = await websocket.recv()",
                                                  "children": [
                                                    {
                                                      "value": "response = await websocket.recv()",
                                                      "children": [
                                                        {
                                                          "value": "response",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "await websocket.recv()",
                                                          "children": [
                                                            {
                                                              "value": "websocket.recv()",
                                                              "children": [
                                                                {
                                                                  "value": "websocket.recv",
                                                                  "children": [
                                                                    {
                                                                      "value": "websocket",
                                                                      "children": []
                                                                    },
                                                                    {
                                                                      "value": "recv",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "value": "()",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "print(f\"Response from server: {response}\")",
                                                  "children": [
                                                    {
                                                      "value": "print(f\"Response from server: {response}\")",
                                                      "children": [
                                                        {
                                                          "value": "print",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "(f\"Response from server: {response}\")",
                                                          "children": [
                                                            {
                                                              "value": "f\"Response from server: {response}\"",
                                                              "children": [
                                                                {
                                                                  "value": "f\"",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "Response from server:",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "{response}",
                                                                  "children": [
                                                                    {
                                                                      "value": "response",
                                                                      "children": []
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "value": "\"",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "except InterruptedError:\n                exit(0)",
                                      "children": [
                                        {
                                          "value": "InterruptedError",
                                          "children": []
                                        },
                                        {
                                          "value": "exit(0)",
                                          "children": [
                                            {
                                              "value": "exit(0)",
                                              "children": [
                                                {
                                                  "value": "exit(0)",
                                                  "children": [
                                                    {
                                                      "value": "exit",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "(0)",
                                                      "children": [
                                                        {
                                                          "value": "0",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "asyncio.run(send_message(server_address))",
                  "children": [
                    {
                      "value": "asyncio.run(send_message(server_address))",
                      "children": [
                        {
                          "value": "asyncio.run",
                          "children": [
                            {
                              "value": "asyncio",
                              "children": []
                            },
                            {
                              "value": "run",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(send_message(server_address))",
                          "children": [
                            {
                              "value": "send_message(server_address)",
                              "children": [
                                {
                                  "value": "send_message",
                                  "children": []
                                },
                                {
                                  "value": "(server_address)",
                                  "children": [
                                    {
                                      "value": "server_address",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "print(\"Testing WS\")",
                  "children": [
                    {
                      "value": "print(\"Testing WS\")",
                      "children": [
                        {
                          "value": "print",
                          "children": []
                        },
                        {
                          "value": "(\"Testing WS\")",
                          "children": [
                            {
                              "value": "\"Testing WS\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "Testing WS",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "main.add_command(test)",
      "children": [
        {
          "value": "main.add_command(test)",
          "children": [
            {
              "value": "main.add_command",
              "children": [
                {
                  "value": "main",
                  "children": []
                },
                {
                  "value": "add_command",
                  "children": []
                }
              ]
            },
            {
              "value": "(test)",
              "children": [
                {
                  "value": "test",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "if __name__ == \"__main__\":\n    main()",
      "children": [
        {
          "value": "__name__ == \"__main__\"",
          "children": [
            {
              "value": "__name__",
              "children": []
            },
            {
              "value": "\"__main__\"",
              "children": [
                {
                  "value": "\"",
                  "children": []
                },
                {
                  "value": "__main__",
                  "children": []
                },
                {
                  "value": "\"",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "main()",
          "children": [
            {
              "value": "main()",
              "children": [
                {
                  "value": "main()",
                  "children": [
                    {
                      "value": "main",
                      "children": []
                    },
                    {
                      "value": "()",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}