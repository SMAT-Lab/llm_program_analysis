{
  "value": "import logging\nimport os\n\nfrom dotenv import load_dotenv\nfrom redis import Redis\nfrom redis.asyncio import Redis as AsyncRedis\n\nfrom backend.util.retry import conn_retry\n\nload_dotenv()\n\nHOST = os.getenv(\"REDIS_HOST\", \"localhost\")\nPORT = int(os.getenv(\"REDIS_PORT\", \"6379\"))\nPASSWORD = os.getenv(\"REDIS_PASSWORD\", \"password\")\n\nlogger = logging.getLogger(__name__)\nconnection: Redis | None = None\nconnection_async: AsyncRedis | None = None\n\n\n@conn_retry(\"Redis\", \"Acquiring connection\")\ndef connect() -> Redis:\n    global connection\n    if connection:\n        return connection\n\n    c = Redis(\n        host=HOST,\n        port=PORT,\n        password=PASSWORD,\n        decode_responses=True,\n    )\n    c.ping()\n    connection = c\n    return connection\n\n\n@conn_retry(\"Redis\", \"Releasing connection\")\ndef disconnect():\n    global connection\n    if connection:\n        connection.close()\n    connection = None\n\n\ndef get_redis(auto_connect: bool = True) -> Redis:\n    if connection:\n        return connection\n    if auto_connect:\n        return connect()\n    raise RuntimeError(\"Redis connection is not established\")\n\n\n@conn_retry(\"AsyncRedis\", \"Acquiring connection\")\nasync def connect_async() -> AsyncRedis:\n    global connection_async\n    if connection_async:\n        return connection_async\n\n    c = AsyncRedis(\n        host=HOST,\n        port=PORT,\n        password=PASSWORD,\n        decode_responses=True,\n    )\n    await c.ping()\n    connection_async = c\n    return connection_async\n\n\n@conn_retry(\"AsyncRedis\", \"Releasing connection\")\nasync def disconnect_async():\n    global connection_async\n    if connection_async:\n        await connection_async.close()\n    connection_async = None\n\n\nasync def get_redis_async(auto_connect: bool = True) -> AsyncRedis:\n    if connection_async:\n        return connection_async\n    if auto_connect:\n        return await connect_async()\n    raise RuntimeError(\"AsyncRedis connection is not established\")",
  "children": [
    {
      "value": "import logging",
      "children": [
        {
          "value": "logging",
          "children": [
            {
              "value": "logging",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "import os",
      "children": [
        {
          "value": "os",
          "children": [
            {
              "value": "os",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from dotenv import load_dotenv",
      "children": [
        {
          "value": "dotenv",
          "children": [
            {
              "value": "dotenv",
              "children": []
            }
          ]
        },
        {
          "value": "load_dotenv",
          "children": [
            {
              "value": "load_dotenv",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from redis import Redis",
      "children": [
        {
          "value": "redis",
          "children": [
            {
              "value": "redis",
              "children": []
            }
          ]
        },
        {
          "value": "Redis",
          "children": [
            {
              "value": "Redis",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from redis.asyncio import Redis as AsyncRedis",
      "children": [
        {
          "value": "redis.asyncio",
          "children": [
            {
              "value": "redis",
              "children": []
            },
            {
              "value": "asyncio",
              "children": []
            }
          ]
        },
        {
          "value": "Redis as AsyncRedis",
          "children": [
            {
              "value": "Redis",
              "children": [
                {
                  "value": "Redis",
                  "children": []
                }
              ]
            },
            {
              "value": "AsyncRedis",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.util.retry import conn_retry",
      "children": [
        {
          "value": "backend.util.retry",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "util",
              "children": []
            },
            {
              "value": "retry",
              "children": []
            }
          ]
        },
        {
          "value": "conn_retry",
          "children": [
            {
              "value": "conn_retry",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "load_dotenv()",
      "children": [
        {
          "value": "load_dotenv()",
          "children": [
            {
              "value": "load_dotenv",
              "children": []
            },
            {
              "value": "()",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "HOST = os.getenv(\"REDIS_HOST\", \"localhost\")",
      "children": [
        {
          "value": "HOST = os.getenv(\"REDIS_HOST\", \"localhost\")",
          "children": [
            {
              "value": "HOST",
              "children": []
            },
            {
              "value": "os.getenv(\"REDIS_HOST\", \"localhost\")",
              "children": [
                {
                  "value": "os.getenv",
                  "children": [
                    {
                      "value": "os",
                      "children": []
                    },
                    {
                      "value": "getenv",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "(\"REDIS_HOST\", \"localhost\")",
                  "children": [
                    {
                      "value": "\"REDIS_HOST\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "REDIS_HOST",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "\"localhost\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "localhost",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "PORT = int(os.getenv(\"REDIS_PORT\", \"6379\"))",
      "children": [
        {
          "value": "PORT = int(os.getenv(\"REDIS_PORT\", \"6379\"))",
          "children": [
            {
              "value": "PORT",
              "children": []
            },
            {
              "value": "int(os.getenv(\"REDIS_PORT\", \"6379\"))",
              "children": [
                {
                  "value": "int",
                  "children": []
                },
                {
                  "value": "(os.getenv(\"REDIS_PORT\", \"6379\"))",
                  "children": [
                    {
                      "value": "os.getenv(\"REDIS_PORT\", \"6379\")",
                      "children": [
                        {
                          "value": "os.getenv",
                          "children": [
                            {
                              "value": "os",
                              "children": []
                            },
                            {
                              "value": "getenv",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "(\"REDIS_PORT\", \"6379\")",
                          "children": [
                            {
                              "value": "\"REDIS_PORT\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "REDIS_PORT",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "\"6379\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "6379",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "PASSWORD = os.getenv(\"REDIS_PASSWORD\", \"password\")",
      "children": [
        {
          "value": "PASSWORD = os.getenv(\"REDIS_PASSWORD\", \"password\")",
          "children": [
            {
              "value": "PASSWORD",
              "children": []
            },
            {
              "value": "os.getenv(\"REDIS_PASSWORD\", \"password\")",
              "children": [
                {
                  "value": "os.getenv",
                  "children": [
                    {
                      "value": "os",
                      "children": []
                    },
                    {
                      "value": "getenv",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "(\"REDIS_PASSWORD\", \"password\")",
                  "children": [
                    {
                      "value": "\"REDIS_PASSWORD\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "REDIS_PASSWORD",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "\"password\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "password",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "logger = logging.getLogger(__name__)",
      "children": [
        {
          "value": "logger = logging.getLogger(__name__)",
          "children": [
            {
              "value": "logger",
              "children": []
            },
            {
              "value": "logging.getLogger(__name__)",
              "children": [
                {
                  "value": "logging.getLogger",
                  "children": [
                    {
                      "value": "logging",
                      "children": []
                    },
                    {
                      "value": "getLogger",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "(__name__)",
                  "children": [
                    {
                      "value": "__name__",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "connection: Redis | None = None",
      "children": [
        {
          "value": "connection: Redis | None = None",
          "children": [
            {
              "value": "connection",
              "children": []
            },
            {
              "value": "Redis | None",
              "children": [
                {
                  "value": "Redis | None",
                  "children": [
                    {
                      "value": "Redis",
                      "children": []
                    },
                    {
                      "value": "None",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "None",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "connection_async: AsyncRedis | None = None",
      "children": [
        {
          "value": "connection_async: AsyncRedis | None = None",
          "children": [
            {
              "value": "connection_async",
              "children": []
            },
            {
              "value": "AsyncRedis | None",
              "children": [
                {
                  "value": "AsyncRedis | None",
                  "children": [
                    {
                      "value": "AsyncRedis",
                      "children": []
                    },
                    {
                      "value": "None",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "None",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "@conn_retry(\"Redis\", \"Acquiring connection\")\ndef connect() -> Redis:\n    global connection\n    if connection:\n        return connection\n\n    c = Redis(\n        host=HOST,\n        port=PORT,\n        password=PASSWORD,\n        decode_responses=True,\n    )\n    c.ping()\n    connection = c\n    return connection",
      "children": [
        {
          "value": "@conn_retry(\"Redis\", \"Acquiring connection\")",
          "children": [
            {
              "value": "conn_retry(\"Redis\", \"Acquiring connection\")",
              "children": [
                {
                  "value": "conn_retry",
                  "children": []
                },
                {
                  "value": "(\"Redis\", \"Acquiring connection\")",
                  "children": [
                    {
                      "value": "\"Redis\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "Redis",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "\"Acquiring connection\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "Acquiring connection",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "def connect() -> Redis:\n    global connection\n    if connection:\n        return connection\n\n    c = Redis(\n        host=HOST,\n        port=PORT,\n        password=PASSWORD,\n        decode_responses=True,\n    )\n    c.ping()\n    connection = c\n    return connection",
          "children": [
            {
              "value": "connect",
              "children": []
            },
            {
              "value": "()",
              "children": []
            },
            {
              "value": "Redis",
              "children": [
                {
                  "value": "Redis",
                  "children": []
                }
              ]
            },
            {
              "value": "global connection\n    if connection:\n        return connection\n\n    c = Redis(\n        host=HOST,\n        port=PORT,\n        password=PASSWORD,\n        decode_responses=True,\n    )\n    c.ping()\n    connection = c\n    return connection",
              "children": [
                {
                  "value": "global connection",
                  "children": [
                    {
                      "value": "connection",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "if connection:\n        return connection",
                  "children": [
                    {
                      "value": "connection",
                      "children": []
                    },
                    {
                      "value": "return connection",
                      "children": [
                        {
                          "value": "return connection",
                          "children": [
                            {
                              "value": "connection",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "c = Redis(\n        host=HOST,\n        port=PORT,\n        password=PASSWORD,\n        decode_responses=True,\n    )",
                  "children": [
                    {
                      "value": "c = Redis(\n        host=HOST,\n        port=PORT,\n        password=PASSWORD,\n        decode_responses=True,\n    )",
                      "children": [
                        {
                          "value": "c",
                          "children": []
                        },
                        {
                          "value": "Redis(\n        host=HOST,\n        port=PORT,\n        password=PASSWORD,\n        decode_responses=True,\n    )",
                          "children": [
                            {
                              "value": "Redis",
                              "children": []
                            },
                            {
                              "value": "(\n        host=HOST,\n        port=PORT,\n        password=PASSWORD,\n        decode_responses=True,\n    )",
                              "children": [
                                {
                                  "value": "host=HOST",
                                  "children": [
                                    {
                                      "value": "host",
                                      "children": []
                                    },
                                    {
                                      "value": "HOST",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "port=PORT",
                                  "children": [
                                    {
                                      "value": "port",
                                      "children": []
                                    },
                                    {
                                      "value": "PORT",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "password=PASSWORD",
                                  "children": [
                                    {
                                      "value": "password",
                                      "children": []
                                    },
                                    {
                                      "value": "PASSWORD",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "decode_responses=True",
                                  "children": [
                                    {
                                      "value": "decode_responses",
                                      "children": []
                                    },
                                    {
                                      "value": "True",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "c.ping()",
                  "children": [
                    {
                      "value": "c.ping()",
                      "children": [
                        {
                          "value": "c.ping",
                          "children": [
                            {
                              "value": "c",
                              "children": []
                            },
                            {
                              "value": "ping",
                              "children": []
                            }
                          ]
                        },
                        {
                          "value": "()",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "connection = c",
                  "children": [
                    {
                      "value": "connection = c",
                      "children": [
                        {
                          "value": "connection",
                          "children": []
                        },
                        {
                          "value": "c",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "return connection",
                  "children": [
                    {
                      "value": "connection",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "@conn_retry(\"Redis\", \"Releasing connection\")\ndef disconnect():\n    global connection\n    if connection:\n        connection.close()\n    connection = None",
      "children": [
        {
          "value": "@conn_retry(\"Redis\", \"Releasing connection\")",
          "children": [
            {
              "value": "conn_retry(\"Redis\", \"Releasing connection\")",
              "children": [
                {
                  "value": "conn_retry",
                  "children": []
                },
                {
                  "value": "(\"Redis\", \"Releasing connection\")",
                  "children": [
                    {
                      "value": "\"Redis\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "Redis",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "\"Releasing connection\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "Releasing connection",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "def disconnect():\n    global connection\n    if connection:\n        connection.close()\n    connection = None",
          "children": [
            {
              "value": "disconnect",
              "children": []
            },
            {
              "value": "()",
              "children": []
            },
            {
              "value": "global connection\n    if connection:\n        connection.close()\n    connection = None",
              "children": [
                {
                  "value": "global connection",
                  "children": [
                    {
                      "value": "connection",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "if connection:\n        connection.close()",
                  "children": [
                    {
                      "value": "connection",
                      "children": []
                    },
                    {
                      "value": "connection.close()",
                      "children": [
                        {
                          "value": "connection.close()",
                          "children": [
                            {
                              "value": "connection.close()",
                              "children": [
                                {
                                  "value": "connection.close",
                                  "children": [
                                    {
                                      "value": "connection",
                                      "children": []
                                    },
                                    {
                                      "value": "close",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "()",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "connection = None",
                  "children": [
                    {
                      "value": "connection = None",
                      "children": [
                        {
                          "value": "connection",
                          "children": []
                        },
                        {
                          "value": "None",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "def get_redis(auto_connect: bool = True) -> Redis:\n    if connection:\n        return connection\n    if auto_connect:\n        return connect()\n    raise RuntimeError(\"Redis connection is not established\")",
      "children": [
        {
          "value": "get_redis",
          "children": []
        },
        {
          "value": "(auto_connect: bool = True)",
          "children": [
            {
              "value": "auto_connect: bool = True",
              "children": [
                {
                  "value": "auto_connect",
                  "children": []
                },
                {
                  "value": "bool",
                  "children": [
                    {
                      "value": "bool",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "True",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "Redis",
          "children": [
            {
              "value": "Redis",
              "children": []
            }
          ]
        },
        {
          "value": "if connection:\n        return connection\n    if auto_connect:\n        return connect()\n    raise RuntimeError(\"Redis connection is not established\")",
          "children": [
            {
              "value": "if connection:\n        return connection",
              "children": [
                {
                  "value": "connection",
                  "children": []
                },
                {
                  "value": "return connection",
                  "children": [
                    {
                      "value": "return connection",
                      "children": [
                        {
                          "value": "connection",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "if auto_connect:\n        return connect()",
              "children": [
                {
                  "value": "auto_connect",
                  "children": []
                },
                {
                  "value": "return connect()",
                  "children": [
                    {
                      "value": "return connect()",
                      "children": [
                        {
                          "value": "connect()",
                          "children": [
                            {
                              "value": "connect",
                              "children": []
                            },
                            {
                              "value": "()",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "raise RuntimeError(\"Redis connection is not established\")",
              "children": [
                {
                  "value": "RuntimeError(\"Redis connection is not established\")",
                  "children": [
                    {
                      "value": "RuntimeError",
                      "children": []
                    },
                    {
                      "value": "(\"Redis connection is not established\")",
                      "children": [
                        {
                          "value": "\"Redis connection is not established\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "Redis connection is not established",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "@conn_retry(\"AsyncRedis\", \"Acquiring connection\")\nasync def connect_async() -> AsyncRedis:\n    global connection_async\n    if connection_async:\n        return connection_async\n\n    c = AsyncRedis(\n        host=HOST,\n        port=PORT,\n        password=PASSWORD,\n        decode_responses=True,\n    )\n    await c.ping()\n    connection_async = c\n    return connection_async",
      "children": [
        {
          "value": "@conn_retry(\"AsyncRedis\", \"Acquiring connection\")",
          "children": [
            {
              "value": "conn_retry(\"AsyncRedis\", \"Acquiring connection\")",
              "children": [
                {
                  "value": "conn_retry",
                  "children": []
                },
                {
                  "value": "(\"AsyncRedis\", \"Acquiring connection\")",
                  "children": [
                    {
                      "value": "\"AsyncRedis\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "AsyncRedis",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "\"Acquiring connection\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "Acquiring connection",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "async def connect_async() -> AsyncRedis:\n    global connection_async\n    if connection_async:\n        return connection_async\n\n    c = AsyncRedis(\n        host=HOST,\n        port=PORT,\n        password=PASSWORD,\n        decode_responses=True,\n    )\n    await c.ping()\n    connection_async = c\n    return connection_async",
          "children": [
            {
              "value": "connect_async",
              "children": []
            },
            {
              "value": "()",
              "children": []
            },
            {
              "value": "AsyncRedis",
              "children": [
                {
                  "value": "AsyncRedis",
                  "children": []
                }
              ]
            },
            {
              "value": "global connection_async\n    if connection_async:\n        return connection_async\n\n    c = AsyncRedis(\n        host=HOST,\n        port=PORT,\n        password=PASSWORD,\n        decode_responses=True,\n    )\n    await c.ping()\n    connection_async = c\n    return connection_async",
              "children": [
                {
                  "value": "global connection_async",
                  "children": [
                    {
                      "value": "connection_async",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "if connection_async:\n        return connection_async",
                  "children": [
                    {
                      "value": "connection_async",
                      "children": []
                    },
                    {
                      "value": "return connection_async",
                      "children": [
                        {
                          "value": "return connection_async",
                          "children": [
                            {
                              "value": "connection_async",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "c = AsyncRedis(\n        host=HOST,\n        port=PORT,\n        password=PASSWORD,\n        decode_responses=True,\n    )",
                  "children": [
                    {
                      "value": "c = AsyncRedis(\n        host=HOST,\n        port=PORT,\n        password=PASSWORD,\n        decode_responses=True,\n    )",
                      "children": [
                        {
                          "value": "c",
                          "children": []
                        },
                        {
                          "value": "AsyncRedis(\n        host=HOST,\n        port=PORT,\n        password=PASSWORD,\n        decode_responses=True,\n    )",
                          "children": [
                            {
                              "value": "AsyncRedis",
                              "children": []
                            },
                            {
                              "value": "(\n        host=HOST,\n        port=PORT,\n        password=PASSWORD,\n        decode_responses=True,\n    )",
                              "children": [
                                {
                                  "value": "host=HOST",
                                  "children": [
                                    {
                                      "value": "host",
                                      "children": []
                                    },
                                    {
                                      "value": "HOST",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "port=PORT",
                                  "children": [
                                    {
                                      "value": "port",
                                      "children": []
                                    },
                                    {
                                      "value": "PORT",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "password=PASSWORD",
                                  "children": [
                                    {
                                      "value": "password",
                                      "children": []
                                    },
                                    {
                                      "value": "PASSWORD",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "decode_responses=True",
                                  "children": [
                                    {
                                      "value": "decode_responses",
                                      "children": []
                                    },
                                    {
                                      "value": "True",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "await c.ping()",
                  "children": [
                    {
                      "value": "await c.ping()",
                      "children": [
                        {
                          "value": "c.ping()",
                          "children": [
                            {
                              "value": "c.ping",
                              "children": [
                                {
                                  "value": "c",
                                  "children": []
                                },
                                {
                                  "value": "ping",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "()",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "connection_async = c",
                  "children": [
                    {
                      "value": "connection_async = c",
                      "children": [
                        {
                          "value": "connection_async",
                          "children": []
                        },
                        {
                          "value": "c",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "return connection_async",
                  "children": [
                    {
                      "value": "connection_async",
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "@conn_retry(\"AsyncRedis\", \"Releasing connection\")\nasync def disconnect_async():\n    global connection_async\n    if connection_async:\n        await connection_async.close()\n    connection_async = None",
      "children": [
        {
          "value": "@conn_retry(\"AsyncRedis\", \"Releasing connection\")",
          "children": [
            {
              "value": "conn_retry(\"AsyncRedis\", \"Releasing connection\")",
              "children": [
                {
                  "value": "conn_retry",
                  "children": []
                },
                {
                  "value": "(\"AsyncRedis\", \"Releasing connection\")",
                  "children": [
                    {
                      "value": "\"AsyncRedis\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "AsyncRedis",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "\"Releasing connection\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "Releasing connection",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "value": "async def disconnect_async():\n    global connection_async\n    if connection_async:\n        await connection_async.close()\n    connection_async = None",
          "children": [
            {
              "value": "disconnect_async",
              "children": []
            },
            {
              "value": "()",
              "children": []
            },
            {
              "value": "global connection_async\n    if connection_async:\n        await connection_async.close()\n    connection_async = None",
              "children": [
                {
                  "value": "global connection_async",
                  "children": [
                    {
                      "value": "connection_async",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "if connection_async:\n        await connection_async.close()",
                  "children": [
                    {
                      "value": "connection_async",
                      "children": []
                    },
                    {
                      "value": "await connection_async.close()",
                      "children": [
                        {
                          "value": "await connection_async.close()",
                          "children": [
                            {
                              "value": "await connection_async.close()",
                              "children": [
                                {
                                  "value": "connection_async.close()",
                                  "children": [
                                    {
                                      "value": "connection_async.close",
                                      "children": [
                                        {
                                          "value": "connection_async",
                                          "children": []
                                        },
                                        {
                                          "value": "close",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "()",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "connection_async = None",
                  "children": [
                    {
                      "value": "connection_async = None",
                      "children": [
                        {
                          "value": "connection_async",
                          "children": []
                        },
                        {
                          "value": "None",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "async def get_redis_async(auto_connect: bool = True) -> AsyncRedis:\n    if connection_async:\n        return connection_async\n    if auto_connect:\n        return await connect_async()\n    raise RuntimeError(\"AsyncRedis connection is not established\")",
      "children": [
        {
          "value": "get_redis_async",
          "children": []
        },
        {
          "value": "(auto_connect: bool = True)",
          "children": [
            {
              "value": "auto_connect: bool = True",
              "children": [
                {
                  "value": "auto_connect",
                  "children": []
                },
                {
                  "value": "bool",
                  "children": [
                    {
                      "value": "bool",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "True",
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "value": "AsyncRedis",
          "children": [
            {
              "value": "AsyncRedis",
              "children": []
            }
          ]
        },
        {
          "value": "if connection_async:\n        return connection_async\n    if auto_connect:\n        return await connect_async()\n    raise RuntimeError(\"AsyncRedis connection is not established\")",
          "children": [
            {
              "value": "if connection_async:\n        return connection_async",
              "children": [
                {
                  "value": "connection_async",
                  "children": []
                },
                {
                  "value": "return connection_async",
                  "children": [
                    {
                      "value": "return connection_async",
                      "children": [
                        {
                          "value": "connection_async",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "if auto_connect:\n        return await connect_async()",
              "children": [
                {
                  "value": "auto_connect",
                  "children": []
                },
                {
                  "value": "return await connect_async()",
                  "children": [
                    {
                      "value": "return await connect_async()",
                      "children": [
                        {
                          "value": "await connect_async()",
                          "children": [
                            {
                              "value": "connect_async()",
                              "children": [
                                {
                                  "value": "connect_async",
                                  "children": []
                                },
                                {
                                  "value": "()",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "raise RuntimeError(\"AsyncRedis connection is not established\")",
              "children": [
                {
                  "value": "RuntimeError(\"AsyncRedis connection is not established\")",
                  "children": [
                    {
                      "value": "RuntimeError",
                      "children": []
                    },
                    {
                      "value": "(\"AsyncRedis connection is not established\")",
                      "children": [
                        {
                          "value": "\"AsyncRedis connection is not established\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "AsyncRedis connection is not established",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}