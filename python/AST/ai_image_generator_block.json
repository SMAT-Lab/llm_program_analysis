{
  "value": "from enum import Enum\nfrom typing import Literal\n\nimport replicate\nfrom pydantic import SecretStr\nfrom replicate.helpers import FileOutput\n\nfrom backend.data.block import Block, BlockCategory, BlockSchema\nfrom backend.data.model import (\n    APIKeyCredentials,\n    CredentialsField,\n    CredentialsMetaInput,\n    SchemaField,\n)\nfrom backend.integrations.providers import ProviderName\n\n\nclass ImageSize(str, Enum):\n    \"\"\"\n    Semantic sizes that map reliably across all models\n    \"\"\"\n\n    SQUARE = \"square\"  # For profile pictures, icons, etc.\n    LANDSCAPE = \"landscape\"  # For traditional photos, scenes\n    PORTRAIT = \"portrait\"  # For vertical photos, portraits\n    WIDE = \"wide\"  # For cinematic, desktop wallpapers\n    TALL = \"tall\"  # For mobile wallpapers, stories\n\n\n# Mapping semantic sizes to model-specific formats\nSIZE_TO_SD_RATIO = {\n    ImageSize.SQUARE: \"1:1\",\n    ImageSize.LANDSCAPE: \"4:3\",\n    ImageSize.PORTRAIT: \"3:4\",\n    ImageSize.WIDE: \"16:9\",\n    ImageSize.TALL: \"9:16\",\n}\n\nSIZE_TO_FLUX_RATIO = {\n    ImageSize.SQUARE: \"1:1\",\n    ImageSize.LANDSCAPE: \"4:3\",\n    ImageSize.PORTRAIT: \"3:4\",\n    ImageSize.WIDE: \"16:9\",\n    ImageSize.TALL: \"9:16\",\n}\n\nSIZE_TO_FLUX_DIMENSIONS = {\n    ImageSize.SQUARE: (1024, 1024),\n    ImageSize.LANDSCAPE: (1365, 1024),\n    ImageSize.PORTRAIT: (1024, 1365),\n    ImageSize.WIDE: (1440, 810),  # Adjusted to maintain 16:9 within 1440 limit\n    ImageSize.TALL: (810, 1440),  # Adjusted to maintain 9:16 within 1440 limit\n}\n\nSIZE_TO_RECRAFT_DIMENSIONS = {\n    ImageSize.SQUARE: \"1024x1024\",\n    ImageSize.LANDSCAPE: \"1365x1024\",\n    ImageSize.PORTRAIT: \"1024x1365\",\n    ImageSize.WIDE: \"1536x1024\",\n    ImageSize.TALL: \"1024x1536\",\n}\n\n\nclass ImageStyle(str, Enum):\n    \"\"\"\n    Complete set of supported styles\n    \"\"\"\n\n    ANY = \"any\"\n    # Realistic image styles\n    REALISTIC = \"realistic_image\"\n    REALISTIC_BW = \"realistic_image/b_and_w\"\n    REALISTIC_HDR = \"realistic_image/hdr\"\n    REALISTIC_NATURAL = \"realistic_image/natural_light\"\n    REALISTIC_STUDIO = \"realistic_image/studio_portrait\"\n    REALISTIC_ENTERPRISE = \"realistic_image/enterprise\"\n    REALISTIC_HARD_FLASH = \"realistic_image/hard_flash\"\n    REALISTIC_MOTION_BLUR = \"realistic_image/motion_blur\"\n    # Digital illustration styles\n    DIGITAL_ART = \"digital_illustration\"\n    PIXEL_ART = \"digital_illustration/pixel_art\"\n    HAND_DRAWN = \"digital_illustration/hand_drawn\"\n    GRAIN = \"digital_illustration/grain\"\n    SKETCH = \"digital_illustration/infantile_sketch\"\n    POSTER = \"digital_illustration/2d_art_poster\"\n    POSTER_2 = \"digital_illustration/2d_art_poster_2\"\n    HANDMADE_3D = \"digital_illustration/handmade_3d\"\n    HAND_DRAWN_OUTLINE = \"digital_illustration/hand_drawn_outline\"\n    ENGRAVING_COLOR = \"digital_illustration/engraving_color\"\n\n\nclass ImageGenModel(str, Enum):\n    \"\"\"\n    Available model providers\n    \"\"\"\n\n    FLUX = \"Flux 1.1 Pro\"\n    FLUX_ULTRA = \"Flux 1.1 Pro Ultra\"\n    RECRAFT = \"Recraft v3\"\n    SD3_5 = \"Stable Diffusion 3.5 Medium\"\n\n\nclass AIImageGeneratorBlock(Block):\n    class Input(BlockSchema):\n        credentials: CredentialsMetaInput[\n            Literal[ProviderName.REPLICATE], Literal[\"api_key\"]\n        ] = CredentialsField(\n            description=\"Enter your Replicate API key to access the image generation API. You can obtain an API key from https://replicate.com/account/api-tokens.\",\n        )\n        prompt: str = SchemaField(\n            description=\"Text prompt for image generation\",\n            placeholder=\"e.g., 'A red panda using a laptop in a snowy forest'\",\n            title=\"Prompt\",\n        )\n        model: ImageGenModel = SchemaField(\n            description=\"The AI model to use for image generation\",\n            default=ImageGenModel.SD3_5,\n            title=\"Model\",\n        )\n        size: ImageSize = SchemaField(\n            description=(\n                \"Format of the generated image:\\n\"\n                \"- Square: Perfect for profile pictures, icons\\n\"\n                \"- Landscape: Traditional photo format\\n\"\n                \"- Portrait: Vertical photos, portraits\\n\"\n                \"- Wide: Cinematic format, desktop wallpapers\\n\"\n                \"- Tall: Mobile wallpapers, social media stories\"\n            ),\n            default=ImageSize.SQUARE,\n            title=\"Image Format\",\n        )\n        style: ImageStyle = SchemaField(\n            description=\"Visual style for the generated image\",\n            default=ImageStyle.ANY,\n            title=\"Image Style\",\n        )\n\n    class Output(BlockSchema):\n        image_url: str = SchemaField(description=\"URL of the generated image\")\n        error: str = SchemaField(description=\"Error message if generation failed\")\n\n    def __init__(self):\n        super().__init__(\n            id=\"ed1ae7a0-b770-4089-b520-1f0005fad19a\",\n            description=\"Generate images using various AI models through a unified interface\",\n            categories={BlockCategory.AI},\n            input_schema=AIImageGeneratorBlock.Input,\n            output_schema=AIImageGeneratorBlock.Output,\n            test_input={\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n                \"prompt\": \"An octopus using a laptop in a snowy forest with 'AutoGPT' clearly visible on the screen\",\n                \"model\": ImageGenModel.RECRAFT,\n                \"size\": ImageSize.SQUARE,\n                \"style\": ImageStyle.REALISTIC,\n            },\n            test_credentials=TEST_CREDENTIALS,\n            test_output=[\n                (\n                    \"image_url\",\n                    \"https://replicate.delivery/generated-image.webp\",\n                ),\n            ],\n            test_mock={\n                \"_run_client\": lambda *args, **kwargs: \"https://replicate.delivery/generated-image.webp\"\n            },\n        )\n\n    def _run_client(\n        self, credentials: APIKeyCredentials, model_name: str, input_params: dict\n    ):\n        try:\n            # Initialize Replicate client\n            client = replicate.Client(api_token=credentials.api_key.get_secret_value())\n\n            # Run the model with input parameters\n            output = client.run(model_name, input=input_params, wait=False)\n\n            # Process output\n            if isinstance(output, list) and len(output) > 0:\n                if isinstance(output[0], FileOutput):\n                    result_url = output[0].url\n                else:\n                    result_url = output[0]\n            elif isinstance(output, FileOutput):\n                result_url = output.url\n            elif isinstance(output, str):\n                result_url = output\n            else:\n                result_url = None\n\n            return result_url\n\n        except TypeError as e:\n            raise TypeError(f\"Error during model execution: {e}\")\n        except Exception as e:\n            raise RuntimeError(f\"Unexpected error during model execution: {e}\")\n\n    def generate_image(self, input_data: Input, credentials: APIKeyCredentials):\n        try:\n            # Handle style-based prompt modification for models without native style support\n            modified_prompt = input_data.prompt\n            if input_data.model not in [ImageGenModel.RECRAFT]:\n                style_prefix = self._style_to_prompt_prefix(input_data.style)\n                modified_prompt = f\"{style_prefix} {modified_prompt}\".strip()\n\n            if input_data.model == ImageGenModel.SD3_5:\n                # Use Stable Diffusion 3.5 with aspect ratio\n                input_params = {\n                    \"prompt\": modified_prompt,\n                    \"aspect_ratio\": SIZE_TO_SD_RATIO[input_data.size],\n                    \"output_format\": \"webp\",\n                    \"output_quality\": 90,\n                    \"steps\": 40,\n                    \"cfg_scale\": 7.0,\n                }\n                output = self._run_client(\n                    credentials,\n                    \"stability-ai/stable-diffusion-3.5-medium\",\n                    input_params,\n                )\n                return output\n\n            elif input_data.model == ImageGenModel.FLUX:\n                # Use Flux-specific dimensions with 'jpg' format to avoid ReplicateError\n                width, height = SIZE_TO_FLUX_DIMENSIONS[input_data.size]\n                input_params = {\n                    \"prompt\": modified_prompt,\n                    \"width\": width,\n                    \"height\": height,\n                    \"aspect_ratio\": SIZE_TO_FLUX_RATIO[input_data.size],\n                    \"output_format\": \"jpg\",  # Set to jpg for Flux models\n                    \"output_quality\": 90,\n                }\n                output = self._run_client(\n                    credentials, \"black-forest-labs/flux-1.1-pro\", input_params\n                )\n                return output\n\n            elif input_data.model == ImageGenModel.FLUX_ULTRA:\n                width, height = SIZE_TO_FLUX_DIMENSIONS[input_data.size]\n                input_params = {\n                    \"prompt\": modified_prompt,\n                    \"width\": width,\n                    \"height\": height,\n                    \"aspect_ratio\": SIZE_TO_FLUX_RATIO[input_data.size],\n                    \"output_format\": \"jpg\",\n                    \"output_quality\": 90,\n                }\n                output = self._run_client(\n                    credentials, \"black-forest-labs/flux-1.1-pro-ultra\", input_params\n                )\n                return output\n\n            elif input_data.model == ImageGenModel.RECRAFT:\n                input_params = {\n                    \"prompt\": input_data.prompt,\n                    \"size\": SIZE_TO_RECRAFT_DIMENSIONS[input_data.size],\n                    \"style\": input_data.style.value,\n                }\n                output = self._run_client(\n                    credentials, \"recraft-ai/recraft-v3\", input_params\n                )\n                return output\n\n        except Exception as e:\n            raise RuntimeError(f\"Failed to generate image: {str(e)}\")\n\n    def _style_to_prompt_prefix(self, style: ImageStyle) -> str:\n        \"\"\"\n        Convert a style enum to a prompt prefix for models without native style support.\n        \"\"\"\n        if style == ImageStyle.ANY:\n            return \"\"\n\n        style_map = {\n            ImageStyle.REALISTIC: \"photorealistic\",\n            ImageStyle.REALISTIC_BW: \"black and white photograph\",\n            ImageStyle.REALISTIC_HDR: \"HDR photograph\",\n            ImageStyle.REALISTIC_NATURAL: \"natural light photograph\",\n            ImageStyle.REALISTIC_STUDIO: \"studio portrait photograph\",\n            ImageStyle.REALISTIC_ENTERPRISE: \"enterprise photograph\",\n            ImageStyle.REALISTIC_HARD_FLASH: \"hard flash photograph\",\n            ImageStyle.REALISTIC_MOTION_BLUR: \"motion blur photograph\",\n            ImageStyle.DIGITAL_ART: \"digital art\",\n            ImageStyle.PIXEL_ART: \"pixel art\",\n            ImageStyle.HAND_DRAWN: \"hand drawn illustration\",\n            ImageStyle.GRAIN: \"grainy digital illustration\",\n            ImageStyle.SKETCH: \"sketchy illustration\",\n            ImageStyle.POSTER: \"2D art poster\",\n            ImageStyle.POSTER_2: \"alternate 2D art poster\",\n            ImageStyle.HANDMADE_3D: \"handmade 3D illustration\",\n            ImageStyle.HAND_DRAWN_OUTLINE: \"hand drawn outline illustration\",\n            ImageStyle.ENGRAVING_COLOR: \"color engraving illustration\",\n        }\n\n        style_text = style_map.get(style, \"\")\n        return f\"{style_text} of\" if style_text else \"\"\n\n    def run(self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs):\n        try:\n            url = self.generate_image(input_data, credentials)\n            if url:\n                yield \"image_url\", url\n            else:\n                yield \"error\", \"Image generation returned an empty result.\"\n        except Exception as e:\n            # Capture and return only the message of the exception, avoiding serialization of non-serializable objects\n            yield \"error\", str(e)\n\n\n# Test credentials stay the same\nTEST_CREDENTIALS = APIKeyCredentials(\n    id=\"01234567-89ab-cdef-0123-456789abcdef\",\n    provider=\"replicate\",\n    api_key=SecretStr(\"mock-replicate-api-key\"),\n    title=\"Mock Replicate API key\",\n    expires_at=None,\n)\n\nTEST_CREDENTIALS_INPUT = {\n    \"provider\": TEST_CREDENTIALS.provider,\n    \"id\": TEST_CREDENTIALS.id,\n    \"type\": TEST_CREDENTIALS.type,\n    \"title\": TEST_CREDENTIALS.title,\n}",
  "children": [
    {
      "value": "from enum import Enum",
      "children": [
        {
          "value": "enum",
          "children": [
            {
              "value": "enum",
              "children": []
            }
          ]
        },
        {
          "value": "Enum",
          "children": [
            {
              "value": "Enum",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from typing import Literal",
      "children": [
        {
          "value": "typing",
          "children": [
            {
              "value": "typing",
              "children": []
            }
          ]
        },
        {
          "value": "Literal",
          "children": [
            {
              "value": "Literal",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "import replicate",
      "children": [
        {
          "value": "replicate",
          "children": [
            {
              "value": "replicate",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from pydantic import SecretStr",
      "children": [
        {
          "value": "pydantic",
          "children": [
            {
              "value": "pydantic",
              "children": []
            }
          ]
        },
        {
          "value": "SecretStr",
          "children": [
            {
              "value": "SecretStr",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from replicate.helpers import FileOutput",
      "children": [
        {
          "value": "replicate.helpers",
          "children": [
            {
              "value": "replicate",
              "children": []
            },
            {
              "value": "helpers",
              "children": []
            }
          ]
        },
        {
          "value": "FileOutput",
          "children": [
            {
              "value": "FileOutput",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.data.block import Block, BlockCategory, BlockSchema",
      "children": [
        {
          "value": "backend.data.block",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "data",
              "children": []
            },
            {
              "value": "block",
              "children": []
            }
          ]
        },
        {
          "value": "Block",
          "children": [
            {
              "value": "Block",
              "children": []
            }
          ]
        },
        {
          "value": "BlockCategory",
          "children": [
            {
              "value": "BlockCategory",
              "children": []
            }
          ]
        },
        {
          "value": "BlockSchema",
          "children": [
            {
              "value": "BlockSchema",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.data.model import (\n    APIKeyCredentials,\n    CredentialsField,\n    CredentialsMetaInput,\n    SchemaField,\n)",
      "children": [
        {
          "value": "backend.data.model",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "data",
              "children": []
            },
            {
              "value": "model",
              "children": []
            }
          ]
        },
        {
          "value": "APIKeyCredentials",
          "children": [
            {
              "value": "APIKeyCredentials",
              "children": []
            }
          ]
        },
        {
          "value": "CredentialsField",
          "children": [
            {
              "value": "CredentialsField",
              "children": []
            }
          ]
        },
        {
          "value": "CredentialsMetaInput",
          "children": [
            {
              "value": "CredentialsMetaInput",
              "children": []
            }
          ]
        },
        {
          "value": "SchemaField",
          "children": [
            {
              "value": "SchemaField",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "from backend.integrations.providers import ProviderName",
      "children": [
        {
          "value": "backend.integrations.providers",
          "children": [
            {
              "value": "backend",
              "children": []
            },
            {
              "value": "integrations",
              "children": []
            },
            {
              "value": "providers",
              "children": []
            }
          ]
        },
        {
          "value": "ProviderName",
          "children": [
            {
              "value": "ProviderName",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "class ImageSize(str, Enum):\n    \"\"\"\n    Semantic sizes that map reliably across all models\n    \"\"\"\n\n    SQUARE = \"square\"  # For profile pictures, icons, etc.\n    LANDSCAPE = \"landscape\"  # For traditional photos, scenes\n    PORTRAIT = \"portrait\"  # For vertical photos, portraits\n    WIDE = \"wide\"  # For cinematic, desktop wallpapers\n    TALL = \"tall\"  # For mobile wallpapers, stories",
      "children": [
        {
          "value": "ImageSize",
          "children": []
        },
        {
          "value": "(str, Enum)",
          "children": [
            {
              "value": "str",
              "children": []
            },
            {
              "value": "Enum",
              "children": []
            }
          ]
        },
        {
          "value": "\"\"\"\n    Semantic sizes that map reliably across all models\n    \"\"\"\n\n    SQUARE = \"square\"  # For profile pictures, icons, etc.\n    LANDSCAPE = \"landscape\"  # For traditional photos, scenes\n    PORTRAIT = \"portrait\"  # For vertical photos, portraits\n    WIDE = \"wide\"  # For cinematic, desktop wallpapers\n    TALL = \"tall\"  # For mobile wallpapers, stories",
          "children": [
            {
              "value": "\"\"\"\n    Semantic sizes that map reliably across all models\n    \"\"\"",
              "children": [
                {
                  "value": "\"\"\"\n    Semantic sizes that map reliably across all models\n    \"\"\"",
                  "children": [
                    {
                      "value": "\"\"\"",
                      "children": []
                    },
                    {
                      "value": "Semantic sizes that map reliably across all models",
                      "children": []
                    },
                    {
                      "value": "\"\"\"",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "SQUARE = \"square\"",
              "children": [
                {
                  "value": "SQUARE = \"square\"",
                  "children": [
                    {
                      "value": "SQUARE",
                      "children": []
                    },
                    {
                      "value": "\"square\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "square",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# For profile pictures, icons, etc.",
              "children": []
            },
            {
              "value": "LANDSCAPE = \"landscape\"",
              "children": [
                {
                  "value": "LANDSCAPE = \"landscape\"",
                  "children": [
                    {
                      "value": "LANDSCAPE",
                      "children": []
                    },
                    {
                      "value": "\"landscape\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "landscape",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# For traditional photos, scenes",
              "children": []
            },
            {
              "value": "PORTRAIT = \"portrait\"",
              "children": [
                {
                  "value": "PORTRAIT = \"portrait\"",
                  "children": [
                    {
                      "value": "PORTRAIT",
                      "children": []
                    },
                    {
                      "value": "\"portrait\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "portrait",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# For vertical photos, portraits",
              "children": []
            },
            {
              "value": "WIDE = \"wide\"",
              "children": [
                {
                  "value": "WIDE = \"wide\"",
                  "children": [
                    {
                      "value": "WIDE",
                      "children": []
                    },
                    {
                      "value": "\"wide\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "wide",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# For cinematic, desktop wallpapers",
              "children": []
            },
            {
              "value": "TALL = \"tall\"",
              "children": [
                {
                  "value": "TALL = \"tall\"",
                  "children": [
                    {
                      "value": "TALL",
                      "children": []
                    },
                    {
                      "value": "\"tall\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "tall",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# For mobile wallpapers, stories",
              "children": []
            }
          ]
        }
      ]
    },
    {
      "value": "# Mapping semantic sizes to model-specific formats",
      "children": []
    },
    {
      "value": "SIZE_TO_SD_RATIO = {\n    ImageSize.SQUARE: \"1:1\",\n    ImageSize.LANDSCAPE: \"4:3\",\n    ImageSize.PORTRAIT: \"3:4\",\n    ImageSize.WIDE: \"16:9\",\n    ImageSize.TALL: \"9:16\",\n}",
      "children": [
        {
          "value": "SIZE_TO_SD_RATIO = {\n    ImageSize.SQUARE: \"1:1\",\n    ImageSize.LANDSCAPE: \"4:3\",\n    ImageSize.PORTRAIT: \"3:4\",\n    ImageSize.WIDE: \"16:9\",\n    ImageSize.TALL: \"9:16\",\n}",
          "children": [
            {
              "value": "SIZE_TO_SD_RATIO",
              "children": []
            },
            {
              "value": "{\n    ImageSize.SQUARE: \"1:1\",\n    ImageSize.LANDSCAPE: \"4:3\",\n    ImageSize.PORTRAIT: \"3:4\",\n    ImageSize.WIDE: \"16:9\",\n    ImageSize.TALL: \"9:16\",\n}",
              "children": [
                {
                  "value": "ImageSize.SQUARE: \"1:1\"",
                  "children": [
                    {
                      "value": "ImageSize.SQUARE",
                      "children": [
                        {
                          "value": "ImageSize",
                          "children": []
                        },
                        {
                          "value": "SQUARE",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "\"1:1\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "1:1",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "ImageSize.LANDSCAPE: \"4:3\"",
                  "children": [
                    {
                      "value": "ImageSize.LANDSCAPE",
                      "children": [
                        {
                          "value": "ImageSize",
                          "children": []
                        },
                        {
                          "value": "LANDSCAPE",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "\"4:3\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "4:3",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "ImageSize.PORTRAIT: \"3:4\"",
                  "children": [
                    {
                      "value": "ImageSize.PORTRAIT",
                      "children": [
                        {
                          "value": "ImageSize",
                          "children": []
                        },
                        {
                          "value": "PORTRAIT",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "\"3:4\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "3:4",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "ImageSize.WIDE: \"16:9\"",
                  "children": [
                    {
                      "value": "ImageSize.WIDE",
                      "children": [
                        {
                          "value": "ImageSize",
                          "children": []
                        },
                        {
                          "value": "WIDE",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "\"16:9\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "16:9",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "ImageSize.TALL: \"9:16\"",
                  "children": [
                    {
                      "value": "ImageSize.TALL",
                      "children": [
                        {
                          "value": "ImageSize",
                          "children": []
                        },
                        {
                          "value": "TALL",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "\"9:16\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "9:16",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "SIZE_TO_FLUX_RATIO = {\n    ImageSize.SQUARE: \"1:1\",\n    ImageSize.LANDSCAPE: \"4:3\",\n    ImageSize.PORTRAIT: \"3:4\",\n    ImageSize.WIDE: \"16:9\",\n    ImageSize.TALL: \"9:16\",\n}",
      "children": [
        {
          "value": "SIZE_TO_FLUX_RATIO = {\n    ImageSize.SQUARE: \"1:1\",\n    ImageSize.LANDSCAPE: \"4:3\",\n    ImageSize.PORTRAIT: \"3:4\",\n    ImageSize.WIDE: \"16:9\",\n    ImageSize.TALL: \"9:16\",\n}",
          "children": [
            {
              "value": "SIZE_TO_FLUX_RATIO",
              "children": []
            },
            {
              "value": "{\n    ImageSize.SQUARE: \"1:1\",\n    ImageSize.LANDSCAPE: \"4:3\",\n    ImageSize.PORTRAIT: \"3:4\",\n    ImageSize.WIDE: \"16:9\",\n    ImageSize.TALL: \"9:16\",\n}",
              "children": [
                {
                  "value": "ImageSize.SQUARE: \"1:1\"",
                  "children": [
                    {
                      "value": "ImageSize.SQUARE",
                      "children": [
                        {
                          "value": "ImageSize",
                          "children": []
                        },
                        {
                          "value": "SQUARE",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "\"1:1\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "1:1",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "ImageSize.LANDSCAPE: \"4:3\"",
                  "children": [
                    {
                      "value": "ImageSize.LANDSCAPE",
                      "children": [
                        {
                          "value": "ImageSize",
                          "children": []
                        },
                        {
                          "value": "LANDSCAPE",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "\"4:3\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "4:3",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "ImageSize.PORTRAIT: \"3:4\"",
                  "children": [
                    {
                      "value": "ImageSize.PORTRAIT",
                      "children": [
                        {
                          "value": "ImageSize",
                          "children": []
                        },
                        {
                          "value": "PORTRAIT",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "\"3:4\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "3:4",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "ImageSize.WIDE: \"16:9\"",
                  "children": [
                    {
                      "value": "ImageSize.WIDE",
                      "children": [
                        {
                          "value": "ImageSize",
                          "children": []
                        },
                        {
                          "value": "WIDE",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "\"16:9\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "16:9",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "ImageSize.TALL: \"9:16\"",
                  "children": [
                    {
                      "value": "ImageSize.TALL",
                      "children": [
                        {
                          "value": "ImageSize",
                          "children": []
                        },
                        {
                          "value": "TALL",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "\"9:16\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "9:16",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "SIZE_TO_FLUX_DIMENSIONS = {\n    ImageSize.SQUARE: (1024, 1024),\n    ImageSize.LANDSCAPE: (1365, 1024),\n    ImageSize.PORTRAIT: (1024, 1365),\n    ImageSize.WIDE: (1440, 810),  # Adjusted to maintain 16:9 within 1440 limit\n    ImageSize.TALL: (810, 1440),  # Adjusted to maintain 9:16 within 1440 limit\n}",
      "children": [
        {
          "value": "SIZE_TO_FLUX_DIMENSIONS = {\n    ImageSize.SQUARE: (1024, 1024),\n    ImageSize.LANDSCAPE: (1365, 1024),\n    ImageSize.PORTRAIT: (1024, 1365),\n    ImageSize.WIDE: (1440, 810),  # Adjusted to maintain 16:9 within 1440 limit\n    ImageSize.TALL: (810, 1440),  # Adjusted to maintain 9:16 within 1440 limit\n}",
          "children": [
            {
              "value": "SIZE_TO_FLUX_DIMENSIONS",
              "children": []
            },
            {
              "value": "{\n    ImageSize.SQUARE: (1024, 1024),\n    ImageSize.LANDSCAPE: (1365, 1024),\n    ImageSize.PORTRAIT: (1024, 1365),\n    ImageSize.WIDE: (1440, 810),  # Adjusted to maintain 16:9 within 1440 limit\n    ImageSize.TALL: (810, 1440),  # Adjusted to maintain 9:16 within 1440 limit\n}",
              "children": [
                {
                  "value": "ImageSize.SQUARE: (1024, 1024)",
                  "children": [
                    {
                      "value": "ImageSize.SQUARE",
                      "children": [
                        {
                          "value": "ImageSize",
                          "children": []
                        },
                        {
                          "value": "SQUARE",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "(1024, 1024)",
                      "children": [
                        {
                          "value": "1024",
                          "children": []
                        },
                        {
                          "value": "1024",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "ImageSize.LANDSCAPE: (1365, 1024)",
                  "children": [
                    {
                      "value": "ImageSize.LANDSCAPE",
                      "children": [
                        {
                          "value": "ImageSize",
                          "children": []
                        },
                        {
                          "value": "LANDSCAPE",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "(1365, 1024)",
                      "children": [
                        {
                          "value": "1365",
                          "children": []
                        },
                        {
                          "value": "1024",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "ImageSize.PORTRAIT: (1024, 1365)",
                  "children": [
                    {
                      "value": "ImageSize.PORTRAIT",
                      "children": [
                        {
                          "value": "ImageSize",
                          "children": []
                        },
                        {
                          "value": "PORTRAIT",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "(1024, 1365)",
                      "children": [
                        {
                          "value": "1024",
                          "children": []
                        },
                        {
                          "value": "1365",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "ImageSize.WIDE: (1440, 810)",
                  "children": [
                    {
                      "value": "ImageSize.WIDE",
                      "children": [
                        {
                          "value": "ImageSize",
                          "children": []
                        },
                        {
                          "value": "WIDE",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "(1440, 810)",
                      "children": [
                        {
                          "value": "1440",
                          "children": []
                        },
                        {
                          "value": "810",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "# Adjusted to maintain 16:9 within 1440 limit",
                  "children": []
                },
                {
                  "value": "ImageSize.TALL: (810, 1440)",
                  "children": [
                    {
                      "value": "ImageSize.TALL",
                      "children": [
                        {
                          "value": "ImageSize",
                          "children": []
                        },
                        {
                          "value": "TALL",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "(810, 1440)",
                      "children": [
                        {
                          "value": "810",
                          "children": []
                        },
                        {
                          "value": "1440",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "# Adjusted to maintain 9:16 within 1440 limit",
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "SIZE_TO_RECRAFT_DIMENSIONS = {\n    ImageSize.SQUARE: \"1024x1024\",\n    ImageSize.LANDSCAPE: \"1365x1024\",\n    ImageSize.PORTRAIT: \"1024x1365\",\n    ImageSize.WIDE: \"1536x1024\",\n    ImageSize.TALL: \"1024x1536\",\n}",
      "children": [
        {
          "value": "SIZE_TO_RECRAFT_DIMENSIONS = {\n    ImageSize.SQUARE: \"1024x1024\",\n    ImageSize.LANDSCAPE: \"1365x1024\",\n    ImageSize.PORTRAIT: \"1024x1365\",\n    ImageSize.WIDE: \"1536x1024\",\n    ImageSize.TALL: \"1024x1536\",\n}",
          "children": [
            {
              "value": "SIZE_TO_RECRAFT_DIMENSIONS",
              "children": []
            },
            {
              "value": "{\n    ImageSize.SQUARE: \"1024x1024\",\n    ImageSize.LANDSCAPE: \"1365x1024\",\n    ImageSize.PORTRAIT: \"1024x1365\",\n    ImageSize.WIDE: \"1536x1024\",\n    ImageSize.TALL: \"1024x1536\",\n}",
              "children": [
                {
                  "value": "ImageSize.SQUARE: \"1024x1024\"",
                  "children": [
                    {
                      "value": "ImageSize.SQUARE",
                      "children": [
                        {
                          "value": "ImageSize",
                          "children": []
                        },
                        {
                          "value": "SQUARE",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "\"1024x1024\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "1024x1024",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "ImageSize.LANDSCAPE: \"1365x1024\"",
                  "children": [
                    {
                      "value": "ImageSize.LANDSCAPE",
                      "children": [
                        {
                          "value": "ImageSize",
                          "children": []
                        },
                        {
                          "value": "LANDSCAPE",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "\"1365x1024\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "1365x1024",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "ImageSize.PORTRAIT: \"1024x1365\"",
                  "children": [
                    {
                      "value": "ImageSize.PORTRAIT",
                      "children": [
                        {
                          "value": "ImageSize",
                          "children": []
                        },
                        {
                          "value": "PORTRAIT",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "\"1024x1365\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "1024x1365",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "ImageSize.WIDE: \"1536x1024\"",
                  "children": [
                    {
                      "value": "ImageSize.WIDE",
                      "children": [
                        {
                          "value": "ImageSize",
                          "children": []
                        },
                        {
                          "value": "WIDE",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "\"1536x1024\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "1536x1024",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "ImageSize.TALL: \"1024x1536\"",
                  "children": [
                    {
                      "value": "ImageSize.TALL",
                      "children": [
                        {
                          "value": "ImageSize",
                          "children": []
                        },
                        {
                          "value": "TALL",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "\"1024x1536\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "1024x1536",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "class ImageStyle(str, Enum):\n    \"\"\"\n    Complete set of supported styles\n    \"\"\"\n\n    ANY = \"any\"\n    # Realistic image styles\n    REALISTIC = \"realistic_image\"\n    REALISTIC_BW = \"realistic_image/b_and_w\"\n    REALISTIC_HDR = \"realistic_image/hdr\"\n    REALISTIC_NATURAL = \"realistic_image/natural_light\"\n    REALISTIC_STUDIO = \"realistic_image/studio_portrait\"\n    REALISTIC_ENTERPRISE = \"realistic_image/enterprise\"\n    REALISTIC_HARD_FLASH = \"realistic_image/hard_flash\"\n    REALISTIC_MOTION_BLUR = \"realistic_image/motion_blur\"\n    # Digital illustration styles\n    DIGITAL_ART = \"digital_illustration\"\n    PIXEL_ART = \"digital_illustration/pixel_art\"\n    HAND_DRAWN = \"digital_illustration/hand_drawn\"\n    GRAIN = \"digital_illustration/grain\"\n    SKETCH = \"digital_illustration/infantile_sketch\"\n    POSTER = \"digital_illustration/2d_art_poster\"\n    POSTER_2 = \"digital_illustration/2d_art_poster_2\"\n    HANDMADE_3D = \"digital_illustration/handmade_3d\"\n    HAND_DRAWN_OUTLINE = \"digital_illustration/hand_drawn_outline\"\n    ENGRAVING_COLOR = \"digital_illustration/engraving_color\"",
      "children": [
        {
          "value": "ImageStyle",
          "children": []
        },
        {
          "value": "(str, Enum)",
          "children": [
            {
              "value": "str",
              "children": []
            },
            {
              "value": "Enum",
              "children": []
            }
          ]
        },
        {
          "value": "\"\"\"\n    Complete set of supported styles\n    \"\"\"\n\n    ANY = \"any\"\n    # Realistic image styles\n    REALISTIC = \"realistic_image\"\n    REALISTIC_BW = \"realistic_image/b_and_w\"\n    REALISTIC_HDR = \"realistic_image/hdr\"\n    REALISTIC_NATURAL = \"realistic_image/natural_light\"\n    REALISTIC_STUDIO = \"realistic_image/studio_portrait\"\n    REALISTIC_ENTERPRISE = \"realistic_image/enterprise\"\n    REALISTIC_HARD_FLASH = \"realistic_image/hard_flash\"\n    REALISTIC_MOTION_BLUR = \"realistic_image/motion_blur\"\n    # Digital illustration styles\n    DIGITAL_ART = \"digital_illustration\"\n    PIXEL_ART = \"digital_illustration/pixel_art\"\n    HAND_DRAWN = \"digital_illustration/hand_drawn\"\n    GRAIN = \"digital_illustration/grain\"\n    SKETCH = \"digital_illustration/infantile_sketch\"\n    POSTER = \"digital_illustration/2d_art_poster\"\n    POSTER_2 = \"digital_illustration/2d_art_poster_2\"\n    HANDMADE_3D = \"digital_illustration/handmade_3d\"\n    HAND_DRAWN_OUTLINE = \"digital_illustration/hand_drawn_outline\"\n    ENGRAVING_COLOR = \"digital_illustration/engraving_color\"",
          "children": [
            {
              "value": "\"\"\"\n    Complete set of supported styles\n    \"\"\"",
              "children": [
                {
                  "value": "\"\"\"\n    Complete set of supported styles\n    \"\"\"",
                  "children": [
                    {
                      "value": "\"\"\"",
                      "children": []
                    },
                    {
                      "value": "Complete set of supported styles",
                      "children": []
                    },
                    {
                      "value": "\"\"\"",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "ANY = \"any\"",
              "children": [
                {
                  "value": "ANY = \"any\"",
                  "children": [
                    {
                      "value": "ANY",
                      "children": []
                    },
                    {
                      "value": "\"any\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "any",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Realistic image styles",
              "children": []
            },
            {
              "value": "REALISTIC = \"realistic_image\"",
              "children": [
                {
                  "value": "REALISTIC = \"realistic_image\"",
                  "children": [
                    {
                      "value": "REALISTIC",
                      "children": []
                    },
                    {
                      "value": "\"realistic_image\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "realistic_image",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "REALISTIC_BW = \"realistic_image/b_and_w\"",
              "children": [
                {
                  "value": "REALISTIC_BW = \"realistic_image/b_and_w\"",
                  "children": [
                    {
                      "value": "REALISTIC_BW",
                      "children": []
                    },
                    {
                      "value": "\"realistic_image/b_and_w\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "realistic_image/b_and_w",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "REALISTIC_HDR = \"realistic_image/hdr\"",
              "children": [
                {
                  "value": "REALISTIC_HDR = \"realistic_image/hdr\"",
                  "children": [
                    {
                      "value": "REALISTIC_HDR",
                      "children": []
                    },
                    {
                      "value": "\"realistic_image/hdr\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "realistic_image/hdr",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "REALISTIC_NATURAL = \"realistic_image/natural_light\"",
              "children": [
                {
                  "value": "REALISTIC_NATURAL = \"realistic_image/natural_light\"",
                  "children": [
                    {
                      "value": "REALISTIC_NATURAL",
                      "children": []
                    },
                    {
                      "value": "\"realistic_image/natural_light\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "realistic_image/natural_light",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "REALISTIC_STUDIO = \"realistic_image/studio_portrait\"",
              "children": [
                {
                  "value": "REALISTIC_STUDIO = \"realistic_image/studio_portrait\"",
                  "children": [
                    {
                      "value": "REALISTIC_STUDIO",
                      "children": []
                    },
                    {
                      "value": "\"realistic_image/studio_portrait\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "realistic_image/studio_portrait",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "REALISTIC_ENTERPRISE = \"realistic_image/enterprise\"",
              "children": [
                {
                  "value": "REALISTIC_ENTERPRISE = \"realistic_image/enterprise\"",
                  "children": [
                    {
                      "value": "REALISTIC_ENTERPRISE",
                      "children": []
                    },
                    {
                      "value": "\"realistic_image/enterprise\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "realistic_image/enterprise",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "REALISTIC_HARD_FLASH = \"realistic_image/hard_flash\"",
              "children": [
                {
                  "value": "REALISTIC_HARD_FLASH = \"realistic_image/hard_flash\"",
                  "children": [
                    {
                      "value": "REALISTIC_HARD_FLASH",
                      "children": []
                    },
                    {
                      "value": "\"realistic_image/hard_flash\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "realistic_image/hard_flash",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "REALISTIC_MOTION_BLUR = \"realistic_image/motion_blur\"",
              "children": [
                {
                  "value": "REALISTIC_MOTION_BLUR = \"realistic_image/motion_blur\"",
                  "children": [
                    {
                      "value": "REALISTIC_MOTION_BLUR",
                      "children": []
                    },
                    {
                      "value": "\"realistic_image/motion_blur\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "realistic_image/motion_blur",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "# Digital illustration styles",
              "children": []
            },
            {
              "value": "DIGITAL_ART = \"digital_illustration\"",
              "children": [
                {
                  "value": "DIGITAL_ART = \"digital_illustration\"",
                  "children": [
                    {
                      "value": "DIGITAL_ART",
                      "children": []
                    },
                    {
                      "value": "\"digital_illustration\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "digital_illustration",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "PIXEL_ART = \"digital_illustration/pixel_art\"",
              "children": [
                {
                  "value": "PIXEL_ART = \"digital_illustration/pixel_art\"",
                  "children": [
                    {
                      "value": "PIXEL_ART",
                      "children": []
                    },
                    {
                      "value": "\"digital_illustration/pixel_art\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "digital_illustration/pixel_art",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "HAND_DRAWN = \"digital_illustration/hand_drawn\"",
              "children": [
                {
                  "value": "HAND_DRAWN = \"digital_illustration/hand_drawn\"",
                  "children": [
                    {
                      "value": "HAND_DRAWN",
                      "children": []
                    },
                    {
                      "value": "\"digital_illustration/hand_drawn\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "digital_illustration/hand_drawn",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "GRAIN = \"digital_illustration/grain\"",
              "children": [
                {
                  "value": "GRAIN = \"digital_illustration/grain\"",
                  "children": [
                    {
                      "value": "GRAIN",
                      "children": []
                    },
                    {
                      "value": "\"digital_illustration/grain\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "digital_illustration/grain",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "SKETCH = \"digital_illustration/infantile_sketch\"",
              "children": [
                {
                  "value": "SKETCH = \"digital_illustration/infantile_sketch\"",
                  "children": [
                    {
                      "value": "SKETCH",
                      "children": []
                    },
                    {
                      "value": "\"digital_illustration/infantile_sketch\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "digital_illustration/infantile_sketch",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "POSTER = \"digital_illustration/2d_art_poster\"",
              "children": [
                {
                  "value": "POSTER = \"digital_illustration/2d_art_poster\"",
                  "children": [
                    {
                      "value": "POSTER",
                      "children": []
                    },
                    {
                      "value": "\"digital_illustration/2d_art_poster\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "digital_illustration/2d_art_poster",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "POSTER_2 = \"digital_illustration/2d_art_poster_2\"",
              "children": [
                {
                  "value": "POSTER_2 = \"digital_illustration/2d_art_poster_2\"",
                  "children": [
                    {
                      "value": "POSTER_2",
                      "children": []
                    },
                    {
                      "value": "\"digital_illustration/2d_art_poster_2\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "digital_illustration/2d_art_poster_2",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "HANDMADE_3D = \"digital_illustration/handmade_3d\"",
              "children": [
                {
                  "value": "HANDMADE_3D = \"digital_illustration/handmade_3d\"",
                  "children": [
                    {
                      "value": "HANDMADE_3D",
                      "children": []
                    },
                    {
                      "value": "\"digital_illustration/handmade_3d\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "digital_illustration/handmade_3d",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "HAND_DRAWN_OUTLINE = \"digital_illustration/hand_drawn_outline\"",
              "children": [
                {
                  "value": "HAND_DRAWN_OUTLINE = \"digital_illustration/hand_drawn_outline\"",
                  "children": [
                    {
                      "value": "HAND_DRAWN_OUTLINE",
                      "children": []
                    },
                    {
                      "value": "\"digital_illustration/hand_drawn_outline\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "digital_illustration/hand_drawn_outline",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "ENGRAVING_COLOR = \"digital_illustration/engraving_color\"",
              "children": [
                {
                  "value": "ENGRAVING_COLOR = \"digital_illustration/engraving_color\"",
                  "children": [
                    {
                      "value": "ENGRAVING_COLOR",
                      "children": []
                    },
                    {
                      "value": "\"digital_illustration/engraving_color\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "digital_illustration/engraving_color",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "class ImageGenModel(str, Enum):\n    \"\"\"\n    Available model providers\n    \"\"\"\n\n    FLUX = \"Flux 1.1 Pro\"\n    FLUX_ULTRA = \"Flux 1.1 Pro Ultra\"\n    RECRAFT = \"Recraft v3\"\n    SD3_5 = \"Stable Diffusion 3.5 Medium\"",
      "children": [
        {
          "value": "ImageGenModel",
          "children": []
        },
        {
          "value": "(str, Enum)",
          "children": [
            {
              "value": "str",
              "children": []
            },
            {
              "value": "Enum",
              "children": []
            }
          ]
        },
        {
          "value": "\"\"\"\n    Available model providers\n    \"\"\"\n\n    FLUX = \"Flux 1.1 Pro\"\n    FLUX_ULTRA = \"Flux 1.1 Pro Ultra\"\n    RECRAFT = \"Recraft v3\"\n    SD3_5 = \"Stable Diffusion 3.5 Medium\"",
          "children": [
            {
              "value": "\"\"\"\n    Available model providers\n    \"\"\"",
              "children": [
                {
                  "value": "\"\"\"\n    Available model providers\n    \"\"\"",
                  "children": [
                    {
                      "value": "\"\"\"",
                      "children": []
                    },
                    {
                      "value": "Available model providers",
                      "children": []
                    },
                    {
                      "value": "\"\"\"",
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "value": "FLUX = \"Flux 1.1 Pro\"",
              "children": [
                {
                  "value": "FLUX = \"Flux 1.1 Pro\"",
                  "children": [
                    {
                      "value": "FLUX",
                      "children": []
                    },
                    {
                      "value": "\"Flux 1.1 Pro\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "Flux 1.1 Pro",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "FLUX_ULTRA = \"Flux 1.1 Pro Ultra\"",
              "children": [
                {
                  "value": "FLUX_ULTRA = \"Flux 1.1 Pro Ultra\"",
                  "children": [
                    {
                      "value": "FLUX_ULTRA",
                      "children": []
                    },
                    {
                      "value": "\"Flux 1.1 Pro Ultra\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "Flux 1.1 Pro Ultra",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "RECRAFT = \"Recraft v3\"",
              "children": [
                {
                  "value": "RECRAFT = \"Recraft v3\"",
                  "children": [
                    {
                      "value": "RECRAFT",
                      "children": []
                    },
                    {
                      "value": "\"Recraft v3\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "Recraft v3",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "SD3_5 = \"Stable Diffusion 3.5 Medium\"",
              "children": [
                {
                  "value": "SD3_5 = \"Stable Diffusion 3.5 Medium\"",
                  "children": [
                    {
                      "value": "SD3_5",
                      "children": []
                    },
                    {
                      "value": "\"Stable Diffusion 3.5 Medium\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "Stable Diffusion 3.5 Medium",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "class AIImageGeneratorBlock(Block):\n    class Input(BlockSchema):\n        credentials: CredentialsMetaInput[\n            Literal[ProviderName.REPLICATE], Literal[\"api_key\"]\n        ] = CredentialsField(\n            description=\"Enter your Replicate API key to access the image generation API. You can obtain an API key from https://replicate.com/account/api-tokens.\",\n        )\n        prompt: str = SchemaField(\n            description=\"Text prompt for image generation\",\n            placeholder=\"e.g., 'A red panda using a laptop in a snowy forest'\",\n            title=\"Prompt\",\n        )\n        model: ImageGenModel = SchemaField(\n            description=\"The AI model to use for image generation\",\n            default=ImageGenModel.SD3_5,\n            title=\"Model\",\n        )\n        size: ImageSize = SchemaField(\n            description=(\n                \"Format of the generated image:\\n\"\n                \"- Square: Perfect for profile pictures, icons\\n\"\n                \"- Landscape: Traditional photo format\\n\"\n                \"- Portrait: Vertical photos, portraits\\n\"\n                \"- Wide: Cinematic format, desktop wallpapers\\n\"\n                \"- Tall: Mobile wallpapers, social media stories\"\n            ),\n            default=ImageSize.SQUARE,\n            title=\"Image Format\",\n        )\n        style: ImageStyle = SchemaField(\n            description=\"Visual style for the generated image\",\n            default=ImageStyle.ANY,\n            title=\"Image Style\",\n        )\n\n    class Output(BlockSchema):\n        image_url: str = SchemaField(description=\"URL of the generated image\")\n        error: str = SchemaField(description=\"Error message if generation failed\")\n\n    def __init__(self):\n        super().__init__(\n            id=\"ed1ae7a0-b770-4089-b520-1f0005fad19a\",\n            description=\"Generate images using various AI models through a unified interface\",\n            categories={BlockCategory.AI},\n            input_schema=AIImageGeneratorBlock.Input,\n            output_schema=AIImageGeneratorBlock.Output,\n            test_input={\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n                \"prompt\": \"An octopus using a laptop in a snowy forest with 'AutoGPT' clearly visible on the screen\",\n                \"model\": ImageGenModel.RECRAFT,\n                \"size\": ImageSize.SQUARE,\n                \"style\": ImageStyle.REALISTIC,\n            },\n            test_credentials=TEST_CREDENTIALS,\n            test_output=[\n                (\n                    \"image_url\",\n                    \"https://replicate.delivery/generated-image.webp\",\n                ),\n            ],\n            test_mock={\n                \"_run_client\": lambda *args, **kwargs: \"https://replicate.delivery/generated-image.webp\"\n            },\n        )\n\n    def _run_client(\n        self, credentials: APIKeyCredentials, model_name: str, input_params: dict\n    ):\n        try:\n            # Initialize Replicate client\n            client = replicate.Client(api_token=credentials.api_key.get_secret_value())\n\n            # Run the model with input parameters\n            output = client.run(model_name, input=input_params, wait=False)\n\n            # Process output\n            if isinstance(output, list) and len(output) > 0:\n                if isinstance(output[0], FileOutput):\n                    result_url = output[0].url\n                else:\n                    result_url = output[0]\n            elif isinstance(output, FileOutput):\n                result_url = output.url\n            elif isinstance(output, str):\n                result_url = output\n            else:\n                result_url = None\n\n            return result_url\n\n        except TypeError as e:\n            raise TypeError(f\"Error during model execution: {e}\")\n        except Exception as e:\n            raise RuntimeError(f\"Unexpected error during model execution: {e}\")\n\n    def generate_image(self, input_data: Input, credentials: APIKeyCredentials):\n        try:\n            # Handle style-based prompt modification for models without native style support\n            modified_prompt = input_data.prompt\n            if input_data.model not in [ImageGenModel.RECRAFT]:\n                style_prefix = self._style_to_prompt_prefix(input_data.style)\n                modified_prompt = f\"{style_prefix} {modified_prompt}\".strip()\n\n            if input_data.model == ImageGenModel.SD3_5:\n                # Use Stable Diffusion 3.5 with aspect ratio\n                input_params = {\n                    \"prompt\": modified_prompt,\n                    \"aspect_ratio\": SIZE_TO_SD_RATIO[input_data.size],\n                    \"output_format\": \"webp\",\n                    \"output_quality\": 90,\n                    \"steps\": 40,\n                    \"cfg_scale\": 7.0,\n                }\n                output = self._run_client(\n                    credentials,\n                    \"stability-ai/stable-diffusion-3.5-medium\",\n                    input_params,\n                )\n                return output\n\n            elif input_data.model == ImageGenModel.FLUX:\n                # Use Flux-specific dimensions with 'jpg' format to avoid ReplicateError\n                width, height = SIZE_TO_FLUX_DIMENSIONS[input_data.size]\n                input_params = {\n                    \"prompt\": modified_prompt,\n                    \"width\": width,\n                    \"height\": height,\n                    \"aspect_ratio\": SIZE_TO_FLUX_RATIO[input_data.size],\n                    \"output_format\": \"jpg\",  # Set to jpg for Flux models\n                    \"output_quality\": 90,\n                }\n                output = self._run_client(\n                    credentials, \"black-forest-labs/flux-1.1-pro\", input_params\n                )\n                return output\n\n            elif input_data.model == ImageGenModel.FLUX_ULTRA:\n                width, height = SIZE_TO_FLUX_DIMENSIONS[input_data.size]\n                input_params = {\n                    \"prompt\": modified_prompt,\n                    \"width\": width,\n                    \"height\": height,\n                    \"aspect_ratio\": SIZE_TO_FLUX_RATIO[input_data.size],\n                    \"output_format\": \"jpg\",\n                    \"output_quality\": 90,\n                }\n                output = self._run_client(\n                    credentials, \"black-forest-labs/flux-1.1-pro-ultra\", input_params\n                )\n                return output\n\n            elif input_data.model == ImageGenModel.RECRAFT:\n                input_params = {\n                    \"prompt\": input_data.prompt,\n                    \"size\": SIZE_TO_RECRAFT_DIMENSIONS[input_data.size],\n                    \"style\": input_data.style.value,\n                }\n                output = self._run_client(\n                    credentials, \"recraft-ai/recraft-v3\", input_params\n                )\n                return output\n\n        except Exception as e:\n            raise RuntimeError(f\"Failed to generate image: {str(e)}\")\n\n    def _style_to_prompt_prefix(self, style: ImageStyle) -> str:\n        \"\"\"\n        Convert a style enum to a prompt prefix for models without native style support.\n        \"\"\"\n        if style == ImageStyle.ANY:\n            return \"\"\n\n        style_map = {\n            ImageStyle.REALISTIC: \"photorealistic\",\n            ImageStyle.REALISTIC_BW: \"black and white photograph\",\n            ImageStyle.REALISTIC_HDR: \"HDR photograph\",\n            ImageStyle.REALISTIC_NATURAL: \"natural light photograph\",\n            ImageStyle.REALISTIC_STUDIO: \"studio portrait photograph\",\n            ImageStyle.REALISTIC_ENTERPRISE: \"enterprise photograph\",\n            ImageStyle.REALISTIC_HARD_FLASH: \"hard flash photograph\",\n            ImageStyle.REALISTIC_MOTION_BLUR: \"motion blur photograph\",\n            ImageStyle.DIGITAL_ART: \"digital art\",\n            ImageStyle.PIXEL_ART: \"pixel art\",\n            ImageStyle.HAND_DRAWN: \"hand drawn illustration\",\n            ImageStyle.GRAIN: \"grainy digital illustration\",\n            ImageStyle.SKETCH: \"sketchy illustration\",\n            ImageStyle.POSTER: \"2D art poster\",\n            ImageStyle.POSTER_2: \"alternate 2D art poster\",\n            ImageStyle.HANDMADE_3D: \"handmade 3D illustration\",\n            ImageStyle.HAND_DRAWN_OUTLINE: \"hand drawn outline illustration\",\n            ImageStyle.ENGRAVING_COLOR: \"color engraving illustration\",\n        }\n\n        style_text = style_map.get(style, \"\")\n        return f\"{style_text} of\" if style_text else \"\"\n\n    def run(self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs):\n        try:\n            url = self.generate_image(input_data, credentials)\n            if url:\n                yield \"image_url\", url\n            else:\n                yield \"error\", \"Image generation returned an empty result.\"\n        except Exception as e:\n            # Capture and return only the message of the exception, avoiding serialization of non-serializable objects\n            yield \"error\", str(e)",
      "children": [
        {
          "value": "AIImageGeneratorBlock",
          "children": []
        },
        {
          "value": "(Block)",
          "children": [
            {
              "value": "Block",
              "children": []
            }
          ]
        },
        {
          "value": "class Input(BlockSchema):\n        credentials: CredentialsMetaInput[\n            Literal[ProviderName.REPLICATE], Literal[\"api_key\"]\n        ] = CredentialsField(\n            description=\"Enter your Replicate API key to access the image generation API. You can obtain an API key from https://replicate.com/account/api-tokens.\",\n        )\n        prompt: str = SchemaField(\n            description=\"Text prompt for image generation\",\n            placeholder=\"e.g., 'A red panda using a laptop in a snowy forest'\",\n            title=\"Prompt\",\n        )\n        model: ImageGenModel = SchemaField(\n            description=\"The AI model to use for image generation\",\n            default=ImageGenModel.SD3_5,\n            title=\"Model\",\n        )\n        size: ImageSize = SchemaField(\n            description=(\n                \"Format of the generated image:\\n\"\n                \"- Square: Perfect for profile pictures, icons\\n\"\n                \"- Landscape: Traditional photo format\\n\"\n                \"- Portrait: Vertical photos, portraits\\n\"\n                \"- Wide: Cinematic format, desktop wallpapers\\n\"\n                \"- Tall: Mobile wallpapers, social media stories\"\n            ),\n            default=ImageSize.SQUARE,\n            title=\"Image Format\",\n        )\n        style: ImageStyle = SchemaField(\n            description=\"Visual style for the generated image\",\n            default=ImageStyle.ANY,\n            title=\"Image Style\",\n        )\n\n    class Output(BlockSchema):\n        image_url: str = SchemaField(description=\"URL of the generated image\")\n        error: str = SchemaField(description=\"Error message if generation failed\")\n\n    def __init__(self):\n        super().__init__(\n            id=\"ed1ae7a0-b770-4089-b520-1f0005fad19a\",\n            description=\"Generate images using various AI models through a unified interface\",\n            categories={BlockCategory.AI},\n            input_schema=AIImageGeneratorBlock.Input,\n            output_schema=AIImageGeneratorBlock.Output,\n            test_input={\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n                \"prompt\": \"An octopus using a laptop in a snowy forest with 'AutoGPT' clearly visible on the screen\",\n                \"model\": ImageGenModel.RECRAFT,\n                \"size\": ImageSize.SQUARE,\n                \"style\": ImageStyle.REALISTIC,\n            },\n            test_credentials=TEST_CREDENTIALS,\n            test_output=[\n                (\n                    \"image_url\",\n                    \"https://replicate.delivery/generated-image.webp\",\n                ),\n            ],\n            test_mock={\n                \"_run_client\": lambda *args, **kwargs: \"https://replicate.delivery/generated-image.webp\"\n            },\n        )\n\n    def _run_client(\n        self, credentials: APIKeyCredentials, model_name: str, input_params: dict\n    ):\n        try:\n            # Initialize Replicate client\n            client = replicate.Client(api_token=credentials.api_key.get_secret_value())\n\n            # Run the model with input parameters\n            output = client.run(model_name, input=input_params, wait=False)\n\n            # Process output\n            if isinstance(output, list) and len(output) > 0:\n                if isinstance(output[0], FileOutput):\n                    result_url = output[0].url\n                else:\n                    result_url = output[0]\n            elif isinstance(output, FileOutput):\n                result_url = output.url\n            elif isinstance(output, str):\n                result_url = output\n            else:\n                result_url = None\n\n            return result_url\n\n        except TypeError as e:\n            raise TypeError(f\"Error during model execution: {e}\")\n        except Exception as e:\n            raise RuntimeError(f\"Unexpected error during model execution: {e}\")\n\n    def generate_image(self, input_data: Input, credentials: APIKeyCredentials):\n        try:\n            # Handle style-based prompt modification for models without native style support\n            modified_prompt = input_data.prompt\n            if input_data.model not in [ImageGenModel.RECRAFT]:\n                style_prefix = self._style_to_prompt_prefix(input_data.style)\n                modified_prompt = f\"{style_prefix} {modified_prompt}\".strip()\n\n            if input_data.model == ImageGenModel.SD3_5:\n                # Use Stable Diffusion 3.5 with aspect ratio\n                input_params = {\n                    \"prompt\": modified_prompt,\n                    \"aspect_ratio\": SIZE_TO_SD_RATIO[input_data.size],\n                    \"output_format\": \"webp\",\n                    \"output_quality\": 90,\n                    \"steps\": 40,\n                    \"cfg_scale\": 7.0,\n                }\n                output = self._run_client(\n                    credentials,\n                    \"stability-ai/stable-diffusion-3.5-medium\",\n                    input_params,\n                )\n                return output\n\n            elif input_data.model == ImageGenModel.FLUX:\n                # Use Flux-specific dimensions with 'jpg' format to avoid ReplicateError\n                width, height = SIZE_TO_FLUX_DIMENSIONS[input_data.size]\n                input_params = {\n                    \"prompt\": modified_prompt,\n                    \"width\": width,\n                    \"height\": height,\n                    \"aspect_ratio\": SIZE_TO_FLUX_RATIO[input_data.size],\n                    \"output_format\": \"jpg\",  # Set to jpg for Flux models\n                    \"output_quality\": 90,\n                }\n                output = self._run_client(\n                    credentials, \"black-forest-labs/flux-1.1-pro\", input_params\n                )\n                return output\n\n            elif input_data.model == ImageGenModel.FLUX_ULTRA:\n                width, height = SIZE_TO_FLUX_DIMENSIONS[input_data.size]\n                input_params = {\n                    \"prompt\": modified_prompt,\n                    \"width\": width,\n                    \"height\": height,\n                    \"aspect_ratio\": SIZE_TO_FLUX_RATIO[input_data.size],\n                    \"output_format\": \"jpg\",\n                    \"output_quality\": 90,\n                }\n                output = self._run_client(\n                    credentials, \"black-forest-labs/flux-1.1-pro-ultra\", input_params\n                )\n                return output\n\n            elif input_data.model == ImageGenModel.RECRAFT:\n                input_params = {\n                    \"prompt\": input_data.prompt,\n                    \"size\": SIZE_TO_RECRAFT_DIMENSIONS[input_data.size],\n                    \"style\": input_data.style.value,\n                }\n                output = self._run_client(\n                    credentials, \"recraft-ai/recraft-v3\", input_params\n                )\n                return output\n\n        except Exception as e:\n            raise RuntimeError(f\"Failed to generate image: {str(e)}\")\n\n    def _style_to_prompt_prefix(self, style: ImageStyle) -> str:\n        \"\"\"\n        Convert a style enum to a prompt prefix for models without native style support.\n        \"\"\"\n        if style == ImageStyle.ANY:\n            return \"\"\n\n        style_map = {\n            ImageStyle.REALISTIC: \"photorealistic\",\n            ImageStyle.REALISTIC_BW: \"black and white photograph\",\n            ImageStyle.REALISTIC_HDR: \"HDR photograph\",\n            ImageStyle.REALISTIC_NATURAL: \"natural light photograph\",\n            ImageStyle.REALISTIC_STUDIO: \"studio portrait photograph\",\n            ImageStyle.REALISTIC_ENTERPRISE: \"enterprise photograph\",\n            ImageStyle.REALISTIC_HARD_FLASH: \"hard flash photograph\",\n            ImageStyle.REALISTIC_MOTION_BLUR: \"motion blur photograph\",\n            ImageStyle.DIGITAL_ART: \"digital art\",\n            ImageStyle.PIXEL_ART: \"pixel art\",\n            ImageStyle.HAND_DRAWN: \"hand drawn illustration\",\n            ImageStyle.GRAIN: \"grainy digital illustration\",\n            ImageStyle.SKETCH: \"sketchy illustration\",\n            ImageStyle.POSTER: \"2D art poster\",\n            ImageStyle.POSTER_2: \"alternate 2D art poster\",\n            ImageStyle.HANDMADE_3D: \"handmade 3D illustration\",\n            ImageStyle.HAND_DRAWN_OUTLINE: \"hand drawn outline illustration\",\n            ImageStyle.ENGRAVING_COLOR: \"color engraving illustration\",\n        }\n\n        style_text = style_map.get(style, \"\")\n        return f\"{style_text} of\" if style_text else \"\"\n\n    def run(self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs):\n        try:\n            url = self.generate_image(input_data, credentials)\n            if url:\n                yield \"image_url\", url\n            else:\n                yield \"error\", \"Image generation returned an empty result.\"\n        except Exception as e:\n            # Capture and return only the message of the exception, avoiding serialization of non-serializable objects\n            yield \"error\", str(e)",
          "children": [
            {
              "value": "class Input(BlockSchema):\n        credentials: CredentialsMetaInput[\n            Literal[ProviderName.REPLICATE], Literal[\"api_key\"]\n        ] = CredentialsField(\n            description=\"Enter your Replicate API key to access the image generation API. You can obtain an API key from https://replicate.com/account/api-tokens.\",\n        )\n        prompt: str = SchemaField(\n            description=\"Text prompt for image generation\",\n            placeholder=\"e.g., 'A red panda using a laptop in a snowy forest'\",\n            title=\"Prompt\",\n        )\n        model: ImageGenModel = SchemaField(\n            description=\"The AI model to use for image generation\",\n            default=ImageGenModel.SD3_5,\n            title=\"Model\",\n        )\n        size: ImageSize = SchemaField(\n            description=(\n                \"Format of the generated image:\\n\"\n                \"- Square: Perfect for profile pictures, icons\\n\"\n                \"- Landscape: Traditional photo format\\n\"\n                \"- Portrait: Vertical photos, portraits\\n\"\n                \"- Wide: Cinematic format, desktop wallpapers\\n\"\n                \"- Tall: Mobile wallpapers, social media stories\"\n            ),\n            default=ImageSize.SQUARE,\n            title=\"Image Format\",\n        )\n        style: ImageStyle = SchemaField(\n            description=\"Visual style for the generated image\",\n            default=ImageStyle.ANY,\n            title=\"Image Style\",\n        )",
              "children": [
                {
                  "value": "Input",
                  "children": []
                },
                {
                  "value": "(BlockSchema)",
                  "children": [
                    {
                      "value": "BlockSchema",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "credentials: CredentialsMetaInput[\n            Literal[ProviderName.REPLICATE], Literal[\"api_key\"]\n        ] = CredentialsField(\n            description=\"Enter your Replicate API key to access the image generation API. You can obtain an API key from https://replicate.com/account/api-tokens.\",\n        )\n        prompt: str = SchemaField(\n            description=\"Text prompt for image generation\",\n            placeholder=\"e.g., 'A red panda using a laptop in a snowy forest'\",\n            title=\"Prompt\",\n        )\n        model: ImageGenModel = SchemaField(\n            description=\"The AI model to use for image generation\",\n            default=ImageGenModel.SD3_5,\n            title=\"Model\",\n        )\n        size: ImageSize = SchemaField(\n            description=(\n                \"Format of the generated image:\\n\"\n                \"- Square: Perfect for profile pictures, icons\\n\"\n                \"- Landscape: Traditional photo format\\n\"\n                \"- Portrait: Vertical photos, portraits\\n\"\n                \"- Wide: Cinematic format, desktop wallpapers\\n\"\n                \"- Tall: Mobile wallpapers, social media stories\"\n            ),\n            default=ImageSize.SQUARE,\n            title=\"Image Format\",\n        )\n        style: ImageStyle = SchemaField(\n            description=\"Visual style for the generated image\",\n            default=ImageStyle.ANY,\n            title=\"Image Style\",\n        )",
                  "children": [
                    {
                      "value": "credentials: CredentialsMetaInput[\n            Literal[ProviderName.REPLICATE], Literal[\"api_key\"]\n        ] = CredentialsField(\n            description=\"Enter your Replicate API key to access the image generation API. You can obtain an API key from https://replicate.com/account/api-tokens.\",\n        )",
                      "children": [
                        {
                          "value": "credentials: CredentialsMetaInput[\n            Literal[ProviderName.REPLICATE], Literal[\"api_key\"]\n        ] = CredentialsField(\n            description=\"Enter your Replicate API key to access the image generation API. You can obtain an API key from https://replicate.com/account/api-tokens.\",\n        )",
                          "children": [
                            {
                              "value": "credentials",
                              "children": []
                            },
                            {
                              "value": "CredentialsMetaInput[\n            Literal[ProviderName.REPLICATE], Literal[\"api_key\"]\n        ]",
                              "children": [
                                {
                                  "value": "CredentialsMetaInput[\n            Literal[ProviderName.REPLICATE], Literal[\"api_key\"]\n        ]",
                                  "children": [
                                    {
                                      "value": "CredentialsMetaInput",
                                      "children": []
                                    },
                                    {
                                      "value": "[\n            Literal[ProviderName.REPLICATE], Literal[\"api_key\"]\n        ]",
                                      "children": [
                                        {
                                          "value": "Literal[ProviderName.REPLICATE]",
                                          "children": [
                                            {
                                              "value": "Literal[ProviderName.REPLICATE]",
                                              "children": [
                                                {
                                                  "value": "Literal",
                                                  "children": []
                                                },
                                                {
                                                  "value": "[ProviderName.REPLICATE]",
                                                  "children": [
                                                    {
                                                      "value": "ProviderName.REPLICATE",
                                                      "children": [
                                                        {
                                                          "value": "ProviderName.REPLICATE",
                                                          "children": [
                                                            {
                                                              "value": "ProviderName",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "REPLICATE",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "Literal[\"api_key\"]",
                                          "children": [
                                            {
                                              "value": "Literal[\"api_key\"]",
                                              "children": [
                                                {
                                                  "value": "Literal",
                                                  "children": []
                                                },
                                                {
                                                  "value": "[\"api_key\"]",
                                                  "children": [
                                                    {
                                                      "value": "\"api_key\"",
                                                      "children": [
                                                        {
                                                          "value": "\"api_key\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "api_key",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "CredentialsField(\n            description=\"Enter your Replicate API key to access the image generation API. You can obtain an API key from https://replicate.com/account/api-tokens.\",\n        )",
                              "children": [
                                {
                                  "value": "CredentialsField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=\"Enter your Replicate API key to access the image generation API. You can obtain an API key from https://replicate.com/account/api-tokens.\",\n        )",
                                  "children": [
                                    {
                                      "value": "description=\"Enter your Replicate API key to access the image generation API. You can obtain an API key from https://replicate.com/account/api-tokens.\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Enter your Replicate API key to access the image generation API. You can obtain an API key from https://replicate.com/account/api-tokens.\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Enter your Replicate API key to access the image generation API. You can obtain an API key from https://replicate.com/account/api-tokens.",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "prompt: str = SchemaField(\n            description=\"Text prompt for image generation\",\n            placeholder=\"e.g., 'A red panda using a laptop in a snowy forest'\",\n            title=\"Prompt\",\n        )",
                      "children": [
                        {
                          "value": "prompt: str = SchemaField(\n            description=\"Text prompt for image generation\",\n            placeholder=\"e.g., 'A red panda using a laptop in a snowy forest'\",\n            title=\"Prompt\",\n        )",
                          "children": [
                            {
                              "value": "prompt",
                              "children": []
                            },
                            {
                              "value": "str",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            description=\"Text prompt for image generation\",\n            placeholder=\"e.g., 'A red panda using a laptop in a snowy forest'\",\n            title=\"Prompt\",\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=\"Text prompt for image generation\",\n            placeholder=\"e.g., 'A red panda using a laptop in a snowy forest'\",\n            title=\"Prompt\",\n        )",
                                  "children": [
                                    {
                                      "value": "description=\"Text prompt for image generation\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Text prompt for image generation\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Text prompt for image generation",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "placeholder=\"e.g., 'A red panda using a laptop in a snowy forest'\"",
                                      "children": [
                                        {
                                          "value": "placeholder",
                                          "children": []
                                        },
                                        {
                                          "value": "\"e.g., 'A red panda using a laptop in a snowy forest'\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "e.g., 'A red panda using a laptop in a snowy forest'",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "title=\"Prompt\"",
                                      "children": [
                                        {
                                          "value": "title",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Prompt\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Prompt",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "model: ImageGenModel = SchemaField(\n            description=\"The AI model to use for image generation\",\n            default=ImageGenModel.SD3_5,\n            title=\"Model\",\n        )",
                      "children": [
                        {
                          "value": "model: ImageGenModel = SchemaField(\n            description=\"The AI model to use for image generation\",\n            default=ImageGenModel.SD3_5,\n            title=\"Model\",\n        )",
                          "children": [
                            {
                              "value": "model",
                              "children": []
                            },
                            {
                              "value": "ImageGenModel",
                              "children": [
                                {
                                  "value": "ImageGenModel",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            description=\"The AI model to use for image generation\",\n            default=ImageGenModel.SD3_5,\n            title=\"Model\",\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=\"The AI model to use for image generation\",\n            default=ImageGenModel.SD3_5,\n            title=\"Model\",\n        )",
                                  "children": [
                                    {
                                      "value": "description=\"The AI model to use for image generation\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"The AI model to use for image generation\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "The AI model to use for image generation",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "default=ImageGenModel.SD3_5",
                                      "children": [
                                        {
                                          "value": "default",
                                          "children": []
                                        },
                                        {
                                          "value": "ImageGenModel.SD3_5",
                                          "children": [
                                            {
                                              "value": "ImageGenModel",
                                              "children": []
                                            },
                                            {
                                              "value": "SD3_5",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "title=\"Model\"",
                                      "children": [
                                        {
                                          "value": "title",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Model\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Model",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "size: ImageSize = SchemaField(\n            description=(\n                \"Format of the generated image:\\n\"\n                \"- Square: Perfect for profile pictures, icons\\n\"\n                \"- Landscape: Traditional photo format\\n\"\n                \"- Portrait: Vertical photos, portraits\\n\"\n                \"- Wide: Cinematic format, desktop wallpapers\\n\"\n                \"- Tall: Mobile wallpapers, social media stories\"\n            ),\n            default=ImageSize.SQUARE,\n            title=\"Image Format\",\n        )",
                      "children": [
                        {
                          "value": "size: ImageSize = SchemaField(\n            description=(\n                \"Format of the generated image:\\n\"\n                \"- Square: Perfect for profile pictures, icons\\n\"\n                \"- Landscape: Traditional photo format\\n\"\n                \"- Portrait: Vertical photos, portraits\\n\"\n                \"- Wide: Cinematic format, desktop wallpapers\\n\"\n                \"- Tall: Mobile wallpapers, social media stories\"\n            ),\n            default=ImageSize.SQUARE,\n            title=\"Image Format\",\n        )",
                          "children": [
                            {
                              "value": "size",
                              "children": []
                            },
                            {
                              "value": "ImageSize",
                              "children": [
                                {
                                  "value": "ImageSize",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            description=(\n                \"Format of the generated image:\\n\"\n                \"- Square: Perfect for profile pictures, icons\\n\"\n                \"- Landscape: Traditional photo format\\n\"\n                \"- Portrait: Vertical photos, portraits\\n\"\n                \"- Wide: Cinematic format, desktop wallpapers\\n\"\n                \"- Tall: Mobile wallpapers, social media stories\"\n            ),\n            default=ImageSize.SQUARE,\n            title=\"Image Format\",\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=(\n                \"Format of the generated image:\\n\"\n                \"- Square: Perfect for profile pictures, icons\\n\"\n                \"- Landscape: Traditional photo format\\n\"\n                \"- Portrait: Vertical photos, portraits\\n\"\n                \"- Wide: Cinematic format, desktop wallpapers\\n\"\n                \"- Tall: Mobile wallpapers, social media stories\"\n            ),\n            default=ImageSize.SQUARE,\n            title=\"Image Format\",\n        )",
                                  "children": [
                                    {
                                      "value": "description=(\n                \"Format of the generated image:\\n\"\n                \"- Square: Perfect for profile pictures, icons\\n\"\n                \"- Landscape: Traditional photo format\\n\"\n                \"- Portrait: Vertical photos, portraits\\n\"\n                \"- Wide: Cinematic format, desktop wallpapers\\n\"\n                \"- Tall: Mobile wallpapers, social media stories\"\n            )",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "(\n                \"Format of the generated image:\\n\"\n                \"- Square: Perfect for profile pictures, icons\\n\"\n                \"- Landscape: Traditional photo format\\n\"\n                \"- Portrait: Vertical photos, portraits\\n\"\n                \"- Wide: Cinematic format, desktop wallpapers\\n\"\n                \"- Tall: Mobile wallpapers, social media stories\"\n            )",
                                          "children": [
                                            {
                                              "value": "\"Format of the generated image:\\n\"\n                \"- Square: Perfect for profile pictures, icons\\n\"\n                \"- Landscape: Traditional photo format\\n\"\n                \"- Portrait: Vertical photos, portraits\\n\"\n                \"- Wide: Cinematic format, desktop wallpapers\\n\"\n                \"- Tall: Mobile wallpapers, social media stories\"",
                                              "children": [
                                                {
                                                  "value": "\"Format of the generated image:\\n\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "Format of the generated image:\\n",
                                                      "children": [
                                                        {
                                                          "value": "\\n",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"- Square: Perfect for profile pictures, icons\\n\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "- Square: Perfect for profile pictures, icons\\n",
                                                      "children": [
                                                        {
                                                          "value": "\\n",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"- Landscape: Traditional photo format\\n\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "- Landscape: Traditional photo format\\n",
                                                      "children": [
                                                        {
                                                          "value": "\\n",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"- Portrait: Vertical photos, portraits\\n\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "- Portrait: Vertical photos, portraits\\n",
                                                      "children": [
                                                        {
                                                          "value": "\\n",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"- Wide: Cinematic format, desktop wallpapers\\n\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "- Wide: Cinematic format, desktop wallpapers\\n",
                                                      "children": [
                                                        {
                                                          "value": "\\n",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"- Tall: Mobile wallpapers, social media stories\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "- Tall: Mobile wallpapers, social media stories",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "default=ImageSize.SQUARE",
                                      "children": [
                                        {
                                          "value": "default",
                                          "children": []
                                        },
                                        {
                                          "value": "ImageSize.SQUARE",
                                          "children": [
                                            {
                                              "value": "ImageSize",
                                              "children": []
                                            },
                                            {
                                              "value": "SQUARE",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "title=\"Image Format\"",
                                      "children": [
                                        {
                                          "value": "title",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Image Format\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Image Format",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "style: ImageStyle = SchemaField(\n            description=\"Visual style for the generated image\",\n            default=ImageStyle.ANY,\n            title=\"Image Style\",\n        )",
                      "children": [
                        {
                          "value": "style: ImageStyle = SchemaField(\n            description=\"Visual style for the generated image\",\n            default=ImageStyle.ANY,\n            title=\"Image Style\",\n        )",
                          "children": [
                            {
                              "value": "style",
                              "children": []
                            },
                            {
                              "value": "ImageStyle",
                              "children": [
                                {
                                  "value": "ImageStyle",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(\n            description=\"Visual style for the generated image\",\n            default=ImageStyle.ANY,\n            title=\"Image Style\",\n        )",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(\n            description=\"Visual style for the generated image\",\n            default=ImageStyle.ANY,\n            title=\"Image Style\",\n        )",
                                  "children": [
                                    {
                                      "value": "description=\"Visual style for the generated image\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Visual style for the generated image\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Visual style for the generated image",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "default=ImageStyle.ANY",
                                      "children": [
                                        {
                                          "value": "default",
                                          "children": []
                                        },
                                        {
                                          "value": "ImageStyle.ANY",
                                          "children": [
                                            {
                                              "value": "ImageStyle",
                                              "children": []
                                            },
                                            {
                                              "value": "ANY",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "title=\"Image Style\"",
                                      "children": [
                                        {
                                          "value": "title",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Image Style\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Image Style",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "class Output(BlockSchema):\n        image_url: str = SchemaField(description=\"URL of the generated image\")\n        error: str = SchemaField(description=\"Error message if generation failed\")",
              "children": [
                {
                  "value": "Output",
                  "children": []
                },
                {
                  "value": "(BlockSchema)",
                  "children": [
                    {
                      "value": "BlockSchema",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "image_url: str = SchemaField(description=\"URL of the generated image\")\n        error: str = SchemaField(description=\"Error message if generation failed\")",
                  "children": [
                    {
                      "value": "image_url: str = SchemaField(description=\"URL of the generated image\")",
                      "children": [
                        {
                          "value": "image_url: str = SchemaField(description=\"URL of the generated image\")",
                          "children": [
                            {
                              "value": "image_url",
                              "children": []
                            },
                            {
                              "value": "str",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(description=\"URL of the generated image\")",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(description=\"URL of the generated image\")",
                                  "children": [
                                    {
                                      "value": "description=\"URL of the generated image\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"URL of the generated image\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "URL of the generated image",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "error: str = SchemaField(description=\"Error message if generation failed\")",
                      "children": [
                        {
                          "value": "error: str = SchemaField(description=\"Error message if generation failed\")",
                          "children": [
                            {
                              "value": "error",
                              "children": []
                            },
                            {
                              "value": "str",
                              "children": [
                                {
                                  "value": "str",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "SchemaField(description=\"Error message if generation failed\")",
                              "children": [
                                {
                                  "value": "SchemaField",
                                  "children": []
                                },
                                {
                                  "value": "(description=\"Error message if generation failed\")",
                                  "children": [
                                    {
                                      "value": "description=\"Error message if generation failed\"",
                                      "children": [
                                        {
                                          "value": "description",
                                          "children": []
                                        },
                                        {
                                          "value": "\"Error message if generation failed\"",
                                          "children": [
                                            {
                                              "value": "\"",
                                              "children": []
                                            },
                                            {
                                              "value": "Error message if generation failed",
                                              "children": []
                                            },
                                            {
                                              "value": "\"",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def __init__(self):\n        super().__init__(\n            id=\"ed1ae7a0-b770-4089-b520-1f0005fad19a\",\n            description=\"Generate images using various AI models through a unified interface\",\n            categories={BlockCategory.AI},\n            input_schema=AIImageGeneratorBlock.Input,\n            output_schema=AIImageGeneratorBlock.Output,\n            test_input={\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n                \"prompt\": \"An octopus using a laptop in a snowy forest with 'AutoGPT' clearly visible on the screen\",\n                \"model\": ImageGenModel.RECRAFT,\n                \"size\": ImageSize.SQUARE,\n                \"style\": ImageStyle.REALISTIC,\n            },\n            test_credentials=TEST_CREDENTIALS,\n            test_output=[\n                (\n                    \"image_url\",\n                    \"https://replicate.delivery/generated-image.webp\",\n                ),\n            ],\n            test_mock={\n                \"_run_client\": lambda *args, **kwargs: \"https://replicate.delivery/generated-image.webp\"\n            },\n        )",
              "children": [
                {
                  "value": "__init__",
                  "children": []
                },
                {
                  "value": "(self)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "super().__init__(\n            id=\"ed1ae7a0-b770-4089-b520-1f0005fad19a\",\n            description=\"Generate images using various AI models through a unified interface\",\n            categories={BlockCategory.AI},\n            input_schema=AIImageGeneratorBlock.Input,\n            output_schema=AIImageGeneratorBlock.Output,\n            test_input={\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n                \"prompt\": \"An octopus using a laptop in a snowy forest with 'AutoGPT' clearly visible on the screen\",\n                \"model\": ImageGenModel.RECRAFT,\n                \"size\": ImageSize.SQUARE,\n                \"style\": ImageStyle.REALISTIC,\n            },\n            test_credentials=TEST_CREDENTIALS,\n            test_output=[\n                (\n                    \"image_url\",\n                    \"https://replicate.delivery/generated-image.webp\",\n                ),\n            ],\n            test_mock={\n                \"_run_client\": lambda *args, **kwargs: \"https://replicate.delivery/generated-image.webp\"\n            },\n        )",
                  "children": [
                    {
                      "value": "super().__init__(\n            id=\"ed1ae7a0-b770-4089-b520-1f0005fad19a\",\n            description=\"Generate images using various AI models through a unified interface\",\n            categories={BlockCategory.AI},\n            input_schema=AIImageGeneratorBlock.Input,\n            output_schema=AIImageGeneratorBlock.Output,\n            test_input={\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n                \"prompt\": \"An octopus using a laptop in a snowy forest with 'AutoGPT' clearly visible on the screen\",\n                \"model\": ImageGenModel.RECRAFT,\n                \"size\": ImageSize.SQUARE,\n                \"style\": ImageStyle.REALISTIC,\n            },\n            test_credentials=TEST_CREDENTIALS,\n            test_output=[\n                (\n                    \"image_url\",\n                    \"https://replicate.delivery/generated-image.webp\",\n                ),\n            ],\n            test_mock={\n                \"_run_client\": lambda *args, **kwargs: \"https://replicate.delivery/generated-image.webp\"\n            },\n        )",
                      "children": [
                        {
                          "value": "super().__init__(\n            id=\"ed1ae7a0-b770-4089-b520-1f0005fad19a\",\n            description=\"Generate images using various AI models through a unified interface\",\n            categories={BlockCategory.AI},\n            input_schema=AIImageGeneratorBlock.Input,\n            output_schema=AIImageGeneratorBlock.Output,\n            test_input={\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n                \"prompt\": \"An octopus using a laptop in a snowy forest with 'AutoGPT' clearly visible on the screen\",\n                \"model\": ImageGenModel.RECRAFT,\n                \"size\": ImageSize.SQUARE,\n                \"style\": ImageStyle.REALISTIC,\n            },\n            test_credentials=TEST_CREDENTIALS,\n            test_output=[\n                (\n                    \"image_url\",\n                    \"https://replicate.delivery/generated-image.webp\",\n                ),\n            ],\n            test_mock={\n                \"_run_client\": lambda *args, **kwargs: \"https://replicate.delivery/generated-image.webp\"\n            },\n        )",
                          "children": [
                            {
                              "value": "super().__init__",
                              "children": [
                                {
                                  "value": "super()",
                                  "children": [
                                    {
                                      "value": "super",
                                      "children": []
                                    },
                                    {
                                      "value": "()",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "__init__",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "(\n            id=\"ed1ae7a0-b770-4089-b520-1f0005fad19a\",\n            description=\"Generate images using various AI models through a unified interface\",\n            categories={BlockCategory.AI},\n            input_schema=AIImageGeneratorBlock.Input,\n            output_schema=AIImageGeneratorBlock.Output,\n            test_input={\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n                \"prompt\": \"An octopus using a laptop in a snowy forest with 'AutoGPT' clearly visible on the screen\",\n                \"model\": ImageGenModel.RECRAFT,\n                \"size\": ImageSize.SQUARE,\n                \"style\": ImageStyle.REALISTIC,\n            },\n            test_credentials=TEST_CREDENTIALS,\n            test_output=[\n                (\n                    \"image_url\",\n                    \"https://replicate.delivery/generated-image.webp\",\n                ),\n            ],\n            test_mock={\n                \"_run_client\": lambda *args, **kwargs: \"https://replicate.delivery/generated-image.webp\"\n            },\n        )",
                              "children": [
                                {
                                  "value": "id=\"ed1ae7a0-b770-4089-b520-1f0005fad19a\"",
                                  "children": [
                                    {
                                      "value": "id",
                                      "children": []
                                    },
                                    {
                                      "value": "\"ed1ae7a0-b770-4089-b520-1f0005fad19a\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "ed1ae7a0-b770-4089-b520-1f0005fad19a",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "description=\"Generate images using various AI models through a unified interface\"",
                                  "children": [
                                    {
                                      "value": "description",
                                      "children": []
                                    },
                                    {
                                      "value": "\"Generate images using various AI models through a unified interface\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "Generate images using various AI models through a unified interface",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "categories={BlockCategory.AI}",
                                  "children": [
                                    {
                                      "value": "categories",
                                      "children": []
                                    },
                                    {
                                      "value": "{BlockCategory.AI}",
                                      "children": [
                                        {
                                          "value": "BlockCategory.AI",
                                          "children": [
                                            {
                                              "value": "BlockCategory",
                                              "children": []
                                            },
                                            {
                                              "value": "AI",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "input_schema=AIImageGeneratorBlock.Input",
                                  "children": [
                                    {
                                      "value": "input_schema",
                                      "children": []
                                    },
                                    {
                                      "value": "AIImageGeneratorBlock.Input",
                                      "children": [
                                        {
                                          "value": "AIImageGeneratorBlock",
                                          "children": []
                                        },
                                        {
                                          "value": "Input",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "output_schema=AIImageGeneratorBlock.Output",
                                  "children": [
                                    {
                                      "value": "output_schema",
                                      "children": []
                                    },
                                    {
                                      "value": "AIImageGeneratorBlock.Output",
                                      "children": [
                                        {
                                          "value": "AIImageGeneratorBlock",
                                          "children": []
                                        },
                                        {
                                          "value": "Output",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "test_input={\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n                \"prompt\": \"An octopus using a laptop in a snowy forest with 'AutoGPT' clearly visible on the screen\",\n                \"model\": ImageGenModel.RECRAFT,\n                \"size\": ImageSize.SQUARE,\n                \"style\": ImageStyle.REALISTIC,\n            }",
                                  "children": [
                                    {
                                      "value": "test_input",
                                      "children": []
                                    },
                                    {
                                      "value": "{\n                \"credentials\": TEST_CREDENTIALS_INPUT,\n                \"prompt\": \"An octopus using a laptop in a snowy forest with 'AutoGPT' clearly visible on the screen\",\n                \"model\": ImageGenModel.RECRAFT,\n                \"size\": ImageSize.SQUARE,\n                \"style\": ImageStyle.REALISTIC,\n            }",
                                      "children": [
                                        {
                                          "value": "\"credentials\": TEST_CREDENTIALS_INPUT",
                                          "children": [
                                            {
                                              "value": "\"credentials\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "credentials",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "TEST_CREDENTIALS_INPUT",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"prompt\": \"An octopus using a laptop in a snowy forest with 'AutoGPT' clearly visible on the screen\"",
                                          "children": [
                                            {
                                              "value": "\"prompt\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "prompt",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"An octopus using a laptop in a snowy forest with 'AutoGPT' clearly visible on the screen\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "An octopus using a laptop in a snowy forest with 'AutoGPT' clearly visible on the screen",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"model\": ImageGenModel.RECRAFT",
                                          "children": [
                                            {
                                              "value": "\"model\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "model",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "ImageGenModel.RECRAFT",
                                              "children": [
                                                {
                                                  "value": "ImageGenModel",
                                                  "children": []
                                                },
                                                {
                                                  "value": "RECRAFT",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"size\": ImageSize.SQUARE",
                                          "children": [
                                            {
                                              "value": "\"size\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "size",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "ImageSize.SQUARE",
                                              "children": [
                                                {
                                                  "value": "ImageSize",
                                                  "children": []
                                                },
                                                {
                                                  "value": "SQUARE",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "\"style\": ImageStyle.REALISTIC",
                                          "children": [
                                            {
                                              "value": "\"style\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "style",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "ImageStyle.REALISTIC",
                                              "children": [
                                                {
                                                  "value": "ImageStyle",
                                                  "children": []
                                                },
                                                {
                                                  "value": "REALISTIC",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "test_credentials=TEST_CREDENTIALS",
                                  "children": [
                                    {
                                      "value": "test_credentials",
                                      "children": []
                                    },
                                    {
                                      "value": "TEST_CREDENTIALS",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "test_output=[\n                (\n                    \"image_url\",\n                    \"https://replicate.delivery/generated-image.webp\",\n                ),\n            ]",
                                  "children": [
                                    {
                                      "value": "test_output",
                                      "children": []
                                    },
                                    {
                                      "value": "[\n                (\n                    \"image_url\",\n                    \"https://replicate.delivery/generated-image.webp\",\n                ),\n            ]",
                                      "children": [
                                        {
                                          "value": "(\n                    \"image_url\",\n                    \"https://replicate.delivery/generated-image.webp\",\n                )",
                                          "children": [
                                            {
                                              "value": "\"image_url\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "image_url",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "\"https://replicate.delivery/generated-image.webp\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "https://replicate.delivery/generated-image.webp",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "test_mock={\n                \"_run_client\": lambda *args, **kwargs: \"https://replicate.delivery/generated-image.webp\"\n            }",
                                  "children": [
                                    {
                                      "value": "test_mock",
                                      "children": []
                                    },
                                    {
                                      "value": "{\n                \"_run_client\": lambda *args, **kwargs: \"https://replicate.delivery/generated-image.webp\"\n            }",
                                      "children": [
                                        {
                                          "value": "\"_run_client\": lambda *args, **kwargs: \"https://replicate.delivery/generated-image.webp\"",
                                          "children": [
                                            {
                                              "value": "\"_run_client\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "_run_client",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "lambda *args, **kwargs: \"https://replicate.delivery/generated-image.webp\"",
                                              "children": [
                                                {
                                                  "value": "*args, **kwargs",
                                                  "children": [
                                                    {
                                                      "value": "*args",
                                                      "children": [
                                                        {
                                                          "value": "args",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "**kwargs",
                                                      "children": [
                                                        {
                                                          "value": "kwargs",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"https://replicate.delivery/generated-image.webp\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "https://replicate.delivery/generated-image.webp",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def _run_client(\n        self, credentials: APIKeyCredentials, model_name: str, input_params: dict\n    ):\n        try:\n            # Initialize Replicate client\n            client = replicate.Client(api_token=credentials.api_key.get_secret_value())\n\n            # Run the model with input parameters\n            output = client.run(model_name, input=input_params, wait=False)\n\n            # Process output\n            if isinstance(output, list) and len(output) > 0:\n                if isinstance(output[0], FileOutput):\n                    result_url = output[0].url\n                else:\n                    result_url = output[0]\n            elif isinstance(output, FileOutput):\n                result_url = output.url\n            elif isinstance(output, str):\n                result_url = output\n            else:\n                result_url = None\n\n            return result_url\n\n        except TypeError as e:\n            raise TypeError(f\"Error during model execution: {e}\")\n        except Exception as e:\n            raise RuntimeError(f\"Unexpected error during model execution: {e}\")",
              "children": [
                {
                  "value": "_run_client",
                  "children": []
                },
                {
                  "value": "(\n        self, credentials: APIKeyCredentials, model_name: str, input_params: dict\n    )",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "credentials: APIKeyCredentials",
                      "children": [
                        {
                          "value": "credentials",
                          "children": []
                        },
                        {
                          "value": "APIKeyCredentials",
                          "children": [
                            {
                              "value": "APIKeyCredentials",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "model_name: str",
                      "children": [
                        {
                          "value": "model_name",
                          "children": []
                        },
                        {
                          "value": "str",
                          "children": [
                            {
                              "value": "str",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "input_params: dict",
                      "children": [
                        {
                          "value": "input_params",
                          "children": []
                        },
                        {
                          "value": "dict",
                          "children": [
                            {
                              "value": "dict",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "try:\n            # Initialize Replicate client\n            client = replicate.Client(api_token=credentials.api_key.get_secret_value())\n\n            # Run the model with input parameters\n            output = client.run(model_name, input=input_params, wait=False)\n\n            # Process output\n            if isinstance(output, list) and len(output) > 0:\n                if isinstance(output[0], FileOutput):\n                    result_url = output[0].url\n                else:\n                    result_url = output[0]\n            elif isinstance(output, FileOutput):\n                result_url = output.url\n            elif isinstance(output, str):\n                result_url = output\n            else:\n                result_url = None\n\n            return result_url\n\n        except TypeError as e:\n            raise TypeError(f\"Error during model execution: {e}\")\n        except Exception as e:\n            raise RuntimeError(f\"Unexpected error during model execution: {e}\")",
                  "children": [
                    {
                      "value": "try:\n            # Initialize Replicate client\n            client = replicate.Client(api_token=credentials.api_key.get_secret_value())\n\n            # Run the model with input parameters\n            output = client.run(model_name, input=input_params, wait=False)\n\n            # Process output\n            if isinstance(output, list) and len(output) > 0:\n                if isinstance(output[0], FileOutput):\n                    result_url = output[0].url\n                else:\n                    result_url = output[0]\n            elif isinstance(output, FileOutput):\n                result_url = output.url\n            elif isinstance(output, str):\n                result_url = output\n            else:\n                result_url = None\n\n            return result_url\n\n        except TypeError as e:\n            raise TypeError(f\"Error during model execution: {e}\")\n        except Exception as e:\n            raise RuntimeError(f\"Unexpected error during model execution: {e}\")",
                      "children": [
                        {
                          "value": "# Initialize Replicate client",
                          "children": []
                        },
                        {
                          "value": "client = replicate.Client(api_token=credentials.api_key.get_secret_value())\n\n            # Run the model with input parameters\n            output = client.run(model_name, input=input_params, wait=False)\n\n            # Process output\n            if isinstance(output, list) and len(output) > 0:\n                if isinstance(output[0], FileOutput):\n                    result_url = output[0].url\n                else:\n                    result_url = output[0]\n            elif isinstance(output, FileOutput):\n                result_url = output.url\n            elif isinstance(output, str):\n                result_url = output\n            else:\n                result_url = None\n\n            return result_url",
                          "children": [
                            {
                              "value": "client = replicate.Client(api_token=credentials.api_key.get_secret_value())",
                              "children": [
                                {
                                  "value": "client = replicate.Client(api_token=credentials.api_key.get_secret_value())",
                                  "children": [
                                    {
                                      "value": "client",
                                      "children": []
                                    },
                                    {
                                      "value": "replicate.Client(api_token=credentials.api_key.get_secret_value())",
                                      "children": [
                                        {
                                          "value": "replicate.Client",
                                          "children": [
                                            {
                                              "value": "replicate",
                                              "children": []
                                            },
                                            {
                                              "value": "Client",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(api_token=credentials.api_key.get_secret_value())",
                                          "children": [
                                            {
                                              "value": "api_token=credentials.api_key.get_secret_value()",
                                              "children": [
                                                {
                                                  "value": "api_token",
                                                  "children": []
                                                },
                                                {
                                                  "value": "credentials.api_key.get_secret_value()",
                                                  "children": [
                                                    {
                                                      "value": "credentials.api_key.get_secret_value",
                                                      "children": [
                                                        {
                                                          "value": "credentials.api_key",
                                                          "children": [
                                                            {
                                                              "value": "credentials",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "api_key",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "get_secret_value",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "()",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "# Run the model with input parameters",
                              "children": []
                            },
                            {
                              "value": "output = client.run(model_name, input=input_params, wait=False)",
                              "children": [
                                {
                                  "value": "output = client.run(model_name, input=input_params, wait=False)",
                                  "children": [
                                    {
                                      "value": "output",
                                      "children": []
                                    },
                                    {
                                      "value": "client.run(model_name, input=input_params, wait=False)",
                                      "children": [
                                        {
                                          "value": "client.run",
                                          "children": [
                                            {
                                              "value": "client",
                                              "children": []
                                            },
                                            {
                                              "value": "run",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(model_name, input=input_params, wait=False)",
                                          "children": [
                                            {
                                              "value": "model_name",
                                              "children": []
                                            },
                                            {
                                              "value": "input=input_params",
                                              "children": [
                                                {
                                                  "value": "input",
                                                  "children": []
                                                },
                                                {
                                                  "value": "input_params",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "wait=False",
                                              "children": [
                                                {
                                                  "value": "wait",
                                                  "children": []
                                                },
                                                {
                                                  "value": "False",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "# Process output",
                              "children": []
                            },
                            {
                              "value": "if isinstance(output, list) and len(output) > 0:\n                if isinstance(output[0], FileOutput):\n                    result_url = output[0].url\n                else:\n                    result_url = output[0]\n            elif isinstance(output, FileOutput):\n                result_url = output.url\n            elif isinstance(output, str):\n                result_url = output\n            else:\n                result_url = None",
                              "children": [
                                {
                                  "value": "isinstance(output, list) and len(output) > 0",
                                  "children": [
                                    {
                                      "value": "isinstance(output, list)",
                                      "children": [
                                        {
                                          "value": "isinstance",
                                          "children": []
                                        },
                                        {
                                          "value": "(output, list)",
                                          "children": [
                                            {
                                              "value": "output",
                                              "children": []
                                            },
                                            {
                                              "value": "list",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "len(output) > 0",
                                      "children": [
                                        {
                                          "value": "len(output)",
                                          "children": [
                                            {
                                              "value": "len",
                                              "children": []
                                            },
                                            {
                                              "value": "(output)",
                                              "children": [
                                                {
                                                  "value": "output",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "0",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "if isinstance(output[0], FileOutput):\n                    result_url = output[0].url\n                else:\n                    result_url = output[0]",
                                  "children": [
                                    {
                                      "value": "if isinstance(output[0], FileOutput):\n                    result_url = output[0].url\n                else:\n                    result_url = output[0]",
                                      "children": [
                                        {
                                          "value": "isinstance(output[0], FileOutput)",
                                          "children": [
                                            {
                                              "value": "isinstance",
                                              "children": []
                                            },
                                            {
                                              "value": "(output[0], FileOutput)",
                                              "children": [
                                                {
                                                  "value": "output[0]",
                                                  "children": [
                                                    {
                                                      "value": "output",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "0",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "FileOutput",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "result_url = output[0].url",
                                          "children": [
                                            {
                                              "value": "result_url = output[0].url",
                                              "children": [
                                                {
                                                  "value": "result_url = output[0].url",
                                                  "children": [
                                                    {
                                                      "value": "result_url",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "output[0].url",
                                                      "children": [
                                                        {
                                                          "value": "output[0]",
                                                          "children": [
                                                            {
                                                              "value": "output",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "0",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "url",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "else:\n                    result_url = output[0]",
                                          "children": [
                                            {
                                              "value": "result_url = output[0]",
                                              "children": [
                                                {
                                                  "value": "result_url = output[0]",
                                                  "children": [
                                                    {
                                                      "value": "result_url = output[0]",
                                                      "children": [
                                                        {
                                                          "value": "result_url",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "output[0]",
                                                          "children": [
                                                            {
                                                              "value": "output",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "0",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "elif isinstance(output, FileOutput):\n                result_url = output.url",
                                  "children": [
                                    {
                                      "value": "isinstance(output, FileOutput)",
                                      "children": [
                                        {
                                          "value": "isinstance",
                                          "children": []
                                        },
                                        {
                                          "value": "(output, FileOutput)",
                                          "children": [
                                            {
                                              "value": "output",
                                              "children": []
                                            },
                                            {
                                              "value": "FileOutput",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "result_url = output.url",
                                      "children": [
                                        {
                                          "value": "result_url = output.url",
                                          "children": [
                                            {
                                              "value": "result_url = output.url",
                                              "children": [
                                                {
                                                  "value": "result_url",
                                                  "children": []
                                                },
                                                {
                                                  "value": "output.url",
                                                  "children": [
                                                    {
                                                      "value": "output",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "url",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "elif isinstance(output, str):\n                result_url = output",
                                  "children": [
                                    {
                                      "value": "isinstance(output, str)",
                                      "children": [
                                        {
                                          "value": "isinstance",
                                          "children": []
                                        },
                                        {
                                          "value": "(output, str)",
                                          "children": [
                                            {
                                              "value": "output",
                                              "children": []
                                            },
                                            {
                                              "value": "str",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "result_url = output",
                                      "children": [
                                        {
                                          "value": "result_url = output",
                                          "children": [
                                            {
                                              "value": "result_url = output",
                                              "children": [
                                                {
                                                  "value": "result_url",
                                                  "children": []
                                                },
                                                {
                                                  "value": "output",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "else:\n                result_url = None",
                                  "children": [
                                    {
                                      "value": "result_url = None",
                                      "children": [
                                        {
                                          "value": "result_url = None",
                                          "children": [
                                            {
                                              "value": "result_url = None",
                                              "children": [
                                                {
                                                  "value": "result_url",
                                                  "children": []
                                                },
                                                {
                                                  "value": "None",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "return result_url",
                              "children": [
                                {
                                  "value": "result_url",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "except TypeError as e:\n            raise TypeError(f\"Error during model execution: {e}\")",
                          "children": [
                            {
                              "value": "TypeError as e",
                              "children": [
                                {
                                  "value": "TypeError",
                                  "children": []
                                },
                                {
                                  "value": "e",
                                  "children": [
                                    {
                                      "value": "e",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "raise TypeError(f\"Error during model execution: {e}\")",
                              "children": [
                                {
                                  "value": "raise TypeError(f\"Error during model execution: {e}\")",
                                  "children": [
                                    {
                                      "value": "TypeError(f\"Error during model execution: {e}\")",
                                      "children": [
                                        {
                                          "value": "TypeError",
                                          "children": []
                                        },
                                        {
                                          "value": "(f\"Error during model execution: {e}\")",
                                          "children": [
                                            {
                                              "value": "f\"Error during model execution: {e}\"",
                                              "children": [
                                                {
                                                  "value": "f\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "Error during model execution:",
                                                  "children": []
                                                },
                                                {
                                                  "value": "{e}",
                                                  "children": [
                                                    {
                                                      "value": "e",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "except Exception as e:\n            raise RuntimeError(f\"Unexpected error during model execution: {e}\")",
                          "children": [
                            {
                              "value": "Exception as e",
                              "children": [
                                {
                                  "value": "Exception",
                                  "children": []
                                },
                                {
                                  "value": "e",
                                  "children": [
                                    {
                                      "value": "e",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "raise RuntimeError(f\"Unexpected error during model execution: {e}\")",
                              "children": [
                                {
                                  "value": "raise RuntimeError(f\"Unexpected error during model execution: {e}\")",
                                  "children": [
                                    {
                                      "value": "RuntimeError(f\"Unexpected error during model execution: {e}\")",
                                      "children": [
                                        {
                                          "value": "RuntimeError",
                                          "children": []
                                        },
                                        {
                                          "value": "(f\"Unexpected error during model execution: {e}\")",
                                          "children": [
                                            {
                                              "value": "f\"Unexpected error during model execution: {e}\"",
                                              "children": [
                                                {
                                                  "value": "f\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "Unexpected error during model execution:",
                                                  "children": []
                                                },
                                                {
                                                  "value": "{e}",
                                                  "children": [
                                                    {
                                                      "value": "e",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def generate_image(self, input_data: Input, credentials: APIKeyCredentials):\n        try:\n            # Handle style-based prompt modification for models without native style support\n            modified_prompt = input_data.prompt\n            if input_data.model not in [ImageGenModel.RECRAFT]:\n                style_prefix = self._style_to_prompt_prefix(input_data.style)\n                modified_prompt = f\"{style_prefix} {modified_prompt}\".strip()\n\n            if input_data.model == ImageGenModel.SD3_5:\n                # Use Stable Diffusion 3.5 with aspect ratio\n                input_params = {\n                    \"prompt\": modified_prompt,\n                    \"aspect_ratio\": SIZE_TO_SD_RATIO[input_data.size],\n                    \"output_format\": \"webp\",\n                    \"output_quality\": 90,\n                    \"steps\": 40,\n                    \"cfg_scale\": 7.0,\n                }\n                output = self._run_client(\n                    credentials,\n                    \"stability-ai/stable-diffusion-3.5-medium\",\n                    input_params,\n                )\n                return output\n\n            elif input_data.model == ImageGenModel.FLUX:\n                # Use Flux-specific dimensions with 'jpg' format to avoid ReplicateError\n                width, height = SIZE_TO_FLUX_DIMENSIONS[input_data.size]\n                input_params = {\n                    \"prompt\": modified_prompt,\n                    \"width\": width,\n                    \"height\": height,\n                    \"aspect_ratio\": SIZE_TO_FLUX_RATIO[input_data.size],\n                    \"output_format\": \"jpg\",  # Set to jpg for Flux models\n                    \"output_quality\": 90,\n                }\n                output = self._run_client(\n                    credentials, \"black-forest-labs/flux-1.1-pro\", input_params\n                )\n                return output\n\n            elif input_data.model == ImageGenModel.FLUX_ULTRA:\n                width, height = SIZE_TO_FLUX_DIMENSIONS[input_data.size]\n                input_params = {\n                    \"prompt\": modified_prompt,\n                    \"width\": width,\n                    \"height\": height,\n                    \"aspect_ratio\": SIZE_TO_FLUX_RATIO[input_data.size],\n                    \"output_format\": \"jpg\",\n                    \"output_quality\": 90,\n                }\n                output = self._run_client(\n                    credentials, \"black-forest-labs/flux-1.1-pro-ultra\", input_params\n                )\n                return output\n\n            elif input_data.model == ImageGenModel.RECRAFT:\n                input_params = {\n                    \"prompt\": input_data.prompt,\n                    \"size\": SIZE_TO_RECRAFT_DIMENSIONS[input_data.size],\n                    \"style\": input_data.style.value,\n                }\n                output = self._run_client(\n                    credentials, \"recraft-ai/recraft-v3\", input_params\n                )\n                return output\n\n        except Exception as e:\n            raise RuntimeError(f\"Failed to generate image: {str(e)}\")",
              "children": [
                {
                  "value": "generate_image",
                  "children": []
                },
                {
                  "value": "(self, input_data: Input, credentials: APIKeyCredentials)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "input_data: Input",
                      "children": [
                        {
                          "value": "input_data",
                          "children": []
                        },
                        {
                          "value": "Input",
                          "children": [
                            {
                              "value": "Input",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "credentials: APIKeyCredentials",
                      "children": [
                        {
                          "value": "credentials",
                          "children": []
                        },
                        {
                          "value": "APIKeyCredentials",
                          "children": [
                            {
                              "value": "APIKeyCredentials",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "try:\n            # Handle style-based prompt modification for models without native style support\n            modified_prompt = input_data.prompt\n            if input_data.model not in [ImageGenModel.RECRAFT]:\n                style_prefix = self._style_to_prompt_prefix(input_data.style)\n                modified_prompt = f\"{style_prefix} {modified_prompt}\".strip()\n\n            if input_data.model == ImageGenModel.SD3_5:\n                # Use Stable Diffusion 3.5 with aspect ratio\n                input_params = {\n                    \"prompt\": modified_prompt,\n                    \"aspect_ratio\": SIZE_TO_SD_RATIO[input_data.size],\n                    \"output_format\": \"webp\",\n                    \"output_quality\": 90,\n                    \"steps\": 40,\n                    \"cfg_scale\": 7.0,\n                }\n                output = self._run_client(\n                    credentials,\n                    \"stability-ai/stable-diffusion-3.5-medium\",\n                    input_params,\n                )\n                return output\n\n            elif input_data.model == ImageGenModel.FLUX:\n                # Use Flux-specific dimensions with 'jpg' format to avoid ReplicateError\n                width, height = SIZE_TO_FLUX_DIMENSIONS[input_data.size]\n                input_params = {\n                    \"prompt\": modified_prompt,\n                    \"width\": width,\n                    \"height\": height,\n                    \"aspect_ratio\": SIZE_TO_FLUX_RATIO[input_data.size],\n                    \"output_format\": \"jpg\",  # Set to jpg for Flux models\n                    \"output_quality\": 90,\n                }\n                output = self._run_client(\n                    credentials, \"black-forest-labs/flux-1.1-pro\", input_params\n                )\n                return output\n\n            elif input_data.model == ImageGenModel.FLUX_ULTRA:\n                width, height = SIZE_TO_FLUX_DIMENSIONS[input_data.size]\n                input_params = {\n                    \"prompt\": modified_prompt,\n                    \"width\": width,\n                    \"height\": height,\n                    \"aspect_ratio\": SIZE_TO_FLUX_RATIO[input_data.size],\n                    \"output_format\": \"jpg\",\n                    \"output_quality\": 90,\n                }\n                output = self._run_client(\n                    credentials, \"black-forest-labs/flux-1.1-pro-ultra\", input_params\n                )\n                return output\n\n            elif input_data.model == ImageGenModel.RECRAFT:\n                input_params = {\n                    \"prompt\": input_data.prompt,\n                    \"size\": SIZE_TO_RECRAFT_DIMENSIONS[input_data.size],\n                    \"style\": input_data.style.value,\n                }\n                output = self._run_client(\n                    credentials, \"recraft-ai/recraft-v3\", input_params\n                )\n                return output\n\n        except Exception as e:\n            raise RuntimeError(f\"Failed to generate image: {str(e)}\")",
                  "children": [
                    {
                      "value": "try:\n            # Handle style-based prompt modification for models without native style support\n            modified_prompt = input_data.prompt\n            if input_data.model not in [ImageGenModel.RECRAFT]:\n                style_prefix = self._style_to_prompt_prefix(input_data.style)\n                modified_prompt = f\"{style_prefix} {modified_prompt}\".strip()\n\n            if input_data.model == ImageGenModel.SD3_5:\n                # Use Stable Diffusion 3.5 with aspect ratio\n                input_params = {\n                    \"prompt\": modified_prompt,\n                    \"aspect_ratio\": SIZE_TO_SD_RATIO[input_data.size],\n                    \"output_format\": \"webp\",\n                    \"output_quality\": 90,\n                    \"steps\": 40,\n                    \"cfg_scale\": 7.0,\n                }\n                output = self._run_client(\n                    credentials,\n                    \"stability-ai/stable-diffusion-3.5-medium\",\n                    input_params,\n                )\n                return output\n\n            elif input_data.model == ImageGenModel.FLUX:\n                # Use Flux-specific dimensions with 'jpg' format to avoid ReplicateError\n                width, height = SIZE_TO_FLUX_DIMENSIONS[input_data.size]\n                input_params = {\n                    \"prompt\": modified_prompt,\n                    \"width\": width,\n                    \"height\": height,\n                    \"aspect_ratio\": SIZE_TO_FLUX_RATIO[input_data.size],\n                    \"output_format\": \"jpg\",  # Set to jpg for Flux models\n                    \"output_quality\": 90,\n                }\n                output = self._run_client(\n                    credentials, \"black-forest-labs/flux-1.1-pro\", input_params\n                )\n                return output\n\n            elif input_data.model == ImageGenModel.FLUX_ULTRA:\n                width, height = SIZE_TO_FLUX_DIMENSIONS[input_data.size]\n                input_params = {\n                    \"prompt\": modified_prompt,\n                    \"width\": width,\n                    \"height\": height,\n                    \"aspect_ratio\": SIZE_TO_FLUX_RATIO[input_data.size],\n                    \"output_format\": \"jpg\",\n                    \"output_quality\": 90,\n                }\n                output = self._run_client(\n                    credentials, \"black-forest-labs/flux-1.1-pro-ultra\", input_params\n                )\n                return output\n\n            elif input_data.model == ImageGenModel.RECRAFT:\n                input_params = {\n                    \"prompt\": input_data.prompt,\n                    \"size\": SIZE_TO_RECRAFT_DIMENSIONS[input_data.size],\n                    \"style\": input_data.style.value,\n                }\n                output = self._run_client(\n                    credentials, \"recraft-ai/recraft-v3\", input_params\n                )\n                return output\n\n        except Exception as e:\n            raise RuntimeError(f\"Failed to generate image: {str(e)}\")",
                      "children": [
                        {
                          "value": "# Handle style-based prompt modification for models without native style support",
                          "children": []
                        },
                        {
                          "value": "modified_prompt = input_data.prompt\n            if input_data.model not in [ImageGenModel.RECRAFT]:\n                style_prefix = self._style_to_prompt_prefix(input_data.style)\n                modified_prompt = f\"{style_prefix} {modified_prompt}\".strip()\n\n            if input_data.model == ImageGenModel.SD3_5:\n                # Use Stable Diffusion 3.5 with aspect ratio\n                input_params = {\n                    \"prompt\": modified_prompt,\n                    \"aspect_ratio\": SIZE_TO_SD_RATIO[input_data.size],\n                    \"output_format\": \"webp\",\n                    \"output_quality\": 90,\n                    \"steps\": 40,\n                    \"cfg_scale\": 7.0,\n                }\n                output = self._run_client(\n                    credentials,\n                    \"stability-ai/stable-diffusion-3.5-medium\",\n                    input_params,\n                )\n                return output\n\n            elif input_data.model == ImageGenModel.FLUX:\n                # Use Flux-specific dimensions with 'jpg' format to avoid ReplicateError\n                width, height = SIZE_TO_FLUX_DIMENSIONS[input_data.size]\n                input_params = {\n                    \"prompt\": modified_prompt,\n                    \"width\": width,\n                    \"height\": height,\n                    \"aspect_ratio\": SIZE_TO_FLUX_RATIO[input_data.size],\n                    \"output_format\": \"jpg\",  # Set to jpg for Flux models\n                    \"output_quality\": 90,\n                }\n                output = self._run_client(\n                    credentials, \"black-forest-labs/flux-1.1-pro\", input_params\n                )\n                return output\n\n            elif input_data.model == ImageGenModel.FLUX_ULTRA:\n                width, height = SIZE_TO_FLUX_DIMENSIONS[input_data.size]\n                input_params = {\n                    \"prompt\": modified_prompt,\n                    \"width\": width,\n                    \"height\": height,\n                    \"aspect_ratio\": SIZE_TO_FLUX_RATIO[input_data.size],\n                    \"output_format\": \"jpg\",\n                    \"output_quality\": 90,\n                }\n                output = self._run_client(\n                    credentials, \"black-forest-labs/flux-1.1-pro-ultra\", input_params\n                )\n                return output\n\n            elif input_data.model == ImageGenModel.RECRAFT:\n                input_params = {\n                    \"prompt\": input_data.prompt,\n                    \"size\": SIZE_TO_RECRAFT_DIMENSIONS[input_data.size],\n                    \"style\": input_data.style.value,\n                }\n                output = self._run_client(\n                    credentials, \"recraft-ai/recraft-v3\", input_params\n                )\n                return output",
                          "children": [
                            {
                              "value": "modified_prompt = input_data.prompt",
                              "children": [
                                {
                                  "value": "modified_prompt = input_data.prompt",
                                  "children": [
                                    {
                                      "value": "modified_prompt",
                                      "children": []
                                    },
                                    {
                                      "value": "input_data.prompt",
                                      "children": [
                                        {
                                          "value": "input_data",
                                          "children": []
                                        },
                                        {
                                          "value": "prompt",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "if input_data.model not in [ImageGenModel.RECRAFT]:\n                style_prefix = self._style_to_prompt_prefix(input_data.style)\n                modified_prompt = f\"{style_prefix} {modified_prompt}\".strip()",
                              "children": [
                                {
                                  "value": "input_data.model not in [ImageGenModel.RECRAFT]",
                                  "children": [
                                    {
                                      "value": "input_data.model",
                                      "children": [
                                        {
                                          "value": "input_data",
                                          "children": []
                                        },
                                        {
                                          "value": "model",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "[ImageGenModel.RECRAFT]",
                                      "children": [
                                        {
                                          "value": "ImageGenModel.RECRAFT",
                                          "children": [
                                            {
                                              "value": "ImageGenModel",
                                              "children": []
                                            },
                                            {
                                              "value": "RECRAFT",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "style_prefix = self._style_to_prompt_prefix(input_data.style)\n                modified_prompt = f\"{style_prefix} {modified_prompt}\".strip()",
                                  "children": [
                                    {
                                      "value": "style_prefix = self._style_to_prompt_prefix(input_data.style)",
                                      "children": [
                                        {
                                          "value": "style_prefix = self._style_to_prompt_prefix(input_data.style)",
                                          "children": [
                                            {
                                              "value": "style_prefix",
                                              "children": []
                                            },
                                            {
                                              "value": "self._style_to_prompt_prefix(input_data.style)",
                                              "children": [
                                                {
                                                  "value": "self._style_to_prompt_prefix",
                                                  "children": [
                                                    {
                                                      "value": "self",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "_style_to_prompt_prefix",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "(input_data.style)",
                                                  "children": [
                                                    {
                                                      "value": "input_data.style",
                                                      "children": [
                                                        {
                                                          "value": "input_data",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "style",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "modified_prompt = f\"{style_prefix} {modified_prompt}\".strip()",
                                      "children": [
                                        {
                                          "value": "modified_prompt = f\"{style_prefix} {modified_prompt}\".strip()",
                                          "children": [
                                            {
                                              "value": "modified_prompt",
                                              "children": []
                                            },
                                            {
                                              "value": "f\"{style_prefix} {modified_prompt}\".strip()",
                                              "children": [
                                                {
                                                  "value": "f\"{style_prefix} {modified_prompt}\".strip",
                                                  "children": [
                                                    {
                                                      "value": "f\"{style_prefix} {modified_prompt}\"",
                                                      "children": [
                                                        {
                                                          "value": "f\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "{style_prefix}",
                                                          "children": [
                                                            {
                                                              "value": "style_prefix",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "{modified_prompt}",
                                                          "children": [
                                                            {
                                                              "value": "modified_prompt",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "strip",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "()",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "if input_data.model == ImageGenModel.SD3_5:\n                # Use Stable Diffusion 3.5 with aspect ratio\n                input_params = {\n                    \"prompt\": modified_prompt,\n                    \"aspect_ratio\": SIZE_TO_SD_RATIO[input_data.size],\n                    \"output_format\": \"webp\",\n                    \"output_quality\": 90,\n                    \"steps\": 40,\n                    \"cfg_scale\": 7.0,\n                }\n                output = self._run_client(\n                    credentials,\n                    \"stability-ai/stable-diffusion-3.5-medium\",\n                    input_params,\n                )\n                return output\n\n            elif input_data.model == ImageGenModel.FLUX:\n                # Use Flux-specific dimensions with 'jpg' format to avoid ReplicateError\n                width, height = SIZE_TO_FLUX_DIMENSIONS[input_data.size]\n                input_params = {\n                    \"prompt\": modified_prompt,\n                    \"width\": width,\n                    \"height\": height,\n                    \"aspect_ratio\": SIZE_TO_FLUX_RATIO[input_data.size],\n                    \"output_format\": \"jpg\",  # Set to jpg for Flux models\n                    \"output_quality\": 90,\n                }\n                output = self._run_client(\n                    credentials, \"black-forest-labs/flux-1.1-pro\", input_params\n                )\n                return output\n\n            elif input_data.model == ImageGenModel.FLUX_ULTRA:\n                width, height = SIZE_TO_FLUX_DIMENSIONS[input_data.size]\n                input_params = {\n                    \"prompt\": modified_prompt,\n                    \"width\": width,\n                    \"height\": height,\n                    \"aspect_ratio\": SIZE_TO_FLUX_RATIO[input_data.size],\n                    \"output_format\": \"jpg\",\n                    \"output_quality\": 90,\n                }\n                output = self._run_client(\n                    credentials, \"black-forest-labs/flux-1.1-pro-ultra\", input_params\n                )\n                return output\n\n            elif input_data.model == ImageGenModel.RECRAFT:\n                input_params = {\n                    \"prompt\": input_data.prompt,\n                    \"size\": SIZE_TO_RECRAFT_DIMENSIONS[input_data.size],\n                    \"style\": input_data.style.value,\n                }\n                output = self._run_client(\n                    credentials, \"recraft-ai/recraft-v3\", input_params\n                )\n                return output",
                              "children": [
                                {
                                  "value": "input_data.model == ImageGenModel.SD3_5",
                                  "children": [
                                    {
                                      "value": "input_data.model",
                                      "children": [
                                        {
                                          "value": "input_data",
                                          "children": []
                                        },
                                        {
                                          "value": "model",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "ImageGenModel.SD3_5",
                                      "children": [
                                        {
                                          "value": "ImageGenModel",
                                          "children": []
                                        },
                                        {
                                          "value": "SD3_5",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "# Use Stable Diffusion 3.5 with aspect ratio",
                                  "children": []
                                },
                                {
                                  "value": "input_params = {\n                    \"prompt\": modified_prompt,\n                    \"aspect_ratio\": SIZE_TO_SD_RATIO[input_data.size],\n                    \"output_format\": \"webp\",\n                    \"output_quality\": 90,\n                    \"steps\": 40,\n                    \"cfg_scale\": 7.0,\n                }\n                output = self._run_client(\n                    credentials,\n                    \"stability-ai/stable-diffusion-3.5-medium\",\n                    input_params,\n                )\n                return output",
                                  "children": [
                                    {
                                      "value": "input_params = {\n                    \"prompt\": modified_prompt,\n                    \"aspect_ratio\": SIZE_TO_SD_RATIO[input_data.size],\n                    \"output_format\": \"webp\",\n                    \"output_quality\": 90,\n                    \"steps\": 40,\n                    \"cfg_scale\": 7.0,\n                }",
                                      "children": [
                                        {
                                          "value": "input_params = {\n                    \"prompt\": modified_prompt,\n                    \"aspect_ratio\": SIZE_TO_SD_RATIO[input_data.size],\n                    \"output_format\": \"webp\",\n                    \"output_quality\": 90,\n                    \"steps\": 40,\n                    \"cfg_scale\": 7.0,\n                }",
                                          "children": [
                                            {
                                              "value": "input_params",
                                              "children": []
                                            },
                                            {
                                              "value": "{\n                    \"prompt\": modified_prompt,\n                    \"aspect_ratio\": SIZE_TO_SD_RATIO[input_data.size],\n                    \"output_format\": \"webp\",\n                    \"output_quality\": 90,\n                    \"steps\": 40,\n                    \"cfg_scale\": 7.0,\n                }",
                                              "children": [
                                                {
                                                  "value": "\"prompt\": modified_prompt",
                                                  "children": [
                                                    {
                                                      "value": "\"prompt\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "prompt",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "modified_prompt",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"aspect_ratio\": SIZE_TO_SD_RATIO[input_data.size]",
                                                  "children": [
                                                    {
                                                      "value": "\"aspect_ratio\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "aspect_ratio",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "SIZE_TO_SD_RATIO[input_data.size]",
                                                      "children": [
                                                        {
                                                          "value": "SIZE_TO_SD_RATIO",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "input_data.size",
                                                          "children": [
                                                            {
                                                              "value": "input_data",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "size",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"output_format\": \"webp\"",
                                                  "children": [
                                                    {
                                                      "value": "\"output_format\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "output_format",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"webp\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "webp",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"output_quality\": 90",
                                                  "children": [
                                                    {
                                                      "value": "\"output_quality\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "output_quality",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "90",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"steps\": 40",
                                                  "children": [
                                                    {
                                                      "value": "\"steps\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "steps",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "40",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"cfg_scale\": 7.0",
                                                  "children": [
                                                    {
                                                      "value": "\"cfg_scale\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "cfg_scale",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "7.0",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "output = self._run_client(\n                    credentials,\n                    \"stability-ai/stable-diffusion-3.5-medium\",\n                    input_params,\n                )",
                                      "children": [
                                        {
                                          "value": "output = self._run_client(\n                    credentials,\n                    \"stability-ai/stable-diffusion-3.5-medium\",\n                    input_params,\n                )",
                                          "children": [
                                            {
                                              "value": "output",
                                              "children": []
                                            },
                                            {
                                              "value": "self._run_client(\n                    credentials,\n                    \"stability-ai/stable-diffusion-3.5-medium\",\n                    input_params,\n                )",
                                              "children": [
                                                {
                                                  "value": "self._run_client",
                                                  "children": [
                                                    {
                                                      "value": "self",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "_run_client",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "(\n                    credentials,\n                    \"stability-ai/stable-diffusion-3.5-medium\",\n                    input_params,\n                )",
                                                  "children": [
                                                    {
                                                      "value": "credentials",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"stability-ai/stable-diffusion-3.5-medium\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "stability-ai/stable-diffusion-3.5-medium",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "input_params",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "return output",
                                      "children": [
                                        {
                                          "value": "output",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "elif input_data.model == ImageGenModel.FLUX:\n                # Use Flux-specific dimensions with 'jpg' format to avoid ReplicateError\n                width, height = SIZE_TO_FLUX_DIMENSIONS[input_data.size]\n                input_params = {\n                    \"prompt\": modified_prompt,\n                    \"width\": width,\n                    \"height\": height,\n                    \"aspect_ratio\": SIZE_TO_FLUX_RATIO[input_data.size],\n                    \"output_format\": \"jpg\",  # Set to jpg for Flux models\n                    \"output_quality\": 90,\n                }\n                output = self._run_client(\n                    credentials, \"black-forest-labs/flux-1.1-pro\", input_params\n                )\n                return output",
                                  "children": [
                                    {
                                      "value": "input_data.model == ImageGenModel.FLUX",
                                      "children": [
                                        {
                                          "value": "input_data.model",
                                          "children": [
                                            {
                                              "value": "input_data",
                                              "children": []
                                            },
                                            {
                                              "value": "model",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "ImageGenModel.FLUX",
                                          "children": [
                                            {
                                              "value": "ImageGenModel",
                                              "children": []
                                            },
                                            {
                                              "value": "FLUX",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "# Use Flux-specific dimensions with 'jpg' format to avoid ReplicateError",
                                      "children": []
                                    },
                                    {
                                      "value": "width, height = SIZE_TO_FLUX_DIMENSIONS[input_data.size]\n                input_params = {\n                    \"prompt\": modified_prompt,\n                    \"width\": width,\n                    \"height\": height,\n                    \"aspect_ratio\": SIZE_TO_FLUX_RATIO[input_data.size],\n                    \"output_format\": \"jpg\",  # Set to jpg for Flux models\n                    \"output_quality\": 90,\n                }\n                output = self._run_client(\n                    credentials, \"black-forest-labs/flux-1.1-pro\", input_params\n                )\n                return output",
                                      "children": [
                                        {
                                          "value": "width, height = SIZE_TO_FLUX_DIMENSIONS[input_data.size]",
                                          "children": [
                                            {
                                              "value": "width, height = SIZE_TO_FLUX_DIMENSIONS[input_data.size]",
                                              "children": [
                                                {
                                                  "value": "width, height",
                                                  "children": [
                                                    {
                                                      "value": "width",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "height",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "SIZE_TO_FLUX_DIMENSIONS[input_data.size]",
                                                  "children": [
                                                    {
                                                      "value": "SIZE_TO_FLUX_DIMENSIONS",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "input_data.size",
                                                      "children": [
                                                        {
                                                          "value": "input_data",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "size",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "input_params = {\n                    \"prompt\": modified_prompt,\n                    \"width\": width,\n                    \"height\": height,\n                    \"aspect_ratio\": SIZE_TO_FLUX_RATIO[input_data.size],\n                    \"output_format\": \"jpg\",  # Set to jpg for Flux models\n                    \"output_quality\": 90,\n                }",
                                          "children": [
                                            {
                                              "value": "input_params = {\n                    \"prompt\": modified_prompt,\n                    \"width\": width,\n                    \"height\": height,\n                    \"aspect_ratio\": SIZE_TO_FLUX_RATIO[input_data.size],\n                    \"output_format\": \"jpg\",  # Set to jpg for Flux models\n                    \"output_quality\": 90,\n                }",
                                              "children": [
                                                {
                                                  "value": "input_params",
                                                  "children": []
                                                },
                                                {
                                                  "value": "{\n                    \"prompt\": modified_prompt,\n                    \"width\": width,\n                    \"height\": height,\n                    \"aspect_ratio\": SIZE_TO_FLUX_RATIO[input_data.size],\n                    \"output_format\": \"jpg\",  # Set to jpg for Flux models\n                    \"output_quality\": 90,\n                }",
                                                  "children": [
                                                    {
                                                      "value": "\"prompt\": modified_prompt",
                                                      "children": [
                                                        {
                                                          "value": "\"prompt\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "prompt",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "modified_prompt",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"width\": width",
                                                      "children": [
                                                        {
                                                          "value": "\"width\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "width",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "width",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"height\": height",
                                                      "children": [
                                                        {
                                                          "value": "\"height\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "height",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "height",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"aspect_ratio\": SIZE_TO_FLUX_RATIO[input_data.size]",
                                                      "children": [
                                                        {
                                                          "value": "\"aspect_ratio\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "aspect_ratio",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "SIZE_TO_FLUX_RATIO[input_data.size]",
                                                          "children": [
                                                            {
                                                              "value": "SIZE_TO_FLUX_RATIO",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "input_data.size",
                                                              "children": [
                                                                {
                                                                  "value": "input_data",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "size",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"output_format\": \"jpg\"",
                                                      "children": [
                                                        {
                                                          "value": "\"output_format\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "output_format",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "\"jpg\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "jpg",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "# Set to jpg for Flux models",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"output_quality\": 90",
                                                      "children": [
                                                        {
                                                          "value": "\"output_quality\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "output_quality",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "90",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "output = self._run_client(\n                    credentials, \"black-forest-labs/flux-1.1-pro\", input_params\n                )",
                                          "children": [
                                            {
                                              "value": "output = self._run_client(\n                    credentials, \"black-forest-labs/flux-1.1-pro\", input_params\n                )",
                                              "children": [
                                                {
                                                  "value": "output",
                                                  "children": []
                                                },
                                                {
                                                  "value": "self._run_client(\n                    credentials, \"black-forest-labs/flux-1.1-pro\", input_params\n                )",
                                                  "children": [
                                                    {
                                                      "value": "self._run_client",
                                                      "children": [
                                                        {
                                                          "value": "self",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "_run_client",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "(\n                    credentials, \"black-forest-labs/flux-1.1-pro\", input_params\n                )",
                                                      "children": [
                                                        {
                                                          "value": "credentials",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"black-forest-labs/flux-1.1-pro\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "black-forest-labs/flux-1.1-pro",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "input_params",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "return output",
                                          "children": [
                                            {
                                              "value": "output",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "elif input_data.model == ImageGenModel.FLUX_ULTRA:\n                width, height = SIZE_TO_FLUX_DIMENSIONS[input_data.size]\n                input_params = {\n                    \"prompt\": modified_prompt,\n                    \"width\": width,\n                    \"height\": height,\n                    \"aspect_ratio\": SIZE_TO_FLUX_RATIO[input_data.size],\n                    \"output_format\": \"jpg\",\n                    \"output_quality\": 90,\n                }\n                output = self._run_client(\n                    credentials, \"black-forest-labs/flux-1.1-pro-ultra\", input_params\n                )\n                return output",
                                  "children": [
                                    {
                                      "value": "input_data.model == ImageGenModel.FLUX_ULTRA",
                                      "children": [
                                        {
                                          "value": "input_data.model",
                                          "children": [
                                            {
                                              "value": "input_data",
                                              "children": []
                                            },
                                            {
                                              "value": "model",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "ImageGenModel.FLUX_ULTRA",
                                          "children": [
                                            {
                                              "value": "ImageGenModel",
                                              "children": []
                                            },
                                            {
                                              "value": "FLUX_ULTRA",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "width, height = SIZE_TO_FLUX_DIMENSIONS[input_data.size]\n                input_params = {\n                    \"prompt\": modified_prompt,\n                    \"width\": width,\n                    \"height\": height,\n                    \"aspect_ratio\": SIZE_TO_FLUX_RATIO[input_data.size],\n                    \"output_format\": \"jpg\",\n                    \"output_quality\": 90,\n                }\n                output = self._run_client(\n                    credentials, \"black-forest-labs/flux-1.1-pro-ultra\", input_params\n                )\n                return output",
                                      "children": [
                                        {
                                          "value": "width, height = SIZE_TO_FLUX_DIMENSIONS[input_data.size]",
                                          "children": [
                                            {
                                              "value": "width, height = SIZE_TO_FLUX_DIMENSIONS[input_data.size]",
                                              "children": [
                                                {
                                                  "value": "width, height",
                                                  "children": [
                                                    {
                                                      "value": "width",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "height",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "SIZE_TO_FLUX_DIMENSIONS[input_data.size]",
                                                  "children": [
                                                    {
                                                      "value": "SIZE_TO_FLUX_DIMENSIONS",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "input_data.size",
                                                      "children": [
                                                        {
                                                          "value": "input_data",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "size",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "input_params = {\n                    \"prompt\": modified_prompt,\n                    \"width\": width,\n                    \"height\": height,\n                    \"aspect_ratio\": SIZE_TO_FLUX_RATIO[input_data.size],\n                    \"output_format\": \"jpg\",\n                    \"output_quality\": 90,\n                }",
                                          "children": [
                                            {
                                              "value": "input_params = {\n                    \"prompt\": modified_prompt,\n                    \"width\": width,\n                    \"height\": height,\n                    \"aspect_ratio\": SIZE_TO_FLUX_RATIO[input_data.size],\n                    \"output_format\": \"jpg\",\n                    \"output_quality\": 90,\n                }",
                                              "children": [
                                                {
                                                  "value": "input_params",
                                                  "children": []
                                                },
                                                {
                                                  "value": "{\n                    \"prompt\": modified_prompt,\n                    \"width\": width,\n                    \"height\": height,\n                    \"aspect_ratio\": SIZE_TO_FLUX_RATIO[input_data.size],\n                    \"output_format\": \"jpg\",\n                    \"output_quality\": 90,\n                }",
                                                  "children": [
                                                    {
                                                      "value": "\"prompt\": modified_prompt",
                                                      "children": [
                                                        {
                                                          "value": "\"prompt\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "prompt",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "modified_prompt",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"width\": width",
                                                      "children": [
                                                        {
                                                          "value": "\"width\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "width",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "width",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"height\": height",
                                                      "children": [
                                                        {
                                                          "value": "\"height\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "height",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "height",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"aspect_ratio\": SIZE_TO_FLUX_RATIO[input_data.size]",
                                                      "children": [
                                                        {
                                                          "value": "\"aspect_ratio\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "aspect_ratio",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "SIZE_TO_FLUX_RATIO[input_data.size]",
                                                          "children": [
                                                            {
                                                              "value": "SIZE_TO_FLUX_RATIO",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "input_data.size",
                                                              "children": [
                                                                {
                                                                  "value": "input_data",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "size",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"output_format\": \"jpg\"",
                                                      "children": [
                                                        {
                                                          "value": "\"output_format\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "output_format",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "\"jpg\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "jpg",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"output_quality\": 90",
                                                      "children": [
                                                        {
                                                          "value": "\"output_quality\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "output_quality",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "90",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "output = self._run_client(\n                    credentials, \"black-forest-labs/flux-1.1-pro-ultra\", input_params\n                )",
                                          "children": [
                                            {
                                              "value": "output = self._run_client(\n                    credentials, \"black-forest-labs/flux-1.1-pro-ultra\", input_params\n                )",
                                              "children": [
                                                {
                                                  "value": "output",
                                                  "children": []
                                                },
                                                {
                                                  "value": "self._run_client(\n                    credentials, \"black-forest-labs/flux-1.1-pro-ultra\", input_params\n                )",
                                                  "children": [
                                                    {
                                                      "value": "self._run_client",
                                                      "children": [
                                                        {
                                                          "value": "self",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "_run_client",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "(\n                    credentials, \"black-forest-labs/flux-1.1-pro-ultra\", input_params\n                )",
                                                      "children": [
                                                        {
                                                          "value": "credentials",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"black-forest-labs/flux-1.1-pro-ultra\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "black-forest-labs/flux-1.1-pro-ultra",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "input_params",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "return output",
                                          "children": [
                                            {
                                              "value": "output",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "elif input_data.model == ImageGenModel.RECRAFT:\n                input_params = {\n                    \"prompt\": input_data.prompt,\n                    \"size\": SIZE_TO_RECRAFT_DIMENSIONS[input_data.size],\n                    \"style\": input_data.style.value,\n                }\n                output = self._run_client(\n                    credentials, \"recraft-ai/recraft-v3\", input_params\n                )\n                return output",
                                  "children": [
                                    {
                                      "value": "input_data.model == ImageGenModel.RECRAFT",
                                      "children": [
                                        {
                                          "value": "input_data.model",
                                          "children": [
                                            {
                                              "value": "input_data",
                                              "children": []
                                            },
                                            {
                                              "value": "model",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "ImageGenModel.RECRAFT",
                                          "children": [
                                            {
                                              "value": "ImageGenModel",
                                              "children": []
                                            },
                                            {
                                              "value": "RECRAFT",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "value": "input_params = {\n                    \"prompt\": input_data.prompt,\n                    \"size\": SIZE_TO_RECRAFT_DIMENSIONS[input_data.size],\n                    \"style\": input_data.style.value,\n                }\n                output = self._run_client(\n                    credentials, \"recraft-ai/recraft-v3\", input_params\n                )\n                return output",
                                      "children": [
                                        {
                                          "value": "input_params = {\n                    \"prompt\": input_data.prompt,\n                    \"size\": SIZE_TO_RECRAFT_DIMENSIONS[input_data.size],\n                    \"style\": input_data.style.value,\n                }",
                                          "children": [
                                            {
                                              "value": "input_params = {\n                    \"prompt\": input_data.prompt,\n                    \"size\": SIZE_TO_RECRAFT_DIMENSIONS[input_data.size],\n                    \"style\": input_data.style.value,\n                }",
                                              "children": [
                                                {
                                                  "value": "input_params",
                                                  "children": []
                                                },
                                                {
                                                  "value": "{\n                    \"prompt\": input_data.prompt,\n                    \"size\": SIZE_TO_RECRAFT_DIMENSIONS[input_data.size],\n                    \"style\": input_data.style.value,\n                }",
                                                  "children": [
                                                    {
                                                      "value": "\"prompt\": input_data.prompt",
                                                      "children": [
                                                        {
                                                          "value": "\"prompt\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "prompt",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "input_data.prompt",
                                                          "children": [
                                                            {
                                                              "value": "input_data",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "prompt",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"size\": SIZE_TO_RECRAFT_DIMENSIONS[input_data.size]",
                                                      "children": [
                                                        {
                                                          "value": "\"size\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "size",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "SIZE_TO_RECRAFT_DIMENSIONS[input_data.size]",
                                                          "children": [
                                                            {
                                                              "value": "SIZE_TO_RECRAFT_DIMENSIONS",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "input_data.size",
                                                              "children": [
                                                                {
                                                                  "value": "input_data",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "size",
                                                                  "children": []
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"style\": input_data.style.value",
                                                      "children": [
                                                        {
                                                          "value": "\"style\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "style",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "input_data.style.value",
                                                          "children": [
                                                            {
                                                              "value": "input_data.style",
                                                              "children": [
                                                                {
                                                                  "value": "input_data",
                                                                  "children": []
                                                                },
                                                                {
                                                                  "value": "style",
                                                                  "children": []
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "value": "value",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "output = self._run_client(\n                    credentials, \"recraft-ai/recraft-v3\", input_params\n                )",
                                          "children": [
                                            {
                                              "value": "output = self._run_client(\n                    credentials, \"recraft-ai/recraft-v3\", input_params\n                )",
                                              "children": [
                                                {
                                                  "value": "output",
                                                  "children": []
                                                },
                                                {
                                                  "value": "self._run_client(\n                    credentials, \"recraft-ai/recraft-v3\", input_params\n                )",
                                                  "children": [
                                                    {
                                                      "value": "self._run_client",
                                                      "children": [
                                                        {
                                                          "value": "self",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "_run_client",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "(\n                    credentials, \"recraft-ai/recraft-v3\", input_params\n                )",
                                                      "children": [
                                                        {
                                                          "value": "credentials",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"recraft-ai/recraft-v3\"",
                                                          "children": [
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "recraft-ai/recraft-v3",
                                                              "children": []
                                                            },
                                                            {
                                                              "value": "\"",
                                                              "children": []
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "value": "input_params",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "value": "return output",
                                          "children": [
                                            {
                                              "value": "output",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "except Exception as e:\n            raise RuntimeError(f\"Failed to generate image: {str(e)}\")",
                          "children": [
                            {
                              "value": "Exception as e",
                              "children": [
                                {
                                  "value": "Exception",
                                  "children": []
                                },
                                {
                                  "value": "e",
                                  "children": [
                                    {
                                      "value": "e",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "raise RuntimeError(f\"Failed to generate image: {str(e)}\")",
                              "children": [
                                {
                                  "value": "raise RuntimeError(f\"Failed to generate image: {str(e)}\")",
                                  "children": [
                                    {
                                      "value": "RuntimeError(f\"Failed to generate image: {str(e)}\")",
                                      "children": [
                                        {
                                          "value": "RuntimeError",
                                          "children": []
                                        },
                                        {
                                          "value": "(f\"Failed to generate image: {str(e)}\")",
                                          "children": [
                                            {
                                              "value": "f\"Failed to generate image: {str(e)}\"",
                                              "children": [
                                                {
                                                  "value": "f\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "Failed to generate image:",
                                                  "children": []
                                                },
                                                {
                                                  "value": "{str(e)}",
                                                  "children": [
                                                    {
                                                      "value": "str(e)",
                                                      "children": [
                                                        {
                                                          "value": "str",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "(e)",
                                                          "children": [
                                                            {
                                                              "value": "e",
                                                              "children": []
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def _style_to_prompt_prefix(self, style: ImageStyle) -> str:\n        \"\"\"\n        Convert a style enum to a prompt prefix for models without native style support.\n        \"\"\"\n        if style == ImageStyle.ANY:\n            return \"\"\n\n        style_map = {\n            ImageStyle.REALISTIC: \"photorealistic\",\n            ImageStyle.REALISTIC_BW: \"black and white photograph\",\n            ImageStyle.REALISTIC_HDR: \"HDR photograph\",\n            ImageStyle.REALISTIC_NATURAL: \"natural light photograph\",\n            ImageStyle.REALISTIC_STUDIO: \"studio portrait photograph\",\n            ImageStyle.REALISTIC_ENTERPRISE: \"enterprise photograph\",\n            ImageStyle.REALISTIC_HARD_FLASH: \"hard flash photograph\",\n            ImageStyle.REALISTIC_MOTION_BLUR: \"motion blur photograph\",\n            ImageStyle.DIGITAL_ART: \"digital art\",\n            ImageStyle.PIXEL_ART: \"pixel art\",\n            ImageStyle.HAND_DRAWN: \"hand drawn illustration\",\n            ImageStyle.GRAIN: \"grainy digital illustration\",\n            ImageStyle.SKETCH: \"sketchy illustration\",\n            ImageStyle.POSTER: \"2D art poster\",\n            ImageStyle.POSTER_2: \"alternate 2D art poster\",\n            ImageStyle.HANDMADE_3D: \"handmade 3D illustration\",\n            ImageStyle.HAND_DRAWN_OUTLINE: \"hand drawn outline illustration\",\n            ImageStyle.ENGRAVING_COLOR: \"color engraving illustration\",\n        }\n\n        style_text = style_map.get(style, \"\")\n        return f\"{style_text} of\" if style_text else \"\"",
              "children": [
                {
                  "value": "_style_to_prompt_prefix",
                  "children": []
                },
                {
                  "value": "(self, style: ImageStyle)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "style: ImageStyle",
                      "children": [
                        {
                          "value": "style",
                          "children": []
                        },
                        {
                          "value": "ImageStyle",
                          "children": [
                            {
                              "value": "ImageStyle",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "str",
                  "children": [
                    {
                      "value": "str",
                      "children": []
                    }
                  ]
                },
                {
                  "value": "\"\"\"\n        Convert a style enum to a prompt prefix for models without native style support.\n        \"\"\"\n        if style == ImageStyle.ANY:\n            return \"\"\n\n        style_map = {\n            ImageStyle.REALISTIC: \"photorealistic\",\n            ImageStyle.REALISTIC_BW: \"black and white photograph\",\n            ImageStyle.REALISTIC_HDR: \"HDR photograph\",\n            ImageStyle.REALISTIC_NATURAL: \"natural light photograph\",\n            ImageStyle.REALISTIC_STUDIO: \"studio portrait photograph\",\n            ImageStyle.REALISTIC_ENTERPRISE: \"enterprise photograph\",\n            ImageStyle.REALISTIC_HARD_FLASH: \"hard flash photograph\",\n            ImageStyle.REALISTIC_MOTION_BLUR: \"motion blur photograph\",\n            ImageStyle.DIGITAL_ART: \"digital art\",\n            ImageStyle.PIXEL_ART: \"pixel art\",\n            ImageStyle.HAND_DRAWN: \"hand drawn illustration\",\n            ImageStyle.GRAIN: \"grainy digital illustration\",\n            ImageStyle.SKETCH: \"sketchy illustration\",\n            ImageStyle.POSTER: \"2D art poster\",\n            ImageStyle.POSTER_2: \"alternate 2D art poster\",\n            ImageStyle.HANDMADE_3D: \"handmade 3D illustration\",\n            ImageStyle.HAND_DRAWN_OUTLINE: \"hand drawn outline illustration\",\n            ImageStyle.ENGRAVING_COLOR: \"color engraving illustration\",\n        }\n\n        style_text = style_map.get(style, \"\")\n        return f\"{style_text} of\" if style_text else \"\"",
                  "children": [
                    {
                      "value": "\"\"\"\n        Convert a style enum to a prompt prefix for models without native style support.\n        \"\"\"",
                      "children": [
                        {
                          "value": "\"\"\"\n        Convert a style enum to a prompt prefix for models without native style support.\n        \"\"\"",
                          "children": [
                            {
                              "value": "\"\"\"",
                              "children": []
                            },
                            {
                              "value": "Convert a style enum to a prompt prefix for models without native style support.",
                              "children": []
                            },
                            {
                              "value": "\"\"\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "if style == ImageStyle.ANY:\n            return \"\"",
                      "children": [
                        {
                          "value": "style == ImageStyle.ANY",
                          "children": [
                            {
                              "value": "style",
                              "children": []
                            },
                            {
                              "value": "ImageStyle.ANY",
                              "children": [
                                {
                                  "value": "ImageStyle",
                                  "children": []
                                },
                                {
                                  "value": "ANY",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "return \"\"",
                          "children": [
                            {
                              "value": "return \"\"",
                              "children": [
                                {
                                  "value": "\"\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "style_map = {\n            ImageStyle.REALISTIC: \"photorealistic\",\n            ImageStyle.REALISTIC_BW: \"black and white photograph\",\n            ImageStyle.REALISTIC_HDR: \"HDR photograph\",\n            ImageStyle.REALISTIC_NATURAL: \"natural light photograph\",\n            ImageStyle.REALISTIC_STUDIO: \"studio portrait photograph\",\n            ImageStyle.REALISTIC_ENTERPRISE: \"enterprise photograph\",\n            ImageStyle.REALISTIC_HARD_FLASH: \"hard flash photograph\",\n            ImageStyle.REALISTIC_MOTION_BLUR: \"motion blur photograph\",\n            ImageStyle.DIGITAL_ART: \"digital art\",\n            ImageStyle.PIXEL_ART: \"pixel art\",\n            ImageStyle.HAND_DRAWN: \"hand drawn illustration\",\n            ImageStyle.GRAIN: \"grainy digital illustration\",\n            ImageStyle.SKETCH: \"sketchy illustration\",\n            ImageStyle.POSTER: \"2D art poster\",\n            ImageStyle.POSTER_2: \"alternate 2D art poster\",\n            ImageStyle.HANDMADE_3D: \"handmade 3D illustration\",\n            ImageStyle.HAND_DRAWN_OUTLINE: \"hand drawn outline illustration\",\n            ImageStyle.ENGRAVING_COLOR: \"color engraving illustration\",\n        }",
                      "children": [
                        {
                          "value": "style_map = {\n            ImageStyle.REALISTIC: \"photorealistic\",\n            ImageStyle.REALISTIC_BW: \"black and white photograph\",\n            ImageStyle.REALISTIC_HDR: \"HDR photograph\",\n            ImageStyle.REALISTIC_NATURAL: \"natural light photograph\",\n            ImageStyle.REALISTIC_STUDIO: \"studio portrait photograph\",\n            ImageStyle.REALISTIC_ENTERPRISE: \"enterprise photograph\",\n            ImageStyle.REALISTIC_HARD_FLASH: \"hard flash photograph\",\n            ImageStyle.REALISTIC_MOTION_BLUR: \"motion blur photograph\",\n            ImageStyle.DIGITAL_ART: \"digital art\",\n            ImageStyle.PIXEL_ART: \"pixel art\",\n            ImageStyle.HAND_DRAWN: \"hand drawn illustration\",\n            ImageStyle.GRAIN: \"grainy digital illustration\",\n            ImageStyle.SKETCH: \"sketchy illustration\",\n            ImageStyle.POSTER: \"2D art poster\",\n            ImageStyle.POSTER_2: \"alternate 2D art poster\",\n            ImageStyle.HANDMADE_3D: \"handmade 3D illustration\",\n            ImageStyle.HAND_DRAWN_OUTLINE: \"hand drawn outline illustration\",\n            ImageStyle.ENGRAVING_COLOR: \"color engraving illustration\",\n        }",
                          "children": [
                            {
                              "value": "style_map",
                              "children": []
                            },
                            {
                              "value": "{\n            ImageStyle.REALISTIC: \"photorealistic\",\n            ImageStyle.REALISTIC_BW: \"black and white photograph\",\n            ImageStyle.REALISTIC_HDR: \"HDR photograph\",\n            ImageStyle.REALISTIC_NATURAL: \"natural light photograph\",\n            ImageStyle.REALISTIC_STUDIO: \"studio portrait photograph\",\n            ImageStyle.REALISTIC_ENTERPRISE: \"enterprise photograph\",\n            ImageStyle.REALISTIC_HARD_FLASH: \"hard flash photograph\",\n            ImageStyle.REALISTIC_MOTION_BLUR: \"motion blur photograph\",\n            ImageStyle.DIGITAL_ART: \"digital art\",\n            ImageStyle.PIXEL_ART: \"pixel art\",\n            ImageStyle.HAND_DRAWN: \"hand drawn illustration\",\n            ImageStyle.GRAIN: \"grainy digital illustration\",\n            ImageStyle.SKETCH: \"sketchy illustration\",\n            ImageStyle.POSTER: \"2D art poster\",\n            ImageStyle.POSTER_2: \"alternate 2D art poster\",\n            ImageStyle.HANDMADE_3D: \"handmade 3D illustration\",\n            ImageStyle.HAND_DRAWN_OUTLINE: \"hand drawn outline illustration\",\n            ImageStyle.ENGRAVING_COLOR: \"color engraving illustration\",\n        }",
                              "children": [
                                {
                                  "value": "ImageStyle.REALISTIC: \"photorealistic\"",
                                  "children": [
                                    {
                                      "value": "ImageStyle.REALISTIC",
                                      "children": [
                                        {
                                          "value": "ImageStyle",
                                          "children": []
                                        },
                                        {
                                          "value": "REALISTIC",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"photorealistic\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "photorealistic",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "ImageStyle.REALISTIC_BW: \"black and white photograph\"",
                                  "children": [
                                    {
                                      "value": "ImageStyle.REALISTIC_BW",
                                      "children": [
                                        {
                                          "value": "ImageStyle",
                                          "children": []
                                        },
                                        {
                                          "value": "REALISTIC_BW",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"black and white photograph\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "black and white photograph",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "ImageStyle.REALISTIC_HDR: \"HDR photograph\"",
                                  "children": [
                                    {
                                      "value": "ImageStyle.REALISTIC_HDR",
                                      "children": [
                                        {
                                          "value": "ImageStyle",
                                          "children": []
                                        },
                                        {
                                          "value": "REALISTIC_HDR",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"HDR photograph\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "HDR photograph",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "ImageStyle.REALISTIC_NATURAL: \"natural light photograph\"",
                                  "children": [
                                    {
                                      "value": "ImageStyle.REALISTIC_NATURAL",
                                      "children": [
                                        {
                                          "value": "ImageStyle",
                                          "children": []
                                        },
                                        {
                                          "value": "REALISTIC_NATURAL",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"natural light photograph\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "natural light photograph",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "ImageStyle.REALISTIC_STUDIO: \"studio portrait photograph\"",
                                  "children": [
                                    {
                                      "value": "ImageStyle.REALISTIC_STUDIO",
                                      "children": [
                                        {
                                          "value": "ImageStyle",
                                          "children": []
                                        },
                                        {
                                          "value": "REALISTIC_STUDIO",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"studio portrait photograph\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "studio portrait photograph",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "ImageStyle.REALISTIC_ENTERPRISE: \"enterprise photograph\"",
                                  "children": [
                                    {
                                      "value": "ImageStyle.REALISTIC_ENTERPRISE",
                                      "children": [
                                        {
                                          "value": "ImageStyle",
                                          "children": []
                                        },
                                        {
                                          "value": "REALISTIC_ENTERPRISE",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"enterprise photograph\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "enterprise photograph",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "ImageStyle.REALISTIC_HARD_FLASH: \"hard flash photograph\"",
                                  "children": [
                                    {
                                      "value": "ImageStyle.REALISTIC_HARD_FLASH",
                                      "children": [
                                        {
                                          "value": "ImageStyle",
                                          "children": []
                                        },
                                        {
                                          "value": "REALISTIC_HARD_FLASH",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"hard flash photograph\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "hard flash photograph",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "ImageStyle.REALISTIC_MOTION_BLUR: \"motion blur photograph\"",
                                  "children": [
                                    {
                                      "value": "ImageStyle.REALISTIC_MOTION_BLUR",
                                      "children": [
                                        {
                                          "value": "ImageStyle",
                                          "children": []
                                        },
                                        {
                                          "value": "REALISTIC_MOTION_BLUR",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"motion blur photograph\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "motion blur photograph",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "ImageStyle.DIGITAL_ART: \"digital art\"",
                                  "children": [
                                    {
                                      "value": "ImageStyle.DIGITAL_ART",
                                      "children": [
                                        {
                                          "value": "ImageStyle",
                                          "children": []
                                        },
                                        {
                                          "value": "DIGITAL_ART",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"digital art\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "digital art",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "ImageStyle.PIXEL_ART: \"pixel art\"",
                                  "children": [
                                    {
                                      "value": "ImageStyle.PIXEL_ART",
                                      "children": [
                                        {
                                          "value": "ImageStyle",
                                          "children": []
                                        },
                                        {
                                          "value": "PIXEL_ART",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"pixel art\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "pixel art",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "ImageStyle.HAND_DRAWN: \"hand drawn illustration\"",
                                  "children": [
                                    {
                                      "value": "ImageStyle.HAND_DRAWN",
                                      "children": [
                                        {
                                          "value": "ImageStyle",
                                          "children": []
                                        },
                                        {
                                          "value": "HAND_DRAWN",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"hand drawn illustration\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "hand drawn illustration",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "ImageStyle.GRAIN: \"grainy digital illustration\"",
                                  "children": [
                                    {
                                      "value": "ImageStyle.GRAIN",
                                      "children": [
                                        {
                                          "value": "ImageStyle",
                                          "children": []
                                        },
                                        {
                                          "value": "GRAIN",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"grainy digital illustration\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "grainy digital illustration",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "ImageStyle.SKETCH: \"sketchy illustration\"",
                                  "children": [
                                    {
                                      "value": "ImageStyle.SKETCH",
                                      "children": [
                                        {
                                          "value": "ImageStyle",
                                          "children": []
                                        },
                                        {
                                          "value": "SKETCH",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"sketchy illustration\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "sketchy illustration",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "ImageStyle.POSTER: \"2D art poster\"",
                                  "children": [
                                    {
                                      "value": "ImageStyle.POSTER",
                                      "children": [
                                        {
                                          "value": "ImageStyle",
                                          "children": []
                                        },
                                        {
                                          "value": "POSTER",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"2D art poster\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "2D art poster",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "ImageStyle.POSTER_2: \"alternate 2D art poster\"",
                                  "children": [
                                    {
                                      "value": "ImageStyle.POSTER_2",
                                      "children": [
                                        {
                                          "value": "ImageStyle",
                                          "children": []
                                        },
                                        {
                                          "value": "POSTER_2",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"alternate 2D art poster\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "alternate 2D art poster",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "ImageStyle.HANDMADE_3D: \"handmade 3D illustration\"",
                                  "children": [
                                    {
                                      "value": "ImageStyle.HANDMADE_3D",
                                      "children": [
                                        {
                                          "value": "ImageStyle",
                                          "children": []
                                        },
                                        {
                                          "value": "HANDMADE_3D",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"handmade 3D illustration\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "handmade 3D illustration",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "ImageStyle.HAND_DRAWN_OUTLINE: \"hand drawn outline illustration\"",
                                  "children": [
                                    {
                                      "value": "ImageStyle.HAND_DRAWN_OUTLINE",
                                      "children": [
                                        {
                                          "value": "ImageStyle",
                                          "children": []
                                        },
                                        {
                                          "value": "HAND_DRAWN_OUTLINE",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"hand drawn outline illustration\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "hand drawn outline illustration",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "ImageStyle.ENGRAVING_COLOR: \"color engraving illustration\"",
                                  "children": [
                                    {
                                      "value": "ImageStyle.ENGRAVING_COLOR",
                                      "children": [
                                        {
                                          "value": "ImageStyle",
                                          "children": []
                                        },
                                        {
                                          "value": "ENGRAVING_COLOR",
                                          "children": []
                                        }
                                      ]
                                    },
                                    {
                                      "value": "\"color engraving illustration\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "color engraving illustration",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "style_text = style_map.get(style, \"\")",
                      "children": [
                        {
                          "value": "style_text = style_map.get(style, \"\")",
                          "children": [
                            {
                              "value": "style_text",
                              "children": []
                            },
                            {
                              "value": "style_map.get(style, \"\")",
                              "children": [
                                {
                                  "value": "style_map.get",
                                  "children": [
                                    {
                                      "value": "style_map",
                                      "children": []
                                    },
                                    {
                                      "value": "get",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "(style, \"\")",
                                  "children": [
                                    {
                                      "value": "style",
                                      "children": []
                                    },
                                    {
                                      "value": "\"\"",
                                      "children": [
                                        {
                                          "value": "\"",
                                          "children": []
                                        },
                                        {
                                          "value": "\"",
                                          "children": []
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "return f\"{style_text} of\" if style_text else \"\"",
                      "children": [
                        {
                          "value": "f\"{style_text} of\" if style_text else \"\"",
                          "children": [
                            {
                              "value": "f\"{style_text} of\"",
                              "children": [
                                {
                                  "value": "f\"",
                                  "children": []
                                },
                                {
                                  "value": "{style_text}",
                                  "children": [
                                    {
                                      "value": "style_text",
                                      "children": []
                                    }
                                  ]
                                },
                                {
                                  "value": "of",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            },
                            {
                              "value": "style_text",
                              "children": []
                            },
                            {
                              "value": "\"\"",
                              "children": [
                                {
                                  "value": "\"",
                                  "children": []
                                },
                                {
                                  "value": "\"",
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "value": "def run(self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs):\n        try:\n            url = self.generate_image(input_data, credentials)\n            if url:\n                yield \"image_url\", url\n            else:\n                yield \"error\", \"Image generation returned an empty result.\"\n        except Exception as e:\n            # Capture and return only the message of the exception, avoiding serialization of non-serializable objects\n            yield \"error\", str(e)",
              "children": [
                {
                  "value": "run",
                  "children": []
                },
                {
                  "value": "(self, input_data: Input, *, credentials: APIKeyCredentials, **kwargs)",
                  "children": [
                    {
                      "value": "self",
                      "children": []
                    },
                    {
                      "value": "input_data: Input",
                      "children": [
                        {
                          "value": "input_data",
                          "children": []
                        },
                        {
                          "value": "Input",
                          "children": [
                            {
                              "value": "Input",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "*",
                      "children": []
                    },
                    {
                      "value": "credentials: APIKeyCredentials",
                      "children": [
                        {
                          "value": "credentials",
                          "children": []
                        },
                        {
                          "value": "APIKeyCredentials",
                          "children": [
                            {
                              "value": "APIKeyCredentials",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "**kwargs",
                      "children": [
                        {
                          "value": "kwargs",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "try:\n            url = self.generate_image(input_data, credentials)\n            if url:\n                yield \"image_url\", url\n            else:\n                yield \"error\", \"Image generation returned an empty result.\"\n        except Exception as e:\n            # Capture and return only the message of the exception, avoiding serialization of non-serializable objects\n            yield \"error\", str(e)",
                  "children": [
                    {
                      "value": "try:\n            url = self.generate_image(input_data, credentials)\n            if url:\n                yield \"image_url\", url\n            else:\n                yield \"error\", \"Image generation returned an empty result.\"\n        except Exception as e:\n            # Capture and return only the message of the exception, avoiding serialization of non-serializable objects\n            yield \"error\", str(e)",
                      "children": [
                        {
                          "value": "url = self.generate_image(input_data, credentials)\n            if url:\n                yield \"image_url\", url\n            else:\n                yield \"error\", \"Image generation returned an empty result.\"",
                          "children": [
                            {
                              "value": "url = self.generate_image(input_data, credentials)",
                              "children": [
                                {
                                  "value": "url = self.generate_image(input_data, credentials)",
                                  "children": [
                                    {
                                      "value": "url",
                                      "children": []
                                    },
                                    {
                                      "value": "self.generate_image(input_data, credentials)",
                                      "children": [
                                        {
                                          "value": "self.generate_image",
                                          "children": [
                                            {
                                              "value": "self",
                                              "children": []
                                            },
                                            {
                                              "value": "generate_image",
                                              "children": []
                                            }
                                          ]
                                        },
                                        {
                                          "value": "(input_data, credentials)",
                                          "children": [
                                            {
                                              "value": "input_data",
                                              "children": []
                                            },
                                            {
                                              "value": "credentials",
                                              "children": []
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "if url:\n                yield \"image_url\", url\n            else:\n                yield \"error\", \"Image generation returned an empty result.\"",
                              "children": [
                                {
                                  "value": "url",
                                  "children": []
                                },
                                {
                                  "value": "yield \"image_url\", url",
                                  "children": [
                                    {
                                      "value": "yield \"image_url\", url",
                                      "children": [
                                        {
                                          "value": "yield \"image_url\", url",
                                          "children": [
                                            {
                                              "value": "\"image_url\", url",
                                              "children": [
                                                {
                                                  "value": "\"image_url\"",
                                                  "children": [
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "image_url",
                                                      "children": []
                                                    },
                                                    {
                                                      "value": "\"",
                                                      "children": []
                                                    }
                                                  ]
                                                },
                                                {
                                                  "value": "url",
                                                  "children": []
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "value": "else:\n                yield \"error\", \"Image generation returned an empty result.\"",
                                  "children": [
                                    {
                                      "value": "yield \"error\", \"Image generation returned an empty result.\"",
                                      "children": [
                                        {
                                          "value": "yield \"error\", \"Image generation returned an empty result.\"",
                                          "children": [
                                            {
                                              "value": "yield \"error\", \"Image generation returned an empty result.\"",
                                              "children": [
                                                {
                                                  "value": "\"error\", \"Image generation returned an empty result.\"",
                                                  "children": [
                                                    {
                                                      "value": "\"error\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "error",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "value": "\"Image generation returned an empty result.\"",
                                                      "children": [
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "Image generation returned an empty result.",
                                                          "children": []
                                                        },
                                                        {
                                                          "value": "\"",
                                                          "children": []
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "except Exception as e:\n            # Capture and return only the message of the exception, avoiding serialization of non-serializable objects\n            yield \"error\", str(e)",
                          "children": [
                            {
                              "value": "Exception as e",
                              "children": [
                                {
                                  "value": "Exception",
                                  "children": []
                                },
                                {
                                  "value": "e",
                                  "children": [
                                    {
                                      "value": "e",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "value": "# Capture and return only the message of the exception, avoiding serialization of non-serializable objects",
                              "children": []
                            },
                            {
                              "value": "yield \"error\", str(e)",
                              "children": [
                                {
                                  "value": "yield \"error\", str(e)",
                                  "children": [
                                    {
                                      "value": "yield \"error\", str(e)",
                                      "children": [
                                        {
                                          "value": "\"error\", str(e)",
                                          "children": [
                                            {
                                              "value": "\"error\"",
                                              "children": [
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                },
                                                {
                                                  "value": "error",
                                                  "children": []
                                                },
                                                {
                                                  "value": "\"",
                                                  "children": []
                                                }
                                              ]
                                            },
                                            {
                                              "value": "str(e)",
                                              "children": [
                                                {
                                                  "value": "str",
                                                  "children": []
                                                },
                                                {
                                                  "value": "(e)",
                                                  "children": [
                                                    {
                                                      "value": "e",
                                                      "children": []
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "# Test credentials stay the same",
      "children": []
    },
    {
      "value": "TEST_CREDENTIALS = APIKeyCredentials(\n    id=\"01234567-89ab-cdef-0123-456789abcdef\",\n    provider=\"replicate\",\n    api_key=SecretStr(\"mock-replicate-api-key\"),\n    title=\"Mock Replicate API key\",\n    expires_at=None,\n)",
      "children": [
        {
          "value": "TEST_CREDENTIALS = APIKeyCredentials(\n    id=\"01234567-89ab-cdef-0123-456789abcdef\",\n    provider=\"replicate\",\n    api_key=SecretStr(\"mock-replicate-api-key\"),\n    title=\"Mock Replicate API key\",\n    expires_at=None,\n)",
          "children": [
            {
              "value": "TEST_CREDENTIALS",
              "children": []
            },
            {
              "value": "APIKeyCredentials(\n    id=\"01234567-89ab-cdef-0123-456789abcdef\",\n    provider=\"replicate\",\n    api_key=SecretStr(\"mock-replicate-api-key\"),\n    title=\"Mock Replicate API key\",\n    expires_at=None,\n)",
              "children": [
                {
                  "value": "APIKeyCredentials",
                  "children": []
                },
                {
                  "value": "(\n    id=\"01234567-89ab-cdef-0123-456789abcdef\",\n    provider=\"replicate\",\n    api_key=SecretStr(\"mock-replicate-api-key\"),\n    title=\"Mock Replicate API key\",\n    expires_at=None,\n)",
                  "children": [
                    {
                      "value": "id=\"01234567-89ab-cdef-0123-456789abcdef\"",
                      "children": [
                        {
                          "value": "id",
                          "children": []
                        },
                        {
                          "value": "\"01234567-89ab-cdef-0123-456789abcdef\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "01234567-89ab-cdef-0123-456789abcdef",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "provider=\"replicate\"",
                      "children": [
                        {
                          "value": "provider",
                          "children": []
                        },
                        {
                          "value": "\"replicate\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "replicate",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "api_key=SecretStr(\"mock-replicate-api-key\")",
                      "children": [
                        {
                          "value": "api_key",
                          "children": []
                        },
                        {
                          "value": "SecretStr(\"mock-replicate-api-key\")",
                          "children": [
                            {
                              "value": "SecretStr",
                              "children": []
                            },
                            {
                              "value": "(\"mock-replicate-api-key\")",
                              "children": [
                                {
                                  "value": "\"mock-replicate-api-key\"",
                                  "children": [
                                    {
                                      "value": "\"",
                                      "children": []
                                    },
                                    {
                                      "value": "mock-replicate-api-key",
                                      "children": []
                                    },
                                    {
                                      "value": "\"",
                                      "children": []
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "title=\"Mock Replicate API key\"",
                      "children": [
                        {
                          "value": "title",
                          "children": []
                        },
                        {
                          "value": "\"Mock Replicate API key\"",
                          "children": [
                            {
                              "value": "\"",
                              "children": []
                            },
                            {
                              "value": "Mock Replicate API key",
                              "children": []
                            },
                            {
                              "value": "\"",
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": "expires_at=None",
                      "children": [
                        {
                          "value": "expires_at",
                          "children": []
                        },
                        {
                          "value": "None",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "value": "TEST_CREDENTIALS_INPUT = {\n    \"provider\": TEST_CREDENTIALS.provider,\n    \"id\": TEST_CREDENTIALS.id,\n    \"type\": TEST_CREDENTIALS.type,\n    \"title\": TEST_CREDENTIALS.title,\n}",
      "children": [
        {
          "value": "TEST_CREDENTIALS_INPUT = {\n    \"provider\": TEST_CREDENTIALS.provider,\n    \"id\": TEST_CREDENTIALS.id,\n    \"type\": TEST_CREDENTIALS.type,\n    \"title\": TEST_CREDENTIALS.title,\n}",
          "children": [
            {
              "value": "TEST_CREDENTIALS_INPUT",
              "children": []
            },
            {
              "value": "{\n    \"provider\": TEST_CREDENTIALS.provider,\n    \"id\": TEST_CREDENTIALS.id,\n    \"type\": TEST_CREDENTIALS.type,\n    \"title\": TEST_CREDENTIALS.title,\n}",
              "children": [
                {
                  "value": "\"provider\": TEST_CREDENTIALS.provider",
                  "children": [
                    {
                      "value": "\"provider\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "provider",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "TEST_CREDENTIALS.provider",
                      "children": [
                        {
                          "value": "TEST_CREDENTIALS",
                          "children": []
                        },
                        {
                          "value": "provider",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "\"id\": TEST_CREDENTIALS.id",
                  "children": [
                    {
                      "value": "\"id\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "id",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "TEST_CREDENTIALS.id",
                      "children": [
                        {
                          "value": "TEST_CREDENTIALS",
                          "children": []
                        },
                        {
                          "value": "id",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "\"type\": TEST_CREDENTIALS.type",
                  "children": [
                    {
                      "value": "\"type\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "type",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "TEST_CREDENTIALS.type",
                      "children": [
                        {
                          "value": "TEST_CREDENTIALS",
                          "children": []
                        },
                        {
                          "value": "type",
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "value": "\"title\": TEST_CREDENTIALS.title",
                  "children": [
                    {
                      "value": "\"title\"",
                      "children": [
                        {
                          "value": "\"",
                          "children": []
                        },
                        {
                          "value": "title",
                          "children": []
                        },
                        {
                          "value": "\"",
                          "children": []
                        }
                      ]
                    },
                    {
                      "value": "TEST_CREDENTIALS.title",
                      "children": [
                        {
                          "value": "TEST_CREDENTIALS",
                          "children": []
                        },
                        {
                          "value": "title",
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}