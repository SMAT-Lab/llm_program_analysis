{
  "nodes": [
    {
      "id": "n0",
      "code": "from typing import Optional\n\nfrom pydantic import BaseModel\n\nfrom backend.data.model import SchemaField\n"
    },
    {
      "id": "n1",
      "code": "class TextSettings(BaseModel):\n\n    max_characters: int = SchemaField(\n        default=1000,\n        description=\"Maximum number of characters to return\",\n        placeholder=\"1000\",\n    )\n\n    include_html_tags: bool = SchemaField(\n        default=False,\n        description=\"Whether to include HTML tags in the text\",\n        placeholder=\"False\",\n    )\n"
    },
    {
      "id": "n2",
      "code": "class HighlightSettings(BaseModel):\n\n    num_sentences: int = SchemaField(\n        default=3,\n        description=\"Number of sentences per highlight\",\n        placeholder=\"3\",\n    )\n\n    highlights_per_url: int = SchemaField(\n        default=3,\n        description=\"Number of highlights per URL\",\n        placeholder=\"3\",\n    )\n"
    },
    {
      "id": "n3",
      "code": "class SummarySettings(BaseModel):\n\n    query: Optional[str] = SchemaField(\n        default=\"\",\n        description=\"Query string for summarization\",\n        placeholder=\"Enter query\",\n    )\n"
    },
    {
      "id": "n4",
      "code": "class ContentSettings(BaseModel):\n\n    text: TextSettings = SchemaField(\n        default=TextSettings(),\n        description=\"Text content settings\",\n    )\n\n    highlights: HighlightSettings = SchemaField(\n        default=HighlightSettings(),\n        description=\"Highlight settings\",\n    )\n\n    summary: SummarySettings = SchemaField(\n        default=SummarySettings(),\n        description=\"Summary settings\",\n    )\n"
    }
  ],
  "edges": []
}