{
  "nodes": [
    {
      "id": "n0",
      "code": "from typing import Literal\n\nfrom pydantic import SecretStr\n\nfrom backend.data.model import APIKeyCredentials, CredentialsField, CredentialsMetaInput\nfrom backend.integrations.providers import ProviderName\n\nJinaCredentials = APIKeyCredentials\nJinaCredentialsInput = CredentialsMetaInput[\n    Literal[ProviderName.JINA],\n    Literal[\"api_key\"],\n]\n"
    },
    {
      "id": "n1",
      "code": "def JinaCredentialsField() -> JinaCredentialsInput:\n    \"\"\"\n    Creates a Jina credentials input on a block.\n\n    \"\"\"\n\n    return CredentialsField(\n        description=\"The Jina integration can be used with an API Key.\",\n    )\n"
    },
    {
      "id": "n2",
      "code": "TEST_CREDENTIALS = APIKeyCredentials(\n    id=\"01234567-89ab-cdef-0123-456789abcdef\",\n    provider=\"jina\",\n    api_key=SecretStr(\"mock-jina-api-key\"),\n    title=\"Mock Jina API key\",\n    expires_at=None,\n)\n\nTEST_CREDENTIALS_INPUT = {\n    \"provider\": TEST_CREDENTIALS.provider,\n    \"id\": TEST_CREDENTIALS.id,\n    \"type\": TEST_CREDENTIALS.type,\n    \"title\": TEST_CREDENTIALS.type,\n}\n"
    }
  ],
  "edges": []
}