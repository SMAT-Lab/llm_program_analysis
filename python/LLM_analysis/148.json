{
  "nodes": [
    {
      "id": "n0",
      "code": "from abc import ABCMeta\nfrom enum import Enum\n"
    },
    {
      "id": "n1",
      "code": "class UserService(object):\n\n\n    def __init__(self):\n        self.users_by_id = {}  # key: user id, value: User\n\n\n    def add_user(self, user_id, name, pass_hash):\n        pass\n\n\n\n    def remove_user(self, user_id):\n        pass\n\n\n\n    def add_friend_request(self, from_user_id, to_user_id):\n        pass\n\n\n\n    def approve_friend_request(self, from_user_id, to_user_id):\n        pass\n\n\n\n    def reject_friend_request(self, from_user_id, to_user_id):\n        pass\n\n\n\n\n"
    },
    {
      "id": "n2",
      "code": "    def __init__(self):\n        self.users_by_id = {}  # key: user id, value: User\n"
    },
    {
      "id": "n3",
      "code": "    def add_user(self, user_id, name, pass_hash):\n        pass\n"
    },
    {
      "id": "n4",
      "code": "    def remove_user(self, user_id):\n        pass\n"
    },
    {
      "id": "n5",
      "code": "    def add_friend_request(self, from_user_id, to_user_id):\n        pass\n"
    },
    {
      "id": "n6",
      "code": "    def approve_friend_request(self, from_user_id, to_user_id):\n        pass\n"
    },
    {
      "id": "n7",
      "code": "    def reject_friend_request(self, from_user_id, to_user_id):\n        pass\n"
    },
    {
      "id": "n8",
      "code": "class User(object):\n\n\n    def __init__(self, user_id, name, pass_hash):\n        self.user_id = user_id\n        self.name = name\n        self.pass_hash = pass_hash\n        self.friends_by_id = {}  # key: friend id, value: User\n        self.friend_ids_to_private_chats = {}  # key: friend id, value: private chats\n        self.group_chats_by_id = {}  # key: chat id, value: GroupChat\n        self.received_friend_requests_by_friend_id = {}  # key: friend id, value: AddRequest\n        self.sent_friend_requests_by_friend_id = {}  # key: friend id, value: AddRequest\n\n\n    def message_user(self, friend_id, message):\n        pass\n\n\n\n    def message_group(self, group_id, message):\n        pass\n\n\n\n    def send_friend_request(self, friend_id):\n        pass\n\n\n\n    def receive_friend_request(self, friend_id):\n        pass\n\n\n\n    def approve_friend_request(self, friend_id):\n        pass\n\n\n\n    def reject_friend_request(self, friend_id):\n        pass\n\n\n\n\n"
    },
    {
      "id": "n9",
      "code": "    def __init__(self, user_id, name, pass_hash):\n        self.user_id = user_id\n        self.name = name\n        self.pass_hash = pass_hash\n        self.friends_by_id = {}  # key: friend id, value: User\n        self.friend_ids_to_private_chats = {}  # key: friend id, value: private chats\n        self.group_chats_by_id = {}  # key: chat id, value: GroupChat\n        self.received_friend_requests_by_friend_id = {}  # key: friend id, value: AddRequest\n        self.sent_friend_requests_by_friend_id = {}  # key: friend id, value: AddRequest\n"
    },
    {
      "id": "n10",
      "code": "    def message_user(self, friend_id, message):\n        pass\n"
    },
    {
      "id": "n11",
      "code": "    def message_group(self, group_id, message):\n        pass\n"
    },
    {
      "id": "n12",
      "code": "    def send_friend_request(self, friend_id):\n        pass\n"
    },
    {
      "id": "n13",
      "code": "    def receive_friend_request(self, friend_id):\n        pass\n"
    },
    {
      "id": "n14",
      "code": "    def approve_friend_request(self, friend_id):\n        pass\n"
    },
    {
      "id": "n15",
      "code": "    def reject_friend_request(self, friend_id):\n        pass\n"
    },
    {
      "id": "n16",
      "code": "class Chat(metaclass=ABCMeta):\n"
    },
    {
      "id": "n17",
      "code": "    def __init__(self, chat_id):\n        self.chat_id = chat_id\n        self.users = []\n        self.messages = []\n"
    },
    {
      "id": "n18",
      "code": "    def __init__(self, chat_id):\n        self.chat_id = chat_id\n        self.users = []\n        self.messages = []\n"
    },
    {
      "id": "n19",
      "code": "class PrivateChat(Chat):\n"
    },
    {
      "id": "n20",
      "code": "    def __init__(self, first_user, second_user):\n        super(PrivateChat, self).__init__()\n        self.users.append(first_user)\n        self.users.append(second_user)\n"
    },
    {
      "id": "n21",
      "code": "    def __init__(self, first_user, second_user):\n        super(PrivateChat, self).__init__()\n        self.users.append(first_user)\n        self.users.append(second_user)\n"
    },
    {
      "id": "n22",
      "code": "class GroupChat(Chat):\n"
    },
    {
      "id": "n23",
      "code": "    def add_user(self, user):\n        pass\n"
    },
    {
      "id": "n24",
      "code": "    def remove_user(self, user):\n        pass\n"
    },
    {
      "id": "n25",
      "code": "    def add_user(self, user):\n        pass\n"
    },
    {
      "id": "n26",
      "code": "    def remove_user(self, user):\n        pass\n"
    },
    {
      "id": "n27",
      "code": "class Message(object):\n"
    },
    {
      "id": "n28",
      "code": "    def __init__(self, message_id, message, timestamp):\n        self.message_id = message_id\n        self.message = message\n        self.timestamp = timestamp\n"
    },
    {
      "id": "n29",
      "code": "    def __init__(self, message_id, message, timestamp):\n        self.message_id = message_id\n        self.message = message\n        self.timestamp = timestamp\n"
    },
    {
      "id": "n30",
      "code": "class AddRequest(object):\n"
    },
    {
      "id": "n31",
      "code": "    def __init__(self, from_user_id, to_user_id, request_status, timestamp):\n        self.from_user_id = from_user_id\n        self.to_user_id = to_user_id\n        self.request_status = request_status\n        self.timestamp = timestamp\n"
    },
    {
      "id": "n32",
      "code": "    def __init__(self, from_user_id, to_user_id, request_status, timestamp):\n        self.from_user_id = from_user_id\n        self.to_user_id = to_user_id\n        self.request_status = request_status\n        self.timestamp = timestamp\n"
    },
    {
      "id": "n33",
      "code": "class RequestStatus(Enum):\n\n\n    UNREAD = 0\n    READ = 1\n    ACCEPTED = 2\n    REJECTED = 3\n\n\n\n"
    }
  ],
  "edges": []
}