{
    "type": "Program",
    "name": "Global",
    "range": [
        30,
        1426
    ],
    "children": [
        {
            "type": "ClassDecl",
            "name": "CodeExtractionBlock",
            "range": [
                30,
                62
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "Block",
                    "range": [
                        32,
                        34
                    ],
                    "children": [],
                    "content": "(Block)"
                }
            ],
            "content": "class CodeExtractionBlock(Block):\nclass Input(BlockSchema):\ntext:str=SchemaField(\ndescription=\"Text containing code blocks to extract (e.g., AI response)\",\nplaceholder=\"Enter text containing code blocks\",\n)\n"
        },
        {
            "type": "ClassDecl",
            "name": "Input",
            "range": [
                37,
                62
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "BlockSchema",
                    "range": [
                        39,
                        41
                    ],
                    "children": [],
                    "content": "(BlockSchema)"
                },
                {
                    "type": "FieldDecl",
                    "name": "text",
                    "range": [
                        44,
                        61
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                46,
                                48
                            ],
                            "children": [],
                            "content": "str=SchemaField"
                        },
                        {
                            "type": "Assignment",
                            "name": "=",
                            "range": [
                                47,
                                48
                            ],
                            "children": [
                                {
                                    "type": "SchemaField",
                                    "name": "SchemaField",
                                    "range": [
                                        48,
                                        61
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "description",
                                            "range": [
                                                51,
                                                53
                                            ],
                                            "children": [],
                                            "content": "description=\"Text containing code blocks to extract (e.g., AI response)\""
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "placeholder",
                                            "range": [
                                                56,
                                                58
                                            ],
                                            "children": [],
                                            "content": "placeholder=\"Enter text containing code blocks\""
                                        }
                                    ],
                                    "content": "SchemaField(\ndescription=\"Text containing code blocks to extract (e.g., AI response)\",\nplaceholder=\"Enter text containing code blocks\",\n)"
                                }
                            ],
                            "content": "=SchemaField"
                        }
                    ],
                    "content": "text:str=SchemaField(\ndescription=\"Text containing code blocks to extract (e.g., AI response)\",\nplaceholder=\"Enter text containing code blocks\",\n)"
                }
            ],
            "content": "class Input(BlockSchema):\ntext:str=SchemaField(\ndescription=\"Text containing code blocks to extract (e.g., AI response)\",\nplaceholder=\"Enter text containing code blocks\",\n)\n"
        },
        {
            "type": "ClassDecl",
            "name": "Output",
            "range": [
                64,
                259
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "BlockSchema",
                    "range": [
                        66,
                        68
                    ],
                    "children": [],
                    "content": "(BlockSchema)"
                },
                {
                    "type": "FieldDecl",
                    "name": "html",
                    "range": [
                        71,
                        80
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                73,
                                75
                            ],
                            "children": [],
                            "content": "str=SchemaField"
                        },
                        {
                            "type": "Assignment",
                            "name": "=",
                            "range": [
                                74,
                                75
                            ],
                            "children": [
                                {
                                    "type": "SchemaField",
                                    "name": "SchemaField",
                                    "range": [
                                        75,
                                        80
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "description",
                                            "range": [
                                                77,
                                                79
                                            ],
                                            "children": [],
                                            "content": "description=\"Extracted HTML code\""
                                        }
                                    ],
                                    "content": "SchemaField(description=\"Extracted HTML code\")"
                                }
                            ],
                            "content": "=SchemaField"
                        }
                    ],
                    "content": "html:str=SchemaField(description=\"Extracted HTML code\")"
                },
                {
                    "type": "FieldDecl",
                    "name": "css",
                    "range": [
                        82,
                        91
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                84,
                                86
                            ],
                            "children": [],
                            "content": "str=SchemaField"
                        },
                        {
                            "type": "Assignment",
                            "name": "=",
                            "range": [
                                85,
                                86
                            ],
                            "children": [
                                {
                                    "type": "SchemaField",
                                    "name": "SchemaField",
                                    "range": [
                                        86,
                                        91
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "description",
                                            "range": [
                                                88,
                                                90
                                            ],
                                            "children": [],
                                            "content": "description=\"Extracted CSS code\""
                                        }
                                    ],
                                    "content": "SchemaField(description=\"Extracted CSS code\")"
                                }
                            ],
                            "content": "=SchemaField"
                        }
                    ],
                    "content": "css:str=SchemaField(description=\"Extracted CSS code\")"
                },
                {
                    "type": "FieldDecl",
                    "name": "javascript",
                    "range": [
                        93,
                        102
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                95,
                                97
                            ],
                            "children": [],
                            "content": "str=SchemaField"
                        },
                        {
                            "type": "Assignment",
                            "name": "=",
                            "range": [
                                96,
                                97
                            ],
                            "children": [
                                {
                                    "type": "SchemaField",
                                    "name": "SchemaField",
                                    "range": [
                                        97,
                                        102
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "description",
                                            "range": [
                                                99,
                                                101
                                            ],
                                            "children": [],
                                            "content": "description=\"Extracted JavaScript code\""
                                        }
                                    ],
                                    "content": "SchemaField(description=\"Extracted JavaScript code\")"
                                }
                            ],
                            "content": "=SchemaField"
                        }
                    ],
                    "content": "javascript:str=SchemaField(description=\"Extracted JavaScript code\")"
                },
                {
                    "type": "FieldDecl",
                    "name": "python",
                    "range": [
                        104,
                        113
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                106,
                                108
                            ],
                            "children": [],
                            "content": "str=SchemaField"
                        },
                        {
                            "type": "Assignment",
                            "name": "=",
                            "range": [
                                107,
                                108
                            ],
                            "children": [
                                {
                                    "type": "SchemaField",
                                    "name": "SchemaField",
                                    "range": [
                                        108,
                                        113
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "description",
                                            "range": [
                                                110,
                                                112
                                            ],
                                            "children": [],
                                            "content": "description=\"Extracted Python code\""
                                        }
                                    ],
                                    "content": "SchemaField(description=\"Extracted Python code\")"
                                }
                            ],
                            "content": "=SchemaField"
                        }
                    ],
                    "content": "python:str=SchemaField(description=\"Extracted Python code\")"
                },
                {
                    "type": "FieldDecl",
                    "name": "sql",
                    "range": [
                        115,
                        124
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                117,
                                119
                            ],
                            "children": [],
                            "content": "str=SchemaField"
                        },
                        {
                            "type": "Assignment",
                            "name": "=",
                            "range": [
                                118,
                                119
                            ],
                            "children": [
                                {
                                    "type": "SchemaField",
                                    "name": "SchemaField",
                                    "range": [
                                        119,
                                        124
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "description",
                                            "range": [
                                                121,
                                                123
                                            ],
                                            "children": [],
                                            "content": "description=\"Extracted SQL code\""
                                        }
                                    ],
                                    "content": "SchemaField(description=\"Extracted SQL code\")"
                                }
                            ],
                            "content": "=SchemaField"
                        }
                    ],
                    "content": "sql:str=SchemaField(description=\"Extracted SQL code\")"
                },
                {
                    "type": "FieldDecl",
                    "name": "java",
                    "range": [
                        126,
                        135
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                128,
                                130
                            ],
                            "children": [],
                            "content": "str=SchemaField"
                        },
                        {
                            "type": "Assignment",
                            "name": "=",
                            "range": [
                                129,
                                130
                            ],
                            "children": [
                                {
                                    "type": "SchemaField",
                                    "name": "SchemaField",
                                    "range": [
                                        130,
                                        135
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "description",
                                            "range": [
                                                132,
                                                134
                                            ],
                                            "children": [],
                                            "content": "description=\"Extracted Java code\""
                                        }
                                    ],
                                    "content": "SchemaField(description=\"Extracted Java code\")"
                                }
                            ],
                            "content": "=SchemaField"
                        }
                    ],
                    "content": "java:str=SchemaField(description=\"Extracted Java code\")"
                },
                {
                    "type": "FieldDecl",
                    "name": "cpp",
                    "range": [
                        137,
                        146
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                139,
                                141
                            ],
                            "children": [],
                            "content": "str=SchemaField"
                        },
                        {
                            "type": "Assignment",
                            "name": "=",
                            "range": [
                                140,
                                141
                            ],
                            "children": [
                                {
                                    "type": "SchemaField",
                                    "name": "SchemaField",
                                    "range": [
                                        141,
                                        146
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "description",
                                            "range": [
                                                143,
                                                145
                                            ],
                                            "children": [],
                                            "content": "description=\"Extracted C++ code\""
                                        }
                                    ],
                                    "content": "SchemaField(description=\"Extracted C++ code\")"
                                }
                            ],
                            "content": "=SchemaField"
                        }
                    ],
                    "content": "cpp:str=SchemaField(description=\"Extracted C++ code\")"
                },
                {
                    "type": "FieldDecl",
                    "name": "csharp",
                    "range": [
                        148,
                        157
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                150,
                                152
                            ],
                            "children": [],
                            "content": "str=SchemaField"
                        },
                        {
                            "type": "Assignment",
                            "name": "=",
                            "range": [
                                151,
                                152
                            ],
                            "children": [
                                {
                                    "type": "SchemaField",
                                    "name": "SchemaField",
                                    "range": [
                                        152,
                                        157
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "description",
                                            "range": [
                                                154,
                                                156
                                            ],
                                            "children": [],
                                            "content": "description=\"Extracted C# code\""
                                        }
                                    ],
                                    "content": "SchemaField(description=\"Extracted C# code\")"
                                }
                            ],
                            "content": "=SchemaField"
                        }
                    ],
                    "content": "csharp:str=SchemaField(description=\"Extracted C# code\")"
                },
                {
                    "type": "FieldDecl",
                    "name": "json_code",
                    "range": [
                        159,
                        168
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                161,
                                163
                            ],
                            "children": [],
                            "content": "str=SchemaField"
                        },
                        {
                            "type": "Assignment",
                            "name": "=",
                            "range": [
                                162,
                                163
                            ],
                            "children": [
                                {
                                    "type": "SchemaField",
                                    "name": "SchemaField",
                                    "range": [
                                        163,
                                        168
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "description",
                                            "range": [
                                                165,
                                                167
                                            ],
                                            "children": [],
                                            "content": "description=\"Extracted JSON code\""
                                        }
                                    ],
                                    "content": "SchemaField(description=\"Extracted JSON code\")"
                                }
                            ],
                            "content": "=SchemaField"
                        }
                    ],
                    "content": "json_code:str=SchemaField(description=\"Extracted JSON code\")"
                },
                {
                    "type": "FieldDecl",
                    "name": "bash",
                    "range": [
                        170,
                        179
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                172,
                                174
                            ],
                            "children": [],
                            "content": "str=SchemaField"
                        },
                        {
                            "type": "Assignment",
                            "name": "=",
                            "range": [
                                173,
                                174
                            ],
                            "children": [
                                {
                                    "type": "SchemaField",
                                    "name": "SchemaField",
                                    "range": [
                                        174,
                                        179
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "description",
                                            "range": [
                                                176,
                                                178
                                            ],
                                            "children": [],
                                            "content": "description=\"Extracted Bash code\""
                                        }
                                    ],
                                    "content": "SchemaField(description=\"Extracted Bash code\")"
                                }
                            ],
                            "content": "=SchemaField"
                        }
                    ],
                    "content": "bash:str=SchemaField(description=\"Extracted Bash code\")"
                },
                {
                    "type": "FieldDecl",
                    "name": "php",
                    "range": [
                        181,
                        190
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                183,
                                185
                            ],
                            "children": [],
                            "content": "str=SchemaField"
                        },
                        {
                            "type": "Assignment",
                            "name": "=",
                            "range": [
                                184,
                                185
                            ],
                            "children": [
                                {
                                    "type": "SchemaField",
                                    "name": "SchemaField",
                                    "range": [
                                        185,
                                        190
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "description",
                                            "range": [
                                                187,
                                                189
                                            ],
                                            "children": [],
                                            "content": "description=\"Extracted PHP code\""
                                        }
                                    ],
                                    "content": "SchemaField(description=\"Extracted PHP code\")"
                                }
                            ],
                            "content": "=SchemaField"
                        }
                    ],
                    "content": "php:str=SchemaField(description=\"Extracted PHP code\")"
                },
                {
                    "type": "FieldDecl",
                    "name": "ruby",
                    "range": [
                        192,
                        201
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                194,
                                196
                            ],
                            "children": [],
                            "content": "str=SchemaField"
                        },
                        {
                            "type": "Assignment",
                            "name": "=",
                            "range": [
                                195,
                                196
                            ],
                            "children": [
                                {
                                    "type": "SchemaField",
                                    "name": "SchemaField",
                                    "range": [
                                        196,
                                        201
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "description",
                                            "range": [
                                                198,
                                                200
                                            ],
                                            "children": [],
                                            "content": "description=\"Extracted Ruby code\""
                                        }
                                    ],
                                    "content": "SchemaField(description=\"Extracted Ruby code\")"
                                }
                            ],
                            "content": "=SchemaField"
                        }
                    ],
                    "content": "ruby:str=SchemaField(description=\"Extracted Ruby code\")"
                },
                {
                    "type": "FieldDecl",
                    "name": "yaml",
                    "range": [
                        203,
                        212
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                205,
                                207
                            ],
                            "children": [],
                            "content": "str=SchemaField"
                        },
                        {
                            "type": "Assignment",
                            "name": "=",
                            "range": [
                                206,
                                207
                            ],
                            "children": [
                                {
                                    "type": "SchemaField",
                                    "name": "SchemaField",
                                    "range": [
                                        207,
                                        212
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "description",
                                            "range": [
                                                209,
                                                211
                                            ],
                                            "children": [],
                                            "content": "description=\"Extracted YAML code\""
                                        }
                                    ],
                                    "content": "SchemaField(description=\"Extracted YAML code\")"
                                }
                            ],
                            "content": "=SchemaField"
                        }
                    ],
                    "content": "yaml:str=SchemaField(description=\"Extracted YAML code\")"
                },
                {
                    "type": "FieldDecl",
                    "name": "markdown",
                    "range": [
                        214,
                        223
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                216,
                                218
                            ],
                            "children": [],
                            "content": "str=SchemaField"
                        },
                        {
                            "type": "Assignment",
                            "name": "=",
                            "range": [
                                217,
                                218
                            ],
                            "children": [
                                {
                                    "type": "SchemaField",
                                    "name": "SchemaField",
                                    "range": [
                                        218,
                                        223
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "description",
                                            "range": [
                                                220,
                                                222
                                            ],
                                            "children": [],
                                            "content": "description=\"Extracted Markdown code\""
                                        }
                                    ],
                                    "content": "SchemaField(description=\"Extracted Markdown code\")"
                                }
                            ],
                            "content": "=SchemaField"
                        }
                    ],
                    "content": "markdown:str=SchemaField(description=\"Extracted Markdown code\")"
                },
                {
                    "type": "FieldDecl",
                    "name": "typescript",
                    "range": [
                        225,
                        234
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                227,
                                229
                            ],
                            "children": [],
                            "content": "str=SchemaField"
                        },
                        {
                            "type": "Assignment",
                            "name": "=",
                            "range": [
                                228,
                                229
                            ],
                            "children": [
                                {
                                    "type": "SchemaField",
                                    "name": "SchemaField",
                                    "range": [
                                        229,
                                        234
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "description",
                                            "range": [
                                                231,
                                                233
                                            ],
                                            "children": [],
                                            "content": "description=\"Extracted TypeScript code\""
                                        }
                                    ],
                                    "content": "SchemaField(description=\"Extracted TypeScript code\")"
                                }
                            ],
                            "content": "=SchemaField"
                        }
                    ],
                    "content": "typescript:str=SchemaField(description=\"Extracted TypeScript code\")"
                },
                {
                    "type": "FieldDecl",
                    "name": "xml",
                    "range": [
                        236,
                        245
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                238,
                                240
                            ],
                            "children": [],
                            "content": "str=SchemaField"
                        },
                        {
                            "type": "Assignment",
                            "name": "=",
                            "range": [
                                239,
                                240
                            ],
                            "children": [
                                {
                                    "type": "SchemaField",
                                    "name": "SchemaField",
                                    "range": [
                                        240,
                                        245
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "description",
                                            "range": [
                                                242,
                                                244
                                            ],
                                            "children": [],
                                            "content": "description=\"Extracted XML code\""
                                        }
                                    ],
                                    "content": "SchemaField(description=\"Extracted XML code\")"
                                }
                            ],
                            "content": "=SchemaField"
                        }
                    ],
                    "content": "xml:str=SchemaField(description=\"Extracted XML code\")"
                },
                {
                    "type": "FieldDecl",
                    "name": "remaining_text",
                    "range": [
                        247,
                        258
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                249,
                                251
                            ],
                            "children": [],
                            "content": "str=SchemaField"
                        },
                        {
                            "type": "Assignment",
                            "name": "=",
                            "range": [
                                250,
                                251
                            ],
                            "children": [
                                {
                                    "type": "SchemaField",
                                    "name": "SchemaField",
                                    "range": [
                                        251,
                                        258
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "description",
                                            "range": [
                                                254,
                                                256
                                            ],
                                            "children": [],
                                            "content": "description=\"Remaining text after code extraction\""
                                        }
                                    ],
                                    "content": "SchemaField(\ndescription=\"Remaining text after code extraction\"\n)"
                                }
                            ],
                            "content": "=SchemaField"
                        }
                    ],
                    "content": "remaining_text:str=SchemaField(\ndescription=\"Remaining text after code extraction\"\n)"
                }
            ],
            "content": "class Output(BlockSchema):\nhtml:str=SchemaField(description=\"Extracted HTML code\")\ncss:str=SchemaField(description=\"Extracted CSS code\")\njavascript:str=SchemaField(description=\"Extracted JavaScript code\")\npython:str=SchemaField(description=\"Extracted Python code\")\nsql:str=SchemaField(description=\"Extracted SQL code\")\njava:str=SchemaField(description=\"Extracted Java code\")\ncpp:str=SchemaField(description=\"Extracted C++ code\")\ncsharp:str=SchemaField(description=\"Extracted C# code\")\njson_code:str=SchemaField(description=\"Extracted JSON code\")\nbash:str=SchemaField(description=\"Extracted Bash code\")\nphp:str=SchemaField(description=\"Extracted PHP code\")\nruby:str=SchemaField(description=\"Extracted Ruby code\")\nyaml:str=SchemaField(description=\"Extracted YAML code\")\nmarkdown:str=SchemaField(description=\"Extracted Markdown code\")\ntypescript:str=SchemaField(description=\"Extracted TypeScript code\")\nxml:str=SchemaField(description=\"Extracted XML code\")\nremaining_text:str=SchemaField(\ndescription=\"Remaining text after code extraction\"\n)\n"
        },
        {
            "type": "FunctionDecl",
            "name": "__init__",
            "range": [
                261,
                348
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "self",
                    "range": [
                        264,
                        265
                    ],
                    "children": [],
                    "content": "self)"
                },
                {
                    "type": "SuperCall",
                    "name": "super",
                    "range": [
                        268,
                        273
                    ],
                    "children": [],
                    "content": "super().__init__("
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        276,
                        277
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "\"d3a7d896-3b78-4f44-8b4b-48fbf4f0bcd8\"",
                            "range": [
                                277,
                                278
                            ],
                            "children": [],
                            "content": "\"d3a7d896-3b78-4f44-8b4b-48fbf4f0bcd8\","
                        }
                    ],
                    "content": "=\"d3a7d896-3b78-4f44-8b4b-48fbf4f0bcd8\""
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        281,
                        282
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "\"Extracts code blocks from text and identifies their programming languages\"",
                            "range": [
                                282,
                                283
                            ],
                            "children": [],
                            "content": "\"Extracts code blocks from text and identifies their programming languages\","
                        }
                    ],
                    "content": "=\"Extracts code blocks from text and identifies their programming languages\""
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        286,
                        287
                    ],
                    "children": [
                        {
                            "type": "ObjectLiteral",
                            "name": "{BlockCategory.TEXT}",
                            "range": [
                                287,
                                291
                            ],
                            "children": [],
                            "content": "{BlockCategory.TEXT}"
                        }
                    ],
                    "content": "={"
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        295,
                        296
                    ],
                    "children": [
                        {
                            "type": "MemberExpression",
                            "name": "CodeExtractionBlock.Input",
                            "range": [
                                296,
                                298
                            ],
                            "children": [],
                            "content": "CodeExtractionBlock.Input"
                        }
                    ],
                    "content": "=CodeExtractionBlock"
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        302,
                        303
                    ],
                    "children": [
                        {
                            "type": "MemberExpression",
                            "name": "CodeExtractionBlock.Output",
                            "range": [
                                303,
                                305
                            ],
                            "children": [],
                            "content": "CodeExtractionBlock.Output"
                        }
                    ],
                    "content": "=CodeExtractionBlock"
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        309,
                        310
                    ],
                    "children": [
                        {
                            "type": "ObjectLiteral",
                            "name": "{\"text\": \"Here's a Python example:\\n```python\\nprint('Hello World')\\n```\\nAnd some HTML:\\n```html\\n<h1>Title</h1>\\n```\"}",
                            "range": [
                                310,
                                316
                            ],
                            "children": [],
                            "content": "{\n\"text\":\"Here's a Python example:\\n```python\\nprint('Hello World')\\n```\\nAnd some HTML:\\n```html\\n<h1>Title</h1>\\n```\"\n}"
                        }
                    ],
                    "content": "={"
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        320,
                        321
                    ],
                    "children": [
                        {
                            "type": "ArrayLiteral",
                            "name": "[(\"html\", \"<h1>Title</h1>\"), (\"python\", \"print('Hello World')\"), (\"remaining_text\", \"Here's a Python example:\\nAnd some HTML:\")]",
                            "range": [
                                321,
                                344
                            ],
                            "children": [],
                            "content": "[\n(\"html\",\"<h1>Title</h1>\"),\n(\"python\",\"print('Hello World')\"),\n(\"remaining_text\",\"Here's a Python example:\\nAnd some HTML:\"),\n]"
                        }
                    ],
                    "content": "=["
                }
            ],
            "content": "def __init__(self):\nsuper().__init__(\nid=\"d3a7d896-3b78-4f44-8b4b-48fbf4f0bcd8\",\ndescription=\"Extracts code blocks from text and identifies their programming languages\",\ncategories={BlockCategory.TEXT},\ninput_schema=CodeExtractionBlock.Input,\noutput_schema=CodeExtractionBlock.Output,\ntest_input={\n\"text\":\"Here's a Python example:\\n```python\\nprint('Hello World')\\n```\\nAnd some HTML:\\n```html\\n<h1>Title</h1>\\n```\"\n},\ntest_output=[\n(\"html\",\"<h1>Title</h1>\"),\n(\"python\",\"print('Hello World')\"),\n(\"remaining_text\",\"Here's a Python example:\\nAnd some HTML:\"),\n],\n)\n"
        },
        {
            "type": "FunctionDecl",
            "name": "run",
            "range": [
                350,
                606
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "self",
                    "range": [
                        353,
                        354
                    ],
                    "children": [],
                    "content": "self,"
                },
                {
                    "type": "Parameter",
                    "name": "input_data",
                    "range": [
                        355,
                        357
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "Input",
                            "range": [
                                357,
                                358
                            ],
                            "children": [],
                            "content": "Input,"
                        }
                    ],
                    "content": "input_data:Input"
                },
                {
                    "type": "Parameter",
                    "name": "kwargs",
                    "range": [
                        361,
                        362
                    ],
                    "children": [],
                    "content": "kwargs)"
                },
                {
                    "type": "ReturnType",
                    "name": "BlockOutput",
                    "range": [
                        365,
                        366
                    ],
                    "children": [],
                    "content": "BlockOutput:"
                },
                {
                    "type": "VariableDecl",
                    "name": "language_aliases",
                    "range": [
                        378,
                        518
                    ],
                    "children": [
                        {
                            "type": "ObjectLiteral",
                            "name": "{\"html\": [\"html\", \"htm\"], \"css\": [\"css\"], \"javascript\": [\"javascript\", \"js\"], \"python\": [\"python\", \"py\"], \"sql\": [\"sql\"], \"java\": [\"java\"], \"cpp\": [\"cpp\", \"c++\"], \"csharp\": [\"csharp\", \"c#\", \"cs\"], \"json_code\": [\"json\"], \"bash\": [\"bash\", \"shell\", \"sh\"], \"php\": [\"php\"], \"ruby\": [\"ruby\", \"rb\"], \"yaml\": [\"yaml\", \"yml\"], \"markdown\": [\"markdown\", \"md\"], \"typescript\": [\"typescript\", \"ts\"], \"xml\": [\"xml\"]}",
                            "range": [
                                380,
                                518
                            ],
                            "children": [],
                            "content": "{\n\"html\":[\"html\",\"htm\"],\n\"css\":[\"css\"],\n\"javascript\":[\"javascript\",\"js\"],\n\"python\":[\"python\",\"py\"],\n\"sql\":[\"sql\"],\n\"java\":[\"java\"],\n\"cpp\":[\"cpp\",\"c++\"],\n\"csharp\":[\"csharp\",\"c#\",\"cs\"],\n\"json_code\":[\"json\"],\n\"bash\":[\"bash\",\"shell\",\"sh\"],\n\"php\":[\"php\"],\n\"ruby\":[\"ruby\",\"rb\"],\n\"yaml\":[\"yaml\",\"yml\"],\n\"markdown\":[\"markdown\",\"md\"],\n\"typescript\":[\"typescript\",\"ts\"],\n\"xml\":[\"xml\"],\n}"
                        }
                    ],
                    "content": "language_aliases={\n\"html\":[\"html\",\"htm\"],\n\"css\":[\"css\"],\n\"javascript\":[\"javascript\",\"js\"],\n\"python\":[\"python\",\"py\"],\n\"sql\":[\"sql\"],\n\"java\":[\"java\"],\n\"cpp\":[\"cpp\",\"c++\"],\n\"csharp\":[\"csharp\",\"c#\",\"cs\"],\n\"json_code\":[\"json\"],\n\"bash\":[\"bash\",\"shell\",\"sh\"],\n\"php\":[\"php\"],\n\"ruby\":[\"ruby\",\"rb\"],\n\"yaml\":[\"yaml\",\"yml\"],\n\"markdown\":[\"markdown\",\"md\"],\n\"typescript\":[\"typescript\",\"ts\"],\n\"xml\":[\"xml\"],\n}"
                },
                {
                    "type": "ForStatement",
                    "name": "for",
                    "range": [
                        528,
                        596
                    ],
                    "children": [
                        {
                            "type": "VariableDecl",
                            "name": "canonical_name",
                            "range": [
                                529,
                                530
                            ],
                            "children": [],
                            "content": "canonical_name,"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "aliases",
                            "range": [
                                531,
                                532
                            ],
                            "children": [],
                            "content": "aliases in"
                        },
                        {
                            "type": "MemberExpression",
                            "name": "language_aliases.items",
                            "range": [
                                533,
                                535
                            ],
                            "children": [],
                            "content": "language_aliases.items"
                        },
                        {
                            "type": "BlockStatement",
                            "name": "",
                            "range": [
                                538,
                                596
                            ],
                            "children": [
                                {
                                    "type": "VariableDecl",
                                    "name": "code",
                                    "range": [
                                        540,
                                        542
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "\"\"",
                                            "range": [
                                                542,
                                                543
                                            ],
                                            "children": [],
                                            "content": "\"\"\n"
                                        }
                                    ],
                                    "content": "code=\"\""
                                },
                                {
                                    "type": "ForStatement",
                                    "name": "for",
                                    "range": [
                                        552,
                                        586
                                    ],
                                    "children": [
                                        {
                                            "type": "VariableDecl",
                                            "name": "alias",
                                            "range": [
                                                553,
                                                554
                                            ],
                                            "children": [],
                                            "content": "alias in"
                                        },
                                        {
                                            "type": "MemberExpression",
                                            "name": "aliases",
                                            "range": [
                                                555,
                                                556
                                            ],
                                            "children": [],
                                            "content": "aliases:"
                                        },
                                        {
                                            "type": "BlockStatement",
                                            "name": "",
                                            "range": [
                                                557,
                                                586
                                            ],
                                            "children": [
                                                {
                                                    "type": "VariableDecl",
                                                    "name": "code_for_alias",
                                                    "range": [
                                                        558,
                                                        560
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "name": "self.extract_code",
                                                            "range": [
                                                                560,
                                                                562
                                                            ],
                                                            "children": [],
                                                            "content": "self.extract_code"
                                                        },
                                                        {
                                                            "type": "Argument",
                                                            "name": "input_data.text",
                                                            "range": [
                                                                564,
                                                                566
                                                            ],
                                                            "children": [],
                                                            "content": "input_data.text"
                                                        },
                                                        {
                                                            "type": "Argument",
                                                            "name": "alias",
                                                            "range": [
                                                                568,
                                                                569
                                                            ],
                                                            "children": [],
                                                            "content": "alias)"
                                                        }
                                                    ],
                                                    "content": "code_for_alias=self"
                                                },
                                                {
                                                    "type": "IfStatement",
                                                    "name": "if",
                                                    "range": [
                                                        571,
                                                        586
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "name": "code_for_alias",
                                                            "range": [
                                                                572,
                                                                573
                                                            ],
                                                            "children": [],
                                                            "content": "code_for_alias:"
                                                        },
                                                        {
                                                            "type": "BlockStatement",
                                                            "name": "",
                                                            "range": [
                                                                574,
                                                                586
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Assignment",
                                                                    "name": "=",
                                                                    "range": [
                                                                        575,
                                                                        576
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "BinaryExpression",
                                                                            "name": "+",
                                                                            "range": [
                                                                                577,
                                                                                578
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "MemberExpression",
                                                                                    "name": "code",
                                                                                    "range": [
                                                                                        577,
                                                                                        578
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "code+"
                                                                                },
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "name": "\"\\n\\n\"",
                                                                                    "range": [
                                                                                        579,
                                                                                        580
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "\"\\n\\n\"+"
                                                                                }
                                                                            ],
                                                                            "content": "code+"
                                                                        },
                                                                        {
                                                                            "type": "BinaryExpression",
                                                                            "name": "+",
                                                                            "range": [
                                                                                580,
                                                                                581
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "MemberExpression",
                                                                                    "name": "code_for_alias",
                                                                                    "range": [
                                                                                        580,
                                                                                        581
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "+code_for_alias"
                                                                                }
                                                                            ],
                                                                            "content": "+code_for_alias"
                                                                        }
                                                                    ],
                                                                    "content": "code="
                                                                }
                                                            ],
                                                            "content": "\ncode=code+\"\\n\\n\"+code_for_alias if code else code_for_alias\n"
                                                        }
                                                    ],
                                                    "content": "if code_for_alias:\ncode=code+\"\\n\\n\"+code_for_alias if code else code_for_alias\n"
                                                }
                                            ],
                                            "content": "\ncode_for_alias=self.extract_code(input_data.text,alias)\nif code_for_alias:\ncode=code+\"\\n\\n\"+code_for_alias if code else code_for_alias\n"
                                        }
                                    ],
                                    "content": "for alias in aliases:\ncode_for_alias=self.extract_code(input_data.text,alias)\nif code_for_alias:\ncode=code+\"\\n\\n\"+code_for_alias if code else code_for_alias\n"
                                },
                                {
                                    "type": "IfStatement",
                                    "name": "if",
                                    "range": [
                                        588,
                                        596
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "code",
                                            "range": [
                                                589,
                                                590
                                            ],
                                            "children": [],
                                            "content": "code:"
                                        },
                                        {
                                            "type": "BlockStatement",
                                            "name": "",
                                            "range": [
                                                591,
                                                596
                                            ],
                                            "children": [
                                                {
                                                    "type": "YieldExpression",
                                                    "name": "yield",
                                                    "range": [
                                                        601,
                                                        604
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Literal",
                                                            "name": "\"remaining_text\"",
                                                            "range": [
                                                                602,
                                                                603
                                                            ],
                                                            "children": [],
                                                            "content": "\"remaining_text\","
                                                        },
                                                        {
                                                            "type": "MemberExpression",
                                                            "name": "remaining_text",
                                                            "range": [
                                                                604,
                                                                605
                                                            ],
                                                            "children": [],
                                                            "content": "remaining_text\n"
                                                        }
                                                    ],
                                                    "content": "yield \"remaining_text\",remaining_text"
                                                }
                                            ],
                                            "content": "#Only yield if there 's actual code content \\n                 yield canonical_name, code \\n  \\n         # Remove all code blocks from the text to get remaining text \\n         pattern = ( \\n             r\"```(?:\" \\n             + \"|\".join( \\n                 re.escape(alias) \\n                 for aliases in language_aliases.values() \\n                 for alias in aliases \\n             ) \\n             + r\")\\s+[\\s\\S]*?```\" \\n         ) \\n  \\n         remaining_text = re.sub(pattern, \"\", input_data.text).strip() \\n         remaining_text = re.sub(r\"\\n\\s*\\n\", \"\\n\", remaining_text) \\n  \\n         if remaining_text:  # Only yield if there'"
                                        }
                                    ],
                                    "content": "if code:#Only yield if there 's actual code content \\n                 yield canonical_name, code \\n  \\n         # Remove all code blocks from the text to get remaining text \\n         pattern = ( \\n             r\"```(?:\" \\n             + \"|\".join( \\n                 re.escape(alias) \\n                 for aliases in language_aliases.values() \\n                 for alias in aliases \\n             ) \\n             + r\")\\s+[\\s\\S]*?```\" \\n         ) \\n  \\n         remaining_text = re.sub(pattern, \"\", input_data.text).strip() \\n         remaining_text = re.sub(r\"\\n\\s*\\n\", \"\\n\", remaining_text) \\n  \\n         if remaining_text:  # Only yield if there'"
                                }
                            ],
                            "content": ":\ncode=\"\"\n#Try each alias for the language\nfor alias in aliases:\ncode_for_alias=self.extract_code(input_data.text,alias)\nif code_for_alias:\ncode=code+\"\\n\\n\"+code_for_alias if code else code_for_alias\n\nif code:#Only yield if there 's actual code content \\n                 yield canonical_name, code \\n  \\n         # Remove all code blocks from the text to get remaining text \\n         pattern = ( \\n             r\"```(?:\" \\n             + \"|\".join( \\n                 re.escape(alias) \\n                 for aliases in language_aliases.values() \\n                 for alias in aliases \\n             ) \\n             + r\")\\s+[\\s\\S]*?```\" \\n         ) \\n  \\n         remaining_text = re.sub(pattern, \"\", input_data.text).strip() \\n         remaining_text = re.sub(r\"\\n\\s*\\n\", \"\\n\", remaining_text) \\n  \\n         if remaining_text:  # Only yield if there'"
                        }
                    ],
                    "content": "for canonical_name,aliases in language_aliases.items():\ncode=\"\"\n#Try each alias for the language\nfor alias in aliases:\ncode_for_alias=self.extract_code(input_data.text,alias)\nif code_for_alias:\ncode=code+\"\\n\\n\"+code_for_alias if code else code_for_alias\n\nif code:#Only yield if there 's actual code content \\n                 yield canonical_name, code \\n  \\n         # Remove all code blocks from the text to get remaining text \\n         pattern = ( \\n             r\"```(?:\" \\n             + \"|\".join( \\n                 re.escape(alias) \\n                 for aliases in language_aliases.values() \\n                 for alias in aliases \\n             ) \\n             + r\")\\s+[\\s\\S]*?```\" \\n         ) \\n  \\n         remaining_text = re.sub(pattern, \"\", input_data.text).strip() \\n         remaining_text = re.sub(r\"\\n\\s*\\n\", \"\\n\", remaining_text) \\n  \\n         if remaining_text:  # Only yield if there'"
                }
            ],
            "content": "def run(self,input_data:Input,**kwargs)->BlockOutput:\n#List of supported programming languages with mapped aliases\nlanguage_aliases={\n\"html\":[\"html\",\"htm\"],\n\"css\":[\"css\"],\n\"javascript\":[\"javascript\",\"js\"],\n\"python\":[\"python\",\"py\"],\n\"sql\":[\"sql\"],\n\"java\":[\"java\"],\n\"cpp\":[\"cpp\",\"c++\"],\n\"csharp\":[\"csharp\",\"c#\",\"cs\"],\n\"json_code\":[\"json\"],\n\"bash\":[\"bash\",\"shell\",\"sh\"],\n\"php\":[\"php\"],\n\"ruby\":[\"ruby\",\"rb\"],\n\"yaml\":[\"yaml\",\"yml\"],\n\"markdown\":[\"markdown\",\"md\"],\n\"typescript\":[\"typescript\",\"ts\"],\n\"xml\":[\"xml\"],\n}\n\n#Extract code for each language\nfor canonical_name,aliases in language_aliases.items():\ncode=\"\"\n#Try each alias for the language\nfor alias in aliases:\ncode_for_alias=self.extract_code(input_data.text,alias)\nif code_for_alias:\ncode=code+\"\\n\\n\"+code_for_alias if code else code_for_alias\n\nif code:#Only yield if there 's actual code content \\n                 yield canonical_name, code \\n  \\n         # Remove all code blocks from the text to get remaining text \\n         pattern = ( \\n             r\"```(?:\" \\n             + \"|\".join( \\n                 re.escape(alias) \\n                 for aliases in language_aliases.values() \\n                 for alias in aliases \\n             ) \\n             + r\")\\s+[\\s\\S]*?```\" \\n         ) \\n  \\n         remaining_text = re.sub(pattern, \"\", input_data.text).strip() \\n         remaining_text = re.sub(r\"\\n\\s*\\n\", \"\\n\", remaining_text) \\n  \\n         if remaining_text:  # Only yield if there' s remaining text\nyield \"remaining_text\",remaining_text\n\n"
        },
        {
            "type": "FunctionDecl",
            "name": "extract_code",
            "range": [
                607,
                731
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "self",
                    "range": [
                        610,
                        611
                    ],
                    "children": [],
                    "content": "self,"
                },
                {
                    "type": "Parameter",
                    "name": "text",
                    "range": [
                        612,
                        614
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                614,
                                615
                            ],
                            "children": [],
                            "content": "str,"
                        }
                    ],
                    "content": "text:str"
                },
                {
                    "type": "Parameter",
                    "name": "language",
                    "range": [
                        616,
                        618
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                618,
                                619
                            ],
                            "children": [],
                            "content": "str)"
                        }
                    ],
                    "content": "language:str"
                },
                {
                    "type": "ReturnType",
                    "name": "str",
                    "range": [
                        622,
                        623
                    ],
                    "children": [],
                    "content": "str:"
                },
                {
                    "type": "VariableDecl",
                    "name": "language",
                    "range": [
                        635,
                        643
                    ],
                    "children": [
                        {
                            "type": "MemberExpression",
                            "name": "re.escape",
                            "range": [
                                637,
                                639
                            ],
                            "children": [],
                            "content": "re.escape"
                        },
                        {
                            "type": "Argument",
                            "name": "language",
                            "range": [
                                641,
                                642
                            ],
                            "children": [],
                            "content": "language)"
                        }
                    ],
                    "content": "language=re.escape(language)\n"
                },
                {
                    "type": "VariableDecl",
                    "name": "pattern",
                    "range": [
                        660,
                        676
                    ],
                    "children": [
                        {
                            "type": "MemberExpression",
                            "name": "re.compile",
                            "range": [
                                662,
                                664
                            ],
                            "children": [],
                            "content": "re.compile"
                        },
                        {
                            "type": "Argument",
                            "name": "rf\"```{language}\\s+(.*?)```\"",
                            "range": [
                                666,
                                667
                            ],
                            "children": [],
                            "content": "rf \"```{language}\\s+(.*?)```\""
                        },
                        {
                            "type": "Argument",
                            "name": "re.DOTALL | re.IGNORECASE",
                            "range": [
                                669,
                                675
                            ],
                            "children": [],
                            "content": "re.DOTALL|re.IGNORECASE"
                        }
                    ],
                    "content": "pattern=re.compile(rf \"```{language}\\s+(.*?)```\",re.DOTALL|re.IGNORECASE)"
                },
                {
                    "type": "VariableDecl",
                    "name": "matches",
                    "range": [
                        678,
                        686
                    ],
                    "children": [
                        {
                            "type": "MemberExpression",
                            "name": "pattern.finditer",
                            "range": [
                                680,
                                682
                            ],
                            "children": [],
                            "content": "pattern.finditer"
                        },
                        {
                            "type": "Argument",
                            "name": "text",
                            "range": [
                                684,
                                685
                            ],
                            "children": [],
                            "content": "text)"
                        }
                    ],
                    "content": "matches=pattern.finditer(text)\n"
                },
                {
                    "type": "VariableDecl",
                    "name": "code_blocks",
                    "range": [
                        700,
                        717
                    ],
                    "children": [
                        {
                            "type": "ArrayLiteral",
                            "name": "[match.group(1).strip() for match in matches]",
                            "range": [
                                702,
                                717
                            ],
                            "children": [],
                            "content": "[match.group(1).strip()for match in matches]"
                        }
                    ],
                    "content": "code_blocks=[match.group(1).strip()for match in matches]"
                },
                {
                    "type": "ReturnStatement",
                    "name": "return",
                    "range": [
                        719,
                        729
                    ],
                    "children": [
                        {
                            "type": "ConditionalExpression",
                            "name": "if",
                            "range": [
                                726,
                                728
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": "code_blocks",
                                    "range": [
                                        727,
                                        728
                                    ],
                                    "children": [],
                                    "content": "code_blocks else"
                                },
                                {
                                    "type": "Literal",
                                    "name": "\"\\n\\n\"",
                                    "range": [
                                        720,
                                        721
                                    ],
                                    "children": [],
                                    "content": "\"\\n\\n\"."
                                },
                                {
                                    "type": "MemberExpression",
                                    "name": "code_blocks",
                                    "range": [
                                        724,
                                        725
                                    ],
                                    "children": [],
                                    "content": "code_blocks)"
                                },
                                {
                                    "type": "Literal",
                                    "name": "\"\"",
                                    "range": [
                                        729,
                                        730
                                    ],
                                    "children": [],
                                    "content": "\"\"\n"
                                }
                            ],
                            "content": "if code_blocks else"
                        }
                    ],
                    "content": "return \"\\n\\n\".join(code_blocks)if code_blocks else\"\""
                }
            ],
            "content": "def extract_code(self,text:str,language:str)->str:\n#Escape special regex characters in the language string\nlanguage=re.escape(language)\n#Extract all code blocks enclosed in```language```blocks\npattern=re.compile(rf \"```{language}\\s+(.*?)```\",re.DOTALL|re.IGNORECASE)\nmatches=pattern.finditer(text)\n#Combine all code blocks for this language with newlines between them\ncode_blocks=[match.group(1).strip()for match in matches]\nreturn \"\\n\\n\".join(code_blocks)if code_blocks else\"\"\n"
        },
        {
            "type": "ClassDecl",
            "name": "Input",
            "range": [
                732,
                758
            ],
            "children": [
                {
                    "type": "Block",
                    "name": "",
                    "range": [
                        735,
                        735
                    ],
                    "children": [],
                    "content": ""
                },
                {
                    "type": "FieldDecl",
                    "name": "text",
                    "range": [
                        739,
                        756
                    ],
                    "children": [
                        {
                            "type": "SchemaField",
                            "name": "",
                            "range": [
                                743,
                                756
                            ],
                            "children": [
                                {
                                    "type": "Description",
                                    "name": "",
                                    "range": [
                                        746,
                                        748
                                    ],
                                    "children": [],
                                    "content": ""
                                },
                                {
                                    "type": "Placeholder",
                                    "name": "",
                                    "range": [
                                        751,
                                        753
                                    ],
                                    "children": [],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        }
                    ],
                    "content": ""
                }
            ],
            "content": ""
        },
        {
            "type": "ClassDecl",
            "name": "Output",
            "range": [
                759,
                955
            ],
            "children": [
                {
                    "type": "FieldDecl",
                    "name": "html",
                    "range": [
                        766,
                        775
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                768,
                                768
                            ],
                            "content": ""
                        },
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                770,
                                775
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        772,
                                        774
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        }
                    ],
                    "content": ""
                },
                {
                    "type": "FieldDecl",
                    "name": "css",
                    "range": [
                        777,
                        786
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                779,
                                779
                            ],
                            "content": ""
                        },
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                781,
                                786
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        783,
                                        785
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        }
                    ],
                    "content": ""
                },
                {
                    "type": "FieldDecl",
                    "name": "javascript",
                    "range": [
                        788,
                        797
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                790,
                                790
                            ],
                            "content": ""
                        },
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                792,
                                797
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        794,
                                        796
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        }
                    ],
                    "content": ""
                },
                {
                    "type": "FieldDecl",
                    "name": "python",
                    "range": [
                        799,
                        808
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                801,
                                801
                            ],
                            "content": ""
                        },
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                803,
                                808
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        805,
                                        807
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        }
                    ],
                    "content": ""
                },
                {
                    "type": "FieldDecl",
                    "name": "sql",
                    "range": [
                        810,
                        819
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                812,
                                812
                            ],
                            "content": ""
                        },
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                814,
                                819
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        816,
                                        818
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        }
                    ],
                    "content": ""
                },
                {
                    "type": "FieldDecl",
                    "name": "java",
                    "range": [
                        821,
                        830
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                823,
                                823
                            ],
                            "content": ""
                        },
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                825,
                                830
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        827,
                                        829
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        }
                    ],
                    "content": ""
                },
                {
                    "type": "FieldDecl",
                    "name": "cpp",
                    "range": [
                        832,
                        841
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                834,
                                834
                            ],
                            "content": ""
                        },
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                836,
                                841
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        838,
                                        840
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        }
                    ],
                    "content": ""
                },
                {
                    "type": "FieldDecl",
                    "name": "csharp",
                    "range": [
                        843,
                        852
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                845,
                                845
                            ],
                            "content": ""
                        },
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                847,
                                852
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        849,
                                        851
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        }
                    ],
                    "content": ""
                },
                {
                    "type": "FieldDecl",
                    "name": "json_code",
                    "range": [
                        854,
                        863
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                856,
                                856
                            ],
                            "content": ""
                        },
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                858,
                                863
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        860,
                                        862
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        }
                    ],
                    "content": ""
                },
                {
                    "type": "FieldDecl",
                    "name": "bash",
                    "range": [
                        865,
                        874
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                867,
                                867
                            ],
                            "content": ""
                        },
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                869,
                                874
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        871,
                                        873
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        }
                    ],
                    "content": ""
                },
                {
                    "type": "FieldDecl",
                    "name": "php",
                    "range": [
                        876,
                        885
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                878,
                                878
                            ],
                            "content": ""
                        },
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                880,
                                885
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        882,
                                        884
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        }
                    ],
                    "content": ""
                },
                {
                    "type": "FieldDecl",
                    "name": "ruby",
                    "range": [
                        887,
                        896
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                889,
                                889
                            ],
                            "content": ""
                        },
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                891,
                                896
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        893,
                                        895
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        }
                    ],
                    "content": ""
                },
                {
                    "type": "FieldDecl",
                    "name": "yaml",
                    "range": [
                        898,
                        907
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                900,
                                900
                            ],
                            "content": ""
                        },
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                902,
                                907
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        904,
                                        906
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        }
                    ],
                    "content": ""
                },
                {
                    "type": "FieldDecl",
                    "name": "markdown",
                    "range": [
                        909,
                        918
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                911,
                                911
                            ],
                            "content": ""
                        },
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                913,
                                918
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        915,
                                        917
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        }
                    ],
                    "content": ""
                },
                {
                    "type": "FieldDecl",
                    "name": "typescript",
                    "range": [
                        920,
                        929
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                922,
                                922
                            ],
                            "content": ""
                        },
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                924,
                                929
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        926,
                                        928
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        }
                    ],
                    "content": ""
                },
                {
                    "type": "FieldDecl",
                    "name": "xml",
                    "range": [
                        931,
                        940
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                933,
                                933
                            ],
                            "content": ""
                        },
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                935,
                                940
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        937,
                                        939
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        }
                    ],
                    "content": ""
                },
                {
                    "type": "FieldDecl",
                    "name": "remaining_text",
                    "range": [
                        942,
                        953
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                944,
                                944
                            ],
                            "content": ""
                        },
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                946,
                                953
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        949,
                                        951
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        }
                    ],
                    "content": ""
                }
            ],
            "content": ""
        },
        {
            "type": "FunctionDecl",
            "name": "__init__",
            "range": [
                956,
                1044
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "",
                    "range": [
                        958,
                        960
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "self",
                            "range": [
                                959,
                                959
                            ],
                            "children": [],
                            "content": ""
                        }
                    ],
                    "content": ""
                },
                {
                    "type": "Block",
                    "name": "",
                    "range": [
                        961,
                        1044
                    ],
                    "children": [
                        {
                            "type": "ExpressionStatement",
                            "name": "",
                            "range": [
                                963,
                                968
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "super",
                                    "range": [
                                        963,
                                        968
                                    ],
                                    "children": [
                                        {
                                            "type": "ArgumentList",
                                            "name": "",
                                            "range": [
                                                964,
                                                965
                                            ],
                                            "children": [],
                                            "content": ""
                                        }
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "",
                            "range": [
                                967,
                                1042
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "__init__",
                                    "range": [
                                        967,
                                        1042
                                    ],
                                    "children": [
                                        {
                                            "type": "ArgumentList",
                                            "name": "",
                                            "range": [
                                                968,
                                                1042
                                            ],
                                            "children": [
                                                {
                                                    "type": "AssignmentExpression",
                                                    "name": "id",
                                                    "range": [
                                                        970,
                                                        972
                                                    ],
                                                    "children": [],
                                                    "content": ""
                                                },
                                                {
                                                    "type": "AssignmentExpression",
                                                    "name": "description",
                                                    "range": [
                                                        975,
                                                        977
                                                    ],
                                                    "children": [],
                                                    "content": ""
                                                },
                                                {
                                                    "type": "AssignmentExpression",
                                                    "name": "categories",
                                                    "range": [
                                                        980,
                                                        986
                                                    ],
                                                    "children": [],
                                                    "content": ""
                                                },
                                                {
                                                    "type": "AssignmentExpression",
                                                    "name": "input_schema",
                                                    "range": [
                                                        989,
                                                        994
                                                    ],
                                                    "children": [],
                                                    "content": ""
                                                },
                                                {
                                                    "type": "AssignmentExpression",
                                                    "name": "output_schema",
                                                    "range": [
                                                        996,
                                                        1000
                                                    ],
                                                    "children": [],
                                                    "content": ""
                                                },
                                                {
                                                    "type": "AssignmentExpression",
                                                    "name": "test_input",
                                                    "range": [
                                                        1003,
                                                        1011
                                                    ],
                                                    "children": [],
                                                    "content": ""
                                                },
                                                {
                                                    "type": "AssignmentExpression",
                                                    "name": "test_output",
                                                    "range": [
                                                        1014,
                                                        1039
                                                    ],
                                                    "children": [],
                                                    "content": ""
                                                }
                                            ],
                                            "content": ""
                                        }
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        }
                    ],
                    "content": ""
                }
            ],
            "content": ""
        },
        {
            "type": "FunctionDecl",
            "name": "run",
            "range": [
                1045,
                1061
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "self",
                    "range": [
                        1047,
                        1048
                    ],
                    "children": [],
                    "content": ""
                },
                {
                    "type": "Parameter",
                    "name": "input_data",
                    "range": [
                        1049,
                        1050
                    ],
                    "children": [],
                    "content": ""
                },
                {
                    "type": "Parameter",
                    "name": "kwargs",
                    "range": [
                        1054,
                        1056
                    ],
                    "children": [],
                    "content": ""
                },
                {
                    "type": "ReturnType",
                    "name": "BlockOutput",
                    "range": [
                        1058,
                        1060
                    ],
                    "children": [],
                    "content": ""
                }
            ],
            "content": ""
        },
        {
            "type": "VariableDecl",
            "name": "language_aliases",
            "range": [
                1073,
                1213
            ],
            "children": [
                {
                    "type": "ObjectExpression",
                    "name": "",
                    "range": [
                        1075,
                        1213
                    ],
                    "children": [
                        {
                            "type": "Property",
                            "name": "html",
                            "range": [
                                1077,
                                1083
                            ],
                            "children": [
                                {
                                    "type": "ArrayExpression",
                                    "name": "",
                                    "range": [
                                        1079,
                                        1083
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "\"html\"",
                                            "range": [
                                                1080,
                                                1080
                                            ],
                                            "children": [],
                                            "content": ""
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "\"htm\"",
                                            "range": [
                                                1082,
                                                1082
                                            ],
                                            "children": [],
                                            "content": ""
                                        }
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        },
                        {
                            "type": "Property",
                            "name": "css",
                            "range": [
                                1086,
                                1091
                            ],
                            "children": [
                                {
                                    "type": "ArrayExpression",
                                    "name": "",
                                    "range": [
                                        1088,
                                        1091
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "\"css\"",
                                            "range": [
                                                1089,
                                                1089
                                            ],
                                            "children": [],
                                            "content": ""
                                        }
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        },
                        {
                            "type": "Property",
                            "name": "javascript",
                            "range": [
                                1093,
                                1099
                            ],
                            "children": [
                                {
                                    "type": "ArrayExpression",
                                    "name": "",
                                    "range": [
                                        1095,
                                        1099
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "\"javascript\"",
                                            "range": [
                                                1096,
                                                1096
                                            ],
                                            "children": [],
                                            "content": ""
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "\"js\"",
                                            "range": [
                                                1098,
                                                1098
                                            ],
                                            "children": [],
                                            "content": ""
                                        }
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        },
                        {
                            "type": "Property",
                            "name": "python",
                            "range": [
                                1102,
                                1108
                            ],
                            "children": [
                                {
                                    "type": "ArrayExpression",
                                    "name": "",
                                    "range": [
                                        1104,
                                        1108
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "\"python\"",
                                            "range": [
                                                1105,
                                                1105
                                            ],
                                            "children": [],
                                            "content": ""
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "\"py\"",
                                            "range": [
                                                1107,
                                                1107
                                            ],
                                            "children": [],
                                            "content": ""
                                        }
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        },
                        {
                            "type": "Property",
                            "name": "sql",
                            "range": [
                                1111,
                                1116
                            ],
                            "children": [
                                {
                                    "type": "ArrayExpression",
                                    "name": "",
                                    "range": [
                                        1113,
                                        1116
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "\"sql\"",
                                            "range": [
                                                1114,
                                                1114
                                            ],
                                            "children": [],
                                            "content": ""
                                        }
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        },
                        {
                            "type": "Property",
                            "name": "java",
                            "range": [
                                1118,
                                1123
                            ],
                            "children": [
                                {
                                    "type": "ArrayExpression",
                                    "name": "",
                                    "range": [
                                        1120,
                                        1123
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "\"java\"",
                                            "range": [
                                                1121,
                                                1121
                                            ],
                                            "children": [],
                                            "content": ""
                                        }
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        },
                        {
                            "type": "Property",
                            "name": "cpp",
                            "range": [
                                1125,
                                1132
                            ],
                            "children": [
                                {
                                    "type": "ArrayExpression",
                                    "name": "",
                                    "range": [
                                        1127,
                                        1132
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "\"cpp\"",
                                            "range": [
                                                1128,
                                                1128
                                            ],
                                            "children": [],
                                            "content": ""
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "\"c++\"",
                                            "range": [
                                                1130,
                                                1130
                                            ],
                                            "children": [],
                                            "content": ""
                                        }
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        },
                        {
                            "type": "Property",
                            "name": "csharp",
                            "range": [
                                1134,
                                1143
                            ],
                            "children": [
                                {
                                    "type": "ArrayExpression",
                                    "name": "",
                                    "range": [
                                        1136,
                                        1143
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "\"csharp\"",
                                            "range": [
                                                1137,
                                                1137
                                            ],
                                            "children": [],
                                            "content": ""
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "\"c#\"",
                                            "range": [
                                                1139,
                                                1139
                                            ],
                                            "children": [],
                                            "content": ""
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "\"cs\"",
                                            "range": [
                                                1141,
                                                1141
                                            ],
                                            "children": [],
                                            "content": ""
                                        }
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        },
                        {
                            "type": "Property",
                            "name": "json_code",
                            "range": [
                                1145,
                                1150
                            ],
                            "children": [
                                {
                                    "type": "ArrayExpression",
                                    "name": "",
                                    "range": [
                                        1147,
                                        1150
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "\"json\"",
                                            "range": [
                                                1148,
                                                1148
                                            ],
                                            "children": [],
                                            "content": ""
                                        }
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        },
                        {
                            "type": "Property",
                            "name": "bash",
                            "range": [
                                1152,
                                1161
                            ],
                            "children": [
                                {
                                    "type": "ArrayExpression",
                                    "name": "",
                                    "range": [
                                        1154,
                                        1161
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "\"bash\"",
                                            "range": [
                                                1155,
                                                1155
                                            ],
                                            "children": [],
                                            "content": ""
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "\"shell\"",
                                            "range": [
                                                1157,
                                                1157
                                            ],
                                            "children": [],
                                            "content": ""
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "\"sh\"",
                                            "range": [
                                                1159,
                                                1159
                                            ],
                                            "children": [],
                                            "content": ""
                                        }
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        },
                        {
                            "type": "Property",
                            "name": "php",
                            "range": [
                                1163,
                                1168
                            ],
                            "children": [
                                {
                                    "type": "ArrayExpression",
                                    "name": "",
                                    "range": [
                                        1165,
                                        1168
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "\"php\"",
                                            "range": [
                                                1166,
                                                1166
                                            ],
                                            "children": [],
                                            "content": ""
                                        }
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        },
                        {
                            "type": "Property",
                            "name": "ruby",
                            "range": [
                                1170,
                                1177
                            ],
                            "children": [
                                {
                                    "type": "ArrayExpression",
                                    "name": "",
                                    "range": [
                                        1172,
                                        1177
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "\"ruby\"",
                                            "range": [
                                                1173,
                                                1173
                                            ],
                                            "children": [],
                                            "content": ""
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "\"rb\"",
                                            "range": [
                                                1175,
                                                1175
                                            ],
                                            "children": [],
                                            "content": ""
                                        }
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        },
                        {
                            "type": "Property",
                            "name": "yaml",
                            "range": [
                                1179,
                                1186
                            ],
                            "children": [
                                {
                                    "type": "ArrayExpression",
                                    "name": "",
                                    "range": [
                                        1181,
                                        1186
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "\"yaml\"",
                                            "range": [
                                                1182,
                                                1182
                                            ],
                                            "children": [],
                                            "content": ""
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "\"yml\"",
                                            "range": [
                                                1184,
                                                1184
                                            ],
                                            "children": [],
                                            "content": ""
                                        }
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        },
                        {
                            "type": "Property",
                            "name": "markdown",
                            "range": [
                                1188,
                                1195
                            ],
                            "children": [
                                {
                                    "type": "ArrayExpression",
                                    "name": "",
                                    "range": [
                                        1190,
                                        1195
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "\"markdown\"",
                                            "range": [
                                                1191,
                                                1191
                                            ],
                                            "children": [],
                                            "content": ""
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "\"md\"",
                                            "range": [
                                                1193,
                                                1193
                                            ],
                                            "children": [],
                                            "content": ""
                                        }
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        },
                        {
                            "type": "Property",
                            "name": "typescript",
                            "range": [
                                1197,
                                1204
                            ],
                            "children": [
                                {
                                    "type": "ArrayExpression",
                                    "name": "",
                                    "range": [
                                        1199,
                                        1204
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "\"typescript\"",
                                            "range": [
                                                1200,
                                                1200
                                            ],
                                            "children": [],
                                            "content": ""
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "\"ts\"",
                                            "range": [
                                                1202,
                                                1202
                                            ],
                                            "children": [],
                                            "content": ""
                                        }
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        },
                        {
                            "type": "Property",
                            "name": "xml",
                            "range": [
                                1206,
                                1211
                            ],
                            "children": [
                                {
                                    "type": "ArrayExpression",
                                    "name": "",
                                    "range": [
                                        1208,
                                        1211
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "\"xml\"",
                                            "range": [
                                                1209,
                                                1209
                                            ],
                                            "children": [],
                                            "content": ""
                                        }
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        }
                    ],
                    "content": ""
                }
            ],
            "content": ""
        },
        {
            "type": "ForStatement",
            "name": "",
            "range": [
                1223,
                1301
            ],
            "children": [
                {
                    "type": "VariableDecl",
                    "name": "canonical_name",
                    "range": [
                        1224,
                        1224
                    ],
                    "children": [],
                    "content": ""
                },
                {
                    "type": "VariableDecl",
                    "name": "aliases",
                    "range": [
                        1226,
                        1226
                    ],
                    "children": [],
                    "content": ""
                },
                {
                    "type": "BlockStatement",
                    "name": "",
                    "range": [
                        1234,
                        1301
                    ],
                    "children": [
                        {
                            "type": "VariableDecl",
                            "name": "code",
                            "range": [
                                1235,
                                1237
                            ],
                            "children": [],
                            "content": ""
                        },
                        {
                            "type": "ForStatement",
                            "name": "",
                            "range": [
                                1247,
                                1281
                            ],
                            "children": [
                                {
                                    "type": "VariableDecl",
                                    "name": "alias",
                                    "range": [
                                        1248,
                                        1248
                                    ],
                                    "children": [],
                                    "content": ""
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "",
                                    "range": [
                                        1252,
                                        1281
                                    ],
                                    "children": [
                                        {
                                            "type": "VariableDecl",
                                            "name": "code_for_alias",
                                            "range": [
                                                1253,
                                                1264
                                            ],
                                            "children": [],
                                            "content": ""
                                        },
                                        {
                                            "type": "IfStatement",
                                            "name": "",
                                            "range": [
                                                1266,
                                                1280
                                            ],
                                            "children": [
                                                {
                                                    "type": "AssignmentExpression",
                                                    "name": "code",
                                                    "range": [
                                                        1270,
                                                        1276
                                                    ],
                                                    "children": [],
                                                    "content": ""
                                                }
                                            ],
                                            "content": ""
                                        }
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        },
                        {
                            "type": "IfStatement",
                            "name": "",
                            "range": [
                                1283,
                                1300
                            ],
                            "children": [
                                {
                                    "type": "YieldExpression",
                                    "name": "",
                                    "range": [
                                        1296,
                                        1299
                                    ],
                                    "children": [],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        }
                    ],
                    "content": ""
                }
            ],
            "content": ""
        },
        {
            "type": "FunctionDecl",
            "name": "extract_code",
            "range": [
                1302,
                1425
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "parameters",
                    "range": [
                        1304,
                        1314
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "self",
                            "range": [
                                1305,
                                1305
                            ],
                            "children": [],
                            "content": ""
                        },
                        {
                            "type": "Parameter",
                            "name": "text",
                            "range": [
                                1307,
                                1307
                            ],
                            "children": [],
                            "content": ""
                        },
                        {
                            "type": "Parameter",
                            "name": "language",
                            "range": [
                                1311,
                                1311
                            ],
                            "children": [],
                            "content": ""
                        }
                    ],
                    "content": ""
                },
                {
                    "type": "ReturnType",
                    "name": "return_type",
                    "range": [
                        1315,
                        1317
                    ],
                    "children": [],
                    "content": ""
                },
                {
                    "type": "Block",
                    "name": "body",
                    "range": [
                        1318,
                        1425
                    ],
                    "children": [
                        {
                            "type": "Comment",
                            "name": "comment",
                            "range": [
                                1320,
                                1329
                            ],
                            "children": [],
                            "content": ""
                        },
                        {
                            "type": "Assignment",
                            "name": "assignment",
                            "range": [
                                1330,
                                1338
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "language",
                                    "range": [
                                        1330,
                                        1330
                                    ],
                                    "children": [],
                                    "content": ""
                                },
                                {
                                    "type": "CallExpression",
                                    "name": "re.escape",
                                    "range": [
                                        1332,
                                        1337
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "language",
                                            "range": [
                                                1336,
                                                1336
                                            ],
                                            "children": [],
                                            "content": ""
                                        }
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        },
                        {
                            "type": "Comment",
                            "name": "comment",
                            "range": [
                                1339,
                                1354
                            ],
                            "children": [],
                            "content": ""
                        },
                        {
                            "type": "Assignment",
                            "name": "assignment",
                            "range": [
                                1355,
                                1372
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "pattern",
                                    "range": [
                                        1355,
                                        1355
                                    ],
                                    "children": [],
                                    "content": ""
                                },
                                {
                                    "type": "CallExpression",
                                    "name": "re.compile",
                                    "range": [
                                        1357,
                                        1371
                                    ],
                                    "children": [
                                        {
                                            "type": "StringLiteral",
                                            "name": "pattern",
                                            "range": [
                                                1361,
                                                1362
                                            ],
                                            "children": [],
                                            "content": ""
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "re.DOTALL",
                                            "range": [
                                                1364,
                                                1366
                                            ],
                                            "children": [],
                                            "content": ""
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "re.IGNORECASE",
                                            "range": [
                                                1368,
                                                1370
                                            ],
                                            "children": [],
                                            "content": ""
                                        }
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        },
                        {
                            "type": "Assignment",
                            "name": "assignment",
                            "range": [
                                1373,
                                1381
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "matches",
                                    "range": [
                                        1373,
                                        1373
                                    ],
                                    "children": [],
                                    "content": ""
                                },
                                {
                                    "type": "CallExpression",
                                    "name": "pattern.finditer",
                                    "range": [
                                        1375,
                                        1380
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "text",
                                            "range": [
                                                1379,
                                                1379
                                            ],
                                            "children": [],
                                            "content": ""
                                        }
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        },
                        {
                            "type": "Comment",
                            "name": "comment",
                            "range": [
                                1382,
                                1394
                            ],
                            "children": [],
                            "content": ""
                        },
                        {
                            "type": "Assignment",
                            "name": "assignment",
                            "range": [
                                1395,
                                1413
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "code_blocks",
                                    "range": [
                                        1395,
                                        1395
                                    ],
                                    "children": [],
                                    "content": ""
                                },
                                {
                                    "type": "ListComprehension",
                                    "name": "list_comprehension",
                                    "range": [
                                        1397,
                                        1412
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "match.group",
                                            "range": [
                                                1398,
                                                1403
                                            ],
                                            "children": [
                                                {
                                                    "type": "NumericLiteral",
                                                    "name": "1",
                                                    "range": [
                                                        1402,
                                                        1402
                                                    ],
                                                    "children": [],
                                                    "content": ""
                                                }
                                            ],
                                            "content": ""
                                        },
                                        {
                                            "type": "CallExpression",
                                            "name": "match.group.strip",
                                            "range": [
                                                1404,
                                                1407
                                            ],
                                            "children": [],
                                            "content": ""
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "match",
                                            "range": [
                                                1409,
                                                1409
                                            ],
                                            "children": [],
                                            "content": ""
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "matches",
                                            "range": [
                                                1411,
                                                1411
                                            ],
                                            "children": [],
                                            "content": ""
                                        }
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "return",
                            "range": [
                                1414,
                                1425
                            ],
                            "children": [
                                {
                                    "type": "ConditionalExpression",
                                    "name": "conditional",
                                    "range": [
                                        1415,
                                        1424
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "\"\\n\\n\".join",
                                            "range": [
                                                1415,
                                                1420
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "code_blocks",
                                                    "range": [
                                                        1419,
                                                        1419
                                                    ],
                                                    "children": [],
                                                    "content": ""
                                                }
                                            ],
                                            "content": ""
                                        },
                                        {
                                            "type": "StringLiteral",
                                            "name": "\"\"",
                                            "range": [
                                                1424,
                                                1424
                                            ],
                                            "children": [],
                                            "content": ""
                                        }
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        }
                    ],
                    "content": ""
                }
            ],
            "content": ""
        }
    ],
    "content": "class CodeExtractionBlock(Block):\nclass Input(BlockSchema):\ntext:str=SchemaField(\ndescription=\"Text containing code blocks to extract (e.g., AI response)\",\nplaceholder=\"Enter text containing code blocks\",\n)\n\nclass Output(BlockSchema):\nhtml:str=SchemaField(description=\"Extracted HTML code\")\ncss:str=SchemaField(description=\"Extracted CSS code\")\njavascript:str=SchemaField(description=\"Extracted JavaScript code\")\npython:str=SchemaField(description=\"Extracted Python code\")\nsql:str=SchemaField(description=\"Extracted SQL code\")\njava:str=SchemaField(description=\"Extracted Java code\")\ncpp:str=SchemaField(description=\"Extracted C++ code\")\ncsharp:str=SchemaField(description=\"Extracted C# code\")\njson_code:str=SchemaField(description=\"Extracted JSON code\")\nbash:str=SchemaField(description=\"Extracted Bash code\")\nphp:str=SchemaField(description=\"Extracted PHP code\")\nruby:str=SchemaField(description=\"Extracted Ruby code\")\nyaml:str=SchemaField(description=\"Extracted YAML code\")\nmarkdown:str=SchemaField(description=\"Extracted Markdown code\")\ntypescript:str=SchemaField(description=\"Extracted TypeScript code\")\nxml:str=SchemaField(description=\"Extracted XML code\")\nremaining_text:str=SchemaField(\ndescription=\"Remaining text after code extraction\"\n)\n\ndef __init__(self):\nsuper().__init__(\nid=\"d3a7d896-3b78-4f44-8b4b-48fbf4f0bcd8\",\ndescription=\"Extracts code blocks from text and identifies their programming languages\",\ncategories={BlockCategory.TEXT},\ninput_schema=CodeExtractionBlock.Input,\noutput_schema=CodeExtractionBlock.Output,\ntest_input={\n\"text\":\"Here's a Python example:\\n```python\\nprint('Hello World')\\n```\\nAnd some HTML:\\n```html\\n<h1>Title</h1>\\n```\"\n},\ntest_output=[\n(\"html\",\"<h1>Title</h1>\"),\n(\"python\",\"print('Hello World')\"),\n(\"remaining_text\",\"Here's a Python example:\\nAnd some HTML:\"),\n],\n)\n\ndef run(self,input_data:Input,**kwargs)->BlockOutput:\n#List of supported programming languages with mapped aliases\nlanguage_aliases={\n\"html\":[\"html\",\"htm\"],\n\"css\":[\"css\"],\n\"javascript\":[\"javascript\",\"js\"],\n\"python\":[\"python\",\"py\"],\n\"sql\":[\"sql\"],\n\"java\":[\"java\"],\n\"cpp\":[\"cpp\",\"c++\"],\n\"csharp\":[\"csharp\",\"c#\",\"cs\"],\n\"json_code\":[\"json\"],\n\"bash\":[\"bash\",\"shell\",\"sh\"],\n\"php\":[\"php\"],\n\"ruby\":[\"ruby\",\"rb\"],\n\"yaml\":[\"yaml\",\"yml\"],\n\"markdown\":[\"markdown\",\"md\"],\n\"typescript\":[\"typescript\",\"ts\"],\n\"xml\":[\"xml\"],\n}\n\n#Extract code for each language\nfor canonical_name,aliases in language_aliases.items():\ncode=\"\"\n#Try each alias for the language\nfor alias in aliases:\ncode_for_alias=self.extract_code(input_data.text,alias)\nif code_for_alias:\ncode=code+\"\\n\\n\"+code_for_alias if code else code_for_alias\n\nif code:#Only yield if there 's actual code content \\n                 yield canonical_name, code \\n  \\n         # Remove all code blocks from the text to get remaining text \\n         pattern = ( \\n             r\"```(?:\" \\n             + \"|\".join( \\n                 re.escape(alias) \\n                 for aliases in language_aliases.values() \\n                 for alias in aliases \\n             ) \\n             + r\")\\s+[\\s\\S]*?```\" \\n         ) \\n  \\n         remaining_text = re.sub(pattern, \"\", input_data.text).strip() \\n         remaining_text = re.sub(r\"\\n\\s*\\n\", \"\\n\", remaining_text) \\n  \\n         if remaining_text:  # Only yield if there' s remaining text\nyield \"remaining_text\",remaining_text\n\ndef extract_code(self,text:str,language:str)->str:\n#Escape special regex characters in the language string\nlanguage=re.escape(language)\n#Extract all code blocks enclosed in```language```blocks\npattern=re.compile(rf \"```{language}\\s+(.*?)```\",re.DOTALL|re.IGNORECASE)\nmatches=pattern.finditer(text)\n#Combine all code blocks for this language with newlines between them\ncode_blocks=[match.group(1).strip()for match in matches]\nreturn \"\\n\\n\".join(code_blocks)if code_blocks else\"\"\n"
}