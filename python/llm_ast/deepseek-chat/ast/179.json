{
    "type": "Program",
    "name": "Global",
    "range": [
        59,
        321
    ],
    "children": [
        {
            "type": "ClassDecl",
            "name": "Slant3DFilamentBlock",
            "range": [
                59,
                70
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "Slant3DBlockBase",
                    "range": [
                        61,
                        63
                    ],
                    "children": [],
                    "content": "Slant3DFilamentBlock(Slant3DBlockBase"
                },
                {
                    "type": "Docstring",
                    "name": "Block for retrieving available filaments",
                    "range": [
                        66,
                        68
                    ],
                    "children": [],
                    "content": "\n\"\"\"Block for retrieving available filaments\""
                }
            ],
            "content": "\nclass Slant3DFilamentBlock(Slant3DBlockBase):\n\"\"\"Block for retrieving available filaments\"\"\"\n"
        },
        {
            "type": "ClassDecl",
            "name": "Input",
            "range": [
                71,
                86
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "BlockSchema",
                    "range": [
                        73,
                        75
                    ],
                    "children": [],
                    "content": "Input(BlockSchema"
                },
                {
                    "type": "FieldDecl",
                    "name": "credentials",
                    "range": [
                        78,
                        85
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "Slant3DCredentialsInput",
                            "range": [
                                80,
                                80
                            ],
                            "children": [],
                            "content": ":"
                        },
                        {
                            "type": "Assignment",
                            "name": "Slant3DCredentialsField",
                            "range": [
                                82,
                                84
                            ],
                            "children": [],
                            "content": "=Slant3DCredentialsField("
                        }
                    ],
                    "content": "\ncredentials:Slant3DCredentialsInput=Slant3DCredentialsField()"
                }
            ],
            "content": "\nclass Input(BlockSchema):\ncredentials:Slant3DCredentialsInput=Slant3DCredentialsField()\n"
        },
        {
            "type": "ClassDecl",
            "name": "Output",
            "range": [
                87,
                121
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "BlockSchema",
                    "range": [
                        89,
                        91
                    ],
                    "children": [],
                    "content": "Output(BlockSchema"
                },
                {
                    "type": "FieldDecl",
                    "name": "filaments",
                    "range": [
                        94,
                        109
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "List[Filament]",
                            "range": [
                                96,
                                99
                            ],
                            "children": [],
                            "content": ":List[Filament"
                        },
                        {
                            "type": "Assignment",
                            "name": "SchemaField",
                            "range": [
                                101,
                                108
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        104,
                                        106
                                    ],
                                    "children": [],
                                    "content": "\ndescription="
                                }
                            ],
                            "content": "=SchemaField(\ndescription=\"List of available filaments\"\n"
                        }
                    ],
                    "content": "\nfilaments:List[Filament]=SchemaField(\ndescription=\"List of available filaments\"\n)"
                },
                {
                    "type": "FieldDecl",
                    "name": "error",
                    "range": [
                        110,
                        120
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                112,
                                112
                            ],
                            "children": [],
                            "content": ":"
                        },
                        {
                            "type": "Assignment",
                            "name": "SchemaField",
                            "range": [
                                114,
                                119
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        116,
                                        118
                                    ],
                                    "children": [],
                                    "content": "(description="
                                }
                            ],
                            "content": "=SchemaField(description=\"Error message if request failed\""
                        }
                    ],
                    "content": "\nerror:str=SchemaField(description=\"Error message if request failed\")"
                }
            ],
            "content": "\nclass Output(BlockSchema):\nfilaments:List[Filament]=SchemaField(\ndescription=\"List of available filaments\"\n)\nerror:str=SchemaField(description=\"Error message if request failed\")\n"
        },
        {
            "type": "MethodDecl",
            "name": "__init__",
            "range": [
                122,
                321
            ],
            "children": [
                {
                    "type": "Parameters",
                    "name": "self",
                    "range": [
                        125,
                        126
                    ],
                    "children": [],
                    "content": "(self"
                },
                {
                    "type": "SuperCall",
                    "name": "super",
                    "range": [
                        129,
                        134
                    ],
                    "children": [],
                    "content": "\nsuper().__init__"
                },
                {
                    "type": "Assignment",
                    "name": "id",
                    "range": [
                        136,
                        138
                    ],
                    "children": [],
                    "content": "\nid="
                },
                {
                    "type": "Assignment",
                    "name": "description",
                    "range": [
                        141,
                        143
                    ],
                    "children": [],
                    "content": "\ndescription="
                },
                {
                    "type": "Assignment",
                    "name": "input_schema",
                    "range": [
                        146,
                        151
                    ],
                    "children": [],
                    "content": "\ninput_schema=self.Input"
                },
                {
                    "type": "Assignment",
                    "name": "output_schema",
                    "range": [
                        153,
                        158
                    ],
                    "children": [],
                    "content": "\noutput_schema=self.Output"
                },
                {
                    "type": "Assignment",
                    "name": "test_input",
                    "range": [
                        160,
                        166
                    ],
                    "children": [],
                    "content": "\ntest_input={\"credentials\":TEST_CREDENTIALS_INPUT"
                },
                {
                    "type": "Assignment",
                    "name": "test_credentials",
                    "range": [
                        169,
                        171
                    ],
                    "children": [],
                    "content": "\ntest_credentials="
                },
                {
                    "type": "Assignment",
                    "name": "test_output",
                    "range": [
                        174,
                        240
                    ],
                    "children": [],
                    "content": "\ntest_output=[\n(\n\"filaments\",\n[\n{\n\"filament\":\"PLA BLACK\",\n\"hexColor\":\"000000\",\n\"colorTag\":\"black\",\n\"profile\":\"PLA\",\n},\n{\n\"filament\":\"PLA WHITE\",\n\"hexColor\":\"ffffff\",\n\"colorTag\":\"white\",\n\"profile\":\"PLA\",\n},\n],\n)\n"
                },
                {
                    "type": "Assignment",
                    "name": "test_mock",
                    "range": [
                        243,
                        317
                    ],
                    "children": [],
                    "content": "\ntest_mock={\n\"_make_request\":lambda*args,**kwargs:{\n\"filaments\":[\n{\n\"filament\":\"PLA BLACK\",\n\"hexColor\":\"000000\",\n\"colorTag\":\"black\",\n\"profile\":\"PLA\",\n},\n{\n\"filament\":\"PLA WHITE\",\n\"hexColor\":\"ffffff\",\n\"colorTag\":\"white\",\n\"profile\":\"PLA\",\n},\n]\n}\n"
                }
            ],
            "content": "\ndef __init__(self):\nsuper().__init__(\nid=\"7cc416f4-f305-4606-9b3b-452b8a81031c\",\ndescription=\"Get list of available filaments\",\ninput_schema=self.Input,\noutput_schema=self.Output,\ntest_input={\"credentials\":TEST_CREDENTIALS_INPUT},\ntest_credentials=TEST_CREDENTIALS,\ntest_output=[\n(\n\"filaments\",\n[\n{\n\"filament\":\"PLA BLACK\",\n\"hexColor\":\"000000\",\n\"colorTag\":\"black\",\n\"profile\":\"PLA\",\n},\n{\n\"filament\":\"PLA WHITE\",\n\"hexColor\":\"ffffff\",\n\"colorTag\":\"white\",\n\"profile\":\"PLA\",\n},\n],\n)\n],\ntest_mock={\n\"_make_request\":lambda*args,**kwargs:{\n\"filaments\":[\n{\n\"filament\":\"PLA BLACK\",\n\"hexColor\":\"000000\",\n\"colorTag\":\"black\",\n\"profile\":\"PLA\",\n},\n{\n\"filament\":\"PLA WHITE\",\n\"hexColor\":\"ffffff\",\n\"colorTag\":\"white\",\n\"profile\":\"PLA\",\n},\n]\n}\n},\n)"
        }
    ],
    "content": "\nclass Slant3DFilamentBlock(Slant3DBlockBase):\n\"\"\"Block for retrieving available filaments\"\"\"\n\nclass Input(BlockSchema):\ncredentials:Slant3DCredentialsInput=Slant3DCredentialsField()\n\nclass Output(BlockSchema):\nfilaments:List[Filament]=SchemaField(\ndescription=\"List of available filaments\"\n)\nerror:str=SchemaField(description=\"Error message if request failed\")\n\ndef __init__(self):\nsuper().__init__(\nid=\"7cc416f4-f305-4606-9b3b-452b8a81031c\",\ndescription=\"Get list of available filaments\",\ninput_schema=self.Input,\noutput_schema=self.Output,\ntest_input={\"credentials\":TEST_CREDENTIALS_INPUT},\ntest_credentials=TEST_CREDENTIALS,\ntest_output=[\n(\n\"filaments\",\n[\n{\n\"filament\":\"PLA BLACK\",\n\"hexColor\":\"000000\",\n\"colorTag\":\"black\",\n\"profile\":\"PLA\",\n},\n{\n\"filament\":\"PLA WHITE\",\n\"hexColor\":\"ffffff\",\n\"colorTag\":\"white\",\n\"profile\":\"PLA\",\n},\n],\n)\n],\ntest_mock={\n\"_make_request\":lambda*args,**kwargs:{\n\"filaments\":[\n{\n\"filament\":\"PLA BLACK\",\n\"hexColor\":\"000000\",\n\"colorTag\":\"black\",\n\"profile\":\"PLA\",\n},\n{\n\"filament\":\"PLA WHITE\",\n\"hexColor\":\"ffffff\",\n\"colorTag\":\"white\",\n\"profile\":\"PLA\",\n},\n]\n}\n},\n)"
}