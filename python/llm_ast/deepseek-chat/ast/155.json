{
    "type": "Program",
    "name": "Global",
    "range": [
        14,
        664
    ],
    "children": [
        {
            "type": "EnumDeclaration",
            "name": "VehicleSize",
            "range": [
                14,
                34
            ],
            "children": [
                {
                    "type": "EnumMember",
                    "name": "MOTORCYCLE",
                    "range": [
                        22,
                        24
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "0",
                            "range": [
                                24,
                                24
                            ],
                            "children": [],
                            "content": "0"
                        }
                    ],
                    "content": "MOTORCYCLE=0"
                },
                {
                    "type": "EnumMember",
                    "name": "COMPACT",
                    "range": [
                        26,
                        28
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "1",
                            "range": [
                                28,
                                28
                            ],
                            "children": [],
                            "content": "1"
                        }
                    ],
                    "content": "COMPACT=1"
                },
                {
                    "type": "EnumMember",
                    "name": "LARGE",
                    "range": [
                        30,
                        32
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "2",
                            "range": [
                                32,
                                32
                            ],
                            "children": [],
                            "content": "2"
                        }
                    ],
                    "content": "LARGE=2"
                }
            ],
            "content": "class VehicleSize(Enum):\n\nMOTORCYCLE=0\nCOMPACT=1\nLARGE=2\n\n"
        },
        {
            "type": "ClassDecl",
            "name": "Vehicle",
            "range": [
                35,
                145
            ],
            "children": [
                {
                    "type": "FunctionDecl",
                    "name": "__init__",
                    "range": [
                        45,
                        80
                    ],
                    "children": [
                        {
                            "type": "ParameterList",
                            "name": "",
                            "range": [
                                47,
                                55
                            ],
                            "children": [
                                {
                                    "type": "Parameter",
                                    "name": "self",
                                    "range": [
                                        48,
                                        48
                                    ],
                                    "children": [],
                                    "content": "("
                                },
                                {
                                    "type": "Parameter",
                                    "name": "vehicle_size",
                                    "range": [
                                        50,
                                        50
                                    ],
                                    "children": [],
                                    "content": ","
                                },
                                {
                                    "type": "Parameter",
                                    "name": "license_plate",
                                    "range": [
                                        52,
                                        52
                                    ],
                                    "children": [],
                                    "content": ","
                                },
                                {
                                    "type": "Parameter",
                                    "name": "spot_size",
                                    "range": [
                                        54,
                                        54
                                    ],
                                    "children": [],
                                    "content": ","
                                }
                            ],
                            "content": "__init__(self,vehicle_size,license_plate,spot_size"
                        },
                        {
                            "type": "Block",
                            "name": "",
                            "range": [
                                57,
                                80
                            ],
                            "children": [
                                {
                                    "type": "Assignment",
                                    "name": "",
                                    "range": [
                                        58,
                                        62
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "self.vehicle_size",
                                            "range": [
                                                58,
                                                60
                                            ],
                                            "children": [],
                                            "content": "\nself."
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "vehicle_size",
                                            "range": [
                                                62,
                                                62
                                            ],
                                            "children": [],
                                            "content": "="
                                        }
                                    ],
                                    "content": "\nself.vehicle_size="
                                },
                                {
                                    "type": "Assignment",
                                    "name": "",
                                    "range": [
                                        64,
                                        68
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "self.license_plate",
                                            "range": [
                                                64,
                                                66
                                            ],
                                            "children": [],
                                            "content": "\nself."
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "license_plate",
                                            "range": [
                                                68,
                                                68
                                            ],
                                            "children": [],
                                            "content": "="
                                        }
                                    ],
                                    "content": "\nself.license_plate="
                                },
                                {
                                    "type": "Assignment",
                                    "name": "",
                                    "range": [
                                        70,
                                        73
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "self.spot_size",
                                            "range": [
                                                70,
                                                72
                                            ],
                                            "children": [],
                                            "content": "\nself."
                                        }
                                    ],
                                    "content": "\nself.spot_size"
                                },
                                {
                                    "type": "Assignment",
                                    "name": "",
                                    "range": [
                                        74,
                                        79
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "self.spots_taken",
                                            "range": [
                                                74,
                                                76
                                            ],
                                            "children": [],
                                            "content": "\nself."
                                        },
                                        {
                                            "type": "Array",
                                            "name": "",
                                            "range": [
                                                78,
                                                79
                                            ],
                                            "children": [],
                                            "content": "=["
                                        }
                                    ],
                                    "content": "\nself.spots_taken=["
                                }
                            ],
                            "content": ":\nself.vehicle_size=vehicle_size\nself.license_plate=license_plate\nself.spot_size\nself.spots_taken=[]"
                        }
                    ],
                    "content": "\ndef __init__(self,vehicle_size,license_plate,spot_size):\nself.vehicle_size=vehicle_size\nself.license_plate=license_plate\nself.spot_size\nself.spots_taken=[]"
                },
                {
                    "type": "FunctionDecl",
                    "name": "clear_spots",
                    "range": [
                        82,
                        110
                    ],
                    "children": [
                        {
                            "type": "ParameterList",
                            "name": "",
                            "range": [
                                84,
                                86
                            ],
                            "children": [
                                {
                                    "type": "Parameter",
                                    "name": "self",
                                    "range": [
                                        85,
                                        85
                                    ],
                                    "children": [],
                                    "content": "("
                                }
                            ],
                            "content": "clear_spots(self"
                        },
                        {
                            "type": "Block",
                            "name": "",
                            "range": [
                                88,
                                110
                            ],
                            "children": [
                                {
                                    "type": "ForStatement",
                                    "name": "",
                                    "range": [
                                        89,
                                        103
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "spot",
                                            "range": [
                                                90,
                                                90
                                            ],
                                            "children": [],
                                            "content": "for"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "self.spots_taken",
                                            "range": [
                                                92,
                                                94
                                            ],
                                            "children": [],
                                            "content": "in self."
                                        },
                                        {
                                            "type": "Block",
                                            "name": "",
                                            "range": [
                                                96,
                                                103
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "spot.remove_vehicle",
                                                    "range": [
                                                        97,
                                                        102
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "self",
                                                            "range": [
                                                                101,
                                                                101
                                                            ],
                                                            "children": [],
                                                            "content": "("
                                                        }
                                                    ],
                                                    "content": "\nspot.remove_vehicle(self"
                                                }
                                            ],
                                            "content": ":\nspot.remove_vehicle(self)"
                                        }
                                    ],
                                    "content": "\nfor spot in self.spots_taken:\nspot.remove_vehicle(self)"
                                },
                                {
                                    "type": "Assignment",
                                    "name": "",
                                    "range": [
                                        104,
                                        109
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "self.spots_taken",
                                            "range": [
                                                104,
                                                106
                                            ],
                                            "children": [],
                                            "content": "\nself."
                                        },
                                        {
                                            "type": "Array",
                                            "name": "",
                                            "range": [
                                                108,
                                                109
                                            ],
                                            "children": [],
                                            "content": "=["
                                        }
                                    ],
                                    "content": "\nself.spots_taken=["
                                }
                            ],
                            "content": ":\nfor spot in self.spots_taken:\nspot.remove_vehicle(self)\nself.spots_taken=[]"
                        }
                    ],
                    "content": "\ndef clear_spots(self):\nfor spot in self.spots_taken:\nspot.remove_vehicle(self)\nself.spots_taken=[]"
                },
                {
                    "type": "FunctionDecl",
                    "name": "take_spot",
                    "range": [
                        112,
                        130
                    ],
                    "children": [
                        {
                            "type": "ParameterList",
                            "name": "",
                            "range": [
                                114,
                                118
                            ],
                            "children": [
                                {
                                    "type": "Parameter",
                                    "name": "self",
                                    "range": [
                                        115,
                                        115
                                    ],
                                    "children": [],
                                    "content": "("
                                },
                                {
                                    "type": "Parameter",
                                    "name": "spot",
                                    "range": [
                                        117,
                                        117
                                    ],
                                    "children": [],
                                    "content": ","
                                }
                            ],
                            "content": "take_spot(self,spot"
                        },
                        {
                            "type": "Block",
                            "name": "",
                            "range": [
                                120,
                                130
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "self.spots_taken.append",
                                    "range": [
                                        121,
                                        128
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "spot",
                                            "range": [
                                                127,
                                                127
                                            ],
                                            "children": [],
                                            "content": "("
                                        }
                                    ],
                                    "content": "\nself.spots_taken.append(spot"
                                }
                            ],
                            "content": ":\nself.spots_taken.append(spot)\n"
                        }
                    ],
                    "content": "\ndef take_spot(self,spot):\nself.spots_taken.append(spot)\n"
                },
                {
                    "type": "FunctionDecl",
                    "name": "can_fit_in_spot",
                    "range": [
                        134,
                        144
                    ],
                    "children": [
                        {
                            "type": "ParameterList",
                            "name": "",
                            "range": [
                                136,
                                140
                            ],
                            "children": [
                                {
                                    "type": "Parameter",
                                    "name": "self",
                                    "range": [
                                        137,
                                        137
                                    ],
                                    "children": [],
                                    "content": "("
                                },
                                {
                                    "type": "Parameter",
                                    "name": "spot",
                                    "range": [
                                        139,
                                        139
                                    ],
                                    "children": [],
                                    "content": ","
                                }
                            ],
                            "content": "can_fit_in_spot(self,spot"
                        },
                        {
                            "type": "Block",
                            "name": "",
                            "range": [
                                142,
                                144
                            ],
                            "children": [
                                {
                                    "type": "PassStatement",
                                    "name": "",
                                    "range": [
                                        143,
                                        143
                                    ],
                                    "children": [],
                                    "content": "\n"
                                }
                            ],
                            "content": ":\npass"
                        }
                    ],
                    "content": "\ndef can_fit_in_spot(self,spot):\npass"
                }
            ],
            "content": "\nclass Vehicle(metaclass=ABCMeta):\n\ndef __init__(self,vehicle_size,license_plate,spot_size):\nself.vehicle_size=vehicle_size\nself.license_plate=license_plate\nself.spot_size\nself.spots_taken=[]\n\ndef clear_spots(self):\nfor spot in self.spots_taken:\nspot.remove_vehicle(self)\nself.spots_taken=[]\n\ndef take_spot(self,spot):\nself.spots_taken.append(spot)\n\n@abstractmethod\ndef can_fit_in_spot(self,spot):\npass\n"
        },
        {
            "type": "ClassDecl",
            "name": "Motorcycle",
            "range": [
                146,
                150
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "Vehicle",
                    "range": [
                        148,
                        150
                    ],
                    "children": [],
                    "content": "class Motorcycle("
                }
            ],
            "content": "\n\nclass Motorcycle("
        },
        {
            "type": "FunctionDecl",
            "name": "__init__",
            "range": [
                154,
                181
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "",
                    "range": [
                        156,
                        160
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "self",
                            "range": [
                                157,
                                157
                            ],
                            "children": [],
                            "content": "__init__"
                        },
                        {
                            "type": "Parameter",
                            "name": "license_plate",
                            "range": [
                                159,
                                159
                            ],
                            "children": [],
                            "content": "self"
                        }
                    ],
                    "content": "def __init__(self,"
                },
                {
                    "type": "CallExpression",
                    "name": "SuperCall",
                    "range": [
                        163,
                        181
                    ],
                    "children": [
                        {
                            "type": "ArgumentList",
                            "name": "",
                            "range": [
                                164,
                                181
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "Motorcycle",
                                    "range": [
                                        165,
                                        165
                                    ],
                                    "children": [],
                                    "content": "super"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "self",
                                    "range": [
                                        167,
                                        167
                                    ],
                                    "children": [],
                                    "content": "Motorcycle"
                                },
                                {
                                    "type": "MemberExpression",
                                    "name": "VehicleSize.MOTORCYCLE",
                                    "range": [
                                        172,
                                        174
                                    ],
                                    "children": [],
                                    "content": "__init__(VehicleSize"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "license_plate",
                                    "range": [
                                        176,
                                        176
                                    ],
                                    "children": [],
                                    "content": "MOTORCYCLE"
                                },
                                {
                                    "type": "AssignmentExpression",
                                    "name": "spot_size=1",
                                    "range": [
                                        178,
                                        180
                                    ],
                                    "children": [],
                                    "content": "license_plate,spot_size"
                                }
                            ],
                            "content": "\nsuper(Motorcycle,self).__init__(VehicleSize.MOTORCYCLE,license_plate,spot_size="
                        }
                    ],
                    "content": ":\nsuper(Motorcycle,self).__init__(VehicleSize.MOTORCYCLE,license_plate,spot_size="
                }
            ],
            "content": "\n\ndef __init__(self,license_plate):\nsuper(Motorcycle,self).__init__(VehicleSize.MOTORCYCLE,license_plate,spot_size="
        },
        {
            "type": "FunctionDecl",
            "name": "can_fit_in_spot",
            "range": [
                184,
                195
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "",
                    "range": [
                        186,
                        190
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "self",
                            "range": [
                                187,
                                187
                            ],
                            "children": [],
                            "content": "can_fit_in_spot"
                        },
                        {
                            "type": "Parameter",
                            "name": "spot",
                            "range": [
                                189,
                                189
                            ],
                            "children": [],
                            "content": "self"
                        }
                    ],
                    "content": "def can_fit_in_spot(self,"
                },
                {
                    "type": "ReturnStatement",
                    "name": "",
                    "range": [
                        193,
                        194
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "True",
                            "range": [
                                194,
                                194
                            ],
                            "children": [],
                            "content": "\n"
                        }
                    ],
                    "content": ":\n"
                }
            ],
            "content": "\n\ndef can_fit_in_spot(self,spot):\nreturn"
        },
        {
            "type": "ClassDecl",
            "name": "Car",
            "range": [
                197,
                202
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "Vehicle",
                    "range": [
                        199,
                        201
                    ],
                    "children": [],
                    "content": "\nclass Car"
                }
            ],
            "content": "\n\n\nclass Car("
        },
        {
            "type": "FunctionDecl",
            "name": "__init__",
            "range": [
                205,
                233
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "",
                    "range": [
                        207,
                        211
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "self",
                            "range": [
                                208,
                                208
                            ],
                            "children": [],
                            "content": "def"
                        },
                        {
                            "type": "Parameter",
                            "name": "license_plate",
                            "range": [
                                210,
                                210
                            ],
                            "children": [],
                            "content": "("
                        }
                    ],
                    "content": "\ndef __init__(self"
                },
                {
                    "type": "CallExpression",
                    "name": "SuperCall",
                    "range": [
                        214,
                        232
                    ],
                    "children": [
                        {
                            "type": "Arguments",
                            "name": "",
                            "range": [
                                215,
                                232
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "Car",
                                    "range": [
                                        216,
                                        216
                                    ],
                                    "children": [],
                                    "content": "\n"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "self",
                                    "range": [
                                        218,
                                        218
                                    ],
                                    "children": [],
                                    "content": "("
                                },
                                {
                                    "type": "MemberExpression",
                                    "name": "VehicleSize.COMPACT",
                                    "range": [
                                        223,
                                        225
                                    ],
                                    "children": [],
                                    "content": ".__init__("
                                },
                                {
                                    "type": "Identifier",
                                    "name": "license_plate",
                                    "range": [
                                        227,
                                        227
                                    ],
                                    "children": [],
                                    "content": "."
                                },
                                {
                                    "type": "AssignmentExpression",
                                    "name": "spot_size=1",
                                    "range": [
                                        229,
                                        231
                                    ],
                                    "children": [],
                                    "content": ",license_plate,"
                                }
                            ],
                            "content": ":\nsuper(Car,self).__init__(VehicleSize.COMPACT,license_plate,spot_size"
                        }
                    ],
                    "content": "):\nsuper(Car,self).__init__(VehicleSize.COMPACT,license_plate,spot_size"
                }
            ],
            "content": ":\n\ndef __init__(self,license_plate):\nsuper(Car,self).__init__(VehicleSize.COMPACT,license_plate,spot_size="
        },
        {
            "type": "FunctionDecl",
            "name": "can_fit_in_spot",
            "range": [
                235,
                258
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "",
                    "range": [
                        237,
                        241
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "self",
                            "range": [
                                238,
                                238
                            ],
                            "children": [],
                            "content": "def"
                        },
                        {
                            "type": "Parameter",
                            "name": "spot",
                            "range": [
                                240,
                                240
                            ],
                            "children": [],
                            "content": "("
                        }
                    ],
                    "content": "\ndef can_fit_in_spot(self"
                },
                {
                    "type": "ReturnStatement",
                    "name": "",
                    "range": [
                        244,
                        257
                    ],
                    "children": [
                        {
                            "type": "BinaryExpression",
                            "name": "",
                            "range": [
                                245,
                                257
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": "spot.size",
                                    "range": [
                                        245,
                                        247
                                    ],
                                    "children": [],
                                    "content": ":\nreturn"
                                },
                                {
                                    "type": "InExpression",
                                    "name": "",
                                    "range": [
                                        248,
                                        257
                                    ],
                                    "children": [
                                        {
                                            "type": "Tuple",
                                            "name": "",
                                            "range": [
                                                249,
                                                257
                                            ],
                                            "children": [
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "VehicleSize.LARGE",
                                                    "range": [
                                                        250,
                                                        252
                                                    ],
                                                    "children": [],
                                                    "content": "size in("
                                                },
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "VehicleSize.COMPACT",
                                                    "range": [
                                                        254,
                                                        256
                                                    ],
                                                    "children": [],
                                                    "content": ".LARGE,"
                                                }
                                            ],
                                            "content": ".size in(VehicleSize.LARGE,VehicleSize"
                                        }
                                    ],
                                    "content": "spot.size in(VehicleSize.LARGE,VehicleSize"
                                }
                            ],
                            "content": ":\nreturn spot.size in(VehicleSize.LARGE,VehicleSize"
                        }
                    ],
                    "content": "):\nreturn spot.size in(VehicleSize.LARGE,VehicleSize"
                }
            ],
            "content": ")\n\ndef can_fit_in_spot(self,spot):\nreturn spot.size in(VehicleSize.LARGE,VehicleSize."
        },
        {
            "type": "ClassDecl",
            "name": "Bus",
            "range": [
                260,
                296
            ],
            "children": [
                {
                    "type": "FunctionDecl",
                    "name": "__init__",
                    "range": [
                        268,
                        296
                    ],
                    "children": [
                        {
                            "type": "ParameterList",
                            "name": "",
                            "range": [
                                270,
                                274
                            ],
                            "children": [
                                {
                                    "type": "Parameter",
                                    "name": "self",
                                    "range": [
                                        271,
                                        271
                                    ],
                                    "children": [],
                                    "content": "\n"
                                },
                                {
                                    "type": "Parameter",
                                    "name": "license_plate",
                                    "range": [
                                        273,
                                        273
                                    ],
                                    "children": [],
                                    "content": "__init__"
                                }
                            ],
                            "content": "\n\ndef __init__("
                        },
                        {
                            "type": "CallExpression",
                            "name": "SuperCall",
                            "range": [
                                277,
                                295
                            ],
                            "children": [
                                {
                                    "type": "ArgumentList",
                                    "name": "",
                                    "range": [
                                        278,
                                        295
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "Bus",
                                            "range": [
                                                279,
                                                279
                                            ],
                                            "children": [],
                                            "content": ":"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "self",
                                            "range": [
                                                281,
                                                281
                                            ],
                                            "children": [],
                                            "content": "super"
                                        },
                                        {
                                            "type": "MemberExpression",
                                            "name": "VehicleSize.LARGE",
                                            "range": [
                                                286,
                                                288
                                            ],
                                            "children": [],
                                            "content": ").__init__"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "license_plate",
                                            "range": [
                                                290,
                                                290
                                            ],
                                            "children": [],
                                            "content": "VehicleSize"
                                        },
                                        {
                                            "type": "AssignmentExpression",
                                            "name": "spot_size=5",
                                            "range": [
                                                292,
                                                294
                                            ],
                                            "children": [],
                                            "content": "LARGE,license_plate"
                                        }
                                    ],
                                    "content": "):\nsuper(Bus,self).__init__(VehicleSize.LARGE,license_plate,"
                                }
                            ],
                            "content": "license_plate):\nsuper(Bus,self).__init__(VehicleSize.LARGE,license_plate,"
                        }
                    ],
                    "content": "):\n\ndef __init__(self,license_plate):\nsuper(Bus,self).__init__(VehicleSize.LARGE,license_plate,spot_size"
                }
            ],
            "content": ")\n\n\nclass Bus(Vehicle):\n\ndef __init__(self,license_plate):\nsuper(Bus,self).__init__(VehicleSize.LARGE,license_plate,spot_size"
        },
        {
            "type": "FunctionDecl",
            "name": "can_fit_in_spot",
            "range": [
                298,
                316
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "",
                    "range": [
                        300,
                        304
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "self",
                            "range": [
                                301,
                                301
                            ],
                            "children": [],
                            "content": "\n"
                        },
                        {
                            "type": "Parameter",
                            "name": "spot",
                            "range": [
                                303,
                                303
                            ],
                            "children": [],
                            "content": "can_fit_in_spot"
                        }
                    ],
                    "content": "\n\ndef can_fit_in_spot("
                },
                {
                    "type": "ReturnStatement",
                    "name": "",
                    "range": [
                        307,
                        316
                    ],
                    "children": [
                        {
                            "type": "BinaryExpression",
                            "name": "",
                            "range": [
                                308,
                                315
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": "spot.size",
                                    "range": [
                                        308,
                                        310
                                    ],
                                    "children": [],
                                    "content": "):\n"
                                },
                                {
                                    "type": "MemberExpression",
                                    "name": "VehicleSize.LARGE",
                                    "range": [
                                        313,
                                        315
                                    ],
                                    "children": [],
                                    "content": ".size="
                                }
                            ],
                            "content": "):\nreturn spot.size="
                        }
                    ],
                    "content": "spot):\nreturn spot.size=="
                }
            ],
            "content": "5)\n\ndef can_fit_in_spot(self,spot):\nreturn spot.size=="
        },
        {
            "type": "ClassDecl",
            "name": "ParkingLot",
            "range": [
                318,
                323
            ],
            "children": [
                {
                    "type": "FunctionDecl",
                    "name": "__init__",
                    "range": [
                        326,
                        351
                    ],
                    "children": [
                        {
                            "type": "ParameterList",
                            "name": "",
                            "range": [
                                328,
                                332
                            ],
                            "children": [
                                {
                                    "type": "Parameter",
                                    "name": "self",
                                    "range": [
                                        329,
                                        329
                                    ],
                                    "children": [],
                                    "content": "\n"
                                },
                                {
                                    "type": "Parameter",
                                    "name": "num_levels",
                                    "range": [
                                        331,
                                        331
                                    ],
                                    "children": [],
                                    "content": "def"
                                }
                            ],
                            "content": ":\n\ndef __init__"
                        },
                        {
                            "type": "BlockStatement",
                            "name": "",
                            "range": [
                                334,
                                351
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "",
                                    "range": [
                                        335,
                                        339
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "",
                                            "range": [
                                                335,
                                                337
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "self",
                                                    "range": [
                                                        335,
                                                        335
                                                    ],
                                                    "children": [],
                                                    "content": ","
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "num_levels",
                                                    "range": [
                                                        337,
                                                        337
                                                    ],
                                                    "children": [],
                                                    "content": ")"
                                                }
                                            ],
                                            "content": ",num_levels)"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "num_levels",
                                            "range": [
                                                339,
                                                339
                                            ],
                                            "children": [],
                                            "content": "\n"
                                        }
                                    ],
                                    "content": ",num_levels):\n"
                                },
                                {
                                    "type": "AssignmentExpression",
                                    "name": "",
                                    "range": [
                                        341,
                                        346
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "",
                                            "range": [
                                                341,
                                                343
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "self",
                                                    "range": [
                                                        341,
                                                        341
                                                    ],
                                                    "children": [],
                                                    "content": "."
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "levels",
                                                    "range": [
                                                        343,
                                                        343
                                                    ],
                                                    "children": [],
                                                    "content": "="
                                                }
                                            ],
                                            "content": ".num_levels="
                                        },
                                        {
                                            "type": "ArrayExpression",
                                            "name": "",
                                            "range": [
                                                345,
                                                346
                                            ],
                                            "children": [],
                                            "content": "\nself"
                                        }
                                    ],
                                    "content": ".num_levels=num_levels\nself"
                                }
                            ],
                            "content": "self,num_levels):\nself.num_levels=num_levels\nself.levels=[]"
                        }
                    ],
                    "content": "object):\n\ndef __init__(self,num_levels):\nself.num_levels=num_levels\nself.levels=[]"
                },
                {
                    "type": "FunctionDecl",
                    "name": "park_vehicle",
                    "range": [
                        353,
                        384
                    ],
                    "children": [
                        {
                            "type": "ParameterList",
                            "name": "",
                            "range": [
                                355,
                                359
                            ],
                            "children": [
                                {
                                    "type": "Parameter",
                                    "name": "self",
                                    "range": [
                                        356,
                                        356
                                    ],
                                    "children": [],
                                    "content": "\n"
                                },
                                {
                                    "type": "Parameter",
                                    "name": "vehicle",
                                    "range": [
                                        358,
                                        358
                                    ],
                                    "children": [],
                                    "content": "def"
                                }
                            ],
                            "content": "Levels\n\ndef park_vehicle"
                        },
                        {
                            "type": "BlockStatement",
                            "name": "",
                            "range": [
                                361,
                                384
                            ],
                            "children": [
                                {
                                    "type": "ForStatement",
                                    "name": "",
                                    "range": [
                                        362,
                                        381
                                    ],
                                    "children": [
                                        {
                                            "type": "VariableDeclaration",
                                            "name": "level",
                                            "range": [
                                                363,
                                                363
                                            ],
                                            "children": [],
                                            "content": "vehicle"
                                        },
                                        {
                                            "type": "MemberExpression",
                                            "name": "",
                                            "range": [
                                                365,
                                                367
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "self",
                                                    "range": [
                                                        365,
                                                        365
                                                    ],
                                                    "children": [],
                                                    "content": ":"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "levels",
                                                    "range": [
                                                        367,
                                                        367
                                                    ],
                                                    "children": [],
                                                    "content": "for"
                                                }
                                            ],
                                            "content": ":\nfor"
                                        },
                                        {
                                            "type": "BlockStatement",
                                            "name": "",
                                            "range": [
                                                369,
                                                381
                                            ],
                                            "children": [
                                                {
                                                    "type": "IfStatement",
                                                    "name": "",
                                                    "range": [
                                                        370,
                                                        380
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "",
                                                            "range": [
                                                                371,
                                                                376
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "name": "",
                                                                    "range": [
                                                                        371,
                                                                        373
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "level",
                                                                            "range": [
                                                                                371,
                                                                                371
                                                                            ],
                                                                            "children": [],
                                                                            "content": "."
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "park_vehicle",
                                                                            "range": [
                                                                                373,
                                                                                373
                                                                            ],
                                                                            "children": [],
                                                                            "content": ":"
                                                                        }
                                                                    ],
                                                                    "content": ".levels:"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "vehicle",
                                                                    "range": [
                                                                        375,
                                                                        375
                                                                    ],
                                                                    "children": [],
                                                                    "content": "if"
                                                                }
                                                            ],
                                                            "content": ".levels:\nif level"
                                                        },
                                                        {
                                                            "type": "BlockStatement",
                                                            "name": "",
                                                            "range": [
                                                                378,
                                                                380
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "name": "",
                                                                    "range": [
                                                                        379,
                                                                        380
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "BooleanLiteral",
                                                                            "name": "True",
                                                                            "range": [
                                                                                380,
                                                                                380
                                                                            ],
                                                                            "children": [],
                                                                            "content": "vehicle"
                                                                        }
                                                                    ],
                                                                    "content": "(vehicle"
                                                                }
                                                            ],
                                                            "content": "park_vehicle(vehicle"
                                                        }
                                                    ],
                                                    "content": "self.levels:\nif level.park_vehicle(vehicle"
                                                }
                                            ],
                                            "content": "in self.levels:\nif level.park_vehicle(vehicle)"
                                        }
                                    ],
                                    "content": ",vehicle):\nfor level in self.levels:\nif level.park_vehicle(vehicle)"
                                },
                                {
                                    "type": "ReturnStatement",
                                    "name": "",
                                    "range": [
                                        382,
                                        383
                                    ],
                                    "children": [
                                        {
                                            "type": "BooleanLiteral",
                                            "name": "False",
                                            "range": [
                                                383,
                                                383
                                            ],
                                            "children": [],
                                            "content": "\n"
                                        }
                                    ],
                                    "content": ":\n"
                                }
                            ],
                            "content": "self,vehicle):\nfor level in self.levels:\nif level.park_vehicle(vehicle):\nreturn"
                        }
                    ],
                    "content": "List of Levels\n\ndef park_vehicle(self,vehicle):\nfor level in self.levels:\nif level.park_vehicle(vehicle):\nreturn"
                }
            ],
            "content": ".LARGE\n\n\nclass"
        },
        {
            "type": "ClassDecl",
            "name": "Level",
            "range": [
                387,
                439
            ],
            "children": [
                {
                    "type": "VariableDecl",
                    "name": "SPOTS_PER_ROW",
                    "range": [
                        395,
                        397
                    ],
                    "children": [
                        {
                            "type": "AssignmentExpression",
                            "name": "=",
                            "range": [
                                396,
                                397
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "10",
                                    "range": [
                                        397,
                                        397
                                    ],
                                    "children": [],
                                    "content": ":"
                                }
                            ],
                            "content": "):"
                        }
                    ],
                    "content": "object):"
                },
                {
                    "type": "FunctionDecl",
                    "name": "__init__",
                    "range": [
                        400,
                        439
                    ],
                    "children": [
                        {
                            "type": "ParameterList",
                            "name": "",
                            "range": [
                                402,
                                408
                            ],
                            "children": [
                                {
                                    "type": "Parameter",
                                    "name": "self",
                                    "range": [
                                        403,
                                        403
                                    ],
                                    "children": [],
                                    "content": "\n"
                                },
                                {
                                    "type": "Parameter",
                                    "name": "floor",
                                    "range": [
                                        405,
                                        405
                                    ],
                                    "children": [],
                                    "content": "def"
                                },
                                {
                                    "type": "Parameter",
                                    "name": "total_spots",
                                    "range": [
                                        407,
                                        407
                                    ],
                                    "children": [],
                                    "content": "("
                                }
                            ],
                            "content": "10\n\ndef __init__(self"
                        },
                        {
                            "type": "BlockStatement",
                            "name": "",
                            "range": [
                                410,
                                439
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "=",
                                    "range": [
                                        414,
                                        415
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "self.floor",
                                            "range": [
                                                411,
                                                413
                                            ],
                                            "children": [],
                                            "content": ",total_spots)"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "floor",
                                            "range": [
                                                415,
                                                415
                                            ],
                                            "children": [],
                                            "content": "\n"
                                        }
                                    ],
                                    "content": ":\n"
                                },
                                {
                                    "type": "AssignmentExpression",
                                    "name": "=",
                                    "range": [
                                        420,
                                        421
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "self.num_spots",
                                            "range": [
                                                417,
                                                419
                                            ],
                                            "children": [],
                                            "content": ".floor="
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "total_spots",
                                            "range": [
                                                421,
                                                421
                                            ],
                                            "children": [],
                                            "content": "\n"
                                        }
                                    ],
                                    "content": "floor\n"
                                },
                                {
                                    "type": "AssignmentExpression",
                                    "name": "=",
                                    "range": [
                                        426,
                                        427
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "self.available_spots",
                                            "range": [
                                                423,
                                                425
                                            ],
                                            "children": [],
                                            "content": ".num_spots="
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "0",
                                            "range": [
                                                427,
                                                427
                                            ],
                                            "children": [],
                                            "content": "\n"
                                        }
                                    ],
                                    "content": "total_spots\n"
                                },
                                {
                                    "type": "AssignmentExpression",
                                    "name": "=",
                                    "range": [
                                        432,
                                        433
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "self.spots",
                                            "range": [
                                                429,
                                                431
                                            ],
                                            "children": [],
                                            "content": ".available_spots="
                                        },
                                        {
                                            "type": "ArrayExpression",
                                            "name": "",
                                            "range": [
                                                433,
                                                434
                                            ],
                                            "children": [],
                                            "content": "\nself"
                                        }
                                    ],
                                    "content": "0\n"
                                }
                            ],
                            "content": "floor,total_spots):\nself.floor=floor\nself.num_spots=total_spots\nself.available_spots=0\nself.spots=[]"
                        }
                    ],
                    "content": "SPOTS_PER_ROW=10\n\ndef __init__(self,floor,total_spots):\nself.floor=floor\nself.num_spots=total_spots\nself.available_spots=0\nself.spots=[]"
                }
            ],
            "content": "return False\n\n\nclass Level(object):\n\nSPOTS_PER_ROW=10\n\ndef __init__(self,floor,total_spots):\nself.floor=floor\nself.num_spots=total_spots\nself.available_spots=0\nself.spots=[]"
        },
        {
            "type": "FunctionDecl",
            "name": "spot_freed",
            "range": [
                441,
                454
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "",
                    "range": [
                        443,
                        445
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "self",
                            "range": [
                                444,
                                444
                            ],
                            "children": [],
                            "content": "\n"
                        }
                    ],
                    "content": "ParkingSpots\n\n"
                },
                {
                    "type": "BlockStatement",
                    "name": "",
                    "range": [
                        447,
                        454
                    ],
                    "children": [
                        {
                            "type": "AssignmentExpression",
                            "name": "+=",
                            "range": [
                                451,
                                453
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": "self.available_spots",
                                    "range": [
                                        448,
                                        450
                                    ],
                                    "children": [],
                                    "content": "(self)"
                                },
                                {
                                    "type": "Literal",
                                    "name": "1",
                                    "range": [
                                        453,
                                        453
                                    ],
                                    "children": [],
                                    "content": "self"
                                }
                            ],
                            "content": ":\nself"
                        }
                    ],
                    "content": "spot_freed(self):\nself."
                }
            ],
            "content": "List of ParkingSpots\n\ndef spot_freed(self):\nself."
        },
        {
            "type": "FunctionDecl",
            "name": "park_vehicle",
            "range": [
                456,
                495
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "",
                    "range": [
                        458,
                        462
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "self",
                            "range": [
                                459,
                                459
                            ],
                            "children": [],
                            "content": "\n"
                        },
                        {
                            "type": "Parameter",
                            "name": "vehicle",
                            "range": [
                                461,
                                461
                            ],
                            "children": [],
                            "content": "def"
                        }
                    ],
                    "content": "1\n\ndef park_vehicle"
                },
                {
                    "type": "BlockStatement",
                    "name": "",
                    "range": [
                        464,
                        495
                    ],
                    "children": [
                        {
                            "type": "AssignmentExpression",
                            "name": "=",
                            "range": [
                                466,
                                467
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "spot",
                                    "range": [
                                        465,
                                        465
                                    ],
                                    "children": [],
                                    "content": ","
                                },
                                {
                                    "type": "CallExpression",
                                    "name": "self._find_available_spot",
                                    "range": [
                                        467,
                                        472
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "vehicle",
                                            "range": [
                                                471,
                                                471
                                            ],
                                            "children": [],
                                            "content": "="
                                        }
                                    ],
                                    "content": "):\nspot=self"
                                }
                            ],
                            "content": "vehicle)"
                        },
                        {
                            "type": "IfStatement",
                            "name": "",
                            "range": [
                                474,
                                495
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "",
                                    "range": [
                                        476,
                                        477
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "spot",
                                            "range": [
                                                475,
                                                475
                                            ],
                                            "children": [],
                                            "content": "("
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "None",
                                            "range": [
                                                477,
                                                477
                                            ],
                                            "children": [],
                                            "content": ")"
                                        }
                                    ],
                                    "content": "vehicle)"
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "",
                                    "range": [
                                        479,
                                        482
                                    ],
                                    "children": [
                                        {
                                            "type": "ReturnStatement",
                                            "name": "",
                                            "range": [
                                                480,
                                                481
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "None",
                                                    "range": [
                                                        481,
                                                        481
                                                    ],
                                                    "children": [],
                                                    "content": "is"
                                                }
                                            ],
                                            "content": "spot is"
                                        }
                                    ],
                                    "content": "if spot is None"
                                },
                                {
                                    "type": "ElseStatement",
                                    "name": "",
                                    "range": [
                                        483,
                                        495
                                    ],
                                    "children": [
                                        {
                                            "type": "BlockStatement",
                                            "name": "",
                                            "range": [
                                                485,
                                                495
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "spot.park_vehicle",
                                                    "range": [
                                                        487,
                                                        491
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "vehicle",
                                                            "range": [
                                                                490,
                                                                490
                                                            ],
                                                            "children": [],
                                                            "content": "\n"
                                                        }
                                                    ],
                                                    "content": "\nelse:\nspot"
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "name": "",
                                                    "range": [
                                                        493,
                                                        494
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "spot",
                                                            "range": [
                                                                494,
                                                                494
                                                            ],
                                                            "children": [],
                                                            "content": "("
                                                        }
                                                    ],
                                                    "content": "park_vehicle("
                                                }
                                            ],
                                            "content": "return None\nelse:\nspot.park_vehicle(vehicle"
                                        }
                                    ],
                                    "content": ":\nreturn None\nelse:\nspot.park_vehicle(vehicle"
                                }
                            ],
                            "content": "_find_available_spot(vehicle)\nif spot is None:\nreturn None\nelse:\nspot.park_vehicle(vehicle"
                        }
                    ],
                    "content": "self,vehicle):\nspot=self._find_available_spot(vehicle)\nif spot is None:\nreturn None\nelse:\nspot.park_vehicle(vehicle"
                }
            ],
            "content": "+=1\n\ndef park_vehicle(self,vehicle):\nspot=self._find_available_spot(vehicle)\nif spot is None:\nreturn None\nelse:\nspot.park_vehicle(vehicle"
        },
        {
            "type": "FunctionDecl",
            "name": "_find_available_spot",
            "range": [
                497,
                511
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "",
                    "range": [
                        499,
                        503
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "self",
                            "range": [
                                500,
                                500
                            ],
                            "children": [],
                            "content": "\n"
                        },
                        {
                            "type": "Parameter",
                            "name": "vehicle",
                            "range": [
                                502,
                                502
                            ],
                            "children": [],
                            "content": "def"
                        }
                    ],
                    "content": "spot\n\ndef _find_available_spot"
                },
                {
                    "type": "BlockStatement",
                    "name": "",
                    "range": [
                        505,
                        511
                    ],
                    "children": [
                        {
                            "type": "Comment",
                            "name": "",
                            "range": [
                                506,
                                508
                            ],
                            "children": [],
                            "content": ",vehicle)"
                        },
                        {
                            "type": "PassStatement",
                            "name": "",
                            "range": [
                                510,
                                510
                            ],
                            "children": [],
                            "content": "\n"
                        }
                    ],
                    "content": "self,vehicle):\n\"\""
                }
            ],
            "content": "\nreturn spot\n\ndef _find_available_spot(self,vehicle):\n\"\""
        },
        {
            "type": "FunctionDecl",
            "name": "_park_starting_at_spot",
            "range": [
                513,
                529
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "",
                    "range": [
                        515,
                        521
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "self",
                            "range": [
                                516,
                                516
                            ],
                            "children": [],
                            "content": "\n"
                        },
                        {
                            "type": "Parameter",
                            "name": "spot",
                            "range": [
                                518,
                                518
                            ],
                            "children": [],
                            "content": "def"
                        },
                        {
                            "type": "Parameter",
                            "name": "vehicle",
                            "range": [
                                520,
                                520
                            ],
                            "children": [],
                            "content": "("
                        }
                    ],
                    "content": "pass\n\ndef _park_starting_at_spot(self"
                },
                {
                    "type": "BlockStatement",
                    "name": "",
                    "range": [
                        523,
                        529
                    ],
                    "children": [
                        {
                            "type": "Comment",
                            "name": "",
                            "range": [
                                524,
                                526
                            ],
                            "children": [],
                            "content": ",vehicle)"
                        },
                        {
                            "type": "PassStatement",
                            "name": "",
                            "range": [
                                528,
                                528
                            ],
                            "children": [],
                            "content": "\n"
                        }
                    ],
                    "content": "spot,vehicle):\n\"\""
                }
            ],
            "content": "\"\"\npass\n\ndef _park_starting_at_spot(self,spot,vehicle):\n\"\""
        },
        {
            "type": "ClassDecl",
            "name": "ParkingSpot",
            "range": [
                532,
                664
            ],
            "children": [
                {
                    "type": "FunctionDecl",
                    "name": "__init__",
                    "range": [
                        540,
                        592
                    ],
                    "children": [
                        {
                            "type": "ParameterList",
                            "name": "",
                            "range": [
                                542,
                                554
                            ],
                            "children": [
                                {
                                    "type": "Parameter",
                                    "name": "self",
                                    "range": [
                                        543,
                                        543
                                    ],
                                    "children": [],
                                    "content": "\n"
                                },
                                {
                                    "type": "Parameter",
                                    "name": "level",
                                    "range": [
                                        545,
                                        545
                                    ],
                                    "children": [],
                                    "content": "def"
                                },
                                {
                                    "type": "Parameter",
                                    "name": "row",
                                    "range": [
                                        547,
                                        547
                                    ],
                                    "children": [],
                                    "content": "("
                                },
                                {
                                    "type": "Parameter",
                                    "name": "spot_number",
                                    "range": [
                                        549,
                                        549
                                    ],
                                    "children": [],
                                    "content": ","
                                },
                                {
                                    "type": "Parameter",
                                    "name": "spot_size",
                                    "range": [
                                        551,
                                        551
                                    ],
                                    "children": [],
                                    "content": ","
                                },
                                {
                                    "type": "Parameter",
                                    "name": "vehicle_size",
                                    "range": [
                                        553,
                                        553
                                    ],
                                    "children": [],
                                    "content": ","
                                }
                            ],
                            "content": ":\n\ndef __init__(self,level,row,spot_number"
                        },
                        {
                            "type": "Block",
                            "name": "",
                            "range": [
                                556,
                                592
                            ],
                            "children": [
                                {
                                    "type": "Assignment",
                                    "name": "",
                                    "range": [
                                        557,
                                        561
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "self.level",
                                            "range": [
                                                557,
                                                559
                                            ],
                                            "children": [],
                                            "content": ",vehicle_size)"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "level",
                                            "range": [
                                                561,
                                                561
                                            ],
                                            "children": [],
                                            "content": "\n"
                                        }
                                    ],
                                    "content": ",vehicle_size):\n"
                                },
                                {
                                    "type": "Assignment",
                                    "name": "",
                                    "range": [
                                        563,
                                        567
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "self.row",
                                            "range": [
                                                563,
                                                565
                                            ],
                                            "children": [],
                                            "content": ".level="
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "row",
                                            "range": [
                                                567,
                                                567
                                            ],
                                            "children": [],
                                            "content": "\n"
                                        }
                                    ],
                                    "content": ".level=level\n"
                                },
                                {
                                    "type": "Assignment",
                                    "name": "",
                                    "range": [
                                        569,
                                        573
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "self.spot_number",
                                            "range": [
                                                569,
                                                571
                                            ],
                                            "children": [],
                                            "content": ".row="
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "spot_number",
                                            "range": [
                                                573,
                                                573
                                            ],
                                            "children": [],
                                            "content": "\n"
                                        }
                                    ],
                                    "content": ".row=row\n"
                                },
                                {
                                    "type": "Assignment",
                                    "name": "",
                                    "range": [
                                        575,
                                        579
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "self.spot_size",
                                            "range": [
                                                575,
                                                577
                                            ],
                                            "children": [],
                                            "content": ".spot_number="
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "spot_size",
                                            "range": [
                                                579,
                                                579
                                            ],
                                            "children": [],
                                            "content": "\n"
                                        }
                                    ],
                                    "content": ".spot_number=spot_number\n"
                                },
                                {
                                    "type": "Assignment",
                                    "name": "",
                                    "range": [
                                        581,
                                        585
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "self.vehicle_size",
                                            "range": [
                                                581,
                                                583
                                            ],
                                            "children": [],
                                            "content": ".spot_size="
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "vehicle_size",
                                            "range": [
                                                585,
                                                585
                                            ],
                                            "children": [],
                                            "content": "\n"
                                        }
                                    ],
                                    "content": ".spot_size=spot_size\n"
                                },
                                {
                                    "type": "Assignment",
                                    "name": "",
                                    "range": [
                                        587,
                                        591
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "self.vehicle",
                                            "range": [
                                                587,
                                                589
                                            ],
                                            "children": [],
                                            "content": ".vehicle_size="
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "None",
                                            "range": [
                                                591,
                                                591
                                            ],
                                            "children": [],
                                            "content": "\n"
                                        }
                                    ],
                                    "content": ".vehicle_size=vehicle_size\n"
                                }
                            ],
                            "content": "spot_size,vehicle_size):\nself.level=level\nself.row=row\nself.spot_number=spot_number\nself.spot_size=spot_size\nself.vehicle_size=vehicle_size\nself"
                        }
                    ],
                    "content": "object):\n\ndef __init__(self,level,row,spot_number,spot_size,vehicle_size):\nself.level=level\nself.row=row\nself.spot_number=spot_number\nself.spot_size=spot_size\nself.vehicle_size=vehicle_size\nself"
                },
                {
                    "type": "FunctionDecl",
                    "name": "is_available",
                    "range": [
                        594,
                        611
                    ],
                    "children": [
                        {
                            "type": "ParameterList",
                            "name": "",
                            "range": [
                                596,
                                598
                            ],
                            "children": [
                                {
                                    "type": "Parameter",
                                    "name": "self",
                                    "range": [
                                        597,
                                        597
                                    ],
                                    "children": [],
                                    "content": "\n"
                                }
                            ],
                            "content": "None\n\n"
                        },
                        {
                            "type": "Block",
                            "name": "",
                            "range": [
                                600,
                                611
                            ],
                            "children": [
                                {
                                    "type": "ReturnStatement",
                                    "name": "",
                                    "range": [
                                        601,
                                        610
                                    ],
                                    "children": [
                                        {
                                            "type": "ConditionalExpression",
                                            "name": "",
                                            "range": [
                                                602,
                                                610
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "True",
                                                    "range": [
                                                        602,
                                                        602
                                                    ],
                                                    "children": [],
                                                    "content": "self"
                                                },
                                                {
                                                    "type": "BinaryExpression",
                                                    "name": "",
                                                    "range": [
                                                        604,
                                                        608
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "self.vehicle",
                                                            "range": [
                                                                604,
                                                                606
                                                            ],
                                                            "children": [],
                                                            "content": ":\nreturn"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "name": "None",
                                                            "range": [
                                                                608,
                                                                608
                                                            ],
                                                            "children": [],
                                                            "content": "if"
                                                        }
                                                    ],
                                                    "content": ":\nreturn True if"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "name": "False",
                                                    "range": [
                                                        610,
                                                        610
                                                    ],
                                                    "children": [],
                                                    "content": "."
                                                }
                                            ],
                                            "content": "self):\nreturn True if self."
                                        }
                                    ],
                                    "content": "(self):\nreturn True if self."
                                }
                            ],
                            "content": "is_available(self):\nreturn True if self.vehicle"
                        }
                    ],
                    "content": "vehicle=None\n\ndef is_available(self):\nreturn True if self.vehicle"
                },
                {
                    "type": "FunctionDecl",
                    "name": "can_fit_vehicle",
                    "range": [
                        613,
                        641
                    ],
                    "children": [
                        {
                            "type": "ParameterList",
                            "name": "",
                            "range": [
                                615,
                                619
                            ],
                            "children": [
                                {
                                    "type": "Parameter",
                                    "name": "self",
                                    "range": [
                                        616,
                                        616
                                    ],
                                    "children": [],
                                    "content": "\n"
                                },
                                {
                                    "type": "Parameter",
                                    "name": "vehicle",
                                    "range": [
                                        618,
                                        618
                                    ],
                                    "children": [],
                                    "content": "def"
                                }
                            ],
                            "content": "False\n\ndef can_fit_vehicle"
                        },
                        {
                            "type": "Block",
                            "name": "",
                            "range": [
                                621,
                                641
                            ],
                            "children": [
                                {
                                    "type": "IfStatement",
                                    "name": "",
                                    "range": [
                                        622,
                                        633
                                    ],
                                    "children": [
                                        {
                                            "type": "BinaryExpression",
                                            "name": "",
                                            "range": [
                                                623,
                                                628
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "self.vehicle",
                                                    "range": [
                                                        623,
                                                        625
                                                    ],
                                                    "children": [],
                                                    "content": "vehicle):"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "name": "None",
                                                    "range": [
                                                        627,
                                                        627
                                                    ],
                                                    "children": [],
                                                    "content": "if"
                                                }
                                            ],
                                            "content": "vehicle):\nif self"
                                        },
                                        {
                                            "type": "Block",
                                            "name": "",
                                            "range": [
                                                630,
                                                633
                                            ],
                                            "children": [
                                                {
                                                    "type": "ReturnStatement",
                                                    "name": "",
                                                    "range": [
                                                        631,
                                                        632
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Literal",
                                                            "name": "False",
                                                            "range": [
                                                                632,
                                                                632
                                                            ],
                                                            "children": [],
                                                            "content": "not"
                                                        }
                                                    ],
                                                    "content": "is not"
                                                }
                                            ],
                                            "content": "vehicle is not None"
                                        }
                                    ],
                                    "content": ",vehicle):\nif self.vehicle is not None"
                                },
                                {
                                    "type": "ReturnStatement",
                                    "name": "",
                                    "range": [
                                        634,
                                        641
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "",
                                            "range": [
                                                635,
                                                640
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "vehicle.can_fit_in_spot",
                                                    "range": [
                                                        635,
                                                        637
                                                    ],
                                                    "children": [],
                                                    "content": "\nreturn False"
                                                },
                                                {
                                                    "type": "ArgumentList",
                                                    "name": "",
                                                    "range": [
                                                        638,
                                                        640
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "self",
                                                            "range": [
                                                                639,
                                                                639
                                                            ],
                                                            "children": [],
                                                            "content": "return"
                                                        }
                                                    ],
                                                    "content": "\nreturn vehicle"
                                                }
                                            ],
                                            "content": "\nreturn False\nreturn vehicle"
                                        }
                                    ],
                                    "content": ":\nreturn False\nreturn vehicle."
                                }
                            ],
                            "content": "self,vehicle):\nif self.vehicle is not None:\nreturn False\nreturn vehicle."
                        }
                    ],
                    "content": "None else False\n\ndef can_fit_vehicle(self,vehicle):\nif self.vehicle is not None:\nreturn False\nreturn vehicle."
                },
                {
                    "type": "FunctionDecl",
                    "name": "park_vehicle",
                    "range": [
                        643,
                        653
                    ],
                    "children": [
                        {
                            "type": "ParameterList",
                            "name": "",
                            "range": [
                                645,
                                649
                            ],
                            "children": [
                                {
                                    "type": "Parameter",
                                    "name": "self",
                                    "range": [
                                        646,
                                        646
                                    ],
                                    "children": [],
                                    "content": "\n"
                                },
                                {
                                    "type": "Parameter",
                                    "name": "vehicle",
                                    "range": [
                                        648,
                                        648
                                    ],
                                    "children": [],
                                    "content": "def"
                                }
                            ],
                            "content": ")\n\ndef park_vehicle"
                        },
                        {
                            "type": "Block",
                            "name": "",
                            "range": [
                                651,
                                653
                            ],
                            "children": [
                                {
                                    "type": "PassStatement",
                                    "name": "",
                                    "range": [
                                        652,
                                        652
                                    ],
                                    "children": [],
                                    "content": ","
                                }
                            ],
                            "content": "self,vehicle"
                        }
                    ],
                    "content": "(self)\n\ndef park_vehicle(self,vehicle"
                },
                {
                    "type": "FunctionDecl",
                    "name": "remove_vehicle",
                    "range": [
                        655,
                        663
                    ],
                    "children": [
                        {
                            "type": "ParameterList",
                            "name": "",
                            "range": [
                                657,
                                659
                            ],
                            "children": [
                                {
                                    "type": "Parameter",
                                    "name": "self",
                                    "range": [
                                        658,
                                        658
                                    ],
                                    "children": [],
                                    "content": "\n"
                                }
                            ],
                            "content": "pass\n\n"
                        },
                        {
                            "type": "Block",
                            "name": "",
                            "range": [
                                661,
                                663
                            ],
                            "children": [
                                {
                                    "type": "PassStatement",
                                    "name": "",
                                    "range": [
                                        662,
                                        662
                                    ],
                                    "children": [],
                                    "content": "("
                                }
                            ],
                            "content": "remove_vehicle(self"
                        }
                    ],
                    "content": ":\npass\n\ndef remove_vehicle(self"
                }
            ],
            "content": "\npass\n\n\nclass ParkingSpot(object):\n\ndef __init__(self,level,row,spot_number,spot_size,vehicle_size):\nself.level=level\nself.row=row\nself.spot_number=spot_number\nself.spot_size=spot_size\nself.vehicle_size=vehicle_size\nself.vehicle=None\n\ndef is_available(self):\nreturn True if self.vehicle is None else False\n\ndef can_fit_vehicle(self,vehicle):\nif self.vehicle is not None:\nreturn False\nreturn vehicle.can_fit_in_spot(self)\n\ndef park_vehicle(self,vehicle):\npass\n\ndef remove_vehicle(self)"
        }
    ],
    "content": "class VehicleSize(Enum):\n\nMOTORCYCLE=0\nCOMPACT=1\nLARGE=2\n\n\nclass Vehicle(metaclass=ABCMeta):\n\ndef __init__(self,vehicle_size,license_plate,spot_size):\nself.vehicle_size=vehicle_size\nself.license_plate=license_plate\nself.spot_size\nself.spots_taken=[]\n\ndef clear_spots(self):\nfor spot in self.spots_taken:\nspot.remove_vehicle(self)\nself.spots_taken=[]\n\ndef take_spot(self,spot):\nself.spots_taken.append(spot)\n\n@abstractmethod\ndef can_fit_in_spot(self,spot):\npass\n\n\nclass Motorcycle(Vehicle):\n\ndef __init__(self,license_plate):\nsuper(Motorcycle,self).__init__(VehicleSize.MOTORCYCLE,license_plate,spot_size=1)\n\ndef can_fit_in_spot(self,spot):\nreturn True\n\n\nclass Car(Vehicle):\n\ndef __init__(self,license_plate):\nsuper(Car,self).__init__(VehicleSize.COMPACT,license_plate,spot_size=1)\n\ndef can_fit_in_spot(self,spot):\nreturn spot.size in(VehicleSize.LARGE,VehicleSize.COMPACT)\n\n\nclass Bus(Vehicle):\n\ndef __init__(self,license_plate):\nsuper(Bus,self).__init__(VehicleSize.LARGE,license_plate,spot_size=5)\n\ndef can_fit_in_spot(self,spot):\nreturn spot.size==VehicleSize.LARGE\n\n\nclass ParkingLot(object):\n\ndef __init__(self,num_levels):\nself.num_levels=num_levels\nself.levels=[]#List of Levels\n\ndef park_vehicle(self,vehicle):\nfor level in self.levels:\nif level.park_vehicle(vehicle):\nreturn True\nreturn False\n\n\nclass Level(object):\n\nSPOTS_PER_ROW=10\n\ndef __init__(self,floor,total_spots):\nself.floor=floor\nself.num_spots=total_spots\nself.available_spots=0\nself.spots=[]#List of ParkingSpots\n\ndef spot_freed(self):\nself.available_spots+=1\n\ndef park_vehicle(self,vehicle):\nspot=self._find_available_spot(vehicle)\nif spot is None:\nreturn None\nelse:\nspot.park_vehicle(vehicle)\nreturn spot\n\ndef _find_available_spot(self,vehicle):\n\"\"\"Find an available spot where vehicle can fit, or return None\"\"\"\npass\n\ndef _park_starting_at_spot(self,spot,vehicle):\n\"\"\"Occupy starting at spot.spot_number to vehicle.spot_size.\"\"\"\npass\n\n\nclass ParkingSpot(object):\n\ndef __init__(self,level,row,spot_number,spot_size,vehicle_size):\nself.level=level\nself.row=row\nself.spot_number=spot_number\nself.spot_size=spot_size\nself.vehicle_size=vehicle_size\nself.vehicle=None\n\ndef is_available(self):\nreturn True if self.vehicle is None else False\n\ndef can_fit_vehicle(self,vehicle):\nif self.vehicle is not None:\nreturn False\nreturn vehicle.can_fit_in_spot(self)\n\ndef park_vehicle(self,vehicle):\npass\n\ndef remove_vehicle(self)"
}