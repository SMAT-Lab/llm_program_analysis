{
    "type": "Program",
    "name": "Global",
    "range": [
        0,
        2959
    ],
    "children": [
        {
            "type": "ImportDeclaration",
            "name": "defaultdict",
            "range": [
                0,
                4
            ],
            "children": [
                {
                    "type": "FromImport",
                    "name": "collections",
                    "range": [
                        0,
                        1
                    ],
                    "children": [],
                    "content": "from collections"
                },
                {
                    "type": "Import",
                    "name": "defaultdict",
                    "range": [
                        2,
                        3
                    ],
                    "children": [],
                    "content": "import defaultdict"
                }
            ],
            "content": "from collections import defaultdict\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "datetime, timezone",
            "range": [
                5,
                11
            ],
            "children": [
                {
                    "type": "FromImport",
                    "name": "datetime",
                    "range": [
                        5,
                        6
                    ],
                    "children": [],
                    "content": "from datetime"
                },
                {
                    "type": "Import",
                    "name": "datetime, timezone",
                    "range": [
                        7,
                        10
                    ],
                    "children": [],
                    "content": "import datetime,timezone"
                }
            ],
            "content": "from datetime import datetime,timezone\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "Manager",
            "range": [
                12,
                16
            ],
            "children": [
                {
                    "type": "FromImport",
                    "name": "multiprocessing",
                    "range": [
                        12,
                        13
                    ],
                    "children": [],
                    "content": "from multiprocessing"
                },
                {
                    "type": "Import",
                    "name": "Manager",
                    "range": [
                        14,
                        15
                    ],
                    "children": [],
                    "content": "import Manager"
                }
            ],
            "content": "from multiprocessing import Manager\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "Any, AsyncGenerator, Generator, Generic, TypeVar",
            "range": [
                17,
                29
            ],
            "children": [
                {
                    "type": "FromImport",
                    "name": "typing",
                    "range": [
                        17,
                        18
                    ],
                    "children": [],
                    "content": "from typing"
                },
                {
                    "type": "Import",
                    "name": "Any, AsyncGenerator, Generator, Generic, TypeVar",
                    "range": [
                        19,
                        28
                    ],
                    "children": [],
                    "content": "import Any,AsyncGenerator,Generator,Generic,TypeVar"
                }
            ],
            "content": "from typing import Any,AsyncGenerator,Generator,Generic,TypeVar\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "AgentExecutionStatus",
            "range": [
                31,
                37
            ],
            "children": [
                {
                    "type": "FromImport",
                    "name": "prisma.enums",
                    "range": [
                        31,
                        34
                    ],
                    "children": [],
                    "content": "from prisma.enums"
                },
                {
                    "type": "Import",
                    "name": "AgentExecutionStatus",
                    "range": [
                        35,
                        36
                    ],
                    "children": [],
                    "content": "import AgentExecutionStatus"
                }
            ],
            "content": "from prisma.enums import AgentExecutionStatus\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "AgentGraphExecution, AgentNodeExecution, AgentNodeExecutionInputOutput",
            "range": [
                38,
                55
            ],
            "children": [
                {
                    "type": "FromImport",
                    "name": "prisma.models",
                    "range": [
                        38,
                        41
                    ],
                    "children": [],
                    "content": "from prisma.models"
                },
                {
                    "type": "Import",
                    "name": "AgentGraphExecution, AgentNodeExecution, AgentNodeExecutionInputOutput",
                    "range": [
                        42,
                        54
                    ],
                    "children": [],
                    "content": "import(\nAgentGraphExecution,\nAgentNodeExecution,\nAgentNodeExecutionInputOutput,\n)"
                }
            ],
            "content": "from prisma.models import(\nAgentGraphExecution,\nAgentNodeExecution,\nAgentNodeExecutionInputOutput,\n)\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "BaseModel",
            "range": [
                56,
                60
            ],
            "children": [
                {
                    "type": "FromImport",
                    "name": "pydantic",
                    "range": [
                        56,
                        57
                    ],
                    "children": [],
                    "content": "from pydantic"
                },
                {
                    "type": "Import",
                    "name": "BaseModel",
                    "range": [
                        58,
                        59
                    ],
                    "children": [],
                    "content": "import BaseModel"
                }
            ],
            "content": "from pydantic import BaseModel\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "BlockData, BlockInput, CompletedBlockOutput",
            "range": [
                62,
                74
            ],
            "children": [
                {
                    "type": "FromImport",
                    "name": "backend.data.block",
                    "range": [
                        62,
                        67
                    ],
                    "children": [],
                    "content": "from backend.data.block"
                },
                {
                    "type": "Import",
                    "name": "BlockData, BlockInput, CompletedBlockOutput",
                    "range": [
                        68,
                        73
                    ],
                    "children": [],
                    "content": "import BlockData,BlockInput,CompletedBlockOutput"
                }
            ],
            "content": "from backend.data.block import BlockData,BlockInput,CompletedBlockOutput\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "EXECUTION_RESULT_INCLUDE, GRAPH_EXECUTION_INCLUDE",
            "range": [
                75,
                85
            ],
            "children": [
                {
                    "type": "FromImport",
                    "name": "backend.data.includes",
                    "range": [
                        75,
                        80
                    ],
                    "children": [],
                    "content": "from backend.data.includes"
                },
                {
                    "type": "Import",
                    "name": "EXECUTION_RESULT_INCLUDE, GRAPH_EXECUTION_INCLUDE",
                    "range": [
                        81,
                        84
                    ],
                    "children": [],
                    "content": "import EXECUTION_RESULT_INCLUDE,GRAPH_EXECUTION_INCLUDE"
                }
            ],
            "content": "from backend.data.includes import EXECUTION_RESULT_INCLUDE,GRAPH_EXECUTION_INCLUDE\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "AsyncRedisEventBus, RedisEventBus",
            "range": [
                86,
                96
            ],
            "children": [
                {
                    "type": "FromImport",
                    "name": "backend.data.queue",
                    "range": [
                        86,
                        91
                    ],
                    "children": [],
                    "content": "from backend.data.queue"
                },
                {
                    "type": "Import",
                    "name": "AsyncRedisEventBus, RedisEventBus",
                    "range": [
                        92,
                        95
                    ],
                    "children": [],
                    "content": "import AsyncRedisEventBus,RedisEventBus"
                }
            ],
            "content": "from backend.data.queue import AsyncRedisEventBus,RedisEventBus\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "json, mock",
            "range": [
                97,
                105
            ],
            "children": [
                {
                    "type": "FromImport",
                    "name": "backend.util",
                    "range": [
                        97,
                        100
                    ],
                    "children": [],
                    "content": "from backend.util"
                },
                {
                    "type": "Import",
                    "name": "json, mock",
                    "range": [
                        101,
                        104
                    ],
                    "children": [],
                    "content": "import json,mock"
                }
            ],
            "content": "from backend.util import json,mock\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "Config",
            "range": [
                106,
                114
            ],
            "children": [
                {
                    "type": "FromImport",
                    "name": "backend.util.settings",
                    "range": [
                        106,
                        111
                    ],
                    "children": [],
                    "content": "from backend.util.settings"
                },
                {
                    "type": "Import",
                    "name": "Config",
                    "range": [
                        112,
                        113
                    ],
                    "children": [],
                    "content": "import Config"
                }
            ],
            "content": "from backend.util.settings import Config\n"
        },
        {
            "type": "ClassDecl",
            "name": "GraphExecutionEntry",
            "range": [
                116,
                142
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "BaseModel",
                    "range": [
                        118,
                        120
                    ],
                    "children": [],
                    "content": "GraphExecutionEntry(BaseModel"
                },
                {
                    "type": "Property",
                    "name": "user_id",
                    "range": [
                        123,
                        125
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                125,
                                125
                            ],
                            "children": [],
                            "content": ":"
                        }
                    ],
                    "content": "\nuser_id:"
                },
                {
                    "type": "Property",
                    "name": "graph_exec_id",
                    "range": [
                        127,
                        129
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                129,
                                129
                            ],
                            "children": [],
                            "content": ":"
                        }
                    ],
                    "content": "\ngraph_exec_id:"
                },
                {
                    "type": "Property",
                    "name": "graph_id",
                    "range": [
                        131,
                        133
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                133,
                                133
                            ],
                            "children": [],
                            "content": ":"
                        }
                    ],
                    "content": "\ngraph_id:"
                },
                {
                    "type": "Property",
                    "name": "start_node_execs",
                    "range": [
                        135,
                        140
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "list",
                            "range": [
                                137,
                                137
                            ],
                            "children": [
                                {
                                    "type": "GenericType",
                                    "name": "NodeExecutionEntry",
                                    "range": [
                                        139,
                                        139
                                    ],
                                    "children": [],
                                    "content": "["
                                }
                            ],
                            "content": ":"
                        }
                    ],
                    "content": "\nstart_node_execs:list[\"NodeExecutionEntry\""
                }
            ],
            "content": "\nclass GraphExecutionEntry(BaseModel):\nuser_id:str\ngraph_exec_id:str\ngraph_id:str\nstart_node_execs:list[\"NodeExecutionEntry\"]\n"
        },
        {
            "type": "ClassDecl",
            "name": "NodeExecutionEntry",
            "range": [
                143,
                174
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "BaseModel",
                    "range": [
                        145,
                        147
                    ],
                    "children": [],
                    "content": "class NodeExecutionEntry("
                },
                {
                    "type": "ClassBody",
                    "name": "",
                    "range": [
                        148,
                        174
                    ],
                    "children": [
                        {
                            "type": "Property",
                            "name": "user_id",
                            "range": [
                                150,
                                152
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "str",
                                    "range": [
                                        152,
                                        152
                                    ],
                                    "children": [],
                                    "content": "user_id"
                                }
                            ],
                            "content": ":\nuser_id"
                        },
                        {
                            "type": "Property",
                            "name": "graph_exec_id",
                            "range": [
                                154,
                                156
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "str",
                                    "range": [
                                        156,
                                        156
                                    ],
                                    "children": [],
                                    "content": "graph_exec_id"
                                }
                            ],
                            "content": "str\ngraph_exec_id"
                        },
                        {
                            "type": "Property",
                            "name": "graph_id",
                            "range": [
                                158,
                                160
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "str",
                                    "range": [
                                        160,
                                        160
                                    ],
                                    "children": [],
                                    "content": "graph_id"
                                }
                            ],
                            "content": "str\ngraph_id"
                        },
                        {
                            "type": "Property",
                            "name": "node_exec_id",
                            "range": [
                                162,
                                164
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "str",
                                    "range": [
                                        164,
                                        164
                                    ],
                                    "children": [],
                                    "content": "node_exec_id"
                                }
                            ],
                            "content": "str\nnode_exec_id"
                        },
                        {
                            "type": "Property",
                            "name": "node_id",
                            "range": [
                                166,
                                168
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "str",
                                    "range": [
                                        168,
                                        168
                                    ],
                                    "children": [],
                                    "content": "node_id"
                                }
                            ],
                            "content": "str\nnode_id"
                        },
                        {
                            "type": "Property",
                            "name": "data",
                            "range": [
                                170,
                                172
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "BlockInput",
                                    "range": [
                                        172,
                                        172
                                    ],
                                    "children": [],
                                    "content": "data"
                                }
                            ],
                            "content": "str\ndata"
                        }
                    ],
                    "content": "BaseModel):\nuser_id:str\ngraph_exec_id:str\ngraph_id:str\nnode_exec_id:str\nnode_id:str\ndata:BlockInput"
                }
            ],
            "content": "\n\nclass NodeExecutionEntry(BaseModel):\nuser_id:str\ngraph_exec_id:str\ngraph_id:str\nnode_exec_id:str\nnode_id:str\ndata:BlockInput"
        },
        {
            "type": "FunctionDecl",
            "name": "__init__",
            "range": [
                204,
                222
            ],
            "children": [
                {
                    "type": "AssignmentExpression",
                    "name": "=",
                    "range": [
                        211,
                        221
                    ],
                    "children": [
                        {
                            "type": "MemberExpression",
                            "name": ".",
                            "range": [
                                211,
                                213
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "self",
                                    "range": [
                                        211,
                                        211
                                    ],
                                    "children": [],
                                    "content": ")"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "queue",
                                    "range": [
                                        213,
                                        213
                                    ],
                                    "children": [],
                                    "content": "\n"
                                }
                            ],
                            "content": "):\n"
                        },
                        {
                            "type": "CallExpression",
                            "name": "(",
                            "range": [
                                215,
                                221
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": ".",
                                    "range": [
                                        215,
                                        219
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "(",
                                            "range": [
                                                215,
                                                217
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "Manager",
                                                    "range": [
                                                        215,
                                                        215
                                                    ],
                                                    "children": [],
                                                    "content": "."
                                                }
                                            ],
                                            "content": ".queue="
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "Queue",
                                            "range": [
                                                219,
                                                219
                                            ],
                                            "children": [],
                                            "content": "("
                                        }
                                    ],
                                    "content": ".queue=Manager("
                                }
                            ],
                            "content": ".queue=Manager()."
                        }
                    ],
                    "content": "):\nself.queue=Manager()."
                }
            ],
            "content": "\"\"\n\ndef __init__(self):\nself.queue=Manager().Queue"
        },
        {
            "type": "FunctionDecl",
            "name": "add",
            "range": [
                224,
                249
            ],
            "children": [
                {
                    "type": "CallExpression",
                    "name": "(",
                    "range": [
                        238,
                        245
                    ],
                    "children": [
                        {
                            "type": "MemberExpression",
                            "name": ".",
                            "range": [
                                238,
                                242
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "self",
                                    "range": [
                                        238,
                                        238
                                    ],
                                    "children": [],
                                    "content": "T"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "queue",
                                    "range": [
                                        240,
                                        240
                                    ],
                                    "children": [],
                                    "content": "\n"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "put",
                                    "range": [
                                        242,
                                        242
                                    ],
                                    "children": [],
                                    "content": "."
                                }
                            ],
                            "content": "T:\nself."
                        },
                        {
                            "type": "Identifier",
                            "name": "execution",
                            "range": [
                                244,
                                244
                            ],
                            "children": [],
                            "content": "."
                        }
                    ],
                    "content": "T:\nself.queue.put"
                },
                {
                    "type": "ReturnStatement",
                    "name": "return",
                    "range": [
                        247,
                        248
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "execution",
                            "range": [
                                248,
                                248
                            ],
                            "children": [],
                            "content": ")"
                        }
                    ],
                    "content": "execution)"
                }
            ],
            "content": ")\n\ndef add(self,execution:T)->T:\nself.queue.put(execution)\n"
        },
        {
            "type": "FunctionDecl",
            "name": "get",
            "range": [
                251,
                269
            ],
            "children": [
                {
                    "type": "ReturnStatement",
                    "name": "return",
                    "range": [
                        261,
                        268
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "(",
                            "range": [
                                262,
                                268
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": ".",
                                    "range": [
                                        262,
                                        266
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "self",
                                            "range": [
                                                262,
                                                262
                                            ],
                                            "children": [],
                                            "content": ":"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "queue",
                                            "range": [
                                                264,
                                                264
                                            ],
                                            "children": [],
                                            "content": "return"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "get",
                                            "range": [
                                                266,
                                                266
                                            ],
                                            "children": [],
                                            "content": "."
                                        }
                                    ],
                                    "content": ":\nreturn self."
                                }
                            ],
                            "content": ":\nreturn self.queue."
                        }
                    ],
                    "content": "T:\nreturn self.queue."
                }
            ],
            "content": "execution\n\ndef get(self)->T:\nreturn self.queue.get"
        },
        {
            "type": "FunctionDecl",
            "name": "empty",
            "range": [
                271,
                289
            ],
            "children": [
                {
                    "type": "ReturnStatement",
                    "name": "return",
                    "range": [
                        281,
                        288
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "(",
                            "range": [
                                282,
                                288
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": ".",
                                    "range": [
                                        282,
                                        286
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "self",
                                            "range": [
                                                282,
                                                282
                                            ],
                                            "children": [],
                                            "content": ":"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "queue",
                                            "range": [
                                                284,
                                                284
                                            ],
                                            "children": [],
                                            "content": "return"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "empty",
                                            "range": [
                                                286,
                                                286
                                            ],
                                            "children": [],
                                            "content": "."
                                        }
                                    ],
                                    "content": ":\nreturn self."
                                }
                            ],
                            "content": ":\nreturn self.queue."
                        }
                    ],
                    "content": "bool:\nreturn self.queue."
                }
            ],
            "content": ")\n\ndef empty(self)->bool:\nreturn self.queue.empty"
        },
        {
            "type": "ClassDecl",
            "name": "ExecutionResult",
            "range": [
                292,
                356
            ],
            "children": [
                {
                    "type": "PropertyDecl",
                    "name": "graph_id",
                    "range": [
                        299,
                        301
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                301,
                                301
                            ],
                            "children": [],
                            "content": "\n"
                        }
                    ],
                    "content": "):\n"
                },
                {
                    "type": "PropertyDecl",
                    "name": "graph_version",
                    "range": [
                        303,
                        305
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "int",
                            "range": [
                                305,
                                305
                            ],
                            "children": [],
                            "content": "\n"
                        }
                    ],
                    "content": ":str\n"
                },
                {
                    "type": "PropertyDecl",
                    "name": "graph_exec_id",
                    "range": [
                        307,
                        309
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                309,
                                309
                            ],
                            "children": [],
                            "content": "\n"
                        }
                    ],
                    "content": ":int\n"
                },
                {
                    "type": "PropertyDecl",
                    "name": "node_exec_id",
                    "range": [
                        311,
                        313
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                313,
                                313
                            ],
                            "children": [],
                            "content": "\n"
                        }
                    ],
                    "content": ":str\n"
                },
                {
                    "type": "PropertyDecl",
                    "name": "node_id",
                    "range": [
                        315,
                        317
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                317,
                                317
                            ],
                            "children": [],
                            "content": "\n"
                        }
                    ],
                    "content": ":str\n"
                },
                {
                    "type": "PropertyDecl",
                    "name": "block_id",
                    "range": [
                        319,
                        321
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                321,
                                321
                            ],
                            "children": [],
                            "content": "\n"
                        }
                    ],
                    "content": ":str\n"
                },
                {
                    "type": "PropertyDecl",
                    "name": "status",
                    "range": [
                        323,
                        325
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "ExecutionStatus",
                            "range": [
                                325,
                                325
                            ],
                            "children": [],
                            "content": "\n"
                        }
                    ],
                    "content": ":str\n"
                },
                {
                    "type": "PropertyDecl",
                    "name": "input_data",
                    "range": [
                        327,
                        329
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "BlockInput",
                            "range": [
                                329,
                                329
                            ],
                            "children": [],
                            "content": "\n"
                        }
                    ],
                    "content": ":ExecutionStatus\n"
                },
                {
                    "type": "PropertyDecl",
                    "name": "output_data",
                    "range": [
                        331,
                        333
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "CompletedBlockOutput",
                            "range": [
                                333,
                                333
                            ],
                            "children": [],
                            "content": "\n"
                        }
                    ],
                    "content": ":BlockInput\n"
                },
                {
                    "type": "PropertyDecl",
                    "name": "add_time",
                    "range": [
                        335,
                        337
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "datetime",
                            "range": [
                                337,
                                337
                            ],
                            "children": [],
                            "content": "\n"
                        }
                    ],
                    "content": ":CompletedBlockOutput\n"
                },
                {
                    "type": "PropertyDecl",
                    "name": "queue_time",
                    "range": [
                        339,
                        343
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "datetime",
                            "range": [
                                341,
                                341
                            ],
                            "children": [],
                            "content": "\n"
                        },
                        {
                            "type": "UnionType",
                            "name": "None",
                            "range": [
                                343,
                                343
                            ],
                            "children": [],
                            "content": ":"
                        }
                    ],
                    "content": ":datetime\nqueue_time:"
                },
                {
                    "type": "PropertyDecl",
                    "name": "start_time",
                    "range": [
                        345,
                        349
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "datetime",
                            "range": [
                                347,
                                347
                            ],
                            "children": [],
                            "content": "\n"
                        },
                        {
                            "type": "UnionType",
                            "name": "None",
                            "range": [
                                349,
                                349
                            ],
                            "children": [],
                            "content": ":"
                        }
                    ],
                    "content": "|None\nstart_time:"
                },
                {
                    "type": "PropertyDecl",
                    "name": "end_time",
                    "range": [
                        351,
                        355
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "datetime",
                            "range": [
                                353,
                                353
                            ],
                            "children": [],
                            "content": "\n"
                        },
                        {
                            "type": "UnionType",
                            "name": "None",
                            "range": [
                                355,
                                355
                            ],
                            "children": [],
                            "content": ":"
                        }
                    ],
                    "content": "|None\nend_time:"
                }
            ],
            "content": "\n\n\nclass ExecutionResult(BaseModel):\ngraph_id:str\ngraph_version:int\ngraph_exec_id:str\nnode_exec_id:str\nnode_id:str\nblock_id:str\nstatus:ExecutionStatus\ninput_data:BlockInput\noutput_data:CompletedBlockOutput\nadd_time:datetime\nqueue_time:datetime|None\nstart_time:datetime|None\nend_time:datetime"
        },
        {
            "type": "FunctionDecl",
            "name": "from_graph",
            "range": [
                358,
                478
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "graph",
                    "range": [
                        364,
                        366
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "AgentGraphExecution",
                            "range": [
                                366,
                                366
                            ],
                            "children": [],
                            "content": "("
                        }
                    ],
                    "content": "def from_graph("
                },
                {
                    "type": "ReturnStatement",
                    "name": "return",
                    "range": [
                        370,
                        477
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "ExecutionResult",
                            "range": [
                                371,
                                477
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "graph_id",
                                    "range": [
                                        374,
                                        378
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "graph.agentGraphId",
                                            "range": [
                                                376,
                                                378
                                            ],
                                            "children": [],
                                            "content": "\ngraph_id="
                                        }
                                    ],
                                    "content": "ExecutionResult(\ngraph_id="
                                },
                                {
                                    "type": "Argument",
                                    "name": "graph_version",
                                    "range": [
                                        381,
                                        385
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "graph.agentGraphVersion",
                                            "range": [
                                                383,
                                                385
                                            ],
                                            "children": [],
                                            "content": "\ngraph_version="
                                        }
                                    ],
                                    "content": "agentGraphId,\ngraph_version="
                                },
                                {
                                    "type": "Argument",
                                    "name": "graph_exec_id",
                                    "range": [
                                        388,
                                        392
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "graph.id",
                                            "range": [
                                                390,
                                                392
                                            ],
                                            "children": [],
                                            "content": "\ngraph_exec_id="
                                        }
                                    ],
                                    "content": "agentGraphVersion,\ngraph_exec_id="
                                },
                                {
                                    "type": "Argument",
                                    "name": "node_exec_id",
                                    "range": [
                                        395,
                                        397
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "\"\"",
                                            "range": [
                                                397,
                                                397
                                            ],
                                            "children": [],
                                            "content": "\n"
                                        }
                                    ],
                                    "content": "id,\n"
                                },
                                {
                                    "type": "Argument",
                                    "name": "node_id",
                                    "range": [
                                        400,
                                        402
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "\"\"",
                                            "range": [
                                                402,
                                                402
                                            ],
                                            "children": [],
                                            "content": "\n"
                                        }
                                    ],
                                    "content": "\"\",\n"
                                },
                                {
                                    "type": "Argument",
                                    "name": "block_id",
                                    "range": [
                                        405,
                                        407
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "\"\"",
                                            "range": [
                                                407,
                                                407
                                            ],
                                            "children": [],
                                            "content": "\n"
                                        }
                                    ],
                                    "content": "\"\",\n"
                                },
                                {
                                    "type": "Argument",
                                    "name": "status",
                                    "range": [
                                        410,
                                        414
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "graph.executionStatus",
                                            "range": [
                                                412,
                                                414
                                            ],
                                            "children": [],
                                            "content": "\nstatus="
                                        }
                                    ],
                                    "content": "\"\",\nstatus="
                                },
                                {
                                    "type": "Comment",
                                    "name": "# TODO: Populate input_data & output_data from AgentNodeExecutions",
                                    "range": [
                                        417,
                                        426
                                    ],
                                    "children": [],
                                    "content": "executionStatus,\n#TODO:Populate input_data&output_data"
                                },
                                {
                                    "type": "Comment",
                                    "name": "# Input & Output comes AgentInputBlock & AgentOutputBlock.",
                                    "range": [
                                        427,
                                        436
                                    ],
                                    "children": [],
                                    "content": "from AgentNodeExecutions\n#Input&Output comes AgentInputBlock&"
                                },
                                {
                                    "type": "Argument",
                                    "name": "input_data",
                                    "range": [
                                        437,
                                        440
                                    ],
                                    "children": [
                                        {
                                            "type": "ObjectExpression",
                                            "name": "{}",
                                            "range": [
                                                439,
                                                440
                                            ],
                                            "children": [],
                                            "content": "\ninput_data"
                                        }
                                    ],
                                    "content": "AgentOutputBlock.\ninput_data"
                                },
                                {
                                    "type": "Argument",
                                    "name": "output_data",
                                    "range": [
                                        443,
                                        446
                                    ],
                                    "children": [
                                        {
                                            "type": "ObjectExpression",
                                            "name": "{}",
                                            "range": [
                                                445,
                                                446
                                            ],
                                            "children": [],
                                            "content": "\noutput_data"
                                        }
                                    ],
                                    "content": "},\noutput_data"
                                },
                                {
                                    "type": "Argument",
                                    "name": "add_time",
                                    "range": [
                                        449,
                                        453
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "graph.createdAt",
                                            "range": [
                                                451,
                                                453
                                            ],
                                            "children": [],
                                            "content": "\nadd_time="
                                        }
                                    ],
                                    "content": "},\nadd_time="
                                },
                                {
                                    "type": "Argument",
                                    "name": "queue_time",
                                    "range": [
                                        456,
                                        460
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "graph.createdAt",
                                            "range": [
                                                458,
                                                460
                                            ],
                                            "children": [],
                                            "content": "\nqueue_time="
                                        }
                                    ],
                                    "content": "createdAt,\nqueue_time="
                                },
                                {
                                    "type": "Argument",
                                    "name": "start_time",
                                    "range": [
                                        463,
                                        467
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "graph.startedAt",
                                            "range": [
                                                465,
                                                467
                                            ],
                                            "children": [],
                                            "content": "\nstart_time="
                                        }
                                    ],
                                    "content": "createdAt,\nstart_time="
                                },
                                {
                                    "type": "Argument",
                                    "name": "end_time",
                                    "range": [
                                        470,
                                        474
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "graph.updatedAt",
                                            "range": [
                                                472,
                                                474
                                            ],
                                            "children": [],
                                            "content": "\nend_time="
                                        }
                                    ],
                                    "content": "startedAt,\nend_time="
                                }
                            ],
                            "content": ":\nreturn ExecutionResult(\ngraph_id=graph.agentGraphId,\ngraph_version=graph.agentGraphVersion,\ngraph_exec_id=graph.id,\nnode_exec_id=\"\",\nnode_id=\"\",\nblock_id=\"\",\nstatus=graph.executionStatus,\n#TODO:Populate input_data&output_data from AgentNodeExecutions\n#Input&Output comes AgentInputBlock&AgentOutputBlock.\ninput_data={},\noutput_data={},\nadd_time=graph.createdAt,\nqueue_time=graph.createdAt,\nstart_time=graph.startedAt,\nend_time=graph.updatedAt"
                        }
                    ],
                    "content": "):\nreturn ExecutionResult(\ngraph_id=graph.agentGraphId,\ngraph_version=graph.agentGraphVersion,\ngraph_exec_id=graph.id,\nnode_exec_id=\"\",\nnode_id=\"\",\nblock_id=\"\",\nstatus=graph.executionStatus,\n#TODO:Populate input_data&output_data from AgentNodeExecutions\n#Input&Output comes AgentInputBlock&AgentOutputBlock.\ninput_data={},\noutput_data={},\nadd_time=graph.createdAt,\nqueue_time=graph.createdAt,\nstart_time=graph.startedAt,\nend_time=graph.updatedAt"
                }
            ],
            "content": "None\n\n@staticmethod\ndef from_graph(graph:AgentGraphExecution):\nreturn ExecutionResult(\ngraph_id=graph.agentGraphId,\ngraph_version=graph.agentGraphVersion,\ngraph_exec_id=graph.id,\nnode_exec_id=\"\",\nnode_id=\"\",\nblock_id=\"\",\nstatus=graph.executionStatus,\n#TODO:Populate input_data&output_data from AgentNodeExecutions\n#Input&Output comes AgentInputBlock&AgentOutputBlock.\ninput_data={},\noutput_data={},\nadd_time=graph.createdAt,\nqueue_time=graph.createdAt,\nstart_time=graph.startedAt,\nend_time=graph.updatedAt,"
        },
        {
            "type": "FunctionDecl",
            "name": "from_db",
            "range": [
                480,
                744
            ],
            "children": [
                {
                    "type": "Decorator",
                    "name": "@staticmethod",
                    "range": [
                        480,
                        481
                    ],
                    "children": [],
                    "content": ")\n"
                },
                {
                    "type": "FunctionSignature",
                    "name": "from_db",
                    "range": [
                        483,
                        490
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "execution",
                            "range": [
                                486,
                                488
                            ],
                            "children": [],
                            "content": "def from_db("
                        }
                    ],
                    "content": "@staticmethod\ndef from_db(execution:"
                },
                {
                    "type": "FunctionBody",
                    "name": "from_db",
                    "range": [
                        491,
                        744
                    ],
                    "children": [
                        {
                            "type": "IfStatement",
                            "name": "if",
                            "range": [
                                492,
                                531
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "execution.executionData",
                                    "range": [
                                        493,
                                        495
                                    ],
                                    "children": [],
                                    "content": ":\nif"
                                },
                                {
                                    "type": "ThenBlock",
                                    "name": "then",
                                    "range": [
                                        496,
                                        531
                                    ],
                                    "children": [
                                        {
                                            "type": "Comment",
                                            "name": "# Execution that has been queued for execution will persist its data.",
                                            "range": [
                                                498,
                                                510
                                            ],
                                            "children": [],
                                            "content": "executionData:\n#Execution that has been queued for execution will persist"
                                        },
                                        {
                                            "type": "Assignment",
                                            "name": "input_data = json.loads(execution.executionData, target_type=dict[str, Any])",
                                            "range": [
                                                512,
                                                530
                                            ],
                                            "children": [],
                                            "content": "data.\ninput_data=json.loads(execution.executionData,target_type=dict[str,"
                                        }
                                    ],
                                    "content": "execution.executionData:\n#Execution that has been queued for execution will persist its data.\ninput_data=json.loads(execution.executionData,target_type=dict[str,Any"
                                }
                            ],
                            "content": "):\nif execution.executionData:\n#Execution that has been queued for execution will persist its data.\ninput_data=json.loads(execution.executionData,target_type=dict[str,Any"
                        },
                        {
                            "type": "ElseStatement",
                            "name": "else",
                            "range": [
                                532,
                                582
                            ],
                            "children": [
                                {
                                    "type": "Comment",
                                    "name": "# For incomplete execution, executionData will not be yet available.",
                                    "range": [
                                        535,
                                        546
                                    ],
                                    "children": [],
                                    "content": "else:\n#For incomplete execution,executionData will not be"
                                },
                                {
                                    "type": "Assignment",
                                    "name": "input_data: BlockInput = defaultdict()",
                                    "range": [
                                        548,
                                        554
                                    ],
                                    "children": [],
                                    "content": "available.\ninput_data:BlockInput="
                                },
                                {
                                    "type": "ForStatement",
                                    "name": "for data in execution.Input or []:",
                                    "range": [
                                        556,
                                        582
                                    ],
                                    "children": [
                                        {
                                            "type": "Assignment",
                                            "name": "input_data[data.name] = json.loads(data.data)",
                                            "range": [
                                                567,
                                                581
                                            ],
                                            "children": [],
                                            "content": "]:\ninput_data[data.name]=json.loads(data"
                                        }
                                    ],
                                    "content": "()\nfor data in execution.Input or[]:\ninput_data[data.name]=json.loads(data."
                                }
                            ],
                            "content": "])\nelse:\n#For incomplete execution,executionData will not be yet available.\ninput_data:BlockInput=defaultdict()\nfor data in execution.Input or[]:\ninput_data[data.name]=json.loads(data."
                        },
                        {
                            "type": "Assignment",
                            "name": "output_data: CompletedBlockOutput = defaultdict(list)",
                            "range": [
                                584,
                                591
                            ],
                            "children": [],
                            "content": ")\n\noutput_data:CompletedBlockOutput=defaultdict"
                        },
                        {
                            "type": "ForStatement",
                            "name": "for data in execution.Output or []:",
                            "range": [
                                593,
                                622
                            ],
                            "children": [
                                {
                                    "type": "Assignment",
                                    "name": "output_data[data.name].append(json.loads(data.data))",
                                    "range": [
                                        604,
                                        621
                                    ],
                                    "children": [],
                                    "content": "]:\noutput_data[data.name].append(json.loads(data."
                                }
                            ],
                            "content": "list)\nfor data in execution.Output or[]:\noutput_data[data.name].append(json.loads(data.data"
                        },
                        {
                            "type": "Assignment",
                            "name": "graph_execution: AgentGraphExecution | None = execution.AgentGraphExecution",
                            "range": [
                                624,
                                633
                            ],
                            "children": [],
                            "content": ")\n\ngraph_execution:AgentGraphExecution|None=execution"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "return ExecutionResult",
                            "range": [
                                635,
                                742
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "graph_id = graph_execution.agentGraphId if graph_execution else \"\"",
                                    "range": [
                                        639,
                                        647
                                    ],
                                    "children": [],
                                    "content": "ExecutionResult(\ngraph_id=graph_execution.agentGraphId if"
                                },
                                {
                                    "type": "Argument",
                                    "name": "graph_version = graph_execution.agentGraphVersion if graph_execution else 0",
                                    "range": [
                                        650,
                                        658
                                    ],
                                    "children": [],
                                    "content": "\"\",\ngraph_version=graph_execution.agentGraphVersion if"
                                },
                                {
                                    "type": "Argument",
                                    "name": "graph_exec_id = execution.agentGraphExecutionId",
                                    "range": [
                                        661,
                                        666
                                    ],
                                    "children": [],
                                    "content": "0,\ngraph_exec_id=execution"
                                },
                                {
                                    "type": "Argument",
                                    "name": "block_id = execution.AgentNode.agentBlockId if execution.AgentNode else \"\"",
                                    "range": [
                                        669,
                                        680
                                    ],
                                    "children": [],
                                    "content": ",\nblock_id=execution.AgentNode.agentBlockId if execution."
                                },
                                {
                                    "type": "Argument",
                                    "name": "node_exec_id = execution.id",
                                    "range": [
                                        683,
                                        688
                                    ],
                                    "children": [],
                                    "content": "\"\",\nnode_exec_id=execution"
                                },
                                {
                                    "type": "Argument",
                                    "name": "node_id = execution.agentNodeId",
                                    "range": [
                                        690,
                                        695
                                    ],
                                    "children": [],
                                    "content": "id,\nnode_id=execution"
                                },
                                {
                                    "type": "Argument",
                                    "name": "status = execution.executionStatus",
                                    "range": [
                                        697,
                                        702
                                    ],
                                    "children": [],
                                    "content": "agentNodeId,\nstatus=execution"
                                },
                                {
                                    "type": "Argument",
                                    "name": "input_data = input_data",
                                    "range": [
                                        704,
                                        707
                                    ],
                                    "children": [],
                                    "content": "executionStatus,\ninput_data"
                                },
                                {
                                    "type": "Argument",
                                    "name": "output_data = output_data",
                                    "range": [
                                        709,
                                        712
                                    ],
                                    "children": [],
                                    "content": "input_data,\noutput_data"
                                },
                                {
                                    "type": "Argument",
                                    "name": "add_time = execution.addedTime",
                                    "range": [
                                        714,
                                        719
                                    ],
                                    "children": [],
                                    "content": "output_data,\nadd_time=execution"
                                },
                                {
                                    "type": "Argument",
                                    "name": "queue_time = execution.queuedTime",
                                    "range": [
                                        721,
                                        726
                                    ],
                                    "children": [],
                                    "content": "addedTime,\nqueue_time=execution"
                                },
                                {
                                    "type": "Argument",
                                    "name": "start_time = execution.startedTime",
                                    "range": [
                                        728,
                                        733
                                    ],
                                    "children": [],
                                    "content": "queuedTime,\nstart_time=execution"
                                },
                                {
                                    "type": "Argument",
                                    "name": "end_time = execution.endedTime",
                                    "range": [
                                        735,
                                        740
                                    ],
                                    "children": [],
                                    "content": "startedTime,\nend_time=execution"
                                }
                            ],
                            "content": "AgentGraphExecution\n\nreturn ExecutionResult(\ngraph_id=graph_execution.agentGraphId if graph_execution else\"\",\ngraph_version=graph_execution.agentGraphVersion if graph_execution else0,\ngraph_exec_id=execution.agentGraphExecutionId,\nblock_id=execution.AgentNode.agentBlockId if execution.AgentNode else\"\",\nnode_exec_id=execution.id,\nnode_id=execution.agentNodeId,\nstatus=execution.executionStatus,\ninput_data=input_data,\noutput_data=output_data,\nadd_time=execution.addedTime,\nqueue_time=execution.queuedTime,\nstart_time=execution.startedTime,\nend_time=execution.endedTime"
                        }
                    ],
                    "content": "AgentNodeExecution):\nif execution.executionData:\n#Execution that has been queued for execution will persist its data.\ninput_data=json.loads(execution.executionData,target_type=dict[str,Any])\nelse:\n#For incomplete execution,executionData will not be yet available.\ninput_data:BlockInput=defaultdict()\nfor data in execution.Input or[]:\ninput_data[data.name]=json.loads(data.data)\n\noutput_data:CompletedBlockOutput=defaultdict(list)\nfor data in execution.Output or[]:\noutput_data[data.name].append(json.loads(data.data))\n\ngraph_execution:AgentGraphExecution|None=execution.AgentGraphExecution\n\nreturn ExecutionResult(\ngraph_id=graph_execution.agentGraphId if graph_execution else\"\",\ngraph_version=graph_execution.agentGraphVersion if graph_execution else0,\ngraph_exec_id=execution.agentGraphExecutionId,\nblock_id=execution.AgentNode.agentBlockId if execution.AgentNode else\"\",\nnode_exec_id=execution.id,\nnode_id=execution.agentNodeId,\nstatus=execution.executionStatus,\ninput_data=input_data,\noutput_data=output_data,\nadd_time=execution.addedTime,\nqueue_time=execution.queuedTime,\nstart_time=execution.startedTime,\nend_time=execution.endedTime,\n"
                }
            ],
            "content": ")\n\n@staticmethod\ndef from_db(execution:AgentNodeExecution):\nif execution.executionData:\n#Execution that has been queued for execution will persist its data.\ninput_data=json.loads(execution.executionData,target_type=dict[str,Any])\nelse:\n#For incomplete execution,executionData will not be yet available.\ninput_data:BlockInput=defaultdict()\nfor data in execution.Input or[]:\ninput_data[data.name]=json.loads(data.data)\n\noutput_data:CompletedBlockOutput=defaultdict(list)\nfor data in execution.Output or[]:\noutput_data[data.name].append(json.loads(data.data))\n\ngraph_execution:AgentGraphExecution|None=execution.AgentGraphExecution\n\nreturn ExecutionResult(\ngraph_id=graph_execution.agentGraphId if graph_execution else\"\",\ngraph_version=graph_execution.agentGraphVersion if graph_execution else0,\ngraph_exec_id=execution.agentGraphExecutionId,\nblock_id=execution.AgentNode.agentBlockId if execution.AgentNode else\"\",\nnode_exec_id=execution.id,\nnode_id=execution.agentNodeId,\nstatus=execution.executionStatus,\ninput_data=input_data,\noutput_data=output_data,\nadd_time=execution.addedTime,\nqueue_time=execution.queuedTime,\nstart_time=execution.startedTime,\nend_time=execution.endedTime,\n"
        },
        {
            "type": "FunctionDecl",
            "name": "create_graph_execution",
            "range": [
                745,
                950
            ],
            "children": [
                {
                    "type": "Keyword",
                    "name": "async",
                    "range": [
                        745,
                        745
                    ],
                    "content": ")"
                },
                {
                    "type": "Keyword",
                    "name": "def",
                    "range": [
                        746,
                        746
                    ],
                    "content": "\n"
                },
                {
                    "type": "Identifier",
                    "name": "create_graph_execution",
                    "range": [
                        747,
                        747
                    ],
                    "content": "\n"
                },
                {
                    "type": "Parameter",
                    "name": "graph_id",
                    "range": [
                        750,
                        752
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "graph_id",
                            "range": [
                                750,
                                750
                            ],
                            "content": "-"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                752,
                                752
                            ],
                            "content": "-"
                        }
                    ],
                    "content": "---"
                },
                {
                    "type": "Parameter",
                    "name": "graph_version",
                    "range": [
                        755,
                        757
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "graph_version",
                            "range": [
                                755,
                                755
                            ],
                            "content": "-"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "int",
                            "range": [
                                757,
                                757
                            ],
                            "content": "-"
                        }
                    ],
                    "content": "---"
                },
                {
                    "type": "Parameter",
                    "name": "nodes_input",
                    "range": [
                        760,
                        770
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "nodes_input",
                            "range": [
                                760,
                                760
                            ],
                            "content": "-"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "list",
                            "range": [
                                762,
                                762
                            ],
                            "content": "-"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "tuple",
                            "range": [
                                764,
                                764
                            ],
                            "content": "-"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                766,
                                766
                            ],
                            "content": "-"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "BlockInput",
                            "range": [
                                768,
                                768
                            ],
                            "content": "-"
                        }
                    ],
                    "content": "-----------"
                },
                {
                    "type": "Parameter",
                    "name": "user_id",
                    "range": [
                        773,
                        775
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "user_id",
                            "range": [
                                773,
                                773
                            ],
                            "content": "-"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                775,
                                775
                            ],
                            "content": "-"
                        }
                    ],
                    "content": "---"
                },
                {
                    "type": "TypeAnnotation",
                    "name": "tuple",
                    "range": [
                        781,
                        781
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                783,
                                783
                            ],
                            "content": "-"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "list",
                            "range": [
                                785,
                                785
                            ],
                            "content": "-"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "ExecutionResult",
                            "range": [
                                787,
                                787
                            ],
                            "content": "-"
                        }
                    ],
                    "content": "-"
                },
                {
                    "type": "Block",
                    "name": "FunctionBody",
                    "range": [
                        796,
                        950
                    ],
                    "children": [
                        {
                            "type": "VariableDecl",
                            "name": "result",
                            "range": [
                                796,
                                925
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "result",
                                    "range": [
                                        796,
                                        796
                                    ],
                                    "content": "\n"
                                },
                                {
                                    "type": "Keyword",
                                    "name": "await",
                                    "range": [
                                        798,
                                        798
                                    ],
                                    "content": "async"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "AgentGraphExecution",
                                    "range": [
                                        799,
                                        799
                                    ],
                                    "content": "def"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "prisma",
                                    "range": [
                                        801,
                                        801
                                    ],
                                    "content": "("
                                },
                                {
                                    "type": "Identifier",
                                    "name": "create",
                                    "range": [
                                        805,
                                        805
                                    ],
                                    "content": "str"
                                },
                                {
                                    "type": "ObjectLiteral",
                                    "name": "data",
                                    "range": [
                                        808,
                                        913
                                    ],
                                    "children": [
                                        {
                                            "type": "Property",
                                            "name": "\"agentGraphId\"",
                                            "range": [
                                                812,
                                                814
                                            ],
                                            "children": [
                                                {
                                                    "type": "StringLiteral",
                                                    "name": "\"agentGraphId\"",
                                                    "range": [
                                                        812,
                                                        812
                                                    ],
                                                    "content": "\n"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "graph_id",
                                                    "range": [
                                                        814,
                                                        814
                                                    ],
                                                    "content": ":"
                                                }
                                            ],
                                            "content": "\nnodes_input:"
                                        },
                                        {
                                            "type": "Property",
                                            "name": "\"agentGraphVersion\"",
                                            "range": [
                                                817,
                                                819
                                            ],
                                            "children": [
                                                {
                                                    "type": "StringLiteral",
                                                    "name": "\"agentGraphVersion\"",
                                                    "range": [
                                                        817,
                                                        817
                                                    ],
                                                    "content": "tuple"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "graph_version",
                                                    "range": [
                                                        819,
                                                        819
                                                    ],
                                                    "content": "str"
                                                }
                                            ],
                                            "content": "tuple[str"
                                        },
                                        {
                                            "type": "Property",
                                            "name": "\"executionStatus\"",
                                            "range": [
                                                822,
                                                826
                                            ],
                                            "children": [
                                                {
                                                    "type": "StringLiteral",
                                                    "name": "\"executionStatus\"",
                                                    "range": [
                                                        822,
                                                        822
                                                    ],
                                                    "content": "]"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "ExecutionStatus",
                                                    "range": [
                                                        824,
                                                        824
                                                    ],
                                                    "content": ","
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "QUEUED",
                                                    "range": [
                                                        826,
                                                        826
                                                    ],
                                                    "content": "user_id"
                                                }
                                            ],
                                            "content": "]],\nuser_id"
                                        },
                                        {
                                            "type": "Property",
                                            "name": "\"AgentNodeExecutions\"",
                                            "range": [
                                                829,
                                                905
                                            ],
                                            "children": [
                                                {
                                                    "type": "StringLiteral",
                                                    "name": "\"AgentNodeExecutions\"",
                                                    "range": [
                                                        829,
                                                        829
                                                    ],
                                                    "content": ","
                                                },
                                                {
                                                    "type": "ObjectLiteral",
                                                    "name": "NodeExecution",
                                                    "range": [
                                                        841,
                                                        894
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Property",
                                                            "name": "\"agentNodeId\"",
                                                            "range": [
                                                                843,
                                                                845
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "StringLiteral",
                                                                    "name": "\"agentNodeId\"",
                                                                    "range": [
                                                                        843,
                                                                        843
                                                                    ],
                                                                    "content": ":"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "node_id",
                                                                    "range": [
                                                                        845,
                                                                        845
                                                                    ],
                                                                    "content": "\"\""
                                                                }
                                                            ],
                                                            "content": ":\n\"\""
                                                        },
                                                        {
                                                            "type": "Property",
                                                            "name": "\"executionStatus\"",
                                                            "range": [
                                                                848,
                                                                852
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "StringLiteral",
                                                                    "name": "\"executionStatus\"",
                                                                    "range": [
                                                                        848,
                                                                        848
                                                                    ],
                                                                    "content": "\n"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "ExecutionStatus",
                                                                    "range": [
                                                                        850,
                                                                        850
                                                                    ],
                                                                    "content": "="
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "INCOMPLETE",
                                                                    "range": [
                                                                        852,
                                                                        852
                                                                    ],
                                                                    "content": "AgentGraphExecution"
                                                                }
                                                            ],
                                                            "content": "\nresult=await AgentGraphExecution"
                                                        },
                                                        {
                                                            "type": "Property",
                                                            "name": "\"Input\"",
                                                            "range": [
                                                                855,
                                                                891
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "StringLiteral",
                                                                    "name": "\"Input\"",
                                                                    "range": [
                                                                        855,
                                                                        855
                                                                    ],
                                                                    "content": "("
                                                                },
                                                                {
                                                                    "type": "ObjectLiteral",
                                                                    "name": "InputData",
                                                                    "range": [
                                                                        863,
                                                                        876
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Property",
                                                                            "name": "\"name\"",
                                                                            "range": [
                                                                                864,
                                                                                866
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "StringLiteral",
                                                                                    "name": "\"name\"",
                                                                                    "range": [
                                                                                        864,
                                                                                        864
                                                                                    ],
                                                                                    "content": "\n"
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "name",
                                                                                    "range": [
                                                                                        866,
                                                                                        866
                                                                                    ],
                                                                                    "content": ":"
                                                                                }
                                                                            ],
                                                                            "content": "\n\"agentGraphId\":"
                                                                        },
                                                                        {
                                                                            "type": "Property",
                                                                            "name": "\"data\"",
                                                                            "range": [
                                                                                868,
                                                                                875
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "StringLiteral",
                                                                                    "name": "\"data\"",
                                                                                    "range": [
                                                                                        868,
                                                                                        868
                                                                                    ],
                                                                                    "content": ","
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "json",
                                                                                    "range": [
                                                                                        870,
                                                                                        870
                                                                                    ],
                                                                                    "content": "\"agentGraphVersion\""
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "dumps",
                                                                                    "range": [
                                                                                        872,
                                                                                        872
                                                                                    ],
                                                                                    "content": "graph_version"
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "data",
                                                                                    "range": [
                                                                                        874,
                                                                                        874
                                                                                    ],
                                                                                    "content": "\n"
                                                                                }
                                                                            ],
                                                                            "content": ",\n\"agentGraphVersion\":graph_version,\n\"executionStatus\""
                                                                        }
                                                                    ],
                                                                    "content": "{\n\"agentGraphId\":graph_id,\n\"agentGraphVersion\":graph_version,\n\"executionStatus\":"
                                                                }
                                                            ],
                                                            "content": "().create(\ndata={\n\"agentGraphId\":graph_id,\n\"agentGraphVersion\":graph_version,\n\"executionStatus\":ExecutionStatus.QUEUED,\n\"AgentNodeExecutions\":{\n\"create\":[#type:"
                                                        }
                                                    ],
                                                    "content": "]]:\n\"\"\" \\n     Create a new AgentGraphExecution record. \\n     Returns: \\n         The id of the AgentGraphExecution and the list of ExecutionResult for each node. \\n     \"\"\"\nresult=await AgentGraphExecution.prisma().create(\ndata={\n\"agentGraphId\":graph_id,\n\"agentGraphVersion\":graph_version,\n\"executionStatus\":ExecutionStatus.QUEUED,\n\"AgentNodeExecutions\":{\n\"create\":[#type:ignore\n{"
                                                }
                                            ],
                                            "content": ",\n)->tuple[str,list[ExecutionResult]]:\n\"\"\" \\n     Create a new AgentGraphExecution record. \\n     Returns: \\n         The id of the AgentGraphExecution and the list of ExecutionResult for each node. \\n     \"\"\"\nresult=await AgentGraphExecution.prisma().create(\ndata={\n\"agentGraphId\":graph_id,\n\"agentGraphVersion\":graph_version,\n\"executionStatus\":ExecutionStatus.QUEUED,\n\"AgentNodeExecutions\":{\n\"create\":[#type:ignore\n{\n\"agentNodeId\":node_id,\n\"executionStatus\":ExecutionStatus.INCOMPLETE"
                                        },
                                        {
                                            "type": "Property",
                                            "name": "\"userId\"",
                                            "range": [
                                                908,
                                                910
                                            ],
                                            "children": [
                                                {
                                                    "type": "StringLiteral",
                                                    "name": "\"userId\"",
                                                    "range": [
                                                        908,
                                                        908
                                                    ],
                                                    "content": "\"Input\""
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "user_id",
                                                    "range": [
                                                        910,
                                                        910
                                                    ],
                                                    "content": "{"
                                                }
                                            ],
                                            "content": "\"Input\":{"
                                        }
                                    ],
                                    "content": "graph_version:int,\nnodes_input:list[tuple[str,BlockInput]],\nuser_id:str,\n)->tuple[str,list[ExecutionResult]]:\n\"\"\" \\n     Create a new AgentGraphExecution record. \\n     Returns: \\n         The id of the AgentGraphExecution and the list of ExecutionResult for each node. \\n     \"\"\"\nresult=await AgentGraphExecution.prisma().create(\ndata={\n\"agentGraphId\":graph_id,\n\"agentGraphVersion\":graph_version,\n\"executionStatus\":ExecutionStatus.QUEUED,\n\"AgentNodeExecutions\":{\n\"create\":[#type:ignore\n{\n\"agentNodeId\":node_id,\n\"executionStatus\":ExecutionStatus.INCOMPLETE,\n\"Input\":{\n\"create\":"
                                },
                                {
                                    "type": "Property",
                                    "name": "include",
                                    "range": [
                                        916,
                                        918
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "include",
                                            "range": [
                                                916,
                                                916
                                            ],
                                            "content": "{"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "GRAPH_EXECUTION_INCLUDE",
                                            "range": [
                                                918,
                                                918
                                            ],
                                            "content": ":"
                                        }
                                    ],
                                    "content": "{\"name\":"
                                }
                            ],
                            "content": "\n\nasync def create_graph_execution(\ngraph_id:str,\ngraph_version:int,\nnodes_input:list[tuple[str,BlockInput]],\nuser_id:str,\n)->tuple[str,list[ExecutionResult]]:\n\"\"\" \\n     Create a new AgentGraphExecution record. \\n     Returns: \\n         The id of the AgentGraphExecution and the list of ExecutionResult for each node. \\n     \"\"\"\nresult=await AgentGraphExecution.prisma().create(\ndata={\n\"agentGraphId\":graph_id,\n\"agentGraphVersion\":graph_version,\n\"executionStatus\":ExecutionStatus.QUEUED,\n\"AgentNodeExecutions\":{\n\"create\":[#type:ignore\n{\n\"agentNodeId\":node_id,\n\"executionStatus\":ExecutionStatus.INCOMPLETE,\n\"Input\":{\n\"create\":[\n{\"name\":name,\"data\":json.dumps"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "return",
                            "range": [
                                924,
                                948
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "result",
                                    "range": [
                                        925,
                                        925
                                    ],
                                    "content": "dumps"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "id",
                                    "range": [
                                        927,
                                        927
                                    ],
                                    "content": "data"
                                },
                                {
                                    "type": "ArrayLiteral",
                                    "name": "ExecutionResults",
                                    "range": [
                                        929,
                                        948
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "ExecutionResult.from_db",
                                            "range": [
                                                931,
                                                936
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "ExecutionResult",
                                                    "range": [
                                                        931,
                                                        931
                                                    ],
                                                    "content": "for"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "from_db",
                                                    "range": [
                                                        933,
                                                        933
                                                    ],
                                                    "content": ","
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "execution",
                                                    "range": [
                                                        935,
                                                        935
                                                    ],
                                                    "content": "in"
                                                }
                                            ],
                                            "content": "for name,data in node_input"
                                        },
                                        {
                                            "type": "ForStatement",
                                            "name": "for",
                                            "range": [
                                                938,
                                                947
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "execution",
                                                    "range": [
                                                        939,
                                                        939
                                                    ],
                                                    "content": "("
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "result",
                                                    "range": [
                                                        941,
                                                        941
                                                    ],
                                                    "content": "\n"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "AgentNodeExecutions",
                                                    "range": [
                                                        943,
                                                        943
                                                    ],
                                                    "content": "\n"
                                                }
                                            ],
                                            "content": "items()\n]\n},\n}"
                                        }
                                    ],
                                    "content": "}\nfor name,data in node_input.items()\n]\n},\n}\n"
                                }
                            ],
                            "content": ".dumps(data)}\nfor name,data in node_input.items()\n]\n},\n}\n"
                        }
                    ],
                    "content": "\n\nasync def create_graph_execution(\ngraph_id:str,\ngraph_version:int,\nnodes_input:list[tuple[str,BlockInput]],\nuser_id:str,\n)->tuple[str,list[ExecutionResult]]:\n\"\"\" \\n     Create a new AgentGraphExecution record. \\n     Returns: \\n         The id of the AgentGraphExecution and the list of ExecutionResult for each node. \\n     \"\"\"\nresult=await AgentGraphExecution.prisma().create(\ndata={\n\"agentGraphId\":graph_id,\n\"agentGraphVersion\":graph_version,\n\"executionStatus\":ExecutionStatus.QUEUED,\n\"AgentNodeExecutions\":{\n\"create\":[#type:ignore\n{\n\"agentNodeId\":node_id,\n\"executionStatus\":ExecutionStatus.INCOMPLETE,\n\"Input\":{\n\"create\":[\n{\"name\":name,\"data\":json.dumps(data)}\nfor name,data in node_input.items()\n]\n},\n}\nfor node_id"
                }
            ],
            "content": ")\n\n\n#---------------------Model functions---------------------#\n\n\nasync def create_graph_execution(\ngraph_id:str,\ngraph_version:int,\nnodes_input:list[tuple[str,BlockInput]],\nuser_id:str,\n)->tuple[str,list[ExecutionResult]]:\n\"\"\" \\n     Create a new AgentGraphExecution record. \\n     Returns: \\n         The id of the AgentGraphExecution and the list of ExecutionResult for each node. \\n     \"\"\"\nresult=await AgentGraphExecution.prisma().create(\ndata={\n\"agentGraphId\":graph_id,\n\"agentGraphVersion\":graph_version,\n\"executionStatus\":ExecutionStatus.QUEUED,\n\"AgentNodeExecutions\":{\n\"create\":[#type:ignore\n{\n\"agentNodeId\":node_id,\n\"executionStatus\":ExecutionStatus.INCOMPLETE,\n\"Input\":{\n\"create\":[\n{\"name\":name,\"data\":json.dumps(data)}\nfor name,data in node_input.items()\n]\n},\n}\nfor node_id"
        },
        {
            "type": "FunctionDecl",
            "name": "upsert_execution_input",
            "range": [
                951,
                1270
            ],
            "children": [
                {
                    "type": "AsyncKeyword",
                    "name": "async",
                    "range": [
                        951,
                        955
                    ],
                    "children": [],
                    "content": ",node_input in nodes_input\n"
                },
                {
                    "type": "DefKeyword",
                    "name": "def",
                    "range": [
                        952,
                        955
                    ],
                    "children": [],
                    "content": "node_input in nodes_input\n"
                },
                {
                    "type": "FunctionName",
                    "name": "upsert_execution_input",
                    "range": [
                        953,
                        974
                    ],
                    "children": [],
                    "content": "in nodes_input\n]\n},\n\"userId\":user_id,\n},\ninclude=GRAPH_EXECUTION_INCLUDE,\n)"
                },
                {
                    "type": "ParameterList",
                    "name": "parameters",
                    "range": [
                        954,
                        985
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "node_id",
                            "range": [
                                956,
                                958
                            ],
                            "children": [],
                            "content": "]\n}"
                        },
                        {
                            "type": "Parameter",
                            "name": "graph_exec_id",
                            "range": [
                                961,
                                963
                            ],
                            "children": [],
                            "content": "\"userId\":user_id"
                        },
                        {
                            "type": "Parameter",
                            "name": "input_name",
                            "range": [
                                966,
                                968
                            ],
                            "children": [],
                            "content": "},\n"
                        },
                        {
                            "type": "Parameter",
                            "name": "input_data",
                            "range": [
                                971,
                                973
                            ],
                            "children": [],
                            "content": "GRAPH_EXECUTION_INCLUDE,\n"
                        },
                        {
                            "type": "Parameter",
                            "name": "node_exec_id",
                            "range": [
                                976,
                                982
                            ],
                            "children": [],
                            "content": "\nreturn result.id,["
                        }
                    ],
                    "content": "nodes_input\n]\n},\n\"userId\":user_id,\n},\ninclude=GRAPH_EXECUTION_INCLUDE,\n)\n\nreturn result.id,[\nExecutionResult."
                },
                {
                    "type": "ReturnType",
                    "name": "tuple[str, BlockInput]",
                    "range": [
                        986,
                        993
                    ],
                    "children": [],
                    "content": "from_db(execution)\nfor execution in"
                },
                {
                    "type": "FunctionBody",
                    "name": "body",
                    "range": [
                        994,
                        1270
                    ],
                    "children": [
                        {
                            "type": "Docstring",
                            "name": "docstring",
                            "range": [
                                996,
                                998
                            ],
                            "children": [],
                            "content": "AgentNodeExecutions or["
                        },
                        {
                            "type": "VariableDecl",
                            "name": "existing_execution",
                            "range": [
                                1000,
                                1092
                            ],
                            "children": [],
                            "content": "\n]\n\n\nasync def upsert_execution_input(\nnode_id:str,\ngraph_exec_id:str,\ninput_name:str,\ninput_data:Any,\nnode_exec_id:str|None=None,\n)->tuple[str,BlockInput]:\n\"\"\" \\n     Insert AgentNodeExecutionInputOutput record for as one of AgentNodeExecution.Input. \\n     If there is no AgentNodeExecution that has no `input_name` as input, create new one. \\n  \\n     Args: \\n         node_id: The id of the AgentNode. \\n         graph_exec_id: The id of the AgentGraphExecution. \\n         input_name: The name of the input data. \\n         input_data: The input data to be inserted. \\n         node_exec_id: [Optional] The id of the AgentNodeExecution that has no `input_name` as input. If not provided, it will find the eligible incomplete AgentNodeExecution or create a new one. \\n  \\n     Returns: \\n         * The id of the created or existing AgentNodeExecution. \\n         * Dict of node input data, key is the input name, value is the input data. \\n     \"\"\"\nexisting_execution=await AgentNodeExecution.prisma().find_first(\nwhere={#type:ignore\n**({\"id\":node_exec_id}if node_exec_id else{}),\n\"agentNodeId\":node_id"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "json_input_data",
                            "range": [
                                1093,
                                1101
                            ],
                            "children": [],
                            "content": ",\n\"agentGraphExecutionId\":graph_exec_id,\n\"executionStatus\":"
                        },
                        {
                            "type": "IfStatement",
                            "name": "if existing_execution",
                            "range": [
                                1103,
                                1185
                            ],
                            "children": [
                                {
                                    "type": "Block",
                                    "name": "if_block",
                                    "range": [
                                        1106,
                                        1185
                                    ],
                                    "children": [
                                        {
                                            "type": "ExpressionStatement",
                                            "name": "await AgentNodeExecutionInputOutput.prisma().create",
                                            "range": [
                                                1107,
                                                1140
                                            ],
                                            "children": [],
                                            "content": "\"Input\":{\"every\":{\"name\":{\"not\":input_name}}},\n},\norder={\"addedTime\":\"asc\"},\ninclude={\"Input\":"
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "name": "return",
                                            "range": [
                                                1142,
                                                1185
                                            ],
                                            "children": [],
                                            "content": "},\n)\njson_input_data=json.dumps(input_data)\n\nif existing_execution:\nawait AgentNodeExecutionInputOutput.prisma().create(\ndata={\n\"name\":input_name,\n\"data\":json_input_data,\n\"referencedByInputExecId\""
                                        }
                                    ],
                                    "content": "\n\"Input\":{\"every\":{\"name\":{\"not\":input_name}}},\n},\norder={\"addedTime\":\"asc\"},\ninclude={\"Input\":True},\n)\njson_input_data=json.dumps(input_data)\n\nif existing_execution:\nawait AgentNodeExecutionInputOutput.prisma().create(\ndata={\n\"name\":input_name,\n\"data\":json_input_data,\n\"referencedByInputExecId\""
                                }
                            ],
                            "content": ".INCOMPLETE,\n\"Input\":{\"every\":{\"name\":{\"not\":input_name}}},\n},\norder={\"addedTime\":\"asc\"},\ninclude={\"Input\":True},\n)\njson_input_data=json.dumps(input_data)\n\nif existing_execution:\nawait AgentNodeExecutionInputOutput.prisma().create(\ndata={\n\"name\":input_name,\n\"data\":json_input_data,\n\"referencedByInputExecId\""
                        },
                        {
                            "type": "ElifStatement",
                            "name": "elif not node_exec_id",
                            "range": [
                                1187,
                                1256
                            ],
                            "children": [
                                {
                                    "type": "Block",
                                    "name": "elif_block",
                                    "range": [
                                        1191,
                                        1256
                                    ],
                                    "children": [
                                        {
                                            "type": "VariableDecl",
                                            "name": "result",
                                            "range": [
                                                1192,
                                                1245
                                            ],
                                            "children": [],
                                            "content": "}\n)\nreturn existing_execution.id,{\n**{\ninput_data.name:json.loads(input_data.data)\nfor input_data in existing_execution.Input or[]\n},\ninput_name:input_data,\n}\n\nelif not node_exec_id:\n"
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "name": "return",
                                            "range": [
                                                1246,
                                                1256
                                            ],
                                            "children": [],
                                            "content": "result=await AgentNodeExecution.prisma().create("
                                        }
                                    ],
                                    "content": "\n}\n)\nreturn existing_execution.id,{\n**{\ninput_data.name:json.loads(input_data.data)\nfor input_data in existing_execution.Input or[]\n},\ninput_name:input_data,\n}\n\nelif not node_exec_id:\nresult=await AgentNodeExecution.prisma().create("
                                }
                            ],
                            "content": "existing_execution.id,\n}\n)\nreturn existing_execution.id,{\n**{\ninput_data.name:json.loads(input_data.data)\nfor input_data in existing_execution.Input or[]\n},\ninput_name:input_data,\n}\n\nelif not node_exec_id:\nresult=await AgentNodeExecution.prisma().create("
                        },
                        {
                            "type": "ElseStatement",
                            "name": "else",
                            "range": [
                                1258,
                                1269
                            ],
                            "children": [
                                {
                                    "type": "Block",
                                    "name": "else_block",
                                    "range": [
                                        1260,
                                        1269
                                    ],
                                    "children": [
                                        {
                                            "type": "RaiseStatement",
                                            "name": "raise ValueError",
                                            "range": [
                                                1261,
                                                1268
                                            ],
                                            "children": [],
                                            "content": "\n\"agentNodeId\":node_id,\n\"agentGraphExecutionId\":"
                                        }
                                    ],
                                    "content": "{\n\"agentNodeId\":node_id,\n\"agentGraphExecutionId\":graph_exec_id"
                                }
                            ],
                            "content": "data={\n\"agentNodeId\":node_id,\n\"agentGraphExecutionId\":graph_exec_id"
                        }
                    ],
                    "content": "result.AgentNodeExecutions or[]\n]\n\n\nasync def upsert_execution_input(\nnode_id:str,\ngraph_exec_id:str,\ninput_name:str,\ninput_data:Any,\nnode_exec_id:str|None=None,\n)->tuple[str,BlockInput]:\n\"\"\" \\n     Insert AgentNodeExecutionInputOutput record for as one of AgentNodeExecution.Input. \\n     If there is no AgentNodeExecution that has no `input_name` as input, create new one. \\n  \\n     Args: \\n         node_id: The id of the AgentNode. \\n         graph_exec_id: The id of the AgentGraphExecution. \\n         input_name: The name of the input data. \\n         input_data: The input data to be inserted. \\n         node_exec_id: [Optional] The id of the AgentNodeExecution that has no `input_name` as input. If not provided, it will find the eligible incomplete AgentNodeExecution or create a new one. \\n  \\n     Returns: \\n         * The id of the created or existing AgentNodeExecution. \\n         * Dict of node input data, key is the input name, value is the input data. \\n     \"\"\"\nexisting_execution=await AgentNodeExecution.prisma().find_first(\nwhere={#type:ignore\n**({\"id\":node_exec_id}if node_exec_id else{}),\n\"agentNodeId\":node_id,\n\"agentGraphExecutionId\":graph_exec_id,\n\"executionStatus\":ExecutionStatus.INCOMPLETE,\n\"Input\":{\"every\":{\"name\":{\"not\":input_name}}},\n},\norder={\"addedTime\":\"asc\"},\ninclude={\"Input\":True},\n)\njson_input_data=json.dumps(input_data)\n\nif existing_execution:\nawait AgentNodeExecutionInputOutput.prisma().create(\ndata={\n\"name\":input_name,\n\"data\":json_input_data,\n\"referencedByInputExecId\":existing_execution.id,\n}\n)\nreturn existing_execution.id,{\n**{\ninput_data.name:json.loads(input_data.data)\nfor input_data in existing_execution.Input or[]\n},\ninput_name:input_data,\n}\n\nelif not node_exec_id:\nresult=await AgentNodeExecution.prisma().create(\ndata={\n\"agentNodeId\":node_id,\n\"agentGraphExecutionId\":graph_exec_id,"
                }
            ],
            "content": ",node_input in nodes_input\n]\n},\n\"userId\":user_id,\n},\ninclude=GRAPH_EXECUTION_INCLUDE,\n)\n\nreturn result.id,[\nExecutionResult.from_db(execution)\nfor execution in result.AgentNodeExecutions or[]\n]\n\n\nasync def upsert_execution_input(\nnode_id:str,\ngraph_exec_id:str,\ninput_name:str,\ninput_data:Any,\nnode_exec_id:str|None=None,\n)->tuple[str,BlockInput]:\n\"\"\" \\n     Insert AgentNodeExecutionInputOutput record for as one of AgentNodeExecution.Input. \\n     If there is no AgentNodeExecution that has no `input_name` as input, create new one. \\n  \\n     Args: \\n         node_id: The id of the AgentNode. \\n         graph_exec_id: The id of the AgentGraphExecution. \\n         input_name: The name of the input data. \\n         input_data: The input data to be inserted. \\n         node_exec_id: [Optional] The id of the AgentNodeExecution that has no `input_name` as input. If not provided, it will find the eligible incomplete AgentNodeExecution or create a new one. \\n  \\n     Returns: \\n         * The id of the created or existing AgentNodeExecution. \\n         * Dict of node input data, key is the input name, value is the input data. \\n     \"\"\"\nexisting_execution=await AgentNodeExecution.prisma().find_first(\nwhere={#type:ignore\n**({\"id\":node_exec_id}if node_exec_id else{}),\n\"agentNodeId\":node_id,\n\"agentGraphExecutionId\":graph_exec_id,\n\"executionStatus\":ExecutionStatus.INCOMPLETE,\n\"Input\":{\"every\":{\"name\":{\"not\":input_name}}},\n},\norder={\"addedTime\":\"asc\"},\ninclude={\"Input\":True},\n)\njson_input_data=json.dumps(input_data)\n\nif existing_execution:\nawait AgentNodeExecutionInputOutput.prisma().create(\ndata={\n\"name\":input_name,\n\"data\":json_input_data,\n\"referencedByInputExecId\":existing_execution.id,\n}\n)\nreturn existing_execution.id,{\n**{\ninput_data.name:json.loads(input_data.data)\nfor input_data in existing_execution.Input or[]\n},\ninput_name:input_data,\n}\n\nelif not node_exec_id:\nresult=await AgentNodeExecution.prisma().create(\ndata={\n\"agentNodeId\":node_id,\n\"agentGraphExecutionId\":graph_exec_id,"
        },
        {
            "type": "FunctionDecl",
            "name": "upsert_execution_output",
            "range": [
                1271,
                1339
            ],
            "children": [
                {
                    "type": "Keyword",
                    "name": "async",
                    "range": [
                        1271,
                        1271
                    ],
                    "children": [],
                    "content": "\n"
                },
                {
                    "type": "Keyword",
                    "name": "def",
                    "range": [
                        1272,
                        1272
                    ],
                    "children": [],
                    "content": "\"executionStatus\""
                },
                {
                    "type": "Identifier",
                    "name": "upsert_execution_output",
                    "range": [
                        1273,
                        1273
                    ],
                    "children": [],
                    "content": ":"
                },
                {
                    "type": "Parameter",
                    "name": "node_exec_id",
                    "range": [
                        1276,
                        1278
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "node_exec_id",
                            "range": [
                                1276,
                                1276
                            ],
                            "children": [],
                            "content": "INCOMPLETE"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                1278,
                                1278
                            ],
                            "children": [],
                            "content": "\n"
                        }
                    ],
                    "content": "INCOMPLETE,\n"
                },
                {
                    "type": "Parameter",
                    "name": "output_name",
                    "range": [
                        1281,
                        1283
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "output_name",
                            "range": [
                                1281,
                                1281
                            ],
                            "children": [],
                            "content": "{"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                1283,
                                1283
                            ],
                            "children": [],
                            "content": ":"
                        }
                    ],
                    "content": "{\"create\":"
                },
                {
                    "type": "Parameter",
                    "name": "output_data",
                    "range": [
                        1286,
                        1288
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "output_data",
                            "range": [
                                1286,
                                1286
                            ],
                            "children": [],
                            "content": ":"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "Any",
                            "range": [
                                1288,
                                1288
                            ],
                            "children": [],
                            "content": ","
                        }
                    ],
                    "content": ":input_name,"
                },
                {
                    "type": "ReturnType",
                    "name": "None",
                    "range": [
                        1292,
                        1294
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "None",
                            "range": [
                                1294,
                                1294
                            ],
                            "children": [],
                            "content": ","
                        }
                    ],
                    "content": "}},"
                },
                {
                    "type": "Docstring",
                    "name": "\"\"\" \\n     Insert AgentNodeExecutionInputOutput record for as one of AgentNodeExecution.Output. \\n     \"\"\"",
                    "range": [
                        1297,
                        1299
                    ],
                    "children": [],
                    "content": "\n)\n"
                },
                {
                    "type": "ExpressionStatement",
                    "name": "await AgentNodeExecutionInputOutput.prisma().create(data={...})",
                    "range": [
                        1301,
                        1337
                    ],
                    "children": [
                        {
                            "type": "Keyword",
                            "name": "await",
                            "range": [
                                1301,
                                1301
                            ],
                            "children": [],
                            "content": "result"
                        },
                        {
                            "type": "CallExpression",
                            "name": "AgentNodeExecutionInputOutput.prisma().create",
                            "range": [
                                1302,
                                1337
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "AgentNodeExecutionInputOutput",
                                    "range": [
                                        1302,
                                        1302
                                    ],
                                    "children": [],
                                    "content": "."
                                },
                                {
                                    "type": "CallExpression",
                                    "name": "prisma",
                                    "range": [
                                        1304,
                                        1304
                                    ],
                                    "children": [],
                                    "content": ","
                                },
                                {
                                    "type": "Identifier",
                                    "name": "create",
                                    "range": [
                                        1308,
                                        1308
                                    ],
                                    "children": [],
                                    "content": "input_data"
                                },
                                {
                                    "type": "ObjectExpression",
                                    "name": "data={...}",
                                    "range": [
                                        1311,
                                        1335
                                    ],
                                    "children": [
                                        {
                                            "type": "Property",
                                            "name": "\"name\": output_name",
                                            "range": [
                                                1315,
                                                1317
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "\"name\"",
                                                    "range": [
                                                        1315,
                                                        1315
                                                    ],
                                                    "children": [],
                                                    "content": "raise"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "output_name",
                                                    "range": [
                                                        1317,
                                                        1317
                                                    ],
                                                    "children": [],
                                                    "content": "("
                                                }
                                            ],
                                            "content": "raise ValueError("
                                        },
                                        {
                                            "type": "Property",
                                            "name": "\"data\": json.dumps(output_data)",
                                            "range": [
                                                1320,
                                                1327
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "\"data\"",
                                                    "range": [
                                                        1320,
                                                        1320
                                                    ],
                                                    "children": [],
                                                    "content": "\"NodeExecution {node_exec_id} not found or already has input {input_name}.\""
                                                },
                                                {
                                                    "type": "CallExpression",
                                                    "name": "json.dumps",
                                                    "range": [
                                                        1322,
                                                        1327
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "json",
                                                            "range": [
                                                                1322,
                                                                1322
                                                            ],
                                                            "children": [],
                                                            "content": ")"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "dumps",
                                                            "range": [
                                                                1324,
                                                                1324
                                                            ],
                                                            "children": [],
                                                            "content": "\n"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "output_data",
                                                            "range": [
                                                                1326,
                                                                1326
                                                            ],
                                                            "children": [],
                                                            "content": "async"
                                                        }
                                                    ],
                                                    "content": ")\n\n\nasync def"
                                                }
                                            ],
                                            "content": "\"NodeExecution {node_exec_id} not found or already has input {input_name}.\"\n)\n\n\nasync def"
                                        },
                                        {
                                            "type": "Property",
                                            "name": "\"referencedByOutputExecId\": node_exec_id",
                                            "range": [
                                                1330,
                                                1332
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "\"referencedByOutputExecId\"",
                                                    "range": [
                                                        1330,
                                                        1330
                                                    ],
                                                    "children": [],
                                                    "content": "\n"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "node_exec_id",
                                                    "range": [
                                                        1332,
                                                        1332
                                                    ],
                                                    "children": [],
                                                    "content": ":"
                                                }
                                            ],
                                            "content": "\nnode_exec_id:"
                                        }
                                    ],
                                    "content": "\nelse:\nraise ValueError(\nf \"NodeExecution {node_exec_id} not found or already has input {input_name}.\"\n)\n\n\nasync def upsert_execution_output(\nnode_exec_id:str,\n"
                                }
                            ],
                            "content": ".id,{input_name:input_data}\n\nelse:\nraise ValueError(\nf \"NodeExecution {node_exec_id} not found or already has input {input_name}.\"\n)\n\n\nasync def upsert_execution_output(\nnode_exec_id:str,\noutput_name:"
                        }
                    ],
                    "content": "result.id,{input_name:input_data}\n\nelse:\nraise ValueError(\nf \"NodeExecution {node_exec_id} not found or already has input {input_name}.\"\n)\n\n\nasync def upsert_execution_output(\nnode_exec_id:str,\noutput_name:"
                }
            ],
            "content": "\n\"executionStatus\":ExecutionStatus.INCOMPLETE,\n\"Input\":{\"create\":{\"name\":input_name,\"data\":json_input_data}},\n}\n)\nreturn result.id,{input_name:input_data}\n\nelse:\nraise ValueError(\nf \"NodeExecution {node_exec_id} not found or already has input {input_name}.\"\n)\n\n\nasync def upsert_execution_output(\nnode_exec_id:str,\noutput_name:str,"
        },
        {
            "type": "FunctionDecl",
            "name": "update_graph_execution_start_time",
            "range": [
                1340,
                1399
            ],
            "children": [
                {
                    "type": "Keyword",
                    "name": "async",
                    "range": [
                        1340,
                        1344
                    ],
                    "children": [],
                    "content": "\noutput_data:Any,"
                },
                {
                    "type": "Keyword",
                    "name": "def",
                    "range": [
                        1341,
                        1344
                    ],
                    "children": [],
                    "content": "output_data:Any,"
                },
                {
                    "type": "Identifier",
                    "name": "update_graph_execution_start_time",
                    "range": [
                        1342,
                        1371
                    ],
                    "children": [],
                    "content": ":Any,\n)->None:\n\"\"\" \\n     Insert AgentNodeExecutionInputOutput record for as one of AgentNodeExecution.Output. \\n     \"\"\"\nawait AgentNodeExecutionInputOutput.prisma().create(\ndata={\n\"name\":"
                },
                {
                    "type": "Parameter",
                    "name": "graph_exec_id",
                    "range": [
                        1344,
                        1365
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "graph_exec_id",
                            "range": [
                                1344,
                                1356
                            ],
                            "children": [],
                            "content": ",\n)->None:\n\"\"\" \\n     Insert AgentNodeExecutionInputOutput record for as one of AgentNodeExecution.Output. \\n     \"\"\"\nawait"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                1346,
                                1349
                            ],
                            "children": [],
                            "content": ")->None"
                        }
                    ],
                    "content": ",\n)->None:\n\"\"\" \\n     Insert AgentNodeExecutionInputOutput record for as one of AgentNodeExecution.Output. \\n     \"\"\"\nawait AgentNodeExecutionInputOutput.prisma().create(\n"
                },
                {
                    "type": "BlockStatement",
                    "name": "",
                    "range": [
                        1349,
                        1399
                    ],
                    "children": [
                        {
                            "type": "ExpressionStatement",
                            "name": "",
                            "range": [
                                1350,
                                1398
                            ],
                            "children": [
                                {
                                    "type": "AwaitExpression",
                                    "name": "",
                                    "range": [
                                        1350,
                                        1397
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "",
                                            "range": [
                                                1351,
                                                1397
                                            ],
                                            "children": [
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "",
                                                    "range": [
                                                        1351,
                                                        1357
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "AgentGraphExecution",
                                                            "range": [
                                                                1351,
                                                                1369
                                                            ],
                                                            "children": [],
                                                            "content": "\n\"\"\" \\n     Insert AgentNodeExecutionInputOutput record for as one of AgentNodeExecution.Output. \\n     \"\"\"\nawait AgentNodeExecutionInputOutput.prisma().create(\ndata={\n"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "prisma",
                                                            "range": [
                                                                1353,
                                                                1359
                                                            ],
                                                            "children": [],
                                                            "content": "\" \\n     Insert AgentNodeExecutionInputOutput record for as one of AgentNodeExecution.Output. \\n     \"\"\"\nawait AgentNodeExecutionInputOutput.prisma"
                                                        }
                                                    ],
                                                    "content": "\n\"\"\" \\n     Insert AgentNodeExecutionInputOutput record for as one of AgentNodeExecution.Output. \\n     \"\"\"\nawait AgentNodeExecutionInputOutput"
                                                },
                                                {
                                                    "type": "CallExpression",
                                                    "name": "",
                                                    "range": [
                                                        1357,
                                                        1397
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "name": "",
                                                            "range": [
                                                                1357,
                                                                1363
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "update",
                                                                    "range": [
                                                                        1357,
                                                                        1363
                                                                    ],
                                                                    "children": [],
                                                                    "content": "AgentNodeExecutionInputOutput.prisma().create"
                                                                }
                                                            ],
                                                            "content": "AgentNodeExecutionInputOutput.prisma().create"
                                                        },
                                                        {
                                                            "type": "ObjectExpression",
                                                            "name": "",
                                                            "range": [
                                                                1363,
                                                                1394
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Property",
                                                                    "name": "where",
                                                                    "range": [
                                                                        1360,
                                                                        1366
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "where",
                                                                            "range": [
                                                                                1360,
                                                                                1364
                                                                            ],
                                                                            "children": [],
                                                                            "content": "().create("
                                                                        },
                                                                        {
                                                                            "type": "ObjectExpression",
                                                                            "name": "",
                                                                            "range": [
                                                                                1362,
                                                                                1366
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Property",
                                                                                    "name": "id",
                                                                                    "range": [
                                                                                        1363,
                                                                                        1365
                                                                                    ],
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "name": "id",
                                                                                            "range": [
                                                                                                1363,
                                                                                                1365
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "create(\n"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "graph_exec_id",
                                                                                            "range": [
                                                                                                1365,
                                                                                                1377
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "\ndata={\n\"name\":output_name,\n\"data\":json"
                                                                                        }
                                                                                    ],
                                                                                    "content": "create(\n"
                                                                                }
                                                                            ],
                                                                            "content": ".create(\ndata"
                                                                        }
                                                                    ],
                                                                    "content": "().create(\ndata"
                                                                },
                                                                {
                                                                    "type": "Property",
                                                                    "name": "data",
                                                                    "range": [
                                                                        1369,
                                                                        1394
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "data",
                                                                            "range": [
                                                                                1369,
                                                                                1373
                                                                            ],
                                                                            "children": [],
                                                                            "content": "\n\"name\":output_name,"
                                                                        },
                                                                        {
                                                                            "type": "ObjectExpression",
                                                                            "name": "",
                                                                            "range": [
                                                                                1371,
                                                                                1394
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Property",
                                                                                    "name": "executionStatus",
                                                                                    "range": [
                                                                                        1373,
                                                                                        1378
                                                                                    ],
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "name": "executionStatus",
                                                                                            "range": [
                                                                                                1373,
                                                                                                1389
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": ",\n\"data\":json.dumps(output_data),\n\"referencedByOutputExecId\":node_exec_id,\n"
                                                                                        },
                                                                                        {
                                                                                            "type": "MemberExpression",
                                                                                            "name": "",
                                                                                            "range": [
                                                                                                1375,
                                                                                                1377
                                                                                            ],
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "ExecutionStatus",
                                                                                                    "range": [
                                                                                                        1375,
                                                                                                        1389
                                                                                                    ],
                                                                                                    "children": [],
                                                                                                    "content": "\"data\":json.dumps(output_data),\n\"referencedByOutputExecId\":node_exec_id,\n"
                                                                                                },
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "RUNNING",
                                                                                                    "range": [
                                                                                                        1377,
                                                                                                        1384
                                                                                                    ],
                                                                                                    "children": [],
                                                                                                    "content": "json.dumps(output_data),\n"
                                                                                                }
                                                                                            ],
                                                                                            "content": "\"data\":json"
                                                                                        }
                                                                                    ],
                                                                                    "content": ",\n\"data\":json."
                                                                                },
                                                                                {
                                                                                    "type": "Property",
                                                                                    "name": "startedAt",
                                                                                    "range": [
                                                                                        1380,
                                                                                        1392
                                                                                    ],
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "name": "startedAt",
                                                                                            "range": [
                                                                                                1380,
                                                                                                1389
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "(output_data),\n\"referencedByOutputExecId\":node_exec_id,\n"
                                                                                        },
                                                                                        {
                                                                                            "type": "CallExpression",
                                                                                            "name": "",
                                                                                            "range": [
                                                                                                1382,
                                                                                                1391
                                                                                            ],
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "MemberExpression",
                                                                                                    "name": "",
                                                                                                    "range": [
                                                                                                        1382,
                                                                                                        1388
                                                                                                    ],
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "datetime",
                                                                                                            "range": [
                                                                                                                1382,
                                                                                                                1390
                                                                                                            ],
                                                                                                            "children": [],
                                                                                                            "content": "),\n\"referencedByOutputExecId\":node_exec_id,\n}"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "now",
                                                                                                            "range": [
                                                                                                                1384,
                                                                                                                1387
                                                                                                            ],
                                                                                                            "children": [],
                                                                                                            "content": "\n\"referencedByOutputExecId\":node_exec_id"
                                                                                                        }
                                                                                                    ],
                                                                                                    "content": "),\n\"referencedByOutputExecId\":node_exec_id,"
                                                                                                },
                                                                                                {
                                                                                                    "type": "ObjectExpression",
                                                                                                    "name": "",
                                                                                                    "range": [
                                                                                                        1388,
                                                                                                        1391
                                                                                                    ],
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "Property",
                                                                                                            "name": "tz",
                                                                                                            "range": [
                                                                                                                1387,
                                                                                                                1390
                                                                                                            ],
                                                                                                            "children": [
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "tz",
                                                                                                                    "range": [
                                                                                                                        1387,
                                                                                                                        1389
                                                                                                                    ],
                                                                                                                    "children": [],
                                                                                                                    "content": "node_exec_id,\n"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "MemberExpression",
                                                                                                                    "name": "",
                                                                                                                    "range": [
                                                                                                                        1389,
                                                                                                                        1390
                                                                                                                    ],
                                                                                                                    "children": [
                                                                                                                        {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "timezone",
                                                                                                                            "range": [
                                                                                                                                1389,
                                                                                                                                1397
                                                                                                                            ],
                                                                                                                            "children": [],
                                                                                                                            "content": "\n}\n)\n\n\nasync def"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "utc",
                                                                                                                            "range": [
                                                                                                                                1390,
                                                                                                                                1393
                                                                                                                            ],
                                                                                                                            "children": [],
                                                                                                                            "content": "}\n)\n"
                                                                                                                        }
                                                                                                                    ],
                                                                                                                    "content": "\n}"
                                                                                                                }
                                                                                                            ],
                                                                                                            "content": "node_exec_id,\n}"
                                                                                                        }
                                                                                                    ],
                                                                                                    "content": ",\n}\n"
                                                                                                }
                                                                                            ],
                                                                                            "content": "),\n\"referencedByOutputExecId\":node_exec_id,\n}\n"
                                                                                        }
                                                                                    ],
                                                                                    "content": "(output_data),\n\"referencedByOutputExecId\":node_exec_id,\n}\n)"
                                                                                }
                                                                            ],
                                                                            "content": ":output_name,\n\"data\":json.dumps(output_data),\n\"referencedByOutputExecId\":node_exec_id,\n}\n)\n\n"
                                                                        }
                                                                    ],
                                                                    "content": "\n\"name\":output_name,\n\"data\":json.dumps(output_data),\n\"referencedByOutputExecId\":node_exec_id,\n}\n)\n\n"
                                                                }
                                                            ],
                                                            "content": "create(\ndata={\n\"name\":output_name,\n\"data\":json.dumps(output_data),\n\"referencedByOutputExecId\":node_exec_id,\n}\n)\n\n"
                                                        }
                                                    ],
                                                    "content": "AgentNodeExecutionInputOutput.prisma().create(\ndata={\n\"name\":output_name,\n\"data\":json.dumps(output_data),\n\"referencedByOutputExecId\":node_exec_id,\n}\n)\n\n\nasync def"
                                                }
                                            ],
                                            "content": "\n\"\"\" \\n     Insert AgentNodeExecutionInputOutput record for as one of AgentNodeExecution.Output. \\n     \"\"\"\nawait AgentNodeExecutionInputOutput.prisma().create(\ndata={\n\"name\":output_name,\n\"data\":json.dumps(output_data),\n\"referencedByOutputExecId\":node_exec_id,\n}\n)\n\n\nasync def"
                                        }
                                    ],
                                    "content": ":\n\"\"\" \\n     Insert AgentNodeExecutionInputOutput record for as one of AgentNodeExecution.Output. \\n     \"\"\"\nawait AgentNodeExecutionInputOutput.prisma().create(\ndata={\n\"name\":output_name,\n\"data\":json.dumps(output_data),\n\"referencedByOutputExecId\":node_exec_id,\n}\n)\n\n\nasync def"
                                }
                            ],
                            "content": ":\n\"\"\" \\n     Insert AgentNodeExecutionInputOutput record for as one of AgentNodeExecution.Output. \\n     \"\"\"\nawait AgentNodeExecutionInputOutput.prisma().create(\ndata={\n\"name\":output_name,\n\"data\":json.dumps(output_data),\n\"referencedByOutputExecId\":node_exec_id,\n}\n)\n\n\nasync def update_graph_execution_start_time"
                        }
                    ],
                    "content": "None:\n\"\"\" \\n     Insert AgentNodeExecutionInputOutput record for as one of AgentNodeExecution.Output. \\n     \"\"\"\nawait AgentNodeExecutionInputOutput.prisma().create(\ndata={\n\"name\":output_name,\n\"data\":json.dumps(output_data),\n\"referencedByOutputExecId\":node_exec_id,\n}\n)\n\n\nasync def update_graph_execution_start_time("
                }
            ],
            "content": "\noutput_data:Any,\n)->None:\n\"\"\" \\n     Insert AgentNodeExecutionInputOutput record for as one of AgentNodeExecution.Output. \\n     \"\"\"\nawait AgentNodeExecutionInputOutput.prisma().create(\ndata={\n\"name\":output_name,\n\"data\":json.dumps(output_data),\n\"referencedByOutputExecId\":node_exec_id,\n}\n)\n\n\nasync def update_graph_execution_start_time("
        },
        {
            "type": "FunctionDecl",
            "name": "update_graph_execution_stats",
            "range": [
                1400,
                1509
            ],
            "children": [
                {
                    "type": "AsyncKeyword",
                    "name": "async",
                    "range": [
                        1400,
                        1404
                    ],
                    "children": [],
                    "content": "graph_exec_id:str):"
                },
                {
                    "type": "DefKeyword",
                    "name": "def",
                    "range": [
                        1401,
                        1404
                    ],
                    "children": [],
                    "content": ":str):"
                },
                {
                    "type": "Identifier",
                    "name": "update_graph_execution_stats",
                    "range": [
                        1402,
                        1423
                    ],
                    "children": [],
                    "content": "str):\nawait AgentGraphExecution.prisma().update(\nwhere={\"id\":graph_exec_id},"
                },
                {
                    "type": "ParameterList",
                    "name": "parameters",
                    "range": [
                        1403,
                        1420
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "graph_exec_id",
                            "range": [
                                1405,
                                1407
                            ],
                            "children": [],
                            "content": "\nawait AgentGraphExecution"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                1407,
                                1410
                            ],
                            "children": [],
                            "content": "AgentGraphExecution.prisma("
                        },
                        {
                            "type": "Parameter",
                            "name": "stats",
                            "range": [
                                1410,
                                1412
                            ],
                            "children": [],
                            "content": "()."
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "dict[str, Any]",
                            "range": [
                                1412,
                                1418
                            ],
                            "children": [],
                            "content": ".update(\nwhere={"
                        }
                    ],
                    "content": "):\nawait AgentGraphExecution.prisma().update(\nwhere={\"id\":"
                },
                {
                    "type": "ReturnType",
                    "name": "ExecutionResult",
                    "range": [
                        1421,
                        1425
                    ],
                    "children": [],
                    "content": "graph_exec_id},\ndata"
                },
                {
                    "type": "BlockStatement",
                    "name": "body",
                    "range": [
                        1425,
                        1509
                    ],
                    "children": [
                        {
                            "type": "AssignmentExpression",
                            "name": "status",
                            "range": [
                                1426,
                                1441
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "status",
                                    "range": [
                                        1426,
                                        1431
                                    ],
                                    "children": [],
                                    "content": "={\n\"executionStatus\":ExecutionStatus"
                                },
                                {
                                    "type": "ConditionalExpression",
                                    "name": "if-else",
                                    "range": [
                                        1431,
                                        1441
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "stats.get",
                                            "range": [
                                                1431,
                                                1437
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "\"error\"",
                                                    "range": [
                                                        1435,
                                                        1437
                                                    ],
                                                    "children": [],
                                                    "content": "\n\"startedAt\":"
                                                }
                                            ],
                                            "content": "ExecutionStatus.RUNNING,\n\"startedAt\":"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "ExecutionStatus.FAILED",
                                            "range": [
                                                1438,
                                                1441
                                            ],
                                            "children": [],
                                            "content": "datetime.now("
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "ExecutionStatus.COMPLETED",
                                            "range": [
                                                1441,
                                                1441
                                            ],
                                            "children": [],
                                            "content": "("
                                        }
                                    ],
                                    "content": "ExecutionStatus.RUNNING,\n\"startedAt\":datetime.now("
                                }
                            ],
                            "content": "={\n\"executionStatus\":ExecutionStatus.RUNNING,\n\"startedAt\":datetime.now("
                        },
                        {
                            "type": "AwaitExpression",
                            "name": "await AgentGraphExecution.prisma().update",
                            "range": [
                                1445,
                                1486
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "AgentGraphExecution.prisma",
                                    "range": [
                                        1446,
                                        1450
                                    ],
                                    "children": [],
                                    "content": "utc),\n}"
                                },
                                {
                                    "type": "CallExpression",
                                    "name": "update",
                                    "range": [
                                        1452,
                                        1486
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "where",
                                            "range": [
                                                1455,
                                                1461
                                            ],
                                            "children": [],
                                            "content": "\n\nasync def update_graph_execution_stats(\n"
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "data",
                                            "range": [
                                                1464,
                                                1483
                                            ],
                                            "children": [],
                                            "content": "str,\nstats:dict[str,Any],\n)->ExecutionResult:\nstatus"
                                        }
                                    ],
                                    "content": "\n)\n\n\nasync def update_graph_execution_stats(\ngraph_exec_id:str,\nstats:dict[str,Any],\n)->ExecutionResult:\nstatus=ExecutionStatus."
                                }
                            ],
                            "content": ".utc),\n},\n)\n\n\nasync def update_graph_execution_stats(\ngraph_exec_id:str,\nstats:dict[str,Any],\n)->ExecutionResult:\nstatus=ExecutionStatus."
                        },
                        {
                            "type": "IfStatement",
                            "name": "if not res",
                            "range": [
                                1488,
                                1498
                            ],
                            "children": [
                                {
                                    "type": "UnaryExpression",
                                    "name": "not res",
                                    "range": [
                                        1488,
                                        1491
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "res",
                                            "range": [
                                                1489,
                                                1491
                                            ],
                                            "children": [],
                                            "content": "stats.get"
                                        }
                                    ],
                                    "content": "if stats.get"
                                },
                                {
                                    "type": "ThrowStatement",
                                    "name": "raise ValueError",
                                    "range": [
                                        1492,
                                        1498
                                    ],
                                    "children": [],
                                    "content": "(\"error\")else ExecutionStatus.COMPLETED"
                                }
                            ],
                            "content": "if stats.get(\"error\")else ExecutionStatus.COMPLETED"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "return ExecutionResult.from_graph(res)",
                            "range": [
                                1501,
                                1508
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "ExecutionResult.from_graph",
                                    "range": [
                                        1502,
                                        1507
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "res",
                                            "range": [
                                                1506,
                                                1507
                                            ],
                                            "children": [],
                                            "content": "()"
                                        }
                                    ],
                                    "content": "await AgentGraphExecution.prisma()"
                                }
                            ],
                            "content": "=await AgentGraphExecution.prisma()."
                        }
                    ],
                    "content": "data={\n\"executionStatus\":ExecutionStatus.RUNNING,\n\"startedAt\":datetime.now(tz=timezone.utc),\n},\n)\n\n\nasync def update_graph_execution_stats(\ngraph_exec_id:str,\nstats:dict[str,Any],\n)->ExecutionResult:\nstatus=ExecutionStatus.FAILED if stats.get(\"error\")else ExecutionStatus.COMPLETED\nres=await AgentGraphExecution.prisma().update"
                }
            ],
            "content": "graph_exec_id:str):\nawait AgentGraphExecution.prisma().update(\nwhere={\"id\":graph_exec_id},\ndata={\n\"executionStatus\":ExecutionStatus.RUNNING,\n\"startedAt\":datetime.now(tz=timezone.utc),\n},\n)\n\n\nasync def update_graph_execution_stats(\ngraph_exec_id:str,\nstats:dict[str,Any],\n)->ExecutionResult:\nstatus=ExecutionStatus.FAILED if stats.get(\"error\")else ExecutionStatus.COMPLETED\nres=await AgentGraphExecution.prisma().update"
        },
        {
            "type": "FunctionDecl",
            "name": "update_node_execution_stats",
            "range": [
                1510,
                1565
            ],
            "children": [
                {
                    "type": "Keyword",
                    "name": "async",
                    "range": [
                        1510,
                        1514
                    ],
                    "content": "(\nwhere={"
                },
                {
                    "type": "Keyword",
                    "name": "def",
                    "range": [
                        1511,
                        1514
                    ],
                    "content": "\nwhere={"
                },
                {
                    "type": "Identifier",
                    "name": "update_node_execution_stats",
                    "range": [
                        1512,
                        1540
                    ],
                    "content": "where={\"id\":graph_exec_id},\ndata={\n\"executionStatus\":status,\n\"stats\":json.dumps(stats),\n}"
                },
                {
                    "type": "Parameter",
                    "name": "node_exec_id",
                    "range": [
                        1514,
                        1526
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "node_exec_id",
                            "range": [
                                1514,
                                1526
                            ],
                            "content": "{\"id\":graph_exec_id},\ndata={\n\"executionStatus\":"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                1516,
                                1519
                            ],
                            "content": ":graph_exec_id},"
                        }
                    ],
                    "content": "{\"id\":graph_exec_id},\ndata={\n\"executionStatus\":"
                },
                {
                    "type": "Parameter",
                    "name": "stats",
                    "range": [
                        1518,
                        1526
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "stats",
                            "range": [
                                1518,
                                1523
                            ],
                            "content": "},\ndata={"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "dict",
                            "range": [
                                1520,
                                1526
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "str",
                                    "range": [
                                        1522,
                                        1525
                                    ],
                                    "content": "={\n\"executionStatus\""
                                },
                                {
                                    "type": "TypeAnnotation",
                                    "name": "Any",
                                    "range": [
                                        1524,
                                        1527
                                    ],
                                    "content": "\n\"executionStatus\":status"
                                }
                            ],
                            "content": "\ndata={\n\"executionStatus\":"
                        }
                    ],
                    "content": "},\ndata={\n\"executionStatus\":"
                },
                {
                    "type": "BlockStatement",
                    "name": "",
                    "range": [
                        1528,
                        1565
                    ],
                    "children": [
                        {
                            "type": "Keyword",
                            "name": "await",
                            "range": [
                                1529,
                                1534
                            ],
                            "content": "\n\"stats\":json.dumps"
                        },
                        {
                            "type": "MemberExpression",
                            "name": "AgentNodeExecution.prisma",
                            "range": [
                                1530,
                                1537
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "AgentNodeExecution",
                                    "range": [
                                        1530,
                                        1547
                                    ],
                                    "content": "\"stats\":json.dumps(stats),\n},\n)\nif not res"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "prisma",
                                    "range": [
                                        1532,
                                        1538
                                    ],
                                    "content": "json.dumps(stats),"
                                }
                            ],
                            "content": "\"stats\":json.dumps(stats)"
                        },
                        {
                            "type": "CallExpression",
                            "name": "update",
                            "range": [
                                1536,
                                1562
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "update",
                                    "range": [
                                        1536,
                                        1542
                                    ],
                                    "content": "stats),\n},\n"
                                },
                                {
                                    "type": "ObjectExpression",
                                    "name": "where",
                                    "range": [
                                        1539,
                                        1545
                                    ],
                                    "children": [
                                        {
                                            "type": "Property",
                                            "name": "id",
                                            "range": [
                                                1542,
                                                1545
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "\"id\"",
                                                    "range": [
                                                        1542,
                                                        1545
                                                    ],
                                                    "content": "\n)\nif"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "node_exec_id",
                                                    "range": [
                                                        1544,
                                                        1556
                                                    ],
                                                    "content": "\nif not res:\nraise ValueError(f \"Execution {graph_exec_id} not found.\")\n"
                                                }
                                            ],
                                            "content": "\n)\nif"
                                        }
                                    ],
                                    "content": "\n},\n)\nif"
                                },
                                {
                                    "type": "ObjectExpression",
                                    "name": "data",
                                    "range": [
                                        1548,
                                        1559
                                    ],
                                    "children": [
                                        {
                                            "type": "Property",
                                            "name": "stats",
                                            "range": [
                                                1551,
                                                1559
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "\"stats\"",
                                                    "range": [
                                                        1551,
                                                        1557
                                                    ],
                                                    "content": "ValueError(f \"Execution {graph_exec_id} not found.\")\n\n"
                                                },
                                                {
                                                    "type": "CallExpression",
                                                    "name": "json.dumps",
                                                    "range": [
                                                        1553,
                                                        1558
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "name": "json.dumps",
                                                            "range": [
                                                                1553,
                                                                1558
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "json",
                                                                    "range": [
                                                                        1553,
                                                                        1557
                                                                    ],
                                                                    "content": "f \"Execution {graph_exec_id} not found.\")\n\n"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "dumps",
                                                                    "range": [
                                                                        1555,
                                                                        1560
                                                                    ],
                                                                    "content": ")\n\nreturn ExecutionResult."
                                                                }
                                                            ],
                                                            "content": "f \"Execution {graph_exec_id} not found.\")\n\nreturn"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "stats",
                                                            "range": [
                                                                1557,
                                                                1562
                                                            ],
                                                            "content": "\nreturn ExecutionResult.from_graph("
                                                        }
                                                    ],
                                                    "content": "f \"Execution {graph_exec_id} not found.\")\n\nreturn"
                                                }
                                            ],
                                            "content": "ValueError(f \"Execution {graph_exec_id} not found.\")\n\nreturn ExecutionResult"
                                        }
                                    ],
                                    "content": ":\nraise ValueError(f \"Execution {graph_exec_id} not found.\")\n\nreturn ExecutionResult"
                                }
                            ],
                            "content": "stats),\n},\n)\nif not res:\nraise ValueError(f \"Execution {graph_exec_id} not found.\")\n\nreturn ExecutionResult.from_graph("
                        }
                    ],
                    "content": ",\n\"stats\":json.dumps(stats),\n},\n)\nif not res:\nraise ValueError(f \"Execution {graph_exec_id} not found.\")\n\nreturn ExecutionResult.from_graph(res)\n"
                }
            ],
            "content": "(\nwhere={\"id\":graph_exec_id},\ndata={\n\"executionStatus\":status,\n\"stats\":json.dumps(stats),\n},\n)\nif not res:\nraise ValueError(f \"Execution {graph_exec_id} not found.\")\n\nreturn ExecutionResult.from_graph(res)\n"
        },
        {
            "type": "FunctionDecl",
            "name": "update_execution_status",
            "range": [
                1566,
                1845
            ],
            "children": [
                {
                    "type": "AsyncKeyword",
                    "name": "async",
                    "range": [
                        1566,
                        1571
                    ],
                    "children": [],
                    "content": "\n\nasync def update_node_execution_stats("
                },
                {
                    "type": "DefKeyword",
                    "name": "def",
                    "range": [
                        1567,
                        1570
                    ],
                    "children": [],
                    "content": "\nasync def update_node_execution_stats"
                },
                {
                    "type": "FunctionName",
                    "name": "update_execution_status",
                    "range": [
                        1568,
                        1588
                    ],
                    "children": [],
                    "content": "async def update_node_execution_stats(node_exec_id:str,stats:dict[str,Any]):\nawait AgentNodeExecution"
                },
                {
                    "type": "ParameterList",
                    "name": "parameters",
                    "range": [
                        1569,
                        1604
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "node_exec_id",
                            "range": [
                                1571,
                                1574
                            ],
                            "children": [
                                {
                                    "type": "ParameterName",
                                    "name": "node_exec_id",
                                    "range": [
                                        1571,
                                        1574
                                    ],
                                    "children": [],
                                    "content": "(node_exec_id:str"
                                },
                                {
                                    "type": "TypeAnnotation",
                                    "name": "str",
                                    "range": [
                                        1572,
                                        1574
                                    ],
                                    "children": [],
                                    "content": "node_exec_id:str"
                                }
                            ],
                            "content": "(node_exec_id:str"
                        },
                        {
                            "type": "Parameter",
                            "name": "status",
                            "range": [
                                1576,
                                1579
                            ],
                            "children": [
                                {
                                    "type": "ParameterName",
                                    "name": "status",
                                    "range": [
                                        1576,
                                        1579
                                    ],
                                    "children": [],
                                    "content": "stats:dict["
                                },
                                {
                                    "type": "TypeAnnotation",
                                    "name": "ExecutionStatus",
                                    "range": [
                                        1577,
                                        1579
                                    ],
                                    "children": [],
                                    "content": ":dict["
                                }
                            ],
                            "content": "stats:dict["
                        },
                        {
                            "type": "Parameter",
                            "name": "execution_data",
                            "range": [
                                1581,
                                1587
                            ],
                            "children": [
                                {
                                    "type": "ParameterName",
                                    "name": "execution_data",
                                    "range": [
                                        1581,
                                        1587
                                    ],
                                    "children": [],
                                    "content": ",Any]):\nawait"
                                },
                                {
                                    "type": "TypeAnnotation",
                                    "name": "BlockInput | None",
                                    "range": [
                                        1582,
                                        1587
                                    ],
                                    "children": [],
                                    "content": "Any]):\nawait"
                                }
                            ],
                            "content": ",Any]):\nawait"
                        },
                        {
                            "type": "Parameter",
                            "name": "stats",
                            "range": [
                                1590,
                                1601
                            ],
                            "children": [
                                {
                                    "type": "ParameterName",
                                    "name": "stats",
                                    "range": [
                                        1590,
                                        1601
                                    ],
                                    "children": [],
                                    "content": "prisma().update(\nwhere={\"id\":"
                                },
                                {
                                    "type": "TypeAnnotation",
                                    "name": "dict[str, Any] | None",
                                    "range": [
                                        1591,
                                        1601
                                    ],
                                    "children": [],
                                    "content": "().update(\nwhere={\"id\":"
                                }
                            ],
                            "content": "prisma().update(\nwhere={\"id\":"
                        }
                    ],
                    "content": "def update_node_execution_stats(node_exec_id:str,stats:dict[str,Any]):\nawait AgentNodeExecution.prisma().update(\nwhere={\"id\":node_exec_id},"
                },
                {
                    "type": "ReturnType",
                    "name": "ExecutionResult",
                    "range": [
                        1605,
                        1607
                    ],
                    "children": [],
                    "content": "\ndata="
                },
                {
                    "type": "FunctionBody",
                    "name": "body",
                    "range": [
                        1608,
                        1845
                    ],
                    "children": [
                        {
                            "type": "IfStatement",
                            "name": "if",
                            "range": [
                                1610,
                                1628
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "condition",
                                    "range": [
                                        1611,
                                        1621
                                    ],
                                    "children": [
                                        {
                                            "type": "BinaryExpression",
                                            "name": "==",
                                            "range": [
                                                1611,
                                                1614
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "status",
                                                    "range": [
                                                        1611,
                                                        1614
                                                    ],
                                                    "children": [],
                                                    "content": "json.dumps("
                                                },
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "ExecutionStatus.QUEUED",
                                                    "range": [
                                                        1614,
                                                        1616
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "ExecutionStatus",
                                                            "range": [
                                                                1614,
                                                                1616
                                                            ],
                                                            "children": [],
                                                            "content": "(stats)"
                                                        },
                                                        {
                                                            "type": "Property",
                                                            "name": "QUEUED",
                                                            "range": [
                                                                1615,
                                                                1616
                                                            ],
                                                            "children": [],
                                                            "content": "stats)"
                                                        }
                                                    ],
                                                    "content": "(stats)"
                                                }
                                            ],
                                            "content": "json.dumps("
                                        },
                                        {
                                            "type": "BinaryExpression",
                                            "name": "and",
                                            "range": [
                                                1617,
                                                1621
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "execution_data",
                                                    "range": [
                                                        1617,
                                                        1621
                                                    ],
                                                    "children": [],
                                                    "content": "},\n)\n"
                                                },
                                                {
                                                    "type": "NullLiteral",
                                                    "name": "None",
                                                    "range": [
                                                        1619,
                                                        1621
                                                    ],
                                                    "children": [],
                                                    "content": "\n)\n"
                                                }
                                            ],
                                            "content": "},\n)\n"
                                        }
                                    ],
                                    "content": "json.dumps(stats)},\n)\n"
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "consequent",
                                    "range": [
                                        1622,
                                        1628
                                    ],
                                    "children": [
                                        {
                                            "type": "RaiseStatement",
                                            "name": "raise",
                                            "range": [
                                                1623,
                                                1627
                                            ],
                                            "children": [
                                                {
                                                    "type": "NewExpression",
                                                    "name": "ValueError",
                                                    "range": [
                                                        1624,
                                                        1627
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "ValueError",
                                                            "range": [
                                                                1624,
                                                                1627
                                                            ],
                                                            "children": [],
                                                            "content": "async def update_execution_status("
                                                        },
                                                        {
                                                            "type": "Arguments",
                                                            "name": "arguments",
                                                            "range": [
                                                                1625,
                                                                1627
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "StringLiteral",
                                                                    "name": "\"Execution data must be provided when queuing an execution.\"",
                                                                    "range": [
                                                                        1626,
                                                                        1627
                                                                    ],
                                                                    "children": [],
                                                                    "content": "update_execution_status("
                                                                }
                                                            ],
                                                            "content": "def update_execution_status("
                                                        }
                                                    ],
                                                    "content": "async def update_execution_status("
                                                }
                                            ],
                                            "content": "\nasync def update_execution_status("
                                        }
                                    ],
                                    "content": "\n\nasync def update_execution_status(\n"
                                }
                            ],
                            "content": ":json.dumps(stats)},\n)\n\n\nasync def update_execution_status(\n"
                        },
                        {
                            "type": "VariableDeclaration",
                            "name": "now",
                            "range": [
                                1630,
                                1642
                            ],
                            "children": [
                                {
                                    "type": "VariableDeclarator",
                                    "name": "now",
                                    "range": [
                                        1630,
                                        1642
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "now",
                                            "range": [
                                                1630,
                                                1642
                                            ],
                                            "children": [],
                                            "content": ":str,\nstatus:ExecutionStatus,\nexecution_data:BlockInput|"
                                        },
                                        {
                                            "type": "CallExpression",
                                            "name": "datetime.now",
                                            "range": [
                                                1632,
                                                1641
                                            ],
                                            "children": [
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "datetime.now",
                                                    "range": [
                                                        1632,
                                                        1634
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "datetime",
                                                            "range": [
                                                                1632,
                                                                1634
                                                            ],
                                                            "children": [],
                                                            "content": ",\nstatus"
                                                        },
                                                        {
                                                            "type": "Property",
                                                            "name": "now",
                                                            "range": [
                                                                1633,
                                                                1634
                                                            ],
                                                            "children": [],
                                                            "content": "\nstatus"
                                                        }
                                                    ],
                                                    "content": ",\nstatus"
                                                },
                                                {
                                                    "type": "Arguments",
                                                    "name": "arguments",
                                                    "range": [
                                                        1635,
                                                        1641
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "AssignmentExpression",
                                                            "name": "tz=",
                                                            "range": [
                                                                1636,
                                                                1640
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "tz",
                                                                    "range": [
                                                                        1636,
                                                                        1640
                                                                    ],
                                                                    "children": [],
                                                                    "content": "ExecutionStatus,\nexecution_data:"
                                                                },
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "name": "timezone.utc",
                                                                    "range": [
                                                                        1638,
                                                                        1640
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "timezone",
                                                                            "range": [
                                                                                1638,
                                                                                1640
                                                                            ],
                                                                            "children": [],
                                                                            "content": "\nexecution_data:"
                                                                        },
                                                                        {
                                                                            "type": "Property",
                                                                            "name": "utc",
                                                                            "range": [
                                                                                1639,
                                                                                1640
                                                                            ],
                                                                            "children": [],
                                                                            "content": "execution_data:"
                                                                        }
                                                                    ],
                                                                    "content": "\nexecution_data:"
                                                                }
                                                            ],
                                                            "content": "ExecutionStatus,\nexecution_data:"
                                                        }
                                                    ],
                                                    "content": ":ExecutionStatus,\nexecution_data:BlockInput"
                                                }
                                            ],
                                            "content": ",\nstatus:ExecutionStatus,\nexecution_data:BlockInput"
                                        }
                                    ],
                                    "content": ":str,\nstatus:ExecutionStatus,\nexecution_data:BlockInput|"
                                }
                            ],
                            "content": ":str,\nstatus:ExecutionStatus,\nexecution_data:BlockInput|"
                        },
                        {
                            "type": "VariableDeclaration",
                            "name": "data",
                            "range": [
                                1643,
                                1784
                            ],
                            "children": [
                                {
                                    "type": "VariableDeclarator",
                                    "name": "data",
                                    "range": [
                                        1643,
                                        1784
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "data",
                                            "range": [
                                                1643,
                                                1784
                                            ],
                                            "children": [],
                                            "content": "None=None,\nstats:dict[str,Any]|None=None,\n)->ExecutionResult:\nif status==ExecutionStatus.QUEUED and execution_data is None:\nraise ValueError(\"Execution data must be provided when queuing an execution.\")\n\nnow=datetime.now(tz=timezone.utc)\ndata={\n**({\"executionStatus\":status}),\n**({\"queuedTime\":now}if status==ExecutionStatus.QUEUED else{}),\n**({\"startedTime\":now}if status==ExecutionStatus.RUNNING else{}),\n**({\"endedTime\":now}if status==ExecutionStatus.FAILED else{}),\n**({\"endedTime\":"
                                        },
                                        {
                                            "type": "ObjectExpression",
                                            "name": "object",
                                            "range": [
                                                1645,
                                                1784
                                            ],
                                            "children": [
                                                {
                                                    "type": "Property",
                                                    "name": "executionStatus",
                                                    "range": [
                                                        1647,
                                                        1654
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "executionStatus",
                                                            "range": [
                                                                1647,
                                                                1654
                                                            ],
                                                            "children": [],
                                                            "content": "\nstats:dict[str,Any"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "status",
                                                            "range": [
                                                                1653,
                                                                1654
                                                            ],
                                                            "children": [],
                                                            "content": ",Any"
                                                        }
                                                    ],
                                                    "content": "\nstats:dict[str,Any"
                                                },
                                                {
                                                    "type": "Property",
                                                    "name": "queuedTime",
                                                    "range": [
                                                        1658,
                                                        1676
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "queuedTime",
                                                            "range": [
                                                                1658,
                                                                1676
                                                            ],
                                                            "children": [],
                                                            "content": "=None,\n)->ExecutionResult:\nif status==ExecutionStatus.QUEUED and execution_data"
                                                        },
                                                        {
                                                            "type": "ConditionalExpression",
                                                            "name": "ternary",
                                                            "range": [
                                                                1666,
                                                                1676
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "BinaryExpression",
                                                                    "name": "==",
                                                                    "range": [
                                                                        1667,
                                                                        1670
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "status",
                                                                            "range": [
                                                                                1667,
                                                                                1670
                                                                            ],
                                                                            "children": [],
                                                                            "content": "\nif status="
                                                                        },
                                                                        {
                                                                            "type": "MemberExpression",
                                                                            "name": "ExecutionStatus.QUEUED",
                                                                            "range": [
                                                                                1670,
                                                                                1672
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "ExecutionStatus",
                                                                                    "range": [
                                                                                        1670,
                                                                                        1672
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "==ExecutionStatus"
                                                                                },
                                                                                {
                                                                                    "type": "Property",
                                                                                    "name": "QUEUED",
                                                                                    "range": [
                                                                                        1671,
                                                                                        1672
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "=ExecutionStatus"
                                                                                }
                                                                            ],
                                                                            "content": "==ExecutionStatus"
                                                                        }
                                                                    ],
                                                                    "content": "\nif status="
                                                                },
                                                                {
                                                                    "type": "ObjectExpression",
                                                                    "name": "object",
                                                                    "range": [
                                                                        1673,
                                                                        1675
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Property",
                                                                            "name": "queuedTime",
                                                                            "range": [
                                                                                1673,
                                                                                1675
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "queuedTime",
                                                                                    "range": [
                                                                                        1673,
                                                                                        1675
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": ".QUEUED and"
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "now",
                                                                                    "range": [
                                                                                        1674,
                                                                                        1675
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "QUEUED and"
                                                                                }
                                                                            ],
                                                                            "content": ".QUEUED and"
                                                                        }
                                                                    ],
                                                                    "content": ".QUEUED and"
                                                                },
                                                                {
                                                                    "type": "ObjectExpression",
                                                                    "name": "object",
                                                                    "range": [
                                                                        1676,
                                                                        1676
                                                                    ],
                                                                    "children": [],
                                                                    "content": "execution_data"
                                                                }
                                                            ],
                                                            "content": ":\nif status==ExecutionStatus.QUEUED and execution_data"
                                                        }
                                                    ],
                                                    "content": "=None,\n)->ExecutionResult:\nif status==ExecutionStatus.QUEUED and execution_data"
                                                },
                                                {
                                                    "type": "Property",
                                                    "name": "startedTime",
                                                    "range": [
                                                        1679,
                                                        1697
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "startedTime",
                                                            "range": [
                                                                1679,
                                                                1697
                                                            ],
                                                            "children": [],
                                                            "content": ":\nraise ValueError(\"Execution data must be provided when queuing an execution.\")\n\nnow=datetime.now(tz=timezone."
                                                        },
                                                        {
                                                            "type": "ConditionalExpression",
                                                            "name": "ternary",
                                                            "range": [
                                                                1687,
                                                                1697
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "BinaryExpression",
                                                                    "name": "==",
                                                                    "range": [
                                                                        1688,
                                                                        1691
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "status",
                                                                            "range": [
                                                                                1688,
                                                                                1691
                                                                            ],
                                                                            "children": [],
                                                                            "content": "now=datetime."
                                                                        },
                                                                        {
                                                                            "type": "MemberExpression",
                                                                            "name": "ExecutionStatus.RUNNING",
                                                                            "range": [
                                                                                1691,
                                                                                1693
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "ExecutionStatus",
                                                                                    "range": [
                                                                                        1691,
                                                                                        1693
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": ".now("
                                                                                },
                                                                                {
                                                                                    "type": "Property",
                                                                                    "name": "RUNNING",
                                                                                    "range": [
                                                                                        1692,
                                                                                        1693
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "now("
                                                                                }
                                                                            ],
                                                                            "content": ".now("
                                                                        }
                                                                    ],
                                                                    "content": "now=datetime."
                                                                },
                                                                {
                                                                    "type": "ObjectExpression",
                                                                    "name": "object",
                                                                    "range": [
                                                                        1694,
                                                                        1696
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Property",
                                                                            "name": "startedTime",
                                                                            "range": [
                                                                                1694,
                                                                                1696
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "startedTime",
                                                                                    "range": [
                                                                                        1694,
                                                                                        1696
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "tz=timezone"
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "now",
                                                                                    "range": [
                                                                                        1695,
                                                                                        1696
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "=timezone"
                                                                                }
                                                                            ],
                                                                            "content": "tz=timezone"
                                                                        }
                                                                    ],
                                                                    "content": "tz=timezone"
                                                                },
                                                                {
                                                                    "type": "ObjectExpression",
                                                                    "name": "object",
                                                                    "range": [
                                                                        1697,
                                                                        1697
                                                                    ],
                                                                    "children": [],
                                                                    "content": "."
                                                                }
                                                            ],
                                                            "content": "\nnow=datetime.now(tz=timezone."
                                                        }
                                                    ],
                                                    "content": ":\nraise ValueError(\"Execution data must be provided when queuing an execution.\")\n\nnow=datetime.now(tz=timezone."
                                                },
                                                {
                                                    "type": "Property",
                                                    "name": "endedTime",
                                                    "range": [
                                                        1700,
                                                        1718
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "endedTime",
                                                            "range": [
                                                                1700,
                                                                1718
                                                            ],
                                                            "children": [],
                                                            "content": "\ndata={\n**({\"executionStatus\":status}),\n**("
                                                        },
                                                        {
                                                            "type": "ConditionalExpression",
                                                            "name": "ternary",
                                                            "range": [
                                                                1708,
                                                                1718
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "BinaryExpression",
                                                                    "name": "==",
                                                                    "range": [
                                                                        1709,
                                                                        1712
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "status",
                                                                            "range": [
                                                                                1709,
                                                                                1712
                                                                            ],
                                                                            "children": [],
                                                                            "content": "\"executionStatus\":status}"
                                                                        },
                                                                        {
                                                                            "type": "MemberExpression",
                                                                            "name": "ExecutionStatus.FAILED",
                                                                            "range": [
                                                                                1712,
                                                                                1714
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "ExecutionStatus",
                                                                                    "range": [
                                                                                        1712,
                                                                                        1714
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "}),"
                                                                                },
                                                                                {
                                                                                    "type": "Property",
                                                                                    "name": "FAILED",
                                                                                    "range": [
                                                                                        1713,
                                                                                        1714
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "),"
                                                                                }
                                                                            ],
                                                                            "content": "}),"
                                                                        }
                                                                    ],
                                                                    "content": "\"executionStatus\":status}"
                                                                },
                                                                {
                                                                    "type": "ObjectExpression",
                                                                    "name": "object",
                                                                    "range": [
                                                                        1715,
                                                                        1717
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Property",
                                                                            "name": "endedTime",
                                                                            "range": [
                                                                                1715,
                                                                                1717
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "endedTime",
                                                                                    "range": [
                                                                                        1715,
                                                                                        1717
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "\n**"
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "now",
                                                                                    "range": [
                                                                                        1716,
                                                                                        1717
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "**"
                                                                                }
                                                                            ],
                                                                            "content": "\n**"
                                                                        }
                                                                    ],
                                                                    "content": "\n**"
                                                                },
                                                                {
                                                                    "type": "ObjectExpression",
                                                                    "name": "object",
                                                                    "range": [
                                                                        1718,
                                                                        1718
                                                                    ],
                                                                    "children": [],
                                                                    "content": "("
                                                                }
                                                            ],
                                                            "content": "{\"executionStatus\":status}),\n**("
                                                        }
                                                    ],
                                                    "content": "\ndata={\n**({\"executionStatus\":status}),\n**("
                                                },
                                                {
                                                    "type": "Property",
                                                    "name": "endedTime",
                                                    "range": [
                                                        1721,
                                                        1739
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "endedTime",
                                                            "range": [
                                                                1721,
                                                                1739
                                                            ],
                                                            "children": [],
                                                            "content": ":now}if status==ExecutionStatus.QUEUED else{}),\n**("
                                                        },
                                                        {
                                                            "type": "ConditionalExpression",
                                                            "name": "ternary",
                                                            "range": [
                                                                1729,
                                                                1739
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "BinaryExpression",
                                                                    "name": "==",
                                                                    "range": [
                                                                        1730,
                                                                        1733
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "status",
                                                                            "range": [
                                                                                1730,
                                                                                1733
                                                                            ],
                                                                            "children": [],
                                                                            "content": "QUEUED else{}"
                                                                        },
                                                                        {
                                                                            "type": "MemberExpression",
                                                                            "name": "ExecutionStatus.COMPLETED",
                                                                            "range": [
                                                                                1733,
                                                                                1735
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "ExecutionStatus",
                                                                                    "range": [
                                                                                        1733,
                                                                                        1735
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "}),"
                                                                                },
                                                                                {
                                                                                    "type": "Property",
                                                                                    "name": "COMPLETED",
                                                                                    "range": [
                                                                                        1734,
                                                                                        1735
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "),"
                                                                                }
                                                                            ],
                                                                            "content": "}),"
                                                                        }
                                                                    ],
                                                                    "content": "QUEUED else{}"
                                                                },
                                                                {
                                                                    "type": "ObjectExpression",
                                                                    "name": "object",
                                                                    "range": [
                                                                        1736,
                                                                        1738
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Property",
                                                                            "name": "endedTime",
                                                                            "range": [
                                                                                1736,
                                                                                1738
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "endedTime",
                                                                                    "range": [
                                                                                        1736,
                                                                                        1738
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "\n**"
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "now",
                                                                                    "range": [
                                                                                        1737,
                                                                                        1738
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "**"
                                                                                }
                                                                            ],
                                                                            "content": "\n**"
                                                                        }
                                                                    ],
                                                                    "content": "\n**"
                                                                },
                                                                {
                                                                    "type": "ObjectExpression",
                                                                    "name": "object",
                                                                    "range": [
                                                                        1739,
                                                                        1739
                                                                    ],
                                                                    "children": [],
                                                                    "content": "("
                                                                }
                                                            ],
                                                            "content": ".QUEUED else{}),\n**("
                                                        }
                                                    ],
                                                    "content": ":now}if status==ExecutionStatus.QUEUED else{}),\n**("
                                                },
                                                {
                                                    "type": "Property",
                                                    "name": "executionData",
                                                    "range": [
                                                        1742,
                                                        1760
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "executionData",
                                                            "range": [
                                                                1742,
                                                                1760
                                                            ],
                                                            "children": [],
                                                            "content": ":now}if status==ExecutionStatus.RUNNING else{}),\n**("
                                                        },
                                                        {
                                                            "type": "ConditionalExpression",
                                                            "name": "ternary",
                                                            "range": [
                                                                1756,
                                                                1760
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "execution_data",
                                                                    "range": [
                                                                        1756,
                                                                        1760
                                                                    ],
                                                                    "children": [],
                                                                    "content": ",\n**("
                                                                },
                                                                {
                                                                    "type": "CallExpression",
                                                                    "name": "json.dumps",
                                                                    "range": [
                                                                        1748,
                                                                        1754
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "MemberExpression",
                                                                            "name": "json.dumps",
                                                                            "range": [
                                                                                1748,
                                                                                1750
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "json",
                                                                                    "range": [
                                                                                        1748,
                                                                                        1750
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "=ExecutionStatus."
                                                                                },
                                                                                {
                                                                                    "type": "Property",
                                                                                    "name": "dumps",
                                                                                    "range": [
                                                                                        1749,
                                                                                        1750
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "ExecutionStatus."
                                                                                }
                                                                            ],
                                                                            "content": "=ExecutionStatus."
                                                                        },
                                                                        {
                                                                            "type": "Arguments",
                                                                            "name": "arguments",
                                                                            "range": [
                                                                                1751,
                                                                                1754
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "execution_data",
                                                                                    "range": [
                                                                                        1752,
                                                                                        1754
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "else{}"
                                                                                }
                                                                            ],
                                                                            "content": "RUNNING else{}"
                                                                        }
                                                                    ],
                                                                    "content": "=ExecutionStatus.RUNNING else{}"
                                                                },
                                                                {
                                                                    "type": "ObjectExpression",
                                                                    "name": "object",
                                                                    "range": [
                                                                        1760,
                                                                        1760
                                                                    ],
                                                                    "children": [],
                                                                    "content": "("
                                                                }
                                                            ],
                                                            "content": ",\n**("
                                                        }
                                                    ],
                                                    "content": ":now}if status==ExecutionStatus.RUNNING else{}),\n**("
                                                },
                                                {
                                                    "type": "Property",
                                                    "name": "stats",
                                                    "range": [
                                                        1763,
                                                        1781
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "stats",
                                                            "range": [
                                                                1763,
                                                                1781
                                                            ],
                                                            "children": [],
                                                            "content": ":now}if status==ExecutionStatus.FAILED else{}),\n**("
                                                        },
                                                        {
                                                            "type": "ConditionalExpression",
                                                            "name": "ternary",
                                                            "range": [
                                                                1777,
                                                                1781
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "stats",
                                                                    "range": [
                                                                        1777,
                                                                        1781
                                                                    ],
                                                                    "children": [],
                                                                    "content": ",\n**("
                                                                },
                                                                {
                                                                    "type": "CallExpression",
                                                                    "name": "json.dumps",
                                                                    "range": [
                                                                        1769,
                                                                        1775
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "MemberExpression",
                                                                            "name": "json.dumps",
                                                                            "range": [
                                                                                1769,
                                                                                1771
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "json",
                                                                                    "range": [
                                                                                        1769,
                                                                                        1771
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "=ExecutionStatus."
                                                                                },
                                                                                {
                                                                                    "type": "Property",
                                                                                    "name": "dumps",
                                                                                    "range": [
                                                                                        1770,
                                                                                        1771
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "ExecutionStatus."
                                                                                }
                                                                            ],
                                                                            "content": "=ExecutionStatus."
                                                                        },
                                                                        {
                                                                            "type": "Arguments",
                                                                            "name": "arguments",
                                                                            "range": [
                                                                                1772,
                                                                                1775
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "stats",
                                                                                    "range": [
                                                                                        1773,
                                                                                        1775
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "else{}"
                                                                                }
                                                                            ],
                                                                            "content": "FAILED else{}"
                                                                        }
                                                                    ],
                                                                    "content": "=ExecutionStatus.FAILED else{}"
                                                                },
                                                                {
                                                                    "type": "ObjectExpression",
                                                                    "name": "object",
                                                                    "range": [
                                                                        1781,
                                                                        1781
                                                                    ],
                                                                    "children": [],
                                                                    "content": "("
                                                                }
                                                            ],
                                                            "content": ",\n**("
                                                        }
                                                    ],
                                                    "content": ":now}if status==ExecutionStatus.FAILED else{}),\n**("
                                                }
                                            ],
                                            "content": "None,\nstats:dict[str,Any]|None=None,\n)->ExecutionResult:\nif status==ExecutionStatus.QUEUED and execution_data is None:\nraise ValueError(\"Execution data must be provided when queuing an execution.\")\n\nnow=datetime.now(tz=timezone.utc)\ndata={\n**({\"executionStatus\":status}),\n**({\"queuedTime\":now}if status==ExecutionStatus.QUEUED else{}),\n**({\"startedTime\":now}if status==ExecutionStatus.RUNNING else{}),\n**({\"endedTime\":now}if status==ExecutionStatus.FAILED else{}),\n**({\"endedTime\":"
                                        }
                                    ],
                                    "content": "None=None,\nstats:dict[str,Any]|None=None,\n)->ExecutionResult:\nif status==ExecutionStatus.QUEUED and execution_data is None:\nraise ValueError(\"Execution data must be provided when queuing an execution.\")\n\nnow=datetime.now(tz=timezone.utc)\ndata={\n**({\"executionStatus\":status}),\n**({\"queuedTime\":now}if status==ExecutionStatus.QUEUED else{}),\n**({\"startedTime\":now}if status==ExecutionStatus.RUNNING else{}),\n**({\"endedTime\":now}if status==ExecutionStatus.FAILED else{}),\n**({\"endedTime\":"
                                }
                            ],
                            "content": "None=None,\nstats:dict[str,Any]|None=None,\n)->ExecutionResult:\nif status==ExecutionStatus.QUEUED and execution_data is None:\nraise ValueError(\"Execution data must be provided when queuing an execution.\")\n\nnow=datetime.now(tz=timezone.utc)\ndata={\n**({\"executionStatus\":status}),\n**({\"queuedTime\":now}if status==ExecutionStatus.QUEUED else{}),\n**({\"startedTime\":now}if status==ExecutionStatus.RUNNING else{}),\n**({\"endedTime\":now}if status==ExecutionStatus.FAILED else{}),\n**({\"endedTime\":"
                        },
                        {
                            "type": "VariableDeclaration",
                            "name": "res",
                            "range": [
                                1787,
                                1823
                            ],
                            "children": [
                                {
                                    "type": "VariableDeclarator",
                                    "name": "res",
                                    "range": [
                                        1787,
                                        1823
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "res",
                                            "range": [
                                                1787,
                                                1823
                                            ],
                                            "children": [],
                                            "content": "if status==ExecutionStatus.COMPLETED else{}),\n**({\"executionData\":json.dumps(execution_data)}if execution_data else{}),\n**("
                                        },
                                        {
                                            "type": "AwaitExpression",
                                            "name": "await",
                                            "range": [
                                                1789,
                                                1823
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "AgentNodeExecution.prisma().update",
                                                    "range": [
                                                        1790,
                                                        1822
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "name": "AgentNodeExecution.prisma",
                                                            "range": [
                                                                1790,
                                                                1792
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "AgentNodeExecution",
                                                                    "range": [
                                                                        1790,
                                                                        1792
                                                                    ],
                                                                    "children": [],
                                                                    "content": "=ExecutionStatus."
                                                                },
                                                                {
                                                                    "type": "Property",
                                                                    "name": "prisma",
                                                                    "range": [
                                                                        1791,
                                                                        1792
                                                                    ],
                                                                    "children": [],
                                                                    "content": "ExecutionStatus."
                                                                }
                                                            ],
                                                            "content": "=ExecutionStatus."
                                                        },
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "prisma().update",
                                                            "range": [
                                                                1793,
                                                                1822
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "name": "prisma().update",
                                                                    "range": [
                                                                        1793,
                                                                        1796
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "CallExpression",
                                                                            "name": "prisma",
                                                                            "range": [
                                                                                1793,
                                                                                1795
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "prisma",
                                                                                    "range": [
                                                                                        1793,
                                                                                        1795
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "COMPLETED else{"
                                                                                },
                                                                                {
                                                                                    "type": "Arguments",
                                                                                    "name": "arguments",
                                                                                    "range": [
                                                                                        1794,
                                                                                        1795
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "else{"
                                                                                }
                                                                            ],
                                                                            "content": "COMPLETED else{"
                                                                        },
                                                                        {
                                                                            "type": "Property",
                                                                            "name": "update",
                                                                            "range": [
                                                                                1795,
                                                                                1796
                                                                            ],
                                                                            "children": [],
                                                                            "content": "{}"
                                                                        }
                                                                    ],
                                                                    "content": "COMPLETED else{}"
                                                                },
                                                                {
                                                                    "type": "Arguments",
                                                                    "name": "arguments",
                                                                    "range": [
                                                                        1797,
                                                                        1822
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "ObjectExpression",
                                                                            "name": "where",
                                                                            "range": [
                                                                                1799,
                                                                                1806
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Property",
                                                                                    "name": "id",
                                                                                    "range": [
                                                                                        1802,
                                                                                        1805
                                                                                    ],
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "id",
                                                                                            "range": [
                                                                                                1802,
                                                                                                1805
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "({\"executionData\":"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "node_exec_id",
                                                                                            "range": [
                                                                                                1804,
                                                                                                1805
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "\"executionData\":"
                                                                                        }
                                                                                    ],
                                                                                    "content": "({\"executionData\":"
                                                                                }
                                                                            ],
                                                                            "content": "\n**({\"executionData\":json"
                                                                        },
                                                                        {
                                                                            "type": "ObjectExpression",
                                                                            "name": "data",
                                                                            "range": [
                                                                                1808,
                                                                                1811
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "data",
                                                                                    "range": [
                                                                                        1808,
                                                                                        1811
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "dumps(execution_data)"
                                                                                }
                                                                            ],
                                                                            "content": "dumps(execution_data)"
                                                                        },
                                                                        {
                                                                            "type": "Comment",
                                                                            "name": "# type: ignore",
                                                                            "range": [
                                                                                1812,
                                                                                1816
                                                                            ],
                                                                            "children": [],
                                                                            "content": "}if execution_data else{"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "EXECUTION_RESULT_INCLUDE",
                                                                            "range": [
                                                                                1819,
                                                                                1820
                                                                            ],
                                                                            "children": [],
                                                                            "content": ",\n"
                                                                        }
                                                                    ],
                                                                    "content": "),\n**({\"executionData\":json.dumps(execution_data)}if execution_data else{}),\n**"
                                                                }
                                                            ],
                                                            "content": "COMPLETED else{}),\n**({\"executionData\":json.dumps(execution_data)}if execution_data else{}),\n**"
                                                        }
                                                    ],
                                                    "content": "=ExecutionStatus.COMPLETED else{}),\n**({\"executionData\":json.dumps(execution_data)}if execution_data else{}),\n**"
                                                }
                                            ],
                                            "content": "==ExecutionStatus.COMPLETED else{}),\n**({\"executionData\":json.dumps(execution_data)}if execution_data else{}),\n**("
                                        }
                                    ],
                                    "content": "if status==ExecutionStatus.COMPLETED else{}),\n**({\"executionData\":json.dumps(execution_data)}if execution_data else{}),\n**("
                                }
                            ],
                            "content": "if status==ExecutionStatus.COMPLETED else{}),\n**({\"executionData\":json.dumps(execution_data)}if execution_data else{}),\n**("
                        },
                        {
                            "type": "IfStatement",
                            "name": "if",
                            "range": [
                                1824,
                                1835
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "condition",
                                    "range": [
                                        1825,
                                        1827
                                    ],
                                    "children": [
                                        {
                                            "type": "UnaryExpression",
                                            "name": "not",
                                            "range": [
                                                1825,
                                                1827
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "res",
                                                    "range": [
                                                        1826,
                                                        1827
                                                    ],
                                                    "children": [],
                                                    "content": ":json"
                                                }
                                            ],
                                            "content": "\"stats\":json"
                                        }
                                    ],
                                    "content": "\"stats\":json"
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "consequent",
                                    "range": [
                                        1828,
                                        1835
                                    ],
                                    "children": [
                                        {
                                            "type": "RaiseStatement",
                                            "name": "raise",
                                            "range": [
                                                1829,
                                                1834
                                            ],
                                            "children": [
                                                {
                                                    "type": "NewExpression",
                                                    "name": "ValueError",
                                                    "range": [
                                                        1830,
                                                        1834
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "ValueError",
                                                            "range": [
                                                                1830,
                                                                1834
                                                            ],
                                                            "children": [],
                                                            "content": "(stats)}if"
                                                        },
                                                        {
                                                            "type": "Arguments",
                                                            "name": "arguments",
                                                            "range": [
                                                                1831,
                                                                1834
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "TemplateLiteral",
                                                                    "name": "f\"Execution {node_exec_id} not found.\"",
                                                                    "range": [
                                                                        1832,
                                                                        1834
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "node_exec_id",
                                                                            "range": [
                                                                                1833,
                                                                                1834
                                                                            ],
                                                                            "children": [],
                                                                            "content": "}if"
                                                                        }
                                                                    ],
                                                                    "content": ")}if"
                                                                }
                                                            ],
                                                            "content": "stats)}if"
                                                        }
                                                    ],
                                                    "content": "(stats)}if"
                                                }
                                            ],
                                            "content": "dumps(stats)}if"
                                        }
                                    ],
                                    "content": ".dumps(stats)}if stats"
                                }
                            ],
                            "content": "{\"stats\":json.dumps(stats)}if stats"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "return",
                            "range": [
                                1837,
                                1844
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "ExecutionResult.from_db",
                                    "range": [
                                        1838,
                                        1843
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "ExecutionResult.from_db",
                                            "range": [
                                                1838,
                                                1840
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "ExecutionResult",
                                                    "range": [
                                                        1838,
                                                        1840
                                                    ],
                                                    "children": [],
                                                    "content": "}),"
                                                },
                                                {
                                                    "type": "Property",
                                                    "name": "from_db",
                                                    "range": [
                                                        1839,
                                                        1840
                                                    ],
                                                    "children": [],
                                                    "content": "),"
                                                }
                                            ],
                                            "content": "}),"
                                        },
                                        {
                                            "type": "Arguments",
                                            "name": "arguments",
                                            "range": [
                                                1841,
                                                1843
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "res",
                                                    "range": [
                                                        1842,
                                                        1843
                                                    ],
                                                    "children": [],
                                                    "content": "}\n"
                                                }
                                            ],
                                            "content": "\n}\n"
                                        }
                                    ],
                                    "content": "}),\n}\n"
                                }
                            ],
                            "content": "{}),\n}\n\n"
                        }
                    ],
                    "content": "{\"stats\":json.dumps(stats)},\n)\n\n\nasync def update_execution_status(\nnode_exec_id:str,\nstatus:ExecutionStatus,\nexecution_data:BlockInput|None=None,\nstats:dict[str,Any]|None=None,\n)->ExecutionResult:\nif status==ExecutionStatus.QUEUED and execution_data is None:\nraise ValueError(\"Execution data must be provided when queuing an execution.\")\n\nnow=datetime.now(tz=timezone.utc)\ndata={\n**({\"executionStatus\":status}),\n**({\"queuedTime\":now}if status==ExecutionStatus.QUEUED else{}),\n**({\"startedTime\":now}if status==ExecutionStatus.RUNNING else{}),\n**({\"endedTime\":now}if status==ExecutionStatus.FAILED else{}),\n**({\"endedTime\":now}if status==ExecutionStatus.COMPLETED else{}),\n**({\"executionData\":json.dumps(execution_data)}if execution_data else{}),\n**({\"stats\":json.dumps(stats)}if stats else{}),\n}\n\nres"
                }
            ],
            "content": "\n\nasync def update_node_execution_stats(node_exec_id:str,stats:dict[str,Any]):\nawait AgentNodeExecution.prisma().update(\nwhere={\"id\":node_exec_id},\ndata={\"stats\":json.dumps(stats)},\n)\n\n\nasync def update_execution_status(\nnode_exec_id:str,\nstatus:ExecutionStatus,\nexecution_data:BlockInput|None=None,\nstats:dict[str,Any]|None=None,\n)->ExecutionResult:\nif status==ExecutionStatus.QUEUED and execution_data is None:\nraise ValueError(\"Execution data must be provided when queuing an execution.\")\n\nnow=datetime.now(tz=timezone.utc)\ndata={\n**({\"executionStatus\":status}),\n**({\"queuedTime\":now}if status==ExecutionStatus.QUEUED else{}),\n**({\"startedTime\":now}if status==ExecutionStatus.RUNNING else{}),\n**({\"endedTime\":now}if status==ExecutionStatus.FAILED else{}),\n**({\"endedTime\":now}if status==ExecutionStatus.COMPLETED else{}),\n**({\"executionData\":json.dumps(execution_data)}if execution_data else{}),\n**({\"stats\":json.dumps(stats)}if stats else{}),\n}\n\nres"
        },
        {
            "type": "FunctionDecl",
            "name": "get_execution_results",
            "range": [
                1846,
                1938
            ],
            "children": [
                {
                    "type": "AsyncKeyword",
                    "name": "async",
                    "range": [
                        1846,
                        1851
                    ],
                    "children": [],
                    "content": "=await AgentNodeExecution.prisma("
                },
                {
                    "type": "DefKeyword",
                    "name": "def",
                    "range": [
                        1847,
                        1850
                    ],
                    "children": [],
                    "content": "await AgentNodeExecution.prisma"
                },
                {
                    "type": "FunctionName",
                    "name": "get_execution_results",
                    "range": [
                        1848,
                        1869
                    ],
                    "children": [],
                    "content": "AgentNodeExecution.prisma().update(\nwhere={\"id\":node_exec_id},\ndata=data,"
                },
                {
                    "type": "ParameterList",
                    "name": "parameters",
                    "range": [
                        1849,
                        1853
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "graph_exec_id",
                            "range": [
                                1850,
                                1852
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "str",
                                    "range": [
                                        1851,
                                        1852
                                    ],
                                    "children": [],
                                    "content": "()"
                                }
                            ],
                            "content": "prisma()"
                        }
                    ],
                    "content": ".prisma()."
                },
                {
                    "type": "ReturnType",
                    "name": "-> list[ExecutionResult]",
                    "range": [
                        1854,
                        1859
                    ],
                    "children": [],
                    "content": "update(\nwhere={"
                },
                {
                    "type": "FunctionBody",
                    "name": "body",
                    "range": [
                        1860,
                        1938
                    ],
                    "children": [
                        {
                            "type": "AssignmentExpression",
                            "name": "executions = await AgentNodeExecution.prisma().find_many(...)",
                            "range": [
                                1862,
                                1918
                            ],
                            "children": [
                                {
                                    "type": "VariableDeclarator",
                                    "name": "executions",
                                    "range": [
                                        1862,
                                        1871
                                    ],
                                    "children": [],
                                    "content": "node_exec_id},\ndata=data,#type"
                                },
                                {
                                    "type": "AwaitExpression",
                                    "name": "await AgentNodeExecution.prisma().find_many(...)",
                                    "range": [
                                        1864,
                                        1918
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "AgentNodeExecution.prisma().find_many(...)",
                                            "range": [
                                                1865,
                                                1918
                                            ],
                                            "children": [
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "AgentNodeExecution.prisma",
                                                    "range": [
                                                        1865,
                                                        1867
                                                    ],
                                                    "children": [],
                                                    "content": "\ndata="
                                                },
                                                {
                                                    "type": "CallExpression",
                                                    "name": "find_many(...)",
                                                    "range": [
                                                        1868,
                                                        1918
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "ObjectExpression",
                                                            "name": "where = {...}",
                                                            "range": [
                                                                1874,
                                                                1880
                                                            ],
                                                            "children": [],
                                                            "content": "\ninclude=EXECUTION_RESULT_INCLUDE,\n)"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "include = EXECUTION_RESULT_INCLUDE",
                                                            "range": [
                                                                1883,
                                                                1886
                                                            ],
                                                            "children": [],
                                                            "content": "not res:\n"
                                                        },
                                                        {
                                                            "type": "ArrayExpression",
                                                            "name": "order = [...]",
                                                            "range": [
                                                                1888,
                                                                1915
                                                            ],
                                                            "children": [],
                                                            "content": "ValueError(f \"Execution {node_exec_id} not found.\")\n\nreturn ExecutionResult.from_db(res)\n\n\nasync def get_execution_results(graph_exec_id:str)->list"
                                                        }
                                                    ],
                                                    "content": "data,#type:ignore\ninclude=EXECUTION_RESULT_INCLUDE,\n)\nif not res:\nraise ValueError(f \"Execution {node_exec_id} not found.\")\n\nreturn ExecutionResult.from_db(res)\n\n\nasync def get_execution_results(graph_exec_id:str)->list[ExecutionResult]"
                                                }
                                            ],
                                            "content": "\ndata=data,#type:ignore\ninclude=EXECUTION_RESULT_INCLUDE,\n)\nif not res:\nraise ValueError(f \"Execution {node_exec_id} not found.\")\n\nreturn ExecutionResult.from_db(res)\n\n\nasync def get_execution_results(graph_exec_id:str)->list[ExecutionResult]"
                                        }
                                    ],
                                    "content": ",\ndata=data,#type:ignore\ninclude=EXECUTION_RESULT_INCLUDE,\n)\nif not res:\nraise ValueError(f \"Execution {node_exec_id} not found.\")\n\nreturn ExecutionResult.from_db(res)\n\n\nasync def get_execution_results(graph_exec_id:str)->list[ExecutionResult]"
                                }
                            ],
                            "content": "node_exec_id},\ndata=data,#type:ignore\ninclude=EXECUTION_RESULT_INCLUDE,\n)\nif not res:\nraise ValueError(f \"Execution {node_exec_id} not found.\")\n\nreturn ExecutionResult.from_db(res)\n\n\nasync def get_execution_results(graph_exec_id:str)->list[ExecutionResult]"
                        },
                        {
                            "type": "VariableDeclaration",
                            "name": "res = [...]",
                            "range": [
                                1920,
                                1933
                            ],
                            "children": [
                                {
                                    "type": "VariableDeclarator",
                                    "name": "res",
                                    "range": [
                                        1920,
                                        1921
                                    ],
                                    "children": [],
                                    "content": "\nexecutions"
                                },
                                {
                                    "type": "ArrayExpression",
                                    "name": "[...]",
                                    "range": [
                                        1922,
                                        1933
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "ExecutionResult.from_db(execution)",
                                            "range": [
                                                1923,
                                                1928
                                            ],
                                            "children": [],
                                            "content": "await AgentNodeExecution.prisma()"
                                        }
                                    ],
                                    "content": "=await AgentNodeExecution.prisma().find_many(\nwhere"
                                }
                            ],
                            "content": "\nexecutions=await AgentNodeExecution.prisma().find_many(\nwhere"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "return res",
                            "range": [
                                1935,
                                1936
                            ],
                            "children": [],
                            "content": "{\"agentGraphExecutionId\""
                        }
                    ],
                    "content": "\"id\":node_exec_id},\ndata=data,#type:ignore\ninclude=EXECUTION_RESULT_INCLUDE,\n)\nif not res:\nraise ValueError(f \"Execution {node_exec_id} not found.\")\n\nreturn ExecutionResult.from_db(res)\n\n\nasync def get_execution_results(graph_exec_id:str)->list[ExecutionResult]:\nexecutions=await AgentNodeExecution.prisma().find_many(\nwhere={\"agentGraphExecutionId\":graph_exec_id"
                }
            ],
            "content": "=await AgentNodeExecution.prisma().update(\nwhere={\"id\":node_exec_id},\ndata=data,#type:ignore\ninclude=EXECUTION_RESULT_INCLUDE,\n)\nif not res:\nraise ValueError(f \"Execution {node_exec_id} not found.\")\n\nreturn ExecutionResult.from_db(res)\n\n\nasync def get_execution_results(graph_exec_id:str)->list[ExecutionResult]:\nexecutions=await AgentNodeExecution.prisma().find_many(\nwhere={\"agentGraphExecutionId\":graph_exec_id"
        },
        {
            "type": "FunctionDecl",
            "name": "parse_execution_output",
            "range": [
                1952,
                2162
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "parameters",
                    "range": [
                        1954,
                        1962
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "output",
                            "range": [
                                1955,
                                1957
                            ],
                            "children": [],
                            "content": "},\n"
                        },
                        {
                            "type": "Parameter",
                            "name": "name",
                            "range": [
                                1959,
                                1961
                            ],
                            "children": [],
                            "content": "\"addedTime\":\"asc\""
                        }
                    ],
                    "content": "\"asc\"},\n{\"addedTime\":\"asc\"}"
                },
                {
                    "type": "ReturnType",
                    "name": "returnType",
                    "range": [
                        1963,
                        1967
                    ],
                    "children": [],
                    "content": ",#Fallback:Incomplete"
                },
                {
                    "type": "BlockStatement",
                    "name": "body",
                    "range": [
                        1969,
                        2161
                    ],
                    "children": [
                        {
                            "type": "Comment",
                            "name": "comment",
                            "range": [
                                1970,
                                1979
                            ],
                            "children": [],
                            "content": "no queuedTime.\n],\n)\nres"
                        },
                        {
                            "type": "VariableDeclaration",
                            "name": "output_name, output_data",
                            "range": [
                                1980,
                                1985
                            ],
                            "children": [],
                            "content": "=[ExecutionResult.from_db("
                        },
                        {
                            "type": "IfStatement",
                            "name": "if",
                            "range": [
                                1987,
                                1996
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "condition",
                                    "range": [
                                        1988,
                                        1991
                                    ],
                                    "children": [],
                                    "content": "for execution in executions"
                                },
                                {
                                    "type": "ReturnStatement",
                                    "name": "return",
                                    "range": [
                                        1994,
                                        1995
                                    ],
                                    "children": [],
                                    "content": "return res"
                                }
                            ],
                            "content": ")for execution in executions]\nreturn res\n"
                        },
                        {
                            "type": "IfStatement",
                            "name": "if",
                            "range": [
                                1998,
                                2060
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "condition",
                                    "range": [
                                        1999,
                                        2005
                                    ],
                                    "children": [],
                                    "content": "LIST_SPLIT=\"_$_\"\nDICT_SPLIT=\"_#_\""
                                },
                                {
                                    "type": "VariableDeclaration",
                                    "name": "index",
                                    "range": [
                                        2008,
                                        2021
                                    ],
                                    "children": [],
                                    "content": "=\"_@_\"\n\n\ndef parse_execution_output(output:BlockData,name:"
                                },
                                {
                                    "type": "IfStatement",
                                    "name": "if",
                                    "range": [
                                        2023,
                                        2043
                                    ],
                                    "children": [
                                        {
                                            "type": "Condition",
                                            "name": "condition",
                                            "range": [
                                                2024,
                                                2038
                                            ],
                                            "children": [],
                                            "content": "->Any|None:\n#Allow extracting partial output data by name"
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "name": "return",
                                            "range": [
                                                2041,
                                                2042
                                            ],
                                            "children": [],
                                            "content": "output_name,"
                                        }
                                    ],
                                    "content": ")->Any|None:\n#Allow extracting partial output data by name.\noutput_name,output_data"
                                },
                                {
                                    "type": "ReturnStatement",
                                    "name": "return",
                                    "range": [
                                        2044,
                                        2059
                                    ],
                                    "children": [],
                                    "content": "=output\n\nif name==output_name:\nreturn output_data\n\nif"
                                }
                            ],
                            "content": "\nLIST_SPLIT=\"_$_\"\nDICT_SPLIT=\"_#_\"\nOBJC_SPLIT=\"_@_\"\n\n\ndef parse_execution_output(output:BlockData,name:str)->Any|None:\n#Allow extracting partial output data by name.\noutput_name,output_data=output\n\nif name==output_name:\nreturn output_data\n\nif name"
                        },
                        {
                            "type": "IfStatement",
                            "name": "if",
                            "range": [
                                2062,
                                2107
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "condition",
                                    "range": [
                                        2063,
                                        2069
                                    ],
                                    "children": [],
                                    "content": "(f \"{output_name}{LIST_SPLIT}\"):\nindex"
                                },
                                {
                                    "type": "VariableDeclaration",
                                    "name": "index",
                                    "range": [
                                        2072,
                                        2083
                                    ],
                                    "children": [],
                                    "content": "(name.split(LIST_SPLIT)[1])\n"
                                },
                                {
                                    "type": "IfStatement",
                                    "name": "if",
                                    "range": [
                                        2084,
                                        2101
                                    ],
                                    "children": [
                                        {
                                            "type": "Condition",
                                            "name": "condition",
                                            "range": [
                                                2085,
                                                2096
                                            ],
                                            "children": [],
                                            "content": "not isinstance(output_data,list)or len(output_data)"
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "name": "return",
                                            "range": [
                                                2099,
                                                2100
                                            ],
                                            "children": [],
                                            "content": "index:"
                                        }
                                    ],
                                    "content": "if not isinstance(output_data,list)or len(output_data)<=index:\n"
                                },
                                {
                                    "type": "ReturnStatement",
                                    "name": "return",
                                    "range": [
                                        2102,
                                        2106
                                    ],
                                    "children": [],
                                    "content": "return None\nreturn output_data"
                                }
                            ],
                            "content": "startswith(f \"{output_name}{LIST_SPLIT}\"):\nindex=int(name.split(LIST_SPLIT)[1])\nif not isinstance(output_data,list)or len(output_data)<=index:\nreturn None\nreturn output_data["
                        },
                        {
                            "type": "IfStatement",
                            "name": "if",
                            "range": [
                                2109,
                                2157
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "condition",
                                    "range": [
                                        2110,
                                        2116
                                    ],
                                    "children": [],
                                    "content": "name.split(LIST_SPLIT)["
                                },
                                {
                                    "type": "VariableDeclaration",
                                    "name": "index",
                                    "range": [
                                        2119,
                                        2130
                                    ],
                                    "children": [],
                                    "content": ")]\n\nif name.startswith(f \"{output_name}{DICT_SPLIT}\")"
                                },
                                {
                                    "type": "IfStatement",
                                    "name": "if",
                                    "range": [
                                        2131,
                                        2154
                                    ],
                                    "children": [
                                        {
                                            "type": "Condition",
                                            "name": "condition",
                                            "range": [
                                                2132,
                                                2144
                                            ],
                                            "children": [],
                                            "content": "\nindex=name.split(DICT_SPLIT)[1]\n"
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "name": "return",
                                            "range": [
                                                2147,
                                                2153
                                            ],
                                            "children": [],
                                            "content": "isinstance(output_data,dict)or"
                                        }
                                    ],
                                    "content": ":\nindex=name.split(DICT_SPLIT)[1]\nif not isinstance(output_data,dict)or index"
                                },
                                {
                                    "type": "ReturnStatement",
                                    "name": "return",
                                    "range": [
                                        2155,
                                        2156
                                    ],
                                    "children": [],
                                    "content": "not in"
                                }
                            ],
                            "content": "(name.split(LIST_SPLIT)[1])]\n\nif name.startswith(f \"{output_name}{DICT_SPLIT}\"):\nindex=name.split(DICT_SPLIT)[1]\nif not isinstance(output_data,dict)or index not in output_data"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "return",
                            "range": [
                                2159,
                                2160
                            ],
                            "children": [],
                            "content": "\nreturn"
                        }
                    ],
                    "content": "has no queuedTime.\n],\n)\nres=[ExecutionResult.from_db(execution)for execution in executions]\nreturn res\n\n\nLIST_SPLIT=\"_$_\"\nDICT_SPLIT=\"_#_\"\nOBJC_SPLIT=\"_@_\"\n\n\ndef parse_execution_output(output:BlockData,name:str)->Any|None:\n#Allow extracting partial output data by name.\noutput_name,output_data=output\n\nif name==output_name:\nreturn output_data\n\nif name.startswith(f \"{output_name}{LIST_SPLIT}\"):\nindex=int(name.split(LIST_SPLIT)[1])\nif not isinstance(output_data,list)or len(output_data)<=index:\nreturn None\nreturn output_data[int(name.split(LIST_SPLIT)[1])]\n\nif name.startswith(f \"{output_name}{DICT_SPLIT}\"):\nindex=name.split(DICT_SPLIT)[1]\nif not isinstance(output_data,dict)or index not in output_data:\nreturn None"
                }
            ],
            "content": "\"queuedTime\":\"asc\"},\n{\"addedTime\":\"asc\"},#Fallback:Incomplete execs has no queuedTime.\n],\n)\nres=[ExecutionResult.from_db(execution)for execution in executions]\nreturn res\n\n\nLIST_SPLIT=\"_$_\"\nDICT_SPLIT=\"_#_\"\nOBJC_SPLIT=\"_@_\"\n\n\ndef parse_execution_output(output:BlockData,name:str)->Any|None:\n#Allow extracting partial output data by name.\noutput_name,output_data=output\n\nif name==output_name:\nreturn output_data\n\nif name.startswith(f \"{output_name}{LIST_SPLIT}\"):\nindex=int(name.split(LIST_SPLIT)[1])\nif not isinstance(output_data,list)or len(output_data)<=index:\nreturn None\nreturn output_data[int(name.split(LIST_SPLIT)[1])]\n\nif name.startswith(f \"{output_name}{DICT_SPLIT}\"):\nindex=name.split(DICT_SPLIT)[1]\nif not isinstance(output_data,dict)or index not in output_data:\nreturn None\n"
        },
        {
            "type": "FunctionDecl",
            "name": "merge_execution_input",
            "range": [
                2163,
                2509
            ],
            "children": [
                {
                    "type": "Arguments",
                    "name": "",
                    "range": [
                        2165,
                        2169
                    ],
                    "children": [
                        {
                            "type": "Argument",
                            "name": "data",
                            "range": [
                                2166,
                                2168
                            ],
                            "children": [],
                            "content": "index]\n"
                        }
                    ],
                    "content": "[index]\n\n"
                },
                {
                    "type": "ReturnType",
                    "name": "BlockInput",
                    "range": [
                        2170,
                        2172
                    ],
                    "children": [],
                    "content": "if name."
                },
                {
                    "type": "Docstring",
                    "name": "",
                    "range": [
                        2175,
                        2177
                    ],
                    "children": [],
                    "content": "f \"{output_name}{OBJC_SPLIT}\")"
                },
                {
                    "type": "Comment",
                    "name": "",
                    "range": [
                        2180,
                        2198
                    ],
                    "children": [],
                    "content": "index=name.split(OBJC_SPLIT)[1]\nif isinstance(output_data,object)"
                },
                {
                    "type": "AssignmentExpression",
                    "name": "items",
                    "range": [
                        2200,
                        2209
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "list",
                            "range": [
                                2202,
                                2209
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": "items",
                                    "range": [
                                        2204,
                                        2208
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "data",
                                            "range": [
                                                2204,
                                                2205
                                            ],
                                            "children": [],
                                            "content": "index)"
                                        }
                                    ],
                                    "content": "index):\nreturn"
                                }
                            ],
                            "content": "output_data,index):\nreturn getattr"
                        }
                    ],
                    "content": "hasattr(output_data,index):\nreturn getattr"
                },
                {
                    "type": "ForStatement",
                    "name": "",
                    "range": [
                        2212,
                        2340
                    ],
                    "children": [
                        {
                            "type": "VariableDeclaration",
                            "name": "",
                            "range": [
                                2213,
                                2215
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "key",
                                    "range": [
                                        2213,
                                        2214
                                    ],
                                    "children": [],
                                    "content": "index)"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "value",
                                    "range": [
                                        2215,
                                        2215
                                    ],
                                    "children": [],
                                    "content": "\n"
                                }
                            ],
                            "content": "index)\n"
                        },
                        {
                            "type": "Identifier",
                            "name": "items",
                            "range": [
                                2217,
                                2217
                            ],
                            "children": [],
                            "content": "None"
                        },
                        {
                            "type": "IfStatement",
                            "name": "",
                            "range": [
                                2220,
                                2227
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "name": "",
                                    "range": [
                                        2221,
                                        2225
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "LIST_SPLIT",
                                            "range": [
                                                2221,
                                                2221
                                            ],
                                            "children": [],
                                            "content": "None"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "key",
                                            "range": [
                                                2224,
                                                2224
                                            ],
                                            "children": [],
                                            "content": "\n"
                                        }
                                    ],
                                    "content": "None\n\n\ndef"
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "",
                                    "range": [
                                        2226,
                                        2227
                                    ],
                                    "children": [
                                        {
                                            "type": "ContinueStatement",
                                            "name": "",
                                            "range": [
                                                2227,
                                                2227
                                            ],
                                            "children": [],
                                            "content": "("
                                        }
                                    ],
                                    "content": "merge_execution_input("
                                }
                            ],
                            "content": "return None\n\n\ndef merge_execution_input("
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "name, index",
                            "range": [
                                2229,
                                2239
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "split",
                                    "range": [
                                        2233,
                                        2239
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "key",
                                            "range": [
                                                2233,
                                                2234
                                            ],
                                            "children": [],
                                            "content": ">BlockInput"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "LIST_SPLIT",
                                            "range": [
                                                2237,
                                                2237
                                            ],
                                            "children": [],
                                            "content": "\"\""
                                        }
                                    ],
                                    "content": ">BlockInput:\n\"\"\" \\n     Merge all dynamic input pins which described by the following pattern: \\n     - <input_name>_$_<index> for list input. \\n     - <input_name>_#_<index> for dict input. \\n     - <input_name>_@_<index> for object input. \\n     This function will construct pins with the same name into a single list/dict/object. \\n     \"\"\""
                                }
                            ],
                            "content": ":BlockInput)->BlockInput:\n\"\"\" \\n     Merge all dynamic input pins which described by the following pattern: \\n     - <input_name>_$_<index> for list input. \\n     - <input_name>_#_<index> for dict input. \\n     - <input_name>_@_<index> for object input. \\n     This function will construct pins with the same name into a single list/dict/object. \\n     \"\"\""
                        },
                        {
                            "type": "IfStatement",
                            "name": "",
                            "range": [
                                2240,
                                2254
                            ],
                            "children": [
                                {
                                    "type": "UnaryExpression",
                                    "name": "",
                                    "range": [
                                        2241,
                                        2247
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "isdigit",
                                            "range": [
                                                2243,
                                                2247
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "index",
                                                    "range": [
                                                        2243,
                                                        2244
                                                    ],
                                                    "children": [],
                                                    "content": "Merge all"
                                                }
                                            ],
                                            "content": "Merge all input with<"
                                        }
                                    ],
                                    "content": "\n#Merge all input with<"
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "",
                                    "range": [
                                        2248,
                                        2254
                                    ],
                                    "children": [
                                        {
                                            "type": "ThrowStatement",
                                            "name": "",
                                            "range": [
                                                2249,
                                                2254
                                            ],
                                            "children": [
                                                {
                                                    "type": "NewExpression",
                                                    "name": "ValueError",
                                                    "range": [
                                                        2250,
                                                        2254
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Literal",
                                                            "name": "",
                                                            "range": [
                                                                2252,
                                                                2253
                                                            ],
                                                            "children": [],
                                                            "content": "_<"
                                                        }
                                                    ],
                                                    "content": "_$_<index"
                                                }
                                            ],
                                            "content": ">_$_<index"
                                        }
                                    ],
                                    "content": "input_name>_$_<index"
                                }
                            ],
                            "content": "\n\n#Merge all input with<input_name>_$_<index"
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "data[name]",
                            "range": [
                                2257,
                                2271
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "get",
                                    "range": [
                                        2262,
                                        2271
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "data",
                                            "range": [
                                                2262,
                                                2263
                                            ],
                                            "children": [],
                                            "content": "items="
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "name",
                                            "range": [
                                                2266,
                                                2266
                                            ],
                                            "children": [],
                                            "content": "data"
                                        },
                                        {
                                            "type": "ArrayExpression",
                                            "name": "",
                                            "range": [
                                                2268,
                                                2270
                                            ],
                                            "children": [],
                                            "content": "items()"
                                        }
                                    ],
                                    "content": "items=list(data.items())"
                                }
                            ],
                            "content": "a single list.\nitems=list(data.items())"
                        },
                        {
                            "type": "IfStatement",
                            "name": "",
                            "range": [
                                2272,
                                2340
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "name": "",
                                    "range": [
                                        2273,
                                        2286
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "int",
                                            "range": [
                                                2273,
                                                2277
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "index",
                                                    "range": [
                                                        2275,
                                                        2276
                                                    ],
                                                    "children": [],
                                                    "content": "key,"
                                                }
                                            ],
                                            "content": "\nfor key,value"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "GtE",
                                            "range": [
                                                2277,
                                                2278
                                            ],
                                            "children": [],
                                            "content": "value in"
                                        },
                                        {
                                            "type": "CallExpression",
                                            "name": "len",
                                            "range": [
                                                2279,
                                                2286
                                            ],
                                            "children": [
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "",
                                                    "range": [
                                                        2281,
                                                        2285
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "data",
                                                            "range": [
                                                                2281,
                                                                2282
                                                            ],
                                                            "children": [],
                                                            "content": "\nif"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "name",
                                                            "range": [
                                                                2283,
                                                                2284
                                                            ],
                                                            "children": [],
                                                            "content": "LIST_SPLIT not"
                                                        }
                                                    ],
                                                    "content": "\nif LIST_SPLIT not in"
                                                }
                                            ],
                                            "content": "items:\nif LIST_SPLIT not in key"
                                        }
                                    ],
                                    "content": "\nfor key,value in items:\nif LIST_SPLIT not in key"
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "",
                                    "range": [
                                        2287,
                                        2340
                                    ],
                                    "children": [
                                        {
                                            "type": "Comment",
                                            "name": "",
                                            "range": [
                                                2288,
                                                2297
                                            ],
                                            "children": [],
                                            "content": "\ncontinue\nname,index=key.split"
                                        },
                                        {
                                            "type": "AssignmentExpression",
                                            "name": "data[name]",
                                            "range": [
                                                2299,
                                                2327
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "extend",
                                                    "range": [
                                                        2303,
                                                        2327
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "data",
                                                            "range": [
                                                                2299,
                                                                2300
                                                            ],
                                                            "children": [],
                                                            "content": "LIST_SPLIT)"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "name",
                                                            "range": [
                                                                2301,
                                                                2302
                                                            ],
                                                            "children": [],
                                                            "content": "\nif"
                                                        },
                                                        {
                                                            "type": "BinaryExpression",
                                                            "name": "",
                                                            "range": [
                                                                2306,
                                                                2326
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "ArrayExpression",
                                                                    "name": "",
                                                                    "range": [
                                                                        2306,
                                                                        2308
                                                                    ],
                                                                    "children": [],
                                                                    "content": "isdigit()"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "Mult",
                                                                    "range": [
                                                                        2309,
                                                                        2309
                                                                    ],
                                                                    "children": [],
                                                                    "content": ":"
                                                                },
                                                                {
                                                                    "type": "BinaryExpression",
                                                                    "name": "",
                                                                    "range": [
                                                                        2310,
                                                                        2325
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "CallExpression",
                                                                            "name": "int",
                                                                            "range": [
                                                                                2310,
                                                                                2314
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "index",
                                                                                    "range": [
                                                                                        2312,
                                                                                        2313
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "ValueError("
                                                                                }
                                                                            ],
                                                                            "content": "\nraise ValueError(f"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "Sub",
                                                                            "range": [
                                                                                2315,
                                                                                2315
                                                                            ],
                                                                            "children": [],
                                                                            "content": "\"Invalid key: {key}, #{index} index must be an integer.\""
                                                                        },
                                                                        {
                                                                            "type": "CallExpression",
                                                                            "name": "len",
                                                                            "range": [
                                                                                2316,
                                                                                2323
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "MemberExpression",
                                                                                    "name": "",
                                                                                    "range": [
                                                                                        2318,
                                                                                        2322
                                                                                    ],
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "data",
                                                                                            "range": [
                                                                                                2318,
                                                                                                2319
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "\ndata"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "name",
                                                                                            "range": [
                                                                                                2320,
                                                                                                2321
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "[name"
                                                                                        }
                                                                                    ],
                                                                                    "content": "\ndata[name]"
                                                                                }
                                                                            ],
                                                                            "content": ")\n\ndata[name]="
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "Add",
                                                                            "range": [
                                                                                2323,
                                                                                2323
                                                                            ],
                                                                            "children": [],
                                                                            "content": "="
                                                                        },
                                                                        {
                                                                            "type": "Literal",
                                                                            "name": "1",
                                                                            "range": [
                                                                                2324,
                                                                                2325
                                                                            ],
                                                                            "children": [],
                                                                            "content": "data."
                                                                        }
                                                                    ],
                                                                    "content": "\nraise ValueError(f \"Invalid key: {key}, #{index} index must be an integer.\")\n\ndata[name]=data."
                                                                }
                                                            ],
                                                            "content": "isdigit():\nraise ValueError(f \"Invalid key: {key}, #{index} index must be an integer.\")\n\ndata[name]=data.get"
                                                        }
                                                    ],
                                                    "content": "not index.isdigit():\nraise ValueError(f \"Invalid key: {key}, #{index} index must be an integer.\")\n\ndata[name]=data.get("
                                                }
                                            ],
                                            "content": "LIST_SPLIT)\nif not index.isdigit():\nraise ValueError(f \"Invalid key: {key}, #{index} index must be an integer.\")\n\ndata[name]=data.get("
                                        },
                                        {
                                            "type": "AssignmentExpression",
                                            "name": "data[name][int(index)]",
                                            "range": [
                                                2328,
                                                2340
                                            ],
                                            "children": [
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "",
                                                    "range": [
                                                        2328,
                                                        2338
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "data",
                                                            "range": [
                                                                2328,
                                                                2329
                                                            ],
                                                            "children": [],
                                                            "content": "name,"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "name",
                                                            "range": [
                                                                2330,
                                                                2331
                                                            ],
                                                            "children": [],
                                                            "content": "[]"
                                                        },
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "int",
                                                            "range": [
                                                                2333,
                                                                2337
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "index",
                                                                    "range": [
                                                                        2335,
                                                                        2336
                                                                    ],
                                                                    "children": [],
                                                                    "content": "int("
                                                                }
                                                            ],
                                                            "content": "\nif int(index"
                                                        }
                                                    ],
                                                    "content": "name,[])\nif int(index)"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "value",
                                                    "range": [
                                                        2339,
                                                        2340
                                                    ],
                                                    "children": [],
                                                    "content": ">="
                                                }
                                            ],
                                            "content": "name,[])\nif int(index)>="
                                        }
                                    ],
                                    "content": ":\ncontinue\nname,index=key.split(LIST_SPLIT)\nif not index.isdigit():\nraise ValueError(f \"Invalid key: {key}, #{index} index must be an integer.\")\n\ndata[name]=data.get(name,[])\nif int(index)>="
                                }
                            ],
                            "content": "\n\nfor key,value in items:\nif LIST_SPLIT not in key:\ncontinue\nname,index=key.split(LIST_SPLIT)\nif not index.isdigit():\nraise ValueError(f \"Invalid key: {key}, #{index} index must be an integer.\")\n\ndata[name]=data.get(name,[])\nif int(index)>="
                        }
                    ],
                    "content": ",index)\nreturn None\n\nreturn None\n\n\ndef merge_execution_input(data:BlockInput)->BlockInput:\n\"\"\" \\n     Merge all dynamic input pins which described by the following pattern: \\n     - <input_name>_$_<index> for list input. \\n     - <input_name>_#_<index> for dict input. \\n     - <input_name>_@_<index> for object input. \\n     This function will construct pins with the same name into a single list/dict/object. \\n     \"\"\"\n\n#Merge all input with<input_name>_$_<index>into a single list.\nitems=list(data.items())\n\nfor key,value in items:\nif LIST_SPLIT not in key:\ncontinue\nname,index=key.split(LIST_SPLIT)\nif not index.isdigit():\nraise ValueError(f \"Invalid key: {key}, #{index} index must be an integer.\")\n\ndata[name]=data.get(name,[])\nif int(index)>="
                },
                {
                    "type": "Comment",
                    "name": "",
                    "range": [
                        2342,
                        2360
                    ],
                    "children": [],
                    "content": "(data[name]):\n#Pad list with empty string on missing indices.\n"
                },
                {
                    "type": "ForStatement",
                    "name": "",
                    "range": [
                        2362,
                        2414
                    ],
                    "children": [
                        {
                            "type": "VariableDeclaration",
                            "name": "",
                            "range": [
                                2363,
                                2365
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "key",
                                    "range": [
                                        2363,
                                        2364
                                    ],
                                    "children": [],
                                    "content": "name]"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "value",
                                    "range": [
                                        2365,
                                        2365
                                    ],
                                    "children": [],
                                    "content": "."
                                }
                            ],
                            "content": "name]."
                        },
                        {
                            "type": "Identifier",
                            "name": "items",
                            "range": [
                                2367,
                                2367
                            ],
                            "children": [],
                            "content": "("
                        },
                        {
                            "type": "IfStatement",
                            "name": "",
                            "range": [
                                2370,
                                2377
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "name": "",
                                    "range": [
                                        2371,
                                        2375
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "DICT_SPLIT",
                                            "range": [
                                                2371,
                                                2371
                                            ],
                                            "children": [],
                                            "content": "*"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "key",
                                            "range": [
                                                2374,
                                                2374
                                            ],
                                            "children": [],
                                            "content": "("
                                        }
                                    ],
                                    "content": "*(int(index"
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "",
                                    "range": [
                                        2376,
                                        2377
                                    ],
                                    "children": [
                                        {
                                            "type": "ContinueStatement",
                                            "name": "",
                                            "range": [
                                                2377,
                                                2377
                                            ],
                                            "children": [],
                                            "content": "-"
                                        }
                                    ],
                                    "content": ")-"
                                }
                            ],
                            "content": "]*(int(index)-"
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "name, index",
                            "range": [
                                2379,
                                2389
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "split",
                                    "range": [
                                        2383,
                                        2389
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "key",
                                            "range": [
                                                2383,
                                                2384
                                            ],
                                            "children": [],
                                            "content": "])"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "DICT_SPLIT",
                                            "range": [
                                                2387,
                                                2387
                                            ],
                                            "children": [],
                                            "content": ")"
                                        }
                                    ],
                                    "content": "])+1))\n"
                                }
                            ],
                            "content": "(data[name])+1))\n"
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "data[name]",
                            "range": [
                                2390,
                                2404
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "get",
                                    "range": [
                                        2395,
                                        2404
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "data",
                                            "range": [
                                                2395,
                                                2396
                                            ],
                                            "children": [],
                                            "content": "int("
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "name",
                                            "range": [
                                                2399,
                                                2399
                                            ],
                                            "children": [],
                                            "content": "]"
                                        },
                                        {
                                            "type": "ObjectExpression",
                                            "name": "",
                                            "range": [
                                                2401,
                                                2403
                                            ],
                                            "children": [],
                                            "content": "value\n\n"
                                        }
                                    ],
                                    "content": "int(index)]=value\n\n#"
                                }
                            ],
                            "content": "data[name][int(index)]=value\n\n#"
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "data[name][index]",
                            "range": [
                                2405,
                                2414
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": "",
                                    "range": [
                                        2405,
                                        2412
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "data",
                                            "range": [
                                                2405,
                                                2406
                                            ],
                                            "children": [],
                                            "content": "Merge all"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "name",
                                            "range": [
                                                2407,
                                                2408
                                            ],
                                            "children": [],
                                            "content": "input with"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "index",
                                            "range": [
                                                2410,
                                                2411
                                            ],
                                            "children": [],
                                            "content": "input_name>"
                                        }
                                    ],
                                    "content": "Merge all input with<input_name>_"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "value",
                                    "range": [
                                        2413,
                                        2414
                                    ],
                                    "children": [],
                                    "content": "#_"
                                }
                            ],
                            "content": "Merge all input with<input_name>_#_"
                        }
                    ],
                    "content": "[name].extend([\"\"]*(int(index)-len(data[name])+1))\ndata[name][int(index)]=value\n\n#Merge all input with<input_name>_#_"
                },
                {
                    "type": "Comment",
                    "name": "",
                    "range": [
                        2416,
                        2434
                    ],
                    "children": [],
                    "content": "index>into a single dict.\nfor key,value in items:\nif DICT_SPLIT not"
                },
                {
                    "type": "ForStatement",
                    "name": "",
                    "range": [
                        2436,
                        2504
                    ],
                    "children": [
                        {
                            "type": "VariableDeclaration",
                            "name": "",
                            "range": [
                                2437,
                                2439
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "key",
                                    "range": [
                                        2437,
                                        2438
                                    ],
                                    "children": [],
                                    "content": ":\n"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "value",
                                    "range": [
                                        2439,
                                        2439
                                    ],
                                    "children": [],
                                    "content": "continue"
                                }
                            ],
                            "content": ":\ncontinue"
                        },
                        {
                            "type": "Identifier",
                            "name": "items",
                            "range": [
                                2441,
                                2441
                            ],
                            "children": [],
                            "content": "name"
                        },
                        {
                            "type": "IfStatement",
                            "name": "",
                            "range": [
                                2444,
                                2451
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "name": "",
                                    "range": [
                                        2445,
                                        2449
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "OBJC_SPLIT",
                                            "range": [
                                                2445,
                                                2445
                                            ],
                                            "children": [],
                                            "content": "key"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "key",
                                            "range": [
                                                2448,
                                                2448
                                            ],
                                            "children": [],
                                            "content": "("
                                        }
                                    ],
                                    "content": "key.split(DICT_SPLIT"
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "",
                                    "range": [
                                        2450,
                                        2451
                                    ],
                                    "children": [
                                        {
                                            "type": "ContinueStatement",
                                            "name": "",
                                            "range": [
                                                2451,
                                                2451
                                            ],
                                            "children": [],
                                            "content": "\n"
                                        }
                                    ],
                                    "content": ")\n"
                                }
                            ],
                            "content": "=key.split(DICT_SPLIT)\n"
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "name, index",
                            "range": [
                                2453,
                                2463
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "split",
                                    "range": [
                                        2457,
                                        2463
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "key",
                                            "range": [
                                                2457,
                                                2458
                                            ],
                                            "children": [],
                                            "content": "data."
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "OBJC_SPLIT",
                                            "range": [
                                                2461,
                                                2461
                                            ],
                                            "children": [],
                                            "content": "name"
                                        }
                                    ],
                                    "content": "data.get(name,{"
                                }
                            ],
                            "content": "[name]=data.get(name,{"
                        },
                        {
                            "type": "IfStatement",
                            "name": "",
                            "range": [
                                2464,
                                2482
                            ],
                            "children": [
                                {
                                    "type": "LogicalExpression",
                                    "name": "",
                                    "range": [
                                        2465,
                                        2480
                                    ],
                                    "children": [
                                        {
                                            "type": "BinaryExpression",
                                            "name": "",
                                            "range": [
                                                2466,
                                                2468
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "name",
                                                    "range": [
                                                        2465,
                                                        2466
                                                    ],
                                                    "children": [],
                                                    "content": ")\n"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "data",
                                                    "range": [
                                                        2468,
                                                        2468
                                                    ],
                                                    "children": [],
                                                    "content": "["
                                                }
                                            ],
                                            "content": "\ndata["
                                        },
                                        {
                                            "type": "UnaryExpression",
                                            "name": "",
                                            "range": [
                                                2470,
                                                2470
                                            ],
                                            "children": [],
                                            "content": "]"
                                        },
                                        {
                                            "type": "CallExpression",
                                            "name": "isinstance",
                                            "range": [
                                                2471,
                                                2480
                                            ],
                                            "children": [
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "",
                                                    "range": [
                                                        2473,
                                                        2477
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "data",
                                                            "range": [
                                                                2473,
                                                                2474
                                                            ],
                                                            "children": [],
                                                            "content": "]="
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "name",
                                                            "range": [
                                                                2475,
                                                                2476
                                                            ],
                                                            "children": [],
                                                            "content": "value\n"
                                                        }
                                                    ],
                                                    "content": "]=value\n\n"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "object",
                                                    "range": [
                                                        2478,
                                                        2479
                                                    ],
                                                    "children": [],
                                                    "content": "#Merge"
                                                }
                                            ],
                                            "content": "[index]=value\n\n#Merge all"
                                        }
                                    ],
                                    "content": ")\ndata[name][index]=value\n\n#Merge all"
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "",
                                    "range": [
                                        2481,
                                        2482
                                    ],
                                    "children": [
                                        {
                                            "type": "AssignmentExpression",
                                            "name": "data[name]",
                                            "range": [
                                                2482,
                                                2492
                                            ],
                                            "children": [
                                                {
                                                    "type": "NewExpression",
                                                    "name": "MockObject",
                                                    "range": [
                                                        2487,
                                                        2492
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "mock",
                                                            "range": [
                                                                2487,
                                                                2488
                                                            ],
                                                            "children": [],
                                                            "content": "@_"
                                                        }
                                                    ],
                                                    "content": "@_<index>into"
                                                }
                                            ],
                                            "content": "with<input_name>_@_<index>into"
                                        }
                                    ],
                                    "content": "input with"
                                }
                            ],
                            "content": "})\ndata[name][index]=value\n\n#Merge all input with"
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "setattr(data[name], index, value)",
                            "range": [
                                2493,
                                2504
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "setattr",
                                    "range": [
                                        2493,
                                        2504
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "",
                                            "range": [
                                                2495,
                                                2499
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "data",
                                                    "range": [
                                                        2495,
                                                        2496
                                                    ],
                                                    "children": [],
                                                    "content": "object."
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "name",
                                                    "range": [
                                                        2497,
                                                        2498
                                                    ],
                                                    "children": [],
                                                    "content": "\nfor"
                                                }
                                            ],
                                            "content": "object.\nfor key"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "index",
                                            "range": [
                                                2500,
                                                2501
                                            ],
                                            "children": [],
                                            "content": ",value"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "value",
                                            "range": [
                                                2502,
                                                2503
                                            ],
                                            "children": [],
                                            "content": "in items"
                                        }
                                    ],
                                    "content": "a single object.\nfor key,value in items:"
                                }
                            ],
                            "content": "a single object.\nfor key,value in items:"
                        }
                    ],
                    "content": "key:\ncontinue\nname,index=key.split(DICT_SPLIT)\ndata[name]=data.get(name,{})\ndata[name][index]=value\n\n#Merge all input with<input_name>_@_<index>into a single object.\nfor key,value in items:"
                },
                {
                    "type": "ReturnStatement",
                    "name": "",
                    "range": [
                        2506,
                        2507
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "data",
                            "range": [
                                2507,
                                2507
                            ],
                            "children": [],
                            "content": "OBJC_SPLIT"
                        }
                    ],
                    "content": "if OBJC_SPLIT"
                }
            ],
            "content": "return output_data[index]\n\nif name.startswith(f \"{output_name}{OBJC_SPLIT}\"):\nindex=name.split(OBJC_SPLIT)[1]\nif isinstance(output_data,object)and hasattr(output_data,index):\nreturn getattr(output_data,index)\nreturn None\n\nreturn None\n\n\ndef merge_execution_input(data:BlockInput)->BlockInput:\n\"\"\" \\n     Merge all dynamic input pins which described by the following pattern: \\n     - <input_name>_$_<index> for list input. \\n     - <input_name>_#_<index> for dict input. \\n     - <input_name>_@_<index> for object input. \\n     This function will construct pins with the same name into a single list/dict/object. \\n     \"\"\"\n\n#Merge all input with<input_name>_$_<index>into a single list.\nitems=list(data.items())\n\nfor key,value in items:\nif LIST_SPLIT not in key:\ncontinue\nname,index=key.split(LIST_SPLIT)\nif not index.isdigit():\nraise ValueError(f \"Invalid key: {key}, #{index} index must be an integer.\")\n\ndata[name]=data.get(name,[])\nif int(index)>=len(data[name]):\n#Pad list with empty string on missing indices.\ndata[name].extend([\"\"]*(int(index)-len(data[name])+1))\ndata[name][int(index)]=value\n\n#Merge all input with<input_name>_#_<index>into a single dict.\nfor key,value in items:\nif DICT_SPLIT not in key:\ncontinue\nname,index=key.split(DICT_SPLIT)\ndata[name]=data.get(name,{})\ndata[name][index]=value\n\n#Merge all input with<input_name>_@_<index>into a single object.\nfor key,value in items:\nif OBJC_SPLIT not in"
        },
        {
            "type": "FunctionDecl",
            "name": "get_latest_execution",
            "range": [
                2510,
                2613
            ],
            "children": [
                {
                    "type": "AsyncKeyword",
                    "name": "async",
                    "range": [
                        2510,
                        2514
                    ],
                    "children": [],
                    "content": "key:\ncontinue\n"
                },
                {
                    "type": "DefKeyword",
                    "name": "def",
                    "range": [
                        2511,
                        2514
                    ],
                    "children": [],
                    "content": ":\ncontinue\n"
                },
                {
                    "type": "FunctionName",
                    "name": "get_latest_execution",
                    "range": [
                        2512,
                        2532
                    ],
                    "children": [],
                    "content": "\ncontinue\nname,index=key.split(OBJC_SPLIT)\nif name not in data or not"
                },
                {
                    "type": "ParameterList",
                    "name": "parameters",
                    "range": [
                        2513,
                        2521
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "node_id",
                            "range": [
                                2514,
                                2517
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "str",
                                    "range": [
                                        2516,
                                        2519
                                    ],
                                    "children": [],
                                    "content": ",index=key"
                                }
                            ],
                            "content": "\nname,index"
                        },
                        {
                            "type": "Parameter",
                            "name": "graph_eid",
                            "range": [
                                2518,
                                2521
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "str",
                                    "range": [
                                        2520,
                                        2523
                                    ],
                                    "children": [],
                                    "content": ".split(OBJC_SPLIT"
                                }
                            ],
                            "content": "=key.split"
                        }
                    ],
                    "content": "continue\nname,index=key.split"
                },
                {
                    "type": "ReturnType",
                    "name": "ExecutionResult | None",
                    "range": [
                        2522,
                        2527
                    ],
                    "children": [],
                    "content": "(OBJC_SPLIT)\nif name"
                },
                {
                    "type": "FunctionBody",
                    "name": "body",
                    "range": [
                        2528,
                        2613
                    ],
                    "children": [
                        {
                            "type": "VariableDeclaration",
                            "name": "execution",
                            "range": [
                                2529,
                                2536
                            ],
                            "children": [
                                {
                                    "type": "AwaitExpression",
                                    "name": "await",
                                    "range": [
                                        2531,
                                        2536
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "AgentNodeExecution.prisma",
                                            "range": [
                                                2532,
                                                2536
                                            ],
                                            "children": [],
                                            "content": "not isinstance(data["
                                        }
                                    ],
                                    "content": "or not isinstance(data["
                                }
                            ],
                            "content": "in data or not isinstance(data["
                        },
                        {
                            "type": "CallExpression",
                            "name": "find_first",
                            "range": [
                                2538,
                                2596
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "where",
                                    "range": [
                                        2541,
                                        2579
                                    ],
                                    "children": [
                                        {
                                            "type": "ObjectExpression",
                                            "name": "where",
                                            "range": [
                                                2543,
                                                2579
                                            ],
                                            "children": [
                                                {
                                                    "type": "Property",
                                                    "name": "agentNodeId",
                                                    "range": [
                                                        2545,
                                                        2548
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "node_id",
                                                            "range": [
                                                                2547,
                                                                2550
                                                            ],
                                                            "children": [],
                                                            "content": "]=mock."
                                                        }
                                                    ],
                                                    "content": "[name]="
                                                },
                                                {
                                                    "type": "Property",
                                                    "name": "agentGraphExecutionId",
                                                    "range": [
                                                        2550,
                                                        2553
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "graph_eid",
                                                            "range": [
                                                                2552,
                                                                2555
                                                            ],
                                                            "children": [],
                                                            "content": "()\nsetattr"
                                                        }
                                                    ],
                                                    "content": ".MockObject()"
                                                },
                                                {
                                                    "type": "Property",
                                                    "name": "executionStatus",
                                                    "range": [
                                                        2555,
                                                        2564
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "ObjectExpression",
                                                            "name": "executionStatus",
                                                            "range": [
                                                                2557,
                                                                2563
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Property",
                                                                    "name": "not",
                                                                    "range": [
                                                                        2558,
                                                                        2561
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "MemberExpression",
                                                                            "name": "ExecutionStatus.INCOMPLETE",
                                                                            "range": [
                                                                                2560,
                                                                                2563
                                                                            ],
                                                                            "children": [],
                                                                            "content": "],index,"
                                                                        }
                                                                    ],
                                                                    "content": "[name],"
                                                                }
                                                            ],
                                                            "content": "data[name],index,"
                                                        }
                                                    ],
                                                    "content": "setattr(data[name],index,value"
                                                },
                                                {
                                                    "type": "Property",
                                                    "name": "executionData",
                                                    "range": [
                                                        2566,
                                                        2573
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "ObjectExpression",
                                                            "name": "executionData",
                                                            "range": [
                                                                2568,
                                                                2572
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Property",
                                                                    "name": "not",
                                                                    "range": [
                                                                        2569,
                                                                        2572
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "None",
                                                                            "range": [
                                                                                2571,
                                                                                2574
                                                                            ],
                                                                            "children": [],
                                                                            "content": "\n\nasync def"
                                                                        }
                                                                    ],
                                                                    "content": "data\n\n\n"
                                                                }
                                                            ],
                                                            "content": "return data\n\n\n"
                                                        }
                                                    ],
                                                    "content": "\n\nreturn data\n\n\nasync"
                                                }
                                            ],
                                            "content": "\ndata[name]=mock.MockObject()\nsetattr(data[name],index,value)\n\nreturn data\n\n\nasync def get_latest_execution(node_id:str"
                                        }
                                    ],
                                    "content": "):\ndata[name]=mock.MockObject()\nsetattr(data[name],index,value)\n\nreturn data\n\n\nasync def get_latest_execution(node_id:str"
                                },
                                {
                                    "type": "Argument",
                                    "name": "order",
                                    "range": [
                                        2582,
                                        2589
                                    ],
                                    "children": [
                                        {
                                            "type": "ObjectExpression",
                                            "name": "order",
                                            "range": [
                                                2584,
                                                2588
                                            ],
                                            "children": [
                                                {
                                                    "type": "Property",
                                                    "name": "queuedTime",
                                                    "range": [
                                                        2585,
                                                        2588
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "StringLiteral",
                                                            "name": "desc",
                                                            "range": [
                                                                2587,
                                                                2590
                                                            ],
                                                            "children": [],
                                                            "content": "ExecutionResult|None:"
                                                        }
                                                    ],
                                                    "content": "->ExecutionResult|"
                                                }
                                            ],
                                            "content": ")->ExecutionResult|"
                                        }
                                    ],
                                    "content": ":str)->ExecutionResult|None"
                                },
                                {
                                    "type": "Argument",
                                    "name": "include",
                                    "range": [
                                        2591,
                                        2595
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "EXECUTION_RESULT_INCLUDE",
                                            "range": [
                                                2593,
                                                2596
                                            ],
                                            "children": [],
                                            "content": "=await AgentNodeExecution."
                                        }
                                    ],
                                    "content": "\nexecution=await AgentNodeExecution"
                                }
                            ],
                            "content": "],object):\ndata[name]=mock.MockObject()\nsetattr(data[name],index,value)\n\nreturn data\n\n\nasync def get_latest_execution(node_id:str,graph_eid:str)->ExecutionResult|None:\nexecution=await AgentNodeExecution."
                        },
                        {
                            "type": "IfStatement",
                            "name": "if",
                            "range": [
                                2598,
                                2605
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "not execution",
                                    "range": [
                                        2599,
                                        2601
                                    ],
                                    "children": [
                                        {
                                            "type": "UnaryExpression",
                                            "name": "not",
                                            "range": [
                                                2599,
                                                2602
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "execution",
                                                    "range": [
                                                        2600,
                                                        2603
                                                    ],
                                                    "children": [],
                                                    "content": ".find_first(\n"
                                                }
                                            ],
                                            "content": ").find_first("
                                        }
                                    ],
                                    "content": ").find_first"
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "block",
                                    "range": [
                                        2602,
                                        2605
                                    ],
                                    "children": [
                                        {
                                            "type": "ReturnStatement",
                                            "name": "return None",
                                            "range": [
                                                2603,
                                                2605
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "None",
                                                    "range": [
                                                        2604,
                                                        2607
                                                    ],
                                                    "children": [],
                                                    "content": "where={\n"
                                                }
                                            ],
                                            "content": "\nwhere="
                                        }
                                    ],
                                    "content": "(\nwhere="
                                }
                            ],
                            "content": "().find_first(\nwhere="
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "return ExecutionResult.from_db(execution)",
                            "range": [
                                2606,
                                2613
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "ExecutionResult.from_db",
                                    "range": [
                                        2607,
                                        2612
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "ExecutionResult.from_db",
                                            "range": [
                                                2607,
                                                2612
                                            ],
                                            "children": [],
                                            "content": "\n\"agentNodeId\":node_id,\n"
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "execution",
                                            "range": [
                                                2611,
                                                2613
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "execution",
                                                    "range": [
                                                        2611,
                                                        2614
                                                    ],
                                                    "children": [],
                                                    "content": ",\n\"agentGraphExecutionId\":"
                                                }
                                            ],
                                            "content": ",\n\"agentGraphExecutionId\""
                                        }
                                    ],
                                    "content": "\n\"agentNodeId\":node_id,\n"
                                }
                            ],
                            "content": "{\n\"agentNodeId\":node_id,\n\"agentGraphExecutionId\""
                        }
                    ],
                    "content": "not in data or not isinstance(data[name],object):\ndata[name]=mock.MockObject()\nsetattr(data[name],index,value)\n\nreturn data\n\n\nasync def get_latest_execution(node_id:str,graph_eid:str)->ExecutionResult|None:\nexecution=await AgentNodeExecution.prisma().find_first(\nwhere={\n\"agentNodeId\":node_id,\n\"agentGraphExecutionId\""
                }
            ],
            "content": "key:\ncontinue\nname,index=key.split(OBJC_SPLIT)\nif name not in data or not isinstance(data[name],object):\ndata[name]=mock.MockObject()\nsetattr(data[name],index,value)\n\nreturn data\n\n\nasync def get_latest_execution(node_id:str,graph_eid:str)->ExecutionResult|None:\nexecution=await AgentNodeExecution.prisma().find_first(\nwhere={\n\"agentNodeId\":node_id,\n\"agentGraphExecutionId\""
        },
        {
            "type": "FunctionDecl",
            "name": "get_incomplete_executions",
            "range": [
                2615,
                2693
            ],
            "children": [
                {
                    "type": "Keyword",
                    "name": "async",
                    "range": [
                        2615,
                        2619
                    ],
                    "children": [],
                    "content": "graph_eid,\n\"executionStatus\":"
                },
                {
                    "type": "Keyword",
                    "name": "def",
                    "range": [
                        2616,
                        2619
                    ],
                    "children": [],
                    "content": ",\n\"executionStatus\":"
                },
                {
                    "type": "Identifier",
                    "name": "get_incomplete_executions",
                    "range": [
                        2617,
                        2641
                    ],
                    "children": [],
                    "content": "\n\"executionStatus\":{\"not\":ExecutionStatus.INCOMPLETE},\n\"executionData\":{\"not\":None},#type:ignore\n"
                },
                {
                    "type": "ParameterList",
                    "name": "",
                    "range": [
                        2618,
                        2628
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "node_id",
                            "range": [
                                2620,
                                2623
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "str",
                                    "range": [
                                        2621,
                                        2623
                                    ],
                                    "children": [],
                                    "content": "\"not\":ExecutionStatus"
                                }
                            ],
                            "content": "{\"not\":ExecutionStatus"
                        },
                        {
                            "type": "Parameter",
                            "name": "graph_eid",
                            "range": [
                                2624,
                                2627
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "str",
                                    "range": [
                                        2625,
                                        2627
                                    ],
                                    "children": [],
                                    "content": "INCOMPLETE},"
                                }
                            ],
                            "content": ".INCOMPLETE},"
                        }
                    ],
                    "content": "\"executionStatus\":{\"not\":ExecutionStatus.INCOMPLETE},\n"
                },
                {
                    "type": "ReturnType",
                    "name": "",
                    "range": [
                        2629,
                        2635
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "list[ExecutionResult]",
                            "range": [
                                2631,
                                2635
                            ],
                            "children": [],
                            "content": "{\"not\":None}"
                        }
                    ],
                    "content": "\"executionData\":{\"not\":None}"
                },
                {
                    "type": "Block",
                    "name": "",
                    "range": [
                        2636,
                        2693
                    ],
                    "children": [
                        {
                            "type": "VariableDeclaration",
                            "name": "executions",
                            "range": [
                                2637,
                                2678
                            ],
                            "children": [
                                {
                                    "type": "Keyword",
                                    "name": "await",
                                    "range": [
                                        2639,
                                        2644
                                    ],
                                    "children": [],
                                    "content": ":ignore\n},\n"
                                },
                                {
                                    "type": "CallExpression",
                                    "name": "AgentNodeExecution.prisma().find_many",
                                    "range": [
                                        2640,
                                        2678
                                    ],
                                    "children": [
                                        {
                                            "type": "ObjectExpression",
                                            "name": "where",
                                            "range": [
                                                2649,
                                                2670
                                            ],
                                            "children": [
                                                {
                                                    "type": "Property",
                                                    "name": "agentNodeId",
                                                    "range": [
                                                        2653,
                                                        2656
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "node_id",
                                                            "range": [
                                                                2655,
                                                                2656
                                                            ],
                                                            "children": [],
                                                            "content": "=EXECUTION_RESULT_INCLUDE"
                                                        }
                                                    ],
                                                    "content": "\ninclude=EXECUTION_RESULT_INCLUDE"
                                                },
                                                {
                                                    "type": "Property",
                                                    "name": "agentGraphExecutionId",
                                                    "range": [
                                                        2658,
                                                        2661
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "graph_eid",
                                                            "range": [
                                                                2660,
                                                                2661
                                                            ],
                                                            "children": [],
                                                            "content": "\nif"
                                                        }
                                                    ],
                                                    "content": "\n)\nif"
                                                },
                                                {
                                                    "type": "Property",
                                                    "name": "executionStatus",
                                                    "range": [
                                                        2663,
                                                        2668
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "name": "ExecutionStatus.INCOMPLETE",
                                                            "range": [
                                                                2665,
                                                                2668
                                                            ],
                                                            "children": [],
                                                            "content": "\nreturn None\n"
                                                        }
                                                    ],
                                                    "content": "execution:\nreturn None\n"
                                                }
                                            ],
                                            "content": ":\"desc\"},\ninclude=EXECUTION_RESULT_INCLUDE,\n)\nif not execution:\nreturn None\nreturn ExecutionResult"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "EXECUTION_RESULT_INCLUDE",
                                            "range": [
                                                2675,
                                                2676
                                            ],
                                            "children": [],
                                            "content": ")\n"
                                        }
                                    ],
                                    "content": "ignore\n},\norder={\"queuedTime\":\"desc\"},\ninclude=EXECUTION_RESULT_INCLUDE,\n)\nif not execution:\nreturn None\nreturn ExecutionResult.from_db(execution)\n\n\n"
                                }
                            ],
                            "content": "#type:ignore\n},\norder={\"queuedTime\":\"desc\"},\ninclude=EXECUTION_RESULT_INCLUDE,\n)\nif not execution:\nreturn None\nreturn ExecutionResult.from_db(execution)\n\n\n"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "",
                            "range": [
                                2680,
                                2693
                            ],
                            "children": [
                                {
                                    "type": "ArrayExpression",
                                    "name": "",
                                    "range": [
                                        2681,
                                        2692
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "ExecutionResult.from_db",
                                            "range": [
                                                2682,
                                                2687
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "execution",
                                                    "range": [
                                                        2686,
                                                        2687
                                                    ],
                                                    "children": [],
                                                    "content": "str,"
                                                }
                                            ],
                                            "content": "(\nnode_id:str,"
                                        }
                                    ],
                                    "content": "get_incomplete_executions(\nnode_id:str,graph_eid:str\n)"
                                }
                            ],
                            "content": "def get_incomplete_executions(\nnode_id:str,graph_eid:str\n)-"
                        }
                    ],
                    "content": ",#type:ignore\n},\norder={\"queuedTime\":\"desc\"},\ninclude=EXECUTION_RESULT_INCLUDE,\n)\nif not execution:\nreturn None\nreturn ExecutionResult.from_db(execution)\n\n\nasync def get_incomplete_executions(\nnode_id:str,graph_eid:str\n)-"
                }
            ],
            "content": "graph_eid,\n\"executionStatus\":{\"not\":ExecutionStatus.INCOMPLETE},\n\"executionData\":{\"not\":None},#type:ignore\n},\norder={\"queuedTime\":\"desc\"},\ninclude=EXECUTION_RESULT_INCLUDE,\n)\nif not execution:\nreturn None\nreturn ExecutionResult.from_db(execution)\n\n\nasync def get_incomplete_executions(\nnode_id:str,graph_eid:str\n)-"
        },
        {
            "type": "VariableDeclaration",
            "name": "config",
            "range": [
                2744,
                2748
            ],
            "children": [
                {
                    "type": "CallExpression",
                    "name": "Config",
                    "range": [
                        2746,
                        2748
                    ],
                    "children": [],
                    "content": "ExecutionResult.from_db"
                }
            ],
            "content": "return[ExecutionResult.from_db"
        },
        {
            "type": "ClassDecl",
            "name": "RedisExecutionEventBus",
            "range": [
                2752,
                2765
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "RedisEventBus[ExecutionResult]",
                    "range": [
                        2754,
                        2759
                    ],
                    "children": [],
                    "content": "in executions]\n\n\n"
                },
                {
                    "type": "ClassBody",
                    "name": "",
                    "range": [
                        2760,
                        2765
                    ],
                    "children": [
                        {
                            "type": "FieldDecl",
                            "name": "Model",
                            "range": [
                                2762,
                                2764
                            ],
                            "children": [],
                            "content": "---"
                        }
                    ],
                    "content": "#-----"
                }
            ],
            "content": "for execution in executions]\n\n\n#-----"
        },
        {
            "type": "FunctionDecl",
            "name": "event_bus_name",
            "range": [
                2767,
                2784
            ],
            "children": [
                {
                    "type": "Decorator",
                    "name": "@property",
                    "range": [
                        2767,
                        2768
                    ],
                    "children": [],
                    "content": "--"
                },
                {
                    "type": "FunctionSignature",
                    "name": "",
                    "range": [
                        2770,
                        2778
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "self",
                            "range": [
                                2773,
                                2774
                            ],
                            "children": [],
                            "content": "--"
                        },
                        {
                            "type": "ReturnType",
                            "name": "str",
                            "range": [
                                2775,
                                2777
                            ],
                            "children": [],
                            "content": "---"
                        }
                    ],
                    "content": "---------"
                },
                {
                    "type": "FunctionBody",
                    "name": "",
                    "range": [
                        2779,
                        2784
                    ],
                    "children": [
                        {
                            "type": "ReturnStatement",
                            "name": "",
                            "range": [
                                2780,
                                2784
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": "config.execution_event_bus_name",
                                    "range": [
                                        2781,
                                        2783
                                    ],
                                    "children": [],
                                    "content": "-Event Bus"
                                }
                            ],
                            "content": "--Event Bus-"
                        }
                    ],
                    "content": "---Event Bus-"
                }
            ],
            "content": "---------------Event Bus-"
        },
        {
            "type": "FunctionDecl",
            "name": "publish",
            "range": [
                2786,
                2806
            ],
            "children": [
                {
                    "type": "FunctionSignature",
                    "name": "",
                    "range": [
                        2788,
                        2795
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "self",
                            "range": [
                                2789,
                                2790
                            ],
                            "children": [],
                            "content": "--"
                        },
                        {
                            "type": "Parameter",
                            "name": "res",
                            "range": [
                                2791,
                                2794
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "ExecutionResult",
                                    "range": [
                                        2792,
                                        2794
                                    ],
                                    "children": [],
                                    "content": "---"
                                }
                            ],
                            "content": "----"
                        }
                    ],
                    "content": "--------"
                },
                {
                    "type": "FunctionBody",
                    "name": "",
                    "range": [
                        2796,
                        2806
                    ],
                    "children": [
                        {
                            "type": "ExpressionStatement",
                            "name": "",
                            "range": [
                                2797,
                                2806
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "self.publish_event",
                                    "range": [
                                        2797,
                                        2805
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "res",
                                            "range": [
                                                2801,
                                                2802
                                            ],
                                            "children": [],
                                            "content": "--"
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "f\"{res.graph_id}/{res.graph_exec_id}\"",
                                            "range": [
                                                2803,
                                                2805
                                            ],
                                            "children": [],
                                            "content": "--#"
                                        }
                                    ],
                                    "content": "--------#"
                                }
                            ],
                            "content": "--------#\n"
                        }
                    ],
                    "content": "---------#\n"
                }
            ],
            "content": "-------------------#\n"
        },
        {
            "type": "FunctionDecl",
            "name": "listen",
            "range": [
                2808,
                2853
            ],
            "children": [
                {
                    "type": "FunctionSignature",
                    "name": "",
                    "range": [
                        2810,
                        2837
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "self",
                            "range": [
                                2812,
                                2813
                            ],
                            "children": [],
                            "content": ")\n"
                        },
                        {
                            "type": "Parameter",
                            "name": "graph_id",
                            "range": [
                                2814,
                                2818
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "str",
                                    "range": [
                                        2815,
                                        2817
                                    ],
                                    "children": [],
                                    "content": "\nclass RedisExecutionEventBus"
                                },
                                {
                                    "type": "DefaultValue",
                                    "name": "\"*\"",
                                    "range": [
                                        2817,
                                        2818
                                    ],
                                    "children": [],
                                    "content": "RedisExecutionEventBus("
                                }
                            ],
                            "content": "\n\nclass RedisExecutionEventBus("
                        },
                        {
                            "type": "Parameter",
                            "name": "graph_exec_id",
                            "range": [
                                2820,
                                2824
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "str",
                                    "range": [
                                        2821,
                                        2823
                                    ],
                                    "children": [],
                                    "content": "ExecutionResult])"
                                },
                                {
                                    "type": "DefaultValue",
                                    "name": "\"*\"",
                                    "range": [
                                        2823,
                                        2824
                                    ],
                                    "children": [],
                                    "content": "):"
                                }
                            ],
                            "content": "[ExecutionResult]):"
                        },
                        {
                            "type": "ReturnType",
                            "name": "Generator[ExecutionResult, None, None]",
                            "range": [
                                2827,
                                2836
                            ],
                            "children": [],
                            "content": "=ExecutionResult\n\n@property\ndef event_bus_name("
                        }
                    ],
                    "content": "Config()\n\n\nclass RedisExecutionEventBus(RedisEventBus[ExecutionResult]):\nModel=ExecutionResult\n\n@property\ndef event_bus_name(self"
                },
                {
                    "type": "FunctionBody",
                    "name": "",
                    "range": [
                        2838,
                        2853
                    ],
                    "children": [
                        {
                            "type": "ForStatement",
                            "name": "",
                            "range": [
                                2839,
                                2853
                            ],
                            "children": [
                                {
                                    "type": "VariableDecl",
                                    "name": "execution_result",
                                    "range": [
                                        2840,
                                        2841
                                    ],
                                    "children": [],
                                    "content": ">str"
                                },
                                {
                                    "type": "CallExpression",
                                    "name": "self.listen_events",
                                    "range": [
                                        2842,
                                        2848
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "f\"{graph_id}/{graph_exec_id}\"",
                                            "range": [
                                                2846,
                                                2848
                                            ],
                                            "children": [],
                                            "content": ".execution_event_bus_name\n"
                                        }
                                    ],
                                    "content": ":\nreturn config.execution_event_bus_name\n"
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "",
                                    "range": [
                                        2849,
                                        2853
                                    ],
                                    "children": [
                                        {
                                            "type": "YieldStatement",
                                            "name": "",
                                            "range": [
                                                2851,
                                                2853
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "execution_result",
                                                    "range": [
                                                        2852,
                                                        2853
                                                    ],
                                                    "children": [],
                                                    "content": "(self"
                                                }
                                            ],
                                            "content": "publish(self"
                                        }
                                    ],
                                    "content": "\ndef publish(self"
                                }
                            ],
                            "content": "->str:\nreturn config.execution_event_bus_name\n\ndef publish(self"
                        }
                    ],
                    "content": ")->str:\nreturn config.execution_event_bus_name\n\ndef publish(self"
                }
            ],
            "content": "config=Config()\n\n\nclass RedisExecutionEventBus(RedisEventBus[ExecutionResult]):\nModel=ExecutionResult\n\n@property\ndef event_bus_name(self)->str:\nreturn config.execution_event_bus_name\n\ndef publish(self"
        },
        {
            "type": "ClassDecl",
            "name": "AsyncRedisExecutionEventBus",
            "range": [
                2856,
                2865
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "AsyncRedisEventBus[ExecutionResult]",
                    "range": [
                        2858,
                        2863
                    ],
                    "children": [],
                    "content": "):\nself.publish_event"
                }
            ],
            "content": ":ExecutionResult):\nself.publish_event(res"
        },
        {
            "type": "VariableDecl",
            "name": "Model",
            "range": [
                2866,
                2869
            ],
            "children": [
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        2867,
                        2868
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "ExecutionResult",
                            "range": [
                                2868,
                                2868
                            ],
                            "children": [],
                            "content": "\"{res.graph_id}/{res.graph_exec_id}\""
                        }
                    ],
                    "content": "f \"{res.graph_id}/{res.graph_exec_id}\""
                }
            ],
            "content": ",f \"{res.graph_id}/{res.graph_exec_id}\")"
        },
        {
            "type": "FunctionDecl",
            "name": "event_bus_name",
            "range": [
                2871,
                2888
            ],
            "children": [
                {
                    "type": "Decorator",
                    "name": "@property",
                    "range": [
                        2871,
                        2872
                    ],
                    "children": [],
                    "content": "\ndef"
                },
                {
                    "type": "Parameter",
                    "name": "self",
                    "range": [
                        2877,
                        2877
                    ],
                    "children": [],
                    "content": ","
                },
                {
                    "type": "ReturnType",
                    "name": "-> str",
                    "range": [
                        2879,
                        2881
                    ],
                    "children": [],
                    "content": ":str="
                },
                {
                    "type": "ReturnStatement",
                    "name": "return",
                    "range": [
                        2884,
                        2887
                    ],
                    "children": [
                        {
                            "type": "MemberExpression",
                            "name": "config.execution_event_bus_name",
                            "range": [
                                2885,
                                2887
                            ],
                            "children": [],
                            "content": ":str="
                        }
                    ],
                    "content": "graph_exec_id:str="
                }
            ],
            "content": "\ndef listen(\nself,graph_id:str=\"*\",graph_exec_id:str=\"*\""
        },
        {
            "type": "FunctionDecl",
            "name": "publish",
            "range": [
                2890,
                2912
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "self",
                    "range": [
                        2894,
                        2894
                    ],
                    "children": [],
                    "content": "["
                },
                {
                    "type": "Parameter",
                    "name": "res: ExecutionResult",
                    "range": [
                        2896,
                        2898
                    ],
                    "children": [],
                    "content": ",None,"
                },
                {
                    "type": "AwaitExpression",
                    "name": "await",
                    "range": [
                        2902,
                        2911
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "self.publish_event",
                            "range": [
                                2903,
                                2905
                            ],
                            "children": [],
                            "content": "for execution_result in"
                        },
                        {
                            "type": "Argument",
                            "name": "res",
                            "range": [
                                2907,
                                2907
                            ],
                            "children": [],
                            "content": "."
                        },
                        {
                            "type": "Argument",
                            "name": "f\"{res.graph_id}/{res.graph_exec_id}\"",
                            "range": [
                                2909,
                                2910
                            ],
                            "children": [],
                            "content": "(f"
                        }
                    ],
                    "content": "\nfor execution_result in self.listen_events(f \"{graph_id}/{graph_exec_id}\""
                }
            ],
            "content": ")->Generator[ExecutionResult,None,None]:\nfor execution_result in self.listen_events(f \"{graph_id}/{graph_exec_id}\")"
        },
        {
            "type": "FunctionDecl",
            "name": "listen",
            "range": [
                2914,
                2959
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "self",
                    "range": [
                        2919,
                        2919
                    ],
                    "children": [],
                    "content": "\n"
                },
                {
                    "type": "Parameter",
                    "name": "graph_id: str = \"*\"",
                    "range": [
                        2921,
                        2925
                    ],
                    "children": [],
                    "content": "AsyncRedisExecutionEventBus(AsyncRedisEventBus[ExecutionResult"
                },
                {
                    "type": "Parameter",
                    "name": "graph_exec_id: str = \"*\"",
                    "range": [
                        2927,
                        2931
                    ],
                    "children": [],
                    "content": "):\nModel="
                },
                {
                    "type": "ReturnType",
                    "name": "-> AsyncGenerator[ExecutionResult, None]",
                    "range": [
                        2934,
                        2941
                    ],
                    "children": [],
                    "content": "\n@property\ndef event_bus_name(self"
                },
                {
                    "type": "AsyncForStatement",
                    "name": "async for",
                    "range": [
                        2944,
                        2958
                    ],
                    "children": [
                        {
                            "type": "VariableDecl",
                            "name": "execution_result",
                            "range": [
                                2946,
                                2946
                            ],
                            "children": [],
                            "content": ":"
                        },
                        {
                            "type": "CallExpression",
                            "name": "self.listen_events",
                            "range": [
                                2948,
                                2950
                            ],
                            "children": [],
                            "content": "return config."
                        },
                        {
                            "type": "Argument",
                            "name": "f\"{graph_id}/{graph_exec_id}\"",
                            "range": [
                                2952,
                                2953
                            ],
                            "children": [],
                            "content": "\n\n"
                        },
                        {
                            "type": "YieldStatement",
                            "name": "yield",
                            "range": [
                                2957,
                                2958
                            ],
                            "children": [],
                            "content": "(self"
                        }
                    ],
                    "content": ">str:\nreturn config.execution_event_bus_name\n\nasync def publish(self"
                }
            ],
            "content": "\nyield execution_result\n\n\nclass AsyncRedisExecutionEventBus(AsyncRedisEventBus[ExecutionResult]):\nModel=ExecutionResult\n\n@property\ndef event_bus_name(self)->str:\nreturn config.execution_event_bus_name\n\nasync def publish(self,"
        }
    ],
    "content": "from collections import defaultdict\nfrom datetime import datetime,timezone\nfrom multiprocessing import Manager\nfrom typing import Any,AsyncGenerator,Generator,Generic,TypeVar\n\nfrom prisma.enums import AgentExecutionStatus\nfrom prisma.models import(\nAgentGraphExecution,\nAgentNodeExecution,\nAgentNodeExecutionInputOutput,\n)\nfrom pydantic import BaseModel\n\nfrom backend.data.block import BlockData,BlockInput,CompletedBlockOutput\nfrom backend.data.includes import EXECUTION_RESULT_INCLUDE,GRAPH_EXECUTION_INCLUDE\nfrom backend.data.queue import AsyncRedisEventBus,RedisEventBus\nfrom backend.util import json,mock\nfrom backend.util.settings import Config\n\n\nclass GraphExecutionEntry(BaseModel):\nuser_id:str\ngraph_exec_id:str\ngraph_id:str\nstart_node_execs:list[\"NodeExecutionEntry\"]\n\n\nclass NodeExecutionEntry(BaseModel):\nuser_id:str\ngraph_exec_id:str\ngraph_id:str\nnode_exec_id:str\nnode_id:str\ndata:BlockInput\n\n\nExecutionStatus=AgentExecutionStatus\n\nT=TypeVar(\"T\")\n\n\nclass ExecutionQueue(Generic[T]):\n\"\"\" \\n     Queue for managing the execution of agents. \\n     This will be shared between different processes \\n     \"\"\"\n\ndef __init__(self):\nself.queue=Manager().Queue()\n\ndef add(self,execution:T)->T:\nself.queue.put(execution)\nreturn execution\n\ndef get(self)->T:\nreturn self.queue.get()\n\ndef empty(self)->bool:\nreturn self.queue.empty()\n\n\nclass ExecutionResult(BaseModel):\ngraph_id:str\ngraph_version:int\ngraph_exec_id:str\nnode_exec_id:str\nnode_id:str\nblock_id:str\nstatus:ExecutionStatus\ninput_data:BlockInput\noutput_data:CompletedBlockOutput\nadd_time:datetime\nqueue_time:datetime|None\nstart_time:datetime|None\nend_time:datetime|None\n\n@staticmethod\ndef from_graph(graph:AgentGraphExecution):\nreturn ExecutionResult(\ngraph_id=graph.agentGraphId,\ngraph_version=graph.agentGraphVersion,\ngraph_exec_id=graph.id,\nnode_exec_id=\"\",\nnode_id=\"\",\nblock_id=\"\",\nstatus=graph.executionStatus,\n#TODO:Populate input_data&output_data from AgentNodeExecutions\n#Input&Output comes AgentInputBlock&AgentOutputBlock.\ninput_data={},\noutput_data={},\nadd_time=graph.createdAt,\nqueue_time=graph.createdAt,\nstart_time=graph.startedAt,\nend_time=graph.updatedAt,\n)\n\n@staticmethod\ndef from_db(execution:AgentNodeExecution):\nif execution.executionData:\n#Execution that has been queued for execution will persist its data.\ninput_data=json.loads(execution.executionData,target_type=dict[str,Any])\nelse:\n#For incomplete execution,executionData will not be yet available.\ninput_data:BlockInput=defaultdict()\nfor data in execution.Input or[]:\ninput_data[data.name]=json.loads(data.data)\n\noutput_data:CompletedBlockOutput=defaultdict(list)\nfor data in execution.Output or[]:\noutput_data[data.name].append(json.loads(data.data))\n\ngraph_execution:AgentGraphExecution|None=execution.AgentGraphExecution\n\nreturn ExecutionResult(\ngraph_id=graph_execution.agentGraphId if graph_execution else\"\",\ngraph_version=graph_execution.agentGraphVersion if graph_execution else0,\ngraph_exec_id=execution.agentGraphExecutionId,\nblock_id=execution.AgentNode.agentBlockId if execution.AgentNode else\"\",\nnode_exec_id=execution.id,\nnode_id=execution.agentNodeId,\nstatus=execution.executionStatus,\ninput_data=input_data,\noutput_data=output_data,\nadd_time=execution.addedTime,\nqueue_time=execution.queuedTime,\nstart_time=execution.startedTime,\nend_time=execution.endedTime,\n)\n\n\n#---------------------Model functions---------------------#\n\n\nasync def create_graph_execution(\ngraph_id:str,\ngraph_version:int,\nnodes_input:list[tuple[str,BlockInput]],\nuser_id:str,\n)->tuple[str,list[ExecutionResult]]:\n\"\"\" \\n     Create a new AgentGraphExecution record. \\n     Returns: \\n         The id of the AgentGraphExecution and the list of ExecutionResult for each node. \\n     \"\"\"\nresult=await AgentGraphExecution.prisma().create(\ndata={\n\"agentGraphId\":graph_id,\n\"agentGraphVersion\":graph_version,\n\"executionStatus\":ExecutionStatus.QUEUED,\n\"AgentNodeExecutions\":{\n\"create\":[#type:ignore\n{\n\"agentNodeId\":node_id,\n\"executionStatus\":ExecutionStatus.INCOMPLETE,\n\"Input\":{\n\"create\":[\n{\"name\":name,\"data\":json.dumps(data)}\nfor name,data in node_input.items()\n]\n},\n}\nfor node_id,node_input in nodes_input\n]\n},\n\"userId\":user_id,\n},\ninclude=GRAPH_EXECUTION_INCLUDE,\n)\n\nreturn result.id,[\nExecutionResult.from_db(execution)\nfor execution in result.AgentNodeExecutions or[]\n]\n\n\nasync def upsert_execution_input(\nnode_id:str,\ngraph_exec_id:str,\ninput_name:str,\ninput_data:Any,\nnode_exec_id:str|None=None,\n)->tuple[str,BlockInput]:\n\"\"\" \\n     Insert AgentNodeExecutionInputOutput record for as one of AgentNodeExecution.Input. \\n     If there is no AgentNodeExecution that has no `input_name` as input, create new one. \\n  \\n     Args: \\n         node_id: The id of the AgentNode. \\n         graph_exec_id: The id of the AgentGraphExecution. \\n         input_name: The name of the input data. \\n         input_data: The input data to be inserted. \\n         node_exec_id: [Optional] The id of the AgentNodeExecution that has no `input_name` as input. If not provided, it will find the eligible incomplete AgentNodeExecution or create a new one. \\n  \\n     Returns: \\n         * The id of the created or existing AgentNodeExecution. \\n         * Dict of node input data, key is the input name, value is the input data. \\n     \"\"\"\nexisting_execution=await AgentNodeExecution.prisma().find_first(\nwhere={#type:ignore\n**({\"id\":node_exec_id}if node_exec_id else{}),\n\"agentNodeId\":node_id,\n\"agentGraphExecutionId\":graph_exec_id,\n\"executionStatus\":ExecutionStatus.INCOMPLETE,\n\"Input\":{\"every\":{\"name\":{\"not\":input_name}}},\n},\norder={\"addedTime\":\"asc\"},\ninclude={\"Input\":True},\n)\njson_input_data=json.dumps(input_data)\n\nif existing_execution:\nawait AgentNodeExecutionInputOutput.prisma().create(\ndata={\n\"name\":input_name,\n\"data\":json_input_data,\n\"referencedByInputExecId\":existing_execution.id,\n}\n)\nreturn existing_execution.id,{\n**{\ninput_data.name:json.loads(input_data.data)\nfor input_data in existing_execution.Input or[]\n},\ninput_name:input_data,\n}\n\nelif not node_exec_id:\nresult=await AgentNodeExecution.prisma().create(\ndata={\n\"agentNodeId\":node_id,\n\"agentGraphExecutionId\":graph_exec_id,\n\"executionStatus\":ExecutionStatus.INCOMPLETE,\n\"Input\":{\"create\":{\"name\":input_name,\"data\":json_input_data}},\n}\n)\nreturn result.id,{input_name:input_data}\n\nelse:\nraise ValueError(\nf \"NodeExecution {node_exec_id} not found or already has input {input_name}.\"\n)\n\n\nasync def upsert_execution_output(\nnode_exec_id:str,\noutput_name:str,\noutput_data:Any,\n)->None:\n\"\"\" \\n     Insert AgentNodeExecutionInputOutput record for as one of AgentNodeExecution.Output. \\n     \"\"\"\nawait AgentNodeExecutionInputOutput.prisma().create(\ndata={\n\"name\":output_name,\n\"data\":json.dumps(output_data),\n\"referencedByOutputExecId\":node_exec_id,\n}\n)\n\n\nasync def update_graph_execution_start_time(graph_exec_id:str):\nawait AgentGraphExecution.prisma().update(\nwhere={\"id\":graph_exec_id},\ndata={\n\"executionStatus\":ExecutionStatus.RUNNING,\n\"startedAt\":datetime.now(tz=timezone.utc),\n},\n)\n\n\nasync def update_graph_execution_stats(\ngraph_exec_id:str,\nstats:dict[str,Any],\n)->ExecutionResult:\nstatus=ExecutionStatus.FAILED if stats.get(\"error\")else ExecutionStatus.COMPLETED\nres=await AgentGraphExecution.prisma().update(\nwhere={\"id\":graph_exec_id},\ndata={\n\"executionStatus\":status,\n\"stats\":json.dumps(stats),\n},\n)\nif not res:\nraise ValueError(f \"Execution {graph_exec_id} not found.\")\n\nreturn ExecutionResult.from_graph(res)\n\n\nasync def update_node_execution_stats(node_exec_id:str,stats:dict[str,Any]):\nawait AgentNodeExecution.prisma().update(\nwhere={\"id\":node_exec_id},\ndata={\"stats\":json.dumps(stats)},\n)\n\n\nasync def update_execution_status(\nnode_exec_id:str,\nstatus:ExecutionStatus,\nexecution_data:BlockInput|None=None,\nstats:dict[str,Any]|None=None,\n)->ExecutionResult:\nif status==ExecutionStatus.QUEUED and execution_data is None:\nraise ValueError(\"Execution data must be provided when queuing an execution.\")\n\nnow=datetime.now(tz=timezone.utc)\ndata={\n**({\"executionStatus\":status}),\n**({\"queuedTime\":now}if status==ExecutionStatus.QUEUED else{}),\n**({\"startedTime\":now}if status==ExecutionStatus.RUNNING else{}),\n**({\"endedTime\":now}if status==ExecutionStatus.FAILED else{}),\n**({\"endedTime\":now}if status==ExecutionStatus.COMPLETED else{}),\n**({\"executionData\":json.dumps(execution_data)}if execution_data else{}),\n**({\"stats\":json.dumps(stats)}if stats else{}),\n}\n\nres=await AgentNodeExecution.prisma().update(\nwhere={\"id\":node_exec_id},\ndata=data,#type:ignore\ninclude=EXECUTION_RESULT_INCLUDE,\n)\nif not res:\nraise ValueError(f \"Execution {node_exec_id} not found.\")\n\nreturn ExecutionResult.from_db(res)\n\n\nasync def get_execution_results(graph_exec_id:str)->list[ExecutionResult]:\nexecutions=await AgentNodeExecution.prisma().find_many(\nwhere={\"agentGraphExecutionId\":graph_exec_id},\ninclude=EXECUTION_RESULT_INCLUDE,\norder=[\n{\"queuedTime\":\"asc\"},\n{\"addedTime\":\"asc\"},#Fallback:Incomplete execs has no queuedTime.\n],\n)\nres=[ExecutionResult.from_db(execution)for execution in executions]\nreturn res\n\n\nLIST_SPLIT=\"_$_\"\nDICT_SPLIT=\"_#_\"\nOBJC_SPLIT=\"_@_\"\n\n\ndef parse_execution_output(output:BlockData,name:str)->Any|None:\n#Allow extracting partial output data by name.\noutput_name,output_data=output\n\nif name==output_name:\nreturn output_data\n\nif name.startswith(f \"{output_name}{LIST_SPLIT}\"):\nindex=int(name.split(LIST_SPLIT)[1])\nif not isinstance(output_data,list)or len(output_data)<=index:\nreturn None\nreturn output_data[int(name.split(LIST_SPLIT)[1])]\n\nif name.startswith(f \"{output_name}{DICT_SPLIT}\"):\nindex=name.split(DICT_SPLIT)[1]\nif not isinstance(output_data,dict)or index not in output_data:\nreturn None\nreturn output_data[index]\n\nif name.startswith(f \"{output_name}{OBJC_SPLIT}\"):\nindex=name.split(OBJC_SPLIT)[1]\nif isinstance(output_data,object)and hasattr(output_data,index):\nreturn getattr(output_data,index)\nreturn None\n\nreturn None\n\n\ndef merge_execution_input(data:BlockInput)->BlockInput:\n\"\"\" \\n     Merge all dynamic input pins which described by the following pattern: \\n     - <input_name>_$_<index> for list input. \\n     - <input_name>_#_<index> for dict input. \\n     - <input_name>_@_<index> for object input. \\n     This function will construct pins with the same name into a single list/dict/object. \\n     \"\"\"\n\n#Merge all input with<input_name>_$_<index>into a single list.\nitems=list(data.items())\n\nfor key,value in items:\nif LIST_SPLIT not in key:\ncontinue\nname,index=key.split(LIST_SPLIT)\nif not index.isdigit():\nraise ValueError(f \"Invalid key: {key}, #{index} index must be an integer.\")\n\ndata[name]=data.get(name,[])\nif int(index)>=len(data[name]):\n#Pad list with empty string on missing indices.\ndata[name].extend([\"\"]*(int(index)-len(data[name])+1))\ndata[name][int(index)]=value\n\n#Merge all input with<input_name>_#_<index>into a single dict.\nfor key,value in items:\nif DICT_SPLIT not in key:\ncontinue\nname,index=key.split(DICT_SPLIT)\ndata[name]=data.get(name,{})\ndata[name][index]=value\n\n#Merge all input with<input_name>_@_<index>into a single object.\nfor key,value in items:\nif OBJC_SPLIT not in key:\ncontinue\nname,index=key.split(OBJC_SPLIT)\nif name not in data or not isinstance(data[name],object):\ndata[name]=mock.MockObject()\nsetattr(data[name],index,value)\n\nreturn data\n\n\nasync def get_latest_execution(node_id:str,graph_eid:str)->ExecutionResult|None:\nexecution=await AgentNodeExecution.prisma().find_first(\nwhere={\n\"agentNodeId\":node_id,\n\"agentGraphExecutionId\":graph_eid,\n\"executionStatus\":{\"not\":ExecutionStatus.INCOMPLETE},\n\"executionData\":{\"not\":None},#type:ignore\n},\norder={\"queuedTime\":\"desc\"},\ninclude=EXECUTION_RESULT_INCLUDE,\n)\nif not execution:\nreturn None\nreturn ExecutionResult.from_db(execution)\n\n\nasync def get_incomplete_executions(\nnode_id:str,graph_eid:str\n)->list[ExecutionResult]:\nexecutions=await AgentNodeExecution.prisma().find_many(\nwhere={\n\"agentNodeId\":node_id,\n\"agentGraphExecutionId\":graph_eid,\n\"executionStatus\":ExecutionStatus.INCOMPLETE,\n},\ninclude=EXECUTION_RESULT_INCLUDE,\n)\nreturn[ExecutionResult.from_db(execution)for execution in executions]\n\n\n#---------------------Event Bus---------------------#\n\nconfig=Config()\n\n\nclass RedisExecutionEventBus(RedisEventBus[ExecutionResult]):\nModel=ExecutionResult\n\n@property\ndef event_bus_name(self)->str:\nreturn config.execution_event_bus_name\n\ndef publish(self,res:ExecutionResult):\nself.publish_event(res,f \"{res.graph_id}/{res.graph_exec_id}\")\n\ndef listen(\nself,graph_id:str=\"*\",graph_exec_id:str=\"*\"\n)->Generator[ExecutionResult,None,None]:\nfor execution_result in self.listen_events(f \"{graph_id}/{graph_exec_id}\"):\nyield execution_result\n\n\nclass AsyncRedisExecutionEventBus(AsyncRedisEventBus[ExecutionResult]):\nModel=ExecutionResult\n\n@property\ndef event_bus_name(self)->str:\nreturn config.execution_event_bus_name\n\nasync def publish(self,"
}