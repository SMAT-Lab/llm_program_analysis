{
    "type": "Program",
    "name": "Global",
    "range": [
        0,
        477
    ],
    "children": [
        {
            "type": "Comment",
            "name": "coding",
            "range": [
                0,
                11
            ],
            "children": [
                {
                    "type": "Keyword",
                    "name": "coding",
                    "range": [
                        4,
                        5
                    ],
                    "children": [],
                    "content": "coding:"
                },
                {
                    "type": "Literal",
                    "name": "utf",
                    "range": [
                        6,
                        7
                    ],
                    "children": [],
                    "content": "utf-"
                },
                {
                    "type": "Literal",
                    "name": "8",
                    "range": [
                        8,
                        9
                    ],
                    "children": [],
                    "content": "8-"
                }
            ],
            "content": "#-*-coding:utf-8-*-"
        },
        {
            "type": "Whitespace",
            "name": "",
            "range": [
                12,
                14
            ],
            "children": [],
            "content": "\n\n\n"
        },
        {
            "type": "ClassDecl",
            "name": "QueryApi",
            "range": [
                15,
                125
            ],
            "children": [
                {
                    "type": "FunctionDecl",
                    "name": "__init__",
                    "range": [
                        23,
                        45
                    ],
                    "children": [
                        {
                            "type": "ParameterList",
                            "name": "",
                            "range": [
                                25,
                                31
                            ],
                            "children": [
                                {
                                    "type": "Parameter",
                                    "name": "self",
                                    "range": [
                                        26,
                                        26
                                    ],
                                    "children": [],
                                    "content": "self"
                                },
                                {
                                    "type": "Parameter",
                                    "name": "memory_cache",
                                    "range": [
                                        28,
                                        28
                                    ],
                                    "children": [],
                                    "content": "memory_cache"
                                },
                                {
                                    "type": "Parameter",
                                    "name": "reverse_index_cluster",
                                    "range": [
                                        30,
                                        30
                                    ],
                                    "children": [],
                                    "content": "reverse_index_cluster"
                                }
                            ],
                            "content": "(self,memory_cache,reverse_index_cluster)"
                        },
                        {
                            "type": "BlockStatement",
                            "name": "",
                            "range": [
                                33,
                                45
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "",
                                    "range": [
                                        34,
                                        38
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "",
                                            "range": [
                                                34,
                                                36
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "self",
                                                    "range": [
                                                        34,
                                                        34
                                                    ],
                                                    "children": [],
                                                    "content": "self"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "memory_cache",
                                                    "range": [
                                                        36,
                                                        36
                                                    ],
                                                    "children": [],
                                                    "content": "memory_cache"
                                                }
                                            ],
                                            "content": "self.memory_cache"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "memory_cache",
                                            "range": [
                                                38,
                                                38
                                            ],
                                            "children": [],
                                            "content": "memory_cache"
                                        }
                                    ],
                                    "content": "self.memory_cache=memory_cache"
                                },
                                {
                                    "type": "AssignmentExpression",
                                    "name": "",
                                    "range": [
                                        40,
                                        44
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "",
                                            "range": [
                                                40,
                                                42
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "self",
                                                    "range": [
                                                        40,
                                                        40
                                                    ],
                                                    "children": [],
                                                    "content": "self"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "reverse_index_cluster",
                                                    "range": [
                                                        42,
                                                        42
                                                    ],
                                                    "children": [],
                                                    "content": "reverse_index_cluster"
                                                }
                                            ],
                                            "content": "self.reverse_index_cluster"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "reverse_index_cluster",
                                            "range": [
                                                44,
                                                44
                                            ],
                                            "children": [],
                                            "content": "reverse_index_cluster"
                                        }
                                    ],
                                    "content": "self.reverse_index_cluster=reverse_index_cluster"
                                }
                            ],
                            "content": "\nself.memory_cache=memory_cache\nself.reverse_index_cluster=reverse_index_cluster\n"
                        }
                    ],
                    "content": "def __init__(self,memory_cache,reverse_index_cluster):\nself.memory_cache=memory_cache\nself.reverse_index_cluster=reverse_index_cluster\n"
                },
                {
                    "type": "FunctionDecl",
                    "name": "parse_query",
                    "range": [
                        47,
                        63
                    ],
                    "children": [
                        {
                            "type": "ParameterList",
                            "name": "",
                            "range": [
                                49,
                                53
                            ],
                            "children": [
                                {
                                    "type": "Parameter",
                                    "name": "self",
                                    "range": [
                                        50,
                                        50
                                    ],
                                    "children": [],
                                    "content": "self"
                                },
                                {
                                    "type": "Parameter",
                                    "name": "query",
                                    "range": [
                                        52,
                                        52
                                    ],
                                    "children": [],
                                    "content": "query"
                                }
                            ],
                            "content": "(self,query)"
                        },
                        {
                            "type": "BlockStatement",
                            "name": "",
                            "range": [
                                55,
                                63
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "",
                                    "range": [
                                        56,
                                        58
                                    ],
                                    "children": [],
                                    "content": "\"\"\"Remove markup, break text into terms, deal with typos, \\n         normalize capitalization, convert to use boolean operations. \\n         \"\"\""
                                }
                            ],
                            "content": "\n\"\"\"Remove markup, break text into terms, deal with typos, \\n         normalize capitalization, convert to use boolean operations. \\n         \"\"\"\n...\n"
                        }
                    ],
                    "content": "def parse_query(self,query):\n\"\"\"Remove markup, break text into terms, deal with typos, \\n         normalize capitalization, convert to use boolean operations. \\n         \"\"\"\n...\n"
                },
                {
                    "type": "FunctionDecl",
                    "name": "process_query",
                    "range": [
                        65,
                        124
                    ],
                    "children": [
                        {
                            "type": "ParameterList",
                            "name": "",
                            "range": [
                                67,
                                71
                            ],
                            "children": [
                                {
                                    "type": "Parameter",
                                    "name": "self",
                                    "range": [
                                        68,
                                        68
                                    ],
                                    "children": [],
                                    "content": "self"
                                },
                                {
                                    "type": "Parameter",
                                    "name": "query",
                                    "range": [
                                        70,
                                        70
                                    ],
                                    "children": [],
                                    "content": "query"
                                }
                            ],
                            "content": "(self,query)"
                        },
                        {
                            "type": "BlockStatement",
                            "name": "",
                            "range": [
                                73,
                                124
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "",
                                    "range": [
                                        74,
                                        81
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "query",
                                            "range": [
                                                74,
                                                74
                                            ],
                                            "children": [],
                                            "content": "query"
                                        },
                                        {
                                            "type": "CallExpression",
                                            "name": "",
                                            "range": [
                                                76,
                                                81
                                            ],
                                            "children": [
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "",
                                                    "range": [
                                                        76,
                                                        78
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "self",
                                                            "range": [
                                                                76,
                                                                76
                                                            ],
                                                            "children": [],
                                                            "content": "self"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "parse_query",
                                                            "range": [
                                                                78,
                                                                78
                                                            ],
                                                            "children": [],
                                                            "content": "parse_query"
                                                        }
                                                    ],
                                                    "content": "self.parse_query"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "query",
                                                    "range": [
                                                        80,
                                                        80
                                                    ],
                                                    "children": [],
                                                    "content": "query"
                                                }
                                            ],
                                            "content": "self.parse_query(query)"
                                        }
                                    ],
                                    "content": "query=self.parse_query(query)"
                                },
                                {
                                    "type": "AssignmentExpression",
                                    "name": "",
                                    "range": [
                                        83,
                                        92
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "results",
                                            "range": [
                                                83,
                                                83
                                            ],
                                            "children": [],
                                            "content": "results"
                                        },
                                        {
                                            "type": "CallExpression",
                                            "name": "",
                                            "range": [
                                                85,
                                                92
                                            ],
                                            "children": [
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "",
                                                    "range": [
                                                        85,
                                                        89
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "self",
                                                            "range": [
                                                                85,
                                                                85
                                                            ],
                                                            "children": [],
                                                            "content": "self"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "memory_cache",
                                                            "range": [
                                                                87,
                                                                87
                                                            ],
                                                            "children": [],
                                                            "content": "memory_cache"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "get",
                                                            "range": [
                                                                89,
                                                                89
                                                            ],
                                                            "children": [],
                                                            "content": "get"
                                                        }
                                                    ],
                                                    "content": "self.memory_cache.get"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "query",
                                                    "range": [
                                                        91,
                                                        91
                                                    ],
                                                    "children": [],
                                                    "content": "query"
                                                }
                                            ],
                                            "content": "self.memory_cache.get(query)"
                                        }
                                    ],
                                    "content": "results=self.memory_cache.get(query)"
                                },
                                {
                                    "type": "IfStatement",
                                    "name": "",
                                    "range": [
                                        94,
                                        120
                                    ],
                                    "children": [
                                        {
                                            "type": "BinaryExpression",
                                            "name": "",
                                            "range": [
                                                95,
                                                97
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "results",
                                                    "range": [
                                                        95,
                                                        95
                                                    ],
                                                    "children": [],
                                                    "content": "results"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "None",
                                                    "range": [
                                                        97,
                                                        97
                                                    ],
                                                    "children": [],
                                                    "content": "None"
                                                }
                                            ],
                                            "content": "results is None"
                                        },
                                        {
                                            "type": "BlockStatement",
                                            "name": "",
                                            "range": [
                                                99,
                                                120
                                            ],
                                            "children": [
                                                {
                                                    "type": "AssignmentExpression",
                                                    "name": "",
                                                    "range": [
                                                        100,
                                                        109
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "results",
                                                            "range": [
                                                                100,
                                                                100
                                                            ],
                                                            "children": [],
                                                            "content": "results"
                                                        },
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "",
                                                            "range": [
                                                                102,
                                                                109
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "name": "",
                                                                    "range": [
                                                                        102,
                                                                        106
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "self",
                                                                            "range": [
                                                                                102,
                                                                                102
                                                                            ],
                                                                            "children": [],
                                                                            "content": "self"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "reverse_index_cluster",
                                                                            "range": [
                                                                                104,
                                                                                104
                                                                            ],
                                                                            "children": [],
                                                                            "content": "reverse_index_cluster"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "process_search",
                                                                            "range": [
                                                                                106,
                                                                                106
                                                                            ],
                                                                            "children": [],
                                                                            "content": "process_search"
                                                                        }
                                                                    ],
                                                                    "content": "self.reverse_index_cluster.process_search"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "query",
                                                                    "range": [
                                                                        108,
                                                                        108
                                                                    ],
                                                                    "children": [],
                                                                    "content": "query"
                                                                }
                                                            ],
                                                            "content": "self.reverse_index_cluster.process_search(query)"
                                                        }
                                                    ],
                                                    "content": "results=self.reverse_index_cluster.process_search(query)"
                                                },
                                                {
                                                    "type": "CallExpression",
                                                    "name": "",
                                                    "range": [
                                                        111,
                                                        120
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "name": "",
                                                            "range": [
                                                                111,
                                                                115
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "self",
                                                                    "range": [
                                                                        111,
                                                                        111
                                                                    ],
                                                                    "children": [],
                                                                    "content": "self"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "memory_cache",
                                                                    "range": [
                                                                        113,
                                                                        113
                                                                    ],
                                                                    "children": [],
                                                                    "content": "memory_cache"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "set",
                                                                    "range": [
                                                                        115,
                                                                        115
                                                                    ],
                                                                    "children": [],
                                                                    "content": "set"
                                                                }
                                                            ],
                                                            "content": "self.memory_cache.set"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "query",
                                                            "range": [
                                                                117,
                                                                117
                                                            ],
                                                            "children": [],
                                                            "content": "query"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "results",
                                                            "range": [
                                                                119,
                                                                119
                                                            ],
                                                            "children": [],
                                                            "content": "results"
                                                        }
                                                    ],
                                                    "content": "self.memory_cache.set(query,results)"
                                                }
                                            ],
                                            "content": "\nresults=self.reverse_index_cluster.process_search(query)\nself.memory_cache.set(query,results)"
                                        }
                                    ],
                                    "content": "if results is None:\nresults=self.reverse_index_cluster.process_search(query)\nself.memory_cache.set(query,results)"
                                },
                                {
                                    "type": "ReturnStatement",
                                    "name": "",
                                    "range": [
                                        122,
                                        123
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "results",
                                            "range": [
                                                123,
                                                123
                                            ],
                                            "children": [],
                                            "content": "results"
                                        }
                                    ],
                                    "content": "return results"
                                }
                            ],
                            "content": "\nquery=self.parse_query(query)\nresults=self.memory_cache.get(query)\nif results is None:\nresults=self.reverse_index_cluster.process_search(query)\nself.memory_cache.set(query,results)\nreturn results\n"
                        }
                    ],
                    "content": "def process_query(self,query):\nquery=self.parse_query(query)\nresults=self.memory_cache.get(query)\nif results is None:\nresults=self.reverse_index_cluster.process_search(query)\nself.memory_cache.set(query,results)\nreturn results\n"
                }
            ],
            "content": "class QueryApi(object):\n\ndef __init__(self,memory_cache,reverse_index_cluster):\nself.memory_cache=memory_cache\nself.reverse_index_cluster=reverse_index_cluster\n\ndef parse_query(self,query):\n\"\"\"Remove markup, break text into terms, deal with typos, \\n         normalize capitalization, convert to use boolean operations. \\n         \"\"\"\n...\n\ndef process_query(self,query):\nquery=self.parse_query(query)\nresults=self.memory_cache.get(query)\nif results is None:\nresults=self.reverse_index_cluster.process_search(query)\nself.memory_cache.set(query,results)\nreturn results\n\n"
        },
        {
            "type": "ClassDecl",
            "name": "Node",
            "range": [
                126,
                157
            ],
            "children": [
                {
                    "type": "MethodDefinition",
                    "name": "__init__",
                    "range": [
                        134,
                        156
                    ],
                    "children": [
                        {
                            "type": "ParameterList",
                            "range": [
                                136,
                                142
                            ],
                            "children": [
                                {
                                    "type": "Parameter",
                                    "name": "self",
                                    "range": [
                                        137,
                                        137
                                    ],
                                    "content": "("
                                },
                                {
                                    "type": "Parameter",
                                    "name": "query",
                                    "range": [
                                        139,
                                        139
                                    ],
                                    "content": ","
                                },
                                {
                                    "type": "Parameter",
                                    "name": "results",
                                    "range": [
                                        141,
                                        141
                                    ],
                                    "content": ","
                                }
                            ],
                            "content": "__init__(self,query,results"
                        },
                        {
                            "type": "BlockStatement",
                            "range": [
                                144,
                                156
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "range": [
                                        145,
                                        149
                                    ],
                                    "left": {
                                        "type": "MemberExpression",
                                        "object": {
                                            "type": "Identifier",
                                            "name": "self",
                                            "range": [
                                                145,
                                                145
                                            ],
                                            "content": "\n"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "query",
                                            "range": [
                                                147,
                                                147
                                            ],
                                            "content": "."
                                        },
                                        "computed": false,
                                        "range": [
                                            145,
                                            147
                                        ],
                                        "content": "\nself."
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "query",
                                        "range": [
                                            149,
                                            149
                                        ],
                                        "content": "="
                                    },
                                    "content": "\nself.query="
                                },
                                {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "range": [
                                        151,
                                        155
                                    ],
                                    "left": {
                                        "type": "MemberExpression",
                                        "object": {
                                            "type": "Identifier",
                                            "name": "self",
                                            "range": [
                                                151,
                                                151
                                            ],
                                            "content": "\n"
                                        },
                                        "property": {
                                            "type": "Identifier",
                                            "name": "results",
                                            "range": [
                                                153,
                                                153
                                            ],
                                            "content": "."
                                        },
                                        "computed": false,
                                        "range": [
                                            151,
                                            153
                                        ],
                                        "content": "\nself."
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "results",
                                        "range": [
                                            155,
                                            155
                                        ],
                                        "content": "="
                                    },
                                    "content": "\nself.results="
                                }
                            ],
                            "content": ":\nself.query=query\nself.results=results"
                        }
                    ],
                    "content": "\ndef __init__(self,query,results):\nself.query=query\nself.results=results"
                }
            ],
            "content": "\nclass Node(object):\n\ndef __init__(self,query,results):\nself.query=query\nself.results=results\n"
        },
        {
            "type": "ClassDecl",
            "name": "LinkedList",
            "range": [
                158,
                164
            ],
            "children": [
                {
                    "type": "FunctionDecl",
                    "name": "__init__",
                    "range": [
                        166,
                        184
                    ],
                    "children": [
                        {
                            "type": "AssignmentExpression",
                            "name": "head",
                            "range": [
                                173,
                                177
                            ],
                            "children": [],
                            "content": ":\nself.head"
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "tail",
                            "range": [
                                179,
                                183
                            ],
                            "children": [],
                            "content": "None\nself.tail"
                        }
                    ],
                    "content": "\n\ndef __init__(self):\nself.head=None\nself.tail="
                },
                {
                    "type": "FunctionDecl",
                    "name": "move_to_front",
                    "range": [
                        186,
                        198
                    ],
                    "children": [],
                    "content": "\n\ndef move_to_front(self,node):\n.."
                },
                {
                    "type": "FunctionDecl",
                    "name": "append_to_front",
                    "range": [
                        200,
                        212
                    ],
                    "children": [],
                    "content": "\n\ndef append_to_front(self,node):\n.."
                },
                {
                    "type": "FunctionDecl",
                    "name": "remove_from_tail",
                    "range": [
                        214,
                        224
                    ],
                    "children": [],
                    "content": "\n\ndef remove_from_tail(self):\n.."
                }
            ],
            "content": "\n\nclass LinkedList(object)"
        },
        {
            "type": "ClassDecl",
            "name": "Cache",
            "range": [
                226,
                269
            ],
            "children": [
                {
                    "type": "MethodDecl",
                    "name": "__init__",
                    "range": [
                        234,
                        269
                    ],
                    "children": [
                        {
                            "type": "ParameterList",
                            "name": "",
                            "range": [
                                236,
                                240
                            ],
                            "children": [
                                {
                                    "type": "Parameter",
                                    "name": "self",
                                    "range": [
                                        237,
                                        237
                                    ],
                                    "children": [],
                                    "content": "def"
                                },
                                {
                                    "type": "Parameter",
                                    "name": "MAX_SIZE",
                                    "range": [
                                        239,
                                        239
                                    ],
                                    "children": [],
                                    "content": "("
                                }
                            ],
                            "content": "\ndef __init__(self"
                        },
                        {
                            "type": "BlockStatement",
                            "name": "",
                            "range": [
                                242,
                                269
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "",
                                    "range": [
                                        243,
                                        247
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "",
                                            "range": [
                                                243,
                                                245
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "self",
                                                    "range": [
                                                        243,
                                                        243
                                                    ],
                                                    "children": [],
                                                    "content": ")"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "MAX_SIZE",
                                                    "range": [
                                                        245,
                                                        245
                                                    ],
                                                    "children": [],
                                                    "content": "\n"
                                                }
                                            ],
                                            "content": "):\n"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "MAX_SIZE",
                                            "range": [
                                                247,
                                                247
                                            ],
                                            "children": [],
                                            "content": "."
                                        }
                                    ],
                                    "content": "):\nself."
                                },
                                {
                                    "type": "AssignmentExpression",
                                    "name": "",
                                    "range": [
                                        249,
                                        253
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "",
                                            "range": [
                                                249,
                                                251
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "self",
                                                    "range": [
                                                        249,
                                                        249
                                                    ],
                                                    "children": [],
                                                    "content": "="
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "size",
                                                    "range": [
                                                        251,
                                                        251
                                                    ],
                                                    "children": [],
                                                    "content": "\n"
                                                }
                                            ],
                                            "content": "=MAX_SIZE\n"
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "0",
                                            "range": [
                                                253,
                                                253
                                            ],
                                            "children": [],
                                            "content": "."
                                        }
                                    ],
                                    "content": "=MAX_SIZE\nself."
                                },
                                {
                                    "type": "AssignmentExpression",
                                    "name": "",
                                    "range": [
                                        255,
                                        260
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "",
                                            "range": [
                                                255,
                                                257
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "self",
                                                    "range": [
                                                        255,
                                                        255
                                                    ],
                                                    "children": [],
                                                    "content": "="
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "lookup",
                                                    "range": [
                                                        257,
                                                        257
                                                    ],
                                                    "children": [],
                                                    "content": "\n"
                                                }
                                            ],
                                            "content": "=0\n"
                                        },
                                        {
                                            "type": "ObjectExpression",
                                            "name": "",
                                            "range": [
                                                259,
                                                260
                                            ],
                                            "children": [],
                                            "content": ".lookup"
                                        }
                                    ],
                                    "content": "=0\nself.lookup"
                                },
                                {
                                    "type": "AssignmentExpression",
                                    "name": "",
                                    "range": [
                                        262,
                                        268
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "",
                                            "range": [
                                                262,
                                                264
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "self",
                                                    "range": [
                                                        262,
                                                        262
                                                    ],
                                                    "children": [],
                                                    "content": "{"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "linked_list",
                                                    "range": [
                                                        264,
                                                        264
                                                    ],
                                                    "children": [],
                                                    "content": "\n"
                                                }
                                            ],
                                            "content": "{}\n"
                                        },
                                        {
                                            "type": "NewExpression",
                                            "name": "",
                                            "range": [
                                                266,
                                                268
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "LinkedList",
                                                    "range": [
                                                        266,
                                                        266
                                                    ],
                                                    "children": [],
                                                    "content": "."
                                                }
                                            ],
                                            "content": ".linked_list="
                                        }
                                    ],
                                    "content": "{}\nself.linked_list="
                                }
                            ],
                            "content": "MAX_SIZE):\nself.MAX_SIZE=MAX_SIZE\nself.size=0\nself.lookup={}\nself.linked_list=LinkedList"
                        }
                    ],
                    "content": ":\n\ndef __init__(self,MAX_SIZE):\nself.MAX_SIZE=MAX_SIZE\nself.size=0\nself.lookup={}\nself.linked_list=LinkedList"
                }
            ],
            "content": "\n\n\nclass Cache(object):\n\ndef __init__(self,MAX_SIZE):\nself.MAX_SIZE=MAX_SIZE\nself.size=0\nself.lookup={}\nself.linked_list=LinkedList"
        },
        {
            "type": "FunctionDecl",
            "name": "get",
            "range": [
                271,
                315
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "",
                    "range": [
                        273,
                        277
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "self",
                            "range": [
                                274,
                                274
                            ],
                            "children": [],
                            "content": "def"
                        },
                        {
                            "type": "Parameter",
                            "name": "query",
                            "range": [
                                276,
                                276
                            ],
                            "children": [],
                            "content": "("
                        }
                    ],
                    "content": "\ndef get(self"
                },
                {
                    "type": "BlockStatement",
                    "name": "",
                    "range": [
                        279,
                        315
                    ],
                    "children": [
                        {
                            "type": "VariableDeclaration",
                            "name": "",
                            "range": [
                                284,
                                292
                            ],
                            "children": [
                                {
                                    "type": "VariableDeclarator",
                                    "name": "node",
                                    "range": [
                                        284,
                                        292
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "",
                                            "range": [
                                                286,
                                                291
                                            ],
                                            "children": [
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "",
                                                    "range": [
                                                        286,
                                                        288
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "self",
                                                            "range": [
                                                                286,
                                                                286
                                                            ],
                                                            "children": [],
                                                            "content": "\n"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "lookup",
                                                            "range": [
                                                                288,
                                                                288
                                                            ],
                                                            "children": [],
                                                            "content": "="
                                                        }
                                                    ],
                                                    "content": "\nnode="
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "query",
                                                    "range": [
                                                        290,
                                                        290
                                                    ],
                                                    "children": [],
                                                    "content": "."
                                                }
                                            ],
                                            "content": "\nnode=self.lookup"
                                        }
                                    ],
                                    "content": "\"Get the stored query result from the cache. \\n  \\n         Accessing a node updates its position to the front of the LRU list. \\n         \"\"\"\nnode=self.lookup["
                                }
                            ],
                            "content": "\"Get the stored query result from the cache. \\n  \\n         Accessing a node updates its position to the front of the LRU list. \\n         \"\"\"\nnode=self.lookup["
                        },
                        {
                            "type": "IfStatement",
                            "name": "",
                            "range": [
                                293,
                                301
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "name": "",
                                    "range": [
                                        294,
                                        296
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "node",
                                            "range": [
                                                294,
                                                294
                                            ],
                                            "children": [],
                                            "content": "]"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "None",
                                            "range": [
                                                296,
                                                296
                                            ],
                                            "children": [],
                                            "content": "if"
                                        }
                                    ],
                                    "content": "]\nif"
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "",
                                    "range": [
                                        298,
                                        301
                                    ],
                                    "children": [
                                        {
                                            "type": "ReturnStatement",
                                            "name": "",
                                            "range": [
                                                299,
                                                300
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "None",
                                                    "range": [
                                                        300,
                                                        300
                                                    ],
                                                    "children": [],
                                                    "content": ":"
                                                }
                                            ],
                                            "content": "None:"
                                        }
                                    ],
                                    "content": "is None:\n"
                                }
                            ],
                            "content": "query]\nif node is None:\n"
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "",
                            "range": [
                                302,
                                310
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "",
                                    "range": [
                                        302,
                                        309
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "",
                                            "range": [
                                                302,
                                                306
                                            ],
                                            "children": [
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "",
                                                    "range": [
                                                        302,
                                                        304
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "self",
                                                            "range": [
                                                                302,
                                                                302
                                                            ],
                                                            "children": [],
                                                            "content": "return"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "linked_list",
                                                            "range": [
                                                                304,
                                                                304
                                                            ],
                                                            "children": [],
                                                            "content": "\n"
                                                        }
                                                    ],
                                                    "content": "return None\n"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "move_to_front",
                                                    "range": [
                                                        306,
                                                        306
                                                    ],
                                                    "children": [],
                                                    "content": "."
                                                }
                                            ],
                                            "content": "return None\nself."
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "node",
                                            "range": [
                                                308,
                                                308
                                            ],
                                            "children": [],
                                            "content": "."
                                        }
                                    ],
                                    "content": "return None\nself.linked_list.move_to_front"
                                }
                            ],
                            "content": "return None\nself.linked_list.move_to_front("
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "",
                            "range": [
                                311,
                                315
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": "",
                                    "range": [
                                        312,
                                        314
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "node",
                                            "range": [
                                                312,
                                                312
                                            ],
                                            "children": [],
                                            "content": ")"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "results",
                                            "range": [
                                                314,
                                                314
                                            ],
                                            "children": [],
                                            "content": "return"
                                        }
                                    ],
                                    "content": ")\nreturn"
                                }
                            ],
                            "content": "node)\nreturn node"
                        }
                    ],
                    "content": "query):\n\"\"\"Get the stored query result from the cache. \\n  \\n         Accessing a node updates its position to the front of the LRU list. \\n         \"\"\"\nnode=self.lookup[query]\nif node is None:\nreturn None\nself.linked_list.move_to_front(node)\nreturn node"
                }
            ],
            "content": ")\n\ndef get(self,query):\n\"\"\"Get the stored query result from the cache. \\n  \\n         Accessing a node updates its position to the front of the LRU list. \\n         \"\"\"\nnode=self.lookup[query]\nif node is None:\nreturn None\nself.linked_list.move_to_front(node)\nreturn node"
        },
        {
            "type": "FunctionDecl",
            "name": "set",
            "range": [
                317,
                476
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "",
                    "range": [
                        319,
                        325
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "self",
                            "range": [
                                320,
                                320
                            ],
                            "children": [],
                            "content": "def"
                        },
                        {
                            "type": "Parameter",
                            "name": "results",
                            "range": [
                                322,
                                322
                            ],
                            "children": [],
                            "content": "("
                        },
                        {
                            "type": "Parameter",
                            "name": "query",
                            "range": [
                                324,
                                324
                            ],
                            "children": [],
                            "content": ","
                        }
                    ],
                    "content": "\ndef set(self,results"
                },
                {
                    "type": "BlockStatement",
                    "name": "",
                    "range": [
                        327,
                        476
                    ],
                    "children": [
                        {
                            "type": "VariableDeclaration",
                            "name": "",
                            "range": [
                                332,
                                340
                            ],
                            "children": [
                                {
                                    "type": "VariableDeclarator",
                                    "name": "node",
                                    "range": [
                                        332,
                                        340
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "",
                                            "range": [
                                                334,
                                                339
                                            ],
                                            "children": [
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "",
                                                    "range": [
                                                        334,
                                                        336
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "self",
                                                            "range": [
                                                                334,
                                                                334
                                                            ],
                                                            "children": [],
                                                            "content": "\n"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "map",
                                                            "range": [
                                                                336,
                                                                336
                                                            ],
                                                            "children": [],
                                                            "content": "="
                                                        }
                                                    ],
                                                    "content": "\nnode="
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "query",
                                                    "range": [
                                                        338,
                                                        338
                                                    ],
                                                    "children": [],
                                                    "content": "."
                                                }
                                            ],
                                            "content": "\nnode=self.map"
                                        }
                                    ],
                                    "content": "\"Set the result for the given query key in the cache. \\n  \\n         When updating an entry, updates its position to the front of the LRU list. \\n         If the entry is new and the cache is at capacity, removes the oldest entry \\n         before the new entry is added. \\n         \"\"\"\nnode=self.map["
                                }
                            ],
                            "content": "\"Set the result for the given query key in the cache. \\n  \\n         When updating an entry, updates its position to the front of the LRU list. \\n         If the entry is new and the cache is at capacity, removes the oldest entry \\n         before the new entry is added. \\n         \"\"\"\nnode=self.map["
                        },
                        {
                            "type": "IfStatement",
                            "name": "",
                            "range": [
                                341,
                                372
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "name": "",
                                    "range": [
                                        342,
                                        345
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "node",
                                            "range": [
                                                342,
                                                342
                                            ],
                                            "children": [],
                                            "content": "]"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "None",
                                            "range": [
                                                344,
                                                344
                                            ],
                                            "children": [],
                                            "content": "if"
                                        }
                                    ],
                                    "content": "]\nif node"
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "",
                                    "range": [
                                        347,
                                        372
                                    ],
                                    "children": [
                                        {
                                            "type": "ExpressionStatement",
                                            "name": "",
                                            "range": [
                                                348,
                                                357
                                            ],
                                            "children": [
                                                {
                                                    "type": "AssignmentExpression",
                                                    "name": "",
                                                    "range": [
                                                        349,
                                                        356
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "name": "",
                                                            "range": [
                                                                349,
                                                                351
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "node",
                                                                    "range": [
                                                                        349,
                                                                        349
                                                                    ],
                                                                    "children": [],
                                                                    "content": ":"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "results",
                                                                    "range": [
                                                                        351,
                                                                        351
                                                                    ],
                                                                    "children": [],
                                                                    "content": "#"
                                                                }
                                                            ],
                                                            "content": ":\n#"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "results",
                                                            "range": [
                                                                356,
                                                                356
                                                            ],
                                                            "children": [],
                                                            "content": ","
                                                        }
                                                    ],
                                                    "content": ":\n#Key exists in cache,"
                                                }
                                            ],
                                            "content": "None:\n#Key exists in cache,update"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "name": "",
                                            "range": [
                                                358,
                                                371
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "",
                                                    "range": [
                                                        358,
                                                        370
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "name": "",
                                                            "range": [
                                                                358,
                                                                368
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "name": "",
                                                                    "range": [
                                                                        358,
                                                                        366
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "self",
                                                                            "range": [
                                                                                358,
                                                                                358
                                                                            ],
                                                                            "children": [],
                                                                            "content": "the"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "linked_list",
                                                                            "range": [
                                                                                366,
                                                                                366
                                                                            ],
                                                                            "children": [],
                                                                            "content": "\n"
                                                                        }
                                                                    ],
                                                                    "content": "the value\nnode.results=results\n"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "move_to_front",
                                                                    "range": [
                                                                        368,
                                                                        368
                                                                    ],
                                                                    "children": [],
                                                                    "content": "."
                                                                }
                                                            ],
                                                            "content": "the value\nnode.results=results\nself."
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "node",
                                                            "range": [
                                                                370,
                                                                370
                                                            ],
                                                            "children": [],
                                                            "content": "."
                                                        }
                                                    ],
                                                    "content": "the value\nnode.results=results\nself.linked_list."
                                                }
                                            ],
                                            "content": "the value\nnode.results=results\nself.linked_list.move_to_front"
                                        }
                                    ],
                                    "content": "not None:\n#Key exists in cache,update the value\nnode.results=results\nself.linked_list.move_to_front("
                                }
                            ],
                            "content": "query]\nif node is not None:\n#Key exists in cache,update the value\nnode.results=results\nself.linked_list.move_to_front("
                        },
                        {
                            "type": "ElseStatement",
                            "name": "",
                            "range": [
                                373,
                                476
                            ],
                            "children": [
                                {
                                    "type": "IfStatement",
                                    "name": "",
                                    "range": [
                                        384,
                                        431
                                    ],
                                    "children": [
                                        {
                                            "type": "BinaryExpression",
                                            "name": "",
                                            "range": [
                                                385,
                                                390
                                            ],
                                            "children": [
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "",
                                                    "range": [
                                                        385,
                                                        387
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "self",
                                                            "range": [
                                                                385,
                                                                385
                                                            ],
                                                            "children": [],
                                                            "content": "cache"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "size",
                                                            "range": [
                                                                387,
                                                                387
                                                            ],
                                                            "children": [],
                                                            "content": "if"
                                                        }
                                                    ],
                                                    "content": "cache\nif"
                                                },
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "",
                                                    "range": [
                                                        389,
                                                        392
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "self",
                                                            "range": [
                                                                389,
                                                                389
                                                            ],
                                                            "children": [],
                                                            "content": "."
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "MAX_SIZE",
                                                            "range": [
                                                                392,
                                                                392
                                                            ],
                                                            "children": [],
                                                            "content": "="
                                                        }
                                                    ],
                                                    "content": ".size=="
                                                }
                                            ],
                                            "content": "cache\nif self.size"
                                        },
                                        {
                                            "type": "BlockStatement",
                                            "name": "",
                                            "range": [
                                                394,
                                                431
                                            ],
                                            "children": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "name": "",
                                                    "range": [
                                                        395,
                                                        422
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "",
                                                            "range": [
                                                                395,
                                                                421
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "name": "",
                                                                    "range": [
                                                                        395,
                                                                        411
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "MemberExpression",
                                                                            "name": "",
                                                                            "range": [
                                                                                395,
                                                                                409
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "self",
                                                                                    "range": [
                                                                                        395,
                                                                                        395
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "MAX_SIZE"
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "lookup",
                                                                                    "range": [
                                                                                        409,
                                                                                        409
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "\n"
                                                                                }
                                                                            ],
                                                                            "content": "MAX_SIZE:\n#Remove the oldest entry from the linked list and lookup\n"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "pop",
                                                                            "range": [
                                                                                411,
                                                                                411
                                                                            ],
                                                                            "children": [],
                                                                            "content": "."
                                                                        }
                                                                    ],
                                                                    "content": "MAX_SIZE:\n#Remove the oldest entry from the linked list and lookup\nself."
                                                                },
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "name": "",
                                                                    "range": [
                                                                        413,
                                                                        419
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "MemberExpression",
                                                                            "name": "",
                                                                            "range": [
                                                                                413,
                                                                                417
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "self",
                                                                                    "range": [
                                                                                        413,
                                                                                        413
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "."
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "linked_list",
                                                                                    "range": [
                                                                                        417,
                                                                                        417
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "."
                                                                                }
                                                                            ],
                                                                            "content": ".pop(self."
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "tail",
                                                                            "range": [
                                                                                419,
                                                                                419
                                                                            ],
                                                                            "children": [],
                                                                            "content": "."
                                                                        }
                                                                    ],
                                                                    "content": ".pop(self.linked_list."
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "query",
                                                                    "range": [
                                                                        421,
                                                                        421
                                                                    ],
                                                                    "children": [],
                                                                    "content": "."
                                                                }
                                                            ],
                                                            "content": "MAX_SIZE:\n#Remove the oldest entry from the linked list and lookup\nself.lookup.pop(self.linked_list.tail."
                                                        }
                                                    ],
                                                    "content": "MAX_SIZE:\n#Remove the oldest entry from the linked list and lookup\nself.lookup.pop(self.linked_list.tail.query"
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "name": "",
                                                    "range": [
                                                        424,
                                                        430
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "",
                                                            "range": [
                                                                424,
                                                                429
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "name": "",
                                                                    "range": [
                                                                        424,
                                                                        428
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "MemberExpression",
                                                                            "name": "",
                                                                            "range": [
                                                                                424,
                                                                                426
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "self",
                                                                                    "range": [
                                                                                        424,
                                                                                        424
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "None"
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "linked_list",
                                                                                    "range": [
                                                                                        426,
                                                                                        426
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "\n"
                                                                                }
                                                                            ],
                                                                            "content": "None)\n"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "remove_from_tail",
                                                                            "range": [
                                                                                428,
                                                                                428
                                                                            ],
                                                                            "children": [],
                                                                            "content": "."
                                                                        }
                                                                    ],
                                                                    "content": "None)\nself."
                                                                }
                                                            ],
                                                            "content": "None)\nself.linked_list"
                                                        }
                                                    ],
                                                    "content": "None)\nself.linked_list."
                                                }
                                            ],
                                            "content": ".MAX_SIZE:\n#Remove the oldest entry from the linked list and lookup\nself.lookup.pop(self.linked_list.tail.query,None)\nself.linked_list.remove_from_tail"
                                        }
                                    ],
                                    "content": "in cache\nif self.size==self.MAX_SIZE:\n#Remove the oldest entry from the linked list and lookup\nself.lookup.pop(self.linked_list.tail.query,None)\nself.linked_list.remove_from_tail"
                                },
                                {
                                    "type": "ElseStatement",
                                    "name": "",
                                    "range": [
                                        432,
                                        476
                                    ],
                                    "children": [
                                        {
                                            "type": "ExpressionStatement",
                                            "name": "",
                                            "range": [
                                                435,
                                                440
                                            ],
                                            "children": [
                                                {
                                                    "type": "AssignmentExpression",
                                                    "name": "",
                                                    "range": [
                                                        436,
                                                        439
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "name": "",
                                                            "range": [
                                                                436,
                                                                438
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "self",
                                                                    "range": [
                                                                        436,
                                                                        436
                                                                    ],
                                                                    "children": [],
                                                                    "content": ":"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "size",
                                                                    "range": [
                                                                        438,
                                                                        438
                                                                    ],
                                                                    "children": [],
                                                                    "content": "self"
                                                                }
                                                            ],
                                                            "content": ":\nself"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "name": "1",
                                                            "range": [
                                                                439,
                                                                439
                                                            ],
                                                            "children": [],
                                                            "content": "."
                                                        }
                                                    ],
                                                    "content": ":\nself."
                                                }
                                            ],
                                            "content": "else:\nself.size"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "name": "",
                                            "range": [
                                                442,
                                                467
                                            ],
                                            "children": [
                                                {
                                                    "type": "AssignmentExpression",
                                                    "name": "",
                                                    "range": [
                                                        443,
                                                        466
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "name": "",
                                                            "range": [
                                                                443,
                                                                471
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "name": "",
                                                                    "range": [
                                                                        443,
                                                                        469
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "self",
                                                                            "range": [
                                                                                443,
                                                                                443
                                                                            ],
                                                                            "children": [],
                                                                            "content": "1"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "lookup",
                                                                            "range": [
                                                                                469,
                                                                                469
                                                                            ],
                                                                            "children": [],
                                                                            "content": ")"
                                                                        }
                                                                    ],
                                                                    "content": "1\n#Add the new key and value\nnew_node=Node(query,results)\nself.linked_list.append_to_front(new_node)"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "query",
                                                                    "range": [
                                                                        471,
                                                                        471
                                                                    ],
                                                                    "children": [],
                                                                    "content": "self"
                                                                }
                                                            ],
                                                            "content": "1\n#Add the new key and value\nnew_node=Node(query,results)\nself.linked_list.append_to_front(new_node)\nself"
                                                        },
                                                        {
                                                            "type": "NewExpression",
                                                            "name": "",
                                                            "range": [
                                                                450,
                                                                466
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "Node",
                                                                    "range": [
                                                                        450,
                                                                        450
                                                                    ],
                                                                    "children": [],
                                                                    "content": "and"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "query",
                                                                    "range": [
                                                                        454,
                                                                        454
                                                                    ],
                                                                    "children": [],
                                                                    "content": "="
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "results",
                                                                    "range": [
                                                                        456,
                                                                        456
                                                                    ],
                                                                    "children": [],
                                                                    "content": "("
                                                                }
                                                            ],
                                                            "content": "and value\nnew_node=Node(query,results)\nself.linked_list.append_to_front"
                                                        }
                                                    ],
                                                    "content": "1\n#Add the new key and value\nnew_node=Node(query,results)\nself.linked_list.append_to_front"
                                                }
                                            ],
                                            "content": "=1\n#Add the new key and value\nnew_node=Node(query,results)\nself.linked_list.append_to_front("
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "name": "",
                                            "range": [
                                                468,
                                                475
                                            ],
                                            "children": [
                                                {
                                                    "type": "AssignmentExpression",
                                                    "name": "",
                                                    "range": [
                                                        469,
                                                        475
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "name": "",
                                                            "range": [
                                                                469,
                                                                473
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "name": "",
                                                                    "range": [
                                                                        469,
                                                                        471
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "self",
                                                                            "range": [
                                                                                469,
                                                                                469
                                                                            ],
                                                                            "children": [],
                                                                            "content": ")"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "lookup",
                                                                            "range": [
                                                                                471,
                                                                                471
                                                                            ],
                                                                            "children": [],
                                                                            "content": "self"
                                                                        }
                                                                    ],
                                                                    "content": ")\nself"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "query",
                                                                    "range": [
                                                                        473,
                                                                        473
                                                                    ],
                                                                    "children": [],
                                                                    "content": "lookup"
                                                                }
                                                            ],
                                                            "content": ")\nself.lookup"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "new_node",
                                                            "range": [
                                                                475,
                                                                475
                                                            ],
                                                            "children": [],
                                                            "content": "query"
                                                        }
                                                    ],
                                                    "content": ")\nself.lookup[query"
                                                }
                                            ],
                                            "content": "new_node)\nself.lookup[query"
                                        }
                                    ],
                                    "content": "()\nelse:\nself.size+=1\n#Add the new key and value\nnew_node=Node(query,results)\nself.linked_list.append_to_front(new_node)\nself.lookup[query]"
                                }
                            ],
                            "content": "node)\nelse:\n#Key does not exist in cache\nif self.size==self.MAX_SIZE:\n#Remove the oldest entry from the linked list and lookup\nself.lookup.pop(self.linked_list.tail.query,None)\nself.linked_list.remove_from_tail()\nelse:\nself.size+=1\n#Add the new key and value\nnew_node=Node(query,results)\nself.linked_list.append_to_front(new_node)\nself.lookup[query]"
                        }
                    ],
                    "content": "query):\n\"\"\"Set the result for the given query key in the cache. \\n  \\n         When updating an entry, updates its position to the front of the LRU list. \\n         If the entry is new and the cache is at capacity, removes the oldest entry \\n         before the new entry is added. \\n         \"\"\"\nnode=self.map[query]\nif node is not None:\n#Key exists in cache,update the value\nnode.results=results\nself.linked_list.move_to_front(node)\nelse:\n#Key does not exist in cache\nif self.size==self.MAX_SIZE:\n#Remove the oldest entry from the linked list and lookup\nself.lookup.pop(self.linked_list.tail.query,None)\nself.linked_list.remove_from_tail()\nelse:\nself.size+=1\n#Add the new key and value\nnew_node=Node(query,results)\nself.linked_list.append_to_front(new_node)\nself.lookup[query]"
                }
            ],
            "content": "results\n\ndef set(self,results,query):\n\"\"\"Set the result for the given query key in the cache. \\n  \\n         When updating an entry, updates its position to the front of the LRU list. \\n         If the entry is new and the cache is at capacity, removes the oldest entry \\n         before the new entry is added. \\n         \"\"\"\nnode=self.map[query]\nif node is not None:\n#Key exists in cache,update the value\nnode.results=results\nself.linked_list.move_to_front(node)\nelse:\n#Key does not exist in cache\nif self.size==self.MAX_SIZE:\n#Remove the oldest entry from the linked list and lookup\nself.lookup.pop(self.linked_list.tail.query,None)\nself.linked_list.remove_from_tail()\nelse:\nself.size+=1\n#Add the new key and value\nnew_node=Node(query,results)\nself.linked_list.append_to_front(new_node)\nself.lookup[query]"
        }
    ],
    "content": "#-*-coding:utf-8-*-\n\n\nclass QueryApi(object):\n\ndef __init__(self,memory_cache,reverse_index_cluster):\nself.memory_cache=memory_cache\nself.reverse_index_cluster=reverse_index_cluster\n\ndef parse_query(self,query):\n\"\"\"Remove markup, break text into terms, deal with typos, \\n         normalize capitalization, convert to use boolean operations. \\n         \"\"\"\n...\n\ndef process_query(self,query):\nquery=self.parse_query(query)\nresults=self.memory_cache.get(query)\nif results is None:\nresults=self.reverse_index_cluster.process_search(query)\nself.memory_cache.set(query,results)\nreturn results\n\n\nclass Node(object):\n\ndef __init__(self,query,results):\nself.query=query\nself.results=results\n\n\nclass LinkedList(object):\n\ndef __init__(self):\nself.head=None\nself.tail=None\n\ndef move_to_front(self,node):\n...\n\ndef append_to_front(self,node):\n...\n\ndef remove_from_tail(self):\n...\n\n\nclass Cache(object):\n\ndef __init__(self,MAX_SIZE):\nself.MAX_SIZE=MAX_SIZE\nself.size=0\nself.lookup={}\nself.linked_list=LinkedList()\n\ndef get(self,query):\n\"\"\"Get the stored query result from the cache. \\n  \\n         Accessing a node updates its position to the front of the LRU list. \\n         \"\"\"\nnode=self.lookup[query]\nif node is None:\nreturn None\nself.linked_list.move_to_front(node)\nreturn node.results\n\ndef set(self,results,query):\n\"\"\"Set the result for the given query key in the cache. \\n  \\n         When updating an entry, updates its position to the front of the LRU list. \\n         If the entry is new and the cache is at capacity, removes the oldest entry \\n         before the new entry is added. \\n         \"\"\"\nnode=self.map[query]\nif node is not None:\n#Key exists in cache,update the value\nnode.results=results\nself.linked_list.move_to_front(node)\nelse:\n#Key does not exist in cache\nif self.size==self.MAX_SIZE:\n#Remove the oldest entry from the linked list and lookup\nself.lookup.pop(self.linked_list.tail.query,None)\nself.linked_list.remove_from_tail()\nelse:\nself.size+=1\n#Add the new key and value\nnew_node=Node(query,results)\nself.linked_list.append_to_front(new_node)\nself.lookup[query]="
}