{
    "type": "Program",
    "name": "Global",
    "range": [
        0,
        178
    ],
    "children": [
        {
            "type": "Comment",
            "name": "",
            "range": [
                0,
                12
            ],
            "children": [],
            "content": "#-*-coding:utf-8-*-\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                14,
                20
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "MRJob",
                    "range": [
                        14,
                        20
                    ],
                    "children": [
                        {
                            "type": "ImportDefaultSpecifier",
                            "name": "MRJob",
                            "range": [
                                19,
                                20
                            ],
                            "children": [],
                            "content": "MRJob\n"
                        },
                        {
                            "type": "ImportNamespaceSpecifier",
                            "name": "mrjob.job",
                            "range": [
                                14,
                                18
                            ],
                            "children": [],
                            "content": "from mrjob.job import"
                        }
                    ],
                    "content": "from mrjob.job import MRJob\n"
                }
            ],
            "content": "from mrjob.job import MRJob\n"
        },
        {
            "type": "ClassDecl",
            "name": "HitCounts",
            "range": [
                23,
                29
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "MRJob",
                    "range": [
                        25,
                        27
                    ],
                    "children": [],
                    "content": "(MRJob)"
                }
            ],
            "content": "class HitCounts(MRJob):\n"
        },
        {
            "type": "FunctionDecl",
            "name": "extract_url",
            "range": [
                31,
                45
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "",
                    "range": [
                        33,
                        37
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "self",
                            "range": [
                                34,
                                34
                            ],
                            "children": [],
                            "content": "self"
                        },
                        {
                            "type": "Parameter",
                            "name": "line",
                            "range": [
                                36,
                                36
                            ],
                            "children": [],
                            "content": "line"
                        }
                    ],
                    "content": "(self,line)"
                },
                {
                    "type": "Docstring",
                    "name": "",
                    "range": [
                        40,
                        42
                    ],
                    "children": [],
                    "content": "\"\"\"Extract the generated url from the log line.\"\"\""
                },
                {
                    "type": "PassStatement",
                    "name": "",
                    "range": [
                        44,
                        44
                    ],
                    "children": [],
                    "content": "pass"
                }
            ],
            "content": "def extract_url(self,line):\n\"\"\"Extract the generated url from the log line.\"\"\"\npass\n"
        },
        {
            "type": "FunctionDecl",
            "name": "extract_year_month",
            "range": [
                47,
                61
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "",
                    "range": [
                        49,
                        53
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "self",
                            "range": [
                                50,
                                50
                            ],
                            "children": [],
                            "content": "self"
                        },
                        {
                            "type": "Parameter",
                            "name": "line",
                            "range": [
                                52,
                                52
                            ],
                            "children": [],
                            "content": "line"
                        }
                    ],
                    "content": "(self,line)"
                },
                {
                    "type": "Docstring",
                    "name": "",
                    "range": [
                        56,
                        58
                    ],
                    "children": [],
                    "content": "\"\"\"Return the year and month portions of the timestamp.\"\"\""
                },
                {
                    "type": "PassStatement",
                    "name": "",
                    "range": [
                        60,
                        60
                    ],
                    "children": [],
                    "content": "pass"
                }
            ],
            "content": "def extract_year_month(self,line):\n\"\"\"Return the year and month portions of the timestamp.\"\"\"\npass\n"
        },
        {
            "type": "FunctionDecl",
            "name": "mapper",
            "range": [
                63,
                105
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "",
                    "range": [
                        65,
                        71
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "self",
                            "range": [
                                66,
                                66
                            ],
                            "children": [],
                            "content": "self"
                        },
                        {
                            "type": "Parameter",
                            "name": "_",
                            "range": [
                                68,
                                68
                            ],
                            "children": [],
                            "content": "_"
                        },
                        {
                            "type": "Parameter",
                            "name": "line",
                            "range": [
                                70,
                                70
                            ],
                            "children": [],
                            "content": "line"
                        }
                    ],
                    "content": "(self,_,line)"
                },
                {
                    "type": "Docstring",
                    "name": "",
                    "range": [
                        74,
                        76
                    ],
                    "children": [],
                    "content": "\"\"\"Parse each log line, extract and transform relevant lines. \\n  \\n         Emit key value pairs of the form: \\n  \\n         (2016-01, url0), 1 \\n         (2016-01, url0), 1 \\n         (2016-01, url1), 1 \\n         \"\"\""
                },
                {
                    "type": "Assignment",
                    "name": "url",
                    "range": [
                        78,
                        85
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "extract_url",
                            "range": [
                                80,
                                85
                            ],
                            "children": [
                                {
                                    "type": "ArgumentList",
                                    "name": "",
                                    "range": [
                                        83,
                                        85
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "line",
                                            "range": [
                                                84,
                                                84
                                            ],
                                            "children": [],
                                            "content": "line"
                                        }
                                    ],
                                    "content": "(line)"
                                }
                            ],
                            "content": "self.extract_url(line)"
                        }
                    ],
                    "content": "url=self.extract_url(line)"
                },
                {
                    "type": "Assignment",
                    "name": "period",
                    "range": [
                        87,
                        94
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "extract_year_month",
                            "range": [
                                89,
                                94
                            ],
                            "children": [
                                {
                                    "type": "ArgumentList",
                                    "name": "",
                                    "range": [
                                        92,
                                        94
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "line",
                                            "range": [
                                                93,
                                                93
                                            ],
                                            "children": [],
                                            "content": "line"
                                        }
                                    ],
                                    "content": "(line)"
                                }
                            ],
                            "content": "self.extract_year_month(line)"
                        }
                    ],
                    "content": "period=self.extract_year_month(line)"
                },
                {
                    "type": "YieldStatement",
                    "name": "",
                    "range": [
                        96,
                        104
                    ],
                    "children": [
                        {
                            "type": "Tuple",
                            "name": "",
                            "range": [
                                97,
                                101
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "period",
                                    "range": [
                                        98,
                                        98
                                    ],
                                    "children": [],
                                    "content": "period"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "url",
                                    "range": [
                                        100,
                                        100
                                    ],
                                    "children": [],
                                    "content": "url"
                                }
                            ],
                            "content": "(period,url)"
                        },
                        {
                            "type": "Literal",
                            "name": "1",
                            "range": [
                                103,
                                103
                            ],
                            "children": [],
                            "content": "1"
                        }
                    ],
                    "content": "yield(period,url),1\n"
                }
            ],
            "content": "def mapper(self,_,line):\n\"\"\"Parse each log line, extract and transform relevant lines. \\n  \\n         Emit key value pairs of the form: \\n  \\n         (2016-01, url0), 1 \\n         (2016-01, url0), 1 \\n         (2016-01, url1), 1 \\n         \"\"\"\nurl=self.extract_url(line)\nperiod=self.extract_year_month(line)\nyield(period,url),1\n\n"
        },
        {
            "type": "FunctionDecl",
            "name": "reducer",
            "range": [
                106,
                129
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "",
                    "range": [
                        108,
                        114
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "self",
                            "range": [
                                109,
                                109
                            ],
                            "children": [],
                            "content": "self"
                        },
                        {
                            "type": "Parameter",
                            "name": "key",
                            "range": [
                                111,
                                111
                            ],
                            "children": [],
                            "content": "key"
                        },
                        {
                            "type": "Parameter",
                            "name": "values",
                            "range": [
                                113,
                                113
                            ],
                            "children": [],
                            "content": "values"
                        }
                    ],
                    "content": "(self,key,values)"
                },
                {
                    "type": "Docstring",
                    "name": "",
                    "range": [
                        117,
                        119
                    ],
                    "children": [],
                    "content": "\"\"\"Sum values for each key. \\n  \\n         (2016-01, url0), 2 \\n         (2016-01, url1), 1 \\n         \"\"\""
                },
                {
                    "type": "YieldStatement",
                    "name": "",
                    "range": [
                        121,
                        128
                    ],
                    "children": [
                        {
                            "type": "Tuple",
                            "name": "",
                            "range": [
                                122,
                                124
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "key",
                                    "range": [
                                        122,
                                        122
                                    ],
                                    "children": [],
                                    "content": "key"
                                },
                                {
                                    "type": "CallExpression",
                                    "name": "sum",
                                    "range": [
                                        124,
                                        127
                                    ],
                                    "children": [
                                        {
                                            "type": "ArgumentList",
                                            "name": "",
                                            "range": [
                                                125,
                                                127
                                            ],
                                            "children": [
                                                {
                                                    "type": "Argument",
                                                    "name": "values",
                                                    "range": [
                                                        126,
                                                        126
                                                    ],
                                                    "children": [],
                                                    "content": "values"
                                                }
                                            ],
                                            "content": "(values)"
                                        }
                                    ],
                                    "content": "sum(values)"
                                }
                            ],
                            "content": "key,sum"
                        }
                    ],
                    "content": "yield key,sum(values)\n"
                }
            ],
            "content": "def reducer(self,key,values):\n\"\"\"Sum values for each key. \\n  \\n         (2016-01, url0), 2 \\n         (2016-01, url1), 1 \\n         \"\"\"\nyield key,sum(values)\n\n"
        },
        {
            "type": "FunctionDecl",
            "name": "steps",
            "range": [
                130,
                164
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "",
                    "range": [
                        132,
                        134
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "self",
                            "range": [
                                133,
                                133
                            ],
                            "children": [],
                            "content": "self"
                        }
                    ],
                    "content": "(self)"
                },
                {
                    "type": "Docstring",
                    "name": "",
                    "range": [
                        137,
                        139
                    ],
                    "children": [],
                    "content": "\"\"\"Run the map and reduce steps.\"\"\""
                },
                {
                    "type": "ReturnStatement",
                    "name": "",
                    "range": [
                        141,
                        163
                    ],
                    "children": [
                        {
                            "type": "ArrayLiteral",
                            "name": "",
                            "range": [
                                142,
                                162
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "mr",
                                    "range": [
                                        144,
                                        160
                                    ],
                                    "children": [
                                        {
                                            "type": "ArgumentList",
                                            "name": "",
                                            "range": [
                                                147,
                                                160
                                            ],
                                            "children": [
                                                {
                                                    "type": "KeywordArgument",
                                                    "name": "mapper",
                                                    "range": [
                                                        148,
                                                        153
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "self",
                                                            "range": [
                                                                150,
                                                                150
                                                            ],
                                                            "children": [],
                                                            "content": "self"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "mapper",
                                                            "range": [
                                                                152,
                                                                152
                                                            ],
                                                            "children": [],
                                                            "content": "mapper"
                                                        }
                                                    ],
                                                    "content": "mapper=self.mapper,"
                                                },
                                                {
                                                    "type": "KeywordArgument",
                                                    "name": "reducer",
                                                    "range": [
                                                        155,
                                                        160
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "self",
                                                            "range": [
                                                                157,
                                                                157
                                                            ],
                                                            "children": [],
                                                            "content": "self"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "reducer",
                                                            "range": [
                                                                159,
                                                                159
                                                            ],
                                                            "children": [],
                                                            "content": "reducer"
                                                        }
                                                    ],
                                                    "content": "reducer=self.reducer)"
                                                }
                                            ],
                                            "content": "(mapper=self.mapper,\nreducer=self.reducer)"
                                        }
                                    ],
                                    "content": "self.mr(mapper=self.mapper,\nreducer=self.reducer)"
                                }
                            ],
                            "content": "[\nself.mr(mapper=self.mapper,\nreducer=self.reducer)\n]"
                        }
                    ],
                    "content": "return[\nself.mr(mapper=self.mapper,\nreducer=self.reducer)\n]\n"
                }
            ],
            "content": "def steps(self):\n\"\"\"Run the map and reduce steps.\"\"\"\nreturn[\nself.mr(mapper=self.mapper,\nreducer=self.reducer)\n]\n\n"
        },
        {
            "type": "IfStatement",
            "name": "",
            "range": [
                165,
                170
            ],
            "children": [
                {
                    "type": "BinaryExpression",
                    "name": "",
                    "range": [
                        166,
                        169
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "__name__",
                            "range": [
                                166,
                                166
                            ],
                            "children": [],
                            "content": "if"
                        },
                        {
                            "type": "Literal",
                            "name": "'__main__'",
                            "range": [
                                169,
                                169
                            ],
                            "children": [],
                            "content": "="
                        }
                    ],
                    "content": "if __name__=="
                },
                {
                    "type": "BlockStatement",
                    "name": "",
                    "range": [
                        170,
                        177
                    ],
                    "children": [
                        {
                            "type": "ExpressionStatement",
                            "name": "",
                            "range": [
                                172,
                                176
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "",
                                    "range": [
                                        172,
                                        176
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "",
                                            "range": [
                                                172,
                                                174
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "HitCounts",
                                                    "range": [
                                                        172,
                                                        172
                                                    ],
                                                    "children": [],
                                                    "content": "\n"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "run",
                                                    "range": [
                                                        174,
                                                        174
                                                    ],
                                                    "children": [],
                                                    "content": "."
                                                }
                                            ],
                                            "content": "\nHitCounts."
                                        }
                                    ],
                                    "content": "\nHitCounts.run("
                                }
                            ],
                            "content": "\nHitCounts.run("
                        }
                    ],
                    "content": "'__main__':\nHitCounts.run()"
                }
            ],
            "content": "\nif __name__=='__main__'"
        }
    ],
    "content": "#-*-coding:utf-8-*-\n\nfrom mrjob.job import MRJob\n\n\nclass HitCounts(MRJob):\n\ndef extract_url(self,line):\n\"\"\"Extract the generated url from the log line.\"\"\"\npass\n\ndef extract_year_month(self,line):\n\"\"\"Return the year and month portions of the timestamp.\"\"\"\npass\n\ndef mapper(self,_,line):\n\"\"\"Parse each log line, extract and transform relevant lines. \\n  \\n         Emit key value pairs of the form: \\n  \\n         (2016-01, url0), 1 \\n         (2016-01, url0), 1 \\n         (2016-01, url1), 1 \\n         \"\"\"\nurl=self.extract_url(line)\nperiod=self.extract_year_month(line)\nyield(period,url),1\n\ndef reducer(self,key,values):\n\"\"\"Sum values for each key. \\n  \\n         (2016-01, url0), 2 \\n         (2016-01, url1), 1 \\n         \"\"\"\nyield key,sum(values)\n\ndef steps(self):\n\"\"\"Run the map and reduce steps.\"\"\"\nreturn[\nself.mr(mapper=self.mapper,\nreducer=self.reducer)\n]\n\n\nif __name__=='__main__':\nHitCounts.run()\n"
}