{
    "type": "Program",
    "name": "Global",
    "range": [
        13,
        193
    ],
    "children": [
        {
            "type": "ClassDecl",
            "name": "APIKeyContainer",
            "range": [
                13,
                41
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "NamedTuple",
                    "range": [
                        15,
                        17
                    ],
                    "children": [],
                    "content": "(NamedTuple)"
                },
                {
                    "type": "Docstring",
                    "name": "Container for API key parts.",
                    "range": [
                        20,
                        22
                    ],
                    "children": [],
                    "content": "\"\"\"Container for API key parts.\"\"\""
                },
                {
                    "type": "FieldDecl",
                    "name": "raw",
                    "range": [
                        25,
                        27
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                27,
                                27
                            ],
                            "children": [],
                            "content": "str"
                        }
                    ],
                    "content": "raw:str"
                },
                {
                    "type": "FieldDecl",
                    "name": "prefix",
                    "range": [
                        29,
                        31
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                31,
                                31
                            ],
                            "children": [],
                            "content": "str"
                        }
                    ],
                    "content": "prefix:str"
                },
                {
                    "type": "FieldDecl",
                    "name": "postfix",
                    "range": [
                        33,
                        35
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                35,
                                35
                            ],
                            "children": [],
                            "content": "str"
                        }
                    ],
                    "content": "postfix:str"
                },
                {
                    "type": "FieldDecl",
                    "name": "hash",
                    "range": [
                        37,
                        39
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                39,
                                39
                            ],
                            "children": [],
                            "content": "str"
                        }
                    ],
                    "content": "hash:str"
                }
            ],
            "content": "class APIKeyContainer(NamedTuple):\n\"\"\"Container for API key parts.\"\"\"\n\nraw:str\nprefix:str\npostfix:str\nhash:str\n\n"
        },
        {
            "type": "ClassDecl",
            "name": "APIKeyManager",
            "range": [
                42,
                63
            ],
            "children": [
                {
                    "type": "VariableDecl",
                    "name": "PREFIX",
                    "range": [
                        46,
                        50
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                48,
                                48
                            ],
                            "children": [],
                            "content": ":"
                        },
                        {
                            "type": "Assignment",
                            "name": "=",
                            "range": [
                                49,
                                50
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"agpt_\"",
                                    "range": [
                                        50,
                                        50
                                    ],
                                    "children": [],
                                    "content": "="
                                }
                            ],
                            "content": "str="
                        }
                    ],
                    "content": "\nPREFIX:str="
                },
                {
                    "type": "VariableDecl",
                    "name": "PREFIX_LENGTH",
                    "range": [
                        52,
                        56
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "int",
                            "range": [
                                54,
                                54
                            ],
                            "children": [],
                            "content": ":"
                        },
                        {
                            "type": "Assignment",
                            "name": "=",
                            "range": [
                                55,
                                56
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "8",
                                    "range": [
                                        56,
                                        56
                                    ],
                                    "children": [],
                                    "content": "="
                                }
                            ],
                            "content": "int="
                        }
                    ],
                    "content": "\nPREFIX_LENGTH:int="
                },
                {
                    "type": "VariableDecl",
                    "name": "POSTFIX_LENGTH",
                    "range": [
                        58,
                        62
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "int",
                            "range": [
                                60,
                                60
                            ],
                            "children": [],
                            "content": ":"
                        },
                        {
                            "type": "Assignment",
                            "name": "=",
                            "range": [
                                61,
                                62
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "8",
                                    "range": [
                                        62,
                                        62
                                    ],
                                    "children": [],
                                    "content": "="
                                }
                            ],
                            "content": "int="
                        }
                    ],
                    "content": "\nPOSTFIX_LENGTH:int="
                }
            ],
            "content": "\nclass APIKeyManager:\nPREFIX:str=\"agpt_\"\nPREFIX_LENGTH:int=8\nPOSTFIX_LENGTH:int=8"
        },
        {
            "type": "FunctionDecl",
            "name": "generate_api_key",
            "range": [
                65,
                135
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "self",
                    "range": [
                        68,
                        68
                    ],
                    "children": [],
                    "content": "("
                },
                {
                    "type": "ReturnTypeAnnotation",
                    "name": "APIKeyContainer",
                    "range": [
                        72,
                        72
                    ],
                    "children": [],
                    "content": ">"
                },
                {
                    "type": "BlockStatement",
                    "name": "",
                    "range": [
                        74,
                        135
                    ],
                    "children": [
                        {
                            "type": "VariableDecl",
                            "name": "raw_key",
                            "range": [
                                79,
                                83
                            ],
                            "children": [
                                {
                                    "type": "Assignment",
                                    "name": "=",
                                    "range": [
                                        80,
                                        83
                                    ],
                                    "children": [
                                        {
                                            "type": "TemplateLiteral",
                                            "name": "f\"{self.PREFIX}{secrets.token_urlsafe(32)}\"",
                                            "range": [
                                                81,
                                                83
                                            ],
                                            "children": [],
                                            "content": "=f \"{self.PREFIX}{secrets.token_urlsafe(32)}\""
                                        }
                                    ],
                                    "content": "raw_key=f \"{self.PREFIX}{secrets.token_urlsafe(32)}\""
                                }
                            ],
                            "content": "\nraw_key=f \"{self.PREFIX}{secrets.token_urlsafe(32)}\""
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "return",
                            "range": [
                                84,
                                135
                            ],
                            "children": [
                                {
                                    "type": "NewExpression",
                                    "name": "APIKeyContainer",
                                    "range": [
                                        85,
                                        135
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "raw",
                                            "range": [
                                                88,
                                                90
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "raw_key",
                                                    "range": [
                                                        90,
                                                        90
                                                    ],
                                                    "children": [],
                                                    "content": "="
                                                }
                                            ],
                                            "content": "\nraw="
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "prefix",
                                            "range": [
                                                93,
                                                102
                                            ],
                                            "children": [
                                                {
                                                    "type": "SliceExpression",
                                                    "name": "raw_key[:self.PREFIX_LENGTH]",
                                                    "range": [
                                                        95,
                                                        101
                                                    ],
                                                    "children": [],
                                                    "content": "=raw_key[:self.PREFIX_LENGTH"
                                                }
                                            ],
                                            "content": "\nprefix=raw_key[:self.PREFIX_LENGTH]"
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "postfix",
                                            "range": [
                                                104,
                                                114
                                            ],
                                            "children": [
                                                {
                                                    "type": "SliceExpression",
                                                    "name": "raw_key[-self.POSTFIX_LENGTH:]",
                                                    "range": [
                                                        106,
                                                        113
                                                    ],
                                                    "children": [],
                                                    "content": "=raw_key[-self.POSTFIX_LENGTH:"
                                                }
                                            ],
                                            "content": "\npostfix=raw_key[-self.POSTFIX_LENGTH:]"
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "hash",
                                            "range": [
                                                116,
                                                132
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "hashlib.sha256(raw_key.encode()).hexdigest()",
                                                    "range": [
                                                        118,
                                                        131
                                                    ],
                                                    "children": [],
                                                    "content": "=hashlib.sha256(raw_key.encode()).hexdigest("
                                                }
                                            ],
                                            "content": "\nhash=hashlib.sha256(raw_key.encode()).hexdigest()"
                                        }
                                    ],
                                    "content": "return APIKeyContainer(\nraw=raw_key,\nprefix=raw_key[:self.PREFIX_LENGTH],\npostfix=raw_key[-self.POSTFIX_LENGTH:],\nhash=hashlib.sha256(raw_key.encode()).hexdigest(),\n)"
                                }
                            ],
                            "content": "\nreturn APIKeyContainer(\nraw=raw_key,\nprefix=raw_key[:self.PREFIX_LENGTH],\npostfix=raw_key[-self.POSTFIX_LENGTH:],\nhash=hashlib.sha256(raw_key.encode()).hexdigest(),\n)"
                        }
                    ],
                    "content": ":\n\"\"\"Generate a new API key with all its parts.\"\"\"\nraw_key=f \"{self.PREFIX}{secrets.token_urlsafe(32)}\"\nreturn APIKeyContainer(\nraw=raw_key,\nprefix=raw_key[:self.PREFIX_LENGTH],\npostfix=raw_key[-self.POSTFIX_LENGTH:],\nhash=hashlib.sha256(raw_key.encode()).hexdigest(),\n)"
                }
            ],
            "content": "\ndef generate_api_key(self)->APIKeyContainer:\n\"\"\"Generate a new API key with all its parts.\"\"\"\nraw_key=f \"{self.PREFIX}{secrets.token_urlsafe(32)}\"\nreturn APIKeyContainer(\nraw=raw_key,\nprefix=raw_key[:self.PREFIX_LENGTH],\npostfix=raw_key[-self.POSTFIX_LENGTH:],\nhash=hashlib.sha256(raw_key.encode()).hexdigest(),\n)"
        },
        {
            "type": "FunctionDecl",
            "name": "verify_api_key",
            "range": [
                137,
                192
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "self",
                    "range": [
                        140,
                        140
                    ],
                    "children": [],
                    "content": "("
                },
                {
                    "type": "Parameter",
                    "name": "provided_key",
                    "range": [
                        142,
                        142
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                144,
                                144
                            ],
                            "children": [],
                            "content": ":"
                        }
                    ],
                    "content": ","
                },
                {
                    "type": "Parameter",
                    "name": "stored_hash",
                    "range": [
                        146,
                        146
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                148,
                                148
                            ],
                            "children": [],
                            "content": ":"
                        }
                    ],
                    "content": ","
                },
                {
                    "type": "ReturnTypeAnnotation",
                    "name": "bool",
                    "range": [
                        152,
                        152
                    ],
                    "children": [],
                    "content": ">"
                },
                {
                    "type": "BlockStatement",
                    "name": "",
                    "range": [
                        154,
                        192
                    ],
                    "children": [
                        {
                            "type": "IfStatement",
                            "name": "if",
                            "range": [
                                159,
                                173
                            ],
                            "children": [
                                {
                                    "type": "UnaryExpression",
                                    "name": "not",
                                    "range": [
                                        160,
                                        160
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "provided_key.startswith(self.PREFIX)",
                                            "range": [
                                                161,
                                                168
                                            ],
                                            "children": [],
                                            "content": "not provided_key.startswith(self.PREFIX"
                                        }
                                    ],
                                    "content": "if"
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "",
                                    "range": [
                                        170,
                                        173
                                    ],
                                    "children": [
                                        {
                                            "type": "ReturnStatement",
                                            "name": "return",
                                            "range": [
                                                171,
                                                172
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "False",
                                                    "range": [
                                                        172,
                                                        172
                                                    ],
                                                    "children": [],
                                                    "content": "return"
                                                }
                                            ],
                                            "content": "\nreturn"
                                        }
                                    ],
                                    "content": ":\nreturn False"
                                }
                            ],
                            "content": "\nif not provided_key.startswith(self.PREFIX):\nreturn False"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "return",
                            "range": [
                                174,
                                192
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "name": "==",
                                    "range": [
                                        189,
                                        190
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "hashlib.sha256(provided_key.encode()).hexdigest()",
                                            "range": [
                                                175,
                                                188
                                            ],
                                            "children": [],
                                            "content": "return hashlib.sha256(provided_key.encode()).hexdigest("
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "stored_hash",
                                            "range": [
                                                191,
                                                191
                                            ],
                                            "children": [],
                                            "content": "="
                                        }
                                    ],
                                    "content": ")="
                                }
                            ],
                            "content": "\nreturn hashlib.sha256(provided_key.encode()).hexdigest()==stored_hash"
                        }
                    ],
                    "content": ":\n\"\"\"Verify if a provided API key matches the stored hash.\"\"\"\nif not provided_key.startswith(self.PREFIX):\nreturn False\nreturn hashlib.sha256(provided_key.encode()).hexdigest()==stored_hash"
                }
            ],
            "content": "\ndef verify_api_key(self,provided_key:str,stored_hash:str)->bool:\n\"\"\"Verify if a provided API key matches the stored hash.\"\"\"\nif not provided_key.startswith(self.PREFIX):\nreturn False\nreturn hashlib.sha256(provided_key.encode()).hexdigest()==stored_hash"
        }
    ],
    "content": "class APIKeyContainer(NamedTuple):\n\"\"\"Container for API key parts.\"\"\"\n\nraw:str\nprefix:str\npostfix:str\nhash:str\n\n\nclass APIKeyManager:\nPREFIX:str=\"agpt_\"\nPREFIX_LENGTH:int=8\nPOSTFIX_LENGTH:int=8\n\ndef generate_api_key(self)->APIKeyContainer:\n\"\"\"Generate a new API key with all its parts.\"\"\"\nraw_key=f \"{self.PREFIX}{secrets.token_urlsafe(32)}\"\nreturn APIKeyContainer(\nraw=raw_key,\nprefix=raw_key[:self.PREFIX_LENGTH],\npostfix=raw_key[-self.POSTFIX_LENGTH:],\nhash=hashlib.sha256(raw_key.encode()).hexdigest(),\n)\n\ndef verify_api_key(self,provided_key:str,stored_hash:str)->bool:\n\"\"\"Verify if a provided API key matches the stored hash.\"\"\"\nif not provided_key.startswith(self.PREFIX):\nreturn False\nreturn hashlib.sha256(provided_key.encode()).hexdigest()==stored_hash\n"
}