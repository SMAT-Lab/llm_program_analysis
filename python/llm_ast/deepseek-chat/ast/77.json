{
    "type": "Program",
    "name": "Global",
    "range": [
        26,
        1197
    ],
    "children": [
        {
            "type": "FunctionDecl",
            "name": "make_lowpass",
            "range": [
                26,
                162
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "parameters",
                    "range": [
                        28,
                        52
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "frequency",
                            "range": [
                                30,
                                32
                            ],
                            "children": [],
                            "content": "frequency:int"
                        },
                        {
                            "type": "Parameter",
                            "name": "samplerate",
                            "range": [
                                35,
                                37
                            ],
                            "children": [],
                            "content": "samplerate:int"
                        },
                        {
                            "type": "Parameter",
                            "name": "q_factor",
                            "range": [
                                40,
                                50
                            ],
                            "children": [],
                            "content": "q_factor:float=1/sqrt(2),"
                        }
                    ],
                    "content": "(\nfrequency:int,\nsamplerate:int,\nq_factor:float=1/sqrt(2),\n)"
                },
                {
                    "type": "ReturnType",
                    "name": "IIRFilter",
                    "range": [
                        55,
                        55
                    ],
                    "children": [],
                    "content": "IIRFilter"
                },
                {
                    "type": "Docstring",
                    "name": "docstring",
                    "range": [
                        58,
                        60
                    ],
                    "children": [],
                    "content": "\"\"\" \\n     Creates a low-pass filter \\n  \\n     >>> filter = make_lowpass(1000, 48000) \\n     >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE \\n     [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.004277569313094809, \\n      0.008555138626189618, 0.004277569313094809] \\n     \"\"\""
                },
                {
                    "type": "VariableDecl",
                    "name": "w0",
                    "range": [
                        62,
                        69
                    ],
                    "children": [],
                    "content": "w0=tau*frequency/samplerate\n"
                },
                {
                    "type": "VariableDecl",
                    "name": "_sin",
                    "range": [
                        70,
                        76
                    ],
                    "children": [],
                    "content": "_sin=sin(w0)\n"
                },
                {
                    "type": "VariableDecl",
                    "name": "_cos",
                    "range": [
                        77,
                        83
                    ],
                    "children": [],
                    "content": "_cos=cos(w0)\n"
                },
                {
                    "type": "VariableDecl",
                    "name": "alpha",
                    "range": [
                        84,
                        93
                    ],
                    "children": [],
                    "content": "alpha=_sin/(2*q_factor)\n"
                },
                {
                    "type": "VariableDecl",
                    "name": "b0",
                    "range": [
                        95,
                        104
                    ],
                    "children": [],
                    "content": "b0=(1-_cos)/2\n"
                },
                {
                    "type": "VariableDecl",
                    "name": "b1",
                    "range": [
                        105,
                        110
                    ],
                    "children": [],
                    "content": "b1=1-_cos\n"
                },
                {
                    "type": "VariableDecl",
                    "name": "a0",
                    "range": [
                        112,
                        117
                    ],
                    "children": [],
                    "content": "a0=1+alpha\n"
                },
                {
                    "type": "VariableDecl",
                    "name": "a1",
                    "range": [
                        118,
                        124
                    ],
                    "children": [],
                    "content": "a1=-2*_cos\n"
                },
                {
                    "type": "VariableDecl",
                    "name": "a2",
                    "range": [
                        125,
                        130
                    ],
                    "children": [],
                    "content": "a2=1-alpha\n"
                },
                {
                    "type": "VariableDecl",
                    "name": "filt",
                    "range": [
                        132,
                        138
                    ],
                    "children": [],
                    "content": "filt=IIRFilter(2)\n"
                },
                {
                    "type": "CallExpression",
                    "name": "set_coefficients",
                    "range": [
                        139,
                        158
                    ],
                    "children": [],
                    "content": "filt.set_coefficients([a0,a1,a2],[b0,b1,b0])"
                },
                {
                    "type": "ReturnStatement",
                    "name": "return",
                    "range": [
                        160,
                        162
                    ],
                    "children": [],
                    "content": "return filt\n"
                }
            ],
            "content": "def make_lowpass(\nfrequency:int,\nsamplerate:int,\nq_factor:float=1/sqrt(2),\n)->IIRFilter:\n\"\"\" \\n     Creates a low-pass filter \\n  \\n     >>> filter = make_lowpass(1000, 48000) \\n     >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE \\n     [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.004277569313094809, \\n      0.008555138626189618, 0.004277569313094809] \\n     \"\"\"\nw0=tau*frequency/samplerate\n_sin=sin(w0)\n_cos=cos(w0)\nalpha=_sin/(2*q_factor)\n\nb0=(1-_cos)/2\nb1=1-_cos\n\na0=1+alpha\na1=-2*_cos\na2=1-alpha\n\nfilt=IIRFilter(2)\nfilt.set_coefficients([a0,a1,a2],[b0,b1,b0])\nreturn filt\n"
        },
        {
            "type": "FunctionDecl",
            "name": "make_highpass",
            "range": [
                163,
                300
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "parameters",
                    "range": [
                        165,
                        189
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "frequency",
                            "range": [
                                167,
                                169
                            ],
                            "children": [],
                            "content": "(\nfrequency"
                        },
                        {
                            "type": "Parameter",
                            "name": "samplerate",
                            "range": [
                                172,
                                174
                            ],
                            "children": [],
                            "content": ",\nsamplerate"
                        },
                        {
                            "type": "Parameter",
                            "name": "q_factor",
                            "range": [
                                177,
                                187
                            ],
                            "children": [
                                {
                                    "type": "DefaultValue",
                                    "name": "default",
                                    "range": [
                                        180,
                                        186
                                    ],
                                    "children": [],
                                    "content": ":float=1/sqrt("
                                }
                            ],
                            "content": ",\nq_factor:float=1/sqrt(2"
                        }
                    ],
                    "content": "def make_highpass(\nfrequency:int,\nsamplerate:int,\nq_factor:float=1/sqrt(2),"
                },
                {
                    "type": "ReturnType",
                    "name": "IIRFilter",
                    "range": [
                        192,
                        193
                    ],
                    "children": [],
                    "content": "->"
                },
                {
                    "type": "Docstring",
                    "name": "docstring",
                    "range": [
                        195,
                        197
                    ],
                    "children": [],
                    "content": ":\n\"\""
                },
                {
                    "type": "Body",
                    "name": "body",
                    "range": [
                        199,
                        300
                    ],
                    "children": [
                        {
                            "type": "VariableDecl",
                            "name": "w0",
                            "range": [
                                199,
                                206
                            ],
                            "children": [],
                            "content": "\"\"\nw0=tau*frequency/"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "_sin",
                            "range": [
                                207,
                                213
                            ],
                            "children": [],
                            "content": "samplerate\n_sin=sin(w0"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "_cos",
                            "range": [
                                214,
                                220
                            ],
                            "children": [],
                            "content": ")\n_cos=cos(w0"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "alpha",
                            "range": [
                                221,
                                230
                            ],
                            "children": [],
                            "content": ")\nalpha=_sin/(2*q_factor"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "b0",
                            "range": [
                                232,
                                241
                            ],
                            "children": [],
                            "content": "\n\nb0=(1+_cos)/"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "b1",
                            "range": [
                                242,
                                248
                            ],
                            "children": [],
                            "content": "2\nb1=-1-"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "a0",
                            "range": [
                                250,
                                255
                            ],
                            "children": [],
                            "content": "\n\na0=1+"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "a1",
                            "range": [
                                256,
                                262
                            ],
                            "children": [],
                            "content": "alpha\na1=-2*"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "a2",
                            "range": [
                                263,
                                268
                            ],
                            "children": [],
                            "content": "_cos\na2=1-"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "filt",
                            "range": [
                                270,
                                276
                            ],
                            "children": [],
                            "content": "\n\nfilt=IIRFilter(2"
                        },
                        {
                            "type": "CallExpression",
                            "name": "set_coefficients",
                            "range": [
                                277,
                                296
                            ],
                            "children": [],
                            "content": ")\nfilt.set_coefficients([a0,a1,a2],[b0,b1,b0"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "return",
                            "range": [
                                298,
                                300
                            ],
                            "children": [],
                            "content": ")\nreturn"
                        }
                    ],
                    "content": "\"\"\nw0=tau*frequency/samplerate\n_sin=sin(w0)\n_cos=cos(w0)\nalpha=_sin/(2*q_factor)\n\nb0=(1+_cos)/2\nb1=-1-_cos\n\na0=1+alpha\na1=-2*_cos\na2=1-alpha\n\nfilt=IIRFilter(2)\nfilt.set_coefficients([a0,a1,a2],[b0,b1,b0])\nreturn"
                }
            ],
            "content": "\n\ndef make_highpass(\nfrequency:int,\nsamplerate:int,\nq_factor:float=1/sqrt(2),\n)->IIRFilter:\n\"\"\" \\n     Creates a high-pass filter \\n  \\n     >>> filter = make_highpass(1000, 48000) \\n     >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE \\n     [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.9957224306869052, \\n      -1.9914448613738105, 0.9957224306869052] \\n     \"\"\"\nw0=tau*frequency/samplerate\n_sin=sin(w0)\n_cos=cos(w0)\nalpha=_sin/(2*q_factor)\n\nb0=(1+_cos)/2\nb1=-1-_cos\n\na0=1+alpha\na1=-2*_cos\na2=1-alpha\n\nfilt=IIRFilter(2)\nfilt.set_coefficients([a0,a1,a2],[b0,b1,b0])\nreturn"
        },
        {
            "type": "FunctionDecl",
            "name": "make_bandpass",
            "range": [
                301,
                436
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "parameters",
                    "range": [
                        303,
                        327
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "frequency",
                            "range": [
                                305,
                                307
                            ],
                            "children": [],
                            "content": "def make_bandpass("
                        },
                        {
                            "type": "Parameter",
                            "name": "samplerate",
                            "range": [
                                310,
                                312
                            ],
                            "children": [],
                            "content": ":int,"
                        },
                        {
                            "type": "Parameter",
                            "name": "q_factor",
                            "range": [
                                315,
                                325
                            ],
                            "children": [],
                            "content": ":int,\nq_factor:float=1/sqrt"
                        }
                    ],
                    "content": "\n\ndef make_bandpass(\nfrequency:int,\nsamplerate:int,\nq_factor:float=1/sqrt(2"
                },
                {
                    "type": "ReturnType",
                    "name": "IIRFilter",
                    "range": [
                        329,
                        330
                    ],
                    "children": [],
                    "content": ",\n"
                },
                {
                    "type": "Docstring",
                    "name": "docstring",
                    "range": [
                        333,
                        335
                    ],
                    "children": [],
                    "content": ">IIRFilter:"
                },
                {
                    "type": "VariableDecl",
                    "name": "w0",
                    "range": [
                        337,
                        344
                    ],
                    "children": [],
                    "content": "\"\"\" \\n     Creates a band-pass filter \\n  \\n     >>> filter = make_bandpass(1000, 48000) \\n     >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE \\n     [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.06526309611002579, \\n      0, -0.06526309611002579] \\n     \"\"\"\nw0=tau*"
                },
                {
                    "type": "VariableDecl",
                    "name": "_sin",
                    "range": [
                        345,
                        351
                    ],
                    "children": [],
                    "content": "frequency/samplerate\n_sin=sin"
                },
                {
                    "type": "VariableDecl",
                    "name": "_cos",
                    "range": [
                        352,
                        358
                    ],
                    "children": [],
                    "content": "(w0)\n_cos=cos"
                },
                {
                    "type": "VariableDecl",
                    "name": "alpha",
                    "range": [
                        359,
                        368
                    ],
                    "children": [],
                    "content": "(w0)\nalpha=_sin/(2"
                },
                {
                    "type": "VariableDecl",
                    "name": "b0",
                    "range": [
                        370,
                        375
                    ],
                    "children": [],
                    "content": "q_factor)\n\nb0="
                },
                {
                    "type": "VariableDecl",
                    "name": "b1",
                    "range": [
                        376,
                        379
                    ],
                    "children": [],
                    "content": "_sin/2\n"
                },
                {
                    "type": "VariableDecl",
                    "name": "b2",
                    "range": [
                        380,
                        384
                    ],
                    "children": [],
                    "content": "b1=0\nb2"
                },
                {
                    "type": "VariableDecl",
                    "name": "a0",
                    "range": [
                        386,
                        391
                    ],
                    "children": [],
                    "content": "-b0\n\na0="
                },
                {
                    "type": "VariableDecl",
                    "name": "a1",
                    "range": [
                        392,
                        398
                    ],
                    "children": [],
                    "content": "1+alpha\na1=-"
                },
                {
                    "type": "VariableDecl",
                    "name": "a2",
                    "range": [
                        399,
                        404
                    ],
                    "children": [],
                    "content": "2*_cos\na2="
                },
                {
                    "type": "VariableDecl",
                    "name": "filt",
                    "range": [
                        406,
                        412
                    ],
                    "children": [],
                    "content": "-alpha\n\nfilt=IIRFilter"
                },
                {
                    "type": "CallExpression",
                    "name": "set_coefficients",
                    "range": [
                        413,
                        432
                    ],
                    "children": [],
                    "content": "(2)\nfilt.set_coefficients([a0,a1,a2],[b0,b1"
                },
                {
                    "type": "ReturnStatement",
                    "name": "return",
                    "range": [
                        434,
                        436
                    ],
                    "children": [],
                    "content": "b2])"
                }
            ],
            "content": "filt\n\n\ndef make_bandpass(\nfrequency:int,\nsamplerate:int,\nq_factor:float=1/sqrt(2),\n)->IIRFilter:\n\"\"\" \\n     Creates a band-pass filter \\n  \\n     >>> filter = make_bandpass(1000, 48000) \\n     >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE \\n     [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.06526309611002579, \\n      0, -0.06526309611002579] \\n     \"\"\"\nw0=tau*frequency/samplerate\n_sin=sin(w0)\n_cos=cos(w0)\nalpha=_sin/(2*q_factor)\n\nb0=_sin/2\nb1=0\nb2=-b0\n\na0=1+alpha\na1=-2*_cos\na2=1-alpha\n\nfilt=IIRFilter(2)\nfilt.set_coefficients([a0,a1,a2],[b0,b1,b2])"
        },
        {
            "type": "FunctionDecl",
            "name": "make_allpass",
            "range": [
                437,
                556
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "range": [
                        439,
                        463
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "frequency",
                            "range": [
                                441,
                                443
                            ],
                            "children": [],
                            "content": "\n\ndef"
                        },
                        {
                            "type": "Parameter",
                            "name": "samplerate",
                            "range": [
                                446,
                                448
                            ],
                            "children": [],
                            "content": "\nfrequency:"
                        },
                        {
                            "type": "Parameter",
                            "name": "q_factor",
                            "range": [
                                451,
                                461
                            ],
                            "children": [
                                {
                                    "type": "DefaultValue",
                                    "range": [
                                        454,
                                        461
                                    ],
                                    "children": [
                                        {
                                            "type": "BinaryExpression",
                                            "operator": "/",
                                            "range": [
                                                456,
                                                461
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "value": "1",
                                                    "range": [
                                                        455,
                                                        455
                                                    ],
                                                    "children": [],
                                                    "content": ","
                                                },
                                                {
                                                    "type": "CallExpression",
                                                    "callee": "sqrt",
                                                    "range": [
                                                        457,
                                                        461
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "2",
                                                            "range": [
                                                                459,
                                                                459
                                                            ],
                                                            "children": [],
                                                            "content": "float"
                                                        }
                                                    ],
                                                    "content": "q_factor:float=1"
                                                }
                                            ],
                                            "content": "\nq_factor:float=1"
                                        }
                                    ],
                                    "content": "int,\nq_factor:float=1"
                                }
                            ],
                            "content": "\nsamplerate:int,\nq_factor:float=1"
                        }
                    ],
                    "content": "filt\n\n\ndef make_allpass(\nfrequency:int,\nsamplerate:int,\nq_factor:float=1/sqrt"
                },
                {
                    "type": "ReturnType",
                    "range": [
                        465,
                        466
                    ],
                    "children": [
                        {
                            "type": "Type",
                            "name": "IIRFilter",
                            "range": [
                                466,
                                466
                            ],
                            "children": [],
                            "content": ")"
                        }
                    ],
                    "content": "2)"
                },
                {
                    "type": "BlockStatement",
                    "range": [
                        468,
                        556
                    ],
                    "children": [
                        {
                            "type": "Docstring",
                            "range": [
                                469,
                                471
                            ],
                            "children": [],
                            "content": ")->"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "w0",
                            "range": [
                                473,
                                480
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "operator": "/",
                                    "range": [
                                        476,
                                        480
                                    ],
                                    "children": [
                                        {
                                            "type": "BinaryExpression",
                                            "operator": "*",
                                            "range": [
                                                476,
                                                479
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "tau",
                                                    "range": [
                                                        475,
                                                        475
                                                    ],
                                                    "children": [],
                                                    "content": "\"\""
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "frequency",
                                                    "range": [
                                                        477,
                                                        477
                                                    ],
                                                    "children": [],
                                                    "content": "\"\""
                                                }
                                            ],
                                            "content": "\" \\n     Creates an all-pass filter \\n  \\n     >>> filter = make_allpass(1000, 48000) \\n     >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE \\n     [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.9077040443587427, \\n      -1.9828897227476208, 1.0922959556412573] \\n     \"\"\"\nw0"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "samplerate",
                                            "range": [
                                                479,
                                                479
                                            ],
                                            "children": [],
                                            "content": "w0"
                                        }
                                    ],
                                    "content": "\" \\n     Creates an all-pass filter \\n  \\n     >>> filter = make_allpass(1000, 48000) \\n     >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE \\n     [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.9077040443587427, \\n      -1.9828897227476208, 1.0922959556412573] \\n     \"\"\"\nw0="
                                }
                            ],
                            "content": ":\n\"\"\" \\n     Creates an all-pass filter \\n  \\n     >>> filter = make_allpass(1000, 48000) \\n     >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE \\n     [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.9077040443587427, \\n      -1.9828897227476208, 1.0922959556412573] \\n     \"\"\"\nw0="
                        },
                        {
                            "type": "VariableDecl",
                            "name": "_sin",
                            "range": [
                                481,
                                487
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "callee": "sin",
                                    "range": [
                                        483,
                                        487
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "w0",
                                            "range": [
                                                485,
                                                485
                                            ],
                                            "children": [],
                                            "content": "samplerate"
                                        }
                                    ],
                                    "content": "frequency/samplerate\n_sin"
                                }
                            ],
                            "content": "tau*frequency/samplerate\n_sin"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "_cos",
                            "range": [
                                488,
                                494
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "callee": "cos",
                                    "range": [
                                        490,
                                        494
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "w0",
                                            "range": [
                                                492,
                                                492
                                            ],
                                            "children": [],
                                            "content": ")"
                                        }
                                    ],
                                    "content": "(w0)\n_cos"
                                }
                            ],
                            "content": "=sin(w0)\n_cos"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "alpha",
                            "range": [
                                495,
                                504
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "operator": "/",
                                    "range": [
                                        498,
                                        504
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "_sin",
                                            "range": [
                                                497,
                                                497
                                            ],
                                            "children": [],
                                            "content": "("
                                        },
                                        {
                                            "type": "BinaryExpression",
                                            "operator": "*",
                                            "range": [
                                                500,
                                                503
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "value": "2",
                                                    "range": [
                                                        500,
                                                        500
                                                    ],
                                                    "children": [],
                                                    "content": "\n"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "q_factor",
                                                    "range": [
                                                        502,
                                                        502
                                                    ],
                                                    "children": [],
                                                    "content": "="
                                                }
                                            ],
                                            "content": "\nalpha=_sin"
                                        }
                                    ],
                                    "content": "w0)\nalpha=_sin/"
                                }
                            ],
                            "content": "=cos(w0)\nalpha=_sin/"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "b0",
                            "range": [
                                506,
                                511
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "operator": "-",
                                    "range": [
                                        509,
                                        511
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "value": "1",
                                            "range": [
                                                508,
                                                508
                                            ],
                                            "children": [],
                                            "content": "q_factor"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "alpha",
                                            "range": [
                                                510,
                                                510
                                            ],
                                            "children": [],
                                            "content": "\n"
                                        }
                                    ],
                                    "content": ")\n\n"
                                }
                            ],
                            "content": "2*q_factor)\n\n"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "b1",
                            "range": [
                                512,
                                518
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "operator": "*",
                                    "range": [
                                        516,
                                        518
                                    ],
                                    "children": [
                                        {
                                            "type": "UnaryExpression",
                                            "operator": "-",
                                            "range": [
                                                514,
                                                515
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "value": "2",
                                                    "range": [
                                                        515,
                                                        515
                                                    ],
                                                    "children": [],
                                                    "content": "-"
                                                }
                                            ],
                                            "content": "1-"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_cos",
                                            "range": [
                                                517,
                                                517
                                            ],
                                            "children": [],
                                            "content": "\n"
                                        }
                                    ],
                                    "content": "alpha\nb1"
                                }
                            ],
                            "content": "b0=1-alpha\nb1"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "b2",
                            "range": [
                                519,
                                524
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "range": [
                                        522,
                                        524
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "value": "1",
                                            "range": [
                                                521,
                                                521
                                            ],
                                            "children": [],
                                            "content": "2"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "alpha",
                                            "range": [
                                                523,
                                                523
                                            ],
                                            "children": [],
                                            "content": "_cos"
                                        }
                                    ],
                                    "content": "*_cos\n"
                                }
                            ],
                            "content": "=-2*_cos\n"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "filt",
                            "range": [
                                526,
                                532
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "callee": "IIRFilter",
                                    "range": [
                                        528,
                                        532
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "value": "2",
                                            "range": [
                                                530,
                                                530
                                            ],
                                            "children": [],
                                            "content": "\n"
                                        }
                                    ],
                                    "content": "+alpha\n\nfilt"
                                }
                            ],
                            "content": "=1+alpha\n\nfilt"
                        },
                        {
                            "type": "ExpressionStatement",
                            "range": [
                                533,
                                553
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "callee": "set_coefficients",
                                    "range": [
                                        535,
                                        553
                                    ],
                                    "children": [
                                        {
                                            "type": "ArrayExpression",
                                            "range": [
                                                537,
                                                543
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "b2",
                                                    "range": [
                                                        538,
                                                        538
                                                    ],
                                                    "children": [],
                                                    "content": "\n"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "b1",
                                                    "range": [
                                                        540,
                                                        540
                                                    ],
                                                    "children": [],
                                                    "content": "."
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "b0",
                                                    "range": [
                                                        542,
                                                        542
                                                    ],
                                                    "children": [],
                                                    "content": "("
                                                }
                                            ],
                                            "content": ")\nfilt.set_coefficients(["
                                        },
                                        {
                                            "type": "ArrayExpression",
                                            "range": [
                                                545,
                                                551
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "b0",
                                                    "range": [
                                                        546,
                                                        546
                                                    ],
                                                    "children": [],
                                                    "content": "b1"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "b1",
                                                    "range": [
                                                        548,
                                                        548
                                                    ],
                                                    "children": [],
                                                    "content": "b0"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "b2",
                                                    "range": [
                                                        550,
                                                        550
                                                    ],
                                                    "children": [],
                                                    "content": ","
                                                }
                                            ],
                                            "content": ",b1,b0],["
                                        }
                                    ],
                                    "content": "(2)\nfilt.set_coefficients([b2,b1,b0],[b0,"
                                }
                            ],
                            "content": "=IIRFilter(2)\nfilt.set_coefficients([b2,b1,b0],[b0,"
                        },
                        {
                            "type": "ReturnStatement",
                            "range": [
                                554,
                                556
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "filt",
                                    "range": [
                                        555,
                                        555
                                    ],
                                    "children": [],
                                    "content": ","
                                }
                            ],
                            "content": "b1,b2"
                        }
                    ],
                    "content": "\n)->IIRFilter:\n\"\"\" \\n     Creates an all-pass filter \\n  \\n     >>> filter = make_allpass(1000, 48000) \\n     >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE \\n     [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.9077040443587427, \\n      -1.9828897227476208, 1.0922959556412573] \\n     \"\"\"\nw0=tau*frequency/samplerate\n_sin=sin(w0)\n_cos=cos(w0)\nalpha=_sin/(2*q_factor)\n\nb0=1-alpha\nb1=-2*_cos\nb2=1+alpha\n\nfilt=IIRFilter(2)\nfilt.set_coefficients([b2,b1,b0],[b0,b1,b2"
                }
            ],
            "content": "\nreturn filt\n\n\ndef make_allpass(\nfrequency:int,\nsamplerate:int,\nq_factor:float=1/sqrt(2),\n)->IIRFilter:\n\"\"\" \\n     Creates an all-pass filter \\n  \\n     >>> filter = make_allpass(1000, 48000) \\n     >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE \\n     [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.9077040443587427, \\n      -1.9828897227476208, 1.0922959556412573] \\n     \"\"\"\nw0=tau*frequency/samplerate\n_sin=sin(w0)\n_cos=cos(w0)\nalpha=_sin/(2*q_factor)\n\nb0=1-alpha\nb1=-2*_cos\nb2=1+alpha\n\nfilt=IIRFilter(2)\nfilt.set_coefficients([b2,b1,b0],[b0,b1,b2"
        },
        {
            "type": "FunctionDecl",
            "name": "make_peak",
            "range": [
                557,
                719
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "parameters",
                    "range": [
                        559,
                        588
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "frequency",
                            "range": [
                                561,
                                563
                            ],
                            "children": [],
                            "content": "filt\n\n"
                        },
                        {
                            "type": "Parameter",
                            "name": "samplerate",
                            "range": [
                                566,
                                568
                            ],
                            "children": [],
                            "content": "make_peak(\n"
                        },
                        {
                            "type": "Parameter",
                            "name": "gain_db",
                            "range": [
                                571,
                                573
                            ],
                            "children": [],
                            "content": "int,\n"
                        },
                        {
                            "type": "Parameter",
                            "name": "q_factor",
                            "range": [
                                576,
                                586
                            ],
                            "children": [],
                            "content": "int,\ngain_db:float,\nq_factor:float"
                        }
                    ],
                    "content": "\nreturn filt\n\n\ndef make_peak(\nfrequency:int,\nsamplerate:int,\ngain_db:float,\nq_factor:float=1"
                },
                {
                    "type": "ReturnType",
                    "name": "IIRFilter",
                    "range": [
                        591,
                        593
                    ],
                    "children": [],
                    "content": "(2)"
                },
                {
                    "type": "Docstring",
                    "name": "docstring",
                    "range": [
                        594,
                        596
                    ],
                    "children": [],
                    "content": ",\n)"
                },
                {
                    "type": "VariableDecl",
                    "name": "w0",
                    "range": [
                        598,
                        605
                    ],
                    "children": [],
                    "content": ">IIRFilter:\n\"\"\" \\n     Creates a peak filter \\n  \\n     >>> filter = make_peak(1000, 48000, 6) \\n     >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE \\n     [1.0653405327119334, -1.9828897227476208, 0.9346594672880666, 1.1303715025601122, \\n      -1.9828897227476208, 0.8696284974398878] \\n     \"\"\"\n"
                },
                {
                    "type": "VariableDecl",
                    "name": "_sin",
                    "range": [
                        606,
                        612
                    ],
                    "children": [],
                    "content": "w0=tau*frequency/samplerate"
                },
                {
                    "type": "VariableDecl",
                    "name": "_cos",
                    "range": [
                        613,
                        619
                    ],
                    "children": [],
                    "content": "\n_sin=sin(w0)"
                },
                {
                    "type": "VariableDecl",
                    "name": "alpha",
                    "range": [
                        620,
                        629
                    ],
                    "children": [],
                    "content": "\n_cos=cos(w0)\nalpha="
                },
                {
                    "type": "VariableDecl",
                    "name": "big_a",
                    "range": [
                        630,
                        640
                    ],
                    "children": [],
                    "content": "_sin/(2*q_factor)\nbig_a=10"
                },
                {
                    "type": "VariableDecl",
                    "name": "b0",
                    "range": [
                        642,
                        649
                    ],
                    "children": [],
                    "content": "*(gain_db/40)\n\n"
                },
                {
                    "type": "VariableDecl",
                    "name": "b1",
                    "range": [
                        650,
                        656
                    ],
                    "children": [],
                    "content": "b0=1+alpha*big_a"
                },
                {
                    "type": "VariableDecl",
                    "name": "b2",
                    "range": [
                        657,
                        664
                    ],
                    "children": [],
                    "content": "\nb1=-2*_cos\n"
                },
                {
                    "type": "VariableDecl",
                    "name": "a0",
                    "range": [
                        665,
                        672
                    ],
                    "children": [],
                    "content": "b2=1-alpha*big_a\n"
                },
                {
                    "type": "VariableDecl",
                    "name": "a1",
                    "range": [
                        673,
                        679
                    ],
                    "children": [],
                    "content": "a0=1+alpha/big_a"
                },
                {
                    "type": "VariableDecl",
                    "name": "a2",
                    "range": [
                        680,
                        687
                    ],
                    "children": [],
                    "content": "\na1=-2*_cos\n"
                },
                {
                    "type": "VariableDecl",
                    "name": "filt",
                    "range": [
                        689,
                        695
                    ],
                    "children": [],
                    "content": "=1-alpha/big_a\n"
                },
                {
                    "type": "CallExpression",
                    "name": "set_coefficients",
                    "range": [
                        696,
                        715
                    ],
                    "children": [],
                    "content": "\nfilt=IIRFilter(2)\nfilt.set_coefficients([a0,a1,a2],"
                },
                {
                    "type": "ReturnStatement",
                    "name": "return",
                    "range": [
                        717,
                        719
                    ],
                    "children": [],
                    "content": "b0,b1"
                }
            ],
            "content": "])\nreturn filt\n\n\ndef make_peak(\nfrequency:int,\nsamplerate:int,\ngain_db:float,\nq_factor:float=1/sqrt(2),\n)->IIRFilter:\n\"\"\" \\n     Creates a peak filter \\n  \\n     >>> filter = make_peak(1000, 48000, 6) \\n     >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE \\n     [1.0653405327119334, -1.9828897227476208, 0.9346594672880666, 1.1303715025601122, \\n      -1.9828897227476208, 0.8696284974398878] \\n     \"\"\"\nw0=tau*frequency/samplerate\n_sin=sin(w0)\n_cos=cos(w0)\nalpha=_sin/(2*q_factor)\nbig_a=10**(gain_db/40)\n\nb0=1+alpha*big_a\nb1=-2*_cos\nb2=1-alpha*big_a\na0=1+alpha/big_a\na1=-2*_cos\na2=1-alpha/big_a\n\nfilt=IIRFilter(2)\nfilt.set_coefficients([a0,a1,a2],[b0,b1"
        },
        {
            "type": "FunctionDecl",
            "name": "make_lowshelf",
            "range": [
                720,
                958
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "parameters",
                    "range": [
                        722,
                        751
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "frequency",
                            "range": [
                                724,
                                726
                            ],
                            "children": [],
                            "content": "\nreturn filt"
                        },
                        {
                            "type": "Parameter",
                            "name": "samplerate",
                            "range": [
                                729,
                                731
                            ],
                            "children": [],
                            "content": "\ndef make_lowshelf"
                        },
                        {
                            "type": "Parameter",
                            "name": "gain_db",
                            "range": [
                                734,
                                736
                            ],
                            "children": [],
                            "content": "frequency:int"
                        },
                        {
                            "type": "Parameter",
                            "name": "q_factor",
                            "range": [
                                739,
                                749
                            ],
                            "children": [
                                {
                                    "type": "DefaultValue",
                                    "name": "default",
                                    "range": [
                                        742,
                                        748
                                    ],
                                    "children": [],
                                    "content": ",\ngain_db:float,\n"
                                }
                            ],
                            "content": "samplerate:int,\ngain_db:float,\nq_factor"
                        }
                    ],
                    "content": "])\nreturn filt\n\n\ndef make_lowshelf(\nfrequency:int,\nsamplerate:int,\ngain_db:float,\nq_factor:float"
                },
                {
                    "type": "ReturnType",
                    "name": "IIRFilter",
                    "range": [
                        752,
                        754
                    ],
                    "children": [],
                    "content": "=1/"
                },
                {
                    "type": "Docstring",
                    "name": "docstring",
                    "range": [
                        757,
                        759
                    ],
                    "children": [],
                    "content": "2),"
                },
                {
                    "type": "BlockStatement",
                    "name": "body",
                    "range": [
                        761,
                        957
                    ],
                    "children": [
                        {
                            "type": "VariableDecl",
                            "name": "w0",
                            "range": [
                                761,
                                768
                            ],
                            "children": [],
                            "content": ")->IIRFilter:\n\"\"\" \\n     Creates a low-shelf filter \\n  \\n     >>> filter = make_lowshelf(1000, 48000, 6) \\n     >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE \\n     [3.0409336710888786, -5.608870992220748, 2.602157875636628, 3.139954022810743, \\n      -5.591841778072785, 2.5201667380627257] \\n     \""
                        },
                        {
                            "type": "VariableDecl",
                            "name": "_sin",
                            "range": [
                                769,
                                775
                            ],
                            "children": [],
                            "content": "\"\"\nw0=tau*frequency"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "_cos",
                            "range": [
                                776,
                                782
                            ],
                            "children": [],
                            "content": "/samplerate\n_sin=sin("
                        },
                        {
                            "type": "VariableDecl",
                            "name": "alpha",
                            "range": [
                                783,
                                792
                            ],
                            "children": [],
                            "content": "w0)\n_cos=cos(w0)\n"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "big_a",
                            "range": [
                                793,
                                803
                            ],
                            "children": [],
                            "content": "alpha=_sin/(2*q_factor)\nbig_a"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "pmc",
                            "range": [
                                804,
                                819
                            ],
                            "children": [],
                            "content": "=10**(gain_db/40)\npmc=(big_a+1"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "ppmc",
                            "range": [
                                820,
                                835
                            ],
                            "children": [],
                            "content": ")-(big_a-1)*_cos\nppmc=(big_a+1"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "mpc",
                            "range": [
                                836,
                                851
                            ],
                            "children": [],
                            "content": ")+(big_a-1)*_cos\nmpc=(big_a-1"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "pmpc",
                            "range": [
                                852,
                                867
                            ],
                            "children": [],
                            "content": ")-(big_a+1)*_cos\npmpc=(big_a-1"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "aa2",
                            "range": [
                                868,
                                878
                            ],
                            "children": [],
                            "content": ")+(big_a+1)*_cos\naa2"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "b0",
                            "range": [
                                880,
                                889
                            ],
                            "children": [],
                            "content": "2*sqrt(big_a)*alpha\n\n"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "b1",
                            "range": [
                                890,
                                897
                            ],
                            "children": [],
                            "content": "b0=big_a*(pmc+aa2"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "b2",
                            "range": [
                                898,
                                907
                            ],
                            "children": [],
                            "content": ")\nb1=2*big_a*mpc\n"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "a0",
                            "range": [
                                908,
                                913
                            ],
                            "children": [],
                            "content": "b2=big_a*(pmc"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "a1",
                            "range": [
                                914,
                                920
                            ],
                            "children": [],
                            "content": "-aa2)\na0=ppmc"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "a2",
                            "range": [
                                921,
                                926
                            ],
                            "children": [],
                            "content": "+aa2\na1=-"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "filt",
                            "range": [
                                928,
                                934
                            ],
                            "children": [],
                            "content": "*pmpc\na2=ppmc-"
                        },
                        {
                            "type": "CallExpression",
                            "name": "set_coefficients",
                            "range": [
                                935,
                                954
                            ],
                            "children": [],
                            "content": "aa2\n\nfilt=IIRFilter(2)\nfilt.set_coefficients([a0,a1,a2"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "return",
                            "range": [
                                956,
                                957
                            ],
                            "children": [],
                            "content": ",["
                        }
                    ],
                    "content": ")->IIRFilter:\n\"\"\" \\n     Creates a low-shelf filter \\n  \\n     >>> filter = make_lowshelf(1000, 48000, 6) \\n     >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE \\n     [3.0409336710888786, -5.608870992220748, 2.602157875636628, 3.139954022810743, \\n      -5.591841778072785, 2.5201667380627257] \\n     \"\"\"\nw0=tau*frequency/samplerate\n_sin=sin(w0)\n_cos=cos(w0)\nalpha=_sin/(2*q_factor)\nbig_a=10**(gain_db/40)\npmc=(big_a+1)-(big_a-1)*_cos\nppmc=(big_a+1)+(big_a-1)*_cos\nmpc=(big_a-1)-(big_a+1)*_cos\npmpc=(big_a-1)+(big_a+1)*_cos\naa2=2*sqrt(big_a)*alpha\n\nb0=big_a*(pmc+aa2)\nb1=2*big_a*mpc\nb2=big_a*(pmc-aa2)\na0=ppmc+aa2\na1=-2*pmpc\na2=ppmc-aa2\n\nfilt=IIRFilter(2)\nfilt.set_coefficients([a0,a1,a2],["
                }
            ],
            "content": ",b2])\nreturn filt\n\n\ndef make_lowshelf(\nfrequency:int,\nsamplerate:int,\ngain_db:float,\nq_factor:float=1/sqrt(2),\n)->IIRFilter:\n\"\"\" \\n     Creates a low-shelf filter \\n  \\n     >>> filter = make_lowshelf(1000, 48000, 6) \\n     >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE \\n     [3.0409336710888786, -5.608870992220748, 2.602157875636628, 3.139954022810743, \\n      -5.591841778072785, 2.5201667380627257] \\n     \"\"\"\nw0=tau*frequency/samplerate\n_sin=sin(w0)\n_cos=cos(w0)\nalpha=_sin/(2*q_factor)\nbig_a=10**(gain_db/40)\npmc=(big_a+1)-(big_a-1)*_cos\nppmc=(big_a+1)+(big_a-1)*_cos\nmpc=(big_a-1)-(big_a+1)*_cos\npmpc=(big_a-1)+(big_a+1)*_cos\naa2=2*sqrt(big_a)*alpha\n\nb0=big_a*(pmc+aa2)\nb1=2*big_a*mpc\nb2=big_a*(pmc-aa2)\na0=ppmc+aa2\na1=-2*pmpc\na2=ppmc-aa2\n\nfilt=IIRFilter(2)\nfilt.set_coefficients([a0,a1,a2],[b0"
        },
        {
            "type": "FunctionDecl",
            "name": "make_highshelf",
            "range": [
                959,
                1197
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "parameters",
                    "range": [
                        961,
                        990
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "frequency",
                            "range": [
                                963,
                                965
                            ],
                            "children": [],
                            "content": "])\n"
                        },
                        {
                            "type": "Parameter",
                            "name": "samplerate",
                            "range": [
                                968,
                                970
                            ],
                            "children": [],
                            "content": "\n\n\n"
                        },
                        {
                            "type": "Parameter",
                            "name": "gain_db",
                            "range": [
                                973,
                                975
                            ],
                            "children": [],
                            "content": "(\nfrequency"
                        },
                        {
                            "type": "Parameter",
                            "name": "q_factor",
                            "range": [
                                978,
                                988
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "default_value",
                                    "range": [
                                        981,
                                        988
                                    ],
                                    "children": [
                                        {
                                            "type": "BinaryExpression",
                                            "name": "/",
                                            "range": [
                                                983,
                                                987
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "1",
                                                    "range": [
                                                        982,
                                                        982
                                                    ],
                                                    "children": [],
                                                    "content": "int"
                                                },
                                                {
                                                    "type": "CallExpression",
                                                    "name": "sqrt",
                                                    "range": [
                                                        984,
                                                        987
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Literal",
                                                            "name": "2",
                                                            "range": [
                                                                986,
                                                                986
                                                            ],
                                                            "children": [],
                                                            "content": ":"
                                                        }
                                                    ],
                                                    "content": "\ngain_db:float"
                                                }
                                            ],
                                            "content": ",\ngain_db:float"
                                        }
                                    ],
                                    "content": ":int,\ngain_db:float,"
                                }
                            ],
                            "content": ",\nsamplerate:int,\ngain_db:float,"
                        }
                    ],
                    "content": ",b2])\nreturn filt\n\n\ndef make_highshelf(\nfrequency:int,\nsamplerate:int,\ngain_db:float,\nq_factor"
                },
                {
                    "type": "ReturnType",
                    "name": "IIRFilter",
                    "range": [
                        993,
                        994
                    ],
                    "children": [],
                    "content": "=1"
                },
                {
                    "type": "BlockStatement",
                    "name": "body",
                    "range": [
                        995,
                        1197
                    ],
                    "children": [
                        {
                            "type": "VariableDecl",
                            "name": "w0",
                            "range": [
                                1000,
                                1007
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "name": "/",
                                    "range": [
                                        1005,
                                        1006
                                    ],
                                    "children": [
                                        {
                                            "type": "BinaryExpression",
                                            "name": "*",
                                            "range": [
                                                1003,
                                                1004
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "tau",
                                                    "range": [
                                                        1002,
                                                        1002
                                                    ],
                                                    "children": [],
                                                    "content": ")"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "frequency",
                                                    "range": [
                                                        1004,
                                                        1004
                                                    ],
                                                    "children": [],
                                                    "content": ">"
                                                }
                                            ],
                                            "content": "->"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "samplerate",
                                            "range": [
                                                1006,
                                                1006
                                            ],
                                            "children": [],
                                            "content": ":"
                                        }
                                    ],
                                    "content": "IIRFilter:"
                                }
                            ],
                            "content": ",\n)->IIRFilter:\n"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "_sin",
                            "range": [
                                1008,
                                1014
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "sin",
                                    "range": [
                                        1010,
                                        1013
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "w0",
                                            "range": [
                                                1012,
                                                1012
                                            ],
                                            "children": [],
                                            "content": "w0"
                                        }
                                    ],
                                    "content": "\"\"\nw0="
                                }
                            ],
                            "content": "\"\"\" \\n     Creates a high-shelf filter \\n  \\n     >>> filter = make_highshelf(1000, 48000, 6) \\n     >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE \\n     [2.2229172136088806, -3.9587208137297303, 1.7841414181566304, 4.295432981120543, \\n      -7.922740859457287, 3.6756456963725253] \\n     \"\"\"\nw0=tau"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "_cos",
                            "range": [
                                1015,
                                1021
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "cos",
                                    "range": [
                                        1017,
                                        1020
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "w0",
                                            "range": [
                                                1019,
                                                1019
                                            ],
                                            "children": [],
                                            "content": "\n"
                                        }
                                    ],
                                    "content": "/samplerate\n_sin"
                                }
                            ],
                            "content": "*frequency/samplerate\n_sin="
                        },
                        {
                            "type": "VariableDecl",
                            "name": "alpha",
                            "range": [
                                1022,
                                1031
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "name": "/",
                                    "range": [
                                        1025,
                                        1030
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "_sin",
                                            "range": [
                                                1024,
                                                1024
                                            ],
                                            "children": [],
                                            "content": "w0"
                                        },
                                        {
                                            "type": "BinaryExpression",
                                            "name": "*",
                                            "range": [
                                                1028,
                                                1029
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "2",
                                                    "range": [
                                                        1027,
                                                        1027
                                                    ],
                                                    "children": [],
                                                    "content": "_cos"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "q_factor",
                                                    "range": [
                                                        1029,
                                                        1029
                                                    ],
                                                    "children": [],
                                                    "content": "cos"
                                                }
                                            ],
                                            "content": "=cos"
                                        }
                                    ],
                                    "content": ")\n_cos=cos("
                                }
                            ],
                            "content": "sin(w0)\n_cos=cos(w0"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "big_a",
                            "range": [
                                1032,
                                1042
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "name": "*",
                                    "range": [
                                        1035,
                                        1041
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "10",
                                            "range": [
                                                1034,
                                                1034
                                            ],
                                            "children": [],
                                            "content": "alpha"
                                        },
                                        {
                                            "type": "BinaryExpression",
                                            "name": "/",
                                            "range": [
                                                1039,
                                                1040
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "gain_db",
                                                    "range": [
                                                        1038,
                                                        1038
                                                    ],
                                                    "children": [],
                                                    "content": "("
                                                },
                                                {
                                                    "type": "Literal",
                                                    "name": "40",
                                                    "range": [
                                                        1040,
                                                        1040
                                                    ],
                                                    "children": [],
                                                    "content": "*"
                                                }
                                            ],
                                            "content": "2*"
                                        }
                                    ],
                                    "content": "=_sin/(2*q_factor"
                                }
                            ],
                            "content": ")\nalpha=_sin/(2*q_factor)"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "pmc",
                            "range": [
                                1043,
                                1058
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "name": "-",
                                    "range": [
                                        1050,
                                        1057
                                    ],
                                    "children": [
                                        {
                                            "type": "BinaryExpression",
                                            "name": "+",
                                            "range": [
                                                1047,
                                                1048
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "big_a",
                                                    "range": [
                                                        1046,
                                                        1046
                                                    ],
                                                    "children": [],
                                                    "content": "10"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "name": "1",
                                                    "range": [
                                                        1048,
                                                        1048
                                                    ],
                                                    "children": [],
                                                    "content": "*"
                                                }
                                            ],
                                            "content": "**"
                                        },
                                        {
                                            "type": "BinaryExpression",
                                            "name": "*",
                                            "range": [
                                                1056,
                                                1057
                                            ],
                                            "children": [
                                                {
                                                    "type": "BinaryExpression",
                                                    "name": "-",
                                                    "range": [
                                                        1053,
                                                        1054
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "big_a",
                                                            "range": [
                                                                1052,
                                                                1052
                                                            ],
                                                            "children": [],
                                                            "content": "40"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "name": "1",
                                                            "range": [
                                                                1054,
                                                                1054
                                                            ],
                                                            "children": [],
                                                            "content": "\n"
                                                        }
                                                    ],
                                                    "content": ")\n"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_cos",
                                                    "range": [
                                                        1057,
                                                        1057
                                                    ],
                                                    "children": [],
                                                    "content": "("
                                                }
                                            ],
                                            "content": "=("
                                        }
                                    ],
                                    "content": "gain_db/40)\npmc=("
                                }
                            ],
                            "content": "\nbig_a=10**(gain_db/40)\npmc=(big_a"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "ppmc",
                            "range": [
                                1059,
                                1074
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "name": "+",
                                    "range": [
                                        1066,
                                        1073
                                    ],
                                    "children": [
                                        {
                                            "type": "BinaryExpression",
                                            "name": "+",
                                            "range": [
                                                1063,
                                                1064
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "big_a",
                                                    "range": [
                                                        1062,
                                                        1062
                                                    ],
                                                    "children": [],
                                                    "content": "-"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "name": "1",
                                                    "range": [
                                                        1064,
                                                        1064
                                                    ],
                                                    "children": [],
                                                    "content": "big_a"
                                                }
                                            ],
                                            "content": "(big_a"
                                        },
                                        {
                                            "type": "BinaryExpression",
                                            "name": "*",
                                            "range": [
                                                1072,
                                                1073
                                            ],
                                            "children": [
                                                {
                                                    "type": "BinaryExpression",
                                                    "name": "-",
                                                    "range": [
                                                        1069,
                                                        1070
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "big_a",
                                                            "range": [
                                                                1068,
                                                                1068
                                                            ],
                                                            "children": [],
                                                            "content": "*"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "name": "1",
                                                            "range": [
                                                                1070,
                                                                1070
                                                            ],
                                                            "children": [],
                                                            "content": "\n"
                                                        }
                                                    ],
                                                    "content": "_cos\n"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_cos",
                                                    "range": [
                                                        1073,
                                                        1073
                                                    ],
                                                    "children": [],
                                                    "content": "("
                                                }
                                            ],
                                            "content": "=("
                                        }
                                    ],
                                    "content": "1)*_cos\nppmc=("
                                }
                            ],
                            "content": "+1)-(big_a-1)*_cos\nppmc=(big_a"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "mpc",
                            "range": [
                                1075,
                                1090
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "name": "-",
                                    "range": [
                                        1082,
                                        1089
                                    ],
                                    "children": [
                                        {
                                            "type": "BinaryExpression",
                                            "name": "-",
                                            "range": [
                                                1079,
                                                1080
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "big_a",
                                                    "range": [
                                                        1078,
                                                        1078
                                                    ],
                                                    "children": [],
                                                    "content": "+"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "name": "1",
                                                    "range": [
                                                        1080,
                                                        1080
                                                    ],
                                                    "children": [],
                                                    "content": "big_a"
                                                }
                                            ],
                                            "content": "(big_a"
                                        },
                                        {
                                            "type": "BinaryExpression",
                                            "name": "*",
                                            "range": [
                                                1088,
                                                1089
                                            ],
                                            "children": [
                                                {
                                                    "type": "BinaryExpression",
                                                    "name": "+",
                                                    "range": [
                                                        1085,
                                                        1086
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "big_a",
                                                            "range": [
                                                                1084,
                                                                1084
                                                            ],
                                                            "children": [],
                                                            "content": "*"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "name": "1",
                                                            "range": [
                                                                1086,
                                                                1086
                                                            ],
                                                            "children": [],
                                                            "content": "\n"
                                                        }
                                                    ],
                                                    "content": "_cos\n"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_cos",
                                                    "range": [
                                                        1089,
                                                        1089
                                                    ],
                                                    "children": [],
                                                    "content": "("
                                                }
                                            ],
                                            "content": "=("
                                        }
                                    ],
                                    "content": "1)*_cos\nmpc=("
                                }
                            ],
                            "content": "+1)+(big_a-1)*_cos\nmpc=(big_a"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "pmpc",
                            "range": [
                                1091,
                                1106
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "name": "+",
                                    "range": [
                                        1098,
                                        1105
                                    ],
                                    "children": [
                                        {
                                            "type": "BinaryExpression",
                                            "name": "-",
                                            "range": [
                                                1095,
                                                1096
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "big_a",
                                                    "range": [
                                                        1094,
                                                        1094
                                                    ],
                                                    "children": [],
                                                    "content": "-"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "name": "1",
                                                    "range": [
                                                        1096,
                                                        1096
                                                    ],
                                                    "children": [],
                                                    "content": "big_a"
                                                }
                                            ],
                                            "content": "(big_a"
                                        },
                                        {
                                            "type": "BinaryExpression",
                                            "name": "*",
                                            "range": [
                                                1104,
                                                1105
                                            ],
                                            "children": [
                                                {
                                                    "type": "BinaryExpression",
                                                    "name": "+",
                                                    "range": [
                                                        1101,
                                                        1102
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "big_a",
                                                            "range": [
                                                                1100,
                                                                1100
                                                            ],
                                                            "children": [],
                                                            "content": "*"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "name": "1",
                                                            "range": [
                                                                1102,
                                                                1102
                                                            ],
                                                            "children": [],
                                                            "content": "\n"
                                                        }
                                                    ],
                                                    "content": "_cos\n"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_cos",
                                                    "range": [
                                                        1105,
                                                        1105
                                                    ],
                                                    "children": [],
                                                    "content": "("
                                                }
                                            ],
                                            "content": "=("
                                        }
                                    ],
                                    "content": "1)*_cos\npmpc=("
                                }
                            ],
                            "content": "-1)-(big_a+1)*_cos\npmpc=(big_a"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "aa2",
                            "range": [
                                1107,
                                1117
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "name": "*",
                                    "range": [
                                        1110,
                                        1116
                                    ],
                                    "children": [
                                        {
                                            "type": "BinaryExpression",
                                            "name": "*",
                                            "range": [
                                                1109,
                                                1115
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "2",
                                                    "range": [
                                                        1109,
                                                        1109
                                                    ],
                                                    "children": [],
                                                    "content": ")"
                                                },
                                                {
                                                    "type": "CallExpression",
                                                    "name": "sqrt",
                                                    "range": [
                                                        1111,
                                                        1114
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "big_a",
                                                            "range": [
                                                                1113,
                                                                1113
                                                            ],
                                                            "children": [],
                                                            "content": "+"
                                                        }
                                                    ],
                                                    "content": "(big_a+1"
                                                }
                                            ],
                                            "content": ")+(big_a+1)"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "alpha",
                                            "range": [
                                                1116,
                                                1116
                                            ],
                                            "children": [],
                                            "content": "*"
                                        }
                                    ],
                                    "content": "+(big_a+1)*"
                                }
                            ],
                            "content": "-1)+(big_a+1)*_cos"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "b0",
                            "range": [
                                1119,
                                1128
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "name": "*",
                                    "range": [
                                        1122,
                                        1127
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "big_a",
                                            "range": [
                                                1121,
                                                1121
                                            ],
                                            "children": [],
                                            "content": "2"
                                        },
                                        {
                                            "type": "BinaryExpression",
                                            "name": "+",
                                            "range": [
                                                1125,
                                                1126
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "ppmc",
                                                    "range": [
                                                        1124,
                                                        1124
                                                    ],
                                                    "children": [],
                                                    "content": "("
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "aa2",
                                                    "range": [
                                                        1126,
                                                        1126
                                                    ],
                                                    "children": [],
                                                    "content": ")"
                                                }
                                            ],
                                            "content": "big_a)"
                                        }
                                    ],
                                    "content": "*sqrt(big_a)*"
                                }
                            ],
                            "content": "aa2=2*sqrt(big_a)*alpha"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "b1",
                            "range": [
                                1129,
                                1137
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "name": "*",
                                    "range": [
                                        1133,
                                        1136
                                    ],
                                    "children": [
                                        {
                                            "type": "UnaryExpression",
                                            "name": "-",
                                            "range": [
                                                1131,
                                                1132
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "2",
                                                    "range": [
                                                        1132,
                                                        1132
                                                    ],
                                                    "children": [],
                                                    "content": "="
                                                }
                                            ],
                                            "content": "b0="
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "big_a",
                                            "range": [
                                                1134,
                                                1134
                                            ],
                                            "children": [],
                                            "content": "*"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "pmpc",
                                            "range": [
                                                1136,
                                                1136
                                            ],
                                            "children": [],
                                            "content": "ppmc"
                                        }
                                    ],
                                    "content": "big_a*(ppmc"
                                }
                            ],
                            "content": "\n\nb0=big_a*(ppmc+"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "b2",
                            "range": [
                                1138,
                                1147
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "name": "*",
                                    "range": [
                                        1140,
                                        1146
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "big_a",
                                            "range": [
                                                1139,
                                                1139
                                            ],
                                            "children": [],
                                            "content": ")"
                                        },
                                        {
                                            "type": "BinaryExpression",
                                            "name": "-",
                                            "range": [
                                                1144,
                                                1145
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "ppmc",
                                                    "range": [
                                                        1143,
                                                        1143
                                                    ],
                                                    "children": [],
                                                    "content": "-"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "aa2",
                                                    "range": [
                                                        1145,
                                                        1145
                                                    ],
                                                    "children": [],
                                                    "content": "*"
                                                }
                                            ],
                                            "content": "2*"
                                        }
                                    ],
                                    "content": "\nb1=-2*big_a"
                                }
                            ],
                            "content": "aa2)\nb1=-2*big_a*"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "a0",
                            "range": [
                                1148,
                                1153
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "name": "+",
                                    "range": [
                                        1151,
                                        1152
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "pmc",
                                            "range": [
                                                1150,
                                                1150
                                            ],
                                            "children": [],
                                            "content": "b2"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "aa2",
                                            "range": [
                                                1152,
                                                1152
                                            ],
                                            "children": [],
                                            "content": "big_a"
                                        }
                                    ],
                                    "content": "=big_a"
                                }
                            ],
                            "content": "pmpc\nb2=big_a*"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "a1",
                            "range": [
                                1154,
                                1159
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "name": "*",
                                    "range": [
                                        1157,
                                        1158
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "2",
                                            "range": [
                                                1156,
                                                1156
                                            ],
                                            "children": [],
                                            "content": "-"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "mpc",
                                            "range": [
                                                1158,
                                                1158
                                            ],
                                            "children": [],
                                            "content": ")"
                                        }
                                    ],
                                    "content": "aa2)"
                                }
                            ],
                            "content": "(ppmc-aa2)\n"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "a2",
                            "range": [
                                1160,
                                1165
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "name": "-",
                                    "range": [
                                        1163,
                                        1164
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "pmc",
                                            "range": [
                                                1162,
                                                1162
                                            ],
                                            "children": [],
                                            "content": "pmc"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "aa2",
                                            "range": [
                                                1164,
                                                1164
                                            ],
                                            "children": [],
                                            "content": "aa2"
                                        }
                                    ],
                                    "content": "+aa2"
                                }
                            ],
                            "content": "a0=pmc+aa2\n"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "filt",
                            "range": [
                                1167,
                                1173
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "IIRFilter",
                                    "range": [
                                        1169,
                                        1172
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "2",
                                            "range": [
                                                1171,
                                                1171
                                            ],
                                            "children": [],
                                            "content": "\n"
                                        }
                                    ],
                                    "content": "*mpc\na2"
                                }
                            ],
                            "content": "=2*mpc\na2="
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "set_coefficients",
                            "range": [
                                1174,
                                1194
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "set_coefficients",
                                    "range": [
                                        1176,
                                        1193
                                    ],
                                    "children": [
                                        {
                                            "type": "ArrayExpression",
                                            "name": "a_coeffs",
                                            "range": [
                                                1178,
                                                1184
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "a0",
                                                    "range": [
                                                        1179,
                                                        1179
                                                    ],
                                                    "children": [],
                                                    "content": "filt"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "a1",
                                                    "range": [
                                                        1181,
                                                        1181
                                                    ],
                                                    "children": [],
                                                    "content": "IIRFilter"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "a2",
                                                    "range": [
                                                        1183,
                                                        1183
                                                    ],
                                                    "children": [],
                                                    "content": "2"
                                                }
                                            ],
                                            "content": "\nfilt=IIRFilter(2)"
                                        },
                                        {
                                            "type": "ArrayExpression",
                                            "name": "b_coeffs",
                                            "range": [
                                                1186,
                                                1192
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "b0",
                                                    "range": [
                                                        1187,
                                                        1187
                                                    ],
                                                    "children": [],
                                                    "content": "."
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "b1",
                                                    "range": [
                                                        1189,
                                                        1189
                                                    ],
                                                    "children": [],
                                                    "content": "("
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "b2",
                                                    "range": [
                                                        1191,
                                                        1191
                                                    ],
                                                    "children": [],
                                                    "content": "a0"
                                                }
                                            ],
                                            "content": "filt.set_coefficients([a0,"
                                        }
                                    ],
                                    "content": "aa2\n\nfilt=IIRFilter(2)\nfilt.set_coefficients([a0,a1"
                                }
                            ],
                            "content": "pmc-aa2\n\nfilt=IIRFilter(2)\nfilt.set_coefficients([a0,a1,"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "return",
                            "range": [
                                1195,
                                1197
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "filt",
                                    "range": [
                                        1196,
                                        1196
                                    ],
                                    "children": [],
                                    "content": "]"
                                }
                            ],
                            "content": "a2],"
                        }
                    ],
                    "content": "/sqrt(2),\n)->IIRFilter:\n\"\"\" \\n     Creates a high-shelf filter \\n  \\n     >>> filter = make_highshelf(1000, 48000, 6) \\n     >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE \\n     [2.2229172136088806, -3.9587208137297303, 1.7841414181566304, 4.295432981120543, \\n      -7.922740859457287, 3.6756456963725253] \\n     \"\"\"\nw0=tau*frequency/samplerate\n_sin=sin(w0)\n_cos=cos(w0)\nalpha=_sin/(2*q_factor)\nbig_a=10**(gain_db/40)\npmc=(big_a+1)-(big_a-1)*_cos\nppmc=(big_a+1)+(big_a-1)*_cos\nmpc=(big_a-1)-(big_a+1)*_cos\npmpc=(big_a-1)+(big_a+1)*_cos\naa2=2*sqrt(big_a)*alpha\n\nb0=big_a*(ppmc+aa2)\nb1=-2*big_a*pmpc\nb2=big_a*(ppmc-aa2)\na0=pmc+aa2\na1=2*mpc\na2=pmc-aa2\n\nfilt=IIRFilter(2)\nfilt.set_coefficients([a0,a1,a2],"
                }
            ],
            "content": ",b1,b2])\nreturn filt\n\n\ndef make_highshelf(\nfrequency:int,\nsamplerate:int,\ngain_db:float,\nq_factor:float=1/sqrt(2),\n)->IIRFilter:\n\"\"\" \\n     Creates a high-shelf filter \\n  \\n     >>> filter = make_highshelf(1000, 48000, 6) \\n     >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE \\n     [2.2229172136088806, -3.9587208137297303, 1.7841414181566304, 4.295432981120543, \\n      -7.922740859457287, 3.6756456963725253] \\n     \"\"\"\nw0=tau*frequency/samplerate\n_sin=sin(w0)\n_cos=cos(w0)\nalpha=_sin/(2*q_factor)\nbig_a=10**(gain_db/40)\npmc=(big_a+1)-(big_a-1)*_cos\nppmc=(big_a+1)+(big_a-1)*_cos\nmpc=(big_a-1)-(big_a+1)*_cos\npmpc=(big_a-1)+(big_a+1)*_cos\naa2=2*sqrt(big_a)*alpha\n\nb0=big_a*(ppmc+aa2)\nb1=-2*big_a*pmpc\nb2=big_a*(ppmc-aa2)\na0=pmc+aa2\na1=2*mpc\na2=pmc-aa2\n\nfilt=IIRFilter(2)\nfilt.set_coefficients([a0,a1,a2],"
        }
    ],
    "content": "def make_lowpass(\nfrequency:int,\nsamplerate:int,\nq_factor:float=1/sqrt(2),\n)->IIRFilter:\n\"\"\" \\n     Creates a low-pass filter \\n  \\n     >>> filter = make_lowpass(1000, 48000) \\n     >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE \\n     [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.004277569313094809, \\n      0.008555138626189618, 0.004277569313094809] \\n     \"\"\"\nw0=tau*frequency/samplerate\n_sin=sin(w0)\n_cos=cos(w0)\nalpha=_sin/(2*q_factor)\n\nb0=(1-_cos)/2\nb1=1-_cos\n\na0=1+alpha\na1=-2*_cos\na2=1-alpha\n\nfilt=IIRFilter(2)\nfilt.set_coefficients([a0,a1,a2],[b0,b1,b0])\nreturn filt\n\n\ndef make_highpass(\nfrequency:int,\nsamplerate:int,\nq_factor:float=1/sqrt(2),\n)->IIRFilter:\n\"\"\" \\n     Creates a high-pass filter \\n  \\n     >>> filter = make_highpass(1000, 48000) \\n     >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE \\n     [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.9957224306869052, \\n      -1.9914448613738105, 0.9957224306869052] \\n     \"\"\"\nw0=tau*frequency/samplerate\n_sin=sin(w0)\n_cos=cos(w0)\nalpha=_sin/(2*q_factor)\n\nb0=(1+_cos)/2\nb1=-1-_cos\n\na0=1+alpha\na1=-2*_cos\na2=1-alpha\n\nfilt=IIRFilter(2)\nfilt.set_coefficients([a0,a1,a2],[b0,b1,b0])\nreturn filt\n\n\ndef make_bandpass(\nfrequency:int,\nsamplerate:int,\nq_factor:float=1/sqrt(2),\n)->IIRFilter:\n\"\"\" \\n     Creates a band-pass filter \\n  \\n     >>> filter = make_bandpass(1000, 48000) \\n     >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE \\n     [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.06526309611002579, \\n      0, -0.06526309611002579] \\n     \"\"\"\nw0=tau*frequency/samplerate\n_sin=sin(w0)\n_cos=cos(w0)\nalpha=_sin/(2*q_factor)\n\nb0=_sin/2\nb1=0\nb2=-b0\n\na0=1+alpha\na1=-2*_cos\na2=1-alpha\n\nfilt=IIRFilter(2)\nfilt.set_coefficients([a0,a1,a2],[b0,b1,b2])\nreturn filt\n\n\ndef make_allpass(\nfrequency:int,\nsamplerate:int,\nq_factor:float=1/sqrt(2),\n)->IIRFilter:\n\"\"\" \\n     Creates an all-pass filter \\n  \\n     >>> filter = make_allpass(1000, 48000) \\n     >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE \\n     [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.9077040443587427, \\n      -1.9828897227476208, 1.0922959556412573] \\n     \"\"\"\nw0=tau*frequency/samplerate\n_sin=sin(w0)\n_cos=cos(w0)\nalpha=_sin/(2*q_factor)\n\nb0=1-alpha\nb1=-2*_cos\nb2=1+alpha\n\nfilt=IIRFilter(2)\nfilt.set_coefficients([b2,b1,b0],[b0,b1,b2])\nreturn filt\n\n\ndef make_peak(\nfrequency:int,\nsamplerate:int,\ngain_db:float,\nq_factor:float=1/sqrt(2),\n)->IIRFilter:\n\"\"\" \\n     Creates a peak filter \\n  \\n     >>> filter = make_peak(1000, 48000, 6) \\n     >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE \\n     [1.0653405327119334, -1.9828897227476208, 0.9346594672880666, 1.1303715025601122, \\n      -1.9828897227476208, 0.8696284974398878] \\n     \"\"\"\nw0=tau*frequency/samplerate\n_sin=sin(w0)\n_cos=cos(w0)\nalpha=_sin/(2*q_factor)\nbig_a=10**(gain_db/40)\n\nb0=1+alpha*big_a\nb1=-2*_cos\nb2=1-alpha*big_a\na0=1+alpha/big_a\na1=-2*_cos\na2=1-alpha/big_a\n\nfilt=IIRFilter(2)\nfilt.set_coefficients([a0,a1,a2],[b0,b1,b2])\nreturn filt\n\n\ndef make_lowshelf(\nfrequency:int,\nsamplerate:int,\ngain_db:float,\nq_factor:float=1/sqrt(2),\n)->IIRFilter:\n\"\"\" \\n     Creates a low-shelf filter \\n  \\n     >>> filter = make_lowshelf(1000, 48000, 6) \\n     >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE \\n     [3.0409336710888786, -5.608870992220748, 2.602157875636628, 3.139954022810743, \\n      -5.591841778072785, 2.5201667380627257] \\n     \"\"\"\nw0=tau*frequency/samplerate\n_sin=sin(w0)\n_cos=cos(w0)\nalpha=_sin/(2*q_factor)\nbig_a=10**(gain_db/40)\npmc=(big_a+1)-(big_a-1)*_cos\nppmc=(big_a+1)+(big_a-1)*_cos\nmpc=(big_a-1)-(big_a+1)*_cos\npmpc=(big_a-1)+(big_a+1)*_cos\naa2=2*sqrt(big_a)*alpha\n\nb0=big_a*(pmc+aa2)\nb1=2*big_a*mpc\nb2=big_a*(pmc-aa2)\na0=ppmc+aa2\na1=-2*pmpc\na2=ppmc-aa2\n\nfilt=IIRFilter(2)\nfilt.set_coefficients([a0,a1,a2],[b0,b1,b2])\nreturn filt\n\n\ndef make_highshelf(\nfrequency:int,\nsamplerate:int,\ngain_db:float,\nq_factor:float=1/sqrt(2),\n)->IIRFilter:\n\"\"\" \\n     Creates a high-shelf filter \\n  \\n     >>> filter = make_highshelf(1000, 48000, 6) \\n     >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE \\n     [2.2229172136088806, -3.9587208137297303, 1.7841414181566304, 4.295432981120543, \\n      -7.922740859457287, 3.6756456963725253] \\n     \"\"\"\nw0=tau*frequency/samplerate\n_sin=sin(w0)\n_cos=cos(w0)\nalpha=_sin/(2*q_factor)\nbig_a=10**(gain_db/40)\npmc=(big_a+1)-(big_a-1)*_cos\nppmc=(big_a+1)+(big_a-1)*_cos\nmpc=(big_a-1)-(big_a+1)*_cos\npmpc=(big_a-1)+(big_a+1)*_cos\naa2=2*sqrt(big_a)*alpha\n\nb0=big_a*(ppmc+aa2)\nb1=-2*big_a*pmpc\nb2=big_a*(ppmc-aa2)\na0=pmc+aa2\na1=2*mpc\na2=pmc-aa2\n\nfilt=IIRFilter(2)\nfilt.set_coefficients([a0,a1,a2],"
}