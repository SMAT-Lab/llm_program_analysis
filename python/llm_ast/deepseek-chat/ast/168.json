{
    "type": "Program",
    "name": "Global",
    "range": [
        23,
        278
    ],
    "children": [
        {
            "type": "FunctionDecl",
            "name": "__init__",
            "range": [
                27,
                116
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "",
                    "range": [
                        29,
                        70
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "self",
                            "range": [
                                31,
                                31
                            ],
                            "children": [],
                            "content": "self"
                        },
                        {
                            "type": "Parameter",
                            "name": "redis_host",
                            "range": [
                                34,
                                40
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "str",
                                    "range": [
                                        35,
                                        36
                                    ],
                                    "children": [],
                                    "content": ":str"
                                },
                                {
                                    "type": "DefaultValue",
                                    "name": "RATE_LIMIT_SETTINGS.redis_host",
                                    "range": [
                                        37,
                                        40
                                    ],
                                    "children": [],
                                    "content": "=RATE_LIMIT_SETTINGS.redis_host"
                                }
                            ],
                            "content": "redis_host:str=RATE_LIMIT_SETTINGS.redis_host"
                        },
                        {
                            "type": "Parameter",
                            "name": "redis_port",
                            "range": [
                                43,
                                49
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "str",
                                    "range": [
                                        44,
                                        45
                                    ],
                                    "children": [],
                                    "content": ":str"
                                },
                                {
                                    "type": "DefaultValue",
                                    "name": "RATE_LIMIT_SETTINGS.redis_port",
                                    "range": [
                                        46,
                                        49
                                    ],
                                    "children": [],
                                    "content": "=RATE_LIMIT_SETTINGS.redis_port"
                                }
                            ],
                            "content": "redis_port:str=RATE_LIMIT_SETTINGS.redis_port"
                        },
                        {
                            "type": "Parameter",
                            "name": "redis_password",
                            "range": [
                                52,
                                58
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "str",
                                    "range": [
                                        53,
                                        54
                                    ],
                                    "children": [],
                                    "content": ":str"
                                },
                                {
                                    "type": "DefaultValue",
                                    "name": "RATE_LIMIT_SETTINGS.redis_password",
                                    "range": [
                                        55,
                                        58
                                    ],
                                    "children": [],
                                    "content": "=RATE_LIMIT_SETTINGS.redis_password"
                                }
                            ],
                            "content": "redis_password:str=RATE_LIMIT_SETTINGS.redis_password"
                        },
                        {
                            "type": "Parameter",
                            "name": "requests_per_minute",
                            "range": [
                                61,
                                67
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "int",
                                    "range": [
                                        62,
                                        63
                                    ],
                                    "children": [],
                                    "content": ":int"
                                },
                                {
                                    "type": "DefaultValue",
                                    "name": "RATE_LIMIT_SETTINGS.requests_per_minute",
                                    "range": [
                                        64,
                                        67
                                    ],
                                    "children": [],
                                    "content": "=RATE_LIMIT_SETTINGS.requests_per_minute"
                                }
                            ],
                            "content": "requests_per_minute:int=RATE_LIMIT_SETTINGS.requests_per_minute"
                        }
                    ],
                    "content": "(\nself,\nredis_host:str=RATE_LIMIT_SETTINGS.redis_host,\nredis_port:str=RATE_LIMIT_SETTINGS.redis_port,\nredis_password:str=RATE_LIMIT_SETTINGS.redis_password,\nrequests_per_minute:int=RATE_LIMIT_SETTINGS.requests_per_minute,\n)"
                },
                {
                    "type": "BlockStatement",
                    "name": "",
                    "range": [
                        72,
                        116
                    ],
                    "children": [
                        {
                            "type": "AssignmentExpression",
                            "name": "self.redis",
                            "range": [
                                73,
                                103
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "Redis",
                                    "range": [
                                        77,
                                        103
                                    ],
                                    "children": [
                                        {
                                            "type": "ArgumentList",
                                            "name": "",
                                            "range": [
                                                78,
                                                103
                                            ],
                                            "children": [
                                                {
                                                    "type": "Argument",
                                                    "name": "host=redis_host",
                                                    "range": [
                                                        80,
                                                        82
                                                    ],
                                                    "children": [],
                                                    "content": "host=redis_host"
                                                },
                                                {
                                                    "type": "Argument",
                                                    "name": "port=int(redis_port)",
                                                    "range": [
                                                        85,
                                                        90
                                                    ],
                                                    "children": [],
                                                    "content": "port=int(redis_port)"
                                                },
                                                {
                                                    "type": "Argument",
                                                    "name": "password=redis_password",
                                                    "range": [
                                                        93,
                                                        95
                                                    ],
                                                    "children": [],
                                                    "content": "password=redis_password"
                                                },
                                                {
                                                    "type": "Argument",
                                                    "name": "decode_responses=True",
                                                    "range": [
                                                        98,
                                                        100
                                                    ],
                                                    "children": [],
                                                    "content": "decode_responses=True"
                                                }
                                            ],
                                            "content": "(\nhost=redis_host,\nport=int(redis_port),\npassword=redis_password,\ndecode_responses=True,\n)"
                                        }
                                    ],
                                    "content": "Redis(\nhost=redis_host,\nport=int(redis_port),\npassword=redis_password,\ndecode_responses=True,\n)"
                                }
                            ],
                            "content": "self.redis=Redis(\nhost=redis_host,\nport=int(redis_port),\npassword=redis_password,\ndecode_responses=True,\n)"
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "self.window",
                            "range": [
                                105,
                                109
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "60",
                                    "range": [
                                        108,
                                        109
                                    ],
                                    "children": [],
                                    "content": "=60"
                                }
                            ],
                            "content": "self.window=60"
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "self.max_requests",
                            "range": [
                                111,
                                115
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "requests_per_minute",
                                    "range": [
                                        114,
                                        115
                                    ],
                                    "children": [],
                                    "content": "=requests_per_minute"
                                }
                            ],
                            "content": "self.max_requests=requests_per_minute"
                        }
                    ],
                    "content": "\nself.redis=Redis(\nhost=redis_host,\nport=int(redis_port),\npassword=redis_password,\ndecode_responses=True,\n)\nself.window=60\nself.max_requests=requests_per_minute\n"
                }
            ],
            "content": "def __init__(\nself,\nredis_host:str=RATE_LIMIT_SETTINGS.redis_host,\nredis_port:str=RATE_LIMIT_SETTINGS.redis_port,\nredis_password:str=RATE_LIMIT_SETTINGS.redis_password,\nrequests_per_minute:int=RATE_LIMIT_SETTINGS.requests_per_minute,\n):\nself.redis=Redis(\nhost=redis_host,\nport=int(redis_port),\npassword=redis_password,\ndecode_responses=True,\n)\nself.window=60\nself.max_requests=requests_per_minute\n"
        },
        {
            "type": "FunctionDecl",
            "name": "check_rate_limit",
            "range": [
                118,
                278
            ],
            "children": [
                {
                    "type": "FunctionSignature",
                    "name": "check_rate_limit",
                    "range": [
                        118,
                        138
                    ],
                    "children": [
                        {
                            "type": "Keyword",
                            "name": "async",
                            "range": [
                                118,
                                118
                            ],
                            "children": [],
                            "content": "async"
                        },
                        {
                            "type": "Keyword",
                            "name": "def",
                            "range": [
                                119,
                                119
                            ],
                            "children": [],
                            "content": "def"
                        },
                        {
                            "type": "Identifier",
                            "name": "check_rate_limit",
                            "range": [
                                120,
                                120
                            ],
                            "children": [],
                            "content": "check_rate_limit"
                        },
                        {
                            "type": "Parameter",
                            "name": "self",
                            "range": [
                                122,
                                122
                            ],
                            "children": [],
                            "content": "self"
                        },
                        {
                            "type": "Parameter",
                            "name": "api_key_id",
                            "range": [
                                124,
                                124
                            ],
                            "children": [],
                            "content": "api_key_id"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                126,
                                126
                            ],
                            "children": [],
                            "content": "str"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "Tuple",
                            "range": [
                                130,
                                130
                            ],
                            "children": [],
                            "content": "Tuple"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "bool",
                            "range": [
                                132,
                                132
                            ],
                            "children": [],
                            "content": "bool"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "int",
                            "range": [
                                134,
                                134
                            ],
                            "children": [],
                            "content": "int"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "int",
                            "range": [
                                136,
                                136
                            ],
                            "children": [],
                            "content": "int"
                        }
                    ],
                    "content": "async def check_rate_limit(self,api_key_id:str)->Tuple[bool,int,int]:"
                },
                {
                    "type": "FunctionBody",
                    "name": "check_rate_limit",
                    "range": [
                        139,
                        278
                    ],
                    "children": [
                        {
                            "type": "Docstring",
                            "name": "Docstring",
                            "range": [
                                140,
                                142
                            ],
                            "children": [],
                            "content": "\"\"\" \\n         Check if request is within rate limits. \\n  \\n         Args: \\n             api_key_id: The API key identifier to check \\n  \\n         Returns: \\n             Tuple of (is_allowed, remaining_requests, reset_time) \\n         \"\"\""
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "now = time.time()",
                            "range": [
                                144,
                                150
                            ],
                            "children": [],
                            "content": "now=time.time()"
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "window_start = now - self.window",
                            "range": [
                                152,
                                158
                            ],
                            "children": [],
                            "content": "window_start=now-self.window"
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "key = f\"ratelimit:{api_key_id}:1min\"",
                            "range": [
                                160,
                                163
                            ],
                            "children": [],
                            "content": "key=f \"ratelimit:{api_key_id}:1min\""
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "pipe = self.redis.pipeline()",
                            "range": [
                                166,
                                174
                            ],
                            "children": [],
                            "content": "pipe=self.redis.pipeline()"
                        },
                        {
                            "type": "CallExpression",
                            "name": "pipe.zremrangebyscore(key, 0, window_start)",
                            "range": [
                                176,
                                185
                            ],
                            "children": [],
                            "content": "pipe.zremrangebyscore(key,0,window_start)"
                        },
                        {
                            "type": "CallExpression",
                            "name": "pipe.zadd(key, {str(now): now})",
                            "range": [
                                187,
                                201
                            ],
                            "children": [],
                            "content": "pipe.zadd(key,{str(now):now})"
                        },
                        {
                            "type": "CallExpression",
                            "name": "pipe.zcount(key, window_start, now)",
                            "range": [
                                203,
                                212
                            ],
                            "children": [],
                            "content": "pipe.zcount(key,window_start,now)"
                        },
                        {
                            "type": "CallExpression",
                            "name": "pipe.expire(key, self.window)",
                            "range": [
                                214,
                                223
                            ],
                            "children": [],
                            "content": "pipe.expire(key,self.window)"
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "_, _, request_count, _ = pipe.execute()",
                            "range": [
                                226,
                                238
                            ],
                            "children": [],
                            "content": "_,_,request_count,_=pipe.execute()"
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "remaining = max(0, self.max_requests - request_count)",
                            "range": [
                                241,
                                252
                            ],
                            "children": [],
                            "content": "remaining=max(0,self.max_requests-request_count)"
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "reset_time = int(now + self.window)",
                            "range": [
                                254,
                                263
                            ],
                            "children": [],
                            "content": "reset_time=int(now+self.window)"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "return request_count <= self.max_requests, remaining, reset_time",
                            "range": [
                                266,
                                276
                            ],
                            "children": [],
                            "content": "return request_count<=self.max_requests,remaining,reset_time"
                        }
                    ],
                    "content": "\n\"\"\" \\n         Check if request is within rate limits. \\n  \\n         Args: \\n             api_key_id: The API key identifier to check \\n  \\n         Returns: \\n             Tuple of (is_allowed, remaining_requests, reset_time) \\n         \"\"\"\nnow=time.time()\nwindow_start=now-self.window\nkey=f \"ratelimit:{api_key_id}:1min\"\n\npipe=self.redis.pipeline()\npipe.zremrangebyscore(key,0,window_start)\npipe.zadd(key,{str(now):now})\npipe.zcount(key,window_start,now)\npipe.expire(key,self.window)\n\n_,_,request_count,_=pipe.execute()\n\nremaining=max(0,self.max_requests-request_count)\nreset_time=int(now+self.window)\n\nreturn request_count<=self.max_requests,remaining,reset_time\n"
                }
            ],
            "content": "async def check_rate_limit(self,api_key_id:str)->Tuple[bool,int,int]:\n\"\"\" \\n         Check if request is within rate limits. \\n  \\n         Args: \\n             api_key_id: The API key identifier to check \\n  \\n         Returns: \\n             Tuple of (is_allowed, remaining_requests, reset_time) \\n         \"\"\"\nnow=time.time()\nwindow_start=now-self.window\nkey=f \"ratelimit:{api_key_id}:1min\"\n\npipe=self.redis.pipeline()\npipe.zremrangebyscore(key,0,window_start)\npipe.zadd(key,{str(now):now})\npipe.zcount(key,window_start,now)\npipe.expire(key,self.window)\n\n_,_,request_count,_=pipe.execute()\n\nremaining=max(0,self.max_requests-request_count)\nreset_time=int(now+self.window)\n\nreturn request_count<=self.max_requests,remaining,reset_time\n"
        }
    ],
    "content": "class RateLimiter:\ndef __init__(\nself,\nredis_host:str=RATE_LIMIT_SETTINGS.redis_host,\nredis_port:str=RATE_LIMIT_SETTINGS.redis_port,\nredis_password:str=RATE_LIMIT_SETTINGS.redis_password,\nrequests_per_minute:int=RATE_LIMIT_SETTINGS.requests_per_minute,\n):\nself.redis=Redis(\nhost=redis_host,\nport=int(redis_port),\npassword=redis_password,\ndecode_responses=True,\n)\nself.window=60\nself.max_requests=requests_per_minute\n\nasync def check_rate_limit(self,api_key_id:str)->Tuple[bool,int,int]:\n\"\"\" \\n         Check if request is within rate limits. \\n  \\n         Args: \\n             api_key_id: The API key identifier to check \\n  \\n         Returns: \\n             Tuple of (is_allowed, remaining_requests, reset_time) \\n         \"\"\"\nnow=time.time()\nwindow_start=now-self.window\nkey=f \"ratelimit:{api_key_id}:1min\"\n\npipe=self.redis.pipeline()\npipe.zremrangebyscore(key,0,window_start)\npipe.zadd(key,{str(now):now})\npipe.zcount(key,window_start,now)\npipe.expire(key,self.window)\n\n_,_,request_count,_=pipe.execute()\n\nremaining=max(0,self.max_requests-request_count)\nreset_time=int(now+self.window)\n\nreturn request_count<=self.max_requests,remaining,reset_time\n"
}