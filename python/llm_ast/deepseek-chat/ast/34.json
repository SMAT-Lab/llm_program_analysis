{
    "type": "Program",
    "name": "Global",
    "range": [
        0,
        356
    ],
    "children": [
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                0,
                3
            ],
            "children": [
                {
                    "type": "ImportFrom",
                    "name": "functools",
                    "range": [
                        0,
                        3
                    ],
                    "children": [
                        {
                            "type": "ImportedItem",
                            "name": "wraps",
                            "range": [
                                3,
                                3
                            ],
                            "children": [],
                            "content": "wraps"
                        }
                    ],
                    "content": "from functools import wraps"
                }
            ],
            "content": "from functools import wraps"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                5,
                20
            ],
            "children": [
                {
                    "type": "ImportFrom",
                    "name": "typing",
                    "range": [
                        5,
                        20
                    ],
                    "children": [
                        {
                            "type": "ImportedItem",
                            "name": "Any",
                            "range": [
                                8,
                                8
                            ],
                            "children": [],
                            "content": "Any"
                        },
                        {
                            "type": "ImportedItem",
                            "name": "Callable",
                            "range": [
                                10,
                                10
                            ],
                            "children": [],
                            "content": "Callable"
                        },
                        {
                            "type": "ImportedItem",
                            "name": "Concatenate",
                            "range": [
                                12,
                                12
                            ],
                            "children": [],
                            "content": "Concatenate"
                        },
                        {
                            "type": "ImportedItem",
                            "name": "Coroutine",
                            "range": [
                                14,
                                14
                            ],
                            "children": [],
                            "content": "Coroutine"
                        },
                        {
                            "type": "ImportedItem",
                            "name": "ParamSpec",
                            "range": [
                                16,
                                16
                            ],
                            "children": [],
                            "content": "ParamSpec"
                        },
                        {
                            "type": "ImportedItem",
                            "name": "TypeVar",
                            "range": [
                                18,
                                18
                            ],
                            "children": [],
                            "content": "TypeVar"
                        },
                        {
                            "type": "ImportedItem",
                            "name": "cast",
                            "range": [
                                20,
                                20
                            ],
                            "children": [],
                            "content": "cast"
                        }
                    ],
                    "content": "from typing import Any,Callable,Concatenate,Coroutine,ParamSpec,TypeVar,cast"
                }
            ],
            "content": "from typing import Any,Callable,Concatenate,Coroutine,ParamSpec,TypeVar,cast"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                23,
                30
            ],
            "children": [
                {
                    "type": "ImportFrom",
                    "name": "backend.data.credit",
                    "range": [
                        23,
                        30
                    ],
                    "children": [
                        {
                            "type": "ImportedItem",
                            "name": "get_user_credit_model",
                            "range": [
                                30,
                                30
                            ],
                            "children": [],
                            "content": "get_user_credit_model"
                        }
                    ],
                    "content": "from backend.data.credit import get_user_credit_model"
                }
            ],
            "content": "from backend.data.credit import get_user_credit_model"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                32,
                74
            ],
            "children": [
                {
                    "type": "ImportFrom",
                    "name": "backend.data.execution",
                    "range": [
                        32,
                        74
                    ],
                    "children": [
                        {
                            "type": "ImportedItem",
                            "name": "ExecutionResult",
                            "range": [
                                41,
                                41
                            ],
                            "children": [],
                            "content": "ExecutionResult"
                        },
                        {
                            "type": "ImportedItem",
                            "name": "RedisExecutionEventBus",
                            "range": [
                                44,
                                44
                            ],
                            "children": [],
                            "content": "RedisExecutionEventBus"
                        },
                        {
                            "type": "ImportedItem",
                            "name": "create_graph_execution",
                            "range": [
                                47,
                                47
                            ],
                            "children": [],
                            "content": "create_graph_execution"
                        },
                        {
                            "type": "ImportedItem",
                            "name": "get_execution_results",
                            "range": [
                                50,
                                50
                            ],
                            "children": [],
                            "content": "get_execution_results"
                        },
                        {
                            "type": "ImportedItem",
                            "name": "get_incomplete_executions",
                            "range": [
                                53,
                                53
                            ],
                            "children": [],
                            "content": "get_incomplete_executions"
                        },
                        {
                            "type": "ImportedItem",
                            "name": "get_latest_execution",
                            "range": [
                                56,
                                56
                            ],
                            "children": [],
                            "content": "get_latest_execution"
                        },
                        {
                            "type": "ImportedItem",
                            "name": "update_execution_status",
                            "range": [
                                59,
                                59
                            ],
                            "children": [],
                            "content": "update_execution_status"
                        },
                        {
                            "type": "ImportedItem",
                            "name": "update_graph_execution_stats",
                            "range": [
                                62,
                                62
                            ],
                            "children": [],
                            "content": "update_graph_execution_stats"
                        },
                        {
                            "type": "ImportedItem",
                            "name": "update_node_execution_stats",
                            "range": [
                                65,
                                65
                            ],
                            "children": [],
                            "content": "update_node_execution_stats"
                        },
                        {
                            "type": "ImportedItem",
                            "name": "upsert_execution_input",
                            "range": [
                                68,
                                68
                            ],
                            "children": [],
                            "content": "upsert_execution_input"
                        },
                        {
                            "type": "ImportedItem",
                            "name": "upsert_execution_output",
                            "range": [
                                71,
                                71
                            ],
                            "children": [],
                            "content": "upsert_execution_output"
                        }
                    ],
                    "content": "from backend.data.execution import(\nExecutionResult,\nRedisExecutionEventBus,\ncreate_graph_execution,\nget_execution_results,\nget_incomplete_executions,\nget_latest_execution,\nupdate_execution_status,\nupdate_graph_execution_stats,\nupdate_node_execution_stats,\nupsert_execution_input,\nupsert_execution_output,\n)"
                }
            ],
            "content": "from backend.data.execution import(\nExecutionResult,\nRedisExecutionEventBus,\ncreate_graph_execution,\nget_execution_results,\nget_incomplete_executions,\nget_latest_execution,\nupdate_execution_status,\nupdate_graph_execution_stats,\nupdate_node_execution_stats,\nupsert_execution_input,\nupsert_execution_output,\n)"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                76,
                86
            ],
            "children": [
                {
                    "type": "ImportFrom",
                    "name": "backend.data.graph",
                    "range": [
                        76,
                        86
                    ],
                    "children": [
                        {
                            "type": "ImportedItem",
                            "name": "get_graph",
                            "range": [
                                83,
                                83
                            ],
                            "children": [],
                            "content": "get_graph"
                        },
                        {
                            "type": "ImportedItem",
                            "name": "get_node",
                            "range": [
                                85,
                                85
                            ],
                            "children": [],
                            "content": "get_node"
                        }
                    ],
                    "content": "from backend.data.graph import get_graph,get_node\n"
                }
            ],
            "content": "from backend.data.graph import get_graph,get_node\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                87,
                108
            ],
            "children": [
                {
                    "type": "ImportFrom",
                    "name": "backend.data.user",
                    "range": [
                        87,
                        108
                    ],
                    "children": [
                        {
                            "type": "ImportedItem",
                            "name": "get_user_integrations",
                            "range": [
                                96,
                                96
                            ],
                            "children": [],
                            "content": "get_user_integrations"
                        },
                        {
                            "type": "ImportedItem",
                            "name": "get_user_metadata",
                            "range": [
                                99,
                                99
                            ],
                            "children": [],
                            "content": "get_user_metadata"
                        },
                        {
                            "type": "ImportedItem",
                            "name": "update_user_integrations",
                            "range": [
                                102,
                                102
                            ],
                            "children": [],
                            "content": "update_user_integrations"
                        },
                        {
                            "type": "ImportedItem",
                            "name": "update_user_metadata",
                            "range": [
                                105,
                                105
                            ],
                            "children": [],
                            "content": "update_user_metadata"
                        }
                    ],
                    "content": "from backend.data.user import(\nget_user_integrations,\nget_user_metadata,\nupdate_user_integrations,\nupdate_user_metadata,\n)"
                }
            ],
            "content": "from backend.data.user import(\nget_user_integrations,\nget_user_metadata,\nupdate_user_integrations,\nupdate_user_metadata,\n)"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                110,
                122
            ],
            "children": [
                {
                    "type": "ImportFrom",
                    "name": "backend.util.service",
                    "range": [
                        110,
                        122
                    ],
                    "children": [
                        {
                            "type": "ImportedItem",
                            "name": "AppService",
                            "range": [
                                117,
                                117
                            ],
                            "children": [],
                            "content": "AppService"
                        },
                        {
                            "type": "ImportedItem",
                            "name": "expose",
                            "range": [
                                119,
                                119
                            ],
                            "children": [],
                            "content": "expose"
                        },
                        {
                            "type": "ImportedItem",
                            "name": "register_pydantic_serializers",
                            "range": [
                                121,
                                121
                            ],
                            "children": [],
                            "content": "register_pydantic_serializers"
                        }
                    ],
                    "content": "from backend.util.service import AppService,expose,register_pydantic_serializers\n"
                }
            ],
            "content": "from backend.util.service import AppService,expose,register_pydantic_serializers\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                123,
                131
            ],
            "children": [
                {
                    "type": "ImportFrom",
                    "name": "backend.util.settings",
                    "range": [
                        123,
                        131
                    ],
                    "children": [
                        {
                            "type": "ImportedItem",
                            "name": "Config",
                            "range": [
                                130,
                                130
                            ],
                            "children": [],
                            "content": "Config"
                        }
                    ],
                    "content": "from backend.util.settings import Config\n"
                }
            ],
            "content": "from backend.util.settings import Config\n"
        },
        {
            "type": "VariableDeclaration",
            "name": "P",
            "range": [
                133,
                138
            ],
            "children": [
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        134,
                        134
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "ParamSpec",
                            "range": [
                                135,
                                138
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "\"P\"",
                                    "range": [
                                        137,
                                        137
                                    ],
                                    "children": [],
                                    "content": "\"P\""
                                }
                            ],
                            "content": "ParamSpec(\"P\")"
                        }
                    ],
                    "content": "="
                }
            ],
            "content": "P=ParamSpec(\"P\")"
        },
        {
            "type": "VariableDeclaration",
            "name": "R",
            "range": [
                140,
                145
            ],
            "children": [
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        141,
                        141
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "TypeVar",
                            "range": [
                                142,
                                145
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "\"R\"",
                                    "range": [
                                        144,
                                        144
                                    ],
                                    "children": [],
                                    "content": "\"R\""
                                }
                            ],
                            "content": "TypeVar(\"R\")"
                        }
                    ],
                    "content": "="
                }
            ],
            "content": "R=TypeVar(\"R\")"
        },
        {
            "type": "VariableDeclaration",
            "name": "config",
            "range": [
                147,
                151
            ],
            "children": [
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        148,
                        148
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "Config",
                            "range": [
                                149,
                                151
                            ],
                            "children": [],
                            "content": "Config()"
                        }
                    ],
                    "content": "="
                }
            ],
            "content": "config=Config()"
        },
        {
            "type": "FunctionDecl",
            "name": "__init__",
            "range": [
                162,
                196
            ],
            "children": [
                {
                    "type": "CallExpression",
                    "name": "super",
                    "range": [
                        169,
                        175
                    ],
                    "children": [],
                    "content": "super().__init__()"
                },
                {
                    "type": "AssignmentExpression",
                    "name": "use_db",
                    "range": [
                        177,
                        181
                    ],
                    "children": [],
                    "content": "self.use_db=True"
                },
                {
                    "type": "AssignmentExpression",
                    "name": "use_redis",
                    "range": [
                        183,
                        187
                    ],
                    "children": [],
                    "content": "self.use_redis=True"
                },
                {
                    "type": "AssignmentExpression",
                    "name": "event_queue",
                    "range": [
                        189,
                        195
                    ],
                    "children": [],
                    "content": "self.event_queue=RedisExecutionEventBus()"
                }
            ],
            "content": "def __init__(self):\nsuper().__init__()\nself.use_db=True\nself.use_redis=True\nself.event_queue=RedisExecutionEventBus()\n"
        },
        {
            "type": "FunctionDecl",
            "name": "get_port",
            "range": [
                201,
                215
            ],
            "children": [
                {
                    "type": "ReturnStatement",
                    "name": "return",
                    "range": [
                        211,
                        215
                    ],
                    "children": [],
                    "content": "return config.database_api_port\n"
                }
            ],
            "content": "def get_port(cls)->int:\nreturn config.database_api_port\n"
        },
        {
            "type": "FunctionDecl",
            "name": "send_execution_update",
            "range": [
                221,
                239
            ],
            "children": [
                {
                    "type": "CallExpression",
                    "name": "publish",
                    "range": [
                        231,
                        238
                    ],
                    "children": [],
                    "content": "self.event_queue.publish(execution_result)"
                }
            ],
            "content": "send_execution_update(self,execution_result:ExecutionResult):\nself.event_queue.publish(execution_result)\n"
        },
        {
            "type": "FunctionDecl",
            "name": "exposed_run_and_wait",
            "range": [
                245,
                356
            ],
            "children": [
                {
                    "type": "FunctionDecl",
                    "name": "wrapper",
                    "range": [
                        290,
                        337
                    ],
                    "children": [
                        {
                            "type": "AssignmentExpression",
                            "name": "coroutine",
                            "range": [
                                314,
                                324
                            ],
                            "children": [],
                            "content": "coroutine=f(*args,**kwargs)"
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "res",
                            "range": [
                                326,
                                334
                            ],
                            "children": [],
                            "content": "res=self.run_and_wait(coroutine)\n"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "return",
                            "range": [
                                335,
                                337
                            ],
                            "children": [],
                            "content": "return res\n"
                        }
                    ],
                    "content": "wrapper(self,*args:P.args,**kwargs:P.kwargs)->R:\ncoroutine=f(*args,**kwargs)\nres=self.run_and_wait(coroutine)\nreturn res\n"
                },
                {
                    "type": "CallExpression",
                    "name": "register_pydantic_serializers",
                    "range": [
                        348,
                        352
                    ],
                    "children": [],
                    "content": "register_pydantic_serializers(f)\n"
                },
                {
                    "type": "ReturnStatement",
                    "name": "return",
                    "range": [
                        354,
                        356
                    ],
                    "children": [],
                    "content": "return wrapper\n"
                }
            ],
            "content": "exposed_run_and_wait(\nf:Callable[P,Coroutine[None,None,R]]\n)->Callable[Concatenate[object,P],R]:\n@expose\n@wraps(f)\ndef wrapper(self,*args:P.args,**kwargs:P.kwargs)->R:\ncoroutine=f(*args,**kwargs)\nres=self.run_and_wait(coroutine)\nreturn res\n\n#Register serializers for annotations on bare function\nregister_pydantic_serializers(f)\n\nreturn wrapper\n"
        }
    ],
    "content": "from functools import wraps\nfrom typing import Any,Callable,Concatenate,Coroutine,ParamSpec,TypeVar,cast\n\nfrom backend.data.credit import get_user_credit_model\nfrom backend.data.execution import(\nExecutionResult,\nRedisExecutionEventBus,\ncreate_graph_execution,\nget_execution_results,\nget_incomplete_executions,\nget_latest_execution,\nupdate_execution_status,\nupdate_graph_execution_stats,\nupdate_node_execution_stats,\nupsert_execution_input,\nupsert_execution_output,\n)\nfrom backend.data.graph import get_graph,get_node\nfrom backend.data.user import(\nget_user_integrations,\nget_user_metadata,\nupdate_user_integrations,\nupdate_user_metadata,\n)\nfrom backend.util.service import AppService,expose,register_pydantic_serializers\nfrom backend.util.settings import Config\n\nP=ParamSpec(\"P\")\nR=TypeVar(\"R\")\nconfig=Config()\n\n\nclass DatabaseManager(AppService):\ndef __init__(self):\nsuper().__init__()\nself.use_db=True\nself.use_redis=True\nself.event_queue=RedisExecutionEventBus()\n\n@classmethod\ndef get_port(cls)->int:\nreturn config.database_api_port\n\n@expose\ndef send_execution_update(self,execution_result:ExecutionResult):\nself.event_queue.publish(execution_result)\n\n@staticmethod\ndef exposed_run_and_wait(\nf:Callable[P,Coroutine[None,None,R]]\n)->Callable[Concatenate[object,P],R]:\n@expose\n@wraps(f)\ndef wrapper(self,*args:P.args,**kwargs:P.kwargs)->R:\ncoroutine=f(*args,**kwargs)\nres=self.run_and_wait(coroutine)\nreturn res\n\n#Register serializers for annotations on bare function\nregister_pydantic_serializers(f)\n\nreturn wrapper\n"
}