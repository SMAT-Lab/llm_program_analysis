{
    "type": "Program",
    "name": "Global",
    "range": [
        33,
        663
    ],
    "children": [
        {
            "type": "ClassDecl",
            "name": "FancyConsoleFormatter",
            "range": [
                33,
                39
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "logging.Formatter",
                    "range": [
                        35,
                        39
                    ],
                    "children": [],
                    "content": "(logging.Formatter)"
                },
                {
                    "type": "Docstring",
                    "name": "Docstring",
                    "range": [
                        42,
                        44
                    ],
                    "children": [],
                    "content": "\"\"\" \\n     A custom logging formatter designed for console output. \\n  \\n     This formatter enhances the standard logging output with color coding. The color \\n     coding is based on the level of the log message, making it easier to distinguish \\n     between different types of messages in the console output. \\n  \\n     The color for each level is defined in the LEVEL_COLOR_MAP class attribute. \\n     \"\"\""
                }
            ],
            "content": "class FancyConsoleFormatter(logging.Formatter)"
        },
        {
            "type": "VariableDecl",
            "name": "LEVEL_COLOR_MAP",
            "range": [
                61,
                114
            ],
            "children": [
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        62,
                        114
                    ],
                    "children": [
                        {
                            "type": "Dictionary",
                            "name": "{}",
                            "range": [
                                63,
                                114
                            ],
                            "children": [
                                {
                                    "type": "KeyValuePair",
                                    "name": "logging.DEBUG: Fore.LIGHTBLACK_EX",
                                    "range": [
                                        65,
                                        72
                                    ],
                                    "children": [],
                                    "content": "logging.DEBUG:Fore.LIGHTBLACK_EX,"
                                },
                                {
                                    "type": "KeyValuePair",
                                    "name": "logging.INFO: Fore.BLUE",
                                    "range": [
                                        74,
                                        81
                                    ],
                                    "children": [],
                                    "content": "logging.INFO:Fore.BLUE,"
                                },
                                {
                                    "type": "KeyValuePair",
                                    "name": "logging.WARNING: Fore.YELLOW",
                                    "range": [
                                        83,
                                        90
                                    ],
                                    "children": [],
                                    "content": "logging.WARNING:Fore.YELLOW,"
                                },
                                {
                                    "type": "KeyValuePair",
                                    "name": "logging.ERROR: Fore.RED",
                                    "range": [
                                        92,
                                        99
                                    ],
                                    "children": [],
                                    "content": "logging.ERROR:Fore.RED,"
                                },
                                {
                                    "type": "KeyValuePair",
                                    "name": "logging.CRITICAL: Fore.RED + Style.BRIGHT",
                                    "range": [
                                        101,
                                        112
                                    ],
                                    "children": [],
                                    "content": "logging.CRITICAL:Fore.RED+Style.BRIGHT,"
                                }
                            ],
                            "content": "{\nlogging.DEBUG:Fore.LIGHTBLACK_EX,\nlogging.INFO:Fore.BLUE,\nlogging.WARNING:Fore.YELLOW,\nlogging.ERROR:Fore.RED,\nlogging.CRITICAL:Fore.RED+Style.BRIGHT,\n}"
                        }
                    ],
                    "content": "={\nlogging.DEBUG:Fore.LIGHTBLACK_EX,\nlogging.INFO:Fore.BLUE,\nlogging.WARNING:Fore.YELLOW,\nlogging.ERROR:Fore.RED,\nlogging.CRITICAL:Fore.RED+Style.BRIGHT,\n}"
                }
            ],
            "content": "LEVEL_COLOR_MAP={\nlogging.DEBUG:Fore.LIGHTBLACK_EX,\nlogging.INFO:Fore.BLUE,\nlogging.WARNING:Fore.YELLOW,\nlogging.ERROR:Fore.RED,\nlogging.CRITICAL:Fore.RED+Style.BRIGHT,\n}"
        },
        {
            "type": "FunctionDecl",
            "name": "format",
            "range": [
                117,
                301
            ],
            "children": [
                {
                    "type": "Parameters",
                    "name": "(self, record: logging.LogRecord)",
                    "range": [
                        119,
                        127
                    ],
                    "children": [],
                    "content": "(self,record:logging.LogRecord)"
                },
                {
                    "type": "ReturnType",
                    "name": "-> str",
                    "range": [
                        128,
                        130
                    ],
                    "children": [],
                    "content": "->str"
                },
                {
                    "type": "FunctionBody",
                    "name": "FunctionBody",
                    "range": [
                        132,
                        301
                    ],
                    "children": [
                        {
                            "type": "Comment",
                            "name": "# Make sure `msg` is a string",
                            "range": [
                                133,
                                142
                            ],
                            "children": [],
                            "content": "#Make sure`msg`is a string\n"
                        },
                        {
                            "type": "IfStatement",
                            "name": "if not hasattr(record, \"msg\"):",
                            "range": [
                                143,
                                158
                            ],
                            "children": [
                                {
                                    "type": "Assignment",
                                    "name": "record.msg = \"\"",
                                    "range": [
                                        153,
                                        158
                                    ],
                                    "children": [],
                                    "content": "record.msg=\"\"\n"
                                }
                            ],
                            "content": "if not hasattr(record,\"msg\"):\nrecord.msg=\"\"\n"
                        },
                        {
                            "type": "ElifStatement",
                            "name": "elif type(record.msg) is not str:",
                            "range": [
                                159,
                                181
                            ],
                            "children": [
                                {
                                    "type": "Assignment",
                                    "name": "record.msg = str(record.msg)",
                                    "range": [
                                        171,
                                        181
                                    ],
                                    "children": [],
                                    "content": "record.msg=str(record.msg)\n"
                                }
                            ],
                            "content": "elif type(record.msg)is not str:\nrecord.msg=str(record.msg)\n"
                        },
                        {
                            "type": "Comment",
                            "name": "# Determine default color based on error level",
                            "range": [
                                183,
                                191
                            ],
                            "children": [],
                            "content": "#Determine default color based on error level\n"
                        },
                        {
                            "type": "Assignment",
                            "name": "level_color = \"\"",
                            "range": [
                                192,
                                195
                            ],
                            "children": [],
                            "content": "level_color=\"\"\n"
                        },
                        {
                            "type": "IfStatement",
                            "name": "if record.levelno in self.LEVEL_COLOR_MAP:",
                            "range": [
                                196,
                                216
                            ],
                            "children": [
                                {
                                    "type": "Assignment",
                                    "name": "level_color = self.LEVEL_COLOR_MAP[record.levelno]",
                                    "range": [
                                        206,
                                        216
                                    ],
                                    "children": [],
                                    "content": "level_color=self.LEVEL_COLOR_MAP[record.levelno]\n"
                                }
                            ],
                            "content": "if record.levelno in self.LEVEL_COLOR_MAP:\nlevel_color=self.LEVEL_COLOR_MAP[record.levelno]\n"
                        },
                        {
                            "type": "Assignment",
                            "name": "record.levelname = f\"{level_color}{record.levelname}{Style.RESET_ALL}\"",
                            "range": [
                                217,
                                223
                            ],
                            "children": [],
                            "content": "record.levelname=f \"{level_color}{record.levelname}{Style.RESET_ALL}\"\n"
                        },
                        {
                            "type": "Comment",
                            "name": "# Determine color for message",
                            "range": [
                                225,
                                230
                            ],
                            "children": [],
                            "content": "#Determine color for message\n"
                        },
                        {
                            "type": "Assignment",
                            "name": "color = getattr(record, \"color\", level_color)",
                            "range": [
                                231,
                                240
                            ],
                            "children": [],
                            "content": "color=getattr(record,\"color\",level_color)"
                        },
                        {
                            "type": "Assignment",
                            "name": "color_is_specified = hasattr(record, \"color\")",
                            "range": [
                                242,
                                250
                            ],
                            "children": [],
                            "content": "color_is_specified=hasattr(record,\"color\")\n"
                        },
                        {
                            "type": "Comment",
                            "name": "# Don't color INFO messages unless the color is explicitly specified.",
                            "range": [
                                252,
                                266
                            ],
                            "children": [],
                            "content": "#Don't color INFO messages unless the color is explicitly specified.\n"
                        },
                        {
                            "type": "IfStatement",
                            "name": "if color and (record.levelno != logging.INFO or color_is_specified):",
                            "range": [
                                267,
                                290
                            ],
                            "children": [
                                {
                                    "type": "Assignment",
                                    "name": "record.msg = f\"{color}{record.msg}{Style.RESET_ALL}\"",
                                    "range": [
                                        284,
                                        290
                                    ],
                                    "children": [],
                                    "content": "record.msg=f \"{color}{record.msg}{Style.RESET_ALL}\"\n"
                                }
                            ],
                            "content": "if color and(record.levelno!=logging.INFO or color_is_specified):\nrecord.msg=f \"{color}{record.msg}{Style.RESET_ALL}\"\n"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "return super().format(record)",
                            "range": [
                                292,
                                301
                            ],
                            "children": [],
                            "content": "return super().format(record)\n"
                        }
                    ],
                    "content": "\n#Make sure`msg`is a string\nif not hasattr(record,\"msg\"):\nrecord.msg=\"\"\nelif type(record.msg)is not str:\nrecord.msg=str(record.msg)\n\n#Determine default color based on error level\nlevel_color=\"\"\nif record.levelno in self.LEVEL_COLOR_MAP:\nlevel_color=self.LEVEL_COLOR_MAP[record.levelno]\nrecord.levelname=f \"{level_color}{record.levelname}{Style.RESET_ALL}\"\n\n#Determine color for message\ncolor=getattr(record,\"color\",level_color)\ncolor_is_specified=hasattr(record,\"color\")\n\n#Don't color INFO messages unless the color is explicitly specified.\nif color and(record.levelno!=logging.INFO or color_is_specified):\nrecord.msg=f \"{color}{record.msg}{Style.RESET_ALL}\"\n\nreturn super().format(record)\n"
                }
            ],
            "content": "def format(self,record:logging.LogRecord)->str:\n#Make sure`msg`is a string\nif not hasattr(record,\"msg\"):\nrecord.msg=\"\"\nelif type(record.msg)is not str:\nrecord.msg=str(record.msg)\n\n#Determine default color based on error level\nlevel_color=\"\"\nif record.levelno in self.LEVEL_COLOR_MAP:\nlevel_color=self.LEVEL_COLOR_MAP[record.levelno]\nrecord.levelname=f \"{level_color}{record.levelname}{Style.RESET_ALL}\"\n\n#Determine color for message\ncolor=getattr(record,\"color\",level_color)\ncolor_is_specified=hasattr(record,\"color\")\n\n#Don't color INFO messages unless the color is explicitly specified.\nif color and(record.levelno!=logging.INFO or color_is_specified):\nrecord.msg=f \"{color}{record.msg}{Style.RESET_ALL}\"\n\nreturn super().format(record)\n"
        },
        {
            "type": "FunctionDecl",
            "name": "__init__",
            "range": [
                311,
                350
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "",
                    "range": [
                        313,
                        327
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "self",
                            "range": [
                                314,
                                314
                            ],
                            "children": [],
                            "content": "self"
                        },
                        {
                            "type": "Parameter",
                            "name": "*args",
                            "range": [
                                316,
                                317
                            ],
                            "children": [],
                            "content": "*args"
                        },
                        {
                            "type": "Parameter",
                            "name": "no_color",
                            "range": [
                                319,
                                323
                            ],
                            "children": [],
                            "content": "no_color:bool=False"
                        },
                        {
                            "type": "Parameter",
                            "name": "**kwargs",
                            "range": [
                                325,
                                327
                            ],
                            "children": [],
                            "content": "**kwargs"
                        }
                    ],
                    "content": "(self,*args,no_color:bool=False,**kwargs"
                },
                {
                    "type": "BlockStatement",
                    "name": "",
                    "range": [
                        329,
                        350
                    ],
                    "children": [
                        {
                            "type": "ExpressionStatement",
                            "name": "",
                            "range": [
                                331,
                                343
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "super().__init__",
                                    "range": [
                                        331,
                                        343
                                    ],
                                    "children": [
                                        {
                                            "type": "ArgumentList",
                                            "name": "",
                                            "range": [
                                                336,
                                                342
                                            ],
                                            "children": [
                                                {
                                                    "type": "Argument",
                                                    "name": "*args",
                                                    "range": [
                                                        337,
                                                        338
                                                    ],
                                                    "children": [],
                                                    "content": "*args"
                                                },
                                                {
                                                    "type": "Argument",
                                                    "name": "**kwargs",
                                                    "range": [
                                                        340,
                                                        342
                                                    ],
                                                    "children": [],
                                                    "content": "**kwargs"
                                                }
                                            ],
                                            "content": "(*args,**kwargs"
                                        }
                                    ],
                                    "content": "super().__init__(*args,**kwargs)"
                                }
                            ],
                            "content": "super().__init__(*args,**kwargs)"
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "",
                            "range": [
                                345,
                                349
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "",
                                    "range": [
                                        345,
                                        349
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "self.no_color",
                                            "range": [
                                                345,
                                                347
                                            ],
                                            "children": [],
                                            "content": "self.no_color"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "no_color",
                                            "range": [
                                                349,
                                                349
                                            ],
                                            "children": [],
                                            "content": "no_color"
                                        }
                                    ],
                                    "content": "self.no_color=no_color"
                                }
                            ],
                            "content": "self.no_color=no_color"
                        }
                    ],
                    "content": ":\nsuper().__init__(*args,**kwargs)\nself.no_color=no_color\n"
                }
            ],
            "content": "def __init__(self,*args,no_color:bool=False,**kwargs):\nsuper().__init__(*args,**kwargs)\nself.no_color=no_color\n"
        },
        {
            "type": "FunctionDecl",
            "name": "format",
            "range": [
                352,
                572
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "",
                    "range": [
                        354,
                        362
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "self",
                            "range": [
                                355,
                                355
                            ],
                            "children": [],
                            "content": "self"
                        },
                        {
                            "type": "Parameter",
                            "name": "record",
                            "range": [
                                357,
                                361
                            ],
                            "children": [],
                            "content": "record:logging.LogRecord"
                        }
                    ],
                    "content": "(self,record:logging.LogRecord)"
                },
                {
                    "type": "BlockStatement",
                    "name": "",
                    "range": [
                        366,
                        572
                    ],
                    "children": [
                        {
                            "type": "IfStatement",
                            "name": "",
                            "range": [
                                378,
                                416
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "",
                                    "range": [
                                        380,
                                        385
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "hasattr",
                                            "range": [
                                                380,
                                                385
                                            ],
                                            "children": [
                                                {
                                                    "type": "ArgumentList",
                                                    "name": "",
                                                    "range": [
                                                        381,
                                                        385
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Argument",
                                                            "name": "record",
                                                            "range": [
                                                                382,
                                                                382
                                                            ],
                                                            "children": [],
                                                            "content": "record"
                                                        },
                                                        {
                                                            "type": "Argument",
                                                            "name": "\"msg\"",
                                                            "range": [
                                                                384,
                                                                384
                                                            ],
                                                            "children": [],
                                                            "content": "\"msg\""
                                                        }
                                                    ],
                                                    "content": "(record,\"msg\")"
                                                }
                                            ],
                                            "content": "hasattr(record,\"msg\")"
                                        }
                                    ],
                                    "content": "hasattr(record,\"msg\")"
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "",
                                    "range": [
                                        387,
                                        393
                                    ],
                                    "children": [
                                        {
                                            "type": "ExpressionStatement",
                                            "name": "",
                                            "range": [
                                                388,
                                                392
                                            ],
                                            "children": [
                                                {
                                                    "type": "AssignmentExpression",
                                                    "name": "",
                                                    "range": [
                                                        388,
                                                        392
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "name": "record.msg",
                                                            "range": [
                                                                388,
                                                                390
                                                            ],
                                                            "children": [],
                                                            "content": "record.msg"
                                                        },
                                                        {
                                                            "type": "StringLiteral",
                                                            "name": "\"\"",
                                                            "range": [
                                                                392,
                                                                392
                                                            ],
                                                            "children": [],
                                                            "content": "\"\""
                                                        }
                                                    ],
                                                    "content": "record.msg=\"\""
                                                }
                                            ],
                                            "content": "record.msg=\"\""
                                        }
                                    ],
                                    "content": "\nrecord.msg=\"\"\n"
                                },
                                {
                                    "type": "ElseIfStatement",
                                    "name": "",
                                    "range": [
                                        394,
                                        416
                                    ],
                                    "children": [
                                        {
                                            "type": "Condition",
                                            "name": "",
                                            "range": [
                                                395,
                                                404
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "type",
                                                    "range": [
                                                        395,
                                                        404
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "ArgumentList",
                                                            "name": "",
                                                            "range": [
                                                                396,
                                                                404
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Argument",
                                                                    "name": "record.msg",
                                                                    "range": [
                                                                        397,
                                                                        399
                                                                    ],
                                                                    "children": [],
                                                                    "content": "record.msg"
                                                                }
                                                            ],
                                                            "content": "(record.msg)is not str:"
                                                        }
                                                    ],
                                                    "content": "type(record.msg)is not str:"
                                                }
                                            ],
                                            "content": "type(record.msg)is not str:"
                                        },
                                        {
                                            "type": "BlockStatement",
                                            "name": "",
                                            "range": [
                                                405,
                                                416
                                            ],
                                            "children": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "name": "",
                                                    "range": [
                                                        406,
                                                        415
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "AssignmentExpression",
                                                            "name": "",
                                                            "range": [
                                                                406,
                                                                415
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "name": "record.msg",
                                                                    "range": [
                                                                        406,
                                                                        408
                                                                    ],
                                                                    "children": [],
                                                                    "content": "record.msg"
                                                                },
                                                                {
                                                                    "type": "CallExpression",
                                                                    "name": "str",
                                                                    "range": [
                                                                        410,
                                                                        415
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "ArgumentList",
                                                                            "name": "",
                                                                            "range": [
                                                                                411,
                                                                                415
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Argument",
                                                                                    "name": "record.msg",
                                                                                    "range": [
                                                                                        412,
                                                                                        414
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "record.msg"
                                                                                }
                                                                            ],
                                                                            "content": "(record.msg)"
                                                                        }
                                                                    ],
                                                                    "content": "str(record.msg)"
                                                                }
                                                            ],
                                                            "content": "record.msg=str(record.msg)"
                                                        }
                                                    ],
                                                    "content": "record.msg=str(record.msg)"
                                                }
                                            ],
                                            "content": "\nrecord.msg=str(record.msg)\n"
                                        }
                                    ],
                                    "content": "elif type(record.msg)is not str:\nrecord.msg=str(record.msg)\n"
                                }
                            ],
                            "content": "if not hasattr(record,\"msg\"):\nrecord.msg=\"\"\nelif type(record.msg)is not str:\nrecord.msg=str(record.msg)\n"
                        },
                        {
                            "type": "IfStatement",
                            "name": "",
                            "range": [
                                429,
                                455
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "",
                                    "range": [
                                        430,
                                        443
                                    ],
                                    "children": [
                                        {
                                            "type": "LogicalExpression",
                                            "name": "",
                                            "range": [
                                                430,
                                                443
                                            ],
                                            "children": [
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "record.msg",
                                                    "range": [
                                                        430,
                                                        432
                                                    ],
                                                    "children": [],
                                                    "content": "record.msg"
                                                },
                                                {
                                                    "type": "CallExpression",
                                                    "name": "getattr",
                                                    "range": [
                                                        435,
                                                        442
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "ArgumentList",
                                                            "name": "",
                                                            "range": [
                                                                436,
                                                                442
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Argument",
                                                                    "name": "record",
                                                                    "range": [
                                                                        437,
                                                                        437
                                                                    ],
                                                                    "children": [],
                                                                    "content": "record"
                                                                },
                                                                {
                                                                    "type": "Argument",
                                                                    "name": "\"preserve_color\"",
                                                                    "range": [
                                                                        439,
                                                                        439
                                                                    ],
                                                                    "children": [],
                                                                    "content": "\"preserve_color\""
                                                                },
                                                                {
                                                                    "type": "Argument",
                                                                    "name": "False",
                                                                    "range": [
                                                                        441,
                                                                        441
                                                                    ],
                                                                    "children": [],
                                                                    "content": "False"
                                                                }
                                                            ],
                                                            "content": "(record,\"preserve_color\",False)"
                                                        }
                                                    ],
                                                    "content": "getattr(record,\"preserve_color\",False)"
                                                }
                                            ],
                                            "content": "record.msg and not getattr(record,\"preserve_color\",False):"
                                        }
                                    ],
                                    "content": "record.msg and not getattr(record,\"preserve_color\",False):"
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "",
                                    "range": [
                                        444,
                                        455
                                    ],
                                    "children": [
                                        {
                                            "type": "ExpressionStatement",
                                            "name": "",
                                            "range": [
                                                445,
                                                454
                                            ],
                                            "children": [
                                                {
                                                    "type": "AssignmentExpression",
                                                    "name": "",
                                                    "range": [
                                                        445,
                                                        454
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "name": "record.msg",
                                                            "range": [
                                                                445,
                                                                447
                                                            ],
                                                            "children": [],
                                                            "content": "record.msg"
                                                        },
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "remove_color_codes",
                                                            "range": [
                                                                449,
                                                                454
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "ArgumentList",
                                                                    "name": "",
                                                                    "range": [
                                                                        450,
                                                                        454
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Argument",
                                                                            "name": "record.msg",
                                                                            "range": [
                                                                                451,
                                                                                453
                                                                            ],
                                                                            "children": [],
                                                                            "content": "record.msg"
                                                                        }
                                                                    ],
                                                                    "content": "(record.msg)"
                                                                }
                                                            ],
                                                            "content": "remove_color_codes(record.msg)"
                                                        }
                                                    ],
                                                    "content": "record.msg=remove_color_codes(record.msg)"
                                                }
                                            ],
                                            "content": "record.msg=remove_color_codes(record.msg)"
                                        }
                                    ],
                                    "content": "\nrecord.msg=remove_color_codes(record.msg)\n"
                                }
                            ],
                            "content": "if record.msg and not getattr(record,\"preserve_color\",False):\nrecord.msg=remove_color_codes(record.msg)\n"
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "",
                            "range": [
                                463,
                                473
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "",
                                    "range": [
                                        463,
                                        473
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "title",
                                            "range": [
                                                463,
                                                463
                                            ],
                                            "children": [],
                                            "content": "title"
                                        },
                                        {
                                            "type": "CallExpression",
                                            "name": "getattr",
                                            "range": [
                                                465,
                                                472
                                            ],
                                            "children": [
                                                {
                                                    "type": "ArgumentList",
                                                    "name": "",
                                                    "range": [
                                                        466,
                                                        472
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Argument",
                                                            "name": "record",
                                                            "range": [
                                                                467,
                                                                467
                                                            ],
                                                            "children": [],
                                                            "content": "record"
                                                        },
                                                        {
                                                            "type": "Argument",
                                                            "name": "\"title\"",
                                                            "range": [
                                                                469,
                                                                469
                                                            ],
                                                            "children": [],
                                                            "content": "\"title\""
                                                        },
                                                        {
                                                            "type": "Argument",
                                                            "name": "\"\"",
                                                            "range": [
                                                                471,
                                                                471
                                                            ],
                                                            "children": [],
                                                            "content": "\"\""
                                                        }
                                                    ],
                                                    "content": "(record,\"title\",\"\")"
                                                }
                                            ],
                                            "content": "getattr(record,\"title\",\"\")"
                                        }
                                    ],
                                    "content": "title=getattr(record,\"title\",\"\")\n"
                                }
                            ],
                            "content": "title=getattr(record,\"title\",\"\")\n"
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "",
                            "range": [
                                474,
                                499
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "",
                                    "range": [
                                        474,
                                        499
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "title_color",
                                            "range": [
                                                474,
                                                474
                                            ],
                                            "children": [],
                                            "content": "title_color"
                                        },
                                        {
                                            "type": "LogicalExpression",
                                            "name": "",
                                            "range": [
                                                476,
                                                499
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "getattr",
                                                    "range": [
                                                        476,
                                                        483
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "ArgumentList",
                                                            "name": "",
                                                            "range": [
                                                                477,
                                                                483
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Argument",
                                                                    "name": "record",
                                                                    "range": [
                                                                        478,
                                                                        478
                                                                    ],
                                                                    "children": [],
                                                                    "content": "record"
                                                                },
                                                                {
                                                                    "type": "Argument",
                                                                    "name": "\"title_color\"",
                                                                    "range": [
                                                                        480,
                                                                        480
                                                                    ],
                                                                    "children": [],
                                                                    "content": "\"title_color\""
                                                                },
                                                                {
                                                                    "type": "Argument",
                                                                    "name": "\"\"",
                                                                    "range": [
                                                                        482,
                                                                        482
                                                                    ],
                                                                    "children": [],
                                                                    "content": "\"\""
                                                                }
                                                            ],
                                                            "content": "(record,\"title_color\",\"\")"
                                                        }
                                                    ],
                                                    "content": "getattr(record,\"title_color\",\"\")"
                                                },
                                                {
                                                    "type": "CallExpression",
                                                    "name": "self.LEVEL_COLOR_MAP.get",
                                                    "range": [
                                                        485,
                                                        499
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "ArgumentList",
                                                            "name": "",
                                                            "range": [
                                                                490,
                                                                499
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Argument",
                                                                    "name": "record.levelno",
                                                                    "range": [
                                                                        491,
                                                                        493
                                                                    ],
                                                                    "children": [],
                                                                    "content": "\nrecord."
                                                                },
                                                                {
                                                                    "type": "Argument",
                                                                    "name": "\"\"",
                                                                    "range": [
                                                                        496,
                                                                        496
                                                                    ],
                                                                    "children": [],
                                                                    "content": "\"\""
                                                                }
                                                            ],
                                                            "content": "(\nrecord.levelno,\"\"\n)\n"
                                                        }
                                                    ],
                                                    "content": "self.LEVEL_COLOR_MAP.get(\nrecord.levelno,\"\"\n)\n"
                                                }
                                            ],
                                            "content": "getattr(record,\"title_color\",\"\")or self.LEVEL_COLOR_MAP.get(\nrecord.levelno,\"\"\n)\n"
                                        }
                                    ],
                                    "content": "title_color=getattr(record,\"title_color\",\"\")or self.LEVEL_COLOR_MAP.get(\nrecord.levelno,\"\"\n)\n"
                                }
                            ],
                            "content": "title_color=getattr(record,\"title_color\",\"\")or self.LEVEL_COLOR_MAP.get(\nrecord.levelno,\"\"\n)\n"
                        },
                        {
                            "type": "IfStatement",
                            "name": "",
                            "range": [
                                500,
                                510
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "",
                                    "range": [
                                        501,
                                        504
                                    ],
                                    "children": [
                                        {
                                            "type": "LogicalExpression",
                                            "name": "",
                                            "range": [
                                                501,
                                                504
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "title",
                                                    "range": [
                                                        501,
                                                        501
                                                    ],
                                                    "children": [],
                                                    "content": "title"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "title_color",
                                                    "range": [
                                                        503,
                                                        503
                                                    ],
                                                    "children": [],
                                                    "content": "title_color"
                                                }
                                            ],
                                            "content": "title and title_color:"
                                        }
                                    ],
                                    "content": "title and title_color:"
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "",
                                    "range": [
                                        505,
                                        510
                                    ],
                                    "children": [
                                        {
                                            "type": "ExpressionStatement",
                                            "name": "",
                                            "range": [
                                                506,
                                                509
                                            ],
                                            "children": [
                                                {
                                                    "type": "AssignmentExpression",
                                                    "name": "",
                                                    "range": [
                                                        506,
                                                        509
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "title",
                                                            "range": [
                                                                506,
                                                                506
                                                            ],
                                                            "children": [],
                                                            "content": "title"
                                                        },
                                                        {
                                                            "type": "TemplateLiteral",
                                                            "name": "",
                                                            "range": [
                                                                508,
                                                                509
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "TemplateElement",
                                                                    "name": "",
                                                                    "range": [
                                                                        508,
                                                                        509
                                                                    ],
                                                                    "children": [],
                                                                    "content": "f \"{title_color + Style.BRIGHT}{title}{Style.RESET_ALL}\""
                                                                }
                                                            ],
                                                            "content": "f \"{title_color + Style.BRIGHT}{title}{Style.RESET_ALL}\""
                                                        }
                                                    ],
                                                    "content": "title=f \"{title_color + Style.BRIGHT}{title}{Style.RESET_ALL}\""
                                                }
                                            ],
                                            "content": "title=f \"{title_color + Style.BRIGHT}{title}{Style.RESET_ALL}\""
                                        }
                                    ],
                                    "content": "\ntitle=f \"{title_color + Style.BRIGHT}{title}{Style.RESET_ALL}\"\n"
                                }
                            ],
                            "content": "if title and title_color:\ntitle=f \"{title_color + Style.BRIGHT}{title}{Style.RESET_ALL}\"\n"
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "",
                            "range": [
                                529,
                                538
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "",
                                    "range": [
                                        529,
                                        538
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "record.title",
                                            "range": [
                                                529,
                                                531
                                            ],
                                            "children": [],
                                            "content": "record.title"
                                        },
                                        {
                                            "type": "ConditionalExpression",
                                            "name": "",
                                            "range": [
                                                533,
                                                538
                                            ],
                                            "children": [
                                                {
                                                    "type": "Condition",
                                                    "name": "",
                                                    "range": [
                                                        535,
                                                        535
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "title",
                                                            "range": [
                                                                535,
                                                                535
                                                            ],
                                                            "children": [],
                                                            "content": "if"
                                                        }
                                                    ],
                                                    "content": "if"
                                                },
                                                {
                                                    "type": "Consequent",
                                                    "name": "",
                                                    "range": [
                                                        536,
                                                        536
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "TemplateLiteral",
                                                            "name": "",
                                                            "range": [
                                                                536,
                                                                536
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "TemplateElement",
                                                                    "name": "",
                                                                    "range": [
                                                                        536,
                                                                        536
                                                                    ],
                                                                    "children": [],
                                                                    "content": "title"
                                                                }
                                                            ],
                                                            "content": "title"
                                                        }
                                                    ],
                                                    "content": "title"
                                                },
                                                {
                                                    "type": "Alternate",
                                                    "name": "",
                                                    "range": [
                                                        538,
                                                        538
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "StringLiteral",
                                                            "name": "\"\"",
                                                            "range": [
                                                                538,
                                                                538
                                                            ],
                                                            "children": [],
                                                            "content": "\"\""
                                                        }
                                                    ],
                                                    "content": "\"\""
                                                }
                                            ],
                                            "content": "f \"{title} \" if title else\"\""
                                        }
                                    ],
                                    "content": "record.title=f \"{title} \" if title else\"\""
                                }
                            ],
                            "content": "record.title=f \"{title} \" if title else\"\""
                        },
                        {
                            "type": "IfStatement",
                            "name": "",
                            "range": [
                                541,
                                572
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "",
                                    "range": [
                                        542,
                                        545
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "self.no_color",
                                            "range": [
                                                542,
                                                544
                                            ],
                                            "children": [],
                                            "content": "self.no_color"
                                        }
                                    ],
                                    "content": "self.no_color:"
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "",
                                    "range": [
                                        546,
                                        559
                                    ],
                                    "children": [
                                        {
                                            "type": "ReturnStatement",
                                            "name": "",
                                            "range": [
                                                547,
                                                558
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "remove_color_codes",
                                                    "range": [
                                                        548,
                                                        558
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "ArgumentList",
                                                            "name": "",
                                                            "range": [
                                                                549,
                                                                558
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Argument",
                                                                    "name": "super().format(record)",
                                                                    "range": [
                                                                        550,
                                                                        557
                                                                    ],
                                                                    "children": [],
                                                                    "content": "super().format(record)"
                                                                }
                                                            ],
                                                            "content": "(super().format(record))"
                                                        }
                                                    ],
                                                    "content": "remove_color_codes(super().format(record))"
                                                }
                                            ],
                                            "content": "return remove_color_codes(super().format(record))"
                                        }
                                    ],
                                    "content": "\nreturn remove_color_codes(super().format(record))\n"
                                },
                                {
                                    "type": "ElseStatement",
                                    "name": "",
                                    "range": [
                                        560,
                                        572
                                    ],
                                    "children": [
                                        {
                                            "type": "BlockStatement",
                                            "name": "",
                                            "range": [
                                                562,
                                                572
                                            ],
                                            "children": [
                                                {
                                                    "type": "ReturnStatement",
                                                    "name": "",
                                                    "range": [
                                                        563,
                                                        571
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "super().format",
                                                            "range": [
                                                                564,
                                                                571
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "ArgumentList",
                                                                    "name": "",
                                                                    "range": [
                                                                        565,
                                                                        571
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Argument",
                                                                            "name": "record",
                                                                            "range": [
                                                                                570,
                                                                                570
                                                                            ],
                                                                            "children": [],
                                                                            "content": "record"
                                                                        }
                                                                    ],
                                                                    "content": "().format(record)"
                                                                }
                                                            ],
                                                            "content": "super().format(record)"
                                                        }
                                                    ],
                                                    "content": "return super().format(record)"
                                                }
                                            ],
                                            "content": "\nreturn super().format(record)\n"
                                        }
                                    ],
                                    "content": "else:\nreturn super().format(record)\n"
                                }
                            ],
                            "content": "if self.no_color:\nreturn remove_color_codes(super().format(record))\nelse:\nreturn super().format(record)\n"
                        }
                    ],
                    "content": ":\n#Make sure`msg`is a string\nif not hasattr(record,\"msg\"):\nrecord.msg=\"\"\nelif type(record.msg)is not str:\nrecord.msg=str(record.msg)\n\n#Strip color from the message to prevent color spoofing\nif record.msg and not getattr(record,\"preserve_color\",False):\nrecord.msg=remove_color_codes(record.msg)\n\n#Determine color for title\ntitle=getattr(record,\"title\",\"\")\ntitle_color=getattr(record,\"title_color\",\"\")or self.LEVEL_COLOR_MAP.get(\nrecord.levelno,\"\"\n)\nif title and title_color:\ntitle=f \"{title_color + Style.BRIGHT}{title}{Style.RESET_ALL}\"\n#Make sure record.title is set,and padded with a space if not empty\nrecord.title=f \"{title} \" if title else\"\"\n\nif self.no_color:\nreturn remove_color_codes(super().format(record))\nelse:\nreturn super().format(record)\n"
                }
            ],
            "content": "def format(self,record:logging.LogRecord)->str:\n#Make sure`msg`is a string\nif not hasattr(record,\"msg\"):\nrecord.msg=\"\"\nelif type(record.msg)is not str:\nrecord.msg=str(record.msg)\n\n#Strip color from the message to prevent color spoofing\nif record.msg and not getattr(record,\"preserve_color\",False):\nrecord.msg=remove_color_codes(record.msg)\n\n#Determine color for title\ntitle=getattr(record,\"title\",\"\")\ntitle_color=getattr(record,\"title_color\",\"\")or self.LEVEL_COLOR_MAP.get(\nrecord.levelno,\"\"\n)\nif title and title_color:\ntitle=f \"{title_color + Style.BRIGHT}{title}{Style.RESET_ALL}\"\n#Make sure record.title is set,and padded with a space if not empty\nrecord.title=f \"{title} \" if title else\"\"\n\nif self.no_color:\nreturn remove_color_codes(super().format(record))\nelse:\nreturn super().format(record)\n"
        },
        {
            "type": "ClassDecl",
            "name": "StructuredLoggingFormatter",
            "range": [
                575,
                626
            ],
            "children": [
                {
                    "type": "MethodDecl",
                    "name": "__init__",
                    "range": [
                        586,
                        626
                    ],
                    "children": [
                        {
                            "type": "Comment",
                            "name": "# Set up CloudLoggingFilter to add diagnostic info to the log records",
                            "range": [
                                593,
                                605
                            ],
                            "children": [],
                            "content": "#Set up CloudLoggingFilter to add diagnostic info to the log records\n"
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "=",
                            "range": [
                                606,
                                613
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": ".",
                                    "range": [
                                        606,
                                        608
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "self",
                                            "range": [
                                                606,
                                                606
                                            ],
                                            "children": [],
                                            "content": "self"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "cloud_logging_filter",
                                            "range": [
                                                608,
                                                608
                                            ],
                                            "children": [],
                                            "content": "cloud_logging_filter"
                                        }
                                    ],
                                    "content": "self.cloud_logging_filter"
                                },
                                {
                                    "type": "NewExpression",
                                    "name": "CloudLoggingFilter",
                                    "range": [
                                        610,
                                        612
                                    ],
                                    "children": [],
                                    "content": "CloudLoggingFilter()"
                                }
                            ],
                            "content": "self.cloud_logging_filter=CloudLoggingFilter()\n"
                        },
                        {
                            "type": "Comment",
                            "name": "# Init StructuredLogHandler",
                            "range": [
                                615,
                                618
                            ],
                            "children": [],
                            "content": "#Init StructuredLogHandler\n"
                        },
                        {
                            "type": "CallExpression",
                            "name": ".",
                            "range": [
                                619,
                                626
                            ],
                            "children": [
                                {
                                    "type": "Super",
                                    "name": "super",
                                    "range": [
                                        619,
                                        619
                                    ],
                                    "children": [],
                                    "content": "super"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "__init__",
                                    "range": [
                                        623,
                                        623
                                    ],
                                    "children": [],
                                    "content": "__init__"
                                }
                            ],
                            "content": "super().__init__()\n"
                        }
                    ],
                    "content": "def __init__(self):\n#Set up CloudLoggingFilter to add diagnostic info to the log records\nself.cloud_logging_filter=CloudLoggingFilter()\n\n#Init StructuredLogHandler\nsuper().__init__()\n"
                }
            ],
            "content": "class StructuredLoggingFormatter(StructuredLogHandler,logging.Formatter):\ndef __init__(self):\n#Set up CloudLoggingFilter to add diagnostic info to the log records\nself.cloud_logging_filter=CloudLoggingFilter()\n\n#Init StructuredLogHandler\nsuper().__init__()\n"
        },
        {
            "type": "FunctionDecl",
            "name": "format",
            "range": [
                628,
                662
            ],
            "children": [
                {
                    "type": "CallExpression",
                    "name": ".",
                    "range": [
                        644,
                        652
                    ],
                    "children": [
                        {
                            "type": "MemberExpression",
                            "name": ".",
                            "range": [
                                644,
                                647
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "self",
                                    "range": [
                                        644,
                                        644
                                    ],
                                    "children": [],
                                    "content": "self"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "cloud_logging_filter",
                                    "range": [
                                        647,
                                        647
                                    ],
                                    "children": [],
                                    "content": "."
                                }
                            ],
                            "content": "self.cloud_logging_filter."
                        },
                        {
                            "type": "Identifier",
                            "name": "filter",
                            "range": [
                                648,
                                648
                            ],
                            "children": [],
                            "content": "filter"
                        },
                        {
                            "type": "Identifier",
                            "name": "record",
                            "range": [
                                650,
                                650
                            ],
                            "children": [],
                            "content": "record"
                        }
                    ],
                    "content": "self.cloud_logging_filter.filter(record)\n"
                },
                {
                    "type": "ReturnStatement",
                    "name": "return",
                    "range": [
                        653,
                        662
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": ".",
                            "range": [
                                654,
                                662
                            ],
                            "children": [
                                {
                                    "type": "Super",
                                    "name": "super",
                                    "range": [
                                        654,
                                        654
                                    ],
                                    "children": [],
                                    "content": "super"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "format",
                                    "range": [
                                        658,
                                        658
                                    ],
                                    "children": [],
                                    "content": "format"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "record",
                                    "range": [
                                        660,
                                        660
                                    ],
                                    "children": [],
                                    "content": "record"
                                }
                            ],
                            "content": "super().format(record)\n"
                        }
                    ],
                    "content": "return super().format(record)\n"
                }
            ],
            "content": "def format(self,record:logging.LogRecord)->str:\nself.cloud_logging_filter.filter(record)\nreturn super().format(record)\n"
        }
    ],
    "content": "class FancyConsoleFormatter(logging.Formatter):\n\"\"\" \\n     A custom logging formatter designed for console output. \\n  \\n     This formatter enhances the standard logging output with color coding. The color \\n     coding is based on the level of the log message, making it easier to distinguish \\n     between different types of messages in the console output. \\n  \\n     The color for each level is defined in the LEVEL_COLOR_MAP class attribute. \\n     \"\"\"\n\n#level->(level&text color,title color)\nLEVEL_COLOR_MAP={\nlogging.DEBUG:Fore.LIGHTBLACK_EX,\nlogging.INFO:Fore.BLUE,\nlogging.WARNING:Fore.YELLOW,\nlogging.ERROR:Fore.RED,\nlogging.CRITICAL:Fore.RED+Style.BRIGHT,\n}\n\ndef format(self,record:logging.LogRecord)->str:\n#Make sure`msg`is a string\nif not hasattr(record,\"msg\"):\nrecord.msg=\"\"\nelif type(record.msg)is not str:\nrecord.msg=str(record.msg)\n\n#Determine default color based on error level\nlevel_color=\"\"\nif record.levelno in self.LEVEL_COLOR_MAP:\nlevel_color=self.LEVEL_COLOR_MAP[record.levelno]\nrecord.levelname=f \"{level_color}{record.levelname}{Style.RESET_ALL}\"\n\n#Determine color for message\ncolor=getattr(record,\"color\",level_color)\ncolor_is_specified=hasattr(record,\"color\")\n\n#Don't color INFO messages unless the color is explicitly specified.\nif color and(record.levelno!=logging.INFO or color_is_specified):\nrecord.msg=f \"{color}{record.msg}{Style.RESET_ALL}\"\n\nreturn super().format(record)\n\n\nclass AGPTFormatter(FancyConsoleFormatter):\ndef __init__(self,*args,no_color:bool=False,**kwargs):\nsuper().__init__(*args,**kwargs)\nself.no_color=no_color\n\ndef format(self,record:logging.LogRecord)->str:\n#Make sure`msg`is a string\nif not hasattr(record,\"msg\"):\nrecord.msg=\"\"\nelif type(record.msg)is not str:\nrecord.msg=str(record.msg)\n\n#Strip color from the message to prevent color spoofing\nif record.msg and not getattr(record,\"preserve_color\",False):\nrecord.msg=remove_color_codes(record.msg)\n\n#Determine color for title\ntitle=getattr(record,\"title\",\"\")\ntitle_color=getattr(record,\"title_color\",\"\")or self.LEVEL_COLOR_MAP.get(\nrecord.levelno,\"\"\n)\nif title and title_color:\ntitle=f \"{title_color + Style.BRIGHT}{title}{Style.RESET_ALL}\"\n#Make sure record.title is set,and padded with a space if not empty\nrecord.title=f \"{title} \" if title else\"\"\n\nif self.no_color:\nreturn remove_color_codes(super().format(record))\nelse:\nreturn super().format(record)\n\n\nclass StructuredLoggingFormatter(StructuredLogHandler,logging.Formatter):\ndef __init__(self):\n#Set up CloudLoggingFilter to add diagnostic info to the log records\nself.cloud_logging_filter=CloudLoggingFilter()\n\n#Init StructuredLogHandler\nsuper().__init__()\n\ndef format(self,record:logging.LogRecord)->str:\nself.cloud_logging_filter.filter(record)\nreturn super().format(record)\n"
}