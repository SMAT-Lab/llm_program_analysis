{
    "type": "Program",
    "name": "Global",
    "range": [
        97,
        1185
    ],
    "children": [
        {
            "type": "ObjectExpression",
            "range": [
                99,
                121
            ],
            "children": [
                {
                    "type": "Property",
                    "key": {
                        "type": "Literal",
                        "value": "llm",
                        "range": [
                            101,
                            103
                        ],
                        "content": "\"llm\":\"Block that calls the AI model to generate text.\""
                    },
                    "value": {
                        "type": "Literal",
                        "value": "Block that calls the AI model to generate text.",
                        "range": [
                            101,
                            103
                        ],
                        "content": "\"llm\":\"Block that calls the AI model to generate text.\""
                    },
                    "range": [
                        101,
                        103
                    ],
                    "children": [],
                    "content": "\"llm\":\"Block that calls the AI model to generate text.\""
                },
                {
                    "type": "Property",
                    "key": {
                        "type": "Literal",
                        "value": "basic",
                        "range": [
                            106,
                            108
                        ],
                        "content": "\"basic\":\"Block that does basic operations.\""
                    },
                    "value": {
                        "type": "Literal",
                        "value": "Block that does basic operations.",
                        "range": [
                            106,
                            108
                        ],
                        "content": "\"basic\":\"Block that does basic operations.\""
                    },
                    "range": [
                        106,
                        108
                    ],
                    "children": [],
                    "content": "\"basic\":\"Block that does basic operations.\""
                },
                {
                    "type": "Property",
                    "key": {
                        "type": "Literal",
                        "value": "text",
                        "range": [
                            111,
                            113
                        ],
                        "content": "\"text\":\"Blocks that do text operations.\""
                    },
                    "value": {
                        "type": "Literal",
                        "value": "Blocks that do text operations.",
                        "range": [
                            111,
                            113
                        ],
                        "content": "\"text\":\"Blocks that do text operations.\""
                    },
                    "range": [
                        111,
                        113
                    ],
                    "children": [],
                    "content": "\"text\":\"Blocks that do text operations.\""
                },
                {
                    "type": "Property",
                    "key": {
                        "type": "Literal",
                        "value": "reddit",
                        "range": [
                            116,
                            118
                        ],
                        "content": "\"reddit\":\"Blocks that interacts with Reddit.\""
                    },
                    "value": {
                        "type": "Literal",
                        "value": "Blocks that interacts with Reddit.",
                        "range": [
                            116,
                            118
                        ],
                        "content": "\"reddit\":\"Blocks that interacts with Reddit.\""
                    },
                    "range": [
                        116,
                        118
                    ],
                    "children": [],
                    "content": "\"reddit\":\"Blocks that interacts with Reddit.\""
                }
            ],
            "content": "{\n\"llm\":\"Block that calls the AI model to generate text.\",\n\"basic\":\"Block that does basic operations.\",\n\"text\":\"Blocks that do text operations.\",\n\"reddit\":\"Blocks that interacts with Reddit.\",\n}"
        },
        {
            "type": "FunctionDecl",
            "name": "create_test_user",
            "range": [
                199,
                240
            ],
            "children": [
                {
                    "type": "AsyncKeyword",
                    "range": [
                        199,
                        199
                    ],
                    "content": "\n"
                },
                {
                    "type": "DefKeyword",
                    "range": [
                        200,
                        200
                    ],
                    "content": "async"
                },
                {
                    "type": "Identifier",
                    "name": "create_test_user",
                    "range": [
                        201,
                        201
                    ],
                    "content": "def"
                },
                {
                    "type": "ParameterList",
                    "range": [
                        202,
                        203
                    ],
                    "children": [],
                    "content": "create_test_user("
                },
                {
                    "type": "ReturnType",
                    "range": [
                        204,
                        206
                    ],
                    "children": [
                        {
                            "type": "Arrow",
                            "range": [
                                204,
                                205
                            ],
                            "content": ")-"
                        },
                        {
                            "type": "TypeName",
                            "name": "User",
                            "range": [
                                206,
                                206
                            ],
                            "content": ">"
                        }
                    ],
                    "content": ")->"
                },
                {
                    "type": "VariableDecl",
                    "name": "test_user_data",
                    "range": [
                        209,
                        228
                    ],
                    "children": [
                        {
                            "type": "ObjectLiteral",
                            "range": [
                                211,
                                228
                            ],
                            "children": [
                                {
                                    "type": "Property",
                                    "name": "sub",
                                    "range": [
                                        213,
                                        215
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "value": "ef3b97d7-1161-4eb4-92b2-10c24fb154c1",
                                            "range": [
                                                215,
                                                215
                                            ],
                                            "content": ":"
                                        }
                                    ],
                                    "content": "\n\"sub\":"
                                },
                                {
                                    "type": "Property",
                                    "name": "email",
                                    "range": [
                                        218,
                                        220
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "value": "testuser@example.com",
                                            "range": [
                                                220,
                                                220
                                            ],
                                            "content": ":"
                                        }
                                    ],
                                    "content": "\n\"email\":"
                                },
                                {
                                    "type": "Property",
                                    "name": "name",
                                    "range": [
                                        223,
                                        225
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "value": "Test User",
                                            "range": [
                                                225,
                                                225
                                            ],
                                            "content": ":"
                                        }
                                    ],
                                    "content": "\n\"name\":"
                                }
                            ],
                            "content": "={\n\"sub\":\"ef3b97d7-1161-4eb4-92b2-10c24fb154c1\",\n\"email\":\"testuser@example.com\",\n\"name\":\"Test User\",\n"
                        }
                    ],
                    "content": "\ntest_user_data={\n\"sub\":\"ef3b97d7-1161-4eb4-92b2-10c24fb154c1\",\n\"email\":\"testuser@example.com\",\n\"name\":\"Test User\",\n"
                },
                {
                    "type": "VariableDecl",
                    "name": "user",
                    "range": [
                        230,
                        236
                    ],
                    "children": [
                        {
                            "type": "AwaitExpression",
                            "range": [
                                232,
                                236
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "get_or_create_user",
                                    "range": [
                                        233,
                                        236
                                    ],
                                    "children": [
                                        {
                                            "type": "ArgumentList",
                                            "range": [
                                                234,
                                                236
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "test_user_data",
                                                    "range": [
                                                        235,
                                                        235
                                                    ],
                                                    "content": "("
                                                }
                                            ],
                                            "content": "get_or_create_user(test_user_data"
                                        }
                                    ],
                                    "content": "await get_or_create_user(test_user_data"
                                }
                            ],
                            "content": "=await get_or_create_user(test_user_data"
                        }
                    ],
                    "content": "\nuser=await get_or_create_user(test_user_data"
                },
                {
                    "type": "ReturnStatement",
                    "range": [
                        238,
                        240
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "user",
                            "range": [
                                239,
                                239
                            ],
                            "content": "return"
                        }
                    ],
                    "content": "\nreturn user"
                }
            ],
            "content": "\nasync def create_test_user()->User:\ntest_user_data={\n\"sub\":\"ef3b97d7-1161-4eb4-92b2-10c24fb154c1\",\n\"email\":\"testuser@example.com\",\n\"name\":\"Test User\",\n}\nuser=await get_or_create_user(test_user_data)\nreturn user"
        },
        {
            "type": "FunctionDecl",
            "name": "create_test_graph",
            "range": [
                241,
                1071
            ],
            "children": [
                {
                    "type": "ReturnStatement",
                    "range": [
                        1046,
                        1071
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "range": [
                                1047,
                                1070
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "Graph",
                                    "range": [
                                        1047,
                                        1052
                                    ],
                                    "content": "#\nreturn Graph(\n"
                                },
                                {
                                    "type": "ObjectExpression",
                                    "range": [
                                        1053,
                                        1069
                                    ],
                                    "children": [
                                        {
                                            "type": "Property",
                                            "key": {
                                                "type": "Identifier",
                                                "name": "name",
                                                "range": [
                                                    1050,
                                                    1054
                                                ],
                                                "content": "Graph(\nname="
                                            },
                                            "value": {
                                                "type": "Literal",
                                                "value": "BlockAutoGen",
                                                "range": [
                                                    1052,
                                                    1064
                                                ],
                                                "content": "\nname=\"BlockAutoGen\",\ndescription=\"Block auto generation agent\",\nnodes="
                                            }
                                        },
                                        {
                                            "type": "Property",
                                            "key": {
                                                "type": "Identifier",
                                                "name": "description",
                                                "range": [
                                                    1055,
                                                    1066
                                                ],
                                                "content": "\"BlockAutoGen\",\ndescription=\"Block auto generation agent\",\nnodes=nodes,"
                                            },
                                            "value": {
                                                "type": "Literal",
                                                "value": "Block auto generation agent",
                                                "range": [
                                                    1057,
                                                    1086
                                                ],
                                                "content": "\ndescription=\"Block auto generation agent\",\nnodes=nodes,\nlinks=links,\n)\n\n\nasync def block_autogen_agent():\nasync with SpinTestServer"
                                            }
                                        },
                                        {
                                            "type": "Property",
                                            "key": {
                                                "type": "Identifier",
                                                "name": "nodes",
                                                "range": [
                                                    1060,
                                                    1065
                                                ],
                                                "content": "\"Block auto generation agent\",\nnodes=nodes"
                                            },
                                            "value": {
                                                "type": "Identifier",
                                                "name": "nodes",
                                                "range": [
                                                    1062,
                                                    1067
                                                ],
                                                "content": "\nnodes=nodes,\n"
                                            }
                                        },
                                        {
                                            "type": "Property",
                                            "key": {
                                                "type": "Identifier",
                                                "name": "links",
                                                "range": [
                                                    1065,
                                                    1070
                                                ],
                                                "content": "nodes,\nlinks=links"
                                            },
                                            "value": {
                                                "type": "Identifier",
                                                "name": "links",
                                                "range": [
                                                    1067,
                                                    1072
                                                ],
                                                "content": "\nlinks=links,\n"
                                            }
                                        }
                                    ],
                                    "content": "name=\"BlockAutoGen\",\ndescription=\"Block auto generation agent\",\nnodes=nodes,\nlinks="
                                }
                            ],
                            "content": "#\nreturn Graph(\nname=\"BlockAutoGen\",\ndescription=\"Block auto generation agent\",\nnodes=nodes,\nlinks=links"
                        }
                    ],
                    "content": "=#\nreturn Graph(\nname=\"BlockAutoGen\",\ndescription=\"Block auto generation agent\",\nnodes=nodes,\nlinks=links,"
                }
            ],
            "content": "\n\n\ndef create_test_graph()->Graph:\n\"\"\" \\n             StoreValueBlock (input) \\n                  || \\n                  v \\n         FillTextTemplateBlock (input query) \\n                  || \\n                  v \\n          SendWebRequestBlock (browse) \\n                  || \\n                  v \\n      ------> StoreValueBlock=============== \\n     |           |  |                    || \\n     |            --                     || \\n     |                                   || \\n     |                                   || \\n     |                                    v \\n     |        AITextGeneratorBlock  <===== FillTextTemplateBlock (query) \\n     |            ||                      ^ \\n     |            v                      || \\n     |       ExtractTextInformationBlock             || \\n     |            ||                     || \\n     |            v                      || \\n     ------ BlockInstallationBlock  ====== \\n     \"\"\"\n#=======Nodes=========#\ninput_data=Node(block_id=StoreValueBlock().id)\ninput_query_constant=Node(\nblock_id=StoreValueBlock().id,\ninput_default={\"data\":None},\n)\ninput_text_formatter=Node(\nblock_id=FillTextTemplateBlock().id,\ninput_default={\n\"format\":\"Show me how to make a python code for this query: `{query}`\",\n},\n)\nsearch_http_request=Node(\nblock_id=SendWebRequestBlock().id,\ninput_default={\n\"url\":\"https://osit-v2.bentlybro.com/search\",\n},\n)\nsearch_result_constant=Node(\nblock_id=StoreValueBlock().id,\ninput_default={\n\"data\":None,\n},\n)\nprompt_text_formatter=Node(\nblock_id=FillTextTemplateBlock().id,\ninput_default={\n\"format\":\"\"\" \\n Write me a full Block implementation for this query: `{query}` \\n  \\n Here is the information I get to write a Python code for that: \\n {search_result} \\n  \\n Here is your previous attempt: \\n {previous_attempt} \\n \"\"\",\n\"values_#_previous_attempt\":\"No previous attempt found.\",\n},\n)\ncode_gen_llm_call=Node(\nblock_id=AITextGeneratorBlock().id,\ninput_default={\n\"sys_prompt\":f\"\"\" \\n You are a software engineer and you are asked to write the full class implementation. \\n The class that you are implementing is extending a class called `Block`. \\n This class will be used as a node in a graph of other blocks to build a complex system. \\n This class has a method called `run` that takes an input and returns an output. \\n It also has an `id` attribute that is a UUID, input_schema, and output_schema. \\n For UUID, you have to hardcode it, like `d2e2ecd2-9ae6-422d-8dfe-ceca500ce6a6`, \\n don't use any automatic UUID generation, because it needs to be consistent. \\n To validate the correctness of your implementation, you can also define a test. \\n There is `test_input` and `test_output` you can use to validate your implementation. \\n There is also `test_mock` to mock a helper function on your block class for testing. \\n  \\n Feel free to start your answer by explaining your plan what's required how to test, etc. \\n But make sure to produce the fully working implementation at the end, \\n and it should be enclosed within this block format: \\n ```python \\n <Your implementation here> \\n ``` \\n  \\n Here are a couple of sample of the Block class implementation: \\n  \\n {\"--------------\".join([sample_block_codes[v] for v in sample_block_modules])} \\n \"\"\",\n},\n)\ncode_text_parser=Node(\nblock_id=ExtractTextInformationBlock().id,\ninput_default={\n\"pattern\":\"```python\\n(.+?)\\n```\",\n\"group\":1,\n},\n)\nblock_installation=Node(\nblock_id=BlockInstallationBlock().id,\n)\nnodes=[\ninput_data,\ninput_query_constant,\ninput_text_formatter,\nsearch_http_request,\nsearch_result_constant,\nprompt_text_formatter,\ncode_gen_llm_call,\ncode_text_parser,\nblock_installation,\n]\n\n#=======Links=========#\nlinks=[\nLink(\nsource_id=input_data.id,\nsink_id=input_query_constant.id,\nsource_name=\"output\",\nsink_name=\"input\",\n),\nLink(\nsource_id=input_data.id,\nsink_id=input_text_formatter.id,\nsource_name=\"output\",\nsink_name=\"values_#_query\",\n),\nLink(\nsource_id=input_query_constant.id,\nsink_id=input_query_constant.id,\nsource_name=\"output\",\nsink_name=\"data\",\n),\nLink(\nsource_id=input_text_formatter.id,\nsink_id=search_http_request.id,\nsource_name=\"output\",\nsink_name=\"body_#_query\",\n),\nLink(\nsource_id=search_http_request.id,\nsink_id=search_result_constant.id,\nsource_name=\"response_#_reply\",\nsink_name=\"input\",\n),\nLink(#Loopback for constant block\nsource_id=search_result_constant.id,\nsink_id=search_result_constant.id,\nsource_name=\"output\",\nsink_name=\"data\",\n),\nLink(\nsource_id=search_result_constant.id,\nsink_id=prompt_text_formatter.id,\nsource_name=\"output\",\nsink_name=\"values_#_search_result\",\n),\nLink(\nsource_id=input_query_constant.id,\nsink_id=prompt_text_formatter.id,\nsource_name=\"output\",\nsink_name=\"values_#_query\",\n),\nLink(\nsource_id=prompt_text_formatter.id,\nsink_id=code_gen_llm_call.id,\nsource_name=\"output\",\nsink_name=\"prompt\",\n),\nLink(\nsource_id=code_gen_llm_call.id,\nsink_id=code_text_parser.id,\nsource_name=\"response\",\nsink_name=\"text\",\n),\nLink(\nsource_id=code_text_parser.id,\nsink_id=block_installation.id,\nsource_name=\"positive\",\nsink_name=\"code\",\n),\nLink(\nsource_id=block_installation.id,\nsink_id=prompt_text_formatter.id,\nsource_name=\"error\",\nsink_name=\"values_#_previous_attempt\",\n),\nLink(#Re-trigger search result.\nsource_id=block_installation.id,\nsink_id=search_result_constant.id,\nsource_name=\"error\",\nsink_name=\"input\",\n),\nLink(#Re-trigger search result.\nsource_id=block_installation.id,\nsink_id=input_query_constant.id,\nsource_name=\"error\",\nsink_name=\"input\",\n),\n]\n\n#=======Graph=========#\nreturn Graph(\nname=\"BlockAutoGen\",\ndescription=\"Block auto generation agent\",\nnodes=nodes,\nlinks=links,"
        },
        {
            "type": "FunctionDecl",
            "name": "block_autogen_agent",
            "range": [
                1072,
                1078
            ],
            "children": [
                {
                    "type": "Keyword",
                    "name": "async",
                    "range": [
                        1072,
                        1072
                    ],
                    "children": [],
                    "content": "\n"
                },
                {
                    "type": "Keyword",
                    "name": "def",
                    "range": [
                        1073,
                        1073
                    ],
                    "children": [],
                    "content": ")"
                },
                {
                    "type": "Identifier",
                    "name": "block_autogen_agent",
                    "range": [
                        1074,
                        1074
                    ],
                    "children": [],
                    "content": "\n"
                }
            ],
            "content": "\n)\n\n\nasync def"
        },
        {
            "type": "AsyncWithStatement",
            "name": "",
            "range": [
                1079,
                1087
            ],
            "children": [
                {
                    "type": "Keyword",
                    "name": "async",
                    "range": [
                        1079,
                        1079
                    ],
                    "children": [],
                    "content": "block_autogen_agent"
                },
                {
                    "type": "Keyword",
                    "name": "with",
                    "range": [
                        1080,
                        1080
                    ],
                    "children": [],
                    "content": "("
                },
                {
                    "type": "CallExpression",
                    "name": "SpinTestServer",
                    "range": [
                        1081,
                        1083
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "SpinTestServer",
                            "range": [
                                1081,
                                1081
                            ],
                            "children": [],
                            "content": ")"
                        }
                    ],
                    "content": "):\n"
                },
                {
                    "type": "Keyword",
                    "name": "as",
                    "range": [
                        1084,
                        1084
                    ],
                    "children": [],
                    "content": "async"
                },
                {
                    "type": "Identifier",
                    "name": "server",
                    "range": [
                        1085,
                        1085
                    ],
                    "children": [],
                    "content": "with"
                }
            ],
            "content": "block_autogen_agent():\nasync with SpinTestServer("
        },
        {
            "type": "VariableDecl",
            "name": "test_user",
            "range": [
                1088,
                1094
            ],
            "children": [
                {
                    "type": "Identifier",
                    "name": "test_user",
                    "range": [
                        1088,
                        1088
                    ],
                    "children": [],
                    "content": ")"
                },
                {
                    "type": "Keyword",
                    "name": "await",
                    "range": [
                        1090,
                        1090
                    ],
                    "children": [],
                    "content": "server"
                },
                {
                    "type": "CallExpression",
                    "name": "create_test_user",
                    "range": [
                        1091,
                        1093
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "create_test_user",
                            "range": [
                                1091,
                                1091
                            ],
                            "children": [],
                            "content": ":"
                        }
                    ],
                    "content": ":\ntest_user"
                }
            ],
            "content": ")as server:\ntest_user="
        },
        {
            "type": "VariableDecl",
            "name": "test_graph",
            "range": [
                1095,
                1110
            ],
            "children": [
                {
                    "type": "Identifier",
                    "name": "test_graph",
                    "range": [
                        1095,
                        1095
                    ],
                    "children": [],
                    "content": "await"
                },
                {
                    "type": "Keyword",
                    "name": "await",
                    "range": [
                        1097,
                        1097
                    ],
                    "children": [],
                    "content": "("
                },
                {
                    "type": "CallExpression",
                    "name": "create_graph",
                    "range": [
                        1098,
                        1109
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "create_graph",
                            "range": [
                                1098,
                                1098
                            ],
                            "children": [],
                            "content": ")"
                        },
                        {
                            "type": "CallExpression",
                            "name": "create_test_graph",
                            "range": [
                                1100,
                                1102
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "create_test_graph",
                                    "range": [
                                        1100,
                                        1100
                                    ],
                                    "children": [],
                                    "content": "test_graph"
                                }
                            ],
                            "content": "test_graph=await"
                        },
                        {
                            "type": "Identifier",
                            "name": "user_id",
                            "range": [
                                1104,
                                1104
                            ],
                            "children": [],
                            "content": "("
                        },
                        {
                            "type": "Identifier",
                            "name": "test_user",
                            "range": [
                                1106,
                                1106
                            ],
                            "children": [],
                            "content": "("
                        },
                        {
                            "type": "Identifier",
                            "name": "id",
                            "range": [
                                1108,
                                1108
                            ],
                            "children": [],
                            "content": ","
                        }
                    ],
                    "content": ")\ntest_graph=await create_graph(create_test_graph(),user_id"
                }
            ],
            "content": "await create_test_user()\ntest_graph=await create_graph(create_test_graph(),user_id="
        },
        {
            "type": "VariableDecl",
            "name": "input_data",
            "range": [
                1111,
                1118
            ],
            "children": [
                {
                    "type": "Identifier",
                    "name": "input_data",
                    "range": [
                        1111,
                        1111
                    ],
                    "children": [],
                    "content": "test_user"
                },
                {
                    "type": "ObjectExpression",
                    "name": "",
                    "range": [
                        1113,
                        1117
                    ],
                    "children": [
                        {
                            "type": "Property",
                            "name": "input",
                            "range": [
                                1114,
                                1116
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"input\"",
                                    "range": [
                                        1114,
                                        1114
                                    ],
                                    "children": [],
                                    "content": ")"
                                },
                                {
                                    "type": "Literal",
                                    "name": "\"Write me a block that writes a string into a file.\"",
                                    "range": [
                                        1116,
                                        1116
                                    ],
                                    "children": [],
                                    "content": "input_data"
                                }
                            ],
                            "content": ")\ninput_data"
                        }
                    ],
                    "content": "id)\ninput_data="
                }
            ],
            "content": "test_user.id)\ninput_data={"
        },
        {
            "type": "VariableDecl",
            "name": "response",
            "range": [
                1119,
                1140
            ],
            "children": [
                {
                    "type": "Identifier",
                    "name": "response",
                    "range": [
                        1119,
                        1119
                    ],
                    "children": [],
                    "content": "\"input\""
                },
                {
                    "type": "Keyword",
                    "name": "await",
                    "range": [
                        1121,
                        1121
                    ],
                    "children": [],
                    "content": "\"Write me a block that writes a string into a file.\""
                },
                {
                    "type": "CallExpression",
                    "name": "test_execute_graph",
                    "range": [
                        1126,
                        1139
                    ],
                    "children": [
                        {
                            "type": "MemberExpression",
                            "name": "server.agent_server",
                            "range": [
                                1122,
                                1125
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "server",
                                    "range": [
                                        1122,
                                        1122
                                    ],
                                    "children": [],
                                    "content": "}"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "agent_server",
                                    "range": [
                                        1124,
                                        1124
                                    ],
                                    "children": [],
                                    "content": "response"
                                }
                            ],
                            "content": "}\nresponse="
                        },
                        {
                            "type": "Identifier",
                            "name": "test_execute_graph",
                            "range": [
                                1126,
                                1126
                            ],
                            "children": [],
                            "content": "await"
                        },
                        {
                            "type": "Identifier",
                            "name": "test_graph",
                            "range": [
                                1129,
                                1129
                            ],
                            "children": [],
                            "content": "agent_server"
                        },
                        {
                            "type": "Identifier",
                            "name": "id",
                            "range": [
                                1131,
                                1131
                            ],
                            "children": [],
                            "content": "test_execute_graph"
                        },
                        {
                            "type": "Identifier",
                            "name": "input_data",
                            "range": [
                                1133,
                                1133
                            ],
                            "children": [],
                            "content": "\n"
                        },
                        {
                            "type": "Identifier",
                            "name": "test_user",
                            "range": [
                                1135,
                                1135
                            ],
                            "children": [],
                            "content": "."
                        },
                        {
                            "type": "Identifier",
                            "name": "id",
                            "range": [
                                1137,
                                1137
                            ],
                            "children": [],
                            "content": ","
                        }
                    ],
                    "content": "await server.agent_server.test_execute_graph(\ntest_graph.id,input_data,"
                }
            ],
            "content": "\"input\":\"Write me a block that writes a string into a file.\"}\nresponse=await server.agent_server.test_execute_graph(\ntest_graph.id,input_data,test_user"
        },
        {
            "type": "ExpressionStatement",
            "name": "",
            "range": [
                1141,
                1145
            ],
            "children": [
                {
                    "type": "CallExpression",
                    "name": "print",
                    "range": [
                        1141,
                        1144
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "print",
                            "range": [
                                1141,
                                1141
                            ],
                            "children": [],
                            "content": "."
                        },
                        {
                            "type": "Identifier",
                            "name": "response",
                            "range": [
                                1143,
                                1143
                            ],
                            "children": [],
                            "content": "\n"
                        }
                    ],
                    "content": ".id\n)"
                }
            ],
            "content": ".id\n)\n"
        },
        {
            "type": "VariableDecl",
            "name": "result",
            "range": [
                1146,
                1180
            ],
            "children": [
                {
                    "type": "Identifier",
                    "name": "result",
                    "range": [
                        1146,
                        1146
                    ],
                    "children": [],
                    "content": "print"
                },
                {
                    "type": "Keyword",
                    "name": "await",
                    "range": [
                        1148,
                        1148
                    ],
                    "children": [],
                    "content": "response"
                },
                {
                    "type": "CallExpression",
                    "name": "wait_execution",
                    "range": [
                        1149,
                        1179
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "wait_execution",
                            "range": [
                                1149,
                                1149
                            ],
                            "children": [],
                            "content": ")"
                        },
                        {
                            "type": "Identifier",
                            "name": "graph_id",
                            "range": [
                                1152,
                                1152
                            ],
                            "children": [],
                            "content": "="
                        },
                        {
                            "type": "Identifier",
                            "name": "test_graph",
                            "range": [
                                1154,
                                1154
                            ],
                            "children": [],
                            "content": "wait_execution"
                        },
                        {
                            "type": "Identifier",
                            "name": "id",
                            "range": [
                                1156,
                                1156
                            ],
                            "children": [],
                            "content": "\n"
                        },
                        {
                            "type": "Identifier",
                            "name": "graph_exec_id",
                            "range": [
                                1159,
                                1159
                            ],
                            "children": [],
                            "content": "test_graph"
                        },
                        {
                            "type": "Identifier",
                            "name": "response",
                            "range": [
                                1161,
                                1161
                            ],
                            "children": [],
                            "content": "id"
                        },
                        {
                            "type": "Literal",
                            "name": "\"id\"",
                            "range": [
                                1163,
                                1163
                            ],
                            "children": [],
                            "content": "\n"
                        },
                        {
                            "type": "Identifier",
                            "name": "timeout",
                            "range": [
                                1167,
                                1167
                            ],
                            "children": [],
                            "content": "["
                        },
                        {
                            "type": "Literal",
                            "name": "1200",
                            "range": [
                                1169,
                                1169
                            ],
                            "children": [],
                            "content": "]"
                        },
                        {
                            "type": "Identifier",
                            "name": "user_id",
                            "range": [
                                1172,
                                1172
                            ],
                            "children": [],
                            "content": "timeout"
                        },
                        {
                            "type": "Identifier",
                            "name": "test_user",
                            "range": [
                                1174,
                                1174
                            ],
                            "children": [],
                            "content": "1200"
                        },
                        {
                            "type": "Identifier",
                            "name": "id",
                            "range": [
                                1176,
                                1176
                            ],
                            "children": [],
                            "content": "\n"
                        }
                    ],
                    "content": ")\nresult=await wait_execution(\ngraph_id=test_graph.id,\ngraph_exec_id=response[\"id\"],\ntimeout=1200,\nuser_id=test_user"
                }
            ],
            "content": "print(response)\nresult=await wait_execution(\ngraph_id=test_graph.id,\ngraph_exec_id=response[\"id\"],\ntimeout=1200,\nuser_id=test_user."
        },
        {
            "type": "ExpressionStatement",
            "name": "",
            "range": [
                1181,
                1185
            ],
            "children": [
                {
                    "type": "CallExpression",
                    "name": "print",
                    "range": [
                        1181,
                        1184
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "print",
                            "range": [
                                1181,
                                1181
                            ],
                            "children": [],
                            "content": "id"
                        },
                        {
                            "type": "Identifier",
                            "name": "result",
                            "range": [
                                1183,
                                1183
                            ],
                            "children": [],
                            "content": "\n"
                        }
                    ],
                    "content": "id,\n)"
                }
            ],
            "content": "id,\n)\n"
        }
    ],
    "content": "sample_block_modules={\n\"llm\":\"Block that calls the AI model to generate text.\",\n\"basic\":\"Block that does basic operations.\",\n\"text\":\"Blocks that do text operations.\",\n\"reddit\":\"Blocks that interacts with Reddit.\",\n}\nsample_block_codes={}\nfor module,description in sample_block_modules.items():\ncurrent_dir=Path(__file__).parent\nfile_path=current_dir.parent/\"blocks\"/f \"{module}.py\"\nwith open(file_path,\"r\")as f:\ncode=\"\\n\".join([\"```python\",f.read(),\"```\"])\nsample_block_codes[module]=f \"[Example: {description}]\\n{code}\"\n\n\nasync def create_test_user()->User:\ntest_user_data={\n\"sub\":\"ef3b97d7-1161-4eb4-92b2-10c24fb154c1\",\n\"email\":\"testuser@example.com\",\n\"name\":\"Test User\",\n}\nuser=await get_or_create_user(test_user_data)\nreturn user\n\n\ndef create_test_graph()->Graph:\n\"\"\" \\n             StoreValueBlock (input) \\n                  || \\n                  v \\n         FillTextTemplateBlock (input query) \\n                  || \\n                  v \\n          SendWebRequestBlock (browse) \\n                  || \\n                  v \\n      ------> StoreValueBlock=============== \\n     |           |  |                    || \\n     |            --                     || \\n     |                                   || \\n     |                                   || \\n     |                                    v \\n     |        AITextGeneratorBlock  <===== FillTextTemplateBlock (query) \\n     |            ||                      ^ \\n     |            v                      || \\n     |       ExtractTextInformationBlock             || \\n     |            ||                     || \\n     |            v                      || \\n     ------ BlockInstallationBlock  ====== \\n     \"\"\"\n#=======Nodes=========#\ninput_data=Node(block_id=StoreValueBlock().id)\ninput_query_constant=Node(\nblock_id=StoreValueBlock().id,\ninput_default={\"data\":None},\n)\ninput_text_formatter=Node(\nblock_id=FillTextTemplateBlock().id,\ninput_default={\n\"format\":\"Show me how to make a python code for this query: `{query}`\",\n},\n)\nsearch_http_request=Node(\nblock_id=SendWebRequestBlock().id,\ninput_default={\n\"url\":\"https://osit-v2.bentlybro.com/search\",\n},\n)\nsearch_result_constant=Node(\nblock_id=StoreValueBlock().id,\ninput_default={\n\"data\":None,\n},\n)\nprompt_text_formatter=Node(\nblock_id=FillTextTemplateBlock().id,\ninput_default={\n\"format\":\"\"\" \\n Write me a full Block implementation for this query: `{query}` \\n  \\n Here is the information I get to write a Python code for that: \\n {search_result} \\n  \\n Here is your previous attempt: \\n {previous_attempt} \\n \"\"\",\n\"values_#_previous_attempt\":\"No previous attempt found.\",\n},\n)\ncode_gen_llm_call=Node(\nblock_id=AITextGeneratorBlock().id,\ninput_default={\n\"sys_prompt\":f\"\"\" \\n You are a software engineer and you are asked to write the full class implementation. \\n The class that you are implementing is extending a class called `Block`. \\n This class will be used as a node in a graph of other blocks to build a complex system. \\n This class has a method called `run` that takes an input and returns an output. \\n It also has an `id` attribute that is a UUID, input_schema, and output_schema. \\n For UUID, you have to hardcode it, like `d2e2ecd2-9ae6-422d-8dfe-ceca500ce6a6`, \\n don't use any automatic UUID generation, because it needs to be consistent. \\n To validate the correctness of your implementation, you can also define a test. \\n There is `test_input` and `test_output` you can use to validate your implementation. \\n There is also `test_mock` to mock a helper function on your block class for testing. \\n  \\n Feel free to start your answer by explaining your plan what's required how to test, etc. \\n But make sure to produce the fully working implementation at the end, \\n and it should be enclosed within this block format: \\n ```python \\n <Your implementation here> \\n ``` \\n  \\n Here are a couple of sample of the Block class implementation: \\n  \\n {\"--------------\".join([sample_block_codes[v] for v in sample_block_modules])} \\n \"\"\",\n},\n)\ncode_text_parser=Node(\nblock_id=ExtractTextInformationBlock().id,\ninput_default={\n\"pattern\":\"```python\\n(.+?)\\n```\",\n\"group\":1,\n},\n)\nblock_installation=Node(\nblock_id=BlockInstallationBlock().id,\n)\nnodes=[\ninput_data,\ninput_query_constant,\ninput_text_formatter,\nsearch_http_request,\nsearch_result_constant,\nprompt_text_formatter,\ncode_gen_llm_call,\ncode_text_parser,\nblock_installation,\n]\n\n#=======Links=========#\nlinks=[\nLink(\nsource_id=input_data.id,\nsink_id=input_query_constant.id,\nsource_name=\"output\",\nsink_name=\"input\",\n),\nLink(\nsource_id=input_data.id,\nsink_id=input_text_formatter.id,\nsource_name=\"output\",\nsink_name=\"values_#_query\",\n),\nLink(\nsource_id=input_query_constant.id,\nsink_id=input_query_constant.id,\nsource_name=\"output\",\nsink_name=\"data\",\n),\nLink(\nsource_id=input_text_formatter.id,\nsink_id=search_http_request.id,\nsource_name=\"output\",\nsink_name=\"body_#_query\",\n),\nLink(\nsource_id=search_http_request.id,\nsink_id=search_result_constant.id,\nsource_name=\"response_#_reply\",\nsink_name=\"input\",\n),\nLink(#Loopback for constant block\nsource_id=search_result_constant.id,\nsink_id=search_result_constant.id,\nsource_name=\"output\",\nsink_name=\"data\",\n),\nLink(\nsource_id=search_result_constant.id,\nsink_id=prompt_text_formatter.id,\nsource_name=\"output\",\nsink_name=\"values_#_search_result\",\n),\nLink(\nsource_id=input_query_constant.id,\nsink_id=prompt_text_formatter.id,\nsource_name=\"output\",\nsink_name=\"values_#_query\",\n),\nLink(\nsource_id=prompt_text_formatter.id,\nsink_id=code_gen_llm_call.id,\nsource_name=\"output\",\nsink_name=\"prompt\",\n),\nLink(\nsource_id=code_gen_llm_call.id,\nsink_id=code_text_parser.id,\nsource_name=\"response\",\nsink_name=\"text\",\n),\nLink(\nsource_id=code_text_parser.id,\nsink_id=block_installation.id,\nsource_name=\"positive\",\nsink_name=\"code\",\n),\nLink(\nsource_id=block_installation.id,\nsink_id=prompt_text_formatter.id,\nsource_name=\"error\",\nsink_name=\"values_#_previous_attempt\",\n),\nLink(#Re-trigger search result.\nsource_id=block_installation.id,\nsink_id=search_result_constant.id,\nsource_name=\"error\",\nsink_name=\"input\",\n),\nLink(#Re-trigger search result.\nsource_id=block_installation.id,\nsink_id=input_query_constant.id,\nsource_name=\"error\",\nsink_name=\"input\",\n),\n]\n\n#=======Graph=========#\nreturn Graph(\nname=\"BlockAutoGen\",\ndescription=\"Block auto generation agent\",\nnodes=nodes,\nlinks=links,\n)\n\n\nasync def block_autogen_agent():\nasync with SpinTestServer()as server:\ntest_user=await create_test_user()\ntest_graph=await create_graph(create_test_graph(),user_id=test_user.id)\ninput_data={\"input\":\"Write me a block that writes a string into a file.\"}\nresponse=await server.agent_server.test_execute_graph(\ntest_graph.id,input_data,test_user.id\n)\nprint(response)\nresult=await wait_execution(\ngraph_id=test_graph.id,\ngraph_exec_id=response[\"id\"],\ntimeout=1200,\nuser_id=test_user.id,\n)\n"
}