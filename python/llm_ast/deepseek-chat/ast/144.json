{
    "type": "Program",
    "name": "Global",
    "range": [
        14,
        121
    ],
    "children": [
        {
            "type": "ClassDecl",
            "name": "JsonFileHandler",
            "range": [
                14,
                121
            ],
            "children": [
                {
                    "type": "FunctionDecl",
                    "name": "format",
                    "range": [
                        23,
                        74
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "self",
                            "range": [
                                26,
                                26
                            ],
                            "children": [],
                            "content": "self"
                        },
                        {
                            "type": "Parameter",
                            "name": "record",
                            "range": [
                                28,
                                28
                            ],
                            "children": [],
                            "content": "record"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "logging.LogRecord",
                            "range": [
                                30,
                                32
                            ],
                            "children": [],
                            "content": "logging.LogRecord"
                        },
                        {
                            "type": "ReturnType",
                            "name": "str",
                            "range": [
                                36,
                                36
                            ],
                            "children": [],
                            "content": "str"
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "=",
                            "range": [
                                42,
                                52
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": ".",
                                    "range": [
                                        40,
                                        41
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "record",
                                            "range": [
                                                39,
                                                39
                                            ],
                                            "children": [],
                                            "content": "record"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "json_data",
                                            "range": [
                                                41,
                                                41
                                            ],
                                            "children": [],
                                            "content": "json_data"
                                        }
                                    ],
                                    "content": ".json_data"
                                },
                                {
                                    "type": "CallExpression",
                                    "name": "json.loads",
                                    "range": [
                                        43,
                                        52
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "record.getMessage",
                                            "range": [
                                                47,
                                                51
                                            ],
                                            "children": [],
                                            "content": "record.getMessage()"
                                        }
                                    ],
                                    "content": "json.loads(record.getMessage())"
                                }
                            ],
                            "content": "=json.loads(record.getMessage())"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "return",
                            "range": [
                                54,
                                73
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "json.dumps",
                                    "range": [
                                        55,
                                        73
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "getattr",
                                            "range": [
                                                59,
                                                64
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "record",
                                                    "range": [
                                                        61,
                                                        61
                                                    ],
                                                    "children": [],
                                                    "content": "record"
                                                },
                                                {
                                                    "type": "StringLiteral",
                                                    "name": "\"json_data\"",
                                                    "range": [
                                                        63,
                                                        63
                                                    ],
                                                    "children": [],
                                                    "content": "\"json_data\""
                                                }
                                            ],
                                            "content": "getattr(record,\"json_data\")"
                                        },
                                        {
                                            "type": "KeywordArgument",
                                            "name": "ensure_ascii",
                                            "range": [
                                                66,
                                                68
                                            ],
                                            "children": [],
                                            "content": "ensure_ascii=False"
                                        },
                                        {
                                            "type": "KeywordArgument",
                                            "name": "indent",
                                            "range": [
                                                70,
                                                72
                                            ],
                                            "children": [],
                                            "content": "indent=4"
                                        }
                                    ],
                                    "content": "json.dumps(getattr(record,\"json_data\"),ensure_ascii=False,indent=4)"
                                }
                            ],
                            "content": "return json.dumps(getattr(record,\"json_data\"),ensure_ascii=False,indent=4)"
                        }
                    ],
                    "content": "def format(self,record:logging.LogRecord)->str:\nrecord.json_data=json.loads(record.getMessage())\nreturn json.dumps(getattr(record,\"json_data\"),ensure_ascii=False,indent=4)\n"
                },
                {
                    "type": "FunctionDecl",
                    "name": "emit",
                    "range": [
                        76,
                        121
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "self",
                            "range": [
                                79,
                                79
                            ],
                            "children": [],
                            "content": "self"
                        },
                        {
                            "type": "Parameter",
                            "name": "record",
                            "range": [
                                81,
                                81
                            ],
                            "children": [],
                            "content": "record"
                        },
                        {
                            "type": "TypeAnnotation",
                            "name": "logging.LogRecord",
                            "range": [
                                83,
                                85
                            ],
                            "children": [],
                            "content": "logging.LogRecord"
                        },
                        {
                            "type": "ReturnType",
                            "name": "None",
                            "range": [
                                89,
                                89
                            ],
                            "children": [],
                            "content": "None"
                        },
                        {
                            "type": "WithStatement",
                            "name": "with",
                            "range": [
                                92,
                                120
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "open",
                                    "range": [
                                        93,
                                        104
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": ".",
                                            "range": [
                                                96,
                                                97
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "self",
                                                    "range": [
                                                        95,
                                                        95
                                                    ],
                                                    "children": [],
                                                    "content": "self"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "baseFilename",
                                                    "range": [
                                                        97,
                                                        97
                                                    ],
                                                    "children": [],
                                                    "content": "baseFilename"
                                                }
                                            ],
                                            "content": ".baseFilename"
                                        },
                                        {
                                            "type": "StringLiteral",
                                            "name": "\"w\"",
                                            "range": [
                                                99,
                                                99
                                            ],
                                            "children": [],
                                            "content": "\"w\""
                                        },
                                        {
                                            "type": "KeywordArgument",
                                            "name": "encoding",
                                            "range": [
                                                101,
                                                103
                                            ],
                                            "children": [],
                                            "content": "encoding=\"utf-8\""
                                        }
                                    ],
                                    "content": "open(self.baseFilename,\"w\",encoding=\"utf-8\")"
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "",
                                    "range": [
                                        108,
                                        120
                                    ],
                                    "children": [
                                        {
                                            "type": "ExpressionStatement",
                                            "name": "",
                                            "range": [
                                                109,
                                                119
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "f.write",
                                                    "range": [
                                                        110,
                                                        119
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "self.format",
                                                            "range": [
                                                                115,
                                                                118
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "record",
                                                                    "range": [
                                                                        117,
                                                                        117
                                                                    ],
                                                                    "children": [],
                                                                    "content": "record"
                                                                }
                                                            ],
                                                            "content": "format(record)"
                                                        }
                                                    ],
                                                    "content": ".write(self.format(record))"
                                                }
                                            ],
                                            "content": "f.write(self.format(record))"
                                        }
                                    ],
                                    "content": "\nf.write(self.format(record))\n"
                                }
                            ],
                            "content": "with open(self.baseFilename,\"w\",encoding=\"utf-8\")as f:\nf.write(self.format(record))\n"
                        }
                    ],
                    "content": "def emit(self,record:logging.LogRecord)->None:\nwith open(self.baseFilename,\"w\",encoding=\"utf-8\")as f:\nf.write(self.format(record))\n"
                }
            ],
            "content": "class JsonFileHandler(logging.FileHandler):\ndef format(self,record:logging.LogRecord)->str:\nrecord.json_data=json.loads(record.getMessage())\nreturn json.dumps(getattr(record,\"json_data\"),ensure_ascii=False,indent=4)\n\ndef emit(self,record:logging.LogRecord)->None:\nwith open(self.baseFilename,\"w\",encoding=\"utf-8\")as f:\nf.write(self.format(record))\n"
        }
    ],
    "content": "class JsonFileHandler(logging.FileHandler):\ndef format(self,record:logging.LogRecord)->str:\nrecord.json_data=json.loads(record.getMessage())\nreturn json.dumps(getattr(record,\"json_data\"),ensure_ascii=False,indent=4)\n\ndef emit(self,record:logging.LogRecord)->None:\nwith open(self.baseFilename,\"w\",encoding=\"utf-8\")as f:\nf.write(self.format(record))\n"
}