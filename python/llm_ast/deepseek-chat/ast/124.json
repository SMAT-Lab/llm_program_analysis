{
    "type": "Program",
    "name": "Global",
    "range": [
        0,
        1065
    ],
    "children": [
        {
            "type": "ClassDecl",
            "name": "GithubWebhookType",
            "range": [
                70,
                81
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "StrEnum",
                    "range": [
                        72,
                        74
                    ],
                    "children": [],
                    "content": "-8<"
                },
                {
                    "type": "ClassBody",
                    "name": "",
                    "range": [
                        75,
                        81
                    ],
                    "children": [
                        {
                            "type": "FieldDeclaration",
                            "name": "REPO",
                            "range": [
                                77,
                                79
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"repo\"",
                                    "range": [
                                        79,
                                        79
                                    ],
                                    "children": [],
                                    "content": ":"
                                }
                            ],
                            "content": "[start:"
                        }
                    ],
                    "content": "--[start:GithubWebhooksManager]"
                }
            ],
            "content": "#--8<--[start:GithubWebhooksManager]"
        },
        {
            "type": "FunctionDecl",
            "name": "extract_github_error_msg",
            "range": [
                933,
                1064
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "response",
                    "range": [
                        936,
                        940
                    ],
                    "children": [],
                    "content": "errors \"]) \\n     if resp.get(\" error \"): \\n         if isinstance(resp[\" error"
                },
                {
                    "type": "ReturnType",
                    "name": "str",
                    "range": [
                        944,
                        944
                    ],
                    "children": [],
                    "content": "message"
                },
                {
                    "type": "Block",
                    "name": "",
                    "range": [
                        946,
                        1064
                    ],
                    "children": [
                        {
                            "type": "VariableDeclaration",
                            "name": "error_msgs",
                            "range": [
                                947,
                                950
                            ],
                            "children": [],
                            "content": "\"])) \\n         else: \\n             error_msgs.append(resp[\" error \"]) \\n     return \"\n"
                        },
                        {
                            "type": "Assignment",
                            "name": "resp",
                            "range": [
                                952,
                                958
                            ],
                            "children": [],
                            "content": ".join(error_msgs)\n"
                        },
                        {
                            "type": "IfStatement",
                            "name": "",
                            "range": [
                                960,
                                978
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "",
                                    "range": [
                                        961,
                                        966
                                    ],
                                    "children": [],
                                    "content": ""
                                },
                                {
                                    "type": "Block",
                                    "name": "",
                                    "range": [
                                        968,
                                        978
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "append",
                                            "range": [
                                                969,
                                                977
                                            ],
                                            "children": [],
                                            "content": ""
                                        }
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        },
                        {
                            "type": "IfStatement",
                            "name": "",
                            "range": [
                                979,
                                1002
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "",
                                    "range": [
                                        980,
                                        985
                                    ],
                                    "children": [],
                                    "content": ""
                                },
                                {
                                    "type": "Block",
                                    "name": "",
                                    "range": [
                                        987,
                                        1002
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "extend",
                                            "range": [
                                                988,
                                                1001
                                            ],
                                            "children": [],
                                            "content": ""
                                        }
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        },
                        {
                            "type": "IfStatement",
                            "name": "",
                            "range": [
                                1003,
                                1056
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "",
                                    "range": [
                                        1004,
                                        1009
                                    ],
                                    "children": [],
                                    "content": ""
                                },
                                {
                                    "type": "Block",
                                    "name": "",
                                    "range": [
                                        1011,
                                        1056
                                    ],
                                    "children": [
                                        {
                                            "type": "IfStatement",
                                            "name": "",
                                            "range": [
                                                1012,
                                                1043
                                            ],
                                            "children": [
                                                {
                                                    "type": "Condition",
                                                    "name": "",
                                                    "range": [
                                                        1013,
                                                        1021
                                                    ],
                                                    "children": [],
                                                    "content": ""
                                                },
                                                {
                                                    "type": "Block",
                                                    "name": "",
                                                    "range": [
                                                        1023,
                                                        1043
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "append",
                                                            "range": [
                                                                1024,
                                                                1042
                                                            ],
                                                            "children": [],
                                                            "content": ""
                                                        }
                                                    ],
                                                    "content": ""
                                                }
                                            ],
                                            "content": ""
                                        },
                                        {
                                            "type": "ElseStatement",
                                            "name": "",
                                            "range": [
                                                1044,
                                                1056
                                            ],
                                            "children": [
                                                {
                                                    "type": "Block",
                                                    "name": "",
                                                    "range": [
                                                        1046,
                                                        1056
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "append",
                                                            "range": [
                                                                1047,
                                                                1055
                                                            ],
                                                            "children": [],
                                                            "content": ""
                                                        }
                                                    ],
                                                    "content": ""
                                                }
                                            ],
                                            "content": ""
                                        }
                                    ],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "",
                            "range": [
                                1057,
                                1064
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "join",
                                    "range": [
                                        1059,
                                        1063
                                    ],
                                    "children": [],
                                    "content": ""
                                }
                            ],
                            "content": ""
                        }
                    ],
                    "content": "error \"])) \\n         else: \\n             error_msgs.append(resp[\" error \"]) \\n     return \"\n\".join(error_msgs)\n"
                }
            ],
            "content": ")}\" for err in resp[\" errors \"]) \\n     if resp.get(\" error \"): \\n         if isinstance(resp[\" error \"], dict): \\n             error_msgs.append(resp[\" error \"].get(\" message \", resp[\" error \"])) \\n         else: \\n             error_msgs.append(resp[\" error \"]) \\n     return \"\n\".join(error_msgs)\n"
        }
    ],
    "content": "import hashlib\nimport hmac\nimport logging\n\nimport requests\nfrom fastapi import HTTPException,Request\nfrom strenum import StrEnum\n\nfrom backend.data import integrations\nfrom backend.data.model import Credentials\nfrom backend.integrations.providers import ProviderName\n\nfrom._base import BaseWebhooksManager\n\nlogger=logging.getLogger(__name__)\n\n\n#--8<--[start:GithubWebhooksManager]\nclass GithubWebhookType(StrEnum):\nREPO=\"repo\"\n\n\nclass GithubWebhooksManager(BaseWebhooksManager):\nPROVIDER_NAME=ProviderName.GITHUB\n\nWebhookType=GithubWebhookType\n\nGITHUB_API_URL=\"https://api.github.com\"\nGITHUB_API_DEFAULT_HEADERS={\"Accept\":\"application/vnd.github.v3+json\"}\n\n@classmethod\nasync def validate_payload(\ncls,webhook:integrations.Webhook,request:Request\n)->tuple[dict,str]:\nif not(event_type:=request.headers.get(\"X-GitHub-Event\")):\nraise HTTPException(\nstatus_code=400,detail=\"X-GitHub-Event header is missing!\"\n)\n\nif not(signature_header:=request.headers.get(\"X-Hub-Signature-256\")):\nraise HTTPException(\nstatus_code=403,detail=\"X-Hub-Signature-256 header is missing!\"\n)\n\npayload_body=await request.body()\nhash_object=hmac.new(\nwebhook.secret.encode(\"utf-8\"),msg=payload_body,digestmod=hashlib.sha256\n)\nexpected_signature=\"sha256=\"+hash_object.hexdigest()\n\nif not hmac.compare_digest(expected_signature,signature_header):\nraise HTTPException(\nstatus_code=403,detail=\"Request signatures didn't match!\"\n)\n\npayload=await request.json()\nif action:=payload.get(\"action\"):\nevent_type+=f \".{action}\"\n\nreturn payload,event_type\n\nasync def trigger_ping(\nself,webhook:integrations.Webhook,credentials:Credentials|None\n)->None:\nif not credentials:\nraise ValueError(\"Credentials are required but were not passed\")\n\nheaders={\n**self.GITHUB_API_DEFAULT_HEADERS,\n\"Authorization\":credentials.bearer(),\n}\n\nrepo,github_hook_id=webhook.resource,webhook.provider_webhook_id\nping_url=f \"{self.GITHUB_API_URL}/repos/{repo}/hooks/{github_hook_id}/pings\"\n\nresponse=requests.post(ping_url,headers=headers)\n\nif response.status_code!=204:\nerror_msg=extract_github_error_msg(response)\nraise ValueError(f \"Failed to ping GitHub webhook: {error_msg}\")\n\nasync def _register_webhook(\nself,\ncredentials:Credentials,\nwebhook_type:GithubWebhookType,\nresource:str,\nevents:list[str],\ningress_url:str,\nsecret:str,\n)->tuple[str,dict]:\nif webhook_type==self.WebhookType.REPO and resource.count(\"/\")>1:\nraise ValueError(\"Invalid repo format: expected 'owner/repo'\")\n\n#Extract main event,e.g.`pull_request.opened`->`pull_request`\ngithub_events=list({event.split(\".\")[0]for event in events})\n\nheaders={\n**self.GITHUB_API_DEFAULT_HEADERS,\n\"Authorization\":credentials.bearer(),\n}\nwebhook_data={\n\"name\":\"web\",\n\"active\":True,\n\"events\":github_events,\n\"config\":{\n\"url\":ingress_url,\n\"content_type\":\"json\",\n\"insecure_ssl\":\"0\",\n\"secret\":secret,\n},\n}\n\nresponse=requests.post(\nf \"{self.GITHUB_API_URL}/repos/{resource}/hooks\",\nheaders=headers,\njson=webhook_data,\n)\n\nif response.status_code!=201:\nerror_msg=extract_github_error_msg(response)\nif \"not found\" in error_msg.lower():\nerror_msg=(\nf \"{error_msg} \"\n\"(Make sure the GitHub account or API key has 'repo' or \"\nf \"webhook create permissions to '{resource}')\"\n)\nraise ValueError(f \"Failed to create GitHub webhook: {error_msg}\")\n\nwebhook_id=response.json()[\"id\"]\nconfig=response.json()[\"config\"]\n\nreturn str(webhook_id),config\n\nasync def _deregister_webhook(\nself,webhook:integrations.Webhook,credentials:Credentials\n)->None:\nwebhook_type=self.WebhookType(webhook.webhook_type)\nif webhook.credentials_id!=credentials.id:\nraise ValueError(\nf \"Webhook #{webhook.id} does not belong to credentials {credentials.id}\"\n)\n\nheaders={\n**self.GITHUB_API_DEFAULT_HEADERS,\n\"Authorization\":credentials.bearer(),\n}\n\nif webhook_type==self.WebhookType.REPO:\nrepo=webhook.resource\ndelete_url=f \"{self.GITHUB_API_URL}/repos/{repo}/hooks/{webhook.provider_webhook_id}\"#noqa\nelse:\nraise NotImplementedError(\nf \"Unsupported webhook type '{webhook.webhook_type}'\"\n)\n\nresponse=requests.delete(delete_url,headers=headers)\n\nif response.status_code not in[204,404]:\n#204means successful deletion,404means the webhook was already deleted\nerror_msg=extract_github_error_msg(response)\nraise ValueError(f \"Failed to delete GitHub webhook: {error_msg}\")\n\n#If we reach here,the webhook was successfully deleted or didn 't exist \\n  \\n  \\n # --8<-- [end:GithubWebhooksManager] \\n  \\n  \\n def extract_github_error_msg(response: requests.Response) -> str: \\n     error_msgs = [] \\n     resp = response.json() \\n     if resp.get(\"message\"): \\n         error_msgs.append(resp[\"message\"]) \\n     if resp.get(\"errors\"): \\n         error_msgs.extend(f\"* {err.get(' message',err)}\" for err in resp[\" errors \"]) \\n     if resp.get(\" error \"): \\n         if isinstance(resp[\" error \"], dict): \\n             error_msgs.append(resp[\" error \"].get(\" message \", resp[\" error \"])) \\n         else: \\n             error_msgs.append(resp[\" error \"]) \\n     return \"\n\".join(error_msgs)\n"
}