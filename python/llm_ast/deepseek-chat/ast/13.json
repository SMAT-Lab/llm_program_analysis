{
    "type": "Program",
    "name": "Global",
    "range": [
        71,
        547
    ],
    "children": [
        {
            "type": "AssignmentExpression",
            "name": "=",
            "range": [
                71,
                105
            ],
            "children": [
                {
                    "type": "Identifier",
                    "name": "TEST_CREDENTIALS",
                    "range": [
                        71,
                        71
                    ],
                    "children": [],
                    "content": "TEST_CREDENTIALS"
                },
                {
                    "type": "CallExpression",
                    "name": "APIKeyCredentials",
                    "range": [
                        73,
                        104
                    ],
                    "children": [
                        {
                            "type": "Argument",
                            "name": "id",
                            "range": [
                                76,
                                78
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"01234567-89ab-cdef-0123-456789abcdef\"",
                                    "range": [
                                        78,
                                        78
                                    ],
                                    "children": [],
                                    "content": "\"01234567-89ab-cdef-0123-456789abcdef\""
                                }
                            ],
                            "content": "id=\"01234567-89ab-cdef-0123-456789abcdef\""
                        },
                        {
                            "type": "Argument",
                            "name": "provider",
                            "range": [
                                81,
                                83
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"unreal_speech\"",
                                    "range": [
                                        83,
                                        83
                                    ],
                                    "children": [],
                                    "content": "\"unreal_speech\""
                                }
                            ],
                            "content": "provider=\"unreal_speech\""
                        },
                        {
                            "type": "Argument",
                            "name": "api_key",
                            "range": [
                                86,
                                91
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "SecretStr",
                                    "range": [
                                        88,
                                        91
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "\"mock-unreal-speech-api-key\"",
                                            "range": [
                                                90,
                                                90
                                            ],
                                            "children": [],
                                            "content": "\"mock-unreal-speech-api-key\""
                                        }
                                    ],
                                    "content": "SecretStr(\"mock-unreal-speech-api-key\")"
                                }
                            ],
                            "content": "api_key=SecretStr(\"mock-unreal-speech-api-key\")"
                        },
                        {
                            "type": "Argument",
                            "name": "title",
                            "range": [
                                94,
                                96
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"Mock Unreal Speech API key\"",
                                    "range": [
                                        96,
                                        96
                                    ],
                                    "children": [],
                                    "content": "\"Mock Unreal Speech API key\""
                                }
                            ],
                            "content": "title=\"Mock Unreal Speech API key\""
                        },
                        {
                            "type": "Argument",
                            "name": "expires_at",
                            "range": [
                                99,
                                101
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "None",
                                    "range": [
                                        101,
                                        101
                                    ],
                                    "children": [],
                                    "content": "None"
                                }
                            ],
                            "content": "expires_at=None"
                        }
                    ],
                    "content": "APIKeyCredentials(\nid=\"01234567-89ab-cdef-0123-456789abcdef\",\nprovider=\"unreal_speech\",\napi_key=SecretStr(\"mock-unreal-speech-api-key\"),\ntitle=\"Mock Unreal Speech API key\",\nexpires_at=None,\n)"
                }
            ],
            "content": "TEST_CREDENTIALS=APIKeyCredentials(\nid=\"01234567-89ab-cdef-0123-456789abcdef\",\nprovider=\"unreal_speech\",\napi_key=SecretStr(\"mock-unreal-speech-api-key\"),\ntitle=\"Mock Unreal Speech API key\",\nexpires_at=None,\n)\n"
        },
        {
            "type": "VariableDeclaration",
            "name": "TEST_CREDENTIALS_INPUT",
            "range": [
                106,
                138
            ],
            "children": [
                {
                    "type": "ObjectExpression",
                    "name": "",
                    "range": [
                        108,
                        138
                    ],
                    "children": [
                        {
                            "type": "Property",
                            "name": "provider",
                            "range": [
                                110,
                                114
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"provider\"",
                                    "range": [
                                        110,
                                        110
                                    ],
                                    "children": [],
                                    "content": "\"provider\""
                                },
                                {
                                    "type": "MemberExpression",
                                    "name": "TEST_CREDENTIALS.provider",
                                    "range": [
                                        112,
                                        114
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "TEST_CREDENTIALS",
                                            "range": [
                                                112,
                                                112
                                            ],
                                            "children": [],
                                            "content": "TEST_CREDENTIALS"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "provider",
                                            "range": [
                                                114,
                                                114
                                            ],
                                            "children": [],
                                            "content": "provider"
                                        }
                                    ],
                                    "content": "TEST_CREDENTIALS.provider"
                                }
                            ],
                            "content": "\"provider\":TEST_CREDENTIALS.provider"
                        },
                        {
                            "type": "Property",
                            "name": "id",
                            "range": [
                                117,
                                121
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"id\"",
                                    "range": [
                                        117,
                                        117
                                    ],
                                    "children": [],
                                    "content": "\"id\""
                                },
                                {
                                    "type": "MemberExpression",
                                    "name": "TEST_CREDENTIALS.id",
                                    "range": [
                                        119,
                                        121
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "TEST_CREDENTIALS",
                                            "range": [
                                                119,
                                                119
                                            ],
                                            "children": [],
                                            "content": "TEST_CREDENTIALS"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "id",
                                            "range": [
                                                121,
                                                121
                                            ],
                                            "children": [],
                                            "content": "id"
                                        }
                                    ],
                                    "content": "TEST_CREDENTIALS.id"
                                }
                            ],
                            "content": "\"id\":TEST_CREDENTIALS.id"
                        },
                        {
                            "type": "Property",
                            "name": "type",
                            "range": [
                                124,
                                128
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"type\"",
                                    "range": [
                                        124,
                                        124
                                    ],
                                    "children": [],
                                    "content": "\"type\""
                                },
                                {
                                    "type": "MemberExpression",
                                    "name": "TEST_CREDENTIALS.type",
                                    "range": [
                                        126,
                                        128
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "TEST_CREDENTIALS",
                                            "range": [
                                                126,
                                                126
                                            ],
                                            "children": [],
                                            "content": "TEST_CREDENTIALS"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "type",
                                            "range": [
                                                128,
                                                128
                                            ],
                                            "children": [],
                                            "content": "type"
                                        }
                                    ],
                                    "content": "TEST_CREDENTIALS.type"
                                }
                            ],
                            "content": "\"type\":TEST_CREDENTIALS.type"
                        },
                        {
                            "type": "Property",
                            "name": "title",
                            "range": [
                                131,
                                135
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"title\"",
                                    "range": [
                                        131,
                                        131
                                    ],
                                    "children": [],
                                    "content": "\"title\""
                                },
                                {
                                    "type": "MemberExpression",
                                    "name": "TEST_CREDENTIALS.type",
                                    "range": [
                                        133,
                                        135
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "TEST_CREDENTIALS",
                                            "range": [
                                                133,
                                                133
                                            ],
                                            "children": [],
                                            "content": "TEST_CREDENTIALS"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "type",
                                            "range": [
                                                135,
                                                135
                                            ],
                                            "children": [],
                                            "content": "type"
                                        }
                                    ],
                                    "content": "TEST_CREDENTIALS.type"
                                }
                            ],
                            "content": "\"title\":TEST_CREDENTIALS.type"
                        }
                    ],
                    "content": "{\n\"provider\":TEST_CREDENTIALS.provider,\n\"id\":TEST_CREDENTIALS.id,\n\"type\":TEST_CREDENTIALS.type,\n\"title\":TEST_CREDENTIALS.type,\n}"
                }
            ],
            "content": "TEST_CREDENTIALS_INPUT={\n\"provider\":TEST_CREDENTIALS.provider,\n\"id\":TEST_CREDENTIALS.id,\n\"type\":TEST_CREDENTIALS.type,\n\"title\":TEST_CREDENTIALS.type,\n}"
        },
        {
            "type": "ClassDecl",
            "name": "UnrealTextToSpeechBlock",
            "range": [
                140,
                146
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "Block",
                    "range": [
                        142,
                        144
                    ],
                    "children": [],
                    "content": "class UnrealTextToSpeechBlock("
                }
            ],
            "content": "\n\nclass UnrealTextToSpeechBlock(Block)"
        },
        {
            "type": "ClassDecl",
            "name": "Input",
            "range": [
                147,
                153
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "BlockSchema",
                    "range": [
                        149,
                        151
                    ],
                    "children": [],
                    "content": "class Input("
                }
            ],
            "content": ":\nclass Input(BlockSchema)"
        },
        {
            "type": "VariableDecl",
            "name": "text",
            "range": [
                154,
                172
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "str",
                    "range": [
                        156,
                        158
                    ],
                    "children": [],
                    "content": "text:str"
                },
                {
                    "type": "Assignment",
                    "name": "SchemaField",
                    "range": [
                        158,
                        171
                    ],
                    "children": [
                        {
                            "type": "Argument",
                            "name": "description",
                            "range": [
                                161,
                                163
                            ],
                            "children": [],
                            "content": "(\ndescription"
                        },
                        {
                            "type": "Argument",
                            "name": "placeholder",
                            "range": [
                                166,
                                168
                            ],
                            "children": [],
                            "content": ",\nplaceholder"
                        }
                    ],
                    "content": "str=SchemaField(\ndescription=\"The text to be converted to speech\",\nplaceholder=\"Enter the text you want to convert to speech\","
                }
            ],
            "content": ":\ntext:str=SchemaField(\ndescription=\"The text to be converted to speech\",\nplaceholder=\"Enter the text you want to convert to speech\",\n"
        },
        {
            "type": "VariableDecl",
            "name": "voice_id",
            "range": [
                173,
                196
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "str",
                    "range": [
                        175,
                        177
                    ],
                    "children": [],
                    "content": "voice_id:str"
                },
                {
                    "type": "Assignment",
                    "name": "SchemaField",
                    "range": [
                        177,
                        195
                    ],
                    "children": [
                        {
                            "type": "Argument",
                            "name": "description",
                            "range": [
                                180,
                                182
                            ],
                            "children": [],
                            "content": "(\ndescription"
                        },
                        {
                            "type": "Argument",
                            "name": "placeholder",
                            "range": [
                                185,
                                187
                            ],
                            "children": [],
                            "content": ",\nplaceholder"
                        },
                        {
                            "type": "Argument",
                            "name": "default",
                            "range": [
                                190,
                                192
                            ],
                            "children": [],
                            "content": ",\ndefault"
                        }
                    ],
                    "content": "str=SchemaField(\ndescription=\"The voice ID to use for text-to-speech conversion\",\nplaceholder=\"Scarlett\",\ndefault=\"Scarlett\","
                }
            ],
            "content": ")\nvoice_id:str=SchemaField(\ndescription=\"The voice ID to use for text-to-speech conversion\",\nplaceholder=\"Scarlett\",\ndefault=\"Scarlett\",\n"
        },
        {
            "type": "VariableDecl",
            "name": "credentials",
            "range": [
                197,
                227
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "CredentialsMetaInput",
                    "range": [
                        199,
                        214
                    ],
                    "children": [
                        {
                            "type": "GenericType",
                            "name": "Literal",
                            "range": [
                                202,
                                207
                            ],
                            "children": [],
                            "content": "[\nLiteral[ProviderName."
                        },
                        {
                            "type": "GenericType",
                            "name": "Literal",
                            "range": [
                                209,
                                212
                            ],
                            "children": [],
                            "content": "],Literal["
                        }
                    ],
                    "content": "credentials:CredentialsMetaInput[\nLiteral[ProviderName.UNREAL_SPEECH],Literal[\"api_key\"]"
                },
                {
                    "type": "Assignment",
                    "name": "CredentialsField",
                    "range": [
                        216,
                        226
                    ],
                    "children": [
                        {
                            "type": "Argument",
                            "name": "description",
                            "range": [
                                219,
                                223
                            ],
                            "children": [],
                            "content": "(\ndescription=\"The Unreal Speech integration can be used with \""
                        }
                    ],
                    "content": "]=CredentialsField(\ndescription=\"The Unreal Speech integration can be used with \"\n\"any API key with sufficient permissions for the blocks it is used on.\","
                }
            ],
            "content": ")\ncredentials:CredentialsMetaInput[\nLiteral[ProviderName.UNREAL_SPEECH],Literal[\"api_key\"]\n]=CredentialsField(\ndescription=\"The Unreal Speech integration can be used with \"\n\"any API key with sufficient permissions for the blocks it is used on.\",\n"
        },
        {
            "type": "ClassDecl",
            "name": "Output",
            "range": [
                229,
                235
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "BlockSchema",
                    "range": [
                        231,
                        233
                    ],
                    "children": [],
                    "content": "class Output("
                }
            ],
            "content": "\n\nclass Output(BlockSchema)"
        },
        {
            "type": "VariableDecl",
            "name": "mp3_url",
            "range": [
                236,
                246
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "str",
                    "range": [
                        238,
                        240
                    ],
                    "children": [],
                    "content": "mp3_url:str"
                },
                {
                    "type": "Assignment",
                    "name": "SchemaField",
                    "range": [
                        240,
                        245
                    ],
                    "children": [
                        {
                            "type": "Argument",
                            "name": "description",
                            "range": [
                                242,
                                244
                            ],
                            "children": [],
                            "content": "SchemaField(description"
                        }
                    ],
                    "content": "str=SchemaField(description="
                }
            ],
            "content": ":\nmp3_url:str=SchemaField(description=\"The URL of the generated MP3 file\""
        },
        {
            "type": "VariableDecl",
            "name": "error",
            "range": [
                247,
                257
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "str",
                    "range": [
                        249,
                        251
                    ],
                    "children": [],
                    "content": "error:str"
                },
                {
                    "type": "Assignment",
                    "name": "SchemaField",
                    "range": [
                        251,
                        256
                    ],
                    "children": [
                        {
                            "type": "Argument",
                            "name": "description",
                            "range": [
                                253,
                                255
                            ],
                            "children": [],
                            "content": "SchemaField(description"
                        }
                    ],
                    "content": "str=SchemaField(description="
                }
            ],
            "content": ")\nerror:str=SchemaField(description=\"Error message if the API call failed\""
        },
        {
            "type": "FunctionDecl",
            "name": "__init__",
            "range": [
                259,
                374
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "self",
                    "range": [
                        262,
                        263
                    ],
                    "children": [],
                    "content": "__init__("
                },
                {
                    "type": "SuperCall",
                    "name": "super",
                    "range": [
                        266,
                        270
                    ],
                    "children": [],
                    "content": ":\nsuper()"
                },
                {
                    "type": "Assignment",
                    "name": "id",
                    "range": [
                        273,
                        275
                    ],
                    "children": [],
                    "content": "(\nid"
                },
                {
                    "type": "Assignment",
                    "name": "description",
                    "range": [
                        278,
                        280
                    ],
                    "children": [],
                    "content": ",\ndescription"
                },
                {
                    "type": "Assignment",
                    "name": "categories",
                    "range": [
                        283,
                        293
                    ],
                    "children": [],
                    "content": ",\ncategories={BlockCategory.AI,BlockCategory."
                },
                {
                    "type": "Assignment",
                    "name": "input_schema",
                    "range": [
                        296,
                        301
                    ],
                    "children": [],
                    "content": ",\ninput_schema=UnrealTextToSpeechBlock."
                },
                {
                    "type": "Assignment",
                    "name": "output_schema",
                    "range": [
                        303,
                        308
                    ],
                    "children": [],
                    "content": ",\noutput_schema=UnrealTextToSpeechBlock."
                },
                {
                    "type": "Assignment",
                    "name": "test_input",
                    "range": [
                        310,
                        329
                    ],
                    "children": [],
                    "content": ",\ntest_input={\n\"text\":\"This is a test of the text to speech API.\",\n\"voice_id\":\"Scarlett\",\n\"credentials\":TEST_CREDENTIALS_INPUT,"
                },
                {
                    "type": "Assignment",
                    "name": "test_output",
                    "range": [
                        332,
                        340
                    ],
                    "children": [],
                    "content": ",\ntest_output=[(\"mp3_url\",\"https://example.com/test.mp3\""
                },
                {
                    "type": "Assignment",
                    "name": "test_mock",
                    "range": [
                        343,
                        365
                    ],
                    "children": [],
                    "content": ",\ntest_mock={\n\"call_unreal_speech_api\":lambda*args,**kwargs:{\n\"OutputUri\":\"https://example.com/test.mp3\"\n}"
                },
                {
                    "type": "Assignment",
                    "name": "test_credentials",
                    "range": [
                        368,
                        370
                    ],
                    "children": [],
                    "content": ",\ntest_credentials"
                }
            ],
            "content": "\n\ndef __init__(self):\nsuper().__init__(\nid=\"4ff1ff6d-cc40-4caa-ae69-011daa20c378\",\ndescription=\"Converts text to speech using the Unreal Speech API\",\ncategories={BlockCategory.AI,BlockCategory.TEXT},\ninput_schema=UnrealTextToSpeechBlock.Input,\noutput_schema=UnrealTextToSpeechBlock.Output,\ntest_input={\n\"text\":\"This is a test of the text to speech API.\",\n\"voice_id\":\"Scarlett\",\n\"credentials\":TEST_CREDENTIALS_INPUT,\n},\ntest_output=[(\"mp3_url\",\"https://example.com/test.mp3\")],\ntest_mock={\n\"call_unreal_speech_api\":lambda*args,**kwargs:{\n\"OutputUri\":\"https://example.com/test.mp3\"\n}\n},\ntest_credentials=TEST_CREDENTIALS,\n"
        },
        {
            "type": "FunctionDecl",
            "name": "call_unreal_speech_api",
            "range": [
                376,
                487
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "api_key",
                    "range": [
                        383,
                        385
                    ],
                    "children": [],
                    "content": "(\napi_key"
                },
                {
                    "type": "Parameter",
                    "name": "text",
                    "range": [
                        387,
                        389
                    ],
                    "children": [],
                    "content": "SecretStr,text"
                },
                {
                    "type": "Parameter",
                    "name": "voice_id",
                    "range": [
                        391,
                        393
                    ],
                    "children": [],
                    "content": "str,voice_id"
                },
                {
                    "type": "ReturnType",
                    "name": "dict",
                    "range": [
                        398,
                        403
                    ],
                    "children": [],
                    "content": "->dict[str,"
                },
                {
                    "type": "Assignment",
                    "name": "url",
                    "range": [
                        406,
                        408
                    ],
                    "children": [],
                    "content": ":\nurl"
                },
                {
                    "type": "Assignment",
                    "name": "headers",
                    "range": [
                        410,
                        425
                    ],
                    "children": [],
                    "content": "\"https://api.v7.unrealspeech.com/speech\"\nheaders={\n\"Authorization\":f \"Bearer {api_key.get_secret_value()}\",\n\"Content-Type\":\"application/json\","
                },
                {
                    "type": "Assignment",
                    "name": "data",
                    "range": [
                        427,
                        461
                    ],
                    "children": [],
                    "content": "}\ndata={\n\"Text\":text,\n\"VoiceId\":voice_id,\n\"Bitrate\":\"192k\",\n\"Speed\":\"0\",\n\"Pitch\":\"1\",\n\"TimestampType\":\"sentence\","
                },
                {
                    "type": "CallExpression",
                    "name": "requests.post",
                    "range": [
                        464,
                        479
                    ],
                    "children": [],
                    "content": "\n\nresponse=requests.post(url,headers=headers,json="
                },
                {
                    "type": "ReturnStatement",
                    "name": "return",
                    "range": [
                        481,
                        487
                    ],
                    "children": [],
                    "content": ")\nreturn response.json("
                }
            ],
            "content": "\n\n@staticmethod\ndef call_unreal_speech_api(\napi_key:SecretStr,text:str,voice_id:str\n)->dict[str,Any]:\nurl=\"https://api.v7.unrealspeech.com/speech\"\nheaders={\n\"Authorization\":f \"Bearer {api_key.get_secret_value()}\",\n\"Content-Type\":\"application/json\",\n}\ndata={\n\"Text\":text,\n\"VoiceId\":voice_id,\n\"Bitrate\":\"192k\",\n\"Speed\":\"0\",\n\"Pitch\":\"1\",\n\"TimestampType\":\"sentence\",\n}\n\nresponse=requests.post(url,headers=headers,json=data)\nreturn response.json("
        },
        {
            "type": "FunctionDecl",
            "name": "run",
            "range": [
                489,
                547
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "self",
                    "range": [
                        493,
                        494
                    ],
                    "children": [],
                    "content": "(\n"
                },
                {
                    "type": "Parameter",
                    "name": "input_data",
                    "range": [
                        495,
                        497
                    ],
                    "children": [],
                    "content": "self,input_data"
                },
                {
                    "type": "Parameter",
                    "name": "credentials",
                    "range": [
                        501,
                        503
                    ],
                    "children": [],
                    "content": "*,credentials"
                },
                {
                    "type": "ReturnType",
                    "name": "BlockOutput",
                    "range": [
                        510,
                        512
                    ],
                    "children": [],
                    "content": "\n)-"
                },
                {
                    "type": "CallExpression",
                    "name": "self.call_unreal_speech_api",
                    "range": [
                        515,
                        537
                    ],
                    "children": [],
                    "content": ":\napi_response=self.call_unreal_speech_api(\ncredentials.api_key,\ninput_data.text,\ninput_data.voice_id,"
                },
                {
                    "type": "YieldStatement",
                    "name": "yield",
                    "range": [
                        539,
                        546
                    ],
                    "children": [],
                    "content": ")\nyield \"mp3_url\",api_response[\"OutputUri\""
                }
            ],
            "content": "\n\ndef run(\nself,input_data:Input,*,credentials:APIKeyCredentials,**kwargs\n)->BlockOutput:\napi_response=self.call_unreal_speech_api(\ncredentials.api_key,\ninput_data.text,\ninput_data.voice_id,\n)\nyield \"mp3_url\",api_response[\"OutputUri\"]"
        }
    ],
    "content": "TEST_CREDENTIALS=APIKeyCredentials(\nid=\"01234567-89ab-cdef-0123-456789abcdef\",\nprovider=\"unreal_speech\",\napi_key=SecretStr(\"mock-unreal-speech-api-key\"),\ntitle=\"Mock Unreal Speech API key\",\nexpires_at=None,\n)\nTEST_CREDENTIALS_INPUT={\n\"provider\":TEST_CREDENTIALS.provider,\n\"id\":TEST_CREDENTIALS.id,\n\"type\":TEST_CREDENTIALS.type,\n\"title\":TEST_CREDENTIALS.type,\n}\n\n\nclass UnrealTextToSpeechBlock(Block):\nclass Input(BlockSchema):\ntext:str=SchemaField(\ndescription=\"The text to be converted to speech\",\nplaceholder=\"Enter the text you want to convert to speech\",\n)\nvoice_id:str=SchemaField(\ndescription=\"The voice ID to use for text-to-speech conversion\",\nplaceholder=\"Scarlett\",\ndefault=\"Scarlett\",\n)\ncredentials:CredentialsMetaInput[\nLiteral[ProviderName.UNREAL_SPEECH],Literal[\"api_key\"]\n]=CredentialsField(\ndescription=\"The Unreal Speech integration can be used with \"\n\"any API key with sufficient permissions for the blocks it is used on.\",\n)\n\nclass Output(BlockSchema):\nmp3_url:str=SchemaField(description=\"The URL of the generated MP3 file\")\nerror:str=SchemaField(description=\"Error message if the API call failed\")\n\ndef __init__(self):\nsuper().__init__(\nid=\"4ff1ff6d-cc40-4caa-ae69-011daa20c378\",\ndescription=\"Converts text to speech using the Unreal Speech API\",\ncategories={BlockCategory.AI,BlockCategory.TEXT},\ninput_schema=UnrealTextToSpeechBlock.Input,\noutput_schema=UnrealTextToSpeechBlock.Output,\ntest_input={\n\"text\":\"This is a test of the text to speech API.\",\n\"voice_id\":\"Scarlett\",\n\"credentials\":TEST_CREDENTIALS_INPUT,\n},\ntest_output=[(\"mp3_url\",\"https://example.com/test.mp3\")],\ntest_mock={\n\"call_unreal_speech_api\":lambda*args,**kwargs:{\n\"OutputUri\":\"https://example.com/test.mp3\"\n}\n},\ntest_credentials=TEST_CREDENTIALS,\n)\n\n@staticmethod\ndef call_unreal_speech_api(\napi_key:SecretStr,text:str,voice_id:str\n)->dict[str,Any]:\nurl=\"https://api.v7.unrealspeech.com/speech\"\nheaders={\n\"Authorization\":f \"Bearer {api_key.get_secret_value()}\",\n\"Content-Type\":\"application/json\",\n}\ndata={\n\"Text\":text,\n\"VoiceId\":voice_id,\n\"Bitrate\":\"192k\",\n\"Speed\":\"0\",\n\"Pitch\":\"1\",\n\"TimestampType\":\"sentence\",\n}\n\nresponse=requests.post(url,headers=headers,json=data)\nreturn response.json()\n\ndef run(\nself,input_data:Input,*,credentials:APIKeyCredentials,**kwargs\n)->BlockOutput:\napi_response=self.call_unreal_speech_api(\ncredentials.api_key,\ninput_data.text,\ninput_data.voice_id,\n)\nyield \"mp3_url\",api_response[\"OutputUri\"]"
}