{
    "type": "Program",
    "name": "Global",
    "range": [
        0,
        376
    ],
    "children": [
        {
            "type": "ImportDeclaration",
            "name": "convert",
            "range": [
                0,
                7
            ],
            "children": [
                {
                    "type": "FromClause",
                    "name": "backend.util.type",
                    "range": [
                        0,
                        5
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "backend",
                            "range": [
                                0,
                                1
                            ],
                            "children": [],
                            "content": "from backend"
                        },
                        {
                            "type": "Identifier",
                            "name": "util",
                            "range": [
                                2,
                                3
                            ],
                            "children": [],
                            "content": ".util"
                        },
                        {
                            "type": "Identifier",
                            "name": "type",
                            "range": [
                                4,
                                5
                            ],
                            "children": [],
                            "content": ".type"
                        }
                    ],
                    "content": "from backend.util.type"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "convert",
                    "range": [
                        6,
                        7
                    ],
                    "children": [],
                    "content": "import convert"
                }
            ],
            "content": "from backend.util.type import convert"
        },
        {
            "type": "FunctionDecl",
            "name": "test_type_conversion",
            "range": [
                11,
                376
            ],
            "children": [
                {
                    "type": "AssertStatement",
                    "range": [
                        17,
                        29
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "convert",
                            "range": [
                                18,
                                25
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "value": "5.5",
                                    "range": [
                                        20,
                                        22
                                    ],
                                    "content": "5.5"
                                },
                                {
                                    "type": "Type",
                                    "value": "int",
                                    "range": [
                                        24,
                                        24
                                    ],
                                    "content": "int"
                                }
                            ],
                            "content": "convert(5.5,int)"
                        },
                        {
                            "type": "BinaryExpression",
                            "operator": "==",
                            "range": [
                                26,
                                27
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "value": "5",
                                    "range": [
                                        28,
                                        28
                                    ],
                                    "content": "5"
                                }
                            ],
                            "content": "=="
                        }
                    ],
                    "content": "assert convert(5.5,int)==5\n"
                },
                {
                    "type": "AssertStatement",
                    "range": [
                        30,
                        40
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "convert",
                            "range": [
                                31,
                                36
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "value": "\"5.5\"",
                                    "range": [
                                        33,
                                        33
                                    ],
                                    "content": "\"5.5\""
                                },
                                {
                                    "type": "Type",
                                    "value": "int",
                                    "range": [
                                        35,
                                        35
                                    ],
                                    "content": "int"
                                }
                            ],
                            "content": "convert(\"5.5\",int)"
                        },
                        {
                            "type": "BinaryExpression",
                            "operator": "==",
                            "range": [
                                37,
                                38
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "value": "5",
                                    "range": [
                                        39,
                                        39
                                    ],
                                    "content": "5"
                                }
                            ],
                            "content": "=="
                        }
                    ],
                    "content": "assert convert(\"5.5\",int)==5\n"
                },
                {
                    "type": "AssertStatement",
                    "range": [
                        41,
                        57
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "convert",
                            "range": [
                                42,
                                53
                            ],
                            "children": [
                                {
                                    "type": "ArrayLiteral",
                                    "range": [
                                        44,
                                        50
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "value": "1",
                                            "range": [
                                                45,
                                                45
                                            ],
                                            "content": "1"
                                        },
                                        {
                                            "type": "Literal",
                                            "value": "2",
                                            "range": [
                                                47,
                                                47
                                            ],
                                            "content": "2"
                                        },
                                        {
                                            "type": "Literal",
                                            "value": "3",
                                            "range": [
                                                49,
                                                49
                                            ],
                                            "content": "3"
                                        }
                                    ],
                                    "content": "[1,2,3]"
                                },
                                {
                                    "type": "Type",
                                    "value": "int",
                                    "range": [
                                        52,
                                        52
                                    ],
                                    "content": "int"
                                }
                            ],
                            "content": "convert([1,2,3],int)"
                        },
                        {
                            "type": "BinaryExpression",
                            "operator": "==",
                            "range": [
                                54,
                                55
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "value": "3",
                                    "range": [
                                        56,
                                        56
                                    ],
                                    "content": "3"
                                }
                            ],
                            "content": "=="
                        }
                    ],
                    "content": "assert convert([1,2,3],int)==3\n"
                },
                {
                    "type": "AssertStatement",
                    "range": [
                        59,
                        71
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "convert",
                            "range": [
                                60,
                                65
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "value": "\"5.5\"",
                                    "range": [
                                        62,
                                        62
                                    ],
                                    "content": "\"5.5\""
                                },
                                {
                                    "type": "Type",
                                    "value": "float",
                                    "range": [
                                        64,
                                        64
                                    ],
                                    "content": "float"
                                }
                            ],
                            "content": "convert(\"5.5\",float)"
                        },
                        {
                            "type": "BinaryExpression",
                            "operator": "==",
                            "range": [
                                66,
                                67
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "value": "5.5",
                                    "range": [
                                        68,
                                        70
                                    ],
                                    "content": "5.5"
                                }
                            ],
                            "content": "=="
                        }
                    ],
                    "content": "assert convert(\"5.5\",float)==5.5\n"
                },
                {
                    "type": "AssertStatement",
                    "range": [
                        72,
                        84
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "convert",
                            "range": [
                                73,
                                78
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "value": "5",
                                    "range": [
                                        75,
                                        75
                                    ],
                                    "content": "5"
                                },
                                {
                                    "type": "Type",
                                    "value": "float",
                                    "range": [
                                        77,
                                        77
                                    ],
                                    "content": "float"
                                }
                            ],
                            "content": "convert(5,float)"
                        },
                        {
                            "type": "BinaryExpression",
                            "operator": "==",
                            "range": [
                                79,
                                80
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "value": "5.0",
                                    "range": [
                                        81,
                                        83
                                    ],
                                    "content": "5.0"
                                }
                            ],
                            "content": "=="
                        }
                    ],
                    "content": "assert convert(5,float)==5.0\n"
                },
                {
                    "type": "AssertStatement",
                    "range": [
                        86,
                        95
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "convert",
                            "range": [
                                87,
                                92
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "value": "\"True\"",
                                    "range": [
                                        89,
                                        89
                                    ],
                                    "content": "\"True\""
                                },
                                {
                                    "type": "Type",
                                    "value": "bool",
                                    "range": [
                                        91,
                                        91
                                    ],
                                    "content": "bool"
                                }
                            ],
                            "content": "convert(\"True\",bool)"
                        },
                        {
                            "type": "BinaryExpression",
                            "operator": "is",
                            "range": [
                                93,
                                94
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "value": "True",
                                    "range": [
                                        94,
                                        94
                                    ],
                                    "content": "True"
                                }
                            ],
                            "content": "is True"
                        }
                    ],
                    "content": "assert convert(\"True\",bool)is True\n"
                },
                {
                    "type": "AssertStatement",
                    "range": [
                        96,
                        105
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "convert",
                            "range": [
                                97,
                                102
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "value": "\"False\"",
                                    "range": [
                                        99,
                                        99
                                    ],
                                    "content": "\"False\""
                                },
                                {
                                    "type": "Type",
                                    "value": "bool",
                                    "range": [
                                        101,
                                        101
                                    ],
                                    "content": "bool"
                                }
                            ],
                            "content": "convert(\"False\",bool)"
                        },
                        {
                            "type": "BinaryExpression",
                            "operator": "is",
                            "range": [
                                103,
                                104
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "value": "False",
                                    "range": [
                                        104,
                                        104
                                    ],
                                    "content": "False"
                                }
                            ],
                            "content": "is False"
                        }
                    ],
                    "content": "assert convert(\"False\",bool)is False\n"
                },
                {
                    "type": "AssertStatement",
                    "range": [
                        107,
                        117
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "convert",
                            "range": [
                                108,
                                113
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "value": "5",
                                    "range": [
                                        110,
                                        110
                                    ],
                                    "content": "5"
                                },
                                {
                                    "type": "Type",
                                    "value": "str",
                                    "range": [
                                        112,
                                        112
                                    ],
                                    "content": "str"
                                }
                            ],
                            "content": "convert(5,str)"
                        },
                        {
                            "type": "BinaryExpression",
                            "operator": "==",
                            "range": [
                                114,
                                115
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "value": "\"5\"",
                                    "range": [
                                        116,
                                        116
                                    ],
                                    "content": "\"5\""
                                }
                            ],
                            "content": "=="
                        }
                    ],
                    "content": "assert convert(5,str)==\"5\"\n"
                },
                {
                    "type": "AssertStatement",
                    "range": [
                        118,
                        136
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "convert",
                            "range": [
                                119,
                                132
                            ],
                            "children": [
                                {
                                    "type": "ObjectLiteral",
                                    "range": [
                                        121,
                                        129
                                    ],
                                    "children": [
                                        {
                                            "type": "Property",
                                            "key": "\"a\"",
                                            "value": "1",
                                            "range": [
                                                122,
                                                124
                                            ],
                                            "content": "\"a\":1"
                                        },
                                        {
                                            "type": "Property",
                                            "key": "\"b\"",
                                            "value": "2",
                                            "range": [
                                                126,
                                                128
                                            ],
                                            "content": "\"b\":2"
                                        }
                                    ],
                                    "content": "{\"a\":1,\"b\":2}"
                                },
                                {
                                    "type": "Type",
                                    "value": "str",
                                    "range": [
                                        131,
                                        131
                                    ],
                                    "content": "str"
                                }
                            ],
                            "content": "convert({\"a\":1,\"b\":2},str)"
                        },
                        {
                            "type": "BinaryExpression",
                            "operator": "==",
                            "range": [
                                133,
                                134
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "value": "'{\"a\": 1, \"b\": 2}'",
                                    "range": [
                                        135,
                                        135
                                    ],
                                    "content": "'{\"a\": 1, \"b\": 2}'"
                                }
                            ],
                            "content": "=="
                        }
                    ],
                    "content": "assert convert({\"a\":1,\"b\":2},str)=='{\"a\": 1, \"b\": 2}'\n"
                },
                {
                    "type": "AssertStatement",
                    "range": [
                        137,
                        153
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "convert",
                            "range": [
                                138,
                                149
                            ],
                            "children": [
                                {
                                    "type": "ArrayLiteral",
                                    "range": [
                                        140,
                                        146
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "value": "1",
                                            "range": [
                                                141,
                                                141
                                            ],
                                            "content": "1"
                                        },
                                        {
                                            "type": "Literal",
                                            "value": "2",
                                            "range": [
                                                143,
                                                143
                                            ],
                                            "content": "2"
                                        },
                                        {
                                            "type": "Literal",
                                            "value": "3",
                                            "range": [
                                                145,
                                                145
                                            ],
                                            "content": "3"
                                        }
                                    ],
                                    "content": "[1,2,3]"
                                },
                                {
                                    "type": "Type",
                                    "value": "str",
                                    "range": [
                                        148,
                                        148
                                    ],
                                    "content": "str"
                                }
                            ],
                            "content": "convert([1,2,3],str)"
                        },
                        {
                            "type": "BinaryExpression",
                            "operator": "==",
                            "range": [
                                150,
                                151
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "value": "\"[1, 2, 3]\"",
                                    "range": [
                                        152,
                                        152
                                    ],
                                    "content": "\"[1, 2, 3]\""
                                }
                            ],
                            "content": "=="
                        }
                    ],
                    "content": "assert convert([1,2,3],str)==\"[1, 2, 3]\"\n"
                },
                {
                    "type": "AssertStatement",
                    "range": [
                        155,
                        167
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "convert",
                            "range": [
                                156,
                                161
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "value": "\"5\"",
                                    "range": [
                                        158,
                                        158
                                    ],
                                    "content": "\"5\""
                                },
                                {
                                    "type": "Type",
                                    "value": "list",
                                    "range": [
                                        160,
                                        160
                                    ],
                                    "content": "list"
                                }
                            ],
                            "content": "convert(\"5\",list)"
                        },
                        {
                            "type": "BinaryExpression",
                            "operator": "==",
                            "range": [
                                162,
                                163
                            ],
                            "children": [
                                {
                                    "type": "ArrayLiteral",
                                    "range": [
                                        164,
                                        166
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "value": "\"5\"",
                                            "range": [
                                                165,
                                                165
                                            ],
                                            "content": "\"5\""
                                        }
                                    ],
                                    "content": "[\"5\"]"
                                }
                            ],
                            "content": "=="
                        }
                    ],
                    "content": "assert convert(\"5\",list)==[\"5\"]\n"
                },
                {
                    "type": "AssertStatement",
                    "range": [
                        168,
                        190
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "convert",
                            "range": [
                                169,
                                180
                            ],
                            "children": [
                                {
                                    "type": "TupleLiteral",
                                    "range": [
                                        171,
                                        177
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "value": "1",
                                            "range": [
                                                172,
                                                172
                                            ],
                                            "content": "1"
                                        },
                                        {
                                            "type": "Literal",
                                            "value": "2",
                                            "range": [
                                                174,
                                                174
                                            ],
                                            "content": "2"
                                        },
                                        {
                                            "type": "Literal",
                                            "value": "3",
                                            "range": [
                                                176,
                                                176
                                            ],
                                            "content": "3"
                                        }
                                    ],
                                    "content": "(1,2,3)"
                                },
                                {
                                    "type": "Type",
                                    "value": "list",
                                    "range": [
                                        179,
                                        179
                                    ],
                                    "content": "list"
                                }
                            ],
                            "content": "convert((1,2,3),list)"
                        },
                        {
                            "type": "BinaryExpression",
                            "operator": "==",
                            "range": [
                                181,
                                182
                            ],
                            "children": [
                                {
                                    "type": "ArrayLiteral",
                                    "range": [
                                        183,
                                        189
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "value": "1",
                                            "range": [
                                                184,
                                                184
                                            ],
                                            "content": "1"
                                        },
                                        {
                                            "type": "Literal",
                                            "value": "2",
                                            "range": [
                                                186,
                                                186
                                            ],
                                            "content": "2"
                                        },
                                        {
                                            "type": "Literal",
                                            "value": "3",
                                            "range": [
                                                188,
                                                188
                                            ],
                                            "content": "3"
                                        }
                                    ],
                                    "content": "[1,2,3]"
                                }
                            ],
                            "content": "=="
                        }
                    ],
                    "content": "assert convert((1,2,3),list)==[1,2,3]\n"
                },
                {
                    "type": "AssertStatement",
                    "range": [
                        191,
                        213
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "convert",
                            "range": [
                                192,
                                203
                            ],
                            "children": [
                                {
                                    "type": "SetLiteral",
                                    "range": [
                                        194,
                                        200
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "value": "1",
                                            "range": [
                                                195,
                                                195
                                            ],
                                            "content": "1"
                                        },
                                        {
                                            "type": "Literal",
                                            "value": "2",
                                            "range": [
                                                197,
                                                197
                                            ],
                                            "content": "2"
                                        },
                                        {
                                            "type": "Literal",
                                            "value": "3",
                                            "range": [
                                                199,
                                                199
                                            ],
                                            "content": "3"
                                        }
                                    ],
                                    "content": "{1,2,3}"
                                },
                                {
                                    "type": "Type",
                                    "value": "list",
                                    "range": [
                                        202,
                                        202
                                    ],
                                    "content": "list"
                                }
                            ],
                            "content": "convert({1,2,3},list)"
                        },
                        {
                            "type": "BinaryExpression",
                            "operator": "==",
                            "range": [
                                204,
                                205
                            ],
                            "children": [
                                {
                                    "type": "ArrayLiteral",
                                    "range": [
                                        206,
                                        212
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "value": "1",
                                            "range": [
                                                207,
                                                207
                                            ],
                                            "content": "1"
                                        },
                                        {
                                            "type": "Literal",
                                            "value": "2",
                                            "range": [
                                                209,
                                                209
                                            ],
                                            "content": "2"
                                        },
                                        {
                                            "type": "Literal",
                                            "value": "3",
                                            "range": [
                                                211,
                                                211
                                            ],
                                            "content": "3"
                                        }
                                    ],
                                    "content": "[1,2,3]"
                                }
                            ],
                            "content": "=="
                        }
                    ],
                    "content": "assert convert({1,2,3},list)==[1,2,3]\n"
                },
                {
                    "type": "AssertStatement",
                    "range": [
                        215,
                        229
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "convert",
                            "range": [
                                216,
                                221
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "value": "\"5\"",
                                    "range": [
                                        218,
                                        218
                                    ],
                                    "content": "\"5\""
                                },
                                {
                                    "type": "Type",
                                    "value": "dict",
                                    "range": [
                                        220,
                                        220
                                    ],
                                    "content": "dict"
                                }
                            ],
                            "content": "convert(\"5\",dict)"
                        },
                        {
                            "type": "BinaryExpression",
                            "operator": "==",
                            "range": [
                                222,
                                223
                            ],
                            "children": [
                                {
                                    "type": "ObjectLiteral",
                                    "range": [
                                        224,
                                        228
                                    ],
                                    "children": [
                                        {
                                            "type": "Property",
                                            "key": "\"value\"",
                                            "value": "5",
                                            "range": [
                                                225,
                                                227
                                            ],
                                            "content": "\"value\":5"
                                        }
                                    ],
                                    "content": "{\"value\":5}"
                                }
                            ],
                            "content": "=="
                        }
                    ],
                    "content": "assert convert(\"5\",dict)=={\"value\":5}\n"
                },
                {
                    "type": "AssertStatement",
                    "range": [
                        230,
                        248
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "convert",
                            "range": [
                                231,
                                236
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "value": "'{\"a\": 1, \"b\": 2}'",
                                    "range": [
                                        233,
                                        233
                                    ],
                                    "content": "'{\"a\": 1, \"b\": 2}'"
                                },
                                {
                                    "type": "Type",
                                    "value": "dict",
                                    "range": [
                                        235,
                                        235
                                    ],
                                    "content": "dict"
                                }
                            ],
                            "content": "convert('{\"a\": 1, \"b\": 2}',dict)"
                        },
                        {
                            "type": "BinaryExpression",
                            "operator": "==",
                            "range": [
                                237,
                                238
                            ],
                            "children": [
                                {
                                    "type": "ObjectLiteral",
                                    "range": [
                                        239,
                                        247
                                    ],
                                    "children": [
                                        {
                                            "type": "Property",
                                            "key": "\"a\"",
                                            "value": "1",
                                            "range": [
                                                240,
                                                242
                                            ],
                                            "content": "\"a\":1"
                                        },
                                        {
                                            "type": "Property",
                                            "key": "\"b\"",
                                            "value": "2",
                                            "range": [
                                                244,
                                                246
                                            ],
                                            "content": "\"b\":2"
                                        }
                                    ],
                                    "content": "{\"a\":1,\"b\":2}"
                                }
                            ],
                            "content": "=="
                        }
                    ],
                    "content": "assert convert('{\"a\": 1, \"b\": 2}',dict)=={\"a\":1,\"b\":2}\n"
                },
                {
                    "type": "AssertStatement",
                    "range": [
                        249,
                        277
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "convert",
                            "range": [
                                250,
                                261
                            ],
                            "children": [
                                {
                                    "type": "ArrayLiteral",
                                    "range": [
                                        252,
                                        258
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "value": "1",
                                            "range": [
                                                253,
                                                253
                                            ],
                                            "content": "1"
                                        },
                                        {
                                            "type": "Literal",
                                            "value": "2",
                                            "range": [
                                                255,
                                                255
                                            ],
                                            "content": "2"
                                        },
                                        {
                                            "type": "Literal",
                                            "value": "3",
                                            "range": [
                                                257,
                                                257
                                            ],
                                            "content": "3"
                                        }
                                    ],
                                    "content": "[1,2,3]"
                                },
                                {
                                    "type": "Type",
                                    "value": "dict",
                                    "range": [
                                        260,
                                        260
                                    ],
                                    "content": "dict"
                                }
                            ],
                            "content": "convert([1,2,3],dict)"
                        },
                        {
                            "type": "BinaryExpression",
                            "operator": "==",
                            "range": [
                                262,
                                263
                            ],
                            "children": [
                                {
                                    "type": "ObjectLiteral",
                                    "range": [
                                        264,
                                        276
                                    ],
                                    "children": [
                                        {
                                            "type": "Property",
                                            "key": "0",
                                            "value": "1",
                                            "range": [
                                                265,
                                                267
                                            ],
                                            "content": "0:1"
                                        },
                                        {
                                            "type": "Property",
                                            "key": "1",
                                            "value": "2",
                                            "range": [
                                                269,
                                                271
                                            ],
                                            "content": "1:2"
                                        },
                                        {
                                            "type": "Property",
                                            "key": "2",
                                            "value": "3",
                                            "range": [
                                                273,
                                                275
                                            ],
                                            "content": "2:3"
                                        }
                                    ],
                                    "content": "{0:1,1:2,2:3}"
                                }
                            ],
                            "content": "=="
                        }
                    ],
                    "content": "assert convert([1,2,3],dict)=={0:1,1:2,2:3}\n"
                },
                {
                    "type": "AssertStatement",
                    "range": [
                        278,
                        306
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "convert",
                            "range": [
                                279,
                                290
                            ],
                            "children": [
                                {
                                    "type": "TupleLiteral",
                                    "range": [
                                        281,
                                        287
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "value": "1",
                                            "range": [
                                                282,
                                                282
                                            ],
                                            "content": "1"
                                        },
                                        {
                                            "type": "Literal",
                                            "value": "2",
                                            "range": [
                                                284,
                                                284
                                            ],
                                            "content": "2"
                                        },
                                        {
                                            "type": "Literal",
                                            "value": "3",
                                            "range": [
                                                286,
                                                286
                                            ],
                                            "content": "3"
                                        }
                                    ],
                                    "content": "(1,2,3)"
                                },
                                {
                                    "type": "Type",
                                    "value": "dict",
                                    "range": [
                                        289,
                                        289
                                    ],
                                    "content": "dict"
                                }
                            ],
                            "content": "convert((1,2,3),dict)"
                        },
                        {
                            "type": "BinaryExpression",
                            "operator": "==",
                            "range": [
                                291,
                                292
                            ],
                            "children": [
                                {
                                    "type": "ObjectLiteral",
                                    "range": [
                                        293,
                                        305
                                    ],
                                    "children": [
                                        {
                                            "type": "Property",
                                            "key": "0",
                                            "value": "1",
                                            "range": [
                                                294,
                                                296
                                            ],
                                            "content": "0:1"
                                        },
                                        {
                                            "type": "Property",
                                            "key": "1",
                                            "value": "2",
                                            "range": [
                                                298,
                                                300
                                            ],
                                            "content": "1:2"
                                        },
                                        {
                                            "type": "Property",
                                            "key": "2",
                                            "value": "3",
                                            "range": [
                                                302,
                                                304
                                            ],
                                            "content": "2:3"
                                        }
                                    ],
                                    "content": "{0:1,1:2,2:3}"
                                }
                            ],
                            "content": "=="
                        }
                    ],
                    "content": "assert convert((1,2,3),dict)=={0:1,1:2,2:3}\n"
                },
                {
                    "type": "ImportStatement",
                    "range": [
                        308,
                        312
                    ],
                    "children": [
                        {
                            "type": "ImportFrom",
                            "module": "typing",
                            "names": [
                                {
                                    "type": "ImportSpecifier",
                                    "name": "List",
                                    "range": [
                                        311,
                                        311
                                    ],
                                    "content": "List"
                                }
                            ],
                            "range": [
                                308,
                                312
                            ],
                            "content": "from typing import List\n"
                        }
                    ],
                    "content": "from typing import List\n"
                },
                {
                    "type": "AssertStatement",
                    "range": [
                        314,
                        329
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "convert",
                            "range": [
                                315,
                                323
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "value": "\"5\"",
                                    "range": [
                                        317,
                                        317
                                    ],
                                    "content": "\"5\""
                                },
                                {
                                    "type": "Type",
                                    "value": "List[int]",
                                    "range": [
                                        319,
                                        322
                                    ],
                                    "content": "List[int]"
                                }
                            ],
                            "content": "convert(\"5\",List[int])"
                        },
                        {
                            "type": "BinaryExpression",
                            "operator": "==",
                            "range": [
                                324,
                                325
                            ],
                            "children": [
                                {
                                    "type": "ArrayLiteral",
                                    "range": [
                                        326,
                                        328
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "value": "5",
                                            "range": [
                                                327,
                                                327
                                            ],
                                            "content": "5"
                                        }
                                    ],
                                    "content": "[5]"
                                }
                            ],
                            "content": "=="
                        }
                    ],
                    "content": "assert convert(\"5\",List[int])==[5]\n"
                },
                {
                    "type": "AssertStatement",
                    "range": [
                        330,
                        349
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "convert",
                            "range": [
                                331,
                                339
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "value": "\"[5,4,2]\"",
                                    "range": [
                                        333,
                                        333
                                    ],
                                    "content": "\"[5,4,2]\""
                                },
                                {
                                    "type": "Type",
                                    "value": "List[int]",
                                    "range": [
                                        335,
                                        338
                                    ],
                                    "content": "List[int]"
                                }
                            ],
                            "content": "convert(\"[5,4,2]\",List[int])"
                        },
                        {
                            "type": "BinaryExpression",
                            "operator": "==",
                            "range": [
                                340,
                                341
                            ],
                            "children": [
                                {
                                    "type": "ArrayLiteral",
                                    "range": [
                                        342,
                                        348
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "value": "5",
                                            "range": [
                                                343,
                                                343
                                            ],
                                            "content": "5"
                                        },
                                        {
                                            "type": "Literal",
                                            "value": "4",
                                            "range": [
                                                345,
                                                345
                                            ],
                                            "content": "4"
                                        },
                                        {
                                            "type": "Literal",
                                            "value": "2",
                                            "range": [
                                                347,
                                                347
                                            ],
                                            "content": "2"
                                        }
                                    ],
                                    "content": "[5,4,2]"
                                }
                            ],
                            "content": "=="
                        }
                    ],
                    "content": "assert convert(\"[5,4,2]\",List[int])==[5,4,2]\n"
                },
                {
                    "type": "AssertStatement",
                    "range": [
                        350,
                        375
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "convert",
                            "range": [
                                351,
                                365
                            ],
                            "children": [
                                {
                                    "type": "ArrayLiteral",
                                    "range": [
                                        353,
                                        359
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "value": "5",
                                            "range": [
                                                354,
                                                354
                                            ],
                                            "content": "5"
                                        },
                                        {
                                            "type": "Literal",
                                            "value": "4",
                                            "range": [
                                                356,
                                                356
                                            ],
                                            "content": "4"
                                        },
                                        {
                                            "type": "Literal",
                                            "value": "2",
                                            "range": [
                                                358,
                                                358
                                            ],
                                            "content": "2"
                                        }
                                    ],
                                    "content": "[5,4,2]"
                                },
                                {
                                    "type": "Type",
                                    "value": "List[str]",
                                    "range": [
                                        361,
                                        364
                                    ],
                                    "content": "List[str]"
                                }
                            ],
                            "content": "convert([5,4,2],List[str])"
                        },
                        {
                            "type": "BinaryExpression",
                            "operator": "==",
                            "range": [
                                366,
                                367
                            ],
                            "children": [
                                {
                                    "type": "ArrayLiteral",
                                    "range": [
                                        368,
                                        374
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "value": "\"5\"",
                                            "range": [
                                                369,
                                                369
                                            ],
                                            "content": "\"5\""
                                        },
                                        {
                                            "type": "Literal",
                                            "value": "\"4\"",
                                            "range": [
                                                371,
                                                371
                                            ],
                                            "content": "\"4\""
                                        },
                                        {
                                            "type": "Literal",
                                            "value": "\"2\"",
                                            "range": [
                                                373,
                                                373
                                            ],
                                            "content": "\"2\""
                                        }
                                    ],
                                    "content": "[\"5\",\"4\",\"2\"]"
                                }
                            ],
                            "content": "=="
                        }
                    ],
                    "content": "assert convert([5,4,2],List[str])==[\"5\",\"4\",\"2\"]\n"
                }
            ],
            "content": "def test_type_conversion():\nassert convert(5.5,int)==5\nassert convert(\"5.5\",int)==5\nassert convert([1,2,3],int)==3\n\nassert convert(\"5.5\",float)==5.5\nassert convert(5,float)==5.0\n\nassert convert(\"True\",bool)is True\nassert convert(\"False\",bool)is False\n\nassert convert(5,str)==\"5\"\nassert convert({\"a\":1,\"b\":2},str)=='{\"a\": 1, \"b\": 2}'\nassert convert([1,2,3],str)==\"[1, 2, 3]\"\n\nassert convert(\"5\",list)==[\"5\"]\nassert convert((1,2,3),list)==[1,2,3]\nassert convert({1,2,3},list)==[1,2,3]\n\nassert convert(\"5\",dict)=={\"value\":5}\nassert convert('{\"a\": 1, \"b\": 2}',dict)=={\"a\":1,\"b\":2}\nassert convert([1,2,3],dict)=={0:1,1:2,2:3}\nassert convert((1,2,3),dict)=={0:1,1:2,2:3}\n\nfrom typing import List\n\nassert convert(\"5\",List[int])==[5]\nassert convert(\"[5,4,2]\",List[int])==[5,4,2]\nassert convert([5,4,2],List[str])==[\"5\",\"4\",\"2\"]\n"
        }
    ],
    "content": "from backend.util.type import convert\n\n\ndef test_type_conversion():\nassert convert(5.5,int)==5\nassert convert(\"5.5\",int)==5\nassert convert([1,2,3],int)==3\n\nassert convert(\"5.5\",float)==5.5\nassert convert(5,float)==5.0\n\nassert convert(\"True\",bool)is True\nassert convert(\"False\",bool)is False\n\nassert convert(5,str)==\"5\"\nassert convert({\"a\":1,\"b\":2},str)=='{\"a\": 1, \"b\": 2}'\nassert convert([1,2,3],str)==\"[1, 2, 3]\"\n\nassert convert(\"5\",list)==[\"5\"]\nassert convert((1,2,3),list)==[1,2,3]\nassert convert({1,2,3},list)==[1,2,3]\n\nassert convert(\"5\",dict)=={\"value\":5}\nassert convert('{\"a\": 1, \"b\": 2}',dict)=={\"a\":1,\"b\":2}\nassert convert([1,2,3],dict)=={0:1,1:2,2:3}\nassert convert((1,2,3),dict)=={0:1,1:2,2:3}\n\nfrom typing import List\n\nassert convert(\"5\",List[int])==[5]\nassert convert(\"[5,4,2]\",List[int])==[5,4,2]\nassert convert([5,4,2],List[str])==[\"5\",\"4\",\"2\"]\n"
}