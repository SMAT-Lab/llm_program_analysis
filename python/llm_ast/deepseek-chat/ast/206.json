{
    "type": "Program",
    "name": "Global",
    "range": [
        0,
        280
    ],
    "children": [
        {
            "type": "ImportDeclaration",
            "name": "pytest",
            "range": [
                0,
                2
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "pytest",
                    "range": [
                        0,
                        2
                    ],
                    "children": [],
                    "content": "import pytest\n"
                }
            ],
            "content": "import pytest\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "db",
            "range": [
                4,
                10
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "db",
                    "range": [
                        4,
                        10
                    ],
                    "children": [
                        {
                            "type": "FromClause",
                            "name": "backend.data",
                            "range": [
                                4,
                                8
                            ],
                            "children": [],
                            "content": "from backend.data import"
                        }
                    ],
                    "content": "from backend.data import db\n"
                }
            ],
            "content": "from backend.data import db\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "ExecutionScheduler",
            "range": [
                11,
                17
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "ExecutionScheduler",
                    "range": [
                        11,
                        17
                    ],
                    "children": [
                        {
                            "type": "FromClause",
                            "name": "backend.executor",
                            "range": [
                                11,
                                15
                            ],
                            "children": [],
                            "content": "from backend.executor import"
                        }
                    ],
                    "content": "from backend.executor import ExecutionScheduler\n"
                }
            ],
            "content": "from backend.executor import ExecutionScheduler\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "CreateGraph",
            "range": [
                18,
                26
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "CreateGraph",
                    "range": [
                        18,
                        26
                    ],
                    "children": [
                        {
                            "type": "FromClause",
                            "name": "backend.server.model",
                            "range": [
                                18,
                                24
                            ],
                            "children": [],
                            "content": "from backend.server.model import"
                        }
                    ],
                    "content": "from backend.server.model import CreateGraph\n"
                }
            ],
            "content": "from backend.server.model import CreateGraph\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "create_test_graph, create_test_user",
            "range": [
                27,
                37
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "create_test_graph",
                    "range": [
                        27,
                        35
                    ],
                    "children": [],
                    "content": "from backend.usecases.sample import create_test_graph,"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "create_test_user",
                    "range": [
                        36,
                        37
                    ],
                    "children": [],
                    "content": "create_test_user\n"
                },
                {
                    "type": "FromClause",
                    "name": "backend.usecases.sample",
                    "range": [
                        27,
                        33
                    ],
                    "children": [],
                    "content": "from backend.usecases.sample import"
                }
            ],
            "content": "from backend.usecases.sample import create_test_graph,create_test_user\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "get_service_client",
            "range": [
                38,
                46
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "get_service_client",
                    "range": [
                        38,
                        46
                    ],
                    "children": [
                        {
                            "type": "FromClause",
                            "name": "backend.util.service",
                            "range": [
                                38,
                                44
                            ],
                            "children": [],
                            "content": "from backend.util.service import"
                        }
                    ],
                    "content": "from backend.util.service import get_service_client\n"
                }
            ],
            "content": "from backend.util.service import get_service_client\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "SpinTestServer",
            "range": [
                47,
                55
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "SpinTestServer",
                    "range": [
                        47,
                        55
                    ],
                    "children": [
                        {
                            "type": "FromClause",
                            "name": "backend.util.test",
                            "range": [
                                47,
                                53
                            ],
                            "children": [],
                            "content": "from backend.util.test import"
                        }
                    ],
                    "content": "from backend.util.test import SpinTestServer\n"
                }
            ],
            "content": "from backend.util.test import SpinTestServer\n"
        },
        {
            "type": "FunctionDecl",
            "name": "test_agent_schedule",
            "range": [
                70,
                280
            ],
            "children": [
                {
                    "type": "FunctionParameter",
                    "name": "server",
                    "range": [
                        74,
                        77
                    ],
                    "children": [],
                    "content": "server:SpinTestServer)"
                },
                {
                    "type": "BlockStatement",
                    "name": "",
                    "range": [
                        78,
                        280
                    ],
                    "children": [
                        {
                            "type": "ExpressionStatement",
                            "name": "",
                            "range": [
                                80,
                                86
                            ],
                            "children": [
                                {
                                    "type": "AwaitExpression",
                                    "name": "",
                                    "range": [
                                        80,
                                        85
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "connect",
                                            "range": [
                                                81,
                                                85
                                            ],
                                            "children": [
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "db",
                                                    "range": [
                                                        81,
                                                        83
                                                    ],
                                                    "children": [],
                                                    "content": "db.connect"
                                                }
                                            ],
                                            "content": "db.connect()"
                                        }
                                    ],
                                    "content": "await db.connect()"
                                }
                            ],
                            "content": "await db.connect()\n"
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "",
                            "range": [
                                87,
                                93
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "=",
                                    "range": [
                                        87,
                                        92
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "test_user",
                                            "range": [
                                                87,
                                                88
                                            ],
                                            "children": [],
                                            "content": "test_user="
                                        },
                                        {
                                            "type": "AwaitExpression",
                                            "name": "",
                                            "range": [
                                                89,
                                                92
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "create_test_user",
                                                    "range": [
                                                        90,
                                                        92
                                                    ],
                                                    "children": [],
                                                    "content": "create_test_user()"
                                                }
                                            ],
                                            "content": "await create_test_user()"
                                        }
                                    ],
                                    "content": "test_user=await create_test_user()"
                                }
                            ],
                            "content": "test_user=await create_test_user()\n"
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "",
                            "range": [
                                94,
                                124
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "=",
                                    "range": [
                                        94,
                                        123
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "test_graph",
                                            "range": [
                                                94,
                                                95
                                            ],
                                            "children": [],
                                            "content": "test_graph="
                                        },
                                        {
                                            "type": "AwaitExpression",
                                            "name": "",
                                            "range": [
                                                96,
                                                123
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "test_create_graph",
                                                    "range": [
                                                        97,
                                                        123
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "name": "agent_server",
                                                            "range": [
                                                                98,
                                                                100
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "name": "server",
                                                                    "range": [
                                                                        97,
                                                                        98
                                                                    ],
                                                                    "children": [],
                                                                    "content": "server."
                                                                }
                                                            ],
                                                            "content": ".agent_server."
                                                        },
                                                        {
                                                            "type": "ObjectExpression",
                                                            "name": "",
                                                            "range": [
                                                                104,
                                                                122
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Property",
                                                                    "name": "create_graph",
                                                                    "range": [
                                                                        104,
                                                                        113
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "CallExpression",
                                                                            "name": "CreateGraph",
                                                                            "range": [
                                                                                106,
                                                                                113
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "ObjectExpression",
                                                                                    "name": "",
                                                                                    "range": [
                                                                                        108,
                                                                                        112
                                                                                    ],
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "Property",
                                                                                            "name": "graph",
                                                                                            "range": [
                                                                                                108,
                                                                                                112
                                                                                            ],
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "CallExpression",
                                                                                                    "name": "create_test_graph",
                                                                                                    "range": [
                                                                                                        110,
                                                                                                        112
                                                                                                    ],
                                                                                                    "children": [],
                                                                                                    "content": "create_test_graph()"
                                                                                                }
                                                                                            ],
                                                                                            "content": "graph=create_test_graph()"
                                                                                        }
                                                                                    ],
                                                                                    "content": "graph=create_test_graph()"
                                                                                }
                                                                            ],
                                                                            "content": "CreateGraph(graph=create_test_graph())"
                                                                        }
                                                                    ],
                                                                    "content": "create_graph=CreateGraph(graph=create_test_graph())"
                                                                },
                                                                {
                                                                    "type": "Property",
                                                                    "name": "user_id",
                                                                    "range": [
                                                                        116,
                                                                        121
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "MemberExpression",
                                                                            "name": "id",
                                                                            "range": [
                                                                                119,
                                                                                121
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "test_user",
                                                                                    "range": [
                                                                                        116,
                                                                                        118
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "user_id=test_user"
                                                                                }
                                                                            ],
                                                                            "content": ".id,"
                                                                        }
                                                                    ],
                                                                    "content": "user_id=test_user.id,"
                                                                }
                                                            ],
                                                            "content": "create_graph=CreateGraph(graph=create_test_graph()),\nuser_id=test_user.id,\n"
                                                        }
                                                    ],
                                                    "content": "server.agent_server.test_create_graph(\ncreate_graph=CreateGraph(graph=create_test_graph()),\nuser_id=test_user.id,\n)"
                                                }
                                            ],
                                            "content": "await server.agent_server.test_create_graph(\ncreate_graph=CreateGraph(graph=create_test_graph()),\nuser_id=test_user.id,\n)"
                                        }
                                    ],
                                    "content": "test_graph=await server.agent_server.test_create_graph(\ncreate_graph=CreateGraph(graph=create_test_graph()),\nuser_id=test_user.id,\n)"
                                }
                            ],
                            "content": "test_graph=await server.agent_server.test_create_graph(\ncreate_graph=CreateGraph(graph=create_test_graph()),\nuser_id=test_user.id,\n)\n"
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "",
                            "range": [
                                126,
                                132
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "=",
                                    "range": [
                                        126,
                                        131
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "scheduler",
                                            "range": [
                                                126,
                                                127
                                            ],
                                            "children": [],
                                            "content": "scheduler="
                                        },
                                        {
                                            "type": "CallExpression",
                                            "name": "get_service_client",
                                            "range": [
                                                128,
                                                131
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "ExecutionScheduler",
                                                    "range": [
                                                        130,
                                                        131
                                                    ],
                                                    "children": [],
                                                    "content": "ExecutionScheduler)"
                                                }
                                            ],
                                            "content": "get_service_client(ExecutionScheduler)"
                                        }
                                    ],
                                    "content": "scheduler=get_service_client(ExecutionScheduler)"
                                }
                            ],
                            "content": "scheduler=get_service_client(ExecutionScheduler)\n"
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "",
                            "range": [
                                133,
                                147
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "=",
                                    "range": [
                                        133,
                                        146
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "schedules",
                                            "range": [
                                                133,
                                                134
                                            ],
                                            "children": [],
                                            "content": "schedules="
                                        },
                                        {
                                            "type": "CallExpression",
                                            "name": "get_execution_schedules",
                                            "range": [
                                                135,
                                                146
                                            ],
                                            "children": [
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "scheduler",
                                                    "range": [
                                                        135,
                                                        136
                                                    ],
                                                    "children": [],
                                                    "content": "scheduler."
                                                },
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "id",
                                                    "range": [
                                                        140,
                                                        142
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "test_graph",
                                                            "range": [
                                                                139,
                                                                140
                                                            ],
                                                            "children": [],
                                                            "content": "test_graph."
                                                        }
                                                    ],
                                                    "content": ".id,"
                                                },
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "id",
                                                    "range": [
                                                        144,
                                                        146
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "test_user",
                                                            "range": [
                                                                143,
                                                                144
                                                            ],
                                                            "children": [],
                                                            "content": "test_user."
                                                        }
                                                    ],
                                                    "content": ".id)"
                                                }
                                            ],
                                            "content": "scheduler.get_execution_schedules(test_graph.id,test_user.id)"
                                        }
                                    ],
                                    "content": "schedules=scheduler.get_execution_schedules(test_graph.id,test_user.id)"
                                }
                            ],
                            "content": "schedules=scheduler.get_execution_schedules(test_graph.id,test_user.id)\n"
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "",
                            "range": [
                                148,
                                156
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "assert",
                                    "range": [
                                        148,
                                        156
                                    ],
                                    "children": [
                                        {
                                            "type": "BinaryExpression",
                                            "name": "==",
                                            "range": [
                                                149,
                                                155
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "len",
                                                    "range": [
                                                        149,
                                                        152
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "schedules",
                                                            "range": [
                                                                151,
                                                                152
                                                            ],
                                                            "children": [],
                                                            "content": "schedules)"
                                                        }
                                                    ],
                                                    "content": "len(schedules)"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "name": "0",
                                                    "range": [
                                                        155,
                                                        155
                                                    ],
                                                    "children": [],
                                                    "content": "0"
                                                }
                                            ],
                                            "content": "len(schedules)==0"
                                        }
                                    ],
                                    "content": "assert len(schedules)==0\n"
                                }
                            ],
                            "content": "assert len(schedules)==0\n"
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "",
                            "range": [
                                158,
                                199
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "=",
                                    "range": [
                                        158,
                                        198
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "schedule",
                                            "range": [
                                                158,
                                                159
                                            ],
                                            "children": [],
                                            "content": "schedule="
                                        },
                                        {
                                            "type": "CallExpression",
                                            "name": "add_execution_schedule",
                                            "range": [
                                                160,
                                                198
                                            ],
                                            "children": [
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "scheduler",
                                                    "range": [
                                                        160,
                                                        161
                                                    ],
                                                    "children": [],
                                                    "content": "scheduler."
                                                },
                                                {
                                                    "type": "ObjectExpression",
                                                    "name": "",
                                                    "range": [
                                                        165,
                                                        197
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Property",
                                                            "name": "graph_id",
                                                            "range": [
                                                                165,
                                                                170
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "name": "id",
                                                                    "range": [
                                                                        168,
                                                                        170
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "test_graph",
                                                                            "range": [
                                                                                167,
                                                                                168
                                                                            ],
                                                                            "children": [],
                                                                            "content": "test_graph."
                                                                        }
                                                                    ],
                                                                    "content": ".id,"
                                                                }
                                                            ],
                                                            "content": "graph_id=test_graph.id,"
                                                        },
                                                        {
                                                            "type": "Property",
                                                            "name": "user_id",
                                                            "range": [
                                                                172,
                                                                177
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "name": "id",
                                                                    "range": [
                                                                        175,
                                                                        177
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "test_user",
                                                                            "range": [
                                                                                174,
                                                                                175
                                                                            ],
                                                                            "children": [],
                                                                            "content": "test_user."
                                                                        }
                                                                    ],
                                                                    "content": ".id,"
                                                                }
                                                            ],
                                                            "content": "user_id=test_user.id,"
                                                        },
                                                        {
                                                            "type": "Property",
                                                            "name": "graph_version",
                                                            "range": [
                                                                179,
                                                                182
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Literal",
                                                                    "name": "1",
                                                                    "range": [
                                                                        181,
                                                                        182
                                                                    ],
                                                                    "children": [],
                                                                    "content": "1,"
                                                                }
                                                            ],
                                                            "content": "graph_version=1,"
                                                        },
                                                        {
                                                            "type": "Property",
                                                            "name": "cron",
                                                            "range": [
                                                                184,
                                                                187
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Literal",
                                                                    "name": "\"0 0 * * *\"",
                                                                    "range": [
                                                                        186,
                                                                        187
                                                                    ],
                                                                    "children": [],
                                                                    "content": "\"0 0 * * *\","
                                                                }
                                                            ],
                                                            "content": "cron=\"0 0 * * *\","
                                                        },
                                                        {
                                                            "type": "Property",
                                                            "name": "input_data",
                                                            "range": [
                                                                189,
                                                                196
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "ObjectExpression",
                                                                    "name": "",
                                                                    "range": [
                                                                        191,
                                                                        195
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Property",
                                                                            "name": "input",
                                                                            "range": [
                                                                                192,
                                                                                194
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "name": "\"data\"",
                                                                                    "range": [
                                                                                        194,
                                                                                        194
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "\"data\""
                                                                                }
                                                                            ],
                                                                            "content": "\"input\":\"data\""
                                                                        }
                                                                    ],
                                                                    "content": "{\"input\":\"data\"}"
                                                                }
                                                            ],
                                                            "content": "input_data={\"input\":\"data\"},"
                                                        }
                                                    ],
                                                    "content": "graph_id=test_graph.id,\nuser_id=test_user.id,\ngraph_version=1,\ncron=\"0 0 * * *\",\ninput_data={\"input\":\"data\"},\n"
                                                }
                                            ],
                                            "content": "scheduler.add_execution_schedule(\ngraph_id=test_graph.id,\nuser_id=test_user.id,\ngraph_version=1,\ncron=\"0 0 * * *\",\ninput_data={\"input\":\"data\"},\n)"
                                        }
                                    ],
                                    "content": "schedule=scheduler.add_execution_schedule(\ngraph_id=test_graph.id,\nuser_id=test_user.id,\ngraph_version=1,\ncron=\"0 0 * * *\",\ninput_data={\"input\":\"data\"},\n)"
                                }
                            ],
                            "content": "schedule=scheduler.add_execution_schedule(\ngraph_id=test_graph.id,\nuser_id=test_user.id,\ngraph_version=1,\ncron=\"0 0 * * *\",\ninput_data={\"input\":\"data\"},\n)\n"
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "",
                            "range": [
                                200,
                                202
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "assert",
                                    "range": [
                                        200,
                                        202
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "schedule",
                                            "range": [
                                                201,
                                                202
                                            ],
                                            "children": [],
                                            "content": "schedule\n"
                                        }
                                    ],
                                    "content": "assert schedule\n"
                                }
                            ],
                            "content": "assert schedule\n"
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "",
                            "range": [
                                204,
                                218
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "=",
                                    "range": [
                                        204,
                                        217
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "schedules",
                                            "range": [
                                                204,
                                                205
                                            ],
                                            "children": [],
                                            "content": "schedules="
                                        },
                                        {
                                            "type": "CallExpression",
                                            "name": "get_execution_schedules",
                                            "range": [
                                                206,
                                                217
                                            ],
                                            "children": [
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "scheduler",
                                                    "range": [
                                                        206,
                                                        207
                                                    ],
                                                    "children": [],
                                                    "content": "scheduler."
                                                },
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "id",
                                                    "range": [
                                                        211,
                                                        213
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "test_graph",
                                                            "range": [
                                                                210,
                                                                211
                                                            ],
                                                            "children": [],
                                                            "content": "test_graph."
                                                        }
                                                    ],
                                                    "content": ".id,"
                                                },
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "id",
                                                    "range": [
                                                        215,
                                                        217
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "test_user",
                                                            "range": [
                                                                214,
                                                                215
                                                            ],
                                                            "children": [],
                                                            "content": "test_user."
                                                        }
                                                    ],
                                                    "content": ".id)"
                                                }
                                            ],
                                            "content": "scheduler.get_execution_schedules(test_graph.id,test_user.id)"
                                        }
                                    ],
                                    "content": "schedules=scheduler.get_execution_schedules(test_graph.id,test_user.id)"
                                }
                            ],
                            "content": "schedules=scheduler.get_execution_schedules(test_graph.id,test_user.id)\n"
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "",
                            "range": [
                                219,
                                227
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "assert",
                                    "range": [
                                        219,
                                        227
                                    ],
                                    "children": [
                                        {
                                            "type": "BinaryExpression",
                                            "name": "==",
                                            "range": [
                                                220,
                                                226
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "len",
                                                    "range": [
                                                        220,
                                                        223
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "schedules",
                                                            "range": [
                                                                222,
                                                                223
                                                            ],
                                                            "children": [],
                                                            "content": "schedules)"
                                                        }
                                                    ],
                                                    "content": "len(schedules)"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "name": "1",
                                                    "range": [
                                                        226,
                                                        226
                                                    ],
                                                    "children": [],
                                                    "content": "1"
                                                }
                                            ],
                                            "content": "len(schedules)==1"
                                        }
                                    ],
                                    "content": "assert len(schedules)==1\n"
                                }
                            ],
                            "content": "assert len(schedules)==1\n"
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "",
                            "range": [
                                228,
                                238
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "assert",
                                    "range": [
                                        228,
                                        238
                                    ],
                                    "children": [
                                        {
                                            "type": "BinaryExpression",
                                            "name": "==",
                                            "range": [
                                                229,
                                                237
                                            ],
                                            "children": [
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "cron",
                                                    "range": [
                                                        233,
                                                        235
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "name": "0",
                                                            "range": [
                                                                230,
                                                                232
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "schedules",
                                                                    "range": [
                                                                        229,
                                                                        230
                                                                    ],
                                                                    "children": [],
                                                                    "content": "schedules["
                                                                }
                                                            ],
                                                            "content": "[0]"
                                                        }
                                                    ],
                                                    "content": ".cron="
                                                },
                                                {
                                                    "type": "Literal",
                                                    "name": "\"0 0 * * *\"",
                                                    "range": [
                                                        237,
                                                        237
                                                    ],
                                                    "children": [],
                                                    "content": "\"0 0 * * *\""
                                                }
                                            ],
                                            "content": "schedules[0].cron==\"0 0 * * *\""
                                        }
                                    ],
                                    "content": "assert schedules[0].cron==\"0 0 * * *\"\n"
                                }
                            ],
                            "content": "assert schedules[0].cron==\"0 0 * * *\"\n"
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "",
                            "range": [
                                240,
                                254
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "delete_schedule",
                                    "range": [
                                        241,
                                        254
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "scheduler",
                                            "range": [
                                                240,
                                                241
                                            ],
                                            "children": [],
                                            "content": "scheduler."
                                        },
                                        {
                                            "type": "MemberExpression",
                                            "name": "id",
                                            "range": [
                                                245,
                                                247
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "schedule",
                                                    "range": [
                                                        244,
                                                        245
                                                    ],
                                                    "children": [],
                                                    "content": "schedule."
                                                }
                                            ],
                                            "content": ".id,"
                                        },
                                        {
                                            "type": "ObjectExpression",
                                            "name": "",
                                            "range": [
                                                248,
                                                253
                                            ],
                                            "children": [
                                                {
                                                    "type": "Property",
                                                    "name": "user_id",
                                                    "range": [
                                                        248,
                                                        253
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "name": "id",
                                                            "range": [
                                                                251,
                                                                253
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "test_user",
                                                                    "range": [
                                                                        250,
                                                                        251
                                                                    ],
                                                                    "children": [],
                                                                    "content": "test_user."
                                                                }
                                                            ],
                                                            "content": ".id)"
                                                        }
                                                    ],
                                                    "content": "user_id=test_user.id)"
                                                }
                                            ],
                                            "content": "user_id=test_user.id)"
                                        }
                                    ],
                                    "content": ".delete_schedule(schedule.id,user_id=test_user.id)\n"
                                }
                            ],
                            "content": "scheduler.delete_schedule(schedule.id,user_id=test_user.id)\n"
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "",
                            "range": [
                                255,
                                271
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "=",
                                    "range": [
                                        255,
                                        270
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "schedules",
                                            "range": [
                                                255,
                                                256
                                            ],
                                            "children": [],
                                            "content": "schedules="
                                        },
                                        {
                                            "type": "CallExpression",
                                            "name": "get_execution_schedules",
                                            "range": [
                                                257,
                                                270
                                            ],
                                            "children": [
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "scheduler",
                                                    "range": [
                                                        257,
                                                        258
                                                    ],
                                                    "children": [],
                                                    "content": "scheduler."
                                                },
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "id",
                                                    "range": [
                                                        262,
                                                        264
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "test_graph",
                                                            "range": [
                                                                261,
                                                                262
                                                            ],
                                                            "children": [],
                                                            "content": "test_graph."
                                                        }
                                                    ],
                                                    "content": ".id,"
                                                },
                                                {
                                                    "type": "ObjectExpression",
                                                    "name": "",
                                                    "range": [
                                                        265,
                                                        270
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Property",
                                                            "name": "user_id",
                                                            "range": [
                                                                265,
                                                                270
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "name": "id",
                                                                    "range": [
                                                                        268,
                                                                        270
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "test_user",
                                                                            "range": [
                                                                                267,
                                                                                268
                                                                            ],
                                                                            "children": [],
                                                                            "content": "test_user."
                                                                        }
                                                                    ],
                                                                    "content": ".id)"
                                                                }
                                                            ],
                                                            "content": "user_id=test_user.id)"
                                                        }
                                                    ],
                                                    "content": "user_id=test_user.id)"
                                                }
                                            ],
                                            "content": "scheduler.get_execution_schedules(test_graph.id,user_id=test_user.id)"
                                        }
                                    ],
                                    "content": "schedules=scheduler.get_execution_schedules(test_graph.id,user_id=test_user.id)"
                                }
                            ],
                            "content": "schedules=scheduler.get_execution_schedules(test_graph.id,user_id=test_user.id)\n"
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "",
                            "range": [
                                272,
                                280
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "assert",
                                    "range": [
                                        272,
                                        280
                                    ],
                                    "children": [
                                        {
                                            "type": "BinaryExpression",
                                            "name": "==",
                                            "range": [
                                                273,
                                                279
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "len",
                                                    "range": [
                                                        273,
                                                        276
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "schedules",
                                                            "range": [
                                                                275,
                                                                276
                                                            ],
                                                            "children": [],
                                                            "content": "schedules)"
                                                        }
                                                    ],
                                                    "content": "len(schedules)"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "name": "0",
                                                    "range": [
                                                        279,
                                                        279
                                                    ],
                                                    "children": [],
                                                    "content": "0"
                                                }
                                            ],
                                            "content": "len(schedules)==0"
                                        }
                                    ],
                                    "content": "assert len(schedules)==0\n"
                                }
                            ],
                            "content": "assert len(schedules)==0\n"
                        }
                    ],
                    "content": ":\nawait db.connect()\ntest_user=await create_test_user()\ntest_graph=await server.agent_server.test_create_graph(\ncreate_graph=CreateGraph(graph=create_test_graph()),\nuser_id=test_user.id,\n)\n\nscheduler=get_service_client(ExecutionScheduler)\nschedules=scheduler.get_execution_schedules(test_graph.id,test_user.id)\nassert len(schedules)==0\n\nschedule=scheduler.add_execution_schedule(\ngraph_id=test_graph.id,\nuser_id=test_user.id,\ngraph_version=1,\ncron=\"0 0 * * *\",\ninput_data={\"input\":\"data\"},\n)\nassert schedule\n\nschedules=scheduler.get_execution_schedules(test_graph.id,test_user.id)\nassert len(schedules)==1\nassert schedules[0].cron==\"0 0 * * *\"\n\nscheduler.delete_schedule(schedule.id,user_id=test_user.id)\nschedules=scheduler.get_execution_schedules(test_graph.id,user_id=test_user.id)\nassert len(schedules)==0\n"
                }
            ],
            "content": "async def test_agent_schedule(server:SpinTestServer):\nawait db.connect()\ntest_user=await create_test_user()\ntest_graph=await server.agent_server.test_create_graph(\ncreate_graph=CreateGraph(graph=create_test_graph()),\nuser_id=test_user.id,\n)\n\nscheduler=get_service_client(ExecutionScheduler)\nschedules=scheduler.get_execution_schedules(test_graph.id,test_user.id)\nassert len(schedules)==0\n\nschedule=scheduler.add_execution_schedule(\ngraph_id=test_graph.id,\nuser_id=test_user.id,\ngraph_version=1,\ncron=\"0 0 * * *\",\ninput_data={\"input\":\"data\"},\n)\nassert schedule\n\nschedules=scheduler.get_execution_schedules(test_graph.id,test_user.id)\nassert len(schedules)==1\nassert schedules[0].cron==\"0 0 * * *\"\n\nscheduler.delete_schedule(schedule.id,user_id=test_user.id)\nschedules=scheduler.get_execution_schedules(test_graph.id,user_id=test_user.id)\nassert len(schedules)==0\n"
        }
    ],
    "content": "import pytest\n\nfrom backend.data import db\nfrom backend.executor import ExecutionScheduler\nfrom backend.server.model import CreateGraph\nfrom backend.usecases.sample import create_test_graph,create_test_user\nfrom backend.util.service import get_service_client\nfrom backend.util.test import SpinTestServer\n\n\n@pytest.mark.asyncio(scope=\"session\")\nasync def test_agent_schedule(server:SpinTestServer):\nawait db.connect()\ntest_user=await create_test_user()\ntest_graph=await server.agent_server.test_create_graph(\ncreate_graph=CreateGraph(graph=create_test_graph()),\nuser_id=test_user.id,\n)\n\nscheduler=get_service_client(ExecutionScheduler)\nschedules=scheduler.get_execution_schedules(test_graph.id,test_user.id)\nassert len(schedules)==0\n\nschedule=scheduler.add_execution_schedule(\ngraph_id=test_graph.id,\nuser_id=test_user.id,\ngraph_version=1,\ncron=\"0 0 * * *\",\ninput_data={\"input\":\"data\"},\n)\nassert schedule\n\nschedules=scheduler.get_execution_schedules(test_graph.id,test_user.id)\nassert len(schedules)==1\nassert schedules[0].cron==\"0 0 * * *\"\n\nscheduler.delete_schedule(schedule.id,user_id=test_user.id)\nschedules=scheduler.get_execution_schedules(test_graph.id,user_id=test_user.id)\nassert len(schedules)==0\n"
}