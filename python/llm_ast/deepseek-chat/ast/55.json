{
    "type": "Program",
    "name": "Global",
    "range": [
        50,
        673
    ],
    "children": [
        {
            "type": "ClassDecl",
            "name": "RSSEntry",
            "range": [
                50,
                86
            ],
            "children": [
                {
                    "type": "Property",
                    "name": "title",
                    "range": [
                        59,
                        61
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                61,
                                61
                            ],
                            "content": ":"
                        }
                    ],
                    "content": "\ntitle:"
                },
                {
                    "type": "Property",
                    "name": "link",
                    "range": [
                        63,
                        65
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                65,
                                65
                            ],
                            "content": ":"
                        }
                    ],
                    "content": "\nlink:"
                },
                {
                    "type": "Property",
                    "name": "description",
                    "range": [
                        67,
                        69
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                69,
                                69
                            ],
                            "content": ":"
                        }
                    ],
                    "content": "\ndescription:"
                },
                {
                    "type": "Property",
                    "name": "pub_date",
                    "range": [
                        71,
                        73
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "datetime",
                            "range": [
                                73,
                                73
                            ],
                            "content": ":"
                        }
                    ],
                    "content": "\npub_date:"
                },
                {
                    "type": "Property",
                    "name": "author",
                    "range": [
                        75,
                        77
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                77,
                                77
                            ],
                            "content": ":"
                        }
                    ],
                    "content": "\nauthor:"
                },
                {
                    "type": "Property",
                    "name": "categories",
                    "range": [
                        79,
                        84
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "list",
                            "range": [
                                81,
                                81
                            ],
                            "children": [
                                {
                                    "type": "TypeArgument",
                                    "name": "str",
                                    "range": [
                                        83,
                                        83
                                    ],
                                    "content": "["
                                }
                            ],
                            "content": ":"
                        }
                    ],
                    "content": "\ncategories:list[str"
                }
            ],
            "content": "\nclass RSSEntry(pydantic.BaseModel):\ntitle:str\nlink:str\ndescription:str\npub_date:datetime\nauthor:str\ncategories:list[str]\n"
        },
        {
            "type": "ClassDecl",
            "name": "ReadRSSFeedBlock",
            "range": [
                87,
                93
            ],
            "children": [
                {
                    "type": "ClassInheritance",
                    "name": "Block",
                    "range": [
                        89,
                        91
                    ],
                    "children": [],
                    "content": "class ReadRSSFeedBlock("
                }
            ],
            "content": "\n\nclass ReadRSSFeedBlock(Block)"
        },
        {
            "type": "ClassDecl",
            "name": "Input",
            "range": [
                94,
                100
            ],
            "children": [
                {
                    "type": "ClassInheritance",
                    "name": "BlockSchema",
                    "range": [
                        96,
                        98
                    ],
                    "children": [],
                    "content": "class Input("
                }
            ],
            "content": ":\nclass Input(BlockSchema)"
        },
        {
            "type": "VariableDecl",
            "name": "rss_url",
            "range": [
                101,
                119
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "str",
                    "range": [
                        102,
                        103
                    ],
                    "children": [],
                    "content": "\nrss_url"
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        104,
                        105
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                105,
                                118
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        108,
                                        110
                                    ],
                                    "children": [],
                                    "content": "(\ndescription"
                                },
                                {
                                    "type": "Argument",
                                    "name": "placeholder",
                                    "range": [
                                        113,
                                        115
                                    ],
                                    "children": [],
                                    "content": ",\nplaceholder"
                                }
                            ],
                            "content": "str=SchemaField(\ndescription=\"The URL of the RSS feed to read\",\nplaceholder=\"https://example.com/rss\","
                        }
                    ],
                    "content": ":str"
                }
            ],
            "content": ":\nrss_url:str=SchemaField(\ndescription=\"The URL of the RSS feed to read\",\nplaceholder=\"https://example.com/rss\",\n"
        },
        {
            "type": "VariableDecl",
            "name": "time_period",
            "range": [
                120,
                143
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "int",
                    "range": [
                        121,
                        122
                    ],
                    "children": [],
                    "content": "\ntime_period"
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        123,
                        124
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                124,
                                142
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        127,
                                        129
                                    ],
                                    "children": [],
                                    "content": "(\ndescription"
                                },
                                {
                                    "type": "Argument",
                                    "name": "placeholder",
                                    "range": [
                                        132,
                                        134
                                    ],
                                    "children": [],
                                    "content": ",\nplaceholder"
                                },
                                {
                                    "type": "Argument",
                                    "name": "default",
                                    "range": [
                                        137,
                                        139
                                    ],
                                    "children": [],
                                    "content": ",\ndefault"
                                }
                            ],
                            "content": "int=SchemaField(\ndescription=\"The time period to check in minutes relative to the run block runtime, e.g. 60 would check for new entries in the last hour.\",\nplaceholder=\"1440\",\ndefault=1440,"
                        }
                    ],
                    "content": ":int"
                }
            ],
            "content": ")\ntime_period:int=SchemaField(\ndescription=\"The time period to check in minutes relative to the run block runtime, e.g. 60 would check for new entries in the last hour.\",\nplaceholder=\"1440\",\ndefault=1440,\n"
        },
        {
            "type": "VariableDecl",
            "name": "polling_rate",
            "range": [
                144,
                162
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "int",
                    "range": [
                        145,
                        146
                    ],
                    "children": [],
                    "content": "\npolling_rate"
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        147,
                        148
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                148,
                                161
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        151,
                                        153
                                    ],
                                    "children": [],
                                    "content": "(\ndescription"
                                },
                                {
                                    "type": "Argument",
                                    "name": "placeholder",
                                    "range": [
                                        156,
                                        158
                                    ],
                                    "children": [],
                                    "content": ",\nplaceholder"
                                }
                            ],
                            "content": "int=SchemaField(\ndescription=\"The number of seconds to wait between polling attempts.\",\nplaceholder=\"300\","
                        }
                    ],
                    "content": ":int"
                }
            ],
            "content": ")\npolling_rate:int=SchemaField(\ndescription=\"The number of seconds to wait between polling attempts.\",\nplaceholder=\"300\",\n"
        },
        {
            "type": "VariableDecl",
            "name": "run_continuously",
            "range": [
                163,
                181
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "bool",
                    "range": [
                        164,
                        165
                    ],
                    "children": [],
                    "content": "\nrun_continuously"
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        166,
                        167
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                167,
                                180
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        170,
                                        172
                                    ],
                                    "children": [],
                                    "content": "(\ndescription"
                                },
                                {
                                    "type": "Argument",
                                    "name": "default",
                                    "range": [
                                        175,
                                        177
                                    ],
                                    "children": [],
                                    "content": ",\ndefault"
                                }
                            ],
                            "content": "bool=SchemaField(\ndescription=\"Whether to run the block continuously or just once.\",\ndefault=True,"
                        }
                    ],
                    "content": ":bool"
                }
            ],
            "content": ")\nrun_continuously:bool=SchemaField(\ndescription=\"Whether to run the block continuously or just once.\",\ndefault=True,\n"
        },
        {
            "type": "ClassDecl",
            "name": "Output",
            "range": [
                183,
                189
            ],
            "children": [
                {
                    "type": "ClassInheritance",
                    "name": "BlockSchema",
                    "range": [
                        185,
                        187
                    ],
                    "children": [],
                    "content": "class Output("
                }
            ],
            "content": "\n\nclass Output(BlockSchema)"
        },
        {
            "type": "VariableDecl",
            "name": "entry",
            "range": [
                190,
                200
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "RSSEntry",
                    "range": [
                        191,
                        192
                    ],
                    "children": [],
                    "content": "\nentry"
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        193,
                        194
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                194,
                                199
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        196,
                                        198
                                    ],
                                    "children": [],
                                    "content": "SchemaField(description"
                                }
                            ],
                            "content": "RSSEntry=SchemaField(description="
                        }
                    ],
                    "content": ":RSSEntry"
                }
            ],
            "content": ":\nentry:RSSEntry=SchemaField(description=\"The RSS item\""
        },
        {
            "type": "FunctionDecl",
            "name": "__init__",
            "range": [
                202,
                443
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "self",
                    "range": [
                        205,
                        206
                    ],
                    "children": [],
                    "content": "__init__("
                },
                {
                    "type": "CallExpression",
                    "name": "super",
                    "range": [
                        209,
                        215
                    ],
                    "children": [],
                    "content": ":\nsuper().__init__"
                },
                {
                    "type": "Assignment",
                    "name": "id",
                    "range": [
                        216,
                        218
                    ],
                    "children": [],
                    "content": "(\nid"
                },
                {
                    "type": "Assignment",
                    "name": "input_schema",
                    "range": [
                        221,
                        226
                    ],
                    "children": [],
                    "content": ",\ninput_schema=ReadRSSFeedBlock."
                },
                {
                    "type": "Assignment",
                    "name": "output_schema",
                    "range": [
                        228,
                        233
                    ],
                    "children": [],
                    "content": ",\noutput_schema=ReadRSSFeedBlock."
                },
                {
                    "type": "Assignment",
                    "name": "description",
                    "range": [
                        235,
                        237
                    ],
                    "children": [],
                    "content": ",\ndescription"
                },
                {
                    "type": "Assignment",
                    "name": "categories",
                    "range": [
                        240,
                        246
                    ],
                    "children": [],
                    "content": ",\ncategories={BlockCategory."
                },
                {
                    "type": "Assignment",
                    "name": "test_input",
                    "range": [
                        249,
                        274
                    ],
                    "children": [],
                    "content": ",\ntest_input={\n\"rss_url\":\"https://example.com/rss\",\n\"time_period\":10_000_000,\n\"polling_rate\":1,\n\"run_continuously\":False,"
                },
                {
                    "type": "Assignment",
                    "name": "test_output",
                    "range": [
                        277,
                        348
                    ],
                    "children": [],
                    "content": ",\ntest_output=[\n(\n\"entry\",\nRSSEntry(\ntitle=\"Example RSS Item\",\nlink=\"https://example.com/article\",\ndescription=\"This is an example RSS item description.\",\npub_date=datetime(2023,6,23,12,30,0,tzinfo=timezone.utc),\nauthor=\"John Doe\",\ncategories=[\"Technology\",\"News\"],\n),\n),"
                },
                {
                    "type": "Assignment",
                    "name": "test_mock",
                    "range": [
                        351,
                        439
                    ],
                    "children": [],
                    "content": ",\ntest_mock={\n\"parse_feed\":lambda*args,**kwargs:{\n\"entries\":[\n{\n\"title\":\"Example RSS Item\",\n\"link\":\"https://example.com/article\",\n\"summary\":\"This is an example RSS item description.\",\n\"published_parsed\":(2023,6,23,12,30,0,4,174,0),\n\"author\":\"John Doe\",\n\"tags\":[{\"term\":\"Technology\"},{\"term\":\"News\"}],\n}\n]\n}"
                }
            ],
            "content": "\n\ndef __init__(self):\nsuper().__init__(\nid=\"5ebe6768-8e5d-41e3-9134-1c7bd89a8d52\",\ninput_schema=ReadRSSFeedBlock.Input,\noutput_schema=ReadRSSFeedBlock.Output,\ndescription=\"Reads RSS feed entries from a given URL.\",\ncategories={BlockCategory.INPUT},\ntest_input={\n\"rss_url\":\"https://example.com/rss\",\n\"time_period\":10_000_000,\n\"polling_rate\":1,\n\"run_continuously\":False,\n},\ntest_output=[\n(\n\"entry\",\nRSSEntry(\ntitle=\"Example RSS Item\",\nlink=\"https://example.com/article\",\ndescription=\"This is an example RSS item description.\",\npub_date=datetime(2023,6,23,12,30,0,tzinfo=timezone.utc),\nauthor=\"John Doe\",\ncategories=[\"Technology\",\"News\"],\n),\n),\n],\ntest_mock={\n\"parse_feed\":lambda*args,**kwargs:{\n\"entries\":[\n{\n\"title\":\"Example RSS Item\",\n\"link\":\"https://example.com/article\",\n\"summary\":\"This is an example RSS item description.\",\n\"published_parsed\":(2023,6,23,12,30,0,4,174,0),\n\"author\":\"John Doe\",\n\"tags\":[{\"term\":\"Technology\"},{\"term\":\"News\"}],\n}\n]\n}\n},\n"
        },
        {
            "type": "FunctionDecl",
            "name": "parse_feed",
            "range": [
                448,
                476
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "url",
                    "range": [
                        451,
                        453
                    ],
                    "children": [],
                    "content": "parse_feed(url"
                },
                {
                    "type": "ReturnType",
                    "name": "dict",
                    "range": [
                        457,
                        462
                    ],
                    "children": [],
                    "content": "->dict[str,"
                },
                {
                    "type": "ReturnStatement",
                    "name": "return",
                    "range": [
                        465,
                        471
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "feedparser.parse",
                            "range": [
                                466,
                                471
                            ],
                            "children": [],
                            "content": "\nreturn feedparser.parse("
                        }
                    ],
                    "content": ":\nreturn feedparser.parse("
                }
            ],
            "content": "staticmethod\ndef parse_feed(url:str)->dict[str,Any]:\nreturn feedparser.parse(url)#type:"
        },
        {
            "type": "FunctionDecl",
            "name": "run",
            "range": [
                478,
                673
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "self",
                    "range": [
                        481,
                        482
                    ],
                    "children": [],
                    "content": "run("
                },
                {
                    "type": "Parameter",
                    "name": "input_data",
                    "range": [
                        483,
                        485
                    ],
                    "children": [],
                    "content": "self,input_data"
                },
                {
                    "type": "VariableDecl",
                    "name": "keep_going",
                    "range": [
                        496,
                        498
                    ],
                    "children": [],
                    "content": ":\nkeep_going"
                },
                {
                    "type": "VariableDecl",
                    "name": "start_time",
                    "range": [
                        500,
                        521
                    ],
                    "children": [],
                    "content": "True\nstart_time=datetime.now(timezone.utc)-timedelta(\nminutes=input_data.time_period\n"
                },
                {
                    "type": "WhileStatement",
                    "name": "while",
                    "range": [
                        522,
                        531
                    ],
                    "children": [
                        {
                            "type": "Condition",
                            "name": "keep_going",
                            "range": [
                                523,
                                524
                            ],
                            "children": [],
                            "content": "\nwhile"
                        },
                        {
                            "type": "Assignment",
                            "name": "keep_going",
                            "range": [
                                526,
                                530
                            ],
                            "children": [],
                            "content": ":\nkeep_going=input_data"
                        },
                        {
                            "type": "CallExpression",
                            "name": "self.parse_feed",
                            "range": [
                                533,
                                542
                            ],
                            "children": [],
                            "content": "\n\nfeed=self.parse_feed(input_data."
                        },
                        {
                            "type": "ForStatement",
                            "name": "for",
                            "range": [
                                545,
                                552
                            ],
                            "children": [
                                {
                                    "type": "VariableDecl",
                                    "name": "entry",
                                    "range": [
                                        546,
                                        547
                                    ],
                                    "children": [],
                                    "content": "\nfor"
                                },
                                {
                                    "type": "CallExpression",
                                    "name": "feed[\"entries\"]",
                                    "range": [
                                        548,
                                        551
                                    ],
                                    "children": [],
                                    "content": "entry in feed["
                                },
                                {
                                    "type": "VariableDecl",
                                    "name": "pub_date",
                                    "range": [
                                        554,
                                        573
                                    ],
                                    "children": [],
                                    "content": ":\npub_date=datetime(*entry[\"published_parsed\"][:6],tzinfo=timezone."
                                },
                                {
                                    "type": "IfStatement",
                                    "name": "if",
                                    "range": [
                                        576,
                                        580
                                    ],
                                    "children": [
                                        {
                                            "type": "Condition",
                                            "name": "pub_date > start_time",
                                            "range": [
                                                577,
                                                579
                                            ],
                                            "children": [],
                                            "content": "\nif pub_date"
                                        },
                                        {
                                            "type": "YieldStatement",
                                            "name": "yield",
                                            "range": [
                                                582,
                                                661
                                            ],
                                            "children": [
                                                {
                                                    "type": "Tuple",
                                                    "name": "",
                                                    "range": [
                                                        583,
                                                        661
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Literal",
                                                            "name": "\"entry\"",
                                                            "range": [
                                                                585,
                                                                586
                                                            ],
                                                            "children": [],
                                                            "content": "(\n"
                                                        },
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "RSSEntry",
                                                            "range": [
                                                                588,
                                                                658
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Argument",
                                                                    "name": "title",
                                                                    "range": [
                                                                        591,
                                                                        597
                                                                    ],
                                                                    "children": [],
                                                                    "content": "(\ntitle=entry[\"title\""
                                                                },
                                                                {
                                                                    "type": "Argument",
                                                                    "name": "link",
                                                                    "range": [
                                                                        599,
                                                                        605
                                                                    ],
                                                                    "children": [],
                                                                    "content": ",\nlink=entry[\"link\""
                                                                },
                                                                {
                                                                    "type": "Argument",
                                                                    "name": "description",
                                                                    "range": [
                                                                        607,
                                                                        617
                                                                    ],
                                                                    "children": [],
                                                                    "content": ",\ndescription=entry.get(\"summary\",\"\""
                                                                },
                                                                {
                                                                    "type": "Argument",
                                                                    "name": "pub_date",
                                                                    "range": [
                                                                        619,
                                                                        622
                                                                    ],
                                                                    "children": [],
                                                                    "content": ",\npub_date="
                                                                },
                                                                {
                                                                    "type": "Argument",
                                                                    "name": "author",
                                                                    "range": [
                                                                        624,
                                                                        634
                                                                    ],
                                                                    "children": [],
                                                                    "content": ",\nauthor=entry.get(\"author\",\"\""
                                                                },
                                                                {
                                                                    "type": "Argument",
                                                                    "name": "categories",
                                                                    "range": [
                                                                        636,
                                                                        656
                                                                    ],
                                                                    "children": [],
                                                                    "content": ",\ncategories=[tag[\"term\"]for tag in entry.get(\"tags\",[])"
                                                                }
                                                            ],
                                                            "content": ",\nRSSEntry(\ntitle=entry[\"title\"],\nlink=entry[\"link\"],\ndescription=entry.get(\"summary\",\"\"),\npub_date=pub_date,\nauthor=entry.get(\"author\",\"\"),\ncategories=[tag[\"term\"]for tag in entry.get(\"tags\",[])],"
                                                        }
                                                    ],
                                                    "content": "\nyield(\n\"entry\",\nRSSEntry(\ntitle=entry[\"title\"],\nlink=entry[\"link\"],\ndescription=entry.get(\"summary\",\"\"),\npub_date=pub_date,\nauthor=entry.get(\"author\",\"\"),\ncategories=[tag[\"term\"]for tag in entry.get(\"tags\",[])],\n),"
                                                }
                                            ],
                                            "content": ":\nyield(\n\"entry\",\nRSSEntry(\ntitle=entry[\"title\"],\nlink=entry[\"link\"],\ndescription=entry.get(\"summary\",\"\"),\npub_date=pub_date,\nauthor=entry.get(\"author\",\"\"),\ncategories=[tag[\"term\"]for tag in entry.get(\"tags\",[])],\n),"
                                        }
                                    ],
                                    "content": "\n\nif pub_date>"
                                }
                            ],
                            "content": "\n\nfor entry in feed[\"entries\""
                        },
                        {
                            "type": "CallExpression",
                            "name": "time.sleep",
                            "range": [
                                664,
                                671
                            ],
                            "children": [],
                            "content": "\n\ntime.sleep(input_data."
                        }
                    ],
                    "content": ")\nwhile keep_going:\nkeep_going=input_data."
                }
            ],
            "content": "\n\ndef run(self,input_data:Input,**kwargs)->BlockOutput:\nkeep_going=True\nstart_time=datetime.now(timezone.utc)-timedelta(\nminutes=input_data.time_period\n)\nwhile keep_going:\nkeep_going=input_data.run_continuously\n\nfeed=self.parse_feed(input_data.rss_url)\n\nfor entry in feed[\"entries\"]:\npub_date=datetime(*entry[\"published_parsed\"][:6],tzinfo=timezone.utc)\n\nif pub_date>start_time:\nyield(\n\"entry\",\nRSSEntry(\ntitle=entry[\"title\"],\nlink=entry[\"link\"],\ndescription=entry.get(\"summary\",\"\"),\npub_date=pub_date,\nauthor=entry.get(\"author\",\"\"),\ncategories=[tag[\"term\"]for tag in entry.get(\"tags\",[])],\n),\n)\n\ntime.sleep(input_data.polling_rate)"
        }
    ],
    "content": "\nclass RSSEntry(pydantic.BaseModel):\ntitle:str\nlink:str\ndescription:str\npub_date:datetime\nauthor:str\ncategories:list[str]\n\n\nclass ReadRSSFeedBlock(Block):\nclass Input(BlockSchema):\nrss_url:str=SchemaField(\ndescription=\"The URL of the RSS feed to read\",\nplaceholder=\"https://example.com/rss\",\n)\ntime_period:int=SchemaField(\ndescription=\"The time period to check in minutes relative to the run block runtime, e.g. 60 would check for new entries in the last hour.\",\nplaceholder=\"1440\",\ndefault=1440,\n)\npolling_rate:int=SchemaField(\ndescription=\"The number of seconds to wait between polling attempts.\",\nplaceholder=\"300\",\n)\nrun_continuously:bool=SchemaField(\ndescription=\"Whether to run the block continuously or just once.\",\ndefault=True,\n)\n\nclass Output(BlockSchema):\nentry:RSSEntry=SchemaField(description=\"The RSS item\")\n\ndef __init__(self):\nsuper().__init__(\nid=\"5ebe6768-8e5d-41e3-9134-1c7bd89a8d52\",\ninput_schema=ReadRSSFeedBlock.Input,\noutput_schema=ReadRSSFeedBlock.Output,\ndescription=\"Reads RSS feed entries from a given URL.\",\ncategories={BlockCategory.INPUT},\ntest_input={\n\"rss_url\":\"https://example.com/rss\",\n\"time_period\":10_000_000,\n\"polling_rate\":1,\n\"run_continuously\":False,\n},\ntest_output=[\n(\n\"entry\",\nRSSEntry(\ntitle=\"Example RSS Item\",\nlink=\"https://example.com/article\",\ndescription=\"This is an example RSS item description.\",\npub_date=datetime(2023,6,23,12,30,0,tzinfo=timezone.utc),\nauthor=\"John Doe\",\ncategories=[\"Technology\",\"News\"],\n),\n),\n],\ntest_mock={\n\"parse_feed\":lambda*args,**kwargs:{\n\"entries\":[\n{\n\"title\":\"Example RSS Item\",\n\"link\":\"https://example.com/article\",\n\"summary\":\"This is an example RSS item description.\",\n\"published_parsed\":(2023,6,23,12,30,0,4,174,0),\n\"author\":\"John Doe\",\n\"tags\":[{\"term\":\"Technology\"},{\"term\":\"News\"}],\n}\n]\n}\n},\n)\n\n@staticmethod\ndef parse_feed(url:str)->dict[str,Any]:\nreturn feedparser.parse(url)#type:ignore\n\ndef run(self,input_data:Input,**kwargs)->BlockOutput:\nkeep_going=True\nstart_time=datetime.now(timezone.utc)-timedelta(\nminutes=input_data.time_period\n)\nwhile keep_going:\nkeep_going=input_data.run_continuously\n\nfeed=self.parse_feed(input_data.rss_url)\n\nfor entry in feed[\"entries\"]:\npub_date=datetime(*entry[\"published_parsed\"][:6],tzinfo=timezone.utc)\n\nif pub_date>start_time:\nyield(\n\"entry\",\nRSSEntry(\ntitle=entry[\"title\"],\nlink=entry[\"link\"],\ndescription=entry.get(\"summary\",\"\"),\npub_date=pub_date,\nauthor=entry.get(\"author\",\"\"),\ncategories=[tag[\"term\"]for tag in entry.get(\"tags\",[])],\n),\n)\n\ntime.sleep(input_data.polling_rate)"
}