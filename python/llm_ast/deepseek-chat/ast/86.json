{
    "type": "Program",
    "name": "Global",
    "range": [
        0,
        474
    ],
    "children": [
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                0,
                3
            ],
            "children": [
                {
                    "type": "FromImport",
                    "name": "datetime",
                    "range": [
                        0,
                        3
                    ],
                    "children": [],
                    "content": "from datetime import datetime"
                }
            ],
            "content": "from datetime import datetime"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                6,
                7
            ],
            "children": [
                {
                    "type": "DirectImport",
                    "name": "pytest",
                    "range": [
                        6,
                        7
                    ],
                    "children": [],
                    "content": "import pytest"
                }
            ],
            "content": "import pytest"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                9,
                14
            ],
            "children": [
                {
                    "type": "FromImport",
                    "name": "prisma.models.CreditTransaction",
                    "range": [
                        9,
                        14
                    ],
                    "children": [],
                    "content": "from prisma.models import CreditTransaction"
                }
            ],
            "content": "from prisma.models import CreditTransaction"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                17,
                24
            ],
            "children": [
                {
                    "type": "FromImport",
                    "name": "backend.blocks.llm.AITextGeneratorBlock",
                    "range": [
                        17,
                        24
                    ],
                    "children": [],
                    "content": "from backend.blocks.llm import AITextGeneratorBlock"
                }
            ],
            "content": "from backend.blocks.llm import AITextGeneratorBlock"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                26,
                33
            ],
            "children": [
                {
                    "type": "FromImport",
                    "name": "backend.data.credit.UserCredit",
                    "range": [
                        26,
                        33
                    ],
                    "children": [],
                    "content": "from backend.data.credit import UserCredit"
                }
            ],
            "content": "from backend.data.credit import UserCredit"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                35,
                42
            ],
            "children": [
                {
                    "type": "FromImport",
                    "name": "backend.data.user.DEFAULT_USER_ID",
                    "range": [
                        35,
                        42
                    ],
                    "children": [],
                    "content": "from backend.data.user import DEFAULT_USER_ID"
                }
            ],
            "content": "from backend.data.user import DEFAULT_USER_ID"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                44,
                51
            ],
            "children": [
                {
                    "type": "FromImport",
                    "name": "backend.integrations.credentials_store.openai_credentials",
                    "range": [
                        44,
                        51
                    ],
                    "children": [],
                    "content": "from backend.integrations.credentials_store import openai_credentials"
                }
            ],
            "content": "from backend.integrations.credentials_store import openai_credentials"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                53,
                60
            ],
            "children": [
                {
                    "type": "FromImport",
                    "name": "backend.util.test.SpinTestServer",
                    "range": [
                        53,
                        60
                    ],
                    "children": [],
                    "content": "from backend.util.test import SpinTestServer"
                }
            ],
            "content": "from backend.util.test import SpinTestServer"
        },
        {
            "type": "VariableDeclaration",
            "name": "REFILL_VALUE",
            "range": [
                63,
                65
            ],
            "children": [
                {
                    "type": "AssignmentExpression",
                    "name": "=",
                    "range": [
                        64,
                        65
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "1000",
                            "range": [
                                65,
                                65
                            ],
                            "children": [],
                            "content": "1000"
                        }
                    ],
                    "content": "=1000"
                }
            ],
            "content": "REFILL_VALUE=1000"
        },
        {
            "type": "VariableDeclaration",
            "name": "user_credit",
            "range": [
                67,
                72
            ],
            "children": [
                {
                    "type": "AssignmentExpression",
                    "name": "=",
                    "range": [
                        68,
                        72
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "UserCredit",
                            "range": [
                                69,
                                72
                            ],
                            "children": [
                                {
                                    "type": "ArgumentList",
                                    "name": "",
                                    "range": [
                                        70,
                                        72
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "REFILL_VALUE",
                                            "range": [
                                                71,
                                                71
                                            ],
                                            "children": [],
                                            "content": "REFILL_VALUE"
                                        }
                                    ],
                                    "content": "(REFILL_VALUE)"
                                }
                            ],
                            "content": "UserCredit(REFILL_VALUE)"
                        }
                    ],
                    "content": "=UserCredit(REFILL_VALUE)"
                }
            ],
            "content": "user_credit=UserCredit(REFILL_VALUE)"
        },
        {
            "type": "FunctionDecl",
            "name": "test_block_credit_usage",
            "range": [
                87,
                265
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "server",
                    "range": [
                        91,
                        93
                    ],
                    "children": [],
                    "content": "(server:"
                },
                {
                    "type": "BlockStatement",
                    "name": "",
                    "range": [
                        96,
                        265
                    ],
                    "children": [
                        {
                            "type": "VariableDecl",
                            "name": "current_credit",
                            "range": [
                                97,
                                105
                            ],
                            "children": [
                                {
                                    "type": "AwaitExpression",
                                    "name": "",
                                    "range": [
                                        99,
                                        105
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "get_or_refill_credit",
                                            "range": [
                                                100,
                                                105
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "DEFAULT_USER_ID",
                                                    "range": [
                                                        104,
                                                        105
                                                    ],
                                                    "children": [],
                                                    "content": "(DEFAULT_USER_ID"
                                                }
                                            ],
                                            "content": "await user_credit.get_or_refill_credit(DEFAULT_USER_ID"
                                        }
                                    ],
                                    "content": "=await user_credit.get_or_refill_credit(DEFAULT_USER_ID"
                                }
                            ],
                            "content": "\ncurrent_credit=await user_credit.get_or_refill_credit(DEFAULT_USER_ID"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "spending_amount_1",
                            "range": [
                                108,
                                182
                            ],
                            "children": [
                                {
                                    "type": "AwaitExpression",
                                    "name": "",
                                    "range": [
                                        110,
                                        182
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "spend_credits",
                                            "range": [
                                                111,
                                                182
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "DEFAULT_USER_ID",
                                                    "range": [
                                                        116,
                                                        117
                                                    ],
                                                    "children": [],
                                                    "content": "\nDEFAULT_USER_ID"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "current_credit",
                                                    "range": [
                                                        119,
                                                        120
                                                    ],
                                                    "children": [],
                                                    "content": "\ncurrent_credit"
                                                },
                                                {
                                                    "type": "CallExpression",
                                                    "name": "AITextGeneratorBlock",
                                                    "range": [
                                                        122,
                                                        127
                                                    ],
                                                    "children": [],
                                                    "content": "\nAITextGeneratorBlock().id"
                                                },
                                                {
                                                    "type": "ObjectExpression",
                                                    "name": "",
                                                    "range": [
                                                        129,
                                                        164
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Property",
                                                            "name": "model",
                                                            "range": [
                                                                131,
                                                                133
                                                            ],
                                                            "children": [],
                                                            "content": "\n\"model\":"
                                                        },
                                                        {
                                                            "type": "Property",
                                                            "name": "credentials",
                                                            "range": [
                                                                136,
                                                                161
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "ObjectExpression",
                                                                    "name": "",
                                                                    "range": [
                                                                        138,
                                                                        161
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Property",
                                                                            "name": "id",
                                                                            "range": [
                                                                                140,
                                                                                145
                                                                            ],
                                                                            "children": [],
                                                                            "content": "\n\"id\":openai_credentials.id"
                                                                        },
                                                                        {
                                                                            "type": "Property",
                                                                            "name": "provider",
                                                                            "range": [
                                                                                147,
                                                                                152
                                                                            ],
                                                                            "children": [],
                                                                            "content": "\n\"provider\":openai_credentials.provider"
                                                                        },
                                                                        {
                                                                            "type": "Property",
                                                                            "name": "type",
                                                                            "range": [
                                                                                154,
                                                                                159
                                                                            ],
                                                                            "children": [],
                                                                            "content": "\n\"type\":openai_credentials.type"
                                                                        }
                                                                    ],
                                                                    "content": ":{\n\"id\":openai_credentials.id,\n\"provider\":openai_credentials.provider,\n\"type\":openai_credentials.type,\n"
                                                                }
                                                            ],
                                                            "content": "\n\"credentials\":{\n\"id\":openai_credentials.id,\n\"provider\":openai_credentials.provider,\n\"type\":openai_credentials.type,\n"
                                                        }
                                                    ],
                                                    "content": "\n{\n\"model\":\"gpt-4-turbo\",\n\"credentials\":{\n\"id\":openai_credentials.id,\n\"provider\":openai_credentials.provider,\n\"type\":openai_credentials.type,\n},\n"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "name": "0.0",
                                                    "range": [
                                                        167,
                                                        170
                                                    ],
                                                    "children": [],
                                                    "content": "\n0.0"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "name": "0.0",
                                                    "range": [
                                                        172,
                                                        175
                                                    ],
                                                    "children": [],
                                                    "content": "\n0.0"
                                                },
                                                {
                                                    "type": "AssignmentExpression",
                                                    "name": "validate_balance",
                                                    "range": [
                                                        177,
                                                        180
                                                    ],
                                                    "children": [],
                                                    "content": "\nvalidate_balance=False"
                                                }
                                            ],
                                            "content": "await user_credit.spend_credits(\nDEFAULT_USER_ID,\ncurrent_credit,\nAITextGeneratorBlock().id,\n{\n\"model\":\"gpt-4-turbo\",\n\"credentials\":{\n\"id\":openai_credentials.id,\n\"provider\":openai_credentials.provider,\n\"type\":openai_credentials.type,\n},\n},\n0.0,\n0.0,\nvalidate_balance=False,\n"
                                        }
                                    ],
                                    "content": "=await user_credit.spend_credits(\nDEFAULT_USER_ID,\ncurrent_credit,\nAITextGeneratorBlock().id,\n{\n\"model\":\"gpt-4-turbo\",\n\"credentials\":{\n\"id\":openai_credentials.id,\n\"provider\":openai_credentials.provider,\n\"type\":openai_credentials.type,\n},\n},\n0.0,\n0.0,\nvalidate_balance=False,\n"
                                }
                            ],
                            "content": "\nspending_amount_1=await user_credit.spend_credits(\nDEFAULT_USER_ID,\ncurrent_credit,\nAITextGeneratorBlock().id,\n{\n\"model\":\"gpt-4-turbo\",\n\"credentials\":{\n\"id\":openai_credentials.id,\n\"provider\":openai_credentials.provider,\n\"type\":openai_credentials.type,\n},\n},\n0.0,\n0.0,\nvalidate_balance=False,\n"
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "",
                            "range": [
                                184,
                                188
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "name": "",
                                    "range": [
                                        185,
                                        187
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "spending_amount_1",
                                            "range": [
                                                185,
                                                186
                                            ],
                                            "children": [],
                                            "content": "assert spending_amount_1"
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "0",
                                            "range": [
                                                187,
                                                188
                                            ],
                                            "children": [],
                                            "content": ">0"
                                        }
                                    ],
                                    "content": "assert spending_amount_1>"
                                }
                            ],
                            "content": "\nassert spending_amount_1>0"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "spending_amount_2",
                            "range": [
                                190,
                                237
                            ],
                            "children": [
                                {
                                    "type": "AwaitExpression",
                                    "name": "",
                                    "range": [
                                        192,
                                        237
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "spend_credits",
                                            "range": [
                                                193,
                                                237
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "DEFAULT_USER_ID",
                                                    "range": [
                                                        198,
                                                        199
                                                    ],
                                                    "children": [],
                                                    "content": "\nDEFAULT_USER_ID"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "current_credit",
                                                    "range": [
                                                        201,
                                                        202
                                                    ],
                                                    "children": [],
                                                    "content": "\ncurrent_credit"
                                                },
                                                {
                                                    "type": "CallExpression",
                                                    "name": "AITextGeneratorBlock",
                                                    "range": [
                                                        204,
                                                        209
                                                    ],
                                                    "children": [],
                                                    "content": "\nAITextGeneratorBlock().id"
                                                },
                                                {
                                                    "type": "ObjectExpression",
                                                    "name": "",
                                                    "range": [
                                                        211,
                                                        219
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Property",
                                                            "name": "model",
                                                            "range": [
                                                                212,
                                                                214
                                                            ],
                                                            "children": [],
                                                            "content": "{\"model\":"
                                                        },
                                                        {
                                                            "type": "Property",
                                                            "name": "api_key",
                                                            "range": [
                                                                216,
                                                                218
                                                            ],
                                                            "children": [],
                                                            "content": ",\"api_key\":"
                                                        }
                                                    ],
                                                    "content": "\n{\"model\":\"gpt-4-turbo\",\"api_key\":\"owned_api_key\""
                                                },
                                                {
                                                    "type": "Literal",
                                                    "name": "0.0",
                                                    "range": [
                                                        222,
                                                        225
                                                    ],
                                                    "children": [],
                                                    "content": "\n0.0"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "name": "0.0",
                                                    "range": [
                                                        227,
                                                        230
                                                    ],
                                                    "children": [],
                                                    "content": "\n0.0"
                                                },
                                                {
                                                    "type": "AssignmentExpression",
                                                    "name": "validate_balance",
                                                    "range": [
                                                        232,
                                                        235
                                                    ],
                                                    "children": [],
                                                    "content": "\nvalidate_balance=False"
                                                }
                                            ],
                                            "content": "await user_credit.spend_credits(\nDEFAULT_USER_ID,\ncurrent_credit,\nAITextGeneratorBlock().id,\n{\"model\":\"gpt-4-turbo\",\"api_key\":\"owned_api_key\"},\n0.0,\n0.0,\nvalidate_balance=False,\n"
                                        }
                                    ],
                                    "content": "=await user_credit.spend_credits(\nDEFAULT_USER_ID,\ncurrent_credit,\nAITextGeneratorBlock().id,\n{\"model\":\"gpt-4-turbo\",\"api_key\":\"owned_api_key\"},\n0.0,\n0.0,\nvalidate_balance=False,\n"
                                }
                            ],
                            "content": "\nspending_amount_2=await user_credit.spend_credits(\nDEFAULT_USER_ID,\ncurrent_credit,\nAITextGeneratorBlock().id,\n{\"model\":\"gpt-4-turbo\",\"api_key\":\"owned_api_key\"},\n0.0,\n0.0,\nvalidate_balance=False,\n"
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "",
                            "range": [
                                239,
                                244
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "name": "",
                                    "range": [
                                        240,
                                        243
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "spending_amount_2",
                                            "range": [
                                                240,
                                                241
                                            ],
                                            "children": [],
                                            "content": "assert spending_amount_2"
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "0",
                                            "range": [
                                                242,
                                                243
                                            ],
                                            "children": [],
                                            "content": "=="
                                        }
                                    ],
                                    "content": "assert spending_amount_2=="
                                }
                            ],
                            "content": "\nassert spending_amount_2==0"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "new_credit",
                            "range": [
                                246,
                                254
                            ],
                            "children": [
                                {
                                    "type": "AwaitExpression",
                                    "name": "",
                                    "range": [
                                        248,
                                        254
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "get_or_refill_credit",
                                            "range": [
                                                249,
                                                254
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "DEFAULT_USER_ID",
                                                    "range": [
                                                        253,
                                                        254
                                                    ],
                                                    "children": [],
                                                    "content": "(DEFAULT_USER_ID"
                                                }
                                            ],
                                            "content": "await user_credit.get_or_refill_credit(DEFAULT_USER_ID"
                                        }
                                    ],
                                    "content": "=await user_credit.get_or_refill_credit(DEFAULT_USER_ID"
                                }
                            ],
                            "content": "\nnew_credit=await user_credit.get_or_refill_credit(DEFAULT_USER_ID"
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "",
                            "range": [
                                256,
                                265
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "name": "",
                                    "range": [
                                        257,
                                        264
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "new_credit",
                                            "range": [
                                                257,
                                                258
                                            ],
                                            "children": [],
                                            "content": "assert new_credit"
                                        },
                                        {
                                            "type": "BinaryExpression",
                                            "name": "",
                                            "range": [
                                                259,
                                                264
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "current_credit",
                                                    "range": [
                                                        259,
                                                        260
                                                    ],
                                                    "children": [],
                                                    "content": "=="
                                                },
                                                {
                                                    "type": "BinaryExpression",
                                                    "name": "",
                                                    "range": [
                                                        261,
                                                        264
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "spending_amount_1",
                                                            "range": [
                                                                261,
                                                                262
                                                            ],
                                                            "children": [],
                                                            "content": "current_credit-"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "spending_amount_2",
                                                            "range": [
                                                                263,
                                                                264
                                                            ],
                                                            "children": [],
                                                            "content": "spending_amount_1-"
                                                        }
                                                    ],
                                                    "content": "current_credit-spending_amount_1-"
                                                }
                                            ],
                                            "content": "==current_credit-spending_amount_1-"
                                        }
                                    ],
                                    "content": "assert new_credit==current_credit-spending_amount_1-"
                                }
                            ],
                            "content": "\nassert new_credit==current_credit-spending_amount_1-spending_amount_2"
                        }
                    ],
                    "content": ":\ncurrent_credit=await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\n\nspending_amount_1=await user_credit.spend_credits(\nDEFAULT_USER_ID,\ncurrent_credit,\nAITextGeneratorBlock().id,\n{\n\"model\":\"gpt-4-turbo\",\n\"credentials\":{\n\"id\":openai_credentials.id,\n\"provider\":openai_credentials.provider,\n\"type\":openai_credentials.type,\n},\n},\n0.0,\n0.0,\nvalidate_balance=False,\n)\nassert spending_amount_1>0\n\nspending_amount_2=await user_credit.spend_credits(\nDEFAULT_USER_ID,\ncurrent_credit,\nAITextGeneratorBlock().id,\n{\"model\":\"gpt-4-turbo\",\"api_key\":\"owned_api_key\"},\n0.0,\n0.0,\nvalidate_balance=False,\n)\nassert spending_amount_2==0\n\nnew_credit=await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\nassert new_credit==current_credit-spending_amount_1-spending_amount_2"
                }
            ],
            "content": "\nasync def test_block_credit_usage(server:SpinTestServer):\ncurrent_credit=await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\n\nspending_amount_1=await user_credit.spend_credits(\nDEFAULT_USER_ID,\ncurrent_credit,\nAITextGeneratorBlock().id,\n{\n\"model\":\"gpt-4-turbo\",\n\"credentials\":{\n\"id\":openai_credentials.id,\n\"provider\":openai_credentials.provider,\n\"type\":openai_credentials.type,\n},\n},\n0.0,\n0.0,\nvalidate_balance=False,\n)\nassert spending_amount_1>0\n\nspending_amount_2=await user_credit.spend_credits(\nDEFAULT_USER_ID,\ncurrent_credit,\nAITextGeneratorBlock().id,\n{\"model\":\"gpt-4-turbo\",\"api_key\":\"owned_api_key\"},\n0.0,\n0.0,\nvalidate_balance=False,\n)\nassert spending_amount_2==0\n\nnew_credit=await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\nassert new_credit==current_credit-spending_amount_1-spending_amount_2"
        },
        {
            "type": "FunctionDecl",
            "name": "test_block_credit_top_up",
            "range": [
                279,
                328
            ],
            "children": [
                {
                    "type": "AsyncKeyword",
                    "name": "async",
                    "range": [
                        279,
                        284
                    ],
                    "children": [],
                    "content": ")\nasync def test_block_credit_top_up("
                },
                {
                    "type": "FunctionName",
                    "name": "test_block_credit_top_up",
                    "range": [
                        280,
                        301
                    ],
                    "children": [],
                    "content": "\nasync def test_block_credit_top_up(server:SpinTestServer):\ncurrent_credit=await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\n\n"
                },
                {
                    "type": "ParameterList",
                    "name": "",
                    "range": [
                        282,
                        286
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "server",
                            "range": [
                                283,
                                285
                            ],
                            "children": [],
                            "content": "test_block_credit_top_up(server"
                        }
                    ],
                    "content": "def test_block_credit_top_up(server:"
                },
                {
                    "type": "FunctionBody",
                    "name": "",
                    "range": [
                        288,
                        328
                    ],
                    "children": [
                        {
                            "type": "VariableDecl",
                            "name": "current_credit",
                            "range": [
                                289,
                                297
                            ],
                            "children": [
                                {
                                    "type": "AwaitExpression",
                                    "name": "",
                                    "range": [
                                        291,
                                        297
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "user_credit.get_or_refill_credit",
                                            "range": [
                                                292,
                                                297
                                            ],
                                            "children": [],
                                            "content": "=await user_credit.get_or_refill_credit("
                                        },
                                        {
                                            "type": "ArgumentList",
                                            "name": "",
                                            "range": [
                                                295,
                                                297
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "DEFAULT_USER_ID",
                                                    "range": [
                                                        296,
                                                        297
                                                    ],
                                                    "children": [],
                                                    "content": "get_or_refill_credit("
                                                }
                                            ],
                                            "content": ".get_or_refill_credit("
                                        }
                                    ],
                                    "content": "current_credit=await user_credit.get_or_refill_credit("
                                }
                            ],
                            "content": ":\ncurrent_credit=await user_credit.get_or_refill_credit("
                        },
                        {
                            "type": "ExpressionStatement",
                            "name": "",
                            "range": [
                                300,
                                308
                            ],
                            "children": [
                                {
                                    "type": "AwaitExpression",
                                    "name": "",
                                    "range": [
                                        300,
                                        308
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "user_credit.top_up_credits",
                                            "range": [
                                                301,
                                                308
                                            ],
                                            "children": [],
                                            "content": "\nawait user_credit.top_up_credits(DEFAULT_USER_ID,"
                                        },
                                        {
                                            "type": "ArgumentList",
                                            "name": "",
                                            "range": [
                                                304,
                                                308
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "DEFAULT_USER_ID",
                                                    "range": [
                                                        305,
                                                        306
                                                    ],
                                                    "children": [],
                                                    "content": "top_up_credits("
                                                },
                                                {
                                                    "type": "Literal",
                                                    "name": "100",
                                                    "range": [
                                                        307,
                                                        308
                                                    ],
                                                    "children": [],
                                                    "content": "DEFAULT_USER_ID,"
                                                }
                                            ],
                                            "content": ".top_up_credits(DEFAULT_USER_ID,"
                                        }
                                    ],
                                    "content": "\n\nawait user_credit.top_up_credits(DEFAULT_USER_ID,"
                                }
                            ],
                            "content": "\n\nawait user_credit.top_up_credits(DEFAULT_USER_ID,"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "new_credit",
                            "range": [
                                311,
                                319
                            ],
                            "children": [
                                {
                                    "type": "AwaitExpression",
                                    "name": "",
                                    "range": [
                                        313,
                                        319
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "user_credit.get_or_refill_credit",
                                            "range": [
                                                314,
                                                319
                                            ],
                                            "children": [],
                                            "content": "=await user_credit.get_or_refill_credit("
                                        },
                                        {
                                            "type": "ArgumentList",
                                            "name": "",
                                            "range": [
                                                317,
                                                319
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "DEFAULT_USER_ID",
                                                    "range": [
                                                        318,
                                                        319
                                                    ],
                                                    "children": [],
                                                    "content": "get_or_refill_credit("
                                                }
                                            ],
                                            "content": ".get_or_refill_credit("
                                        }
                                    ],
                                    "content": "new_credit=await user_credit.get_or_refill_credit("
                                }
                            ],
                            "content": "\n\nnew_credit=await user_credit.get_or_refill_credit("
                        },
                        {
                            "type": "AssertStatement",
                            "name": "",
                            "range": [
                                321,
                                327
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "name": "==",
                                    "range": [
                                        323,
                                        327
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "new_credit",
                                            "range": [
                                                322,
                                                323
                                            ],
                                            "children": [],
                                            "content": "\nassert"
                                        },
                                        {
                                            "type": "BinaryExpression",
                                            "name": "+",
                                            "range": [
                                                325,
                                                327
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "current_credit",
                                                    "range": [
                                                        325,
                                                        326
                                                    ],
                                                    "children": [],
                                                    "content": "=="
                                                },
                                                {
                                                    "type": "Literal",
                                                    "name": "100",
                                                    "range": [
                                                        327,
                                                        327
                                                    ],
                                                    "children": [],
                                                    "content": "current_credit"
                                                }
                                            ],
                                            "content": "==current_credit"
                                        }
                                    ],
                                    "content": "assert new_credit==current_credit"
                                }
                            ],
                            "content": ")\nassert new_credit==current_credit"
                        }
                    ],
                    "content": "):\ncurrent_credit=await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\n\nawait user_credit.top_up_credits(DEFAULT_USER_ID,100)\n\nnew_credit=await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\nassert new_credit==current_credit+"
                }
            ],
            "content": ")\nasync def test_block_credit_top_up(server:SpinTestServer):\ncurrent_credit=await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\n\nawait user_credit.top_up_credits(DEFAULT_USER_ID,100)\n\nnew_credit=await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\nassert new_credit==current_credit+"
        },
        {
            "type": "VariableDecl",
            "name": "month1",
            "range": [
                352,
                361
            ],
            "children": [
                {
                    "type": "CallExpression",
                    "name": "datetime",
                    "range": [
                        354,
                        361
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "2022",
                            "range": [
                                356,
                                356
                            ],
                            "children": [],
                            "content": "="
                        },
                        {
                            "type": "Literal",
                            "name": "1",
                            "range": [
                                358,
                                358
                            ],
                            "children": [],
                            "content": "("
                        },
                        {
                            "type": "Literal",
                            "name": "15",
                            "range": [
                                360,
                                360
                            ],
                            "children": [],
                            "content": ","
                        }
                    ],
                    "content": "\nmonth1=datetime(2022,1"
                }
            ],
            "content": "):\nmonth1=datetime(2022,1"
        },
        {
            "type": "VariableDecl",
            "name": "month2",
            "range": [
                363,
                372
            ],
            "children": [
                {
                    "type": "CallExpression",
                    "name": "datetime",
                    "range": [
                        365,
                        372
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "2022",
                            "range": [
                                367,
                                367
                            ],
                            "children": [],
                            "content": "="
                        },
                        {
                            "type": "Literal",
                            "name": "2",
                            "range": [
                                369,
                                369
                            ],
                            "children": [],
                            "content": "("
                        },
                        {
                            "type": "Literal",
                            "name": "15",
                            "range": [
                                371,
                                371
                            ],
                            "children": [],
                            "content": ","
                        }
                    ],
                    "content": "\nmonth2=datetime(2022,2"
                }
            ],
            "content": "15)\nmonth2=datetime(2022,2"
        },
        {
            "type": "ExpressionStatement",
            "name": "",
            "range": [
                375,
                382
            ],
            "children": [
                {
                    "type": "AssignmentExpression",
                    "name": "=",
                    "range": [
                        378,
                        382
                    ],
                    "children": [
                        {
                            "type": "MemberExpression",
                            "name": "user_credit.time_now",
                            "range": [
                                375,
                                377
                            ],
                            "children": [],
                            "content": ")\n\n"
                        },
                        {
                            "type": "LambdaExpression",
                            "name": "",
                            "range": [
                                379,
                                382
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "month2",
                                    "range": [
                                        381,
                                        381
                                    ],
                                    "children": [],
                                    "content": "="
                                }
                            ],
                            "content": ".time_now=lambda"
                        }
                    ],
                    "content": "user_credit.time_now=lambda"
                }
            ],
            "content": ")\n\nuser_credit.time_now=lambda"
        },
        {
            "type": "VariableDecl",
            "name": "month2credit",
            "range": [
                383,
                392
            ],
            "children": [
                {
                    "type": "AwaitExpression",
                    "name": "",
                    "range": [
                        385,
                        392
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "user_credit.get_or_refill_credit",
                            "range": [
                                386,
                                392
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "DEFAULT_USER_ID",
                                    "range": [
                                        390,
                                        390
                                    ],
                                    "children": [],
                                    "content": "."
                                }
                            ],
                            "content": "month2credit=await user_credit.get_or_refill_credit("
                        }
                    ],
                    "content": "\nmonth2credit=await user_credit.get_or_refill_credit("
                }
            ],
            "content": ":month2\nmonth2credit=await user_credit.get_or_refill_credit("
        },
        {
            "type": "ExpressionStatement",
            "name": "",
            "range": [
                404,
                411
            ],
            "children": [
                {
                    "type": "AssignmentExpression",
                    "name": "=",
                    "range": [
                        407,
                        411
                    ],
                    "children": [
                        {
                            "type": "MemberExpression",
                            "name": "user_credit.time_now",
                            "range": [
                                404,
                                406
                            ],
                            "children": [],
                            "content": "month1\n"
                        },
                        {
                            "type": "LambdaExpression",
                            "name": "",
                            "range": [
                                408,
                                411
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "month1",
                                    "range": [
                                        410,
                                        410
                                    ],
                                    "children": [],
                                    "content": "="
                                }
                            ],
                            "content": ".time_now=lambda"
                        }
                    ],
                    "content": "user_credit.time_now=lambda"
                }
            ],
            "content": "month1\nuser_credit.time_now=lambda"
        },
        {
            "type": "VariableDecl",
            "name": "month1credit",
            "range": [
                412,
                421
            ],
            "children": [
                {
                    "type": "AwaitExpression",
                    "name": "",
                    "range": [
                        414,
                        421
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "user_credit.get_or_refill_credit",
                            "range": [
                                415,
                                421
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "DEFAULT_USER_ID",
                                    "range": [
                                        419,
                                        419
                                    ],
                                    "children": [],
                                    "content": "."
                                }
                            ],
                            "content": "month1credit=await user_credit.get_or_refill_credit("
                        }
                    ],
                    "content": "\nmonth1credit=await user_credit.get_or_refill_credit("
                }
            ],
            "content": ":month1\nmonth1credit=await user_credit.get_or_refill_credit("
        },
        {
            "type": "ExpressionStatement",
            "name": "",
            "range": [
                422,
                431
            ],
            "children": [
                {
                    "type": "AwaitExpression",
                    "name": "",
                    "range": [
                        422,
                        431
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "user_credit.top_up_credits",
                            "range": [
                                423,
                                431
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "DEFAULT_USER_ID",
                                    "range": [
                                        427,
                                        427
                                    ],
                                    "children": [],
                                    "content": "."
                                },
                                {
                                    "type": "Literal",
                                    "name": "100",
                                    "range": [
                                        429,
                                        429
                                    ],
                                    "children": [],
                                    "content": "("
                                }
                            ],
                            "content": ")\nawait user_credit.top_up_credits(DEFAULT_USER_ID,"
                        }
                    ],
                    "content": "DEFAULT_USER_ID)\nawait user_credit.top_up_credits(DEFAULT_USER_ID,"
                }
            ],
            "content": "DEFAULT_USER_ID)\nawait user_credit.top_up_credits(DEFAULT_USER_ID,"
        },
        {
            "type": "ExpressionStatement",
            "name": "",
            "range": [
                432,
                445
            ],
            "children": [
                {
                    "type": "AssertStatement",
                    "name": "",
                    "range": [
                        432,
                        445
                    ],
                    "children": [
                        {
                            "type": "BinaryExpression",
                            "name": "==",
                            "range": [
                                440,
                                445
                            ],
                            "children": [
                                {
                                    "type": "AwaitExpression",
                                    "name": "",
                                    "range": [
                                        433,
                                        439
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "user_credit.get_or_refill_credit",
                                            "range": [
                                                434,
                                                439
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "DEFAULT_USER_ID",
                                                    "range": [
                                                        438,
                                                        438
                                                    ],
                                                    "children": [],
                                                    "content": "."
                                                }
                                            ],
                                            "content": "\nassert await user_credit.get_or_refill_credit"
                                        }
                                    ],
                                    "content": ")\nassert await user_credit.get_or_refill_credit"
                                },
                                {
                                    "type": "BinaryExpression",
                                    "name": "+",
                                    "range": [
                                        443,
                                        445
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "month1credit",
                                            "range": [
                                                442,
                                                442
                                            ],
                                            "children": [],
                                            "content": ")"
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "100",
                                            "range": [
                                                444,
                                                444
                                            ],
                                            "children": [],
                                            "content": "="
                                        }
                                    ],
                                    "content": "==month1credit"
                                }
                            ],
                            "content": "(DEFAULT_USER_ID)==month1credit"
                        }
                    ],
                    "content": "100)\nassert await user_credit.get_or_refill_credit(DEFAULT_USER_ID)==month1credit"
                }
            ],
            "content": "100)\nassert await user_credit.get_or_refill_credit(DEFAULT_USER_ID)==month1credit"
        },
        {
            "type": "ExpressionStatement",
            "name": "",
            "range": [
                454,
                461
            ],
            "children": [
                {
                    "type": "AssignmentExpression",
                    "name": "=",
                    "range": [
                        457,
                        461
                    ],
                    "children": [
                        {
                            "type": "MemberExpression",
                            "name": "user_credit.time_now",
                            "range": [
                                454,
                                456
                            ],
                            "children": [],
                            "content": "is unaffected\n"
                        },
                        {
                            "type": "LambdaExpression",
                            "name": "",
                            "range": [
                                458,
                                461
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "month2",
                                    "range": [
                                        460,
                                        460
                                    ],
                                    "children": [],
                                    "content": "="
                                }
                            ],
                            "content": ".time_now=lambda"
                        }
                    ],
                    "content": "user_credit.time_now=lambda"
                }
            ],
            "content": "is unaffected\nuser_credit.time_now=lambda"
        },
        {
            "type": "ExpressionStatement",
            "name": "",
            "range": [
                462,
                473
            ],
            "children": [
                {
                    "type": "AssertStatement",
                    "name": "",
                    "range": [
                        462,
                        473
                    ],
                    "children": [
                        {
                            "type": "BinaryExpression",
                            "name": "==",
                            "range": [
                                470,
                                473
                            ],
                            "children": [
                                {
                                    "type": "AwaitExpression",
                                    "name": "",
                                    "range": [
                                        463,
                                        469
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "user_credit.get_or_refill_credit",
                                            "range": [
                                                464,
                                                469
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "DEFAULT_USER_ID",
                                                    "range": [
                                                        468,
                                                        468
                                                    ],
                                                    "children": [],
                                                    "content": "."
                                                }
                                            ],
                                            "content": "\nassert await user_credit.get_or_refill_credit"
                                        }
                                    ],
                                    "content": "month2\nassert await user_credit.get_or_refill_credit"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "month2credit",
                                    "range": [
                                        472,
                                        472
                                    ],
                                    "children": [],
                                    "content": ")"
                                }
                            ],
                            "content": "(DEFAULT_USER_ID)="
                        }
                    ],
                    "content": ":month2\nassert await user_credit.get_or_refill_credit(DEFAULT_USER_ID)="
                }
            ],
            "content": ":month2\nassert await user_credit.get_or_refill_credit(DEFAULT_USER_ID)="
        }
    ],
    "content": "from datetime import datetime\n\nimport pytest\nfrom prisma.models import CreditTransaction\n\nfrom backend.blocks.llm import AITextGeneratorBlock\nfrom backend.data.credit import UserCredit\nfrom backend.data.user import DEFAULT_USER_ID\nfrom backend.integrations.credentials_store import openai_credentials\nfrom backend.util.test import SpinTestServer\n\nREFILL_VALUE=1000\nuser_credit=UserCredit(REFILL_VALUE)\n\n\n@pytest.mark.asyncio(scope=\"session\")\nasync def test_block_credit_usage(server:SpinTestServer):\ncurrent_credit=await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\n\nspending_amount_1=await user_credit.spend_credits(\nDEFAULT_USER_ID,\ncurrent_credit,\nAITextGeneratorBlock().id,\n{\n\"model\":\"gpt-4-turbo\",\n\"credentials\":{\n\"id\":openai_credentials.id,\n\"provider\":openai_credentials.provider,\n\"type\":openai_credentials.type,\n},\n},\n0.0,\n0.0,\nvalidate_balance=False,\n)\nassert spending_amount_1>0\n\nspending_amount_2=await user_credit.spend_credits(\nDEFAULT_USER_ID,\ncurrent_credit,\nAITextGeneratorBlock().id,\n{\"model\":\"gpt-4-turbo\",\"api_key\":\"owned_api_key\"},\n0.0,\n0.0,\nvalidate_balance=False,\n)\nassert spending_amount_2==0\n\nnew_credit=await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\nassert new_credit==current_credit-spending_amount_1-spending_amount_2\n\n\n@pytest.mark.asyncio(scope=\"session\")\nasync def test_block_credit_top_up(server:SpinTestServer):\ncurrent_credit=await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\n\nawait user_credit.top_up_credits(DEFAULT_USER_ID,100)\n\nnew_credit=await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\nassert new_credit==current_credit+100\n\n\n@pytest.mark.asyncio(scope=\"session\")\nasync def test_block_credit_reset(server:SpinTestServer):\nmonth1=datetime(2022,1,15)\nmonth2=datetime(2022,2,15)\n\nuser_credit.time_now=lambda:month2\nmonth2credit=await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\n\n#Month1result should only affect month1\nuser_credit.time_now=lambda:month1\nmonth1credit=await user_credit.get_or_refill_credit(DEFAULT_USER_ID)\nawait user_credit.top_up_credits(DEFAULT_USER_ID,100)\nassert await user_credit.get_or_refill_credit(DEFAULT_USER_ID)==month1credit+100\n\n#Month2balance is unaffected\nuser_credit.time_now=lambda:month2\nassert await user_credit.get_or_refill_credit(DEFAULT_USER_ID)=="
}