{
    "type": "Program",
    "name": "Global",
    "range": [
        0,
        960
    ],
    "children": [
        {
            "type": "ImportDeclaration",
            "name": "contextlib",
            "range": [
                0,
                2
            ],
            "children": [],
            "content": "import contextlib\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "logging",
            "range": [
                3,
                5
            ],
            "children": [],
            "content": "import logging\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "typing",
            "range": [
                6,
                8
            ],
            "children": [],
            "content": "import typing\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "fastapi",
            "range": [
                10,
                12
            ],
            "children": [],
            "content": "import fastapi\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "fastapi.responses",
            "range": [
                13,
                17
            ],
            "children": [],
            "content": "import fastapi.responses\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "starlette.middleware.cors",
            "range": [
                18,
                24
            ],
            "children": [],
            "content": "import starlette.middleware.cors\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "uvicorn",
            "range": [
                25,
                27
            ],
            "children": [],
            "content": "import uvicorn\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "autogpt_libs.feature_flag.client",
            "range": [
                28,
                44
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "initialize_launchdarkly",
                    "range": [
                        37,
                        38
                    ],
                    "children": [],
                    "content": "initialize_launchdarkly,"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "shutdown_launchdarkly",
                    "range": [
                        40,
                        41
                    ],
                    "children": [],
                    "content": "shutdown_launchdarkly,"
                }
            ],
            "content": "from autogpt_libs.feature_flag.client import(\ninitialize_launchdarkly,\nshutdown_launchdarkly,\n)\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "backend.data.block",
            "range": [
                46,
                52
            ],
            "children": [],
            "content": "import backend.data.block\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "backend.data.db",
            "range": [
                53,
                59
            ],
            "children": [],
            "content": "import backend.data.db\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "backend.data.graph",
            "range": [
                60,
                66
            ],
            "children": [],
            "content": "import backend.data.graph\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "backend.data.user",
            "range": [
                67,
                73
            ],
            "children": [],
            "content": "import backend.data.user\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "backend.server.routers.v1",
            "range": [
                74,
                82
            ],
            "children": [],
            "content": "import backend.server.routers.v1\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "backend.server.v2.library.routes",
            "range": [
                83,
                93
            ],
            "children": [],
            "content": "import backend.server.v2.library.routes\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "backend.server.v2.store.routes",
            "range": [
                94,
                104
            ],
            "children": [],
            "content": "import backend.server.v2.store.routes\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "backend.util.service",
            "range": [
                105,
                111
            ],
            "children": [],
            "content": "import backend.util.service\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "backend.util.settings",
            "range": [
                112,
                118
            ],
            "children": [],
            "content": "import backend.util.settings\n"
        },
        {
            "type": "FunctionDecl",
            "name": "launch_darkly_context",
            "range": [
                162,
                208
            ],
            "children": [
                {
                    "type": "BlockStatement",
                    "range": [
                        167,
                        208
                    ],
                    "children": [
                        {
                            "type": "IfStatement",
                            "range": [
                                168,
                                185
                            ],
                            "children": [
                                {
                                    "type": "BinaryExpression",
                                    "operator": "!=",
                                    "range": [
                                        169,
                                        184
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "object": {
                                                "type": "MemberExpression",
                                                "object": {
                                                    "type": "Identifier",
                                                    "name": "settings",
                                                    "range": [
                                                        169,
                                                        170
                                                    ],
                                                    "content": "if settings"
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "config",
                                                    "range": [
                                                        171,
                                                        172
                                                    ],
                                                    "content": ".config"
                                                },
                                                "range": [
                                                    169,
                                                    172
                                                ],
                                                "content": "if settings.config"
                                            },
                                            "property": {
                                                "type": "Identifier",
                                                "name": "app_env",
                                                "range": [
                                                    173,
                                                    174
                                                ],
                                                "content": ".app_env"
                                            },
                                            "range": [
                                                169,
                                                174
                                            ],
                                            "content": "if settings.config.app_env"
                                        },
                                        {
                                            "type": "MemberExpression",
                                            "object": {
                                                "type": "MemberExpression",
                                                "object": {
                                                    "type": "MemberExpression",
                                                    "object": {
                                                        "type": "Identifier",
                                                        "name": "backend",
                                                        "range": [
                                                            176,
                                                            177
                                                        ],
                                                        "content": "=backend"
                                                    },
                                                    "property": {
                                                        "type": "Identifier",
                                                        "name": "util",
                                                        "range": [
                                                            178,
                                                            179
                                                        ],
                                                        "content": ".util"
                                                    },
                                                    "range": [
                                                        176,
                                                        179
                                                    ],
                                                    "content": "=backend.util"
                                                },
                                                "property": {
                                                    "type": "Identifier",
                                                    "name": "settings",
                                                    "range": [
                                                        180,
                                                        181
                                                    ],
                                                    "content": ".settings"
                                                },
                                                "range": [
                                                    176,
                                                    181
                                                ],
                                                "content": "=backend.util.settings"
                                            },
                                            "property": {
                                                "type": "Identifier",
                                                "name": "AppEnvironment",
                                                "range": [
                                                    182,
                                                    183
                                                ],
                                                "content": ".AppEnvironment"
                                            },
                                            "range": [
                                                176,
                                                183
                                            ],
                                            "content": "=backend.util.settings.AppEnvironment"
                                        }
                                    ],
                                    "content": "if settings.config.app_env!=backend.util.settings.AppEnvironment."
                                },
                                {
                                    "type": "BlockStatement",
                                    "range": [
                                        186,
                                        190
                                    ],
                                    "children": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "initialize_launchdarkly",
                                                    "range": [
                                                        187,
                                                        188
                                                    ],
                                                    "content": "\ninitialize_launchdarkly"
                                                },
                                                "arguments": [],
                                                "range": [
                                                    187,
                                                    189
                                                ],
                                                "content": "\ninitialize_launchdarkly("
                                            },
                                            "range": [
                                                187,
                                                190
                                            ],
                                            "content": "\ninitialize_launchdarkly()"
                                        }
                                    ],
                                    "content": ":\ninitialize_launchdarkly()"
                                }
                            ],
                            "content": "\nif settings.config.app_env!=backend.util.settings.AppEnvironment.LOCAL"
                        },
                        {
                            "type": "TryStatement",
                            "range": [
                                191,
                                202
                            ],
                            "children": [
                                {
                                    "type": "BlockStatement",
                                    "range": [
                                        193,
                                        195
                                    ],
                                    "children": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "YieldExpression",
                                                "argument": null,
                                                "range": [
                                                    194,
                                                    195
                                                ],
                                                "content": "\nyield"
                                            },
                                            "range": [
                                                194,
                                                195
                                            ],
                                            "content": "\nyield"
                                        }
                                    ],
                                    "content": ":\nyield"
                                },
                                {
                                    "type": "BlockStatement",
                                    "range": [
                                        197,
                                        202
                                    ],
                                    "children": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                    "type": "Identifier",
                                                    "name": "shutdown_launchdarkly",
                                                    "range": [
                                                        199,
                                                        200
                                                    ],
                                                    "content": "\nshutdown_launchdarkly"
                                                },
                                                "arguments": [],
                                                "range": [
                                                    199,
                                                    201
                                                ],
                                                "content": "\nshutdown_launchdarkly("
                                            },
                                            "range": [
                                                199,
                                                202
                                            ],
                                            "content": "\nshutdown_launchdarkly()"
                                        }
                                    ],
                                    "content": "finally:\nshutdown_launchdarkly()"
                                }
                            ],
                            "content": "\ntry:\nyield\nfinally:\nshutdown_launchdarkly()"
                        },
                        {
                            "type": "BlockStatement",
                            "range": [
                                204,
                                207
                            ],
                            "children": [
                                {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "YieldExpression",
                                        "argument": null,
                                        "range": [
                                            206,
                                            207
                                        ],
                                        "content": "\nyield"
                                    },
                                    "range": [
                                        206,
                                        207
                                    ],
                                    "content": "\nyield"
                                }
                            ],
                            "content": "else:\nyield"
                        }
                    ],
                    "content": ":\nif settings.config.app_env!=backend.util.settings.AppEnvironment.LOCAL:\ninitialize_launchdarkly()\ntry:\nyield\nfinally:\nshutdown_launchdarkly()\nelse:\nyield\n"
                }
            ],
            "content": "\ndef launch_darkly_context():\nif settings.config.app_env!=backend.util.settings.AppEnvironment.LOCAL:\ninitialize_launchdarkly()\ntry:\nyield\nfinally:\nshutdown_launchdarkly()\nelse:\nyield\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "contextlib.asynccontextmanager",
            "range": [
                209,
                213
            ],
            "children": [],
            "content": "\n\n@contextlib."
        },
        {
            "type": "FunctionDeclaration",
            "name": "lifespan_context",
            "range": [
                214,
                289
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "app",
                    "range": [
                        218,
                        223
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "fastapi.FastAPI",
                            "range": [
                                220,
                                223
                            ],
                            "children": [],
                            "content": "app:fastapi."
                        }
                    ],
                    "content": "lifespan_context(app:fastapi."
                },
                {
                    "type": "AwaitExpression",
                    "name": "backend.data.db.connect",
                    "range": [
                        226,
                        236
                    ],
                    "children": [],
                    "content": ":\nawait backend.data.db.connect("
                },
                {
                    "type": "AwaitExpression",
                    "name": "backend.data.block.initialize_blocks",
                    "range": [
                        237,
                        247
                    ],
                    "children": [],
                    "content": ")\nawait backend.data.block.initialize_blocks("
                },
                {
                    "type": "AwaitExpression",
                    "name": "backend.data.user.migrate_and_encrypt_user_integrations",
                    "range": [
                        248,
                        258
                    ],
                    "children": [],
                    "content": ")\nawait backend.data.user.migrate_and_encrypt_user_integrations("
                },
                {
                    "type": "AwaitExpression",
                    "name": "backend.data.graph.fix_llm_provider_credentials",
                    "range": [
                        259,
                        269
                    ],
                    "children": [],
                    "content": ")\nawait backend.data.graph.fix_llm_provider_credentials("
                },
                {
                    "type": "WithStatement",
                    "name": "launch_darkly_context",
                    "range": [
                        270,
                        277
                    ],
                    "children": [
                        {
                            "type": "YieldExpression",
                            "name": "",
                            "range": [
                                276,
                                277
                            ],
                            "children": [],
                            "content": ":\n"
                        }
                    ],
                    "content": ")\nwith launch_darkly_context():\n"
                },
                {
                    "type": "AwaitExpression",
                    "name": "backend.data.db.disconnect",
                    "range": [
                        278,
                        288
                    ],
                    "children": [],
                    "content": "yield\nawait backend.data.db.disconnect("
                }
            ],
            "content": "asynccontextmanager\nasync def lifespan_context(app:fastapi.FastAPI):\nawait backend.data.db.connect()\nawait backend.data.block.initialize_blocks()\nawait backend.data.user.migrate_and_encrypt_user_integrations()\nawait backend.data.graph.fix_llm_provider_credentials()\nwith launch_darkly_context():\nyield\nawait backend.data.db.disconnect()"
        },
        {
            "type": "VariableDeclaration",
            "name": "docs_url",
            "range": [
                290,
                294
            ],
            "children": [
                {
                    "type": "AssignmentExpression",
                    "name": "=",
                    "range": [
                        291,
                        294
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "\"/docs\"",
                            "range": [
                                294,
                                294
                            ],
                            "children": [],
                            "content": "="
                        }
                    ],
                    "content": "\n\ndocs_url="
                }
            ],
            "content": "\n\n\ndocs_url="
        },
        {
            "type": "IfStatement",
            "name": "",
            "range": [
                296,
                313
            ],
            "children": [
                {
                    "type": "BinaryExpression",
                    "name": "==",
                    "range": [
                        297,
                        312
                    ],
                    "children": [
                        {
                            "type": "MemberExpression",
                            "name": ".",
                            "range": [
                                297,
                                301
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "settings",
                                    "range": [
                                        297,
                                        297
                                    ],
                                    "children": [],
                                    "content": "\"/docs\""
                                },
                                {
                                    "type": "Identifier",
                                    "name": "config",
                                    "range": [
                                        299,
                                        299
                                    ],
                                    "children": [],
                                    "content": "if"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "app_env",
                                    "range": [
                                        301,
                                        301
                                    ],
                                    "children": [],
                                    "content": "."
                                }
                            ],
                            "content": "\"/docs\"\nif settings."
                        },
                        {
                            "type": "MemberExpression",
                            "name": ".",
                            "range": [
                                305,
                                312
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "backend",
                                    "range": [
                                        305,
                                        305
                                    ],
                                    "children": [],
                                    "content": "="
                                },
                                {
                                    "type": "Identifier",
                                    "name": "util",
                                    "range": [
                                        307,
                                        307
                                    ],
                                    "children": [],
                                    "content": "backend"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "settings",
                                    "range": [
                                        309,
                                        309
                                    ],
                                    "children": [],
                                    "content": "util"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "AppEnvironment",
                                    "range": [
                                        310,
                                        310
                                    ],
                                    "children": [],
                                    "content": "."
                                },
                                {
                                    "type": "Identifier",
                                    "name": "LOCAL",
                                    "range": [
                                        312,
                                        312
                                    ],
                                    "children": [],
                                    "content": "."
                                }
                            ],
                            "content": "==backend.util.settings."
                        }
                    ],
                    "content": "\"/docs\"\nif settings.config.app_env==backend.util.settings."
                }
            ],
            "content": "\n\"/docs\"\nif settings.config.app_env==backend.util.settings.AppEnvironment"
        },
        {
            "type": "ElseStatement",
            "name": "",
            "range": [
                314,
                315
            ],
            "children": [
                {
                    "type": "Literal",
                    "name": "None",
                    "range": [
                        315,
                        315
                    ],
                    "children": [],
                    "content": "LOCAL"
                }
            ],
            "content": ".LOCAL"
        },
        {
            "type": "VariableDeclaration",
            "name": "app",
            "range": [
                319,
                363
            ],
            "children": [
                {
                    "type": "AssignmentExpression",
                    "name": "",
                    "range": [
                        320,
                        362
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "FastAPI",
                            "range": [
                                321,
                                362
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": "",
                                    "range": [
                                        321,
                                        323
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "fastapi",
                                            "range": [
                                                321,
                                                321
                                            ],
                                            "content": "\n"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "FastAPI",
                                            "range": [
                                                323,
                                                323
                                            ],
                                            "content": "app"
                                        }
                                    ],
                                    "content": "\n\napp"
                                },
                                {
                                    "type": "ObjectExpression",
                                    "name": "",
                                    "range": [
                                        324,
                                        362
                                    ],
                                    "children": [
                                        {
                                            "type": "Property",
                                            "name": "title",
                                            "range": [
                                                326,
                                                328
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "\"AutoGPT Agent Server\"",
                                                    "range": [
                                                        328,
                                                        328
                                                    ],
                                                    "content": "("
                                                }
                                            ],
                                            "content": ".FastAPI("
                                        },
                                        {
                                            "type": "Property",
                                            "name": "description",
                                            "range": [
                                                331,
                                                339
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "\"This server is used to execute agents that are created by the AutoGPT system.\"",
                                                    "range": [
                                                        333,
                                                        339
                                                    ],
                                                    "content": ",\ndescription=(\n\"This server is used to execute agents that are created by the \""
                                                }
                                            ],
                                            "content": "=\"AutoGPT Agent Server\",\ndescription=(\n\"This server is used to execute agents that are created by the \""
                                        },
                                        {
                                            "type": "Property",
                                            "name": "summary",
                                            "range": [
                                                342,
                                                344
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "\"AutoGPT Agent Server\"",
                                                    "range": [
                                                        344,
                                                        344
                                                    ],
                                                    "content": ","
                                                }
                                            ],
                                            "content": "\n),"
                                        },
                                        {
                                            "type": "Property",
                                            "name": "version",
                                            "range": [
                                                347,
                                                349
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "\"0.1\"",
                                                    "range": [
                                                        349,
                                                        349
                                                    ],
                                                    "content": ","
                                                }
                                            ],
                                            "content": "=\"AutoGPT Agent Server\","
                                        },
                                        {
                                            "type": "Property",
                                            "name": "lifespan",
                                            "range": [
                                                352,
                                                354
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "lifespan_context",
                                                    "range": [
                                                        354,
                                                        354
                                                    ],
                                                    "content": ","
                                                }
                                            ],
                                            "content": "=\"0.1\","
                                        },
                                        {
                                            "type": "Property",
                                            "name": "docs_url",
                                            "range": [
                                                357,
                                                359
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "docs_url",
                                                    "range": [
                                                        359,
                                                        359
                                                    ],
                                                    "content": ","
                                                }
                                            ],
                                            "content": "=lifespan_context,"
                                        }
                                    ],
                                    "content": "=fastapi.FastAPI(\ntitle=\"AutoGPT Agent Server\",\ndescription=(\n\"This server is used to execute agents that are created by the \"\n\"AutoGPT system.\"\n),\nsummary=\"AutoGPT Agent Server\",\nversion=\"0.1\",\nlifespan=lifespan_context,\ndocs_url="
                                }
                            ],
                            "content": "\n\napp=fastapi.FastAPI(\ntitle=\"AutoGPT Agent Server\",\ndescription=(\n\"This server is used to execute agents that are created by the \"\n\"AutoGPT system.\"\n),\nsummary=\"AutoGPT Agent Server\",\nversion=\"0.1\",\nlifespan=lifespan_context,\ndocs_url="
                        }
                    ],
                    "content": ")\n\napp=fastapi.FastAPI(\ntitle=\"AutoGPT Agent Server\",\ndescription=(\n\"This server is used to execute agents that are created by the \"\n\"AutoGPT system.\"\n),\nsummary=\"AutoGPT Agent Server\",\nversion=\"0.1\",\nlifespan=lifespan_context,\ndocs_url="
                }
            ],
            "content": "\n)\n\napp=fastapi.FastAPI(\ntitle=\"AutoGPT Agent Server\",\ndescription=(\n\"This server is used to execute agents that are created by the \"\n\"AutoGPT system.\"\n),\nsummary=\"AutoGPT Agent Server\",\nversion=\"0.1\",\nlifespan=lifespan_context,\ndocs_url=docs_url"
        },
        {
            "type": "FunctionDecl",
            "name": "handle_internal_http_error",
            "range": [
                364,
                378
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "status_code",
                    "range": [
                        367,
                        371
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "int",
                            "range": [
                                369,
                                369
                            ],
                            "children": [],
                            "content": "\n"
                        },
                        {
                            "type": "DefaultValue",
                            "name": "500",
                            "range": [
                                371,
                                371
                            ],
                            "children": [],
                            "content": "handle_internal_http_error"
                        }
                    ],
                    "content": "\n\n\ndef handle_internal_http_error"
                },
                {
                    "type": "Parameter",
                    "name": "log_error",
                    "range": [
                        373,
                        377
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "bool",
                            "range": [
                                375,
                                375
                            ],
                            "children": [],
                            "content": "int"
                        },
                        {
                            "type": "DefaultValue",
                            "name": "True",
                            "range": [
                                377,
                                377
                            ],
                            "children": [],
                            "content": "500"
                        }
                    ],
                    "content": "status_code:int=500"
                }
            ],
            "content": ",\n)\n\n\ndef handle_internal_http_error(status_code:int=500,"
        },
        {
            "type": "FunctionDecl",
            "name": "handler",
            "range": [
                381,
                446
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "request",
                    "range": [
                        384,
                        388
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "fastapi.Request",
                            "range": [
                                386,
                                388
                            ],
                            "children": [],
                            "content": "\ndef handler"
                        }
                    ],
                    "content": "):\ndef handler"
                },
                {
                    "type": "Parameter",
                    "name": "exc",
                    "range": [
                        390,
                        392
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "Exception",
                            "range": [
                                392,
                                392
                            ],
                            "children": [],
                            "content": "fastapi"
                        }
                    ],
                    "content": "request:fastapi"
                },
                {
                    "type": "IfStatement",
                    "name": "",
                    "range": [
                        396,
                        407
                    ],
                    "children": [
                        {
                            "type": "Condition",
                            "name": "log_error",
                            "range": [
                                397,
                                397
                            ],
                            "children": [],
                            "content": ":"
                        },
                        {
                            "type": "Block",
                            "name": "",
                            "range": [
                                399,
                                407
                            ],
                            "children": [
                                {
                                    "type": "ExpressionStatement",
                                    "name": "",
                                    "range": [
                                        400,
                                        406
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "logger.exception",
                                            "range": [
                                                400,
                                                406
                                            ],
                                            "children": [
                                                {
                                                    "type": "Argument",
                                                    "name": "",
                                                    "range": [
                                                        404,
                                                        405
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "TemplateLiteral",
                                                            "name": "",
                                                            "range": [
                                                                404,
                                                                405
                                                            ],
                                                            "children": [],
                                                            "content": ":\n"
                                                        }
                                                    ],
                                                    "content": ":\n"
                                                }
                                            ],
                                            "content": ":\nif log_error:\nlogger"
                                        }
                                    ],
                                    "content": ":\nif log_error:\nlogger"
                                }
                            ],
                            "content": "):\nif log_error:\nlogger."
                        }
                    ],
                    "content": "exc:Exception):\nif log_error:\nlogger."
                },
                {
                    "type": "ReturnStatement",
                    "name": "",
                    "range": [
                        408,
                        442
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "fastapi.responses.JSONResponse",
                            "range": [
                                409,
                                442
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "content",
                                    "range": [
                                        416,
                                        434
                                    ],
                                    "children": [
                                        {
                                            "type": "ObjectExpression",
                                            "name": "",
                                            "range": [
                                                418,
                                                434
                                            ],
                                            "children": [
                                                {
                                                    "type": "Property",
                                                    "name": "message",
                                                    "range": [
                                                        420,
                                                        423
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "TemplateLiteral",
                                                            "name": "",
                                                            "range": [
                                                                422,
                                                                423
                                                            ],
                                                            "children": [],
                                                            "content": "content="
                                                        }
                                                    ],
                                                    "content": "(\ncontent="
                                                },
                                                {
                                                    "type": "Property",
                                                    "name": "detail",
                                                    "range": [
                                                        426,
                                                        432
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "str",
                                                            "range": [
                                                                428,
                                                                432
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Argument",
                                                                    "name": "exc",
                                                                    "range": [
                                                                        430,
                                                                        430
                                                                    ],
                                                                    "children": [],
                                                                    "content": ","
                                                                }
                                                            ],
                                                            "content": "f \"{request.method} {request.url.path} failed\",\n\"detail\""
                                                        }
                                                    ],
                                                    "content": "\"message\":f \"{request.method} {request.url.path} failed\",\n\"detail\""
                                                }
                                            ],
                                            "content": ".JSONResponse(\ncontent={\n\"message\":f \"{request.method} {request.url.path} failed\",\n\"detail\":str"
                                        }
                                    ],
                                    "content": ".responses.JSONResponse(\ncontent={\n\"message\":f \"{request.method} {request.url.path} failed\",\n\"detail\":str"
                                },
                                {
                                    "type": "Argument",
                                    "name": "status_code",
                                    "range": [
                                        437,
                                        439
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "status_code",
                                            "range": [
                                                439,
                                                439
                                            ],
                                            "children": [],
                                            "content": "\n"
                                        }
                                    ],
                                    "content": "),\n"
                                }
                            ],
                            "content": "(f \"{request.method} {request.url.path} failed: {exc}\")\nreturn fastapi.responses.JSONResponse(\ncontent={\n\"message\":f \"{request.method} {request.url.path} failed\",\n\"detail\":str(exc),\n},\n"
                        }
                    ],
                    "content": "exception(f \"{request.method} {request.url.path} failed: {exc}\")\nreturn fastapi.responses.JSONResponse(\ncontent={\n\"message\":f \"{request.method} {request.url.path} failed\",\n\"detail\":str(exc),\n},\n"
                },
                {
                    "type": "ReturnStatement",
                    "name": "",
                    "range": [
                        445,
                        446
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "handler",
                            "range": [
                                446,
                                446
                            ],
                            "children": [],
                            "content": ","
                        }
                    ],
                    "content": "status_code,"
                }
            ],
            "content": "bool=True):\ndef handler(request:fastapi.Request,exc:Exception):\nif log_error:\nlogger.exception(f \"{request.method} {request.url.path} failed: {exc}\")\nreturn fastapi.responses.JSONResponse(\ncontent={\n\"message\":f \"{request.method} {request.url.path} failed\",\n\"detail\":str(exc),\n},\nstatus_code=status_code,"
        },
        {
            "type": "FunctionDecl",
            "name": "health",
            "range": [
                576,
                589
            ],
            "children": [
                {
                    "type": "FunctionSignature",
                    "name": "",
                    "range": [
                        576,
                        581
                    ],
                    "children": [
                        {
                            "type": "Keyword",
                            "name": "async",
                            "range": [
                                576,
                                581
                            ],
                            "children": [],
                            "content": "[\"health\"],dependencies="
                        },
                        {
                            "type": "Keyword",
                            "name": "def",
                            "range": [
                                577,
                                580
                            ],
                            "children": [],
                            "content": "\"health\"],dependencies"
                        },
                        {
                            "type": "Identifier",
                            "name": "health",
                            "range": [
                                578,
                                584
                            ],
                            "children": [],
                            "content": "],dependencies=[])"
                        }
                    ],
                    "content": "[\"health\"],dependencies="
                },
                {
                    "type": "FunctionBody",
                    "name": "",
                    "range": [
                        582,
                        589
                    ],
                    "children": [
                        {
                            "type": "ReturnStatement",
                            "name": "",
                            "range": [
                                583,
                                588
                            ],
                            "children": [
                                {
                                    "type": "Keyword",
                                    "name": "return",
                                    "range": [
                                        583,
                                        589
                                    ],
                                    "children": [],
                                    "content": "])\nasync def health("
                                },
                                {
                                    "type": "ObjectLiteral",
                                    "name": "",
                                    "range": [
                                        584,
                                        588
                                    ],
                                    "children": [
                                        {
                                            "type": "Property",
                                            "name": "status",
                                            "range": [
                                                585,
                                                587
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "\"status\"",
                                                    "range": [
                                                        585,
                                                        591
                                                    ],
                                                    "children": [],
                                                    "content": "\nasync def health():"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "name": "\"healthy\"",
                                                    "range": [
                                                        587,
                                                        595
                                                    ],
                                                    "children": [],
                                                    "content": "def health():\nreturn{\"status\""
                                                }
                                            ],
                                            "content": "\nasync def"
                                        }
                                    ],
                                    "content": ")\nasync def health"
                                }
                            ],
                            "content": "])\nasync def health"
                        }
                    ],
                    "content": "[])\nasync def health("
                }
            ],
            "content": "[\"health\"],dependencies=[])\nasync def health("
        },
        {
            "type": "ClassDecl",
            "name": "AgentServer",
            "range": [
                590,
                703
            ],
            "children": [
                {
                    "type": "MethodDecl",
                    "name": "run",
                    "range": [
                        603,
                        703
                    ],
                    "children": [
                        {
                            "type": "AssignmentExpression",
                            "name": "server_app",
                            "range": [
                                610,
                                662
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "CORSMiddleware",
                                    "range": [
                                        612,
                                        662
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "app",
                                            "range": [
                                                621,
                                                623
                                            ],
                                            "children": [],
                                            "content": "\nserver_app="
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "allow_origins",
                                            "range": [
                                                626,
                                                632
                                            ],
                                            "children": [],
                                            "content": "middleware.cors.CORSMiddleware(\n"
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "allow_credentials",
                                            "range": [
                                                635,
                                                637
                                            ],
                                            "children": [],
                                            "content": "app,\n"
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "allow_methods",
                                            "range": [
                                                640,
                                                644
                                            ],
                                            "children": [],
                                            "content": "settings.config.backend_cors_allow_origins"
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "allow_headers",
                                            "range": [
                                                651,
                                                655
                                            ],
                                            "children": [],
                                            "content": "\nallow_methods=[\"*\""
                                        }
                                    ],
                                    "content": "):\ndef run(self):\nserver_app=starlette.middleware.cors.CORSMiddleware(\napp=app,\nallow_origins=settings.config.backend_cors_allow_origins,\nallow_credentials=True,\nallow_methods=[\"*\"],#Allows all methods\n"
                                }
                            ],
                            "content": ".AppProcess):\ndef run(self):\nserver_app=starlette.middleware.cors.CORSMiddleware(\napp=app,\nallow_origins=settings.config.backend_cors_allow_origins,\nallow_credentials=True,\nallow_methods=[\"*\"],#Allows all methods\n"
                        },
                        {
                            "type": "CallExpression",
                            "name": "run",
                            "range": [
                                664,
                                702
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "server_app",
                                    "range": [
                                        669,
                                        669
                                    ],
                                    "children": [],
                                    "content": "#"
                                },
                                {
                                    "type": "Argument",
                                    "name": "host",
                                    "range": [
                                        672,
                                        684
                                    ],
                                    "children": [],
                                    "content": "headers\n)\nuvicorn.run(\nserver_app,\nhost"
                                },
                                {
                                    "type": "Argument",
                                    "name": "port",
                                    "range": [
                                        687,
                                        699
                                    ],
                                    "children": [],
                                    "content": ".util.settings.Config().agent_api_host,\nport"
                                }
                            ],
                            "content": "=[\"*\"],#Allows all headers\n)\nuvicorn.run(\nserver_app,\nhost=backend.util.settings.Config().agent_api_host,\nport=backend."
                        }
                    ],
                    "content": "AgentServer(backend.util.service.AppProcess):\ndef run(self):\nserver_app=starlette.middleware.cors.CORSMiddleware(\napp=app,\nallow_origins=settings.config.backend_cors_allow_origins,\nallow_credentials=True,\nallow_methods=[\"*\"],#Allows all methods\nallow_headers=[\"*\"],#Allows all headers\n)\nuvicorn.run(\nserver_app,\nhost=backend.util.settings.Config().agent_api_host,\nport=backend.util"
                }
            ],
            "content": "):\nreturn{\"status\":\"healthy\"}\n\n\nclass AgentServer(backend.util.service.AppProcess):\ndef run(self):\nserver_app=starlette.middleware.cors.CORSMiddleware(\napp=app,\nallow_origins=settings.config.backend_cors_allow_origins,\nallow_credentials=True,\nallow_methods=[\"*\"],#Allows all methods\nallow_headers=[\"*\"],#Allows all headers\n)\nuvicorn.run(\nserver_app,\nhost=backend.util.settings.Config().agent_api_host,\nport=backend.util"
        },
        {
            "type": "FunctionDecl",
            "name": "test_execute_graph",
            "range": [
                705,
                754
            ],
            "children": [
                {
                    "type": "ReturnStatement",
                    "name": "",
                    "range": [
                        737,
                        753
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "execute_graph",
                            "range": [
                                738,
                                753
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "graph_id",
                                    "range": [
                                        748,
                                        748
                                    ],
                                    "children": [],
                                    "content": "\n"
                                },
                                {
                                    "type": "Argument",
                                    "name": "node_input",
                                    "range": [
                                        750,
                                        750
                                    ],
                                    "children": [],
                                    "content": "backend"
                                },
                                {
                                    "type": "Argument",
                                    "name": "user_id",
                                    "range": [
                                        752,
                                        752
                                    ],
                                    "children": [],
                                    "content": "server"
                                }
                            ],
                            "content": ".Any],user_id:str\n):\nreturn backend.server."
                        }
                    ],
                    "content": "typing.Any],user_id:str\n):\nreturn backend.server."
                }
            ],
            "content": "settings.Config().agent_api_port,\n)\n\n@staticmethod\nasync def test_execute_graph(\ngraph_id:str,node_input:dict[typing.Any,typing.Any],user_id:str\n):\nreturn backend.server.routers"
        },
        {
            "type": "FunctionDecl",
            "name": "test_create_graph",
            "range": [
                756,
                801
            ],
            "children": [
                {
                    "type": "ReturnStatement",
                    "name": "",
                    "range": [
                        785,
                        800
                    ],
                    "children": [
                        {
                            "type": "AwaitExpression",
                            "name": "",
                            "range": [
                                786,
                                800
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "create_new_graph",
                                    "range": [
                                        787,
                                        800
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "create_graph",
                                            "range": [
                                                797,
                                                797
                                            ],
                                            "children": [],
                                            "content": "return"
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "user_id",
                                            "range": [
                                                799,
                                                799
                                            ],
                                            "children": [],
                                            "content": "backend"
                                        }
                                    ],
                                    "content": ",\nuser_id:str,\n):\nreturn await backend."
                                }
                            ],
                            "content": "CreateGraph,\nuser_id:str,\n):\nreturn await backend."
                        }
                    ],
                    "content": ".CreateGraph,\nuser_id:str,\n):\nreturn await backend."
                }
            ],
            "content": "v1.execute_graph(graph_id,node_input,user_id)\n\n@staticmethod\nasync def test_create_graph(\ncreate_graph:backend.server.routers.v1.CreateGraph,\nuser_id:str,\n):\nreturn await backend.server"
        },
        {
            "type": "FunctionDecl",
            "name": "test_get_graph_run_status",
            "range": [
                803,
                858
            ],
            "children": [
                {
                    "type": "VariableDecl",
                    "name": "execution",
                    "range": [
                        820,
                        840
                    ],
                    "children": [
                        {
                            "type": "AwaitExpression",
                            "name": "",
                            "range": [
                                822,
                                840
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "get_execution",
                                    "range": [
                                        823,
                                        840
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "user_id",
                                            "range": [
                                                834,
                                                834
                                            ],
                                            "children": [],
                                            "content": "await"
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "execution_id",
                                            "range": [
                                                838,
                                                838
                                            ],
                                            "children": [],
                                            "content": "."
                                        }
                                    ],
                                    "content": ":str,user_id:str):\nexecution=await backend.data.graph."
                                }
                            ],
                            "content": "graph_exec_id:str,user_id:str):\nexecution=await backend.data.graph."
                        }
                    ],
                    "content": "test_get_graph_run_status(graph_exec_id:str,user_id:str):\nexecution=await backend.data.graph."
                },
                {
                    "type": "IfStatement",
                    "name": "",
                    "range": [
                        842,
                        853
                    ],
                    "children": [
                        {
                            "type": "UnaryExpression",
                            "name": "not",
                            "range": [
                                843,
                                844
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "execution",
                                    "range": [
                                        844,
                                        844
                                    ],
                                    "children": [],
                                    "content": "user_id"
                                }
                            ],
                            "content": "\nuser_id"
                        },
                        {
                            "type": "ThrowStatement",
                            "name": "",
                            "range": [
                                847,
                                852
                            ],
                            "children": [
                                {
                                    "type": "NewExpression",
                                    "name": "ValueError",
                                    "range": [
                                        848,
                                        852
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "",
                                            "range": [
                                                850,
                                                851
                                            ],
                                            "children": [],
                                            "content": "graph_exec_id\n"
                                        }
                                    ],
                                    "content": "execution_id=graph_exec_id\n)"
                                }
                            ],
                            "content": ",execution_id=graph_exec_id\n)"
                        }
                    ],
                    "content": "(\nuser_id=user_id,execution_id=graph_exec_id\n)\n"
                },
                {
                    "type": "ReturnStatement",
                    "name": "",
                    "range": [
                        854,
                        858
                    ],
                    "children": [
                        {
                            "type": "MemberExpression",
                            "name": "status",
                            "range": [
                                855,
                                858
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "execution",
                                    "range": [
                                        855,
                                        855
                                    ],
                                    "children": [],
                                    "content": "not"
                                }
                            ],
                            "content": "not execution:\n"
                        }
                    ],
                    "content": "if not execution:\n"
                }
            ],
            "content": "routers.v1.create_new_graph(create_graph,user_id)\n\n@staticmethod\nasync def test_get_graph_run_status(graph_exec_id:str,user_id:str):\nexecution=await backend.data.graph.get_execution(\nuser_id=user_id,execution_id=graph_exec_id\n)\nif not execution:\n"
        },
        {
            "type": "FunctionDecl",
            "name": "test_get_graph_run_node_execution_results",
            "range": [
                860,
                903
            ],
            "children": [
                {
                    "type": "ReturnStatement",
                    "name": "",
                    "range": [
                        883,
                        902
                    ],
                    "children": [
                        {
                            "type": "AwaitExpression",
                            "name": "",
                            "range": [
                                884,
                                902
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "get_graph_run_node_execution_results",
                                    "range": [
                                        885,
                                        902
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "graph_id",
                                            "range": [
                                                896,
                                                896
                                            ],
                                            "children": [],
                                            "content": "await"
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "graph_exec_id",
                                            "range": [
                                                898,
                                                898
                                            ],
                                            "children": [],
                                            "content": "."
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "user_id",
                                            "range": [
                                                900,
                                                900
                                            ],
                                            "children": [],
                                            "content": "."
                                        }
                                    ],
                                    "content": ":str,user_id:str\n):\nreturn await backend.server.routers."
                                }
                            ],
                            "content": "graph_exec_id:str,user_id:str\n):\nreturn await backend.server.routers."
                        }
                    ],
                    "content": ",graph_exec_id:str,user_id:str\n):\nreturn await backend.server.routers."
                }
            ],
            "content": "ValueError(f \"Execution {graph_exec_id} not found\")\nreturn execution.status\n\n@staticmethod\nasync def test_get_graph_run_node_execution_results(\ngraph_id:str,graph_exec_id:str,user_id:str\n):\nreturn await backend.server.routers.v1"
        },
        {
            "type": "FunctionDecl",
            "name": "test_delete_graph",
            "range": [
                905,
                938
            ],
            "children": [
                {
                    "type": "ReturnStatement",
                    "name": "",
                    "range": [
                        922,
                        937
                    ],
                    "children": [
                        {
                            "type": "AwaitExpression",
                            "name": "",
                            "range": [
                                923,
                                937
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "delete_graph",
                                    "range": [
                                        924,
                                        937
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "graph_id",
                                            "range": [
                                                934,
                                                934
                                            ],
                                            "children": [],
                                            "content": "return"
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "user_id",
                                            "range": [
                                                936,
                                                936
                                            ],
                                            "children": [],
                                            "content": "backend"
                                        }
                                    ],
                                    "content": "graph_id:str,user_id:str):\nreturn await backend."
                                }
                            ],
                            "content": "(graph_id:str,user_id:str):\nreturn await backend."
                        }
                    ],
                    "content": "test_delete_graph(graph_id:str,user_id:str):\nreturn await backend."
                }
            ],
            "content": "get_graph_run_node_execution_results(\ngraph_id,graph_exec_id,user_id\n)\n\n@staticmethod\nasync def test_delete_graph(graph_id:str,user_id:str):\nreturn await backend.server"
        },
        {
            "type": "FunctionDecl",
            "name": "set_test_dependency_overrides",
            "range": [
                940,
                960
            ],
            "children": [
                {
                    "type": "ExpressionStatement",
                    "name": "",
                    "range": [
                        951,
                        959
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "update",
                            "range": [
                                955,
                                959
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "overrides",
                                    "range": [
                                        957,
                                        957
                                    ],
                                    "children": [],
                                    "content": "overrides"
                                }
                            ],
                            "content": "self,overrides:dict"
                        }
                    ],
                    "content": "\ndef set_test_dependency_overrides(self,overrides:dict"
                }
            ],
            "content": "routers.v1.delete_graph(graph_id,user_id)\n\ndef set_test_dependency_overrides(self,overrides:dict)"
        }
    ],
    "content": "import contextlib\nimport logging\nimport typing\n\nimport fastapi\nimport fastapi.responses\nimport starlette.middleware.cors\nimport uvicorn\nfrom autogpt_libs.feature_flag.client import(\ninitialize_launchdarkly,\nshutdown_launchdarkly,\n)\n\nimport backend.data.block\nimport backend.data.db\nimport backend.data.graph\nimport backend.data.user\nimport backend.server.routers.v1\nimport backend.server.v2.library.routes\nimport backend.server.v2.store.routes\nimport backend.util.service\nimport backend.util.settings\n\nsettings=backend.util.settings.Settings()\nlogger=logging.getLogger(__name__)\n\nlogging.getLogger(\"autogpt_libs\").setLevel(logging.INFO)\n\n\n@contextlib.contextmanager\ndef launch_darkly_context():\nif settings.config.app_env!=backend.util.settings.AppEnvironment.LOCAL:\ninitialize_launchdarkly()\ntry:\nyield\nfinally:\nshutdown_launchdarkly()\nelse:\nyield\n\n\n@contextlib.asynccontextmanager\nasync def lifespan_context(app:fastapi.FastAPI):\nawait backend.data.db.connect()\nawait backend.data.block.initialize_blocks()\nawait backend.data.user.migrate_and_encrypt_user_integrations()\nawait backend.data.graph.fix_llm_provider_credentials()\nwith launch_darkly_context():\nyield\nawait backend.data.db.disconnect()\n\n\ndocs_url=(\n\"/docs\"\nif settings.config.app_env==backend.util.settings.AppEnvironment.LOCAL\nelse None\n)\n\napp=fastapi.FastAPI(\ntitle=\"AutoGPT Agent Server\",\ndescription=(\n\"This server is used to execute agents that are created by the \"\n\"AutoGPT system.\"\n),\nsummary=\"AutoGPT Agent Server\",\nversion=\"0.1\",\nlifespan=lifespan_context,\ndocs_url=docs_url,\n)\n\n\ndef handle_internal_http_error(status_code:int=500,log_error:bool=True):\ndef handler(request:fastapi.Request,exc:Exception):\nif log_error:\nlogger.exception(f \"{request.method} {request.url.path} failed: {exc}\")\nreturn fastapi.responses.JSONResponse(\ncontent={\n\"message\":f \"{request.method} {request.url.path} failed\",\n\"detail\":str(exc),\n},\nstatus_code=status_code,\n)\n\nreturn handler\n\n\napp.add_exception_handler(ValueError,handle_internal_http_error(400))\napp.add_exception_handler(Exception,handle_internal_http_error(500))\napp.include_router(backend.server.routers.v1.v1_router,tags=[\"v1\"],prefix=\"/api\")\napp.include_router(\nbackend.server.v2.store.routes.router,tags=[\"v2\"],prefix=\"/api/store\"\n)\napp.include_router(\nbackend.server.v2.library.routes.router,tags=[\"v2\"],prefix=\"/api/library\"\n)\n\n\n@app.get(path=\"/health\",tags=[\"health\"],dependencies=[])\nasync def health():\nreturn{\"status\":\"healthy\"}\n\n\nclass AgentServer(backend.util.service.AppProcess):\ndef run(self):\nserver_app=starlette.middleware.cors.CORSMiddleware(\napp=app,\nallow_origins=settings.config.backend_cors_allow_origins,\nallow_credentials=True,\nallow_methods=[\"*\"],#Allows all methods\nallow_headers=[\"*\"],#Allows all headers\n)\nuvicorn.run(\nserver_app,\nhost=backend.util.settings.Config().agent_api_host,\nport=backend.util.settings.Config().agent_api_port,\n)\n\n@staticmethod\nasync def test_execute_graph(\ngraph_id:str,node_input:dict[typing.Any,typing.Any],user_id:str\n):\nreturn backend.server.routers.v1.execute_graph(graph_id,node_input,user_id)\n\n@staticmethod\nasync def test_create_graph(\ncreate_graph:backend.server.routers.v1.CreateGraph,\nuser_id:str,\n):\nreturn await backend.server.routers.v1.create_new_graph(create_graph,user_id)\n\n@staticmethod\nasync def test_get_graph_run_status(graph_exec_id:str,user_id:str):\nexecution=await backend.data.graph.get_execution(\nuser_id=user_id,execution_id=graph_exec_id\n)\nif not execution:\nraise ValueError(f \"Execution {graph_exec_id} not found\")\nreturn execution.status\n\n@staticmethod\nasync def test_get_graph_run_node_execution_results(\ngraph_id:str,graph_exec_id:str,user_id:str\n):\nreturn await backend.server.routers.v1.get_graph_run_node_execution_results(\ngraph_id,graph_exec_id,user_id\n)\n\n@staticmethod\nasync def test_delete_graph(graph_id:str,user_id:str):\nreturn await backend.server.routers.v1.delete_graph(graph_id,user_id)\n\ndef set_test_dependency_overrides(self,overrides:dict)"
}