{
    "type": "Program",
    "name": "Global",
    "range": [
        0,
        282
    ],
    "children": [
        {
            "type": "ClassDecl",
            "name": "GithubTriggerExample",
            "range": [
                85,
                96
            ],
            "children": [],
            "content": "\n#--8<--[start:GithubTriggerExample"
        },
        {
            "type": "ClassDecl",
            "name": "GitHubTriggerBase",
            "range": [
                98,
                101
            ],
            "children": [],
            "content": "\nclass GitHubTriggerBase:"
        },
        {
            "type": "ClassDecl",
            "name": "Input",
            "range": [
                102,
                144
            ],
            "children": [
                {
                    "type": "VariableDecl",
                    "name": "credentials",
                    "range": [
                        109,
                        117
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "GithubCredentialsInput",
                            "range": [
                                111,
                                111
                            ],
                            "children": [],
                            "content": ":"
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "=",
                            "range": [
                                112,
                                112
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "GithubCredentialsField",
                                    "range": [
                                        113,
                                        116
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "\"repo\"",
                                            "range": [
                                                115,
                                                115
                                            ],
                                            "children": [],
                                            "content": "("
                                        }
                                    ],
                                    "content": "=GithubCredentialsField(\"repo\""
                                }
                            ],
                            "content": "GithubCredentialsInput"
                        }
                    ],
                    "content": "\ncredentials:GithubCredentialsInput=GithubCredentialsField(\"repo\")"
                },
                {
                    "type": "VariableDecl",
                    "name": "repo",
                    "range": [
                        118,
                        144
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                120,
                                120
                            ],
                            "children": [],
                            "content": ":"
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "=",
                            "range": [
                                121,
                                121
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "SchemaField",
                                    "range": [
                                        122,
                                        143
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "description",
                                            "range": [
                                                125,
                                                135
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "\"Repository to subscribe to.\\n\\n\"",
                                                    "range": [
                                                        129,
                                                        129
                                                    ],
                                                    "children": [],
                                                    "content": "\n"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "name": "\"**Note:** Make sure your GitHub credentials have permissions \"",
                                                    "range": [
                                                        131,
                                                        131
                                                    ],
                                                    "children": [],
                                                    "content": "\n"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "name": "\"to create webhooks on this repo.\"",
                                                    "range": [
                                                        133,
                                                        133
                                                    ],
                                                    "children": [],
                                                    "content": "\n"
                                                }
                                            ],
                                            "content": "\ndescription=(\n\"Repository to subscribe to.\\n\\n\"\n\"**Note:** Make sure your GitHub credentials have permissions \"\n\"to create webhooks on this repo.\"\n"
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "placeholder",
                                            "range": [
                                                138,
                                                140
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "\"{owner}/{repo}\"",
                                                    "range": [
                                                        140,
                                                        140
                                                    ],
                                                    "children": [],
                                                    "content": "="
                                                }
                                            ],
                                            "content": "\nplaceholder="
                                        }
                                    ],
                                    "content": "=SchemaField(\ndescription=(\n\"Repository to subscribe to.\\n\\n\"\n\"**Note:** Make sure your GitHub credentials have permissions \"\n\"to create webhooks on this repo.\"\n),\nplaceholder=\"{owner}/{repo}\",\n"
                                }
                            ],
                            "content": "str"
                        }
                    ],
                    "content": "\nrepo:str=SchemaField(\ndescription=(\n\"Repository to subscribe to.\\n\\n\"\n\"**Note:** Make sure your GitHub credentials have permissions \"\n\"to create webhooks on this repo.\"\n),\nplaceholder=\"{owner}/{repo}\",\n)"
                }
            ],
            "content": "\nclass Input(BlockSchema):\ncredentials:GithubCredentialsInput=GithubCredentialsField(\"repo\")\nrepo:str=SchemaField(\ndescription=(\n\"Repository to subscribe to.\\n\\n\"\n\"**Note:** Make sure your GitHub credentials have permissions \"\n\"to create webhooks on this repo.\"\n),\nplaceholder=\"{owner}/{repo}\",\n)"
        },
        {
            "type": "VariableDecl",
            "name": "payload",
            "range": [
                162,
                177
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "dict",
                    "range": [
                        164,
                        164
                    ],
                    "children": [],
                    "content": ":"
                },
                {
                    "type": "AssignmentExpression",
                    "name": "=",
                    "range": [
                        165,
                        165
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                166,
                                176
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "hidden",
                                    "range": [
                                        168,
                                        170
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "True",
                                            "range": [
                                                170,
                                                170
                                            ],
                                            "children": [],
                                            "content": "="
                                        }
                                    ],
                                    "content": "(hidden="
                                },
                                {
                                    "type": "Argument",
                                    "name": "default",
                                    "range": [
                                        172,
                                        174
                                    ],
                                    "children": [
                                        {
                                            "type": "ObjectExpression",
                                            "name": "{}",
                                            "range": [
                                                174,
                                                175
                                            ],
                                            "children": [],
                                            "content": "={"
                                        }
                                    ],
                                    "content": ",default="
                                }
                            ],
                            "content": "=SchemaField(hidden=True,default={}"
                        }
                    ],
                    "content": "dict"
                }
            ],
            "content": "\npayload:dict=SchemaField(hidden=True,default={})"
        },
        {
            "type": "ClassDecl",
            "name": "Output",
            "range": [
                196,
                245
            ],
            "children": [
                {
                    "type": "VariableDecl",
                    "name": "payload",
                    "range": [
                        203,
                        219
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "dict",
                            "range": [
                                205,
                                205
                            ],
                            "children": [],
                            "content": ":"
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "=",
                            "range": [
                                206,
                                206
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "SchemaField",
                                    "range": [
                                        207,
                                        218
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "description",
                                            "range": [
                                                210,
                                                216
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "\"The complete webhook payload that was received from GitHub. \"",
                                                    "range": [
                                                        212,
                                                        212
                                                    ],
                                                    "children": [],
                                                    "content": "="
                                                },
                                                {
                                                    "type": "Literal",
                                                    "name": "\"Includes information about the affected resource (e.g. pull request), \"",
                                                    "range": [
                                                        214,
                                                        214
                                                    ],
                                                    "children": [],
                                                    "content": "\n"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "name": "\"the event, and the user who triggered the event.\"",
                                                    "range": [
                                                        216,
                                                        216
                                                    ],
                                                    "children": [],
                                                    "content": "\n"
                                                }
                                            ],
                                            "content": "\ndescription=\"The complete webhook payload that was received from GitHub. \"\n\"Includes information about the affected resource (e.g. pull request), \"\n"
                                        }
                                    ],
                                    "content": "=SchemaField(\ndescription=\"The complete webhook payload that was received from GitHub. \"\n\"Includes information about the affected resource (e.g. pull request), \"\n\"the event, and the user who triggered the event.\"\n"
                                }
                            ],
                            "content": "dict"
                        }
                    ],
                    "content": "\npayload:dict=SchemaField(\ndescription=\"The complete webhook payload that was received from GitHub. \"\n\"Includes information about the affected resource (e.g. pull request), \"\n\"the event, and the user who triggered the event.\"\n)"
                },
                {
                    "type": "VariableDecl",
                    "name": "triggered_by_user",
                    "range": [
                        220,
                        232
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "dict",
                            "range": [
                                222,
                                222
                            ],
                            "children": [],
                            "content": ":"
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "=",
                            "range": [
                                223,
                                223
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "SchemaField",
                                    "range": [
                                        224,
                                        231
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "description",
                                            "range": [
                                                227,
                                                229
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "\"Object representing the GitHub user who triggered the event\"",
                                                    "range": [
                                                        229,
                                                        229
                                                    ],
                                                    "children": [],
                                                    "content": "="
                                                }
                                            ],
                                            "content": "\ndescription="
                                        }
                                    ],
                                    "content": "=SchemaField(\ndescription=\"Object representing the GitHub user who triggered the event\"\n"
                                }
                            ],
                            "content": "dict"
                        }
                    ],
                    "content": "\ntriggered_by_user:dict=SchemaField(\ndescription=\"Object representing the GitHub user who triggered the event\"\n)"
                },
                {
                    "type": "VariableDecl",
                    "name": "error",
                    "range": [
                        233,
                        245
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                235,
                                235
                            ],
                            "children": [],
                            "content": ":"
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "=",
                            "range": [
                                236,
                                236
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "SchemaField",
                                    "range": [
                                        237,
                                        244
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "description",
                                            "range": [
                                                240,
                                                242
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "\"Error message if the payload could not be processed\"",
                                                    "range": [
                                                        242,
                                                        242
                                                    ],
                                                    "children": [],
                                                    "content": "="
                                                }
                                            ],
                                            "content": "\ndescription="
                                        }
                                    ],
                                    "content": "=SchemaField(\ndescription=\"Error message if the payload could not be processed\"\n"
                                }
                            ],
                            "content": "str"
                        }
                    ],
                    "content": "\nerror:str=SchemaField(\ndescription=\"Error message if the payload could not be processed\"\n)"
                }
            ],
            "content": "\nclass Output(BlockSchema):\npayload:dict=SchemaField(\ndescription=\"The complete webhook payload that was received from GitHub. \"\n\"Includes information about the affected resource (e.g. pull request), \"\n\"the event, and the user who triggered the event.\"\n)\ntriggered_by_user:dict=SchemaField(\ndescription=\"Object representing the GitHub user who triggered the event\"\n)\nerror:str=SchemaField(\ndescription=\"Error message if the payload could not be processed\"\n)"
        },
        {
            "type": "FunctionDecl",
            "name": "run",
            "range": [
                247,
                282
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "self",
                    "range": [
                        250,
                        250
                    ],
                    "children": [],
                    "content": "("
                },
                {
                    "type": "Parameter",
                    "name": "input_data",
                    "range": [
                        252,
                        254
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "Input",
                            "range": [
                                254,
                                254
                            ],
                            "children": [],
                            "content": ":"
                        }
                    ],
                    "content": ",input_data:"
                },
                {
                    "type": "Parameter",
                    "name": "kwargs",
                    "range": [
                        258,
                        258
                    ],
                    "children": [],
                    "content": "*"
                },
                {
                    "type": "ReturnType",
                    "name": "BlockOutput",
                    "range": [
                        262,
                        262
                    ],
                    "children": [],
                    "content": ">"
                },
                {
                    "type": "YieldStatement",
                    "name": "yield",
                    "range": [
                        265,
                        271
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "\"payload\"",
                            "range": [
                                266,
                                266
                            ],
                            "children": [],
                            "content": "yield"
                        },
                        {
                            "type": "MemberExpression",
                            "name": ".",
                            "range": [
                                269,
                                270
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "input_data",
                                    "range": [
                                        268,
                                        268
                                    ],
                                    "children": [],
                                    "content": ","
                                },
                                {
                                    "type": "Identifier",
                                    "name": "payload",
                                    "range": [
                                        270,
                                        270
                                    ],
                                    "children": [],
                                    "content": "."
                                }
                            ],
                            "content": "input_data."
                        }
                    ],
                    "content": "\nyield \"payload\",input_data.payload"
                },
                {
                    "type": "YieldStatement",
                    "name": "yield",
                    "range": [
                        272,
                        281
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "\"triggered_by_user\"",
                            "range": [
                                273,
                                273
                            ],
                            "children": [],
                            "content": "yield"
                        },
                        {
                            "type": "MemberExpression",
                            "name": ".",
                            "range": [
                                276,
                                277
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "input_data",
                                    "range": [
                                        275,
                                        275
                                    ],
                                    "children": [],
                                    "content": ","
                                },
                                {
                                    "type": "Identifier",
                                    "name": "payload",
                                    "range": [
                                        277,
                                        277
                                    ],
                                    "children": [],
                                    "content": "."
                                }
                            ],
                            "content": "input_data."
                        },
                        {
                            "type": "SubscriptExpression",
                            "name": "[",
                            "range": [
                                278,
                                280
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"sender\"",
                                    "range": [
                                        279,
                                        279
                                    ],
                                    "children": [],
                                    "content": "["
                                }
                            ],
                            "content": "payload[\"sender\""
                        }
                    ],
                    "content": "\nyield \"triggered_by_user\",input_data.payload[\"sender\"]"
                }
            ],
            "content": "\ndef run(self,input_data:Input,**kwargs)->BlockOutput:\nyield \"payload\",input_data.payload\nyield \"triggered_by_user\",input_data.payload[\"sender\"]\n"
        }
    ],
    "content": "import json\nimport logging\nfrom pathlib import Path\n\nfrom pydantic import BaseModel\n\nfrom backend.data.block import(\nBlock,\nBlockCategory,\nBlockOutput,\nBlockSchema,\nBlockWebhookConfig,\n)\nfrom backend.data.model import SchemaField\n\nfrom._auth import(\nTEST_CREDENTIALS,\nTEST_CREDENTIALS_INPUT,\nGithubCredentialsField,\nGithubCredentialsInput,\n)\n\nlogger=logging.getLogger(__name__)\n\n\n#--8<--[start:GithubTriggerExample]\nclass GitHubTriggerBase:\nclass Input(BlockSchema):\ncredentials:GithubCredentialsInput=GithubCredentialsField(\"repo\")\nrepo:str=SchemaField(\ndescription=(\n\"Repository to subscribe to.\\n\\n\"\n\"**Note:** Make sure your GitHub credentials have permissions \"\n\"to create webhooks on this repo.\"\n),\nplaceholder=\"{owner}/{repo}\",\n)\n#--8<--[start:example-payload-field]\npayload:dict=SchemaField(hidden=True,default={})\n#--8<--[end:example-payload-field]\n\nclass Output(BlockSchema):\npayload:dict=SchemaField(\ndescription=\"The complete webhook payload that was received from GitHub. \"\n\"Includes information about the affected resource (e.g. pull request), \"\n\"the event, and the user who triggered the event.\"\n)\ntriggered_by_user:dict=SchemaField(\ndescription=\"Object representing the GitHub user who triggered the event\"\n)\nerror:str=SchemaField(\ndescription=\"Error message if the payload could not be processed\"\n)\n\ndef run(self,input_data:Input,**kwargs)->BlockOutput:\nyield \"payload\",input_data.payload\nyield \"triggered_by_user\",input_data.payload[\"sender\"]\n"
}