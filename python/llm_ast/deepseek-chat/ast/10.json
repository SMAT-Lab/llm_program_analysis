{
    "type": "Program",
    "name": "Global",
    "range": [
        29,
        572
    ],
    "children": [
        {
            "type": "FunctionDecl",
            "name": "get_environment_variables",
            "range": [
                29,
                180
            ],
            "children": [
                {
                    "type": "FunctionSignature",
                    "name": "get_environment_variables",
                    "range": [
                        29,
                        47
                    ],
                    "children": [
                        {
                            "type": "Keyword",
                            "name": "def",
                            "range": [
                                29,
                                32
                            ],
                            "children": [],
                            "content": "\n\ndef get_environment_variables"
                        },
                        {
                            "type": "FunctionName",
                            "name": "get_environment_variables",
                            "range": [
                                30,
                                54
                            ],
                            "children": [],
                            "content": "\ndef get_environment_variables()->Tuple[str,str,str,str,str]:\n\"\"\"Retrieve and return necessary environment variables.\"\"\"\n"
                        },
                        {
                            "type": "ReturnType",
                            "name": "Tuple[str, str, str, str, str]",
                            "range": [
                                35,
                                46
                            ],
                            "children": [],
                            "content": "->Tuple[str,str,str,str,"
                        }
                    ],
                    "content": "\n\ndef get_environment_variables()->Tuple[str,str,str,str,str"
                },
                {
                    "type": "FunctionBody",
                    "name": "get_environment_variables",
                    "range": [
                        48,
                        180
                    ],
                    "children": [
                        {
                            "type": "Docstring",
                            "name": "Retrieve and return necessary environment variables.",
                            "range": [
                                49,
                                51
                            ],
                            "children": [],
                            "content": ":\n\"\""
                        },
                        {
                            "type": "TryStatement",
                            "name": "try",
                            "range": [
                                53,
                                179
                            ],
                            "children": [
                                {
                                    "type": "WithStatement",
                                    "name": "with",
                                    "range": [
                                        56,
                                        78
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "open",
                                            "range": [
                                                57,
                                                65
                                            ],
                                            "children": [
                                                {
                                                    "type": "AccessExpression",
                                                    "name": "os.environ[\"GITHUB_EVENT_PATH\"]",
                                                    "range": [
                                                        59,
                                                        64
                                                    ],
                                                    "children": [],
                                                    "content": "open(os.environ["
                                                }
                                            ],
                                            "content": "\nwith open(os.environ[\"GITHUB_EVENT_PATH\""
                                        },
                                        {
                                            "type": "AssignmentExpression",
                                            "name": "event = json.load(f)",
                                            "range": [
                                                70,
                                                77
                                            ],
                                            "children": [],
                                            "content": ":\nevent=json.load("
                                        }
                                    ],
                                    "content": ":\nwith open(os.environ[\"GITHUB_EVENT_PATH\"])as f:\nevent=json.load(f"
                                },
                                {
                                    "type": "IfStatement",
                                    "name": "if",
                                    "range": [
                                        89,
                                        119
                                    ],
                                    "children": [
                                        {
                                            "type": "Condition",
                                            "name": "\"pull_request\" in event",
                                            "range": [
                                                90,
                                                92
                                            ],
                                            "children": [],
                                            "content": "\nif \"pull_request\""
                                        },
                                        {
                                            "type": "AssignmentExpression",
                                            "name": "sha = event[\"pull_request\"][\"head\"][\"sha\"]",
                                            "range": [
                                                95,
                                                106
                                            ],
                                            "children": [],
                                            "content": ":\nsha=event[\"pull_request\"][\"head\"]["
                                        },
                                        {
                                            "type": "ElseStatement",
                                            "name": "else",
                                            "range": [
                                                108,
                                                119
                                            ],
                                            "children": [
                                                {
                                                    "type": "AssignmentExpression",
                                                    "name": "sha = os.environ[\"GITHUB_SHA\"]",
                                                    "range": [
                                                        111,
                                                        118
                                                    ],
                                                    "children": [],
                                                    "content": ":\nsha=os.environ["
                                                }
                                            ],
                                            "content": "]\nelse:\nsha=os.environ[\"GITHUB_SHA\""
                                        }
                                    ],
                                    "content": "events\nif \"pull_request\" in event:\nsha=event[\"pull_request\"][\"head\"][\"sha\"]\nelse:\nsha=os.environ[\"GITHUB_SHA\""
                                },
                                {
                                    "type": "ReturnStatement",
                                    "name": "return",
                                    "range": [
                                        121,
                                        159
                                    ],
                                    "children": [
                                        {
                                            "type": "TupleExpression",
                                            "name": "(os.environ[\"GITHUB_API_URL\"], os.environ[\"GITHUB_REPOSITORY\"], sha, os.environ[\"GITHUB_TOKEN\"], os.environ[\"GITHUB_RUN_ID\"])",
                                            "range": [
                                                122,
                                                158
                                            ],
                                            "children": [],
                                            "content": "\nreturn(\nos.environ[\"GITHUB_API_URL\"],\nos.environ[\"GITHUB_REPOSITORY\"],\nsha,\nos.environ[\"GITHUB_TOKEN\"],\nos.environ[\"GITHUB_RUN_ID\"]"
                                        }
                                    ],
                                    "content": "\n\nreturn(\nos.environ[\"GITHUB_API_URL\"],\nos.environ[\"GITHUB_REPOSITORY\"],\nsha,\nos.environ[\"GITHUB_TOKEN\"],\nos.environ[\"GITHUB_RUN_ID\"],"
                                }
                            ],
                            "content": "\"\"\ntry:\nwith open(os.environ[\"GITHUB_EVENT_PATH\"])as f:\nevent=json.load(f)\n\n#Handle both PR and merge group events\nif \"pull_request\" in event:\nsha=event[\"pull_request\"][\"head\"][\"sha\"]\nelse:\nsha=os.environ[\"GITHUB_SHA\"]\n\nreturn(\nos.environ[\"GITHUB_API_URL\"],\nos.environ[\"GITHUB_REPOSITORY\"],\nsha,\nos.environ[\"GITHUB_TOKEN\"],\nos.environ[\"GITHUB_RUN_ID\"],\n)\nexcept KeyError as e:\nprint(f \"Error: Missing required environment variable or event data: {e}\")\nsys.exit(1"
                        },
                        {
                            "type": "ExceptStatement",
                            "name": "except",
                            "range": [
                                161,
                                179
                            ],
                            "children": [
                                {
                                    "type": "ExceptionType",
                                    "name": "KeyError",
                                    "range": [
                                        162,
                                        169
                                    ],
                                    "children": [],
                                    "content": "\nexcept KeyError as e:\nprint"
                                },
                                {
                                    "type": "PrintStatement",
                                    "name": "print",
                                    "range": [
                                        167,
                                        171
                                    ],
                                    "children": [],
                                    "content": ":\nprint(f"
                                },
                                {
                                    "type": "ExitStatement",
                                    "name": "sys.exit(1)",
                                    "range": [
                                        173,
                                        178
                                    ],
                                    "children": [],
                                    "content": ")\nsys.exit("
                                }
                            ],
                            "content": ")\nexcept KeyError as e:\nprint(f \"Error: Missing required environment variable or event data: {e}\")\nsys.exit(1"
                        }
                    ],
                    "content": "]:\n\"\"\"Retrieve and return necessary environment variables.\"\"\"\ntry:\nwith open(os.environ[\"GITHUB_EVENT_PATH\"])as f:\nevent=json.load(f)\n\n#Handle both PR and merge group events\nif \"pull_request\" in event:\nsha=event[\"pull_request\"][\"head\"][\"sha\"]\nelse:\nsha=os.environ[\"GITHUB_SHA\"]\n\nreturn(\nos.environ[\"GITHUB_API_URL\"],\nos.environ[\"GITHUB_REPOSITORY\"],\nsha,\nos.environ[\"GITHUB_TOKEN\"],\nos.environ[\"GITHUB_RUN_ID\"],\n)\nexcept KeyError as e:\nprint(f \"Error: Missing required environment variable or event data: {e}\")\nsys.exit(1)"
                }
            ],
            "content": "\n\ndef get_environment_variables()->Tuple[str,str,str,str,str]:\n\"\"\"Retrieve and return necessary environment variables.\"\"\"\ntry:\nwith open(os.environ[\"GITHUB_EVENT_PATH\"])as f:\nevent=json.load(f)\n\n#Handle both PR and merge group events\nif \"pull_request\" in event:\nsha=event[\"pull_request\"][\"head\"][\"sha\"]\nelse:\nsha=os.environ[\"GITHUB_SHA\"]\n\nreturn(\nos.environ[\"GITHUB_API_URL\"],\nos.environ[\"GITHUB_REPOSITORY\"],\nsha,\nos.environ[\"GITHUB_TOKEN\"],\nos.environ[\"GITHUB_RUN_ID\"],\n)\nexcept KeyError as e:\nprint(f \"Error: Missing required environment variable or event data: {e}\")\nsys.exit(1)"
        },
        {
            "type": "FunctionDecl",
            "name": "make_api_request",
            "range": [
                181,
                267
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "parameters",
                    "range": [
                        183,
                        196
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "url",
                            "range": [
                                184,
                                186
                            ],
                            "children": [],
                            "content": "def make_api_request("
                        },
                        {
                            "type": "Parameter",
                            "name": "headers",
                            "range": [
                                188,
                                195
                            ],
                            "children": [],
                            "content": ":str,headers:Dict[str"
                        }
                    ],
                    "content": "\ndef make_api_request(url:str,headers:Dict[str,"
                },
                {
                    "type": "ReturnType",
                    "name": "Dict",
                    "range": [
                        197,
                        200
                    ],
                    "children": [],
                    "content": "str])-"
                },
                {
                    "type": "Docstring",
                    "name": "docstring",
                    "range": [
                        202,
                        204
                    ],
                    "children": [],
                    "content": "Dict:\n"
                },
                {
                    "type": "TryStatement",
                    "name": "try",
                    "range": [
                        206,
                        266
                    ],
                    "children": [
                        {
                            "type": "ExpressionStatement",
                            "name": "print",
                            "range": [
                                209,
                                214
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "print",
                                    "range": [
                                        209,
                                        214
                                    ],
                                    "children": [],
                                    "content": "try:\nprint(\"Making API request to:\""
                                }
                            ],
                            "content": "try:\nprint(\"Making API request to:\""
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "response",
                            "range": [
                                216,
                                231
                            ],
                            "children": [],
                            "content": "url)\nresponse=requests.get(url,headers=headers,timeout"
                        },
                        {
                            "type": "CallExpression",
                            "name": "raise_for_status",
                            "range": [
                                233,
                                237
                            ],
                            "children": [],
                            "content": "10)\nresponse."
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "return",
                            "range": [
                                239,
                                244
                            ],
                            "children": [],
                            "content": "()\nreturn response."
                        },
                        {
                            "type": "CatchClause",
                            "name": "except",
                            "range": [
                                246,
                                266
                            ],
                            "children": [
                                {
                                    "type": "ExpressionStatement",
                                    "name": "print",
                                    "range": [
                                        254,
                                        258
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "print",
                                            "range": [
                                                254,
                                                258
                                            ],
                                            "children": [],
                                            "content": "e:\nprint("
                                        }
                                    ],
                                    "content": "e:\nprint("
                                },
                                {
                                    "type": "CallExpression",
                                    "name": "exit",
                                    "range": [
                                        260,
                                        265
                                    ],
                                    "children": [],
                                    "content": "\"Error: API request failed. {e}\")\nsys.exit"
                                }
                            ],
                            "content": "()\nexcept requests.RequestException as e:\nprint(f \"Error: API request failed. {e}\")\nsys.exit("
                        }
                    ],
                    "content": "\"Make an API request and return the JSON response.\"\"\"\ntry:\nprint(\"Making API request to:\",url)\nresponse=requests.get(url,headers=headers,timeout=10)\nresponse.raise_for_status()\nreturn response.json()\nexcept requests.RequestException as e:\nprint(f \"Error: API request failed. {e}\")\nsys.exit("
                }
            ],
            "content": "\n\n\ndef make_api_request(url:str,headers:Dict[str,str])->Dict:\n\"\"\"Make an API request and return the JSON response.\"\"\"\ntry:\nprint(\"Making API request to:\",url)\nresponse=requests.get(url,headers=headers,timeout=10)\nresponse.raise_for_status()\nreturn response.json()\nexcept requests.RequestException as e:\nprint(f \"Error: API request failed. {e}\")\nsys.exit(1"
        },
        {
            "type": "FunctionDecl",
            "name": "process_check_runs",
            "range": [
                268,
                401
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "check_runs",
                    "range": [
                        271,
                        276
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "List[Dict]",
                            "range": [
                                273,
                                276
                            ],
                            "children": [],
                            "content": "process_check_runs(check_runs:"
                        }
                    ],
                    "content": "\ndef process_check_runs(check_runs:"
                },
                {
                    "type": "ReturnType",
                    "name": "Tuple[bool, bool]",
                    "range": [
                        280,
                        285
                    ],
                    "children": [],
                    "content": "])->Tuple["
                },
                {
                    "type": "Docstring",
                    "name": "\"Process check runs and return their status.\"",
                    "range": [
                        288,
                        290
                    ],
                    "children": [],
                    "content": "bool]:"
                },
                {
                    "type": "VariableDecl",
                    "name": "runs_in_progress",
                    "range": [
                        292,
                        294
                    ],
                    "children": [
                        {
                            "type": "Assignment",
                            "name": "=",
                            "range": [
                                293,
                                294
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "False",
                                    "range": [
                                        294,
                                        294
                                    ],
                                    "children": [],
                                    "content": "\"\""
                                }
                            ],
                            "content": "\"Process check runs and return their status.\"\"\""
                        }
                    ],
                    "content": "\"\"\"Process check runs and return their status.\"\"\""
                },
                {
                    "type": "VariableDecl",
                    "name": "all_others_passed",
                    "range": [
                        296,
                        298
                    ],
                    "children": [
                        {
                            "type": "Assignment",
                            "name": "=",
                            "range": [
                                297,
                                298
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "True",
                                    "range": [
                                        298,
                                        298
                                    ],
                                    "children": [],
                                    "content": "False"
                                }
                            ],
                            "content": "=False"
                        }
                    ],
                    "content": "runs_in_progress=False"
                },
                {
                    "type": "ForStatement",
                    "name": "for",
                    "range": [
                        301,
                        383
                    ],
                    "children": [
                        {
                            "type": "VariableDecl",
                            "name": "run",
                            "range": [
                                302,
                                302
                            ],
                            "children": [],
                            "content": "True"
                        },
                        {
                            "type": "BinaryExpression",
                            "name": "in",
                            "range": [
                                303,
                                304
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "check_runs",
                                    "range": [
                                        304,
                                        304
                                    ],
                                    "children": [],
                                    "content": "\n"
                                }
                            ],
                            "content": "\n\n"
                        },
                        {
                            "type": "BlockStatement",
                            "name": "",
                            "range": [
                                305,
                                383
                            ],
                            "children": [
                                {
                                    "type": "IfStatement",
                                    "name": "if",
                                    "range": [
                                        307,
                                        383
                                    ],
                                    "children": [
                                        {
                                            "type": "BinaryExpression",
                                            "name": "!=",
                                            "range": [
                                                315,
                                                317
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "str",
                                                    "range": [
                                                        308,
                                                        314
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "name": "run[\"name\"]",
                                                            "range": [
                                                                310,
                                                                313
                                                            ],
                                                            "children": [],
                                                            "content": "\nif str("
                                                        }
                                                    ],
                                                    "content": "check_runs:\nif str(run"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "name": "\"Check PR Status\"",
                                                    "range": [
                                                        317,
                                                        317
                                                    ],
                                                    "children": [],
                                                    "content": "]"
                                                }
                                            ],
                                            "content": "[\"name\"]"
                                        },
                                        {
                                            "type": "BlockStatement",
                                            "name": "",
                                            "range": [
                                                318,
                                                383
                                            ],
                                            "children": [
                                                {
                                                    "type": "VariableDecl",
                                                    "name": "status",
                                                    "range": [
                                                        320,
                                                        326
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Assignment",
                                                            "name": "=",
                                                            "range": [
                                                                321,
                                                                326
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "name": "run[\"status\"]",
                                                                    "range": [
                                                                        322,
                                                                        325
                                                                    ],
                                                                    "children": [],
                                                                    "content": ":\nstatus="
                                                                }
                                                            ],
                                                            "content": "\"Check PR Status\":\nstatus=run"
                                                        }
                                                    ],
                                                    "content": "=\"Check PR Status\":\nstatus=run"
                                                },
                                                {
                                                    "type": "VariableDecl",
                                                    "name": "conclusion",
                                                    "range": [
                                                        327,
                                                        333
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Assignment",
                                                            "name": "=",
                                                            "range": [
                                                                328,
                                                                333
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "name": "run[\"conclusion\"]",
                                                                    "range": [
                                                                        329,
                                                                        332
                                                                    ],
                                                                    "children": [],
                                                                    "content": "]\nconclusion="
                                                                }
                                                            ],
                                                            "content": "\"status\"]\nconclusion=run"
                                                        }
                                                    ],
                                                    "content": "[\"status\"]\nconclusion=run"
                                                },
                                                {
                                                    "type": "IfStatement",
                                                    "name": "if",
                                                    "range": [
                                                        335,
                                                        383
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "BinaryExpression",
                                                            "name": "==",
                                                            "range": [
                                                                337,
                                                                339
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "status",
                                                                    "range": [
                                                                        336,
                                                                        336
                                                                    ],
                                                                    "children": [],
                                                                    "content": "]"
                                                                },
                                                                {
                                                                    "type": "Literal",
                                                                    "name": "\"completed\"",
                                                                    "range": [
                                                                        339,
                                                                        339
                                                                    ],
                                                                    "children": [],
                                                                    "content": "if"
                                                                }
                                                            ],
                                                            "content": "\n\nif"
                                                        },
                                                        {
                                                            "type": "BlockStatement",
                                                            "name": "",
                                                            "range": [
                                                                340,
                                                                383
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "name": "if",
                                                                    "range": [
                                                                        342,
                                                                        383
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "BinaryExpression",
                                                                            "name": "not in",
                                                                            "range": [
                                                                                344,
                                                                                346
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "conclusion",
                                                                                    "range": [
                                                                                        343,
                                                                                        343
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "\"completed\""
                                                                                },
                                                                                {
                                                                                    "type": "ArrayExpression",
                                                                                    "name": "",
                                                                                    "range": [
                                                                                        346,
                                                                                        352
                                                                                    ],
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "name": "\"success\"",
                                                                                            "range": [
                                                                                                347,
                                                                                                347
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "conclusion"
                                                                                        },
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "name": "\"skipped\"",
                                                                                            "range": [
                                                                                                349,
                                                                                                349
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "in"
                                                                                        },
                                                                                        {
                                                                                            "type": "Literal",
                                                                                            "name": "\"neutral\"",
                                                                                            "range": [
                                                                                                351,
                                                                                                351
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "\"success\""
                                                                                        }
                                                                                    ],
                                                                                    "content": "if conclusion not in[\"success\","
                                                                                }
                                                                            ],
                                                                            "content": ":\nif"
                                                                        },
                                                                        {
                                                                            "type": "BlockStatement",
                                                                            "name": "",
                                                                            "range": [
                                                                                353,
                                                                                383
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "name": "all_others_passed = False",
                                                                                    "range": [
                                                                                        355,
                                                                                        357
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "\"neutral\"]:"
                                                                                },
                                                                                {
                                                                                    "type": "CallExpression",
                                                                                    "name": "print",
                                                                                    "range": [
                                                                                        359,
                                                                                        365
                                                                                    ],
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "TemplateLiteral",
                                                                                            "name": "f\"Check run {run['name']} (ID: {run['id']}) has conclusion: {conclusion}\"",
                                                                                            "range": [
                                                                                                362,
                                                                                                363
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "\nprint"
                                                                                        }
                                                                                    ],
                                                                                    "content": "all_others_passed=False\nprint(\n"
                                                                                }
                                                                            ],
                                                                            "content": "\"skipped\",\"neutral\"]:\nall_others_passed=False\nprint(\nf \"Check run {run['name']} (ID: {run['id']}) has conclusion: {conclusion}\"\n)\nelse:\nruns_in_progress=True\nprint(f \"Check run {run['name']} (ID: {run['id']}) is still {status}.\")\n"
                                                                        }
                                                                    ],
                                                                    "content": "=\"completed\":\nif conclusion not in[\"success\",\"skipped\",\"neutral\"]:\nall_others_passed=False\nprint(\nf \"Check run {run['name']} (ID: {run['id']}) has conclusion: {conclusion}\"\n)\nelse:\nruns_in_progress=True\nprint(f \"Check run {run['name']} (ID: {run['id']}) is still {status}.\")\n"
                                                                },
                                                                {
                                                                    "type": "ElseStatement",
                                                                    "name": "else",
                                                                    "range": [
                                                                        367,
                                                                        383
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "BlockStatement",
                                                                            "name": "",
                                                                            "range": [
                                                                                368,
                                                                                383
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "name": "runs_in_progress = True",
                                                                                    "range": [
                                                                                        370,
                                                                                        372
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "\nelse:"
                                                                                },
                                                                                {
                                                                                    "type": "CallExpression",
                                                                                    "name": "print",
                                                                                    "range": [
                                                                                        374,
                                                                                        378
                                                                                    ],
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "TemplateLiteral",
                                                                                            "name": "f\"Check run {run['name']} (ID: {run['id']}) is still {status}.\"",
                                                                                            "range": [
                                                                                                376,
                                                                                                377
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "True\n"
                                                                                        }
                                                                                    ],
                                                                                    "content": "runs_in_progress=True\nprint"
                                                                                },
                                                                                {
                                                                                    "type": "ExpressionStatement",
                                                                                    "name": "all_others_passed = False",
                                                                                    "range": [
                                                                                        380,
                                                                                        382
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "f \"Check run {run['name']} (ID: {run['id']}) is still {status}.\")"
                                                                                }
                                                                            ],
                                                                            "content": "\n)\nelse:\nruns_in_progress=True\nprint(f \"Check run {run['name']} (ID: {run['id']}) is still {status}.\")\n"
                                                                        }
                                                                    ],
                                                                    "content": "\"Check run {run['name']} (ID: {run['id']}) has conclusion: {conclusion}\"\n)\nelse:\nruns_in_progress=True\nprint(f \"Check run {run['name']} (ID: {run['id']}) is still {status}.\")\n"
                                                                }
                                                            ],
                                                            "content": "status==\"completed\":\nif conclusion not in[\"success\",\"skipped\",\"neutral\"]:\nall_others_passed=False\nprint(\nf \"Check run {run['name']} (ID: {run['id']}) has conclusion: {conclusion}\"\n)\nelse:\nruns_in_progress=True\nprint(f \"Check run {run['name']} (ID: {run['id']}) is still {status}.\")\n"
                                                        }
                                                    ],
                                                    "content": "\"conclusion\"]\n\nif status==\"completed\":\nif conclusion not in[\"success\",\"skipped\",\"neutral\"]:\nall_others_passed=False\nprint(\nf \"Check run {run['name']} (ID: {run['id']}) has conclusion: {conclusion}\"\n)\nelse:\nruns_in_progress=True\nprint(f \"Check run {run['name']} (ID: {run['id']}) is still {status}.\")\n"
                                                }
                                            ],
                                            "content": ")!=\"Check PR Status\":\nstatus=run[\"status\"]\nconclusion=run[\"conclusion\"]\n\nif status==\"completed\":\nif conclusion not in[\"success\",\"skipped\",\"neutral\"]:\nall_others_passed=False\nprint(\nf \"Check run {run['name']} (ID: {run['id']}) has conclusion: {conclusion}\"\n)\nelse:\nruns_in_progress=True\nprint(f \"Check run {run['name']} (ID: {run['id']}) is still {status}.\")\n"
                                        }
                                    ],
                                    "content": "in check_runs:\nif str(run[\"name\"])!=\"Check PR Status\":\nstatus=run[\"status\"]\nconclusion=run[\"conclusion\"]\n\nif status==\"completed\":\nif conclusion not in[\"success\",\"skipped\",\"neutral\"]:\nall_others_passed=False\nprint(\nf \"Check run {run['name']} (ID: {run['id']}) has conclusion: {conclusion}\"\n)\nelse:\nruns_in_progress=True\nprint(f \"Check run {run['name']} (ID: {run['id']}) is still {status}.\")\n"
                                },
                                {
                                    "type": "ElseStatement",
                                    "name": "else",
                                    "range": [
                                        384,
                                        394
                                    ],
                                    "children": [
                                        {
                                            "type": "BlockStatement",
                                            "name": "",
                                            "range": [
                                                385,
                                                394
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "print",
                                                    "range": [
                                                        387,
                                                        393
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "TemplateLiteral",
                                                            "name": "f\"Skipping check run {run['name']} (ID: {run['id']}) as it is the current run.\"",
                                                            "range": [
                                                                390,
                                                                391
                                                            ],
                                                            "children": [],
                                                            "content": "\nprint"
                                                        }
                                                    ],
                                                    "content": "\nelse:\nprint(\n"
                                                }
                                            ],
                                            "content": "=False\nelse:\nprint(\nf"
                                        }
                                    ],
                                    "content": "all_others_passed=False\nelse:\nprint(\nf"
                                }
                            ],
                            "content": "for run in check_runs:\nif str(run[\"name\"])!=\"Check PR Status\":\nstatus=run[\"status\"]\nconclusion=run[\"conclusion\"]\n\nif status==\"completed\":\nif conclusion not in[\"success\",\"skipped\",\"neutral\"]:\nall_others_passed=False\nprint(\nf \"Check run {run['name']} (ID: {run['id']}) has conclusion: {conclusion}\"\n)\nelse:\nruns_in_progress=True\nprint(f \"Check run {run['name']} (ID: {run['id']}) is still {status}.\")\n"
                        }
                    ],
                    "content": "=True\n\nfor run in check_runs:\nif str(run[\"name\"])!=\"Check PR Status\":\nstatus=run[\"status\"]\nconclusion=run[\"conclusion\"]\n\nif status==\"completed\":\nif conclusion not in[\"success\",\"skipped\",\"neutral\"]:\nall_others_passed=False\nprint(\nf \"Check run {run['name']} (ID: {run['id']}) has conclusion: {conclusion}\"\n)\nelse:\nruns_in_progress=True\nprint(f \"Check run {run['name']} (ID: {run['id']}) is still {status}.\")\n"
                },
                {
                    "type": "ReturnStatement",
                    "name": "return",
                    "range": [
                        396,
                        399
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "runs_in_progress",
                            "range": [
                                397,
                                397
                            ],
                            "children": [],
                            "content": ")"
                        },
                        {
                            "type": "Identifier",
                            "name": "all_others_passed",
                            "range": [
                                399,
                                399
                            ],
                            "children": [],
                            "content": "\n"
                        }
                    ],
                    "content": "\n)\n\n"
                }
            ],
            "content": ")\n\n\ndef process_check_runs(check_runs:List[Dict])->Tuple[bool,bool]:\n\"\"\"Process check runs and return their status.\"\"\"\nruns_in_progress=False\nall_others_passed=True\n\nfor run in check_runs:\nif str(run[\"name\"])!=\"Check PR Status\":\nstatus=run[\"status\"]\nconclusion=run[\"conclusion\"]\n\nif status==\"completed\":\nif conclusion not in[\"success\",\"skipped\",\"neutral\"]:\nall_others_passed=False\nprint(\nf \"Check run {run['name']} (ID: {run['id']}) has conclusion: {conclusion}\"\n)\nelse:\nruns_in_progress=True\nprint(f \"Check run {run['name']} (ID: {run['id']}) is still {status}.\")\nall_others_passed=False\nelse:\nprint(\nf \"Skipping check run {run['name']} (ID: {run['id']}) as it is the current run.\"\n)\n\nreturn runs_in_progress"
        },
        {
            "type": "FunctionDecl",
            "name": "main",
            "range": [
                402,
                560
            ],
            "children": [
                {
                    "type": "BlockStatement",
                    "range": [
                        407,
                        560
                    ],
                    "children": [
                        {
                            "type": "VariableDecl",
                            "name": "api_url, repo, sha, github_token, current_run_id",
                            "range": [
                                408,
                                420
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "range": [
                                        417,
                                        420
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "get_environment_variables",
                                            "range": [
                                                418,
                                                420
                                            ],
                                            "children": [],
                                            "content": ",github_token,"
                                        }
                                    ],
                                    "content": "sha,github_token,"
                                }
                            ],
                            "content": "main():\napi_url,repo,sha,github_token,"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "endpoint",
                            "range": [
                                423,
                                427
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "range": [
                                        424,
                                        427
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "value": "\"{api_url}/repos/{repo}/commits/{sha}/check-runs\"",
                                            "range": [
                                                426,
                                                426
                                            ],
                                            "children": [],
                                            "content": "\n"
                                        }
                                    ],
                                    "content": "()\n\n"
                                }
                            ],
                            "content": "get_environment_variables()\n\n"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "headers",
                            "range": [
                                428,
                                437
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "range": [
                                        429,
                                        437
                                    ],
                                    "children": [
                                        {
                                            "type": "ObjectExpression",
                                            "range": [
                                                430,
                                                437
                                            ],
                                            "children": [
                                                {
                                                    "type": "Property",
                                                    "name": "\"Accept\"",
                                                    "range": [
                                                        432,
                                                        434
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "\"application/vnd.github.v3+json\"",
                                                            "range": [
                                                                434,
                                                                434
                                                            ],
                                                            "children": [],
                                                            "content": "="
                                                        }
                                                    ],
                                                    "content": "\nheaders="
                                                }
                                            ],
                                            "content": "f \"{api_url}/repos/{repo}/commits/{sha}/check-runs\"\nheaders={\n\"Accept\""
                                        }
                                    ],
                                    "content": "=f \"{api_url}/repos/{repo}/commits/{sha}/check-runs\"\nheaders={\n\"Accept\""
                                }
                            ],
                            "content": "endpoint=f \"{api_url}/repos/{repo}/commits/{sha}/check-runs\"\nheaders={\n\"Accept\""
                        },
                        {
                            "type": "IfStatement",
                            "range": [
                                439,
                                450
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "range": [
                                        440,
                                        441
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "github_token",
                                            "range": [
                                                440,
                                                440
                                            ],
                                            "children": [],
                                            "content": ","
                                        }
                                    ],
                                    "content": ",\n"
                                },
                                {
                                    "type": "BlockStatement",
                                    "range": [
                                        442,
                                        450
                                    ],
                                    "children": [
                                        {
                                            "type": "AssignmentExpression",
                                            "range": [
                                                443,
                                                450
                                            ],
                                            "children": [
                                                {
                                                    "type": "MemberExpression",
                                                    "range": [
                                                        443,
                                                        446
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "headers",
                                                            "range": [
                                                                443,
                                                                443
                                                            ],
                                                            "children": [],
                                                            "content": "\n"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "\"Authorization\"",
                                                            "range": [
                                                                445,
                                                                445
                                                            ],
                                                            "children": [],
                                                            "content": "github_token"
                                                        }
                                                    ],
                                                    "content": "\nif github_token:"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "\"token {github_token}\"",
                                                    "range": [
                                                        449,
                                                        449
                                                    ],
                                                    "children": [],
                                                    "content": "["
                                                }
                                            ],
                                            "content": "\nif github_token:\nheaders[\"Authorization\""
                                        }
                                    ],
                                    "content": "}\nif github_token:\nheaders[\"Authorization\""
                                }
                            ],
                            "content": "\"application/vnd.github.v3+json\",\n}\nif github_token:\nheaders[\"Authorization\""
                        },
                        {
                            "type": "ExpressionStatement",
                            "range": [
                                452,
                                457
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "print",
                                    "range": [
                                        452,
                                        457
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "value": "\"Current run ID: {current_run_id}\"",
                                            "range": [
                                                455,
                                                455
                                            ],
                                            "children": [],
                                            "content": "\n"
                                        }
                                    ],
                                    "content": "=f \"token {github_token}\"\n\nprint"
                                }
                            ],
                            "content": "=f \"token {github_token}\"\n\nprint"
                        },
                        {
                            "type": "WhileStatement",
                            "range": [
                                459,
                                527
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "range": [
                                        460,
                                        461
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "value": "True",
                                            "range": [
                                                460,
                                                460
                                            ],
                                            "children": [],
                                            "content": "\"Current run ID: {current_run_id}\""
                                        }
                                    ],
                                    "content": "\"Current run ID: {current_run_id}\")"
                                },
                                {
                                    "type": "BlockStatement",
                                    "range": [
                                        462,
                                        527
                                    ],
                                    "children": [
                                        {
                                            "type": "VariableDecl",
                                            "name": "data",
                                            "range": [
                                                463,
                                                470
                                            ],
                                            "children": [
                                                {
                                                    "type": "AssignmentExpression",
                                                    "range": [
                                                        464,
                                                        470
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "make_api_request",
                                                            "range": [
                                                                465,
                                                                470
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "endpoint",
                                                                    "range": [
                                                                        467,
                                                                        467
                                                                    ],
                                                                    "children": [],
                                                                    "content": "\n"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "headers",
                                                                    "range": [
                                                                        469,
                                                                        469
                                                                    ],
                                                                    "children": [],
                                                                    "content": "="
                                                                }
                                                            ],
                                                            "content": "True:\ndata=make_api_request"
                                                        }
                                                    ],
                                                    "content": "while True:\ndata=make_api_request"
                                                }
                                            ],
                                            "content": "\nwhile True:\ndata=make_api_request"
                                        },
                                        {
                                            "type": "VariableDecl",
                                            "name": "check_runs",
                                            "range": [
                                                473,
                                                479
                                            ],
                                            "children": [
                                                {
                                                    "type": "AssignmentExpression",
                                                    "range": [
                                                        474,
                                                        479
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "range": [
                                                                474,
                                                                478
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "data",
                                                                    "range": [
                                                                        474,
                                                                        474
                                                                    ],
                                                                    "children": [],
                                                                    "content": "headers"
                                                                },
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "\"check_runs\"",
                                                                    "range": [
                                                                        477,
                                                                        477
                                                                    ],
                                                                    "children": [],
                                                                    "content": "\n"
                                                                }
                                                            ],
                                                            "content": "headers)\n\ncheck_runs"
                                                        }
                                                    ],
                                                    "content": "headers)\n\ncheck_runs="
                                                }
                                            ],
                                            "content": ",headers)\n\ncheck_runs="
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "range": [
                                                481,
                                                485
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "print",
                                                    "range": [
                                                        481,
                                                        485
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "\"Processing check runs...\"",
                                                            "range": [
                                                                483,
                                                                483
                                                            ],
                                                            "children": [],
                                                            "content": "]"
                                                        }
                                                    ],
                                                    "content": "[\"check_runs\"]\n\n"
                                                }
                                            ],
                                            "content": "[\"check_runs\"]\n\n"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "range": [
                                                487,
                                                491
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "print",
                                                    "range": [
                                                        487,
                                                        491
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "check_runs",
                                                            "range": [
                                                                489,
                                                                489
                                                            ],
                                                            "children": [],
                                                            "content": ")"
                                                        }
                                                    ],
                                                    "content": "(\"Processing check runs...\")\n\n"
                                                }
                                            ],
                                            "content": "(\"Processing check runs...\")\n\n"
                                        },
                                        {
                                            "type": "VariableDecl",
                                            "name": "runs_in_progress, all_others_passed",
                                            "range": [
                                                493,
                                                501
                                            ],
                                            "children": [
                                                {
                                                    "type": "AssignmentExpression",
                                                    "range": [
                                                        496,
                                                        501
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "process_check_runs",
                                                            "range": [
                                                                497,
                                                                501
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "check_runs",
                                                                    "range": [
                                                                        499,
                                                                        499
                                                                    ],
                                                                    "children": [],
                                                                    "content": ","
                                                                }
                                                            ],
                                                            "content": "\nruns_in_progress,all_others_passed="
                                                        }
                                                    ],
                                                    "content": "\n\nruns_in_progress,all_others_passed="
                                                }
                                            ],
                                            "content": "(check_runs)\n\nruns_in_progress,all_others_passed="
                                        },
                                        {
                                            "type": "IfStatement",
                                            "range": [
                                                503,
                                                509
                                            ],
                                            "children": [
                                                {
                                                    "type": "Condition",
                                                    "range": [
                                                        504,
                                                        506
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "UnaryExpression",
                                                            "operator": "not",
                                                            "range": [
                                                                504,
                                                                505
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "runs_in_progress",
                                                                    "range": [
                                                                        505,
                                                                        505
                                                                    ],
                                                                    "children": [],
                                                                    "content": ")"
                                                                }
                                                            ],
                                                            "content": "check_runs)"
                                                        }
                                                    ],
                                                    "content": "check_runs)\n"
                                                },
                                                {
                                                    "type": "BlockStatement",
                                                    "range": [
                                                        507,
                                                        509
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "BreakStatement",
                                                            "range": [
                                                                508,
                                                                509
                                                            ],
                                                            "children": [],
                                                            "content": "if not"
                                                        }
                                                    ],
                                                    "content": "\nif not"
                                                }
                                            ],
                                            "content": "(check_runs)\n\nif not"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "range": [
                                                511,
                                                519
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "print",
                                                    "range": [
                                                        511,
                                                        519
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "\"Some check runs are still in progress. \"",
                                                            "range": [
                                                                514,
                                                                514
                                                            ],
                                                            "children": [],
                                                            "content": "\n"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "\"Waiting {CHECK_INTERVAL} seconds before checking again...\"",
                                                            "range": [
                                                                517,
                                                                517
                                                            ],
                                                            "children": [],
                                                            "content": "("
                                                        }
                                                    ],
                                                    "content": ":\nbreak\n\nprint(\n\"Some check runs are still in progress. \""
                                                }
                                            ],
                                            "content": ":\nbreak\n\nprint(\n\"Some check runs are still in progress. \""
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "range": [
                                                521,
                                                527
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "time.sleep",
                                                    "range": [
                                                        521,
                                                        527
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "CHECK_INTERVAL",
                                                            "range": [
                                                                525,
                                                                525
                                                            ],
                                                            "children": [],
                                                            "content": "\n"
                                                        }
                                                    ],
                                                    "content": "f \"Waiting {CHECK_INTERVAL} seconds before checking again...\"\n)\ntime."
                                                }
                                            ],
                                            "content": "f \"Waiting {CHECK_INTERVAL} seconds before checking again...\"\n)\ntime."
                                        }
                                    ],
                                    "content": "\n\nwhile True:\ndata=make_api_request(endpoint,headers)\n\ncheck_runs=data[\"check_runs\"]\n\nprint(\"Processing check runs...\")\n\nprint(check_runs)\n\nruns_in_progress,all_others_passed=process_check_runs(check_runs)\n\nif not runs_in_progress:\nbreak\n\nprint(\n\"Some check runs are still in progress. \"\nf \"Waiting {CHECK_INTERVAL} seconds before checking again...\"\n)\ntime."
                                }
                            ],
                            "content": "f \"Current run ID: {current_run_id}\")\n\nwhile True:\ndata=make_api_request(endpoint,headers)\n\ncheck_runs=data[\"check_runs\"]\n\nprint(\"Processing check runs...\")\n\nprint(check_runs)\n\nruns_in_progress,all_others_passed=process_check_runs(check_runs)\n\nif not runs_in_progress:\nbreak\n\nprint(\n\"Some check runs are still in progress. \"\nf \"Waiting {CHECK_INTERVAL} seconds before checking again...\"\n)\ntime."
                        },
                        {
                            "type": "IfStatement",
                            "range": [
                                529,
                                558
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "range": [
                                        530,
                                        531
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "all_others_passed",
                                            "range": [
                                                530,
                                                530
                                            ],
                                            "children": [],
                                            "content": "CHECK_INTERVAL"
                                        }
                                    ],
                                    "content": "CHECK_INTERVAL)"
                                },
                                {
                                    "type": "BlockStatement",
                                    "range": [
                                        532,
                                        544
                                    ],
                                    "children": [
                                        {
                                            "type": "ExpressionStatement",
                                            "range": [
                                                533,
                                                537
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "print",
                                                    "range": [
                                                        533,
                                                        537
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "\"All other completed check runs have passed. This check passes.\"",
                                                            "range": [
                                                                535,
                                                                535
                                                            ],
                                                            "children": [],
                                                            "content": "all_others_passed"
                                                        }
                                                    ],
                                                    "content": "\nif all_others_passed:\n"
                                                }
                                            ],
                                            "content": "\nif all_others_passed:\n"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "range": [
                                                538,
                                                544
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "sys.exit",
                                                    "range": [
                                                        538,
                                                        544
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Literal",
                                                            "value": "0",
                                                            "range": [
                                                                542,
                                                                542
                                                            ],
                                                            "children": [],
                                                            "content": "\n"
                                                        }
                                                    ],
                                                    "content": "print(\"All other completed check runs have passed. This check passes.\")\nsys."
                                                }
                                            ],
                                            "content": "print(\"All other completed check runs have passed. This check passes.\")\nsys."
                                        }
                                    ],
                                    "content": "\n\nif all_others_passed:\nprint(\"All other completed check runs have passed. This check passes.\")\nsys."
                                },
                                {
                                    "type": "ElseStatement",
                                    "range": [
                                        545,
                                        558
                                    ],
                                    "children": [
                                        {
                                            "type": "BlockStatement",
                                            "range": [
                                                547,
                                                558
                                            ],
                                            "children": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "range": [
                                                        548,
                                                        552
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "print",
                                                            "range": [
                                                                548,
                                                                552
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "\"Some check runs have failed or have not completed. This check fails.\"",
                                                                    "range": [
                                                                        550,
                                                                        550
                                                                    ],
                                                                    "children": [],
                                                                    "content": "else"
                                                                }
                                                            ],
                                                            "content": ")\nelse:\n"
                                                        }
                                                    ],
                                                    "content": ")\nelse:\n"
                                                },
                                                {
                                                    "type": "ExpressionStatement",
                                                    "range": [
                                                        553,
                                                        558
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "sys.exit",
                                                            "range": [
                                                                553,
                                                                558
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": "1",
                                                                    "range": [
                                                                        557,
                                                                        557
                                                                    ],
                                                                    "children": [],
                                                                    "content": "\n"
                                                                }
                                                            ],
                                                            "content": "print(\"Some check runs have failed or have not completed. This check fails.\")\nsys"
                                                        }
                                                    ],
                                                    "content": "print(\"Some check runs have failed or have not completed. This check fails.\")\nsys"
                                                }
                                            ],
                                            "content": "0)\nelse:\nprint(\"Some check runs have failed or have not completed. This check fails.\")\nsys"
                                        }
                                    ],
                                    "content": "exit(0)\nelse:\nprint(\"Some check runs have failed or have not completed. This check fails.\")\nsys"
                                }
                            ],
                            "content": "(CHECK_INTERVAL)\n\nif all_others_passed:\nprint(\"All other completed check runs have passed. This check passes.\")\nsys.exit(0)\nelse:\nprint(\"Some check runs have failed or have not completed. This check fails.\")\nsys"
                        }
                    ],
                    "content": "def main():\napi_url,repo,sha,github_token,current_run_id=get_environment_variables()\n\nendpoint=f \"{api_url}/repos/{repo}/commits/{sha}/check-runs\"\nheaders={\n\"Accept\":\"application/vnd.github.v3+json\",\n}\nif github_token:\nheaders[\"Authorization\"]=f \"token {github_token}\"\n\nprint(f \"Current run ID: {current_run_id}\")\n\nwhile True:\ndata=make_api_request(endpoint,headers)\n\ncheck_runs=data[\"check_runs\"]\n\nprint(\"Processing check runs...\")\n\nprint(check_runs)\n\nruns_in_progress,all_others_passed=process_check_runs(check_runs)\n\nif not runs_in_progress:\nbreak\n\nprint(\n\"Some check runs are still in progress. \"\nf \"Waiting {CHECK_INTERVAL} seconds before checking again...\"\n)\ntime.sleep(CHECK_INTERVAL)\n\nif all_others_passed:\nprint(\"All other completed check runs have passed. This check passes.\")\nsys.exit(0)\nelse:\nprint(\"Some check runs have failed or have not completed. This check fails.\")\nsys.exit"
                }
            ],
            "content": ",all_others_passed\n\n\ndef main():\napi_url,repo,sha,github_token,current_run_id=get_environment_variables()\n\nendpoint=f \"{api_url}/repos/{repo}/commits/{sha}/check-runs\"\nheaders={\n\"Accept\":\"application/vnd.github.v3+json\",\n}\nif github_token:\nheaders[\"Authorization\"]=f \"token {github_token}\"\n\nprint(f \"Current run ID: {current_run_id}\")\n\nwhile True:\ndata=make_api_request(endpoint,headers)\n\ncheck_runs=data[\"check_runs\"]\n\nprint(\"Processing check runs...\")\n\nprint(check_runs)\n\nruns_in_progress,all_others_passed=process_check_runs(check_runs)\n\nif not runs_in_progress:\nbreak\n\nprint(\n\"Some check runs are still in progress. \"\nf \"Waiting {CHECK_INTERVAL} seconds before checking again...\"\n)\ntime.sleep(CHECK_INTERVAL)\n\nif all_others_passed:\nprint(\"All other completed check runs have passed. This check passes.\")\nsys.exit(0)\nelse:\nprint(\"Some check runs have failed or have not completed. This check fails.\")\nsys.exit"
        },
        {
            "type": "IfStatement",
            "name": "",
            "range": [
                561,
                567
            ],
            "children": [
                {
                    "type": "Condition",
                    "name": "",
                    "range": [
                        561,
                        566
                    ],
                    "children": [
                        {
                            "type": "BinaryExpression",
                            "name": "",
                            "range": [
                                562,
                                565
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "__name__",
                                    "range": [
                                        562,
                                        562
                                    ],
                                    "children": [],
                                    "content": "1"
                                },
                                {
                                    "type": "Operator",
                                    "name": "==",
                                    "range": [
                                        563,
                                        564
                                    ],
                                    "children": [],
                                    "content": ")\n"
                                },
                                {
                                    "type": "Literal",
                                    "name": "__main__",
                                    "range": [
                                        565,
                                        565
                                    ],
                                    "children": [],
                                    "content": "\n"
                                }
                            ],
                            "content": "1)\n\n"
                        }
                    ],
                    "content": "(1)\n\n\n"
                }
            ],
            "content": "(1)\n\n\nif"
        },
        {
            "type": "FunctionDecl",
            "name": "main",
            "range": [
                568,
                571
            ],
            "children": [
                {
                    "type": "CallExpression",
                    "name": "main",
                    "range": [
                        568,
                        571
                    ],
                    "children": [],
                    "content": "__name__==\"__main__\""
                }
            ],
            "content": "__name__==\"__main__\""
        }
    ],
    "content": "\n\ndef get_environment_variables()->Tuple[str,str,str,str,str]:\n\"\"\"Retrieve and return necessary environment variables.\"\"\"\ntry:\nwith open(os.environ[\"GITHUB_EVENT_PATH\"])as f:\nevent=json.load(f)\n\n#Handle both PR and merge group events\nif \"pull_request\" in event:\nsha=event[\"pull_request\"][\"head\"][\"sha\"]\nelse:\nsha=os.environ[\"GITHUB_SHA\"]\n\nreturn(\nos.environ[\"GITHUB_API_URL\"],\nos.environ[\"GITHUB_REPOSITORY\"],\nsha,\nos.environ[\"GITHUB_TOKEN\"],\nos.environ[\"GITHUB_RUN_ID\"],\n)\nexcept KeyError as e:\nprint(f \"Error: Missing required environment variable or event data: {e}\")\nsys.exit(1)\n\n\ndef make_api_request(url:str,headers:Dict[str,str])->Dict:\n\"\"\"Make an API request and return the JSON response.\"\"\"\ntry:\nprint(\"Making API request to:\",url)\nresponse=requests.get(url,headers=headers,timeout=10)\nresponse.raise_for_status()\nreturn response.json()\nexcept requests.RequestException as e:\nprint(f \"Error: API request failed. {e}\")\nsys.exit(1)\n\n\ndef process_check_runs(check_runs:List[Dict])->Tuple[bool,bool]:\n\"\"\"Process check runs and return their status.\"\"\"\nruns_in_progress=False\nall_others_passed=True\n\nfor run in check_runs:\nif str(run[\"name\"])!=\"Check PR Status\":\nstatus=run[\"status\"]\nconclusion=run[\"conclusion\"]\n\nif status==\"completed\":\nif conclusion not in[\"success\",\"skipped\",\"neutral\"]:\nall_others_passed=False\nprint(\nf \"Check run {run['name']} (ID: {run['id']}) has conclusion: {conclusion}\"\n)\nelse:\nruns_in_progress=True\nprint(f \"Check run {run['name']} (ID: {run['id']}) is still {status}.\")\nall_others_passed=False\nelse:\nprint(\nf \"Skipping check run {run['name']} (ID: {run['id']}) as it is the current run.\"\n)\n\nreturn runs_in_progress,all_others_passed\n\n\ndef main():\napi_url,repo,sha,github_token,current_run_id=get_environment_variables()\n\nendpoint=f \"{api_url}/repos/{repo}/commits/{sha}/check-runs\"\nheaders={\n\"Accept\":\"application/vnd.github.v3+json\",\n}\nif github_token:\nheaders[\"Authorization\"]=f \"token {github_token}\"\n\nprint(f \"Current run ID: {current_run_id}\")\n\nwhile True:\ndata=make_api_request(endpoint,headers)\n\ncheck_runs=data[\"check_runs\"]\n\nprint(\"Processing check runs...\")\n\nprint(check_runs)\n\nruns_in_progress,all_others_passed=process_check_runs(check_runs)\n\nif not runs_in_progress:\nbreak\n\nprint(\n\"Some check runs are still in progress. \"\nf \"Waiting {CHECK_INTERVAL} seconds before checking again...\"\n)\ntime.sleep(CHECK_INTERVAL)\n\nif all_others_passed:\nprint(\"All other completed check runs have passed. This check passes.\")\nsys.exit(0)\nelse:\nprint(\"Some check runs have failed or have not completed. This check fails.\")\nsys.exit(1)\n\n\nif __name__==\"__main__\":"
}