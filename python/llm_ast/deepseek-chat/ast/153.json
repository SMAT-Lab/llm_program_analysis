{
    "type": "Program",
    "name": "Global",
    "range": [
        0,
        1102
    ],
    "children": [
        {
            "type": "ClassDecl",
            "name": "RedditCredentials",
            "range": [
                63,
                130
            ],
            "children": [
                {
                    "type": "VariableDecl",
                    "name": "client_id",
                    "range": [
                        70,
                        79
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "BlockSecret",
                            "range": [
                                72,
                                72
                            ],
                            "content": "BlockSecret"
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "=",
                            "range": [
                                73,
                                73
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "SecretField",
                                    "range": [
                                        74,
                                        79
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "key",
                                            "range": [
                                                76,
                                                78
                                            ],
                                            "content": "key=\"reddit_client_id\""
                                        }
                                    ],
                                    "content": "SecretField(key=\"reddit_client_id\")"
                                }
                            ],
                            "content": "="
                        }
                    ],
                    "content": "client_id:BlockSecret=SecretField(key=\"reddit_client_id\")"
                },
                {
                    "type": "VariableDecl",
                    "name": "client_secret",
                    "range": [
                        81,
                        90
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "BlockSecret",
                            "range": [
                                83,
                                83
                            ],
                            "content": "BlockSecret"
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "=",
                            "range": [
                                84,
                                84
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "SecretField",
                                    "range": [
                                        85,
                                        90
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "key",
                                            "range": [
                                                87,
                                                89
                                            ],
                                            "content": "key=\"reddit_client_secret\""
                                        }
                                    ],
                                    "content": "SecretField(key=\"reddit_client_secret\")"
                                }
                            ],
                            "content": "="
                        }
                    ],
                    "content": "client_secret:BlockSecret=SecretField(key=\"reddit_client_secret\")"
                },
                {
                    "type": "VariableDecl",
                    "name": "username",
                    "range": [
                        92,
                        101
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "BlockSecret",
                            "range": [
                                94,
                                94
                            ],
                            "content": "BlockSecret"
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "=",
                            "range": [
                                95,
                                95
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "SecretField",
                                    "range": [
                                        96,
                                        101
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "key",
                                            "range": [
                                                98,
                                                100
                                            ],
                                            "content": "key=\"reddit_username\""
                                        }
                                    ],
                                    "content": "SecretField(key=\"reddit_username\")"
                                }
                            ],
                            "content": "="
                        }
                    ],
                    "content": "username:BlockSecret=SecretField(key=\"reddit_username\")"
                },
                {
                    "type": "VariableDecl",
                    "name": "password",
                    "range": [
                        103,
                        112
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "BlockSecret",
                            "range": [
                                105,
                                105
                            ],
                            "content": "BlockSecret"
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "=",
                            "range": [
                                106,
                                106
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "SecretField",
                                    "range": [
                                        107,
                                        112
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "key",
                                            "range": [
                                                109,
                                                111
                                            ],
                                            "content": "key=\"reddit_password\""
                                        }
                                    ],
                                    "content": "SecretField(key=\"reddit_password\")"
                                }
                            ],
                            "content": "="
                        }
                    ],
                    "content": "password:BlockSecret=SecretField(key=\"reddit_password\")"
                },
                {
                    "type": "VariableDecl",
                    "name": "user_agent",
                    "range": [
                        114,
                        119
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                116,
                                116
                            ],
                            "content": "str"
                        },
                        {
                            "type": "AssignmentExpression",
                            "name": "=",
                            "range": [
                                117,
                                117
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"AutoGPT:1.0 (by /u/autogpt)\"",
                                    "range": [
                                        118,
                                        118
                                    ],
                                    "content": "\"AutoGPT:1.0 (by /u/autogpt)\""
                                }
                            ],
                            "content": "="
                        }
                    ],
                    "content": "user_agent:str=\"AutoGPT:1.0 (by /u/autogpt)\"\n"
                },
                {
                    "type": "VariableDecl",
                    "name": "model_config",
                    "range": [
                        121,
                        129
                    ],
                    "children": [
                        {
                            "type": "AssignmentExpression",
                            "name": "=",
                            "range": [
                                122,
                                122
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "ConfigDict",
                                    "range": [
                                        123,
                                        129
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "title",
                                            "range": [
                                                125,
                                                127
                                            ],
                                            "content": "title=\"Reddit Credentials\""
                                        }
                                    ],
                                    "content": "ConfigDict(title=\"Reddit Credentials\")\n"
                                }
                            ],
                            "content": "="
                        }
                    ],
                    "content": "model_config=ConfigDict(title=\"Reddit Credentials\")\n"
                }
            ],
            "content": "class RedditCredentials(BaseModel):\nclient_id:BlockSecret=SecretField(key=\"reddit_client_id\")\nclient_secret:BlockSecret=SecretField(key=\"reddit_client_secret\")\nusername:BlockSecret=SecretField(key=\"reddit_username\")\npassword:BlockSecret=SecretField(key=\"reddit_password\")\nuser_agent:str=\"AutoGPT:1.0 (by /u/autogpt)\"\n\nmodel_config=ConfigDict(title=\"Reddit Credentials\")\n\n"
        },
        {
            "type": "ClassDecl",
            "name": "RedditPost",
            "range": [
                131,
                154
            ],
            "children": [
                {
                    "type": "ClassInheritance",
                    "name": "BaseModel",
                    "range": [
                        133,
                        135
                    ],
                    "children": [],
                    "content": "RedditPost(BaseModel"
                },
                {
                    "type": "ClassBody",
                    "name": "",
                    "range": [
                        136,
                        154
                    ],
                    "children": [
                        {
                            "type": "FieldDecl",
                            "name": "id",
                            "range": [
                                138,
                                140
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "str",
                                    "range": [
                                        140,
                                        140
                                    ],
                                    "children": [],
                                    "content": ":"
                                }
                            ],
                            "content": "\nid:"
                        },
                        {
                            "type": "FieldDecl",
                            "name": "subreddit",
                            "range": [
                                142,
                                144
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "str",
                                    "range": [
                                        144,
                                        144
                                    ],
                                    "children": [],
                                    "content": ":"
                                }
                            ],
                            "content": "\nsubreddit:"
                        },
                        {
                            "type": "FieldDecl",
                            "name": "title",
                            "range": [
                                146,
                                148
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "str",
                                    "range": [
                                        148,
                                        148
                                    ],
                                    "children": [],
                                    "content": ":"
                                }
                            ],
                            "content": "\ntitle:"
                        },
                        {
                            "type": "FieldDecl",
                            "name": "body",
                            "range": [
                                150,
                                152
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "str",
                                    "range": [
                                        152,
                                        152
                                    ],
                                    "children": [],
                                    "content": ":"
                                }
                            ],
                            "content": "\nbody:"
                        }
                    ],
                    "content": "):\nid:str\nsubreddit:str\ntitle:str\nbody:str\n"
                }
            ],
            "content": "\nclass RedditPost(BaseModel):\nid:str\nsubreddit:str\ntitle:str\nbody:str\n"
        },
        {
            "type": "ClassDecl",
            "name": "RedditComment",
            "range": [
                155,
                170
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "BaseModel",
                    "range": [
                        157,
                        159
                    ],
                    "children": [],
                    "content": "class RedditComment("
                },
                {
                    "type": "Property",
                    "name": "post_id",
                    "range": [
                        162,
                        164
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                164,
                                164
                            ],
                            "children": [],
                            "content": "post_id"
                        }
                    ],
                    "content": ":\npost_id"
                },
                {
                    "type": "Property",
                    "name": "comment",
                    "range": [
                        166,
                        168
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                168,
                                168
                            ],
                            "children": [],
                            "content": "comment"
                        }
                    ],
                    "content": "str\ncomment"
                }
            ],
            "content": "\n\nclass RedditComment(BaseModel):\npost_id:str\ncomment:str"
        },
        {
            "type": "FunctionDecl",
            "name": "get_praw",
            "range": [
                171,
                274
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "creds",
                    "range": [
                        174,
                        176
                    ],
                    "children": [],
                    "content": "def get_praw("
                },
                {
                    "type": "ReturnType",
                    "name": "praw.Reddit",
                    "range": [
                        180,
                        182
                    ],
                    "children": [],
                    "content": ")->"
                },
                {
                    "type": "Block",
                    "name": "",
                    "range": [
                        184,
                        274
                    ],
                    "children": [
                        {
                            "type": "Assignment",
                            "name": "client",
                            "range": [
                                185,
                                243
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "praw.Reddit",
                                    "range": [
                                        187,
                                        243
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "client_id",
                                            "range": [
                                                192,
                                                200
                                            ],
                                            "children": [],
                                            "content": "Reddit(\nclient_id=creds.client_id."
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "client_secret",
                                            "range": [
                                                203,
                                                211
                                            ],
                                            "children": [],
                                            "content": "),\nclient_secret=creds.client_secret."
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "username",
                                            "range": [
                                                214,
                                                222
                                            ],
                                            "children": [],
                                            "content": "),\nusername=creds.username."
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "password",
                                            "range": [
                                                225,
                                                233
                                            ],
                                            "children": [],
                                            "content": "),\npassword=creds.password."
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "user_agent",
                                            "range": [
                                                236,
                                                241
                                            ],
                                            "children": [],
                                            "content": "),\nuser_agent=creds"
                                        }
                                    ],
                                    "content": "\nclient=praw.Reddit(\nclient_id=creds.client_id.get_secret_value(),\nclient_secret=creds.client_secret.get_secret_value(),\nusername=creds.username.get_secret_value(),\npassword=creds.password.get_secret_value(),\nuser_agent=creds.user_agent"
                                }
                            ],
                            "content": "Reddit:\nclient=praw.Reddit(\nclient_id=creds.client_id.get_secret_value(),\nclient_secret=creds.client_secret.get_secret_value(),\nusername=creds.username.get_secret_value(),\npassword=creds.password.get_secret_value(),\nuser_agent=creds.user_agent"
                        },
                        {
                            "type": "Assignment",
                            "name": "me",
                            "range": [
                                245,
                                253
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "client.user.me",
                                    "range": [
                                        247,
                                        253
                                    ],
                                    "children": [],
                                    "content": "\nme=client.user."
                                }
                            ],
                            "content": "\n)\nme=client.user."
                        },
                        {
                            "type": "IfStatement",
                            "name": "",
                            "range": [
                                255,
                                264
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "not me",
                                    "range": [
                                        256,
                                        257
                                    ],
                                    "children": [],
                                    "content": ")\n"
                                },
                                {
                                    "type": "Block",
                                    "name": "",
                                    "range": [
                                        259,
                                        264
                                    ],
                                    "children": [
                                        {
                                            "type": "RaiseStatement",
                                            "name": "ValueError",
                                            "range": [
                                                260,
                                                264
                                            ],
                                            "children": [
                                                {
                                                    "type": "Argument",
                                                    "name": "\"Invalid Reddit credentials.\"",
                                                    "range": [
                                                        263,
                                                        263
                                                    ],
                                                    "children": [],
                                                    "content": "raise"
                                                }
                                            ],
                                            "content": "me:\nraise ValueError"
                                        }
                                    ],
                                    "content": "not me:\nraise ValueError"
                                }
                            ],
                            "content": "()\nif not me:\nraise ValueError"
                        },
                        {
                            "type": "CallExpression",
                            "name": "print",
                            "range": [
                                266,
                                270
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "f\"Logged in as Reddit user: {me.name}\"",
                                    "range": [
                                        269,
                                        269
                                    ],
                                    "children": [],
                                    "content": "print"
                                }
                            ],
                            "content": "\"Invalid Reddit credentials.\")\nprint("
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "",
                            "range": [
                                272,
                                273
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "client",
                                    "range": [
                                        273,
                                        273
                                    ],
                                    "children": [],
                                    "content": ")"
                                }
                            ],
                            "content": "\"Logged in as Reddit user: {me.name}\")"
                        }
                    ],
                    "content": ".Reddit:\nclient=praw.Reddit(\nclient_id=creds.client_id.get_secret_value(),\nclient_secret=creds.client_secret.get_secret_value(),\nusername=creds.username.get_secret_value(),\npassword=creds.password.get_secret_value(),\nuser_agent=creds.user_agent,\n)\nme=client.user.me()\nif not me:\nraise ValueError(\"Invalid Reddit credentials.\")\nprint(f \"Logged in as Reddit user: {me.name}\")\n"
                }
            ],
            "content": "\n\n\ndef get_praw(creds:RedditCredentials)->praw.Reddit:\nclient=praw.Reddit(\nclient_id=creds.client_id.get_secret_value(),\nclient_secret=creds.client_secret.get_secret_value(),\nusername=creds.username.get_secret_value(),\npassword=creds.password.get_secret_value(),\nuser_agent=creds.user_agent,\n)\nme=client.user.me()\nif not me:\nraise ValueError(\"Invalid Reddit credentials.\")\nprint(f \"Logged in as Reddit user: {me.name}\")\n"
        },
        {
            "type": "ClassDecl",
            "name": "PostRedditCommentBlock",
            "range": [
                845,
                877
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "Block",
                    "range": [
                        847,
                        849
                    ],
                    "children": [],
                    "content": "\n\n\n"
                }
            ],
            "content": "\n)\n\n\nclass PostRedditCommentBlock(Block):\nclass Input(BlockSchema):\ncreds:RedditCredentials=SchemaField(\ndescription=\"Reddit credentials\",default=RedditCredentials"
        },
        {
            "type": "ClassDecl",
            "name": "Input",
            "range": [
                852,
                888
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "BlockSchema",
                    "range": [
                        854,
                        856
                    ],
                    "children": [],
                    "content": "):\n"
                },
                {
                    "type": "FieldDecl",
                    "name": "creds",
                    "range": [
                        859,
                        876
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "RedditCredentials",
                            "range": [
                                861,
                                861
                            ],
                            "children": [],
                            "content": ")"
                        },
                        {
                            "type": "Assignment",
                            "name": "=",
                            "range": [
                                862,
                                862
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "SchemaField",
                                    "range": [
                                        863,
                                        876
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "description",
                                            "range": [
                                                866,
                                                868
                                            ],
                                            "children": [],
                                            "content": "RedditCredentials=SchemaField"
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "default",
                                            "range": [
                                                870,
                                                874
                                            ],
                                            "children": [],
                                            "content": "\ndescription=\"Reddit credentials\","
                                        }
                                    ],
                                    "content": "\ncreds:RedditCredentials=SchemaField(\ndescription=\"Reddit credentials\",default="
                                }
                            ],
                            "content": ":"
                        }
                    ],
                    "content": "(BlockSchema):\ncreds:RedditCredentials=SchemaField(\ndescription=\"Reddit credentials\",default="
                },
                {
                    "type": "FieldDecl",
                    "name": "data",
                    "range": [
                        878,
                        887
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "RedditComment",
                            "range": [
                                880,
                                880
                            ],
                            "children": [],
                            "content": "\n"
                        },
                        {
                            "type": "Assignment",
                            "name": "=",
                            "range": [
                                881,
                                881
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "SchemaField",
                                    "range": [
                                        882,
                                        887
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "description",
                                            "range": [
                                                884,
                                                886
                                            ],
                                            "children": [],
                                            "content": ":RedditComment="
                                        }
                                    ],
                                    "content": "\ndata:RedditComment=SchemaField"
                                }
                            ],
                            "content": ")"
                        }
                    ],
                    "content": "()\n)\ndata:RedditComment=SchemaField"
                }
            ],
            "content": "(Block):\nclass Input(BlockSchema):\ncreds:RedditCredentials=SchemaField(\ndescription=\"Reddit credentials\",default=RedditCredentials()\n)\ndata:RedditComment=SchemaField("
        },
        {
            "type": "ClassDecl",
            "name": "Output",
            "range": [
                890,
                908
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "BlockSchema",
                    "range": [
                        892,
                        894
                    ],
                    "children": [],
                    "content": ")\n\n"
                },
                {
                    "type": "FieldDecl",
                    "name": "comment_id",
                    "range": [
                        897,
                        906
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                899,
                                899
                            ],
                            "children": [],
                            "content": ")"
                        },
                        {
                            "type": "Assignment",
                            "name": "=",
                            "range": [
                                900,
                                900
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "SchemaField",
                                    "range": [
                                        901,
                                        906
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "description",
                                            "range": [
                                                903,
                                                905
                                            ],
                                            "children": [],
                                            "content": ":str="
                                        }
                                    ],
                                    "content": "\ncomment_id:str=SchemaField"
                                }
                            ],
                            "content": ":"
                        }
                    ],
                    "content": "(BlockSchema):\ncomment_id:str=SchemaField"
                }
            ],
            "content": "=\"Reddit comment\")\n\nclass Output(BlockSchema):\ncomment_id:str=SchemaField(description"
        },
        {
            "type": "FunctionDecl",
            "name": "__init__",
            "range": [
                909,
                999
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "self",
                    "range": [
                        912,
                        912
                    ],
                    "children": [],
                    "content": "\n"
                },
                {
                    "type": "CallExpression",
                    "name": "super",
                    "range": [
                        916,
                        919
                    ],
                    "children": [],
                    "content": "(self):"
                },
                {
                    "type": "CallExpression",
                    "name": "__init__",
                    "range": [
                        920,
                        998
                    ],
                    "children": [
                        {
                            "type": "Argument",
                            "name": "id",
                            "range": [
                                923,
                                925
                            ],
                            "children": [],
                            "content": ").__init__"
                        },
                        {
                            "type": "Argument",
                            "name": "description",
                            "range": [
                                928,
                                930
                            ],
                            "children": [],
                            "content": "id=\"4a92261b-701e-4ffb-8970-675fd28e261f\""
                        },
                        {
                            "type": "Argument",
                            "name": "categories",
                            "range": [
                                933,
                                939
                            ],
                            "children": [],
                            "content": "description=\"This block posts a Reddit comment on a specified Reddit post.\",\ncategories="
                        },
                        {
                            "type": "Argument",
                            "name": "input_schema",
                            "range": [
                                942,
                                947
                            ],
                            "children": [],
                            "content": ".SOCIAL},\ninput_schema"
                        },
                        {
                            "type": "Argument",
                            "name": "output_schema",
                            "range": [
                                949,
                                954
                            ],
                            "children": [],
                            "content": "PostRedditCommentBlock.Input,\noutput_schema"
                        },
                        {
                            "type": "Argument",
                            "name": "test_input",
                            "range": [
                                956,
                                970
                            ],
                            "children": [],
                            "content": "PostRedditCommentBlock.Output,\ntest_input={\"data\":{\"post_id\":\"id\","
                        },
                        {
                            "type": "Argument",
                            "name": "test_output",
                            "range": [
                                973,
                                981
                            ],
                            "children": [],
                            "content": "\"comment\"}},\ntest_output=[("
                        },
                        {
                            "type": "Argument",
                            "name": "test_mock",
                            "range": [
                                984,
                                995
                            ],
                            "children": [],
                            "content": "\"dummy_comment_id\")],\ntest_mock={\"reply_post\":lambda creds"
                        }
                    ],
                    "content": "\nsuper().__init__(\nid=\"4a92261b-701e-4ffb-8970-675fd28e261f\",\ndescription=\"This block posts a Reddit comment on a specified Reddit post.\",\ncategories={BlockCategory.SOCIAL},\ninput_schema=PostRedditCommentBlock.Input,\noutput_schema=PostRedditCommentBlock.Output,\ntest_input={\"data\":{\"post_id\":\"id\",\"comment\":\"comment\"}},\ntest_output=[(\"comment_id\",\"dummy_comment_id\")],\ntest_mock={\"reply_post\":lambda creds,comment:"
                }
            ],
            "content": "=\"Posted comment ID\")\n\ndef __init__(self):\nsuper().__init__(\nid=\"4a92261b-701e-4ffb-8970-675fd28e261f\",\ndescription=\"This block posts a Reddit comment on a specified Reddit post.\",\ncategories={BlockCategory.SOCIAL},\ninput_schema=PostRedditCommentBlock.Input,\noutput_schema=PostRedditCommentBlock.Output,\ntest_input={\"data\":{\"post_id\":\"id\",\"comment\":\"comment\"}},\ntest_output=[(\"comment_id\",\"dummy_comment_id\")],\ntest_mock={\"reply_post\":lambda creds,comment:\"dummy_comment_id\""
        },
        {
            "type": "FunctionDecl",
            "name": "reply_post",
            "range": [
                1004,
                1066
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "creds",
                    "range": [
                        1007,
                        1009
                    ],
                    "children": [],
                    "content": "staticmethod\ndef"
                },
                {
                    "type": "Parameter",
                    "name": "comment",
                    "range": [
                        1011,
                        1013
                    ],
                    "children": [],
                    "content": "(creds:"
                },
                {
                    "type": "ReturnType",
                    "name": "str",
                    "range": [
                        1017,
                        1017
                    ],
                    "children": [],
                    "content": ":"
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        1021,
                        1021
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "get_praw",
                            "range": [
                                1022,
                                1025
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "creds",
                                    "range": [
                                        1024,
                                        1024
                                    ],
                                    "children": [],
                                    "content": "\n"
                                }
                            ],
                            "content": "str:\nclient"
                        }
                    ],
                    "content": ">"
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        1028,
                        1028
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "submission",
                            "range": [
                                1031,
                                1038
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "id",
                                    "range": [
                                        1033,
                                        1035
                                    ],
                                    "children": [],
                                    "content": "=client."
                                }
                            ],
                            "content": "\nsubmission=client.submission(id"
                        }
                    ],
                    "content": "("
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        1041,
                        1041
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "reply",
                            "range": [
                                1044,
                                1049
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "comment",
                                    "range": [
                                        1046,
                                        1048
                                    ],
                                    "children": [],
                                    "content": "=submission."
                                }
                            ],
                            "content": "\nnew_comment=submission.reply"
                        }
                    ],
                    "content": "."
                },
                {
                    "type": "IfStatement",
                    "name": "if",
                    "range": [
                        1051,
                        1054
                    ],
                    "children": [
                        {
                            "type": "LogicalNot",
                            "name": "not",
                            "range": [
                                1052,
                                1052
                            ],
                            "children": [],
                            "content": "."
                        },
                        {
                            "type": "CallExpression",
                            "name": "ValueError",
                            "range": [
                                1057,
                                1060
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "\"Failed to post comment.\"",
                                    "range": [
                                        1059,
                                        1059
                                    ],
                                    "children": [],
                                    "content": ":"
                                }
                            ],
                            "content": "not new_comment:\n"
                        }
                    ],
                    "content": "comment.comment)"
                },
                {
                    "type": "ReturnStatement",
                    "name": "return",
                    "range": [
                        1062,
                        1066
                    ],
                    "children": [
                        {
                            "type": "MemberAccess",
                            "name": ".",
                            "range": [
                                1064,
                                1065
                            ],
                            "children": [],
                            "content": "\"Failed to post comment.\")"
                        }
                    ],
                    "content": "ValueError(\"Failed to post comment.\")\n"
                }
            ],
            "content": "\n\n@staticmethod\ndef reply_post(creds:RedditCredentials,comment:RedditComment)->str:\nclient=get_praw(creds)\nsubmission=client.submission(id=comment.post_id)\nnew_comment=submission.reply(comment.comment)\nif not new_comment:\nraise ValueError(\"Failed to post comment.\")\n"
        },
        {
            "type": "FunctionDecl",
            "name": "run",
            "range": [
                1068,
                1102
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "self",
                    "range": [
                        1071,
                        1071
                    ],
                    "children": [],
                    "content": "\n"
                },
                {
                    "type": "Parameter",
                    "name": "input_data",
                    "range": [
                        1073,
                        1075
                    ],
                    "children": [],
                    "content": "def run("
                },
                {
                    "type": "Parameter",
                    "name": "kwargs",
                    "range": [
                        1079,
                        1079
                    ],
                    "children": [],
                    "content": ":"
                },
                {
                    "type": "ReturnType",
                    "name": "BlockOutput",
                    "range": [
                        1083,
                        1083
                    ],
                    "children": [],
                    "content": "*"
                },
                {
                    "type": "YieldStatement",
                    "name": "yield",
                    "range": [
                        1086,
                        1101
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "\"comment_id\"",
                            "range": [
                                1087,
                                1087
                            ],
                            "children": [],
                            "content": ">"
                        },
                        {
                            "type": "CallExpression",
                            "name": "reply_post",
                            "range": [
                                1091,
                                1100
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "input_data.creds",
                                    "range": [
                                        1093,
                                        1095
                                    ],
                                    "children": [],
                                    "content": ",self."
                                },
                                {
                                    "type": "Argument",
                                    "name": "input_data.data",
                                    "range": [
                                        1097,
                                        1099
                                    ],
                                    "children": [],
                                    "content": "(input_data."
                                }
                            ],
                            "content": "yield \"comment_id\",self.reply_post(input_data.creds"
                        }
                    ],
                    "content": "->BlockOutput:\nyield \"comment_id\",self.reply_post(input_data.creds,"
                }
            ],
            "content": "new_comment.id\n\ndef run(self,input_data:Input,**kwargs)->BlockOutput:\nyield \"comment_id\",self.reply_post(input_data.creds,input_data"
        }
    ],
    "content": "from datetime import datetime,timezone\nfrom typing import Iterator\n\nimport praw\nfrom pydantic import BaseModel,ConfigDict\n\nfrom backend.data.block import Block,BlockCategory,BlockOutput,BlockSchema\nfrom backend.data.model import BlockSecret,SchemaField,SecretField\nfrom backend.util.mock import MockObject\n\n\nclass RedditCredentials(BaseModel):\nclient_id:BlockSecret=SecretField(key=\"reddit_client_id\")\nclient_secret:BlockSecret=SecretField(key=\"reddit_client_secret\")\nusername:BlockSecret=SecretField(key=\"reddit_username\")\npassword:BlockSecret=SecretField(key=\"reddit_password\")\nuser_agent:str=\"AutoGPT:1.0 (by /u/autogpt)\"\n\nmodel_config=ConfigDict(title=\"Reddit Credentials\")\n\n\nclass RedditPost(BaseModel):\nid:str\nsubreddit:str\ntitle:str\nbody:str\n\n\nclass RedditComment(BaseModel):\npost_id:str\ncomment:str\n\n\ndef get_praw(creds:RedditCredentials)->praw.Reddit:\nclient=praw.Reddit(\nclient_id=creds.client_id.get_secret_value(),\nclient_secret=creds.client_secret.get_secret_value(),\nusername=creds.username.get_secret_value(),\npassword=creds.password.get_secret_value(),\nuser_agent=creds.user_agent,\n)\nme=client.user.me()\nif not me:\nraise ValueError(\"Invalid Reddit credentials.\")\nprint(f \"Logged in as Reddit user: {me.name}\")\nreturn client\n\n\nclass GetRedditPostsBlock(Block):\nclass Input(BlockSchema):\nsubreddit:str=SchemaField(description=\"Subreddit name\")\ncreds:RedditCredentials=SchemaField(\ndescription=\"Reddit credentials\",\ndefault=RedditCredentials(),\n)\nlast_minutes:int|None=SchemaField(\ndescription=\"Post time to stop minutes ago while fetching posts\",\ndefault=None,\n)\nlast_post:str|None=SchemaField(\ndescription=\"Post ID to stop when reached while fetching posts\",\ndefault=None,\n)\npost_limit:int|None=SchemaField(\ndescription=\"Number of posts to fetch\",default=10\n)\n\nclass Output(BlockSchema):\npost:RedditPost=SchemaField(description=\"Reddit post\")\n\ndef __init__(self):\nsuper().__init__(\ndisabled=True,\nid=\"c6731acb-4285-4ee1-bc9b-03d0766c370f\",\ndescription=\"This block fetches Reddit posts from a defined subreddit name.\",\ncategories={BlockCategory.SOCIAL},\ninput_schema=GetRedditPostsBlock.Input,\noutput_schema=GetRedditPostsBlock.Output,\ntest_input={\n\"creds\":{\n\"client_id\":\"client_id\",\n\"client_secret\":\"client_secret\",\n\"username\":\"username\",\n\"password\":\"password\",\n\"user_agent\":\"user_agent\",\n},\n\"subreddit\":\"subreddit\",\n\"last_post\":\"id3\",\n\"post_limit\":2,\n},\ntest_output=[\n(\n\"post\",\nRedditPost(\nid=\"id1\",subreddit=\"subreddit\",title=\"title1\",body=\"body1\"\n),\n),\n(\n\"post\",\nRedditPost(\nid=\"id2\",subreddit=\"subreddit\",title=\"title2\",body=\"body2\"\n),\n),\n],\ntest_mock={\n\"get_posts\":lambda _:[\nMockObject(id=\"id1\",title=\"title1\",selftext=\"body1\"),\nMockObject(id=\"id2\",title=\"title2\",selftext=\"body2\"),\nMockObject(id=\"id3\",title=\"title2\",selftext=\"body2\"),\n]\n},\n)\n\n@staticmethod\ndef get_posts(input_data:Input)->Iterator[praw.reddit.Submission]:\nclient=get_praw(input_data.creds)\nsubreddit=client.subreddit(input_data.subreddit)\nreturn subreddit.new(limit=input_data.post_limit or10)\n\ndef run(self,input_data:Input,**kwargs)->BlockOutput:\ncurrent_time=datetime.now(tz=timezone.utc)\nfor post in self.get_posts(input_data):\nif input_data.last_minutes:\npost_datetime=datetime.fromtimestamp(\npost.created_utc,tz=timezone.utc\n)\ntime_difference=current_time-post_datetime\nif time_difference.total_seconds()/60>input_data.last_minutes:\ncontinue\n\nif input_data.last_post and post.id==input_data.last_post:\nbreak\n\nyield \"post\",RedditPost(\nid=post.id,\nsubreddit=input_data.subreddit,\ntitle=post.title,\nbody=post.selftext,\n)\n\n\nclass PostRedditCommentBlock(Block):\nclass Input(BlockSchema):\ncreds:RedditCredentials=SchemaField(\ndescription=\"Reddit credentials\",default=RedditCredentials()\n)\ndata:RedditComment=SchemaField(description=\"Reddit comment\")\n\nclass Output(BlockSchema):\ncomment_id:str=SchemaField(description=\"Posted comment ID\")\n\ndef __init__(self):\nsuper().__init__(\nid=\"4a92261b-701e-4ffb-8970-675fd28e261f\",\ndescription=\"This block posts a Reddit comment on a specified Reddit post.\",\ncategories={BlockCategory.SOCIAL},\ninput_schema=PostRedditCommentBlock.Input,\noutput_schema=PostRedditCommentBlock.Output,\ntest_input={\"data\":{\"post_id\":\"id\",\"comment\":\"comment\"}},\ntest_output=[(\"comment_id\",\"dummy_comment_id\")],\ntest_mock={\"reply_post\":lambda creds,comment:\"dummy_comment_id\"},\n)\n\n@staticmethod\ndef reply_post(creds:RedditCredentials,comment:RedditComment)->str:\nclient=get_praw(creds)\nsubmission=client.submission(id=comment.post_id)\nnew_comment=submission.reply(comment.comment)\nif not new_comment:\nraise ValueError(\"Failed to post comment.\")\nreturn new_comment.id\n\ndef run(self,input_data:Input,**kwargs)->BlockOutput:\nyield \"comment_id\",self.reply_post(input_data.creds,input_data"
}