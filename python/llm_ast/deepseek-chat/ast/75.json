{
    "type": "Program",
    "name": "Global",
    "range": [
        0,
        124
    ],
    "children": [
        {
            "type": "ImportDeclaration",
            "name": "pytest",
            "range": [
                0,
                2
            ],
            "children": [
                {
                    "type": "Keyword",
                    "name": "import",
                    "range": [
                        0,
                        0
                    ],
                    "children": [],
                    "content": "import"
                },
                {
                    "type": "Identifier",
                    "name": "pytest",
                    "range": [
                        1,
                        1
                    ],
                    "children": [],
                    "content": "pytest"
                }
            ],
            "content": "import pytest\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "remove_color_codes",
            "range": [
                4,
                10
            ],
            "children": [
                {
                    "type": "Keyword",
                    "name": "from",
                    "range": [
                        4,
                        4
                    ],
                    "children": [],
                    "content": "from"
                },
                {
                    "type": "Identifier",
                    "name": ".",
                    "range": [
                        5,
                        5
                    ],
                    "children": [],
                    "content": "."
                },
                {
                    "type": "Identifier",
                    "name": "utils",
                    "range": [
                        6,
                        6
                    ],
                    "children": [],
                    "content": "utils"
                },
                {
                    "type": "Keyword",
                    "name": "import",
                    "range": [
                        7,
                        7
                    ],
                    "children": [],
                    "content": "import"
                },
                {
                    "type": "Identifier",
                    "name": "remove_color_codes",
                    "range": [
                        8,
                        8
                    ],
                    "children": [],
                    "content": "remove_color_codes"
                }
            ],
            "content": "from.utils import remove_color_codes\n\n"
        },
        {
            "type": "FunctionDecl",
            "name": "pytest.mark.parametrize",
            "range": [
                11,
                105
            ],
            "children": [
                {
                    "type": "Arguments",
                    "name": "",
                    "range": [
                        17,
                        104
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "",
                            "range": [
                                19,
                                19
                            ],
                            "children": [],
                            "content": "\n"
                        },
                        {
                            "type": "ArrayExpression",
                            "name": "",
                            "range": [
                                22,
                                101
                            ],
                            "children": [
                                {
                                    "type": "TupleExpression",
                                    "name": "",
                                    "range": [
                                        24,
                                        40
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "",
                                            "range": [
                                                26,
                                                26
                                            ],
                                            "children": [],
                                            "content": "\n"
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "",
                                            "range": [
                                                28,
                                                30
                                            ],
                                            "children": [],
                                            "content": "\n\"ARGUMENTS = \\x1b[36m{'url': 'https://www.google.com',\"\n"
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "",
                                            "range": [
                                                33,
                                                33
                                            ],
                                            "children": [],
                                            "content": "\n"
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "",
                                            "range": [
                                                35,
                                                37
                                            ],
                                            "children": [],
                                            "content": "\n\"ARGUMENTS = {'url': 'https://www.google.com',\"\n"
                                        }
                                    ],
                                    "content": "\n(\n\"COMMAND = \\x1b[36mbrowse_website\\x1b[0m  \"\n\"ARGUMENTS = \\x1b[36m{'url': 'https://www.google.com',\"\n\" 'question': 'What is the capital of France?'}\\x1b[0m\",\n\"COMMAND = browse_website  \"\n\"ARGUMENTS = {'url': 'https://www.google.com',\"\n\" 'question': 'What is the capital of France?'}\",\n"
                                },
                                {
                                    "type": "TupleExpression",
                                    "name": "",
                                    "range": [
                                        43,
                                        59
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "",
                                            "range": [
                                                45,
                                                49
                                            ],
                                            "children": [],
                                            "content": "\n\"{'Schaue dir meine Projekte auf github () an, als auch meine Webseiten': \"\n\"'https://github.com/Significant-Gravitas/AutoGPT,\"\n"
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "",
                                            "range": [
                                                52,
                                                56
                                            ],
                                            "children": [],
                                            "content": "\n\"{'Schaue dir meine Projekte auf github () an, als auch meine Webseiten': \"\n\"'https://github.com/Significant-Gravitas/AutoGPT,\"\n"
                                        }
                                    ],
                                    "content": "\n(\n\"{'Schaue dir meine Projekte auf github () an, als auch meine Webseiten': \"\n\"'https://github.com/Significant-Gravitas/AutoGPT,\"\n\" https://discord.gg/autogpt und https://twitter.com/Auto_GPT'}\",\n\"{'Schaue dir meine Projekte auf github () an, als auch meine Webseiten': \"\n\"'https://github.com/Significant-Gravitas/AutoGPT,\"\n\" https://discord.gg/autogpt und https://twitter.com/Auto_GPT'}\",\n"
                                },
                                {
                                    "type": "TupleExpression",
                                    "name": "",
                                    "range": [
                                        62,
                                        66
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "",
                                            "range": [
                                                63,
                                                63
                                            ],
                                            "children": [],
                                            "content": "("
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "",
                                            "range": [
                                                65,
                                                65
                                            ],
                                            "children": [],
                                            "content": ","
                                        }
                                    ],
                                    "content": "\n(\"\",\"\""
                                },
                                {
                                    "type": "TupleExpression",
                                    "name": "",
                                    "range": [
                                        69,
                                        73
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "",
                                            "range": [
                                                70,
                                                70
                                            ],
                                            "children": [],
                                            "content": "("
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "",
                                            "range": [
                                                72,
                                                72
                                            ],
                                            "children": [],
                                            "content": ","
                                        }
                                    ],
                                    "content": "\n(\"hello\",\"hello\""
                                },
                                {
                                    "type": "TupleExpression",
                                    "name": "",
                                    "range": [
                                        76,
                                        80
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "",
                                            "range": [
                                                77,
                                                77
                                            ],
                                            "children": [],
                                            "content": "("
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "",
                                            "range": [
                                                79,
                                                79
                                            ],
                                            "children": [],
                                            "content": ","
                                        }
                                    ],
                                    "content": "\n(\"hello\\x1b[31m world\",\"hello world\""
                                },
                                {
                                    "type": "TupleExpression",
                                    "name": "",
                                    "range": [
                                        83,
                                        87
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "",
                                            "range": [
                                                84,
                                                84
                                            ],
                                            "children": [],
                                            "content": "("
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "",
                                            "range": [
                                                86,
                                                86
                                            ],
                                            "children": [],
                                            "content": ","
                                        }
                                    ],
                                    "content": "\n(\"\\x1b[36mHello,\\x1b[32m World!\",\"Hello, World!\""
                                },
                                {
                                    "type": "TupleExpression",
                                    "name": "",
                                    "range": [
                                        90,
                                        98
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "",
                                            "range": [
                                                92,
                                                92
                                            ],
                                            "children": [],
                                            "content": "\n"
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "",
                                            "range": [
                                                95,
                                                95
                                            ],
                                            "children": [],
                                            "content": "\n"
                                        }
                                    ],
                                    "content": "\n(\n\"\\x1b[1m\\x1b[31mError:\\x1b[0m\\x1b[31m file not found\",\n\"Error: file not found\",\n"
                                }
                            ],
                            "content": "\n[\n(\n\"COMMAND = \\x1b[36mbrowse_website\\x1b[0m  \"\n\"ARGUMENTS = \\x1b[36m{'url': 'https://www.google.com',\"\n\" 'question': 'What is the capital of France?'}\\x1b[0m\",\n\"COMMAND = browse_website  \"\n\"ARGUMENTS = {'url': 'https://www.google.com',\"\n\" 'question': 'What is the capital of France?'}\",\n),\n(\n\"{'Schaue dir meine Projekte auf github () an, als auch meine Webseiten': \"\n\"'https://github.com/Significant-Gravitas/AutoGPT,\"\n\" https://discord.gg/autogpt und https://twitter.com/Auto_GPT'}\",\n\"{'Schaue dir meine Projekte auf github () an, als auch meine Webseiten': \"\n\"'https://github.com/Significant-Gravitas/AutoGPT,\"\n\" https://discord.gg/autogpt und https://twitter.com/Auto_GPT'}\",\n),\n(\"\",\"\"),\n(\"hello\",\"hello\"),\n(\"hello\\x1b[31m world\",\"hello world\"),\n(\"\\x1b[36mHello,\\x1b[32m World!\",\"Hello, World!\"),\n(\n\"\\x1b[1m\\x1b[31mError:\\x1b[0m\\x1b[31m file not found\",\n\"Error: file not found\",\n),\n"
                        }
                    ],
                    "content": "parametrize(\n\"raw_text, clean_text\",\n[\n(\n\"COMMAND = \\x1b[36mbrowse_website\\x1b[0m  \"\n\"ARGUMENTS = \\x1b[36m{'url': 'https://www.google.com',\"\n\" 'question': 'What is the capital of France?'}\\x1b[0m\",\n\"COMMAND = browse_website  \"\n\"ARGUMENTS = {'url': 'https://www.google.com',\"\n\" 'question': 'What is the capital of France?'}\",\n),\n(\n\"{'Schaue dir meine Projekte auf github () an, als auch meine Webseiten': \"\n\"'https://github.com/Significant-Gravitas/AutoGPT,\"\n\" https://discord.gg/autogpt und https://twitter.com/Auto_GPT'}\",\n\"{'Schaue dir meine Projekte auf github () an, als auch meine Webseiten': \"\n\"'https://github.com/Significant-Gravitas/AutoGPT,\"\n\" https://discord.gg/autogpt und https://twitter.com/Auto_GPT'}\",\n),\n(\"\",\"\"),\n(\"hello\",\"hello\"),\n(\"hello\\x1b[31m world\",\"hello world\"),\n(\"\\x1b[36mHello,\\x1b[32m World!\",\"Hello, World!\"),\n(\n\"\\x1b[1m\\x1b[31mError:\\x1b[0m\\x1b[31m file not found\",\n\"Error: file not found\",\n),\n],\n"
                }
            ],
            "content": "\n@pytest.mark.parametrize(\n\"raw_text, clean_text\",\n[\n(\n\"COMMAND = \\x1b[36mbrowse_website\\x1b[0m  \"\n\"ARGUMENTS = \\x1b[36m{'url': 'https://www.google.com',\"\n\" 'question': 'What is the capital of France?'}\\x1b[0m\",\n\"COMMAND = browse_website  \"\n\"ARGUMENTS = {'url': 'https://www.google.com',\"\n\" 'question': 'What is the capital of France?'}\",\n),\n(\n\"{'Schaue dir meine Projekte auf github () an, als auch meine Webseiten': \"\n\"'https://github.com/Significant-Gravitas/AutoGPT,\"\n\" https://discord.gg/autogpt und https://twitter.com/Auto_GPT'}\",\n\"{'Schaue dir meine Projekte auf github () an, als auch meine Webseiten': \"\n\"'https://github.com/Significant-Gravitas/AutoGPT,\"\n\" https://discord.gg/autogpt und https://twitter.com/Auto_GPT'}\",\n),\n(\"\",\"\"),\n(\"hello\",\"hello\"),\n(\"hello\\x1b[31m world\",\"hello world\"),\n(\"\\x1b[36mHello,\\x1b[32m World!\",\"Hello, World!\"),\n(\n\"\\x1b[1m\\x1b[31mError:\\x1b[0m\\x1b[31m file not found\",\n\"Error: file not found\",\n),\n],\n)"
        },
        {
            "type": "FunctionDecl",
            "name": "test_remove_color_codes",
            "range": [
                106,
                124
            ],
            "children": [
                {
                    "type": "FunctionSignature",
                    "name": "test_remove_color_codes",
                    "range": [
                        106,
                        113
                    ],
                    "children": [
                        {
                            "type": "Keyword",
                            "name": "def",
                            "range": [
                                106,
                                106
                            ],
                            "children": [],
                            "content": "\n"
                        },
                        {
                            "type": "Identifier",
                            "name": "test_remove_color_codes",
                            "range": [
                                107,
                                107
                            ],
                            "children": [],
                            "content": "def"
                        },
                        {
                            "type": "Parameter",
                            "name": "raw_text",
                            "range": [
                                109,
                                109
                            ],
                            "children": [],
                            "content": "("
                        },
                        {
                            "type": "Parameter",
                            "name": "clean_text",
                            "range": [
                                111,
                                111
                            ],
                            "children": [],
                            "content": ","
                        }
                    ],
                    "content": "\ndef test_remove_color_codes(raw_text,clean_text)"
                },
                {
                    "type": "FunctionBody",
                    "name": "",
                    "range": [
                        114,
                        124
                    ],
                    "children": [
                        {
                            "type": "AssertStatement",
                            "name": "",
                            "range": [
                                115,
                                123
                            ],
                            "children": [
                                {
                                    "type": "Keyword",
                                    "name": "assert",
                                    "range": [
                                        115,
                                        115
                                    ],
                                    "children": [],
                                    "content": "\n"
                                },
                                {
                                    "type": "CallExpression",
                                    "name": "remove_color_codes",
                                    "range": [
                                        116,
                                        119
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "remove_color_codes",
                                            "range": [
                                                116,
                                                116
                                            ],
                                            "children": [],
                                            "content": "assert"
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "raw_text",
                                            "range": [
                                                118,
                                                118
                                            ],
                                            "children": [],
                                            "content": "("
                                        }
                                    ],
                                    "content": "assert remove_color_codes(raw_text"
                                },
                                {
                                    "type": "BinaryExpression",
                                    "name": "==",
                                    "range": [
                                        120,
                                        121
                                    ],
                                    "children": [],
                                    "content": ")="
                                },
                                {
                                    "type": "Identifier",
                                    "name": "clean_text",
                                    "range": [
                                        122,
                                        122
                                    ],
                                    "children": [],
                                    "content": "="
                                }
                            ],
                            "content": "\nassert remove_color_codes(raw_text)==clean_text"
                        }
                    ],
                    "content": ":\nassert remove_color_codes(raw_text)==clean_text\n"
                }
            ],
            "content": "\ndef test_remove_color_codes(raw_text,clean_text):\nassert remove_color_codes(raw_text)==clean_text\n"
        }
    ],
    "content": "import pytest\n\nfrom.utils import remove_color_codes\n\n\n@pytest.mark.parametrize(\n\"raw_text, clean_text\",\n[\n(\n\"COMMAND = \\x1b[36mbrowse_website\\x1b[0m  \"\n\"ARGUMENTS = \\x1b[36m{'url': 'https://www.google.com',\"\n\" 'question': 'What is the capital of France?'}\\x1b[0m\",\n\"COMMAND = browse_website  \"\n\"ARGUMENTS = {'url': 'https://www.google.com',\"\n\" 'question': 'What is the capital of France?'}\",\n),\n(\n\"{'Schaue dir meine Projekte auf github () an, als auch meine Webseiten': \"\n\"'https://github.com/Significant-Gravitas/AutoGPT,\"\n\" https://discord.gg/autogpt und https://twitter.com/Auto_GPT'}\",\n\"{'Schaue dir meine Projekte auf github () an, als auch meine Webseiten': \"\n\"'https://github.com/Significant-Gravitas/AutoGPT,\"\n\" https://discord.gg/autogpt und https://twitter.com/Auto_GPT'}\",\n),\n(\"\",\"\"),\n(\"hello\",\"hello\"),\n(\"hello\\x1b[31m world\",\"hello world\"),\n(\"\\x1b[36mHello,\\x1b[32m World!\",\"Hello, World!\"),\n(\n\"\\x1b[1m\\x1b[31mError:\\x1b[0m\\x1b[31m file not found\",\n\"Error: file not found\",\n),\n],\n)\ndef test_remove_color_codes(raw_text,clean_text):\nassert remove_color_codes(raw_text)==clean_text\n"
}