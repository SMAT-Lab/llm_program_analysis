{
    "type": "Program",
    "name": "Global",
    "range": [
        0,
        158
    ],
    "children": [
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                0,
                1
            ],
            "children": [
                {
                    "type": "ImportSource",
                    "name": "threading",
                    "range": [
                        1,
                        1
                    ],
                    "children": [],
                    "content": "threading"
                }
            ],
            "content": "import threading"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                3,
                6
            ],
            "children": [
                {
                    "type": "ImportSource",
                    "name": "typing",
                    "range": [
                        4,
                        4
                    ],
                    "children": [],
                    "content": "typing"
                },
                {
                    "type": "ImportedItems",
                    "name": "",
                    "range": [
                        5,
                        6
                    ],
                    "children": [
                        {
                            "type": "ImportedItem",
                            "name": "Callable",
                            "range": [
                                6,
                                6
                            ],
                            "children": [],
                            "content": "Callable"
                        },
                        {
                            "type": "ImportedItem",
                            "name": "ParamSpec",
                            "range": [
                                8,
                                8
                            ],
                            "children": [],
                            "content": "ParamSpec"
                        },
                        {
                            "type": "ImportedItem",
                            "name": "TypeVar",
                            "range": [
                                10,
                                10
                            ],
                            "children": [],
                            "content": "TypeVar"
                        }
                    ],
                    "content": "import Callable"
                }
            ],
            "content": "from typing import Callable"
        },
        {
            "type": "TypeAliasDeclaration",
            "name": "P",
            "range": [
                13,
                18
            ],
            "children": [
                {
                    "type": "TypeAliasTarget",
                    "name": "ParamSpec",
                    "range": [
                        15,
                        15
                    ],
                    "children": [],
                    "content": "ParamSpec"
                },
                {
                    "type": "TypeParameter",
                    "name": "P",
                    "range": [
                        17,
                        17
                    ],
                    "children": [],
                    "content": "\"P\""
                }
            ],
            "content": "P=ParamSpec(\"P\")"
        },
        {
            "type": "TypeAliasDeclaration",
            "name": "R",
            "range": [
                20,
                25
            ],
            "children": [
                {
                    "type": "TypeAliasTarget",
                    "name": "TypeVar",
                    "range": [
                        22,
                        22
                    ],
                    "children": [],
                    "content": "TypeVar"
                },
                {
                    "type": "TypeParameter",
                    "name": "R",
                    "range": [
                        24,
                        24
                    ],
                    "children": [],
                    "content": "\"R\""
                }
            ],
            "content": "R=TypeVar(\"R\")"
        },
        {
            "type": "FunctionDecl",
            "name": "thread_cached",
            "range": [
                29,
                158
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "func",
                    "range": [
                        32,
                        48
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "Callable",
                            "range": [
                                34,
                                48
                            ],
                            "children": [],
                            "content": "Callable[P,R])->Callable[P,R]"
                        }
                    ],
                    "content": "func:Callable[P,R])->Callable[P,R]"
                },
                {
                    "type": "ReturnType",
                    "name": "Callable",
                    "range": [
                        43,
                        48
                    ],
                    "children": [],
                    "content": "Callable[P,R]"
                },
                {
                    "type": "VariableDecl",
                    "name": "thread_local",
                    "range": [
                        51,
                        57
                    ],
                    "children": [
                        {
                            "type": "AssignmentExpression",
                            "name": "=",
                            "range": [
                                52,
                                57
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "threading.local",
                                    "range": [
                                        53,
                                        57
                                    ],
                                    "children": [],
                                    "content": "threading.local()"
                                }
                            ],
                            "content": "=threading.local()"
                        }
                    ],
                    "content": "thread_local=threading.local()"
                },
                {
                    "type": "FunctionDecl",
                    "name": "wrapper",
                    "range": [
                        60,
                        157
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "args",
                            "range": [
                                64,
                                68
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "P.args",
                                    "range": [
                                        66,
                                        68
                                    ],
                                    "children": [],
                                    "content": "P.args"
                                }
                            ],
                            "content": "args:P.args"
                        },
                        {
                            "type": "Parameter",
                            "name": "kwargs",
                            "range": [
                                72,
                                76
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "P.kwargs",
                                    "range": [
                                        74,
                                        76
                                    ],
                                    "children": [],
                                    "content": "P.kwargs"
                                }
                            ],
                            "content": "kwargs:P.kwargs"
                        },
                        {
                            "type": "ReturnType",
                            "name": "R",
                            "range": [
                                80,
                                80
                            ],
                            "children": [],
                            "content": "R"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "cache",
                            "range": [
                                83,
                                92
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "=",
                                    "range": [
                                        84,
                                        92
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "getattr",
                                            "range": [
                                                85,
                                                92
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "thread_local",
                                                    "range": [
                                                        87,
                                                        87
                                                    ],
                                                    "children": [],
                                                    "content": "thread_local"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "name": "\"cache\"",
                                                    "range": [
                                                        89,
                                                        89
                                                    ],
                                                    "children": [],
                                                    "content": "\"cache\""
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "None",
                                                    "range": [
                                                        91,
                                                        91
                                                    ],
                                                    "children": [],
                                                    "content": "None"
                                                }
                                            ],
                                            "content": "getattr(thread_local,\"cache\",None)"
                                        }
                                    ],
                                    "content": "=getattr(thread_local,\"cache\",None)"
                                }
                            ],
                            "content": "cache=getattr(thread_local,\"cache\",None)"
                        },
                        {
                            "type": "IfStatement",
                            "name": "",
                            "range": [
                                94,
                                108
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "cache is None",
                                    "range": [
                                        95,
                                        97
                                    ],
                                    "children": [],
                                    "content": "cache is None"
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "",
                                    "range": [
                                        98,
                                        108
                                    ],
                                    "children": [
                                        {
                                            "type": "VariableDecl",
                                            "name": "cache",
                                            "range": [
                                                100,
                                                107
                                            ],
                                            "children": [
                                                {
                                                    "type": "AssignmentExpression",
                                                    "name": "=",
                                                    "range": [
                                                        101,
                                                        107
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "ObjectExpression",
                                                            "name": "{}",
                                                            "range": [
                                                                106,
                                                                107
                                                            ],
                                                            "children": [],
                                                            "content": "{}"
                                                        }
                                                    ],
                                                    "content": "=thread_local.cache={}"
                                                }
                                            ],
                                            "content": "cache=thread_local.cache={}"
                                        }
                                    ],
                                    "content": ":\ncache=thread_local.cache={}\n"
                                }
                            ],
                            "content": "if cache is None:\ncache=thread_local.cache={}\n"
                        },
                        {
                            "type": "VariableDecl",
                            "name": "key",
                            "range": [
                                109,
                                125
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "=",
                                    "range": [
                                        110,
                                        125
                                    ],
                                    "children": [
                                        {
                                            "type": "TupleExpression",
                                            "name": "",
                                            "range": [
                                                111,
                                                125
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "args",
                                                    "range": [
                                                        112,
                                                        112
                                                    ],
                                                    "children": [],
                                                    "content": "args"
                                                },
                                                {
                                                    "type": "CallExpression",
                                                    "name": "tuple",
                                                    "range": [
                                                        114,
                                                        124
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "sorted",
                                                            "range": [
                                                                116,
                                                                123
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "CallExpression",
                                                                    "name": "items",
                                                                    "range": [
                                                                        120,
                                                                        122
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "kwargs",
                                                                            "range": [
                                                                                118,
                                                                                118
                                                                            ],
                                                                            "children": [],
                                                                            "content": "kwargs"
                                                                        }
                                                                    ],
                                                                    "content": "items()"
                                                                }
                                                            ],
                                                            "content": "sorted(kwargs.items())"
                                                        }
                                                    ],
                                                    "content": "tuple(sorted(kwargs.items()))"
                                                }
                                            ],
                                            "content": "(args,tuple(sorted(kwargs.items())))"
                                        }
                                    ],
                                    "content": "=(args,tuple(sorted(kwargs.items())))"
                                }
                            ],
                            "content": "key=(args,tuple(sorted(kwargs.items())))"
                        },
                        {
                            "type": "IfStatement",
                            "name": "",
                            "range": [
                                127,
                                148
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "key not in cache",
                                    "range": [
                                        128,
                                        131
                                    ],
                                    "children": [],
                                    "content": "key not in cache"
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "",
                                    "range": [
                                        132,
                                        148
                                    ],
                                    "children": [
                                        {
                                            "type": "AssignmentExpression",
                                            "name": "cache[key] = func(*args, **kwargs)",
                                            "range": [
                                                134,
                                                147
                                            ],
                                            "children": [
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "cache[key]",
                                                    "range": [
                                                        134,
                                                        137
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "cache",
                                                            "range": [
                                                                134,
                                                                134
                                                            ],
                                                            "children": [],
                                                            "content": "cache"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "key",
                                                            "range": [
                                                                136,
                                                                136
                                                            ],
                                                            "children": [],
                                                            "content": "key"
                                                        }
                                                    ],
                                                    "content": "cache[key]"
                                                },
                                                {
                                                    "type": "CallExpression",
                                                    "name": "func",
                                                    "range": [
                                                        139,
                                                        147
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "SpreadElement",
                                                            "name": "*args",
                                                            "range": [
                                                                141,
                                                                142
                                                            ],
                                                            "children": [],
                                                            "content": "*args"
                                                        },
                                                        {
                                                            "type": "SpreadElement",
                                                            "name": "**kwargs",
                                                            "range": [
                                                                144,
                                                                146
                                                            ],
                                                            "children": [],
                                                            "content": "**kwargs"
                                                        }
                                                    ],
                                                    "content": "func(*args,**kwargs)"
                                                }
                                            ],
                                            "content": "cache[key]=func(*args,**kwargs)"
                                        }
                                    ],
                                    "content": ":\ncache[key]=func(*args,**kwargs)\n"
                                }
                            ],
                            "content": "if key not in cache:\ncache[key]=func(*args,**kwargs)\n"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "",
                            "range": [
                                149,
                                153
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": "cache[key]",
                                    "range": [
                                        150,
                                        153
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "cache",
                                            "range": [
                                                150,
                                                150
                                            ],
                                            "children": [],
                                            "content": "cache"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "key",
                                            "range": [
                                                152,
                                                152
                                            ],
                                            "children": [],
                                            "content": "key"
                                        }
                                    ],
                                    "content": "cache[key]"
                                }
                            ],
                            "content": "return cache[key]"
                        }
                    ],
                    "content": "def wrapper(*args:P.args,**kwargs:P.kwargs)->R:\ncache=getattr(thread_local,\"cache\",None)\nif cache is None:\ncache=thread_local.cache={}\nkey=(args,tuple(sorted(kwargs.items())))\nif key not in cache:\ncache[key]=func(*args,**kwargs)\nreturn cache[key]\n\nreturn wrapper"
                },
                {
                    "type": "ReturnStatement",
                    "name": "",
                    "range": [
                        156,
                        157
                    ],
                    "children": [
                        {
                            "type": "Identifier",
                            "name": "wrapper",
                            "range": [
                                157,
                                157
                            ],
                            "children": [],
                            "content": "wrapper"
                        }
                    ],
                    "content": "return wrapper"
                }
            ],
            "content": "def thread_cached(func:Callable[P,R])->Callable[P,R]:\nthread_local=threading.local()\n\ndef wrapper(*args:P.args,**kwargs:P.kwargs)->R:\ncache=getattr(thread_local,\"cache\",None)\nif cache is None:\ncache=thread_local.cache={}\nkey=(args,tuple(sorted(kwargs.items())))\nif key not in cache:\ncache[key]=func(*args,**kwargs)\nreturn cache[key]\n\nreturn wrapper\n"
        },
        {
            "type": "Error",
            "name": "InsufficientDataError",
            "range": [
                0,
                1
            ],
            "children": [],
            "content": "import threading"
        }
    ],
    "content": "import threading\nfrom typing import Callable,ParamSpec,TypeVar\n\nP=ParamSpec(\"P\")\nR=TypeVar(\"R\")\n\n\ndef thread_cached(func:Callable[P,R])->Callable[P,R]:\nthread_local=threading.local()\n\ndef wrapper(*args:P.args,**kwargs:P.kwargs)->R:\ncache=getattr(thread_local,\"cache\",None)\nif cache is None:\ncache=thread_local.cache={}\nkey=(args,tuple(sorted(kwargs.items())))\nif key not in cache:\ncache[key]=func(*args,**kwargs)\nreturn cache[key]\n\nreturn wrapper\n"
}