{
    "type": "Program",
    "name": "Global",
    "range": [
        0,
        1347
    ],
    "children": [
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                0,
                2
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "os",
                    "range": [
                        1,
                        1
                    ],
                    "children": [],
                    "content": "os"
                }
            ],
            "content": "import os\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                3,
                7
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "Enum",
                    "range": [
                        6,
                        6
                    ],
                    "children": [],
                    "content": "Enum"
                }
            ],
            "content": "from enum import Enum\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                8,
                12
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "Literal",
                    "range": [
                        11,
                        11
                    ],
                    "children": [],
                    "content": "Literal"
                }
            ],
            "content": "from typing import Literal\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                14,
                16
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "replicate",
                    "range": [
                        15,
                        15
                    ],
                    "children": [],
                    "content": "replicate"
                }
            ],
            "content": "import replicate\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                17,
                21
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "SecretStr",
                    "range": [
                        20,
                        20
                    ],
                    "children": [],
                    "content": "SecretStr"
                }
            ],
            "content": "from pydantic import SecretStr\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                22,
                28
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "FileOutput",
                    "range": [
                        27,
                        27
                    ],
                    "children": [],
                    "content": "FileOutput"
                }
            ],
            "content": "from replicate.helpers import FileOutput\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                30,
                44
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "Block",
                    "range": [
                        37,
                        37
                    ],
                    "children": [],
                    "content": "Block"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "BlockCategory",
                    "range": [
                        39,
                        39
                    ],
                    "children": [],
                    "content": "BlockCategory"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "BlockOutput",
                    "range": [
                        41,
                        41
                    ],
                    "children": [],
                    "content": "BlockOutput"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "BlockSchema",
                    "range": [
                        43,
                        43
                    ],
                    "children": [],
                    "content": "BlockSchema"
                }
            ],
            "content": "from backend.data.block import Block,BlockCategory,BlockOutput,BlockSchema\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                45,
                67
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "APIKeyCredentials",
                    "range": [
                        54,
                        54
                    ],
                    "children": [],
                    "content": "APIKeyCredentials"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "CredentialsField",
                    "range": [
                        57,
                        57
                    ],
                    "children": [],
                    "content": "CredentialsField"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "CredentialsMetaInput",
                    "range": [
                        60,
                        60
                    ],
                    "children": [],
                    "content": "CredentialsMetaInput"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "SchemaField",
                    "range": [
                        63,
                        63
                    ],
                    "children": [],
                    "content": "SchemaField"
                }
            ],
            "content": "from backend.data.model import(\nAPIKeyCredentials,\nCredentialsField,\nCredentialsMetaInput,\nSchemaField,\n)\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                68,
                76
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "ProviderName",
                    "range": [
                        75,
                        75
                    ],
                    "children": [],
                    "content": "ProviderName"
                }
            ],
            "content": "from backend.integrations.providers import ProviderName\n"
        },
        {
            "type": "AssignmentExpression",
            "name": "=",
            "range": [
                78,
                112
            ],
            "children": [
                {
                    "type": "Identifier",
                    "name": "TEST_CREDENTIALS",
                    "range": [
                        78,
                        78
                    ],
                    "children": [],
                    "content": "TEST_CREDENTIALS"
                },
                {
                    "type": "CallExpression",
                    "name": "APIKeyCredentials",
                    "range": [
                        80,
                        111
                    ],
                    "children": [
                        {
                            "type": "Argument",
                            "name": "id",
                            "range": [
                                83,
                                85
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"01234567-89ab-cdef-0123-456789abcdef\"",
                                    "range": [
                                        85,
                                        85
                                    ],
                                    "children": [],
                                    "content": "\"01234567-89ab-cdef-0123-456789abcdef\""
                                }
                            ],
                            "content": "id=\"01234567-89ab-cdef-0123-456789abcdef\""
                        },
                        {
                            "type": "Argument",
                            "name": "provider",
                            "range": [
                                88,
                                90
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"replicate\"",
                                    "range": [
                                        90,
                                        90
                                    ],
                                    "children": [],
                                    "content": "\"replicate\""
                                }
                            ],
                            "content": "provider=\"replicate\""
                        },
                        {
                            "type": "Argument",
                            "name": "api_key",
                            "range": [
                                93,
                                98
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "SecretStr",
                                    "range": [
                                        95,
                                        98
                                    ],
                                    "children": [
                                        {
                                            "type": "Literal",
                                            "name": "\"mock-replicate-api-key\"",
                                            "range": [
                                                97,
                                                97
                                            ],
                                            "children": [],
                                            "content": "\"mock-replicate-api-key\""
                                        }
                                    ],
                                    "content": "SecretStr(\"mock-replicate-api-key\")"
                                }
                            ],
                            "content": "api_key=SecretStr(\"mock-replicate-api-key\")"
                        },
                        {
                            "type": "Argument",
                            "name": "title",
                            "range": [
                                101,
                                103
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"Mock Replicate API key\"",
                                    "range": [
                                        103,
                                        103
                                    ],
                                    "children": [],
                                    "content": "\"Mock Replicate API key\""
                                }
                            ],
                            "content": "title=\"Mock Replicate API key\""
                        },
                        {
                            "type": "Argument",
                            "name": "expires_at",
                            "range": [
                                106,
                                108
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "None",
                                    "range": [
                                        108,
                                        108
                                    ],
                                    "children": [],
                                    "content": "None"
                                }
                            ],
                            "content": "expires_at=None"
                        }
                    ],
                    "content": "APIKeyCredentials(\nid=\"01234567-89ab-cdef-0123-456789abcdef\",\nprovider=\"replicate\",\napi_key=SecretStr(\"mock-replicate-api-key\"),\ntitle=\"Mock Replicate API key\",\nexpires_at=None,\n)"
                }
            ],
            "content": "TEST_CREDENTIALS=APIKeyCredentials(\nid=\"01234567-89ab-cdef-0123-456789abcdef\",\nprovider=\"replicate\",\napi_key=SecretStr(\"mock-replicate-api-key\"),\ntitle=\"Mock Replicate API key\",\nexpires_at=None,\n)\n"
        },
        {
            "type": "VariableDeclaration",
            "name": "TEST_CREDENTIALS_INPUT",
            "range": [
                113,
                145
            ],
            "children": [
                {
                    "type": "ObjectExpression",
                    "name": "",
                    "range": [
                        115,
                        145
                    ],
                    "children": [
                        {
                            "type": "Property",
                            "name": "provider",
                            "range": [
                                117,
                                121
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"provider\"",
                                    "range": [
                                        117,
                                        117
                                    ],
                                    "children": [],
                                    "content": "\"provider\""
                                },
                                {
                                    "type": "Identifier",
                                    "name": "TEST_CREDENTIALS",
                                    "range": [
                                        119,
                                        119
                                    ],
                                    "children": [],
                                    "content": "TEST_CREDENTIALS"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "provider",
                                    "range": [
                                        121,
                                        121
                                    ],
                                    "children": [],
                                    "content": "provider"
                                }
                            ],
                            "content": "\"provider\":TEST_CREDENTIALS.provider"
                        },
                        {
                            "type": "Property",
                            "name": "id",
                            "range": [
                                124,
                                128
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"id\"",
                                    "range": [
                                        124,
                                        124
                                    ],
                                    "children": [],
                                    "content": "\"id\""
                                },
                                {
                                    "type": "Identifier",
                                    "name": "TEST_CREDENTIALS",
                                    "range": [
                                        126,
                                        126
                                    ],
                                    "children": [],
                                    "content": "TEST_CREDENTIALS"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "id",
                                    "range": [
                                        128,
                                        128
                                    ],
                                    "children": [],
                                    "content": "id"
                                }
                            ],
                            "content": "\"id\":TEST_CREDENTIALS.id"
                        },
                        {
                            "type": "Property",
                            "name": "type",
                            "range": [
                                131,
                                135
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"type\"",
                                    "range": [
                                        131,
                                        131
                                    ],
                                    "children": [],
                                    "content": "\"type\""
                                },
                                {
                                    "type": "Identifier",
                                    "name": "TEST_CREDENTIALS",
                                    "range": [
                                        133,
                                        133
                                    ],
                                    "children": [],
                                    "content": "TEST_CREDENTIALS"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "type",
                                    "range": [
                                        135,
                                        135
                                    ],
                                    "children": [],
                                    "content": "type"
                                }
                            ],
                            "content": "\"type\":TEST_CREDENTIALS.type"
                        },
                        {
                            "type": "Property",
                            "name": "title",
                            "range": [
                                138,
                                142
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"title\"",
                                    "range": [
                                        138,
                                        138
                                    ],
                                    "children": [],
                                    "content": "\"title\""
                                },
                                {
                                    "type": "Identifier",
                                    "name": "TEST_CREDENTIALS",
                                    "range": [
                                        140,
                                        140
                                    ],
                                    "children": [],
                                    "content": "TEST_CREDENTIALS"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "type",
                                    "range": [
                                        142,
                                        142
                                    ],
                                    "children": [],
                                    "content": "type"
                                }
                            ],
                            "content": "\"title\":TEST_CREDENTIALS.type"
                        }
                    ],
                    "content": "{\n\"provider\":TEST_CREDENTIALS.provider,\n\"id\":TEST_CREDENTIALS.id,\n\"type\":TEST_CREDENTIALS.type,\n\"title\":TEST_CREDENTIALS.type,\n}"
                }
            ],
            "content": "TEST_CREDENTIALS_INPUT={\n\"provider\":TEST_CREDENTIALS.provider,\n\"id\":TEST_CREDENTIALS.id,\n\"type\":TEST_CREDENTIALS.type,\n\"title\":TEST_CREDENTIALS.type,\n}"
        },
        {
            "type": "EnumDecl",
            "name": "ReplicateFluxModelName",
            "range": [
                147,
                181
            ],
            "children": [
                {
                    "type": "EnumMember",
                    "name": "FLUX_SCHNELL",
                    "range": [
                        161,
                        166
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "\"Flux Schnell\"",
                            "range": [
                                164,
                                164
                            ],
                            "children": [],
                            "content": "="
                        }
                    ],
                    "content": ":\nFLUX_SCHNELL=(\"Flux Schnell\""
                },
                {
                    "type": "EnumMember",
                    "name": "FLUX_PRO",
                    "range": [
                        168,
                        173
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "\"Flux Pro\"",
                            "range": [
                                171,
                                171
                            ],
                            "children": [],
                            "content": "="
                        }
                    ],
                    "content": ")\nFLUX_PRO=(\"Flux Pro\""
                },
                {
                    "type": "EnumMember",
                    "name": "FLUX_PRO1_1",
                    "range": [
                        175,
                        180
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "\"Flux Pro 1.1\"",
                            "range": [
                                178,
                                178
                            ],
                            "children": [],
                            "content": "="
                        }
                    ],
                    "content": ")\nFLUX_PRO1_1=(\"Flux Pro 1.1\""
                }
            ],
            "content": "\n\n#Model name enum\nclass ReplicateFluxModelName(str,Enum):\nFLUX_SCHNELL=(\"Flux Schnell\",)\nFLUX_PRO=(\"Flux Pro\",)\nFLUX_PRO1_1=(\"Flux Pro 1.1\","
        },
        {
            "type": "FunctionDecl",
            "name": "api_name",
            "range": [
                183,
                225
            ],
            "children": [
                {
                    "type": "BlockStatement",
                    "name": "",
                    "range": [
                        192,
                        225
                    ],
                    "children": [
                        {
                            "type": "VariableDecl",
                            "name": "api_names",
                            "range": [
                                193,
                                218
                            ],
                            "children": [
                                {
                                    "type": "ObjectExpression",
                                    "name": "",
                                    "range": [
                                        195,
                                        218
                                    ],
                                    "children": [
                                        {
                                            "type": "Property",
                                            "name": "ReplicateFluxModelName.FLUX_SCHNELL",
                                            "range": [
                                                197,
                                                202
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "\"black-forest-labs/flux-schnell\"",
                                                    "range": [
                                                        201,
                                                        201
                                                    ],
                                                    "children": [],
                                                    "content": "FLUX_SCHNELL"
                                                }
                                            ],
                                            "content": "{\nReplicateFluxModelName.FLUX_SCHNELL:"
                                        },
                                        {
                                            "type": "Property",
                                            "name": "ReplicateFluxModelName.FLUX_PRO",
                                            "range": [
                                                204,
                                                209
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "\"black-forest-labs/flux-pro\"",
                                                    "range": [
                                                        208,
                                                        208
                                                    ],
                                                    "children": [],
                                                    "content": "FLUX_PRO"
                                                }
                                            ],
                                            "content": ",\nReplicateFluxModelName.FLUX_PRO:"
                                        },
                                        {
                                            "type": "Property",
                                            "name": "ReplicateFluxModelName.FLUX_PRO1_1",
                                            "range": [
                                                211,
                                                216
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "\"black-forest-labs/flux-1.1-pro\"",
                                                    "range": [
                                                        215,
                                                        215
                                                    ],
                                                    "children": [],
                                                    "content": "FLUX_PRO1_1"
                                                }
                                            ],
                                            "content": ",\nReplicateFluxModelName.FLUX_PRO1_1:"
                                        }
                                    ],
                                    "content": "api_names={\nReplicateFluxModelName.FLUX_SCHNELL:\"black-forest-labs/flux-schnell\",\nReplicateFluxModelName.FLUX_PRO:\"black-forest-labs/flux-pro\",\nReplicateFluxModelName.FLUX_PRO1_1:\"black-forest-labs/flux-1.1-pro\","
                                }
                            ],
                            "content": ":\napi_names={\nReplicateFluxModelName.FLUX_SCHNELL:\"black-forest-labs/flux-schnell\",\nReplicateFluxModelName.FLUX_PRO:\"black-forest-labs/flux-pro\",\nReplicateFluxModelName.FLUX_PRO1_1:\"black-forest-labs/flux-1.1-pro\","
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "",
                            "range": [
                                220,
                                225
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": "api_names[self]",
                                    "range": [
                                        221,
                                        224
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "api_names",
                                            "range": [
                                                221,
                                                221
                                            ],
                                            "children": [],
                                            "content": "\n"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "self",
                                            "range": [
                                                223,
                                                223
                                            ],
                                            "children": [],
                                            "content": "api_names"
                                        }
                                    ],
                                    "content": "\nreturn api_names["
                                }
                            ],
                            "content": "}\nreturn api_names[self"
                        }
                    ],
                    "content": "):\napi_names={\nReplicateFluxModelName.FLUX_SCHNELL:\"black-forest-labs/flux-schnell\",\nReplicateFluxModelName.FLUX_PRO:\"black-forest-labs/flux-pro\",\nReplicateFluxModelName.FLUX_PRO1_1:\"black-forest-labs/flux-1.1-pro\",\n}\nreturn api_names[self"
                }
            ],
            "content": "\n\n@property\ndef api_name(self):\napi_names={\nReplicateFluxModelName.FLUX_SCHNELL:\"black-forest-labs/flux-schnell\",\nReplicateFluxModelName.FLUX_PRO:\"black-forest-labs/flux-pro\",\nReplicateFluxModelName.FLUX_PRO1_1:\"black-forest-labs/flux-1.1-pro\",\n}\nreturn api_names[self"
        },
        {
            "type": "EnumDeclaration",
            "name": "ImageType",
            "range": [
                230,
                252
            ],
            "children": [
                {
                    "type": "EnumMember",
                    "name": "WEBP",
                    "range": [
                        241,
                        243
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "\"webp\"",
                            "range": [
                                243,
                                243
                            ],
                            "children": [],
                            "content": "\n"
                        }
                    ],
                    "content": "):\n"
                },
                {
                    "type": "EnumMember",
                    "name": "JPG",
                    "range": [
                        245,
                        247
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "\"jpg\"",
                            "range": [
                                247,
                                247
                            ],
                            "children": [],
                            "content": "\n"
                        }
                    ],
                    "content": "=\"webp\"\n"
                },
                {
                    "type": "EnumMember",
                    "name": "PNG",
                    "range": [
                        249,
                        251
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "\"png\"",
                            "range": [
                                251,
                                251
                            ],
                            "children": [],
                            "content": "\n"
                        }
                    ],
                    "content": "=\"jpg\"\n"
                }
            ],
            "content": "#Image type Enum\nclass ImageType(str,Enum):\nWEBP=\"webp\"\nJPG=\"jpg\"\nPNG"
        },
        {
            "type": "ClassDecl",
            "name": "ReplicateFluxAdvancedModelBlock",
            "range": [
                254,
                260
            ],
            "children": [],
            "content": "\"png\"\n\n\nclass ReplicateFluxAdvancedModelBlock("
        },
        {
            "type": "ClassDecl",
            "name": "Input",
            "range": [
                261,
                267
            ],
            "children": [],
            "content": "Block):\nclass Input("
        },
        {
            "type": "VariableDecl",
            "name": "credentials",
            "range": [
                268,
                298
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "CredentialsMetaInput",
                    "range": [
                        270,
                        270
                    ],
                    "children": [],
                    "content": ":"
                },
                {
                    "type": "ArrayType",
                    "name": "",
                    "range": [
                        271,
                        285
                    ],
                    "children": [
                        {
                            "type": "Literal",
                            "name": "ProviderName.REPLICATE",
                            "range": [
                                273,
                                278
                            ],
                            "children": [],
                            "content": ":CredentialsMetaInput[\nLiteral["
                        },
                        {
                            "type": "Literal",
                            "name": "\"api_key\"",
                            "range": [
                                280,
                                283
                            ],
                            "children": [],
                            "content": ".REPLICATE],"
                        }
                    ],
                    "content": "\ncredentials:CredentialsMetaInput[\nLiteral[ProviderName.REPLICATE],Literal["
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        286,
                        286
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "CredentialsField",
                            "range": [
                                287,
                                297
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        290,
                                        294
                                    ],
                                    "children": [],
                                    "content": "=CredentialsField(\ndescription"
                                }
                            ],
                            "content": "]\n]=CredentialsField(\ndescription=\"The Replicate integration can be used with \"\n"
                        }
                    ],
                    "content": "\"api_key\""
                }
            ],
            "content": "BlockSchema):\ncredentials:CredentialsMetaInput[\nLiteral[ProviderName.REPLICATE],Literal[\"api_key\"]\n]=CredentialsField(\ndescription=\"The Replicate integration can be used with \"\n\"any API key with sufficient permissions for the blocks it is used on.\""
        },
        {
            "type": "VariableDecl",
            "name": "prompt",
            "range": [
                299,
                322
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "str",
                    "range": [
                        301,
                        301
                    ],
                    "children": [],
                    "content": ")"
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        302,
                        302
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                303,
                                321
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        306,
                                        308
                                    ],
                                    "children": [],
                                    "content": "=SchemaField("
                                },
                                {
                                    "type": "Argument",
                                    "name": "placeholder",
                                    "range": [
                                        311,
                                        313
                                    ],
                                    "children": [],
                                    "content": "=\"Text prompt for image generation\","
                                },
                                {
                                    "type": "Argument",
                                    "name": "title",
                                    "range": [
                                        316,
                                        318
                                    ],
                                    "children": [],
                                    "content": "=\"e.g., 'A futuristic cityscape at sunset'\","
                                }
                            ],
                            "content": "prompt:str=SchemaField(\ndescription=\"Text prompt for image generation\",\nplaceholder=\"e.g., 'A futuristic cityscape at sunset'\",\ntitle="
                        }
                    ],
                    "content": "\n"
                }
            ],
            "content": ",\n)\nprompt:str=SchemaField(\ndescription=\"Text prompt for image generation\",\nplaceholder=\"e.g., 'A futuristic cityscape at sunset'\",\ntitle=\"Prompt\""
        },
        {
            "type": "VariableDecl",
            "name": "replicate_model_name",
            "range": [
                323,
                353
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "ReplicateFluxModelName",
                    "range": [
                        325,
                        325
                    ],
                    "children": [],
                    "content": ")"
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        326,
                        326
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                327,
                                352
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        330,
                                        332
                                    ],
                                    "children": [],
                                    "content": "=SchemaField("
                                },
                                {
                                    "type": "Argument",
                                    "name": "default",
                                    "range": [
                                        335,
                                        339
                                    ],
                                    "children": [],
                                    "content": "=\"The name of the Image Generation Model, i.e Flux Schnell\",\ndefault"
                                },
                                {
                                    "type": "Argument",
                                    "name": "title",
                                    "range": [
                                        342,
                                        344
                                    ],
                                    "children": [],
                                    "content": ".FLUX_SCHNELL,"
                                },
                                {
                                    "type": "Argument",
                                    "name": "advanced",
                                    "range": [
                                        347,
                                        349
                                    ],
                                    "children": [],
                                    "content": "=\"Image Generation Model\","
                                }
                            ],
                            "content": "replicate_model_name:ReplicateFluxModelName=SchemaField(\ndescription=\"The name of the Image Generation Model, i.e Flux Schnell\",\ndefault=ReplicateFluxModelName.FLUX_SCHNELL,\ntitle=\"Image Generation Model\",\nadvanced="
                        }
                    ],
                    "content": "\n"
                }
            ],
            "content": ",\n)\nreplicate_model_name:ReplicateFluxModelName=SchemaField(\ndescription=\"The name of the Image Generation Model, i.e Flux Schnell\",\ndefault=ReplicateFluxModelName.FLUX_SCHNELL,\ntitle=\"Image Generation Model\",\nadvanced=False"
        },
        {
            "type": "VariableDecl",
            "name": "seed",
            "range": [
                354,
                379
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "int | None",
                    "range": [
                        356,
                        358
                    ],
                    "children": [],
                    "content": ")\nseed"
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        359,
                        359
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                360,
                                378
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        363,
                                        365
                                    ],
                                    "children": [],
                                    "content": "=SchemaField("
                                },
                                {
                                    "type": "Argument",
                                    "name": "default",
                                    "range": [
                                        368,
                                        370
                                    ],
                                    "children": [],
                                    "content": "=\"Random seed. Set for reproducible generation\","
                                },
                                {
                                    "type": "Argument",
                                    "name": "title",
                                    "range": [
                                        373,
                                        375
                                    ],
                                    "children": [],
                                    "content": "=None,"
                                }
                            ],
                            "content": "int|None=SchemaField(\ndescription=\"Random seed. Set for reproducible generation\",\ndefault=None,\ntitle="
                        }
                    ],
                    "content": ":"
                }
            ],
            "content": ",\n)\nseed:int|None=SchemaField(\ndescription=\"Random seed. Set for reproducible generation\",\ndefault=None,\ntitle=\"Seed\""
        },
        {
            "type": "VariableDecl",
            "name": "steps",
            "range": [
                380,
                403
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "int",
                    "range": [
                        382,
                        382
                    ],
                    "children": [],
                    "content": ")"
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        383,
                        383
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                384,
                                402
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        387,
                                        389
                                    ],
                                    "children": [],
                                    "content": "=SchemaField("
                                },
                                {
                                    "type": "Argument",
                                    "name": "default",
                                    "range": [
                                        392,
                                        394
                                    ],
                                    "children": [],
                                    "content": "=\"Number of diffusion steps\","
                                },
                                {
                                    "type": "Argument",
                                    "name": "title",
                                    "range": [
                                        397,
                                        399
                                    ],
                                    "children": [],
                                    "content": "=25,"
                                }
                            ],
                            "content": "steps:int=SchemaField(\ndescription=\"Number of diffusion steps\",\ndefault=25,\ntitle="
                        }
                    ],
                    "content": "\n"
                }
            ],
            "content": ",\n)\nsteps:int=SchemaField(\ndescription=\"Number of diffusion steps\",\ndefault=25,\ntitle=\"Steps\""
        },
        {
            "type": "VariableDecl",
            "name": "guidance",
            "range": [
                404,
                433
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "float",
                    "range": [
                        406,
                        406
                    ],
                    "children": [],
                    "content": ")"
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        407,
                        407
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                408,
                                432
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        411,
                                        419
                                    ],
                                    "children": [],
                                    "content": "=SchemaField(\ndescription=(\n\"Controls the balance between adherence to the text prompt and image quality/diversity. \""
                                },
                                {
                                    "type": "Argument",
                                    "name": "default",
                                    "range": [
                                        422,
                                        424
                                    ],
                                    "children": [],
                                    "content": "\n),"
                                },
                                {
                                    "type": "Argument",
                                    "name": "title",
                                    "range": [
                                        427,
                                        429
                                    ],
                                    "children": [],
                                    "content": "=3,"
                                }
                            ],
                            "content": "guidance:float=SchemaField(\ndescription=(\n\"Controls the balance between adherence to the text prompt and image quality/diversity. \"\n\"Higher values make the output more closely match the prompt but may reduce overall image quality.\"\n),\ndefault=3,\ntitle="
                        }
                    ],
                    "content": "\n"
                }
            ],
            "content": ",\n)\nguidance:float=SchemaField(\ndescription=(\n\"Controls the balance between adherence to the text prompt and image quality/diversity. \"\n\"Higher values make the output more closely match the prompt but may reduce overall image quality.\"\n),\ndefault=3,\ntitle=\"Guidance\""
        },
        {
            "type": "VariableDecl",
            "name": "interval",
            "range": [
                434,
                463
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "float",
                    "range": [
                        436,
                        436
                    ],
                    "children": [],
                    "content": ")"
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        437,
                        437
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                438,
                                462
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        441,
                                        449
                                    ],
                                    "children": [],
                                    "content": "=SchemaField(\ndescription=(\n\"Interval is a setting that increases the variance in possible outputs. \""
                                },
                                {
                                    "type": "Argument",
                                    "name": "default",
                                    "range": [
                                        452,
                                        454
                                    ],
                                    "children": [],
                                    "content": "\n),"
                                },
                                {
                                    "type": "Argument",
                                    "name": "title",
                                    "range": [
                                        457,
                                        459
                                    ],
                                    "children": [],
                                    "content": "=2,"
                                }
                            ],
                            "content": "interval:float=SchemaField(\ndescription=(\n\"Interval is a setting that increases the variance in possible outputs. \"\n\"Setting this value low will ensure strong prompt following with more consistent outputs.\"\n),\ndefault=2,\ntitle="
                        }
                    ],
                    "content": "\n"
                }
            ],
            "content": ",\n)\ninterval:float=SchemaField(\ndescription=(\n\"Interval is a setting that increases the variance in possible outputs. \"\n\"Setting this value low will ensure strong prompt following with more consistent outputs.\"\n),\ndefault=2,\ntitle=\"Interval\""
        },
        {
            "type": "VariableDecl",
            "name": "aspect_ratio",
            "range": [
                464,
                492
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "str",
                    "range": [
                        466,
                        466
                    ],
                    "children": [],
                    "content": ")"
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        467,
                        467
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                468,
                                491
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        471,
                                        473
                                    ],
                                    "children": [],
                                    "content": "=SchemaField("
                                },
                                {
                                    "type": "Argument",
                                    "name": "default",
                                    "range": [
                                        476,
                                        478
                                    ],
                                    "children": [],
                                    "content": "=\"Aspect ratio for the generated image\","
                                },
                                {
                                    "type": "Argument",
                                    "name": "title",
                                    "range": [
                                        481,
                                        483
                                    ],
                                    "children": [],
                                    "content": "=\"1:1\","
                                },
                                {
                                    "type": "Argument",
                                    "name": "placeholder",
                                    "range": [
                                        486,
                                        488
                                    ],
                                    "children": [],
                                    "content": "=\"Aspect Ratio\","
                                }
                            ],
                            "content": "aspect_ratio:str=SchemaField(\ndescription=\"Aspect ratio for the generated image\",\ndefault=\"1:1\",\ntitle=\"Aspect Ratio\",\nplaceholder="
                        }
                    ],
                    "content": "\n"
                }
            ],
            "content": ",\n)\naspect_ratio:str=SchemaField(\ndescription=\"Aspect ratio for the generated image\",\ndefault=\"1:1\",\ntitle=\"Aspect Ratio\",\nplaceholder=\"Choose from: 1:1, 16:9, 2:3, 3:2, 4:5, 5:4, 9:16\""
        },
        {
            "type": "VariableDecl",
            "name": "output_format",
            "range": [
                493,
                518
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "ImageType",
                    "range": [
                        495,
                        495
                    ],
                    "children": [],
                    "content": ")"
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        496,
                        496
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                497,
                                517
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        500,
                                        502
                                    ],
                                    "children": [],
                                    "content": "=SchemaField("
                                },
                                {
                                    "type": "Argument",
                                    "name": "default",
                                    "range": [
                                        505,
                                        510
                                    ],
                                    "children": [],
                                    "content": "=\"File format of the output image\",\ndefault="
                                },
                                {
                                    "type": "Argument",
                                    "name": "title",
                                    "range": [
                                        513,
                                        514
                                    ],
                                    "children": [],
                                    "content": "WEBP,"
                                }
                            ],
                            "content": "output_format:ImageType=SchemaField(\ndescription=\"File format of the output image\",\ndefault=ImageType.WEBP,\ntitle="
                        }
                    ],
                    "content": "\n"
                }
            ],
            "content": ",\n)\noutput_format:ImageType=SchemaField(\ndescription=\"File format of the output image\",\ndefault=ImageType.WEBP,\ntitle=\"Output Format\""
        },
        {
            "type": "VariableDecl",
            "name": "output_quality",
            "range": [
                519,
                548
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "int",
                    "range": [
                        521,
                        521
                    ],
                    "children": [],
                    "content": ")"
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        522,
                        522
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                523,
                                547
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        526,
                                        534
                                    ],
                                    "children": [],
                                    "content": "=SchemaField(\ndescription=(\n\"Quality when saving the output images, from 0 to 100. \""
                                },
                                {
                                    "type": "Argument",
                                    "name": "default",
                                    "range": [
                                        537,
                                        539
                                    ],
                                    "children": [],
                                    "content": "\n),"
                                },
                                {
                                    "type": "Argument",
                                    "name": "title",
                                    "range": [
                                        542,
                                        544
                                    ],
                                    "children": [],
                                    "content": "=80,"
                                }
                            ],
                            "content": "output_quality:int=SchemaField(\ndescription=(\n\"Quality when saving the output images, from 0 to 100. \"\n\"Not relevant for .png outputs\"\n),\ndefault=80,\ntitle="
                        }
                    ],
                    "content": "\n"
                }
            ],
            "content": ",\n)\noutput_quality:int=SchemaField(\ndescription=(\n\"Quality when saving the output images, from 0 to 100. \"\n\"Not relevant for .png outputs\"\n),\ndefault=80,\ntitle=\"Output Quality\""
        },
        {
            "type": "VariableDecl",
            "name": "safety_tolerance",
            "range": [
                549,
                572
            ],
            "children": [
                {
                    "type": "TypeAnnotation",
                    "name": "int",
                    "range": [
                        551,
                        551
                    ],
                    "children": [],
                    "content": ")"
                },
                {
                    "type": "Assignment",
                    "name": "=",
                    "range": [
                        552,
                        552
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "SchemaField",
                            "range": [
                                553,
                                571
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        556,
                                        558
                                    ],
                                    "children": [],
                                    "content": "=SchemaField("
                                },
                                {
                                    "type": "Argument",
                                    "name": "default",
                                    "range": [
                                        561,
                                        563
                                    ],
                                    "children": [],
                                    "content": "=\"Safety tolerance, 1 is most strict and 5 is most permissive\","
                                },
                                {
                                    "type": "Argument",
                                    "name": "title",
                                    "range": [
                                        566,
                                        568
                                    ],
                                    "children": [],
                                    "content": "=2,"
                                }
                            ],
                            "content": "safety_tolerance:int=SchemaField(\ndescription=\"Safety tolerance, 1 is most strict and 5 is most permissive\",\ndefault=2,\ntitle="
                        }
                    ],
                    "content": "\n"
                }
            ],
            "content": ",\n)\nsafety_tolerance:int=SchemaField(\ndescription=\"Safety tolerance, 1 is most strict and 5 is most permissive\",\ndefault=2,\ntitle=\"Safety Tolerance\""
        },
        {
            "type": "ClassDecl",
            "name": "Output",
            "range": [
                574,
                580
            ],
            "children": [],
            "content": "\n)\n\nclass Output("
        },
        {
            "type": "FunctionDecl",
            "name": "__init__",
            "range": [
                604,
                780
            ],
            "children": [
                {
                    "type": "FunctionBody",
                    "name": "",
                    "range": [
                        609,
                        780
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "super",
                            "range": [
                                611,
                                617
                            ],
                            "children": [],
                            "content": "self):\nsuper()"
                        },
                        {
                            "type": "CallExpression",
                            "name": "__init__",
                            "range": [
                                615,
                                779
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "id",
                                    "range": [
                                        618,
                                        620
                                    ],
                                    "children": [],
                                    "content": ".__init__("
                                },
                                {
                                    "type": "Argument",
                                    "name": "description",
                                    "range": [
                                        623,
                                        625
                                    ],
                                    "children": [],
                                    "content": "=\"90f8c45e-e983-4644-aa0b-b4ebe2f531bc\","
                                },
                                {
                                    "type": "Argument",
                                    "name": "categories",
                                    "range": [
                                        628,
                                        634
                                    ],
                                    "children": [],
                                    "content": "=\"This block runs Flux models on Replicate with advanced settings.\",\ncategories={"
                                },
                                {
                                    "type": "Argument",
                                    "name": "input_schema",
                                    "range": [
                                        637,
                                        641
                                    ],
                                    "children": [],
                                    "content": "AI},\ninput_schema"
                                },
                                {
                                    "type": "Argument",
                                    "name": "output_schema",
                                    "range": [
                                        644,
                                        648
                                    ],
                                    "children": [],
                                    "content": ".Input,\noutput_schema"
                                },
                                {
                                    "type": "Argument",
                                    "name": "test_input",
                                    "range": [
                                        651,
                                        718
                                    ],
                                    "children": [],
                                    "content": ".Output,\ntest_input={\n\"credentials\":TEST_CREDENTIALS_INPUT,\n\"replicate_model_name\":ReplicateFluxModelName.FLUX_SCHNELL,\n\"prompt\":\"A beautiful landscape painting of a serene lake at sunrise\",\n\"seed\":None,\n\"steps\":25,\n\"guidance\":3.0,\n\"interval\":2.0,\n\"aspect_ratio\":\"1:1\",\n\"output_format\":ImageType.PNG,\n\"output_quality\":80,\n\"safety_tolerance\":"
                                },
                                {
                                    "type": "Argument",
                                    "name": "test_output",
                                    "range": [
                                        721,
                                        736
                                    ],
                                    "children": [],
                                    "content": "\n},\ntest_output=[\n(\n\"result\",\n\"https://replicate.com/output/generated-image-url.jpg\",\n"
                                },
                                {
                                    "type": "Argument",
                                    "name": "test_mock",
                                    "range": [
                                        739,
                                        771
                                    ],
                                    "children": [],
                                    "content": "\n],\ntest_mock={\n\"run_model\":lambda api_key,model_name,prompt,seed,steps,guidance,interval,aspect_ratio,output_format,output_quality,safety_tolerance:"
                                },
                                {
                                    "type": "Argument",
                                    "name": "test_credentials",
                                    "range": [
                                        774,
                                        776
                                    ],
                                    "children": [],
                                    "content": "\n},"
                                }
                            ],
                            "content": "super().__init__(\nid=\"90f8c45e-e983-4644-aa0b-b4ebe2f531bc\",\ndescription=\"This block runs Flux models on Replicate with advanced settings.\",\ncategories={BlockCategory.AI},\ninput_schema=ReplicateFluxAdvancedModelBlock.Input,\noutput_schema=ReplicateFluxAdvancedModelBlock.Output,\ntest_input={\n\"credentials\":TEST_CREDENTIALS_INPUT,\n\"replicate_model_name\":ReplicateFluxModelName.FLUX_SCHNELL,\n\"prompt\":\"A beautiful landscape painting of a serene lake at sunrise\",\n\"seed\":None,\n\"steps\":25,\n\"guidance\":3.0,\n\"interval\":2.0,\n\"aspect_ratio\":\"1:1\",\n\"output_format\":ImageType.PNG,\n\"output_quality\":80,\n\"safety_tolerance\":2,\n},\ntest_output=[\n(\n\"result\",\n\"https://replicate.com/output/generated-image-url.jpg\",\n),\n],\ntest_mock={\n\"run_model\":lambda api_key,model_name,prompt,seed,steps,guidance,interval,aspect_ratio,output_format,output_quality,safety_tolerance:\"https://replicate.com/output/generated-image-url.jpg\",\n},\ntest_credentials="
                        }
                    ],
                    "content": "__init__(self):\nsuper().__init__(\nid=\"90f8c45e-e983-4644-aa0b-b4ebe2f531bc\",\ndescription=\"This block runs Flux models on Replicate with advanced settings.\",\ncategories={BlockCategory.AI},\ninput_schema=ReplicateFluxAdvancedModelBlock.Input,\noutput_schema=ReplicateFluxAdvancedModelBlock.Output,\ntest_input={\n\"credentials\":TEST_CREDENTIALS_INPUT,\n\"replicate_model_name\":ReplicateFluxModelName.FLUX_SCHNELL,\n\"prompt\":\"A beautiful landscape painting of a serene lake at sunrise\",\n\"seed\":None,\n\"steps\":25,\n\"guidance\":3.0,\n\"interval\":2.0,\n\"aspect_ratio\":\"1:1\",\n\"output_format\":ImageType.PNG,\n\"output_quality\":80,\n\"safety_tolerance\":2,\n},\ntest_output=[\n(\n\"result\",\n\"https://replicate.com/output/generated-image-url.jpg\",\n),\n],\ntest_mock={\n\"run_model\":lambda api_key,model_name,prompt,seed,steps,guidance,interval,aspect_ratio,output_format,output_quality,safety_tolerance:\"https://replicate.com/output/generated-image-url.jpg\",\n},\ntest_credentials=TEST_CREDENTIALS"
                }
            ],
            "content": "\"Error message if the model run failed\")\n\ndef __init__(self):\nsuper().__init__(\nid=\"90f8c45e-e983-4644-aa0b-b4ebe2f531bc\",\ndescription=\"This block runs Flux models on Replicate with advanced settings.\",\ncategories={BlockCategory.AI},\ninput_schema=ReplicateFluxAdvancedModelBlock.Input,\noutput_schema=ReplicateFluxAdvancedModelBlock.Output,\ntest_input={\n\"credentials\":TEST_CREDENTIALS_INPUT,\n\"replicate_model_name\":ReplicateFluxModelName.FLUX_SCHNELL,\n\"prompt\":\"A beautiful landscape painting of a serene lake at sunrise\",\n\"seed\":None,\n\"steps\":25,\n\"guidance\":3.0,\n\"interval\":2.0,\n\"aspect_ratio\":\"1:1\",\n\"output_format\":ImageType.PNG,\n\"output_quality\":80,\n\"safety_tolerance\":2,\n},\ntest_output=[\n(\n\"result\",\n\"https://replicate.com/output/generated-image-url.jpg\",\n),\n],\ntest_mock={\n\"run_model\":lambda api_key,model_name,prompt,seed,steps,guidance,interval,aspect_ratio,output_format,output_quality,safety_tolerance:\"https://replicate.com/output/generated-image-url.jpg\",\n},\ntest_credentials=TEST_CREDENTIALS"
        },
        {
            "type": "FunctionDecl",
            "name": "run",
            "range": [
                782,
                950
            ],
            "children": [
                {
                    "type": "FunctionBody",
                    "name": "",
                    "range": [
                        807,
                        950
                    ],
                    "children": [
                        {
                            "type": "IfStatement",
                            "name": "",
                            "range": [
                                827,
                                848
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "seed is None",
                                    "range": [
                                        828,
                                        830
                                    ],
                                    "children": [],
                                    "content": ".seed\n"
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "",
                                    "range": [
                                        831,
                                        848
                                    ],
                                    "children": [
                                        {
                                            "type": "Assignment",
                                            "name": "=",
                                            "range": [
                                                833,
                                                847
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "int.from_bytes",
                                                    "range": [
                                                        835,
                                                        847
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Argument",
                                                            "name": "os.urandom(4)",
                                                            "range": [
                                                                839,
                                                                844
                                                            ],
                                                            "children": [],
                                                            "content": "int.from_bytes(os."
                                                        },
                                                        {
                                                            "type": "Argument",
                                                            "name": "\"big\"",
                                                            "range": [
                                                                846,
                                                                846
                                                            ],
                                                            "children": [],
                                                            "content": "("
                                                        }
                                                    ],
                                                    "content": ":\nseed=int.from_bytes(os.urandom(4"
                                                }
                                            ],
                                            "content": "is None:\nseed=int.from_bytes(os.urandom(4"
                                        }
                                    ],
                                    "content": "if seed is None:\nseed=int.from_bytes(os.urandom(4)"
                                }
                            ],
                            "content": "input_data.seed\nif seed is None:\nseed=int.from_bytes(os.urandom(4)"
                        },
                        {
                            "type": "Assignment",
                            "name": "=",
                            "range": [
                                859,
                                943
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "self.run_model",
                                    "range": [
                                        861,
                                        943
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "api_key",
                                            "range": [
                                                866,
                                                870
                                            ],
                                            "children": [],
                                            "content": ".run_model(\napi_key"
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "model_name",
                                            "range": [
                                                873,
                                                879
                                            ],
                                            "children": [],
                                            "content": ".api_key,\nmodel_name=input_data"
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "prompt",
                                            "range": [
                                                882,
                                                886
                                            ],
                                            "children": [],
                                            "content": ".api_name,\nprompt"
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "seed",
                                            "range": [
                                                889,
                                                891
                                            ],
                                            "children": [],
                                            "content": ".prompt,"
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "steps",
                                            "range": [
                                                894,
                                                898
                                            ],
                                            "children": [],
                                            "content": "=seed,\nsteps"
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "guidance",
                                            "range": [
                                                901,
                                                905
                                            ],
                                            "children": [],
                                            "content": ".steps,\nguidance"
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "interval",
                                            "range": [
                                                908,
                                                912
                                            ],
                                            "children": [],
                                            "content": ".guidance,\ninterval"
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "aspect_ratio",
                                            "range": [
                                                915,
                                                919
                                            ],
                                            "children": [],
                                            "content": ".interval,\naspect_ratio"
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "output_format",
                                            "range": [
                                                922,
                                                926
                                            ],
                                            "children": [],
                                            "content": ".aspect_ratio,\noutput_format"
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "output_quality",
                                            "range": [
                                                929,
                                                933
                                            ],
                                            "children": [],
                                            "content": ".output_format,\noutput_quality"
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "safety_tolerance",
                                            "range": [
                                                936,
                                                940
                                            ],
                                            "children": [],
                                            "content": ".output_quality,\nsafety_tolerance"
                                        }
                                    ],
                                    "content": "inputs\nresult=self.run_model(\napi_key=credentials.api_key,\nmodel_name=input_data.replicate_model_name.api_name,\nprompt=input_data.prompt,\nseed=seed,\nsteps=input_data.steps,\nguidance=input_data.guidance,\ninterval=input_data.interval,\naspect_ratio=input_data.aspect_ratio,\noutput_format=input_data.output_format,\noutput_quality=input_data.output_quality,\nsafety_tolerance=input_data."
                                }
                            ],
                            "content": "the provided inputs\nresult=self.run_model(\napi_key=credentials.api_key,\nmodel_name=input_data.replicate_model_name.api_name,\nprompt=input_data.prompt,\nseed=seed,\nsteps=input_data.steps,\nguidance=input_data.guidance,\ninterval=input_data.interval,\naspect_ratio=input_data.aspect_ratio,\noutput_format=input_data.output_format,\noutput_quality=input_data.output_quality,\nsafety_tolerance=input_data."
                        },
                        {
                            "type": "YieldStatement",
                            "name": "",
                            "range": [
                                945,
                                949
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "\"result\"",
                                    "range": [
                                        946,
                                        946
                                    ],
                                    "children": [],
                                    "content": "\n"
                                },
                                {
                                    "type": "Argument",
                                    "name": "result",
                                    "range": [
                                        948,
                                        948
                                    ],
                                    "children": [],
                                    "content": "\n"
                                }
                            ],
                            "content": ",\n)\nyield"
                        }
                    ],
                    "content": "->BlockOutput:\n#If the seed is not provided,generate a random seed\nseed=input_data.seed\nif seed is None:\nseed=int.from_bytes(os.urandom(4),\"big\")\n\n#Run the model using the provided inputs\nresult=self.run_model(\napi_key=credentials.api_key,\nmodel_name=input_data.replicate_model_name.api_name,\nprompt=input_data.prompt,\nseed=seed,\nsteps=input_data.steps,\nguidance=input_data.guidance,\ninterval=input_data.interval,\naspect_ratio=input_data.aspect_ratio,\noutput_format=input_data.output_format,\noutput_quality=input_data.output_quality,\nsafety_tolerance=input_data.safety_tolerance,\n)\nyield \"result\""
                }
            ],
            "content": "\n)\n\ndef run(\nself,input_data:Input,*,credentials:APIKeyCredentials,**kwargs\n)->BlockOutput:\n#If the seed is not provided,generate a random seed\nseed=input_data.seed\nif seed is None:\nseed=int.from_bytes(os.urandom(4),\"big\")\n\n#Run the model using the provided inputs\nresult=self.run_model(\napi_key=credentials.api_key,\nmodel_name=input_data.replicate_model_name.api_name,\nprompt=input_data.prompt,\nseed=seed,\nsteps=input_data.steps,\nguidance=input_data.guidance,\ninterval=input_data.interval,\naspect_ratio=input_data.aspect_ratio,\noutput_format=input_data.output_format,\noutput_quality=input_data.output_quality,\nsafety_tolerance=input_data.safety_tolerance,\n)\nyield \"result\""
        },
        {
            "type": "FunctionDecl",
            "name": "run_model",
            "range": [
                952,
                1347
            ],
            "children": [
                {
                    "type": "FunctionBody",
                    "name": "",
                    "range": [
                        995,
                        1347
                    ],
                    "children": [
                        {
                            "type": "Assignment",
                            "name": "=",
                            "range": [
                                1005,
                                1018
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "replicate.Client",
                                    "range": [
                                        1007,
                                        1018
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "api_token",
                                            "range": [
                                                1011,
                                                1013
                                            ],
                                            "children": [],
                                            "content": "replicate.Client"
                                        }
                                    ],
                                    "content": "key\nclient=replicate.Client(api_token=api_key."
                                }
                            ],
                            "content": "the API key\nclient=replicate.Client(api_token=api_key."
                        },
                        {
                            "type": "Assignment",
                            "name": "=",
                            "range": [
                                1029,
                                1155
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "client.run",
                                    "range": [
                                        1038,
                                        1155
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "f\"{model_name}\"",
                                            "range": [
                                                1068,
                                                1070
                                            ],
                                            "children": [],
                                            "content": "Any]`"
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "input",
                                            "range": [
                                                1072,
                                                1121
                                            ],
                                            "children": [
                                                {
                                                    "type": "Property",
                                                    "name": "prompt",
                                                    "range": [
                                                        1076,
                                                        1078
                                                    ],
                                                    "children": [],
                                                    "content": "input={"
                                                },
                                                {
                                                    "type": "Property",
                                                    "name": "seed",
                                                    "range": [
                                                        1081,
                                                        1083
                                                    ],
                                                    "children": [],
                                                    "content": ":prompt,"
                                                },
                                                {
                                                    "type": "Property",
                                                    "name": "steps",
                                                    "range": [
                                                        1086,
                                                        1088
                                                    ],
                                                    "children": [],
                                                    "content": ":seed,"
                                                },
                                                {
                                                    "type": "Property",
                                                    "name": "guidance",
                                                    "range": [
                                                        1091,
                                                        1093
                                                    ],
                                                    "children": [],
                                                    "content": ":steps,"
                                                },
                                                {
                                                    "type": "Property",
                                                    "name": "interval",
                                                    "range": [
                                                        1096,
                                                        1098
                                                    ],
                                                    "children": [],
                                                    "content": ":guidance,"
                                                },
                                                {
                                                    "type": "Property",
                                                    "name": "aspect_ratio",
                                                    "range": [
                                                        1101,
                                                        1103
                                                    ],
                                                    "children": [],
                                                    "content": ":interval,"
                                                },
                                                {
                                                    "type": "Property",
                                                    "name": "output_format",
                                                    "range": [
                                                        1106,
                                                        1108
                                                    ],
                                                    "children": [],
                                                    "content": ":aspect_ratio,"
                                                },
                                                {
                                                    "type": "Property",
                                                    "name": "output_quality",
                                                    "range": [
                                                        1111,
                                                        1113
                                                    ],
                                                    "children": [],
                                                    "content": ":output_format,"
                                                },
                                                {
                                                    "type": "Property",
                                                    "name": "safety_tolerance",
                                                    "range": [
                                                        1116,
                                                        1118
                                                    ],
                                                    "children": [],
                                                    "content": ":output_quality,"
                                                }
                                            ],
                                            "content": "f \"{model_name}\",\ninput={\n\"prompt\":prompt,\n\"seed\":seed,\n\"steps\":steps,\n\"guidance\":guidance,\n\"interval\":interval,\n\"aspect_ratio\":aspect_ratio,\n\"output_format\":output_format,\n\"output_quality\":output_quality,\n\"safety_tolerance\":"
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "wait",
                                            "range": [
                                                1124,
                                                1126
                                            ],
                                            "children": [],
                                            "content": "\n},"
                                        }
                                    ],
                                    "content": "[FileOutput]=client.run(#type:ignore This is because they changed the return type,and didn 't update the type hint! It should be overloaded depending on the value of `use_file_output` to `FileOutput | list[FileOutput]` but it' s`Any|Iterator[Any]`\nf \"{model_name}\",\ninput={\n\"prompt\":prompt,\n\"seed\":seed,\n\"steps\":steps,\n\"guidance\":guidance,\n\"interval\":interval,\n\"aspect_ratio\":aspect_ratio,\n\"output_format\":output_format,\n\"output_quality\":output_quality,\n\"safety_tolerance\":safety_tolerance,\n},\nwait=False,#don't arbitrarily return data:octect/stream or sometimes url depending on the model????what is"
                                }
                            ],
                            "content": "with additional parameters\noutput:FileOutput|list[FileOutput]=client.run(#type:ignore This is because they changed the return type,and didn 't update the type hint! It should be overloaded depending on the value of `use_file_output` to `FileOutput | list[FileOutput]` but it' s`Any|Iterator[Any]`\nf \"{model_name}\",\ninput={\n\"prompt\":prompt,\n\"seed\":seed,\n\"steps\":steps,\n\"guidance\":guidance,\n\"interval\":interval,\n\"aspect_ratio\":aspect_ratio,\n\"output_format\":output_format,\n\"output_quality\":output_quality,\n\"safety_tolerance\":safety_tolerance,\n},\nwait=False,#don't arbitrarily return data:octect/stream or sometimes url depending on the model????what is"
                        },
                        {
                            "type": "IfStatement",
                            "name": "",
                            "range": [
                                1179,
                                1342
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "isinstance(output, list) and len(output) > 0",
                                    "range": [
                                        1180,
                                        1192
                                    ],
                                    "children": [],
                                    "content": "default message\nif isinstance(output,list)and len("
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "",
                                    "range": [
                                        1193,
                                        1263
                                    ],
                                    "children": [
                                        {
                                            "type": "IfStatement",
                                            "name": "",
                                            "range": [
                                                1195,
                                                1227
                                            ],
                                            "children": [
                                                {
                                                    "type": "Condition",
                                                    "name": "isinstance(output[0], FileOutput)",
                                                    "range": [
                                                        1196,
                                                        1204
                                                    ],
                                                    "children": [],
                                                    "content": "0:\nif isinstance(output[0"
                                                },
                                                {
                                                    "type": "BlockStatement",
                                                    "name": "",
                                                    "range": [
                                                        1205,
                                                        1227
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Assignment",
                                                            "name": "=",
                                                            "range": [
                                                                1207,
                                                                1215
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "name": "output[0].url",
                                                                    "range": [
                                                                        1209,
                                                                        1215
                                                                    ],
                                                                    "children": [],
                                                                    "content": ":\nresult_url=output[0"
                                                                }
                                                            ],
                                                            "content": "FileOutput):\nresult_url=output[0"
                                                        }
                                                    ],
                                                    "content": "],FileOutput):\nresult_url=output[0].url#If output is a list,get the"
                                                },
                                                {
                                                    "type": "ElseStatement",
                                                    "name": "",
                                                    "range": [
                                                        1228,
                                                        1263
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Assignment",
                                                            "name": "=",
                                                            "range": [
                                                                1230,
                                                                1238
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "name": "output[0]",
                                                                    "range": [
                                                                        1232,
                                                                        1238
                                                                    ],
                                                                    "children": [],
                                                                    "content": ":\nresult_url=output[\n"
                                                                }
                                                            ],
                                                            "content": "\nelse:\nresult_url=output[\n"
                                                        }
                                                    ],
                                                    "content": "first element\nelse:\nresult_url=output[\n0\n]#If output is a list and not a FileOutput,get the first element.Should never happen,but just"
                                                }
                                            ],
                                            "content": ">0:\nif isinstance(output[0],FileOutput):\nresult_url=output[0].url#If output is a list,get the"
                                        }
                                    ],
                                    "content": "output)>0:\nif isinstance(output[0],FileOutput):\nresult_url=output[0].url#If output is a list,get the first element\nelse:\nresult_url=output[\n0\n]#If output is a list and not a FileOutput,get the first element.Should never happen,but just"
                                },
                                {
                                    "type": "ElseIfStatement",
                                    "name": "",
                                    "range": [
                                        1264,
                                        1288
                                    ],
                                    "children": [
                                        {
                                            "type": "Condition",
                                            "name": "isinstance(output, FileOutput)",
                                            "range": [
                                                1265,
                                                1270
                                            ],
                                            "children": [],
                                            "content": "case.\nelif isinstance("
                                        },
                                        {
                                            "type": "BlockStatement",
                                            "name": "",
                                            "range": [
                                                1271,
                                                1288
                                            ],
                                            "children": [
                                                {
                                                    "type": "Assignment",
                                                    "name": "=",
                                                    "range": [
                                                        1273,
                                                        1277
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "name": "output.url",
                                                            "range": [
                                                                1275,
                                                                1277
                                                            ],
                                                            "children": [],
                                                            "content": ":\nresult_url"
                                                        }
                                                    ],
                                                    "content": "FileOutput):\nresult_url"
                                                }
                                            ],
                                            "content": "output,FileOutput):\nresult_url=output.url#If output is a FileOutput,"
                                        }
                                    ],
                                    "content": "in case.\nelif isinstance(output,FileOutput):\nresult_url=output.url#If output is a FileOutput,"
                                },
                                {
                                    "type": "ElseIfStatement",
                                    "name": "",
                                    "range": [
                                        1289,
                                        1322
                                    ],
                                    "children": [
                                        {
                                            "type": "Condition",
                                            "name": "isinstance(output, str)",
                                            "range": [
                                                1290,
                                                1295
                                            ],
                                            "children": [],
                                            "content": "the url\nelif isinstance("
                                        },
                                        {
                                            "type": "BlockStatement",
                                            "name": "",
                                            "range": [
                                                1296,
                                                1322
                                            ],
                                            "children": [
                                                {
                                                    "type": "Assignment",
                                                    "name": "=",
                                                    "range": [
                                                        1298,
                                                        1300
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "output",
                                                            "range": [
                                                                1300,
                                                                1300
                                                            ],
                                                            "children": [],
                                                            "content": ":"
                                                        }
                                                    ],
                                                    "content": "str):"
                                                }
                                            ],
                                            "content": "output,str):\nresult_url=output#If output is a string(for some reason due to their janky type hinting),"
                                        }
                                    ],
                                    "content": "use the url\nelif isinstance(output,str):\nresult_url=output#If output is a string(for some reason due to their janky type hinting),"
                                },
                                {
                                    "type": "ElseStatement",
                                    "name": "",
                                    "range": [
                                        1323,
                                        1342
                                    ],
                                    "children": [
                                        {
                                            "type": "Assignment",
                                            "name": "=",
                                            "range": [
                                                1326,
                                                1330
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "\"No output received\"",
                                                    "range": [
                                                        1328,
                                                        1330
                                                    ],
                                                    "children": [],
                                                    "content": ":\nresult_url"
                                                }
                                            ],
                                            "content": "\nelse:\nresult_url"
                                        }
                                    ],
                                    "content": "use it directly\nelse:\nresult_url=(\n\"No output received\"#Fallback message if output is not as"
                                }
                            ],
                            "content": "a default message\nif isinstance(output,list)and len(output)>0:\nif isinstance(output[0],FileOutput):\nresult_url=output[0].url#If output is a list,get the first element\nelse:\nresult_url=output[\n0\n]#If output is a list and not a FileOutput,get the first element.Should never happen,but just in case.\nelif isinstance(output,FileOutput):\nresult_url=output.url#If output is a FileOutput,use the url\nelif isinstance(output,str):\nresult_url=output#If output is a string(for some reason due to their janky type hinting),use it directly\nelse:\nresult_url=(\n\"No output received\"#Fallback message if output is not as"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "",
                            "range": [
                                1344,
                                1345
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "result_url",
                                    "range": [
                                        1345,
                                        1345
                                    ],
                                    "children": [],
                                    "content": ")"
                                }
                            ],
                            "content": "\n)"
                        }
                    ],
                    "content": ",\n):\n#Initialize Replicate client with the API key\nclient=replicate.Client(api_token=api_key.get_secret_value())\n\n#Run the model with additional parameters\noutput:FileOutput|list[FileOutput]=client.run(#type:ignore This is because they changed the return type,and didn 't update the type hint! It should be overloaded depending on the value of `use_file_output` to `FileOutput | list[FileOutput]` but it' s`Any|Iterator[Any]`\nf \"{model_name}\",\ninput={\n\"prompt\":prompt,\n\"seed\":seed,\n\"steps\":steps,\n\"guidance\":guidance,\n\"interval\":interval,\n\"aspect_ratio\":aspect_ratio,\n\"output_format\":output_format,\n\"output_quality\":output_quality,\n\"safety_tolerance\":safety_tolerance,\n},\nwait=False,#don't arbitrarily return data:octect/stream or sometimes url depending on the model????what is this api\n)\n\n#Check if output is a list or a string and extract accordingly;otherwise,assign a default message\nif isinstance(output,list)and len(output)>0:\nif isinstance(output[0],FileOutput):\nresult_url=output[0].url#If output is a list,get the first element\nelse:\nresult_url=output[\n0\n]#If output is a list and not a FileOutput,get the first element.Should never happen,but just in case.\nelif isinstance(output,FileOutput):\nresult_url=output.url#If output is a FileOutput,use the url\nelif isinstance(output,str):\nresult_url=output#If output is a string(for some reason due to their janky type hinting),use it directly\nelse:\nresult_url=(\n\"No output received\"#Fallback message if output is not as expected\n)\n\n"
                }
            ],
            "content": "result\n\ndef run_model(\nself,\napi_key:SecretStr,\nmodel_name,\nprompt,\nseed,\nsteps,\nguidance,\ninterval,\naspect_ratio,\noutput_format,\noutput_quality,\nsafety_tolerance,\n):\n#Initialize Replicate client with the API key\nclient=replicate.Client(api_token=api_key.get_secret_value())\n\n#Run the model with additional parameters\noutput:FileOutput|list[FileOutput]=client.run(#type:ignore This is because they changed the return type,and didn 't update the type hint! It should be overloaded depending on the value of `use_file_output` to `FileOutput | list[FileOutput]` but it' s`Any|Iterator[Any]`\nf \"{model_name}\",\ninput={\n\"prompt\":prompt,\n\"seed\":seed,\n\"steps\":steps,\n\"guidance\":guidance,\n\"interval\":interval,\n\"aspect_ratio\":aspect_ratio,\n\"output_format\":output_format,\n\"output_quality\":output_quality,\n\"safety_tolerance\":safety_tolerance,\n},\nwait=False,#don't arbitrarily return data:octect/stream or sometimes url depending on the model????what is this api\n)\n\n#Check if output is a list or a string and extract accordingly;otherwise,assign a default message\nif isinstance(output,list)and len(output)>0:\nif isinstance(output[0],FileOutput):\nresult_url=output[0].url#If output is a list,get the first element\nelse:\nresult_url=output[\n0\n]#If output is a list and not a FileOutput,get the first element.Should never happen,but just in case.\nelif isinstance(output,FileOutput):\nresult_url=output.url#If output is a FileOutput,use the url\nelif isinstance(output,str):\nresult_url=output#If output is a string(for some reason due to their janky type hinting),use it directly\nelse:\nresult_url=(\n\"No output received\"#Fallback message if output is not as expected\n)\n\n"
        }
    ],
    "content": "import os\nfrom enum import Enum\nfrom typing import Literal\n\nimport replicate\nfrom pydantic import SecretStr\nfrom replicate.helpers import FileOutput\n\nfrom backend.data.block import Block,BlockCategory,BlockOutput,BlockSchema\nfrom backend.data.model import(\nAPIKeyCredentials,\nCredentialsField,\nCredentialsMetaInput,\nSchemaField,\n)\nfrom backend.integrations.providers import ProviderName\n\nTEST_CREDENTIALS=APIKeyCredentials(\nid=\"01234567-89ab-cdef-0123-456789abcdef\",\nprovider=\"replicate\",\napi_key=SecretStr(\"mock-replicate-api-key\"),\ntitle=\"Mock Replicate API key\",\nexpires_at=None,\n)\nTEST_CREDENTIALS_INPUT={\n\"provider\":TEST_CREDENTIALS.provider,\n\"id\":TEST_CREDENTIALS.id,\n\"type\":TEST_CREDENTIALS.type,\n\"title\":TEST_CREDENTIALS.type,\n}\n\n\n#Model name enum\nclass ReplicateFluxModelName(str,Enum):\nFLUX_SCHNELL=(\"Flux Schnell\",)\nFLUX_PRO=(\"Flux Pro\",)\nFLUX_PRO1_1=(\"Flux Pro 1.1\",)\n\n@property\ndef api_name(self):\napi_names={\nReplicateFluxModelName.FLUX_SCHNELL:\"black-forest-labs/flux-schnell\",\nReplicateFluxModelName.FLUX_PRO:\"black-forest-labs/flux-pro\",\nReplicateFluxModelName.FLUX_PRO1_1:\"black-forest-labs/flux-1.1-pro\",\n}\nreturn api_names[self]\n\n\n#Image type Enum\nclass ImageType(str,Enum):\nWEBP=\"webp\"\nJPG=\"jpg\"\nPNG=\"png\"\n\n\nclass ReplicateFluxAdvancedModelBlock(Block):\nclass Input(BlockSchema):\ncredentials:CredentialsMetaInput[\nLiteral[ProviderName.REPLICATE],Literal[\"api_key\"]\n]=CredentialsField(\ndescription=\"The Replicate integration can be used with \"\n\"any API key with sufficient permissions for the blocks it is used on.\",\n)\nprompt:str=SchemaField(\ndescription=\"Text prompt for image generation\",\nplaceholder=\"e.g., 'A futuristic cityscape at sunset'\",\ntitle=\"Prompt\",\n)\nreplicate_model_name:ReplicateFluxModelName=SchemaField(\ndescription=\"The name of the Image Generation Model, i.e Flux Schnell\",\ndefault=ReplicateFluxModelName.FLUX_SCHNELL,\ntitle=\"Image Generation Model\",\nadvanced=False,\n)\nseed:int|None=SchemaField(\ndescription=\"Random seed. Set for reproducible generation\",\ndefault=None,\ntitle=\"Seed\",\n)\nsteps:int=SchemaField(\ndescription=\"Number of diffusion steps\",\ndefault=25,\ntitle=\"Steps\",\n)\nguidance:float=SchemaField(\ndescription=(\n\"Controls the balance between adherence to the text prompt and image quality/diversity. \"\n\"Higher values make the output more closely match the prompt but may reduce overall image quality.\"\n),\ndefault=3,\ntitle=\"Guidance\",\n)\ninterval:float=SchemaField(\ndescription=(\n\"Interval is a setting that increases the variance in possible outputs. \"\n\"Setting this value low will ensure strong prompt following with more consistent outputs.\"\n),\ndefault=2,\ntitle=\"Interval\",\n)\naspect_ratio:str=SchemaField(\ndescription=\"Aspect ratio for the generated image\",\ndefault=\"1:1\",\ntitle=\"Aspect Ratio\",\nplaceholder=\"Choose from: 1:1, 16:9, 2:3, 3:2, 4:5, 5:4, 9:16\",\n)\noutput_format:ImageType=SchemaField(\ndescription=\"File format of the output image\",\ndefault=ImageType.WEBP,\ntitle=\"Output Format\",\n)\noutput_quality:int=SchemaField(\ndescription=(\n\"Quality when saving the output images, from 0 to 100. \"\n\"Not relevant for .png outputs\"\n),\ndefault=80,\ntitle=\"Output Quality\",\n)\nsafety_tolerance:int=SchemaField(\ndescription=\"Safety tolerance, 1 is most strict and 5 is most permissive\",\ndefault=2,\ntitle=\"Safety Tolerance\",\n)\n\nclass Output(BlockSchema):\nresult:str=SchemaField(description=\"Generated output\")\nerror:str=SchemaField(description=\"Error message if the model run failed\")\n\ndef __init__(self):\nsuper().__init__(\nid=\"90f8c45e-e983-4644-aa0b-b4ebe2f531bc\",\ndescription=\"This block runs Flux models on Replicate with advanced settings.\",\ncategories={BlockCategory.AI},\ninput_schema=ReplicateFluxAdvancedModelBlock.Input,\noutput_schema=ReplicateFluxAdvancedModelBlock.Output,\ntest_input={\n\"credentials\":TEST_CREDENTIALS_INPUT,\n\"replicate_model_name\":ReplicateFluxModelName.FLUX_SCHNELL,\n\"prompt\":\"A beautiful landscape painting of a serene lake at sunrise\",\n\"seed\":None,\n\"steps\":25,\n\"guidance\":3.0,\n\"interval\":2.0,\n\"aspect_ratio\":\"1:1\",\n\"output_format\":ImageType.PNG,\n\"output_quality\":80,\n\"safety_tolerance\":2,\n},\ntest_output=[\n(\n\"result\",\n\"https://replicate.com/output/generated-image-url.jpg\",\n),\n],\ntest_mock={\n\"run_model\":lambda api_key,model_name,prompt,seed,steps,guidance,interval,aspect_ratio,output_format,output_quality,safety_tolerance:\"https://replicate.com/output/generated-image-url.jpg\",\n},\ntest_credentials=TEST_CREDENTIALS,\n)\n\ndef run(\nself,input_data:Input,*,credentials:APIKeyCredentials,**kwargs\n)->BlockOutput:\n#If the seed is not provided,generate a random seed\nseed=input_data.seed\nif seed is None:\nseed=int.from_bytes(os.urandom(4),\"big\")\n\n#Run the model using the provided inputs\nresult=self.run_model(\napi_key=credentials.api_key,\nmodel_name=input_data.replicate_model_name.api_name,\nprompt=input_data.prompt,\nseed=seed,\nsteps=input_data.steps,\nguidance=input_data.guidance,\ninterval=input_data.interval,\naspect_ratio=input_data.aspect_ratio,\noutput_format=input_data.output_format,\noutput_quality=input_data.output_quality,\nsafety_tolerance=input_data.safety_tolerance,\n)\nyield \"result\",result\n\ndef run_model(\nself,\napi_key:SecretStr,\nmodel_name,\nprompt,\nseed,\nsteps,\nguidance,\ninterval,\naspect_ratio,\noutput_format,\noutput_quality,\nsafety_tolerance,\n):\n#Initialize Replicate client with the API key\nclient=replicate.Client(api_token=api_key.get_secret_value())\n\n#Run the model with additional parameters\noutput:FileOutput|list[FileOutput]=client.run(#type:ignore This is because they changed the return type,and didn 't update the type hint! It should be overloaded depending on the value of `use_file_output` to `FileOutput | list[FileOutput]` but it' s`Any|Iterator[Any]`\nf \"{model_name}\",\ninput={\n\"prompt\":prompt,\n\"seed\":seed,\n\"steps\":steps,\n\"guidance\":guidance,\n\"interval\":interval,\n\"aspect_ratio\":aspect_ratio,\n\"output_format\":output_format,\n\"output_quality\":output_quality,\n\"safety_tolerance\":safety_tolerance,\n},\nwait=False,#don't arbitrarily return data:octect/stream or sometimes url depending on the model????what is this api\n)\n\n#Check if output is a list or a string and extract accordingly;otherwise,assign a default message\nif isinstance(output,list)and len(output)>0:\nif isinstance(output[0],FileOutput):\nresult_url=output[0].url#If output is a list,get the first element\nelse:\nresult_url=output[\n0\n]#If output is a list and not a FileOutput,get the first element.Should never happen,but just in case.\nelif isinstance(output,FileOutput):\nresult_url=output.url#If output is a FileOutput,use the url\nelif isinstance(output,str):\nresult_url=output#If output is a string(for some reason due to their janky type hinting),use it directly\nelse:\nresult_url=(\n\"No output received\"#Fallback message if output is not as expected\n)\n\n"
}