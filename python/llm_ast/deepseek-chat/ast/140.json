{
    "type": "Program",
    "name": "Global",
    "range": [
        0,
        1345
    ],
    "children": [
        {
            "type": "ClassDecl",
            "name": "ConversionError",
            "range": [
                20,
                29
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "ValueError",
                    "range": [
                        22,
                        24
                    ],
                    "children": [],
                    "content": "(ValueError)"
                },
                {
                    "type": "Block",
                    "name": "",
                    "range": [
                        25,
                        29
                    ],
                    "children": [
                        {
                            "type": "PassStatement",
                            "name": "",
                            "range": [
                                27,
                                27
                            ],
                            "children": [],
                            "content": "pass"
                        }
                    ],
                    "content": ":\npass\n\n"
                }
            ],
            "content": "class ConversionError(ValueError):\npass\n\n"
        },
        {
            "type": "FunctionDecl",
            "name": "__convert_list",
            "range": [
                30,
                153
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "value",
                    "range": [
                        33,
                        35
                    ],
                    "children": [],
                    "content": "(value:"
                },
                {
                    "type": "ReturnType",
                    "name": "list",
                    "range": [
                        39,
                        39
                    ],
                    "children": [],
                    "content": ">"
                },
                {
                    "type": "IfStatement",
                    "name": "isinstance",
                    "range": [
                        42,
                        62
                    ],
                    "children": [
                        {
                            "type": "Condition",
                            "name": "isinstance",
                            "range": [
                                43,
                                54
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "value",
                                    "range": [
                                        45,
                                        45
                                    ],
                                    "children": [],
                                    "content": "("
                                },
                                {
                                    "type": "TypeCheck",
                                    "name": "list, tuple, set",
                                    "range": [
                                        47,
                                        53
                                    ],
                                    "children": [],
                                    "content": ",(list,tuple,set"
                                }
                            ],
                            "content": "if isinstance(value,(list,tuple,set)"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "return",
                            "range": [
                                57,
                                61
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "list",
                                    "range": [
                                        58,
                                        61
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "value",
                                            "range": [
                                                60,
                                                60
                                            ],
                                            "children": [],
                                            "content": "("
                                        }
                                    ],
                                    "content": "return list(value"
                                }
                            ],
                            "content": "\nreturn list(value"
                        }
                    ],
                    "content": "\nif isinstance(value,(list,tuple,set)):\nreturn list(value)"
                },
                {
                    "type": "ElifStatement",
                    "name": "isinstance",
                    "range": [
                        63,
                        81
                    ],
                    "children": [
                        {
                            "type": "Condition",
                            "name": "isinstance",
                            "range": [
                                64,
                                69
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "value",
                                    "range": [
                                        66,
                                        66
                                    ],
                                    "children": [],
                                    "content": "("
                                },
                                {
                                    "type": "TypeCheck",
                                    "name": "dict",
                                    "range": [
                                        68,
                                        68
                                    ],
                                    "children": [],
                                    "content": ","
                                }
                            ],
                            "content": "elif isinstance(value,dict"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "return",
                            "range": [
                                72,
                                80
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "list",
                                    "range": [
                                        73,
                                        80
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "items",
                                            "range": [
                                                75,
                                                79
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "value",
                                                    "range": [
                                                        75,
                                                        75
                                                    ],
                                                    "children": [],
                                                    "content": "("
                                                }
                                            ],
                                            "content": "(value.items("
                                        }
                                    ],
                                    "content": "return list(value.items()"
                                }
                            ],
                            "content": "\nreturn list(value.items()"
                        }
                    ],
                    "content": "\nelif isinstance(value,dict):\nreturn list(value.items())"
                },
                {
                    "type": "ElifStatement",
                    "name": "isinstance",
                    "range": [
                        82,
                        144
                    ],
                    "children": [
                        {
                            "type": "Condition",
                            "name": "isinstance",
                            "range": [
                                83,
                                88
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "value",
                                    "range": [
                                        85,
                                        85
                                    ],
                                    "children": [],
                                    "content": "("
                                },
                                {
                                    "type": "TypeCheck",
                                    "name": "str",
                                    "range": [
                                        87,
                                        87
                                    ],
                                    "children": [],
                                    "content": ","
                                }
                            ],
                            "content": "elif isinstance(value,str"
                        },
                        {
                            "type": "Assignment",
                            "name": "value",
                            "range": [
                                91,
                                97
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "strip",
                                    "range": [
                                        94,
                                        97
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "value",
                                            "range": [
                                                93,
                                                93
                                            ],
                                            "children": [],
                                            "content": "="
                                        }
                                    ],
                                    "content": "value.strip("
                                }
                            ],
                            "content": "\nvalue=value.strip("
                        },
                        {
                            "type": "IfStatement",
                            "name": "startswith",
                            "range": [
                                99,
                                136
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "startswith",
                                    "range": [
                                        100,
                                        112
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "value",
                                            "range": [
                                                100,
                                                100
                                            ],
                                            "children": [],
                                            "content": "if"
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "\"[\"",
                                            "range": [
                                                104,
                                                104
                                            ],
                                            "children": [],
                                            "content": "("
                                        },
                                        {
                                            "type": "LogicalOperator",
                                            "name": "and",
                                            "range": [
                                                106,
                                                106
                                            ],
                                            "children": [],
                                            "content": ")"
                                        },
                                        {
                                            "type": "CallExpression",
                                            "name": "endswith",
                                            "range": [
                                                107,
                                                111
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "value",
                                                    "range": [
                                                        107,
                                                        107
                                                    ],
                                                    "children": [],
                                                    "content": "and"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "name": "\"]\"",
                                                    "range": [
                                                        111,
                                                        111
                                                    ],
                                                    "children": [],
                                                    "content": "("
                                                }
                                            ],
                                            "content": "and value.endswith("
                                        }
                                    ],
                                    "content": "if value.startswith(\"[\")and value.endswith(\"]\""
                                },
                                {
                                    "type": "TryStatement",
                                    "name": "try",
                                    "range": [
                                        115,
                                        131
                                    ],
                                    "children": [
                                        {
                                            "type": "ReturnStatement",
                                            "name": "return",
                                            "range": [
                                                118,
                                                125
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "json.loads",
                                                    "range": [
                                                        119,
                                                        124
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "value",
                                                            "range": [
                                                                123,
                                                                123
                                                            ],
                                                            "children": [],
                                                            "content": "("
                                                        }
                                                    ],
                                                    "content": "return json.loads(value"
                                                }
                                            ],
                                            "content": "\nreturn json.loads(value)"
                                        },
                                        {
                                            "type": "ExceptStatement",
                                            "name": "except",
                                            "range": [
                                                126,
                                                131
                                            ],
                                            "children": [
                                                {
                                                    "type": "Exception",
                                                    "name": "JSONDecodeError",
                                                    "range": [
                                                        129,
                                                        129
                                                    ],
                                                    "children": [],
                                                    "content": "."
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "name": "return",
                                                    "range": [
                                                        132,
                                                        136
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "ArrayExpression",
                                                            "name": "[value]",
                                                            "range": [
                                                                133,
                                                                135
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "value",
                                                                    "range": [
                                                                        134,
                                                                        134
                                                                    ],
                                                                    "children": [],
                                                                    "content": "["
                                                                }
                                                            ],
                                                            "content": "return[value"
                                                        }
                                                    ],
                                                    "content": "\nreturn[value]"
                                                }
                                            ],
                                            "content": "\nexcept json.JSONDecodeError:"
                                        }
                                    ],
                                    "content": "\ntry:\nreturn json.loads(value)\nexcept json.JSONDecodeError:"
                                }
                            ],
                            "content": "\nif value.startswith(\"[\")and value.endswith(\"]\"):\ntry:\nreturn json.loads(value)\nexcept json.JSONDecodeError:\nreturn[value]"
                        },
                        {
                            "type": "ElseStatement",
                            "name": "else",
                            "range": [
                                137,
                                144
                            ],
                            "children": [
                                {
                                    "type": "ReturnStatement",
                                    "name": "return",
                                    "range": [
                                        140,
                                        144
                                    ],
                                    "children": [
                                        {
                                            "type": "ArrayExpression",
                                            "name": "[value]",
                                            "range": [
                                                141,
                                                143
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "value",
                                                    "range": [
                                                        142,
                                                        142
                                                    ],
                                                    "children": [],
                                                    "content": "["
                                                }
                                            ],
                                            "content": "return[value"
                                        }
                                    ],
                                    "content": "\nreturn[value]"
                                }
                            ],
                            "content": "\nelse:\nreturn[value]"
                        }
                    ],
                    "content": "\nelif isinstance(value,str):\nvalue=value.strip()\nif value.startswith(\"[\")and value.endswith(\"]\"):\ntry:\nreturn json.loads(value)\nexcept json.JSONDecodeError:\nreturn[value]\nelse:\nreturn[value]"
                },
                {
                    "type": "ElseStatement",
                    "name": "else",
                    "range": [
                        145,
                        152
                    ],
                    "children": [
                        {
                            "type": "ReturnStatement",
                            "name": "return",
                            "range": [
                                148,
                                152
                            ],
                            "children": [
                                {
                                    "type": "ArrayExpression",
                                    "name": "[value]",
                                    "range": [
                                        149,
                                        151
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "value",
                                            "range": [
                                                150,
                                                150
                                            ],
                                            "children": [],
                                            "content": "["
                                        }
                                    ],
                                    "content": "return[value"
                                }
                            ],
                            "content": "\nreturn[value]"
                        }
                    ],
                    "content": "\nelse:\nreturn[value]"
                }
            ],
            "content": "\ndef __convert_list(value:Any)->list:\nif isinstance(value,(list,tuple,set)):\nreturn list(value)\nelif isinstance(value,dict):\nreturn list(value.items())\nelif isinstance(value,str):\nvalue=value.strip()\nif value.startswith(\"[\")and value.endswith(\"]\"):\ntry:\nreturn json.loads(value)\nexcept json.JSONDecodeError:\nreturn[value]\nelse:\nreturn[value]\nelse:\nreturn[value]\n"
        },
        {
            "type": "FunctionDecl",
            "name": "__convert_dict",
            "range": [
                154,
                305
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "value",
                    "range": [
                        157,
                        159
                    ],
                    "children": [],
                    "content": "__convert_dict(value"
                },
                {
                    "type": "ReturnType",
                    "name": "dict",
                    "range": [
                        163,
                        163
                    ],
                    "children": [],
                    "content": "-"
                },
                {
                    "type": "BlockStatement",
                    "name": "",
                    "range": [
                        165,
                        305
                    ],
                    "children": [
                        {
                            "type": "IfStatement",
                            "name": "",
                            "range": [
                                166,
                                224
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "",
                                    "range": [
                                        167,
                                        172
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "isinstance",
                                            "range": [
                                                167,
                                                172
                                            ],
                                            "children": [
                                                {
                                                    "type": "Argument",
                                                    "name": "value",
                                                    "range": [
                                                        169,
                                                        169
                                                    ],
                                                    "children": [],
                                                    "content": "isinstance"
                                                },
                                                {
                                                    "type": "Argument",
                                                    "name": "str",
                                                    "range": [
                                                        171,
                                                        171
                                                    ],
                                                    "children": [],
                                                    "content": "value"
                                                }
                                            ],
                                            "content": "\nif isinstance(value,"
                                        }
                                    ],
                                    "content": "\nif isinstance(value,"
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "",
                                    "range": [
                                        174,
                                        224
                                    ],
                                    "children": [
                                        {
                                            "type": "TryStatement",
                                            "name": "",
                                            "range": [
                                                175,
                                                224
                                            ],
                                            "children": [
                                                {
                                                    "type": "BlockStatement",
                                                    "name": "",
                                                    "range": [
                                                        177,
                                                        208
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "AssignmentExpression",
                                                            "name": "result",
                                                            "range": [
                                                                178,
                                                                185
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "CallExpression",
                                                                    "name": "json.loads",
                                                                    "range": [
                                                                        180,
                                                                        185
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Argument",
                                                                            "name": "value",
                                                                            "range": [
                                                                                184,
                                                                                184
                                                                            ],
                                                                            "children": [],
                                                                            "content": "loads"
                                                                        }
                                                                    ],
                                                                    "content": "result=json.loads("
                                                                }
                                                            ],
                                                            "content": ":\nresult=json.loads("
                                                        },
                                                        {
                                                            "type": "IfStatement",
                                                            "name": "",
                                                            "range": [
                                                                187,
                                                                208
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Condition",
                                                                    "name": "",
                                                                    "range": [
                                                                        188,
                                                                        193
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "CallExpression",
                                                                            "name": "isinstance",
                                                                            "range": [
                                                                                188,
                                                                                193
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Argument",
                                                                                    "name": "result",
                                                                                    "range": [
                                                                                        190,
                                                                                        190
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "isinstance"
                                                                                },
                                                                                {
                                                                                    "type": "Argument",
                                                                                    "name": "dict",
                                                                                    "range": [
                                                                                        192,
                                                                                        192
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "result"
                                                                                }
                                                                            ],
                                                                            "content": "\nif isinstance(result,"
                                                                        }
                                                                    ],
                                                                    "content": "\nif isinstance(result,"
                                                                },
                                                                {
                                                                    "type": "BlockStatement",
                                                                    "name": "",
                                                                    "range": [
                                                                        195,
                                                                        198
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "ReturnStatement",
                                                                            "name": "",
                                                                            "range": [
                                                                                196,
                                                                                197
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "result",
                                                                                    "range": [
                                                                                        197,
                                                                                        197
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "\n"
                                                                                }
                                                                            ],
                                                                            "content": ":\n"
                                                                        }
                                                                    ],
                                                                    "content": "):\nreturn"
                                                                },
                                                                {
                                                                    "type": "ElseStatement",
                                                                    "name": "",
                                                                    "range": [
                                                                        199,
                                                                        208
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "BlockStatement",
                                                                            "name": "",
                                                                            "range": [
                                                                                201,
                                                                                208
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "ReturnStatement",
                                                                                    "name": "",
                                                                                    "range": [
                                                                                        202,
                                                                                        207
                                                                                    ],
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "ObjectLiteral",
                                                                                            "name": "",
                                                                                            "range": [
                                                                                                203,
                                                                                                207
                                                                                            ],
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "Property",
                                                                                                    "name": "value",
                                                                                                    "range": [
                                                                                                        204,
                                                                                                        206
                                                                                                    ],
                                                                                                    "children": [
                                                                                                        {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "result",
                                                                                                            "range": [
                                                                                                                206,
                                                                                                                206
                                                                                                            ],
                                                                                                            "children": [],
                                                                                                            "content": "\"value\""
                                                                                                        }
                                                                                                    ],
                                                                                                    "content": "return{\"value\""
                                                                                                }
                                                                                            ],
                                                                                            "content": "\nreturn{\"value\":"
                                                                                        }
                                                                                    ],
                                                                                    "content": ":\nreturn{\"value\":"
                                                                                }
                                                                            ],
                                                                            "content": "else:\nreturn{\"value\":result"
                                                                        }
                                                                    ],
                                                                    "content": "result\nelse:\nreturn{\"value\":result"
                                                                }
                                                            ],
                                                            "content": ")\nif isinstance(result,dict):\nreturn result\nelse:\nreturn{\"value\":result"
                                                        }
                                                    ],
                                                    "content": "try:\nresult=json.loads(value)\nif isinstance(result,dict):\nreturn result\nelse:\nreturn{\"value\":result"
                                                },
                                                {
                                                    "type": "CatchStatement",
                                                    "name": "",
                                                    "range": [
                                                        209,
                                                        224
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "BlockStatement",
                                                            "name": "",
                                                            "range": [
                                                                214,
                                                                224
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "ReturnStatement",
                                                                    "name": "",
                                                                    "range": [
                                                                        215,
                                                                        220
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "ObjectLiteral",
                                                                            "name": "",
                                                                            "range": [
                                                                                216,
                                                                                220
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Property",
                                                                                    "name": "value",
                                                                                    "range": [
                                                                                        217,
                                                                                        219
                                                                                    ],
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "value",
                                                                                            "range": [
                                                                                                219,
                                                                                                219
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "\"value\""
                                                                                        }
                                                                                    ],
                                                                                    "content": "return{\"value\""
                                                                                }
                                                                            ],
                                                                            "content": "\nreturn{\"value\":"
                                                                        }
                                                                    ],
                                                                    "content": ":\nreturn{\"value\":"
                                                                }
                                                            ],
                                                            "content": "JSONDecodeError:\nreturn{\"value\":value}#Fallback"
                                                        }
                                                    ],
                                                    "content": "}\nexcept json.JSONDecodeError:\nreturn{\"value\":value}#Fallback"
                                                }
                                            ],
                                            "content": ":\ntry:\nresult=json.loads(value)\nif isinstance(result,dict):\nreturn result\nelse:\nreturn{\"value\":result}\nexcept json.JSONDecodeError:\nreturn{\"value\":value}#Fallback"
                                        }
                                    ],
                                    "content": "):\ntry:\nresult=json.loads(value)\nif isinstance(result,dict):\nreturn result\nelse:\nreturn{\"value\":result}\nexcept json.JSONDecodeError:\nreturn{\"value\":value}#Fallback"
                                }
                            ],
                            "content": ":\nif isinstance(value,str):\ntry:\nresult=json.loads(value)\nif isinstance(result,dict):\nreturn result\nelse:\nreturn{\"value\":result}\nexcept json.JSONDecodeError:\nreturn{\"value\":value}#Fallback"
                        },
                        {
                            "type": "ElifStatement",
                            "name": "",
                            "range": [
                                225,
                                253
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "",
                                    "range": [
                                        226,
                                        231
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "isinstance",
                                            "range": [
                                                226,
                                                231
                                            ],
                                            "children": [
                                                {
                                                    "type": "Argument",
                                                    "name": "value",
                                                    "range": [
                                                        228,
                                                        228
                                                    ],
                                                    "children": [],
                                                    "content": "isinstance"
                                                },
                                                {
                                                    "type": "Argument",
                                                    "name": "list",
                                                    "range": [
                                                        230,
                                                        230
                                                    ],
                                                    "children": [],
                                                    "content": "value"
                                                }
                                            ],
                                            "content": "\nelif isinstance(value,"
                                        }
                                    ],
                                    "content": "\nelif isinstance(value,"
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "",
                                    "range": [
                                        233,
                                        253
                                    ],
                                    "children": [
                                        {
                                            "type": "ReturnStatement",
                                            "name": "",
                                            "range": [
                                                234,
                                                252
                                            ],
                                            "children": [
                                                {
                                                    "type": "ObjectLiteral",
                                                    "name": "",
                                                    "range": [
                                                        235,
                                                        252
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Property",
                                                            "name": "i",
                                                            "range": [
                                                                236,
                                                                238
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "ArrayAccess",
                                                                    "name": "",
                                                                    "range": [
                                                                        239,
                                                                        241
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "value",
                                                                            "range": [
                                                                                239,
                                                                                239
                                                                            ],
                                                                            "children": [],
                                                                            "content": ":"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "i",
                                                                            "range": [
                                                                                240,
                                                                                240
                                                                            ],
                                                                            "children": [],
                                                                            "content": "value"
                                                                        }
                                                                    ],
                                                                    "content": ":value["
                                                                }
                                                            ],
                                                            "content": "return{i"
                                                        }
                                                    ],
                                                    "content": "\nreturn{i:value[i]for i in range(len(value)"
                                                }
                                            ],
                                            "content": ":\nreturn{i:value[i]for i in range(len(value)"
                                        }
                                    ],
                                    "content": "):\nreturn{i:value[i]for i in range(len(value))"
                                }
                            ],
                            "content": "conversion\nelif isinstance(value,list):\nreturn{i:value[i]for i in range(len(value))"
                        },
                        {
                            "type": "ElifStatement",
                            "name": "",
                            "range": [
                                254,
                                282
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "",
                                    "range": [
                                        255,
                                        260
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "isinstance",
                                            "range": [
                                                255,
                                                260
                                            ],
                                            "children": [
                                                {
                                                    "type": "Argument",
                                                    "name": "value",
                                                    "range": [
                                                        257,
                                                        257
                                                    ],
                                                    "children": [],
                                                    "content": "isinstance"
                                                },
                                                {
                                                    "type": "Argument",
                                                    "name": "tuple",
                                                    "range": [
                                                        259,
                                                        259
                                                    ],
                                                    "children": [],
                                                    "content": "value"
                                                }
                                            ],
                                            "content": "\nelif isinstance(value,"
                                        }
                                    ],
                                    "content": "\nelif isinstance(value,"
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "",
                                    "range": [
                                        262,
                                        282
                                    ],
                                    "children": [
                                        {
                                            "type": "ReturnStatement",
                                            "name": "",
                                            "range": [
                                                263,
                                                281
                                            ],
                                            "children": [
                                                {
                                                    "type": "ObjectLiteral",
                                                    "name": "",
                                                    "range": [
                                                        264,
                                                        281
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Property",
                                                            "name": "i",
                                                            "range": [
                                                                265,
                                                                267
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "ArrayAccess",
                                                                    "name": "",
                                                                    "range": [
                                                                        268,
                                                                        270
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "value",
                                                                            "range": [
                                                                                268,
                                                                                268
                                                                            ],
                                                                            "children": [],
                                                                            "content": ":"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "i",
                                                                            "range": [
                                                                                269,
                                                                                269
                                                                            ],
                                                                            "children": [],
                                                                            "content": "value"
                                                                        }
                                                                    ],
                                                                    "content": ":value["
                                                                }
                                                            ],
                                                            "content": "return{i"
                                                        }
                                                    ],
                                                    "content": "\nreturn{i:value[i]for i in range(len(value)"
                                                }
                                            ],
                                            "content": ":\nreturn{i:value[i]for i in range(len(value)"
                                        }
                                    ],
                                    "content": "):\nreturn{i:value[i]for i in range(len(value))"
                                }
                            ],
                            "content": "}\nelif isinstance(value,tuple):\nreturn{i:value[i]for i in range(len(value))"
                        },
                        {
                            "type": "ElifStatement",
                            "name": "",
                            "range": [
                                283,
                                294
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "",
                                    "range": [
                                        284,
                                        289
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "isinstance",
                                            "range": [
                                                284,
                                                289
                                            ],
                                            "children": [
                                                {
                                                    "type": "Argument",
                                                    "name": "value",
                                                    "range": [
                                                        286,
                                                        286
                                                    ],
                                                    "children": [],
                                                    "content": "isinstance"
                                                },
                                                {
                                                    "type": "Argument",
                                                    "name": "dict",
                                                    "range": [
                                                        288,
                                                        288
                                                    ],
                                                    "children": [],
                                                    "content": "value"
                                                }
                                            ],
                                            "content": "\nelif isinstance(value,"
                                        }
                                    ],
                                    "content": "\nelif isinstance(value,"
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "",
                                    "range": [
                                        291,
                                        294
                                    ],
                                    "children": [
                                        {
                                            "type": "ReturnStatement",
                                            "name": "",
                                            "range": [
                                                292,
                                                293
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "value",
                                                    "range": [
                                                        293,
                                                        293
                                                    ],
                                                    "children": [],
                                                    "content": "\n"
                                                }
                                            ],
                                            "content": ":\n"
                                        }
                                    ],
                                    "content": "):\nreturn"
                                }
                            ],
                            "content": "}\nelif isinstance(value,dict):\nreturn"
                        },
                        {
                            "type": "ElseStatement",
                            "name": "",
                            "range": [
                                295,
                                304
                            ],
                            "children": [
                                {
                                    "type": "BlockStatement",
                                    "name": "",
                                    "range": [
                                        297,
                                        304
                                    ],
                                    "children": [
                                        {
                                            "type": "ReturnStatement",
                                            "name": "",
                                            "range": [
                                                298,
                                                303
                                            ],
                                            "children": [
                                                {
                                                    "type": "ObjectLiteral",
                                                    "name": "",
                                                    "range": [
                                                        299,
                                                        303
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Property",
                                                            "name": "value",
                                                            "range": [
                                                                300,
                                                                302
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "value",
                                                                    "range": [
                                                                        302,
                                                                        302
                                                                    ],
                                                                    "children": [],
                                                                    "content": "\"value\""
                                                                }
                                                            ],
                                                            "content": "return{\"value\""
                                                        }
                                                    ],
                                                    "content": "\nreturn{\"value\":"
                                                }
                                            ],
                                            "content": ":\nreturn{\"value\":"
                                        }
                                    ],
                                    "content": "else:\nreturn{\"value\":value"
                                }
                            ],
                            "content": "value\nelse:\nreturn{\"value\":value"
                        }
                    ],
                    "content": "dict:\nif isinstance(value,str):\ntry:\nresult=json.loads(value)\nif isinstance(result,dict):\nreturn result\nelse:\nreturn{\"value\":result}\nexcept json.JSONDecodeError:\nreturn{\"value\":value}#Fallback conversion\nelif isinstance(value,list):\nreturn{i:value[i]for i in range(len(value))}\nelif isinstance(value,tuple):\nreturn{i:value[i]for i in range(len(value))}\nelif isinstance(value,dict):\nreturn value\nelse:\nreturn{\"value\":value}"
                }
            ],
            "content": "\n\ndef __convert_dict(value:Any)->dict:\nif isinstance(value,str):\ntry:\nresult=json.loads(value)\nif isinstance(result,dict):\nreturn result\nelse:\nreturn{\"value\":result}\nexcept json.JSONDecodeError:\nreturn{\"value\":value}#Fallback conversion\nelif isinstance(value,list):\nreturn{i:value[i]for i in range(len(value))}\nelif isinstance(value,tuple):\nreturn{i:value[i]for i in range(len(value))}\nelif isinstance(value,dict):\nreturn value\nelse:\nreturn{\"value\":value}"
        },
        {
            "type": "FunctionDecl",
            "name": "__convert_tuple",
            "range": [
                306,
                400
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "value",
                    "range": [
                        309,
                        311
                    ],
                    "children": [],
                    "content": "def __convert_tuple("
                },
                {
                    "type": "ReturnType",
                    "name": "tuple",
                    "range": [
                        315,
                        316
                    ],
                    "children": [],
                    "content": ")-"
                },
                {
                    "type": "IfStatement",
                    "name": "",
                    "range": [
                        318,
                        338
                    ],
                    "children": [
                        {
                            "type": "Condition",
                            "name": "isinstance",
                            "range": [
                                319,
                                330
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "value",
                                    "range": [
                                        321,
                                        321
                                    ],
                                    "children": [],
                                    "content": "if"
                                },
                                {
                                    "type": "TypeCheck",
                                    "name": "str, list, set",
                                    "range": [
                                        324,
                                        328
                                    ],
                                    "children": [],
                                    "content": "value,(str,"
                                }
                            ],
                            "content": ":\nif isinstance(value,(str,list,"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "",
                            "range": [
                                333,
                                337
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "tuple",
                                    "range": [
                                        334,
                                        337
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "value",
                                            "range": [
                                                336,
                                                336
                                            ],
                                            "children": [],
                                            "content": "return"
                                        }
                                    ],
                                    "content": ":\nreturn tuple"
                                }
                            ],
                            "content": "):\nreturn tuple"
                        }
                    ],
                    "content": "tuple:\nif isinstance(value,(str,list,set)):\nreturn tuple("
                },
                {
                    "type": "ElifStatement",
                    "name": "",
                    "range": [
                        339,
                        357
                    ],
                    "children": [
                        {
                            "type": "Condition",
                            "name": "isinstance",
                            "range": [
                                340,
                                345
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "value",
                                    "range": [
                                        342,
                                        342
                                    ],
                                    "children": [],
                                    "content": "elif"
                                },
                                {
                                    "type": "TypeCheck",
                                    "name": "dict",
                                    "range": [
                                        344,
                                        344
                                    ],
                                    "children": [],
                                    "content": "("
                                }
                            ],
                            "content": ")\nelif isinstance(value"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "",
                            "range": [
                                348,
                                356
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "tuple",
                                    "range": [
                                        349,
                                        356
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "items",
                                            "range": [
                                                353,
                                                355
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "value",
                                                    "range": [
                                                        351,
                                                        351
                                                    ],
                                                    "children": [],
                                                    "content": "return"
                                                }
                                            ],
                                            "content": "(value."
                                        }
                                    ],
                                    "content": ":\nreturn tuple(value.items"
                                }
                            ],
                            "content": "):\nreturn tuple(value.items"
                        }
                    ],
                    "content": "value)\nelif isinstance(value,dict):\nreturn tuple(value.items("
                },
                {
                    "type": "ElifStatement",
                    "name": "",
                    "range": [
                        358,
                        378
                    ],
                    "children": [
                        {
                            "type": "Condition",
                            "name": "isinstance",
                            "range": [
                                359,
                                370
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "value",
                                    "range": [
                                        361,
                                        361
                                    ],
                                    "children": [],
                                    "content": "elif"
                                },
                                {
                                    "type": "TypeCheck",
                                    "name": "int, float, bool",
                                    "range": [
                                        364,
                                        368
                                    ],
                                    "children": [],
                                    "content": "value,(int,"
                                }
                            ],
                            "content": ")\nelif isinstance(value,(int,float,"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "",
                            "range": [
                                373,
                                377
                            ],
                            "children": [
                                {
                                    "type": "Tuple",
                                    "name": "",
                                    "range": [
                                        374,
                                        377
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "value",
                                            "range": [
                                                375,
                                                375
                                            ],
                                            "children": [],
                                            "content": "\n"
                                        }
                                    ],
                                    "content": ":\nreturn("
                                }
                            ],
                            "content": "):\nreturn("
                        }
                    ],
                    "content": "))\nelif isinstance(value,(int,float,bool)):\nreturn(value"
                },
                {
                    "type": "ElifStatement",
                    "name": "",
                    "range": [
                        379,
                        390
                    ],
                    "children": [
                        {
                            "type": "Condition",
                            "name": "isinstance",
                            "range": [
                                380,
                                385
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "value",
                                    "range": [
                                        382,
                                        382
                                    ],
                                    "children": [],
                                    "content": "elif"
                                },
                                {
                                    "type": "TypeCheck",
                                    "name": "tuple",
                                    "range": [
                                        384,
                                        384
                                    ],
                                    "children": [],
                                    "content": "("
                                }
                            ],
                            "content": ")\nelif isinstance(value"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "",
                            "range": [
                                388,
                                389
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "value",
                                    "range": [
                                        389,
                                        389
                                    ],
                                    "children": [],
                                    "content": ":"
                                }
                            ],
                            "content": "):"
                        }
                    ],
                    "content": ",)\nelif isinstance(value,tuple):\n"
                },
                {
                    "type": "ElseStatement",
                    "name": "",
                    "range": [
                        391,
                        399
                    ],
                    "children": [
                        {
                            "type": "ReturnStatement",
                            "name": "",
                            "range": [
                                394,
                                398
                            ],
                            "children": [
                                {
                                    "type": "Tuple",
                                    "name": "",
                                    "range": [
                                        395,
                                        398
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "value",
                                            "range": [
                                                396,
                                                396
                                            ],
                                            "children": [],
                                            "content": "\n"
                                        }
                                    ],
                                    "content": ":\nreturn("
                                }
                            ],
                            "content": "else:\nreturn("
                        }
                    ],
                    "content": "return value\nelse:\nreturn(value"
                }
            ],
            "content": "\n\n\ndef __convert_tuple(value:Any)->tuple:\nif isinstance(value,(str,list,set)):\nreturn tuple(value)\nelif isinstance(value,dict):\nreturn tuple(value.items())\nelif isinstance(value,(int,float,bool)):\nreturn(value,)\nelif isinstance(value,tuple):\nreturn value\nelse:\nreturn(value,"
        },
        {
            "type": "FunctionDecl",
            "name": "__convert_set",
            "range": [
                401,
                473
            ],
            "children": [
                {
                    "type": "Parameters",
                    "name": "value",
                    "range": [
                        403,
                        407
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "value",
                            "range": [
                                404,
                                406
                            ],
                            "children": [],
                            "content": "\ndef __convert_set"
                        }
                    ],
                    "content": "\n\ndef __convert_set("
                },
                {
                    "type": "ReturnType",
                    "name": "set",
                    "range": [
                        408,
                        410
                    ],
                    "children": [],
                    "content": "value:Any"
                },
                {
                    "type": "Block",
                    "name": "",
                    "range": [
                        412,
                        473
                    ],
                    "children": [
                        {
                            "type": "IfStatement",
                            "name": "",
                            "range": [
                                413,
                                433
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "isinstance",
                                    "range": [
                                        414,
                                        425
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "isinstance",
                                            "range": [
                                                414,
                                                425
                                            ],
                                            "children": [
                                                {
                                                    "type": "Arguments",
                                                    "name": "",
                                                    "range": [
                                                        415,
                                                        425
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "value",
                                                            "range": [
                                                                416,
                                                                416
                                                            ],
                                                            "children": [],
                                                            "content": "\n"
                                                        },
                                                        {
                                                            "type": "Tuple",
                                                            "name": "",
                                                            "range": [
                                                                418,
                                                                424
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Type",
                                                                    "name": "str",
                                                                    "range": [
                                                                        419,
                                                                        419
                                                                    ],
                                                                    "children": [],
                                                                    "content": "("
                                                                },
                                                                {
                                                                    "type": "Type",
                                                                    "name": "list",
                                                                    "range": [
                                                                        421,
                                                                        421
                                                                    ],
                                                                    "children": [],
                                                                    "content": ","
                                                                },
                                                                {
                                                                    "type": "Type",
                                                                    "name": "tuple",
                                                                    "range": [
                                                                        423,
                                                                        423
                                                                    ],
                                                                    "children": [],
                                                                    "content": "str"
                                                                }
                                                            ],
                                                            "content": "isinstance(value,(str,"
                                                        }
                                                    ],
                                                    "content": ":\nif isinstance(value,(str,list"
                                                }
                                            ],
                                            "content": "set:\nif isinstance(value,(str,list"
                                        }
                                    ],
                                    "content": "set:\nif isinstance(value,(str,list"
                                },
                                {
                                    "type": "Block",
                                    "name": "",
                                    "range": [
                                        427,
                                        433
                                    ],
                                    "children": [
                                        {
                                            "type": "ReturnStatement",
                                            "name": "",
                                            "range": [
                                                428,
                                                433
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "set",
                                                    "range": [
                                                        429,
                                                        432
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Arguments",
                                                            "name": "",
                                                            "range": [
                                                                430,
                                                                432
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "value",
                                                                    "range": [
                                                                        431,
                                                                        431
                                                                    ],
                                                                    "children": [],
                                                                    "content": "\n"
                                                                }
                                                            ],
                                                            "content": ":\nreturn"
                                                        }
                                                    ],
                                                    "content": "):\nreturn"
                                                }
                                            ],
                                            "content": ")):\nreturn set"
                                        }
                                    ],
                                    "content": "tuple)):\nreturn set"
                                }
                            ],
                            "content": ">set:\nif isinstance(value,(str,list,tuple)):\nreturn set"
                        },
                        {
                            "type": "ElifStatement",
                            "name": "",
                            "range": [
                                434,
                                452
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "isinstance",
                                    "range": [
                                        435,
                                        440
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "isinstance",
                                            "range": [
                                                435,
                                                440
                                            ],
                                            "children": [
                                                {
                                                    "type": "Arguments",
                                                    "name": "",
                                                    "range": [
                                                        436,
                                                        440
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "value",
                                                            "range": [
                                                                437,
                                                                437
                                                            ],
                                                            "children": [],
                                                            "content": "\n"
                                                        },
                                                        {
                                                            "type": "Type",
                                                            "name": "dict",
                                                            "range": [
                                                                439,
                                                                439
                                                            ],
                                                            "children": [],
                                                            "content": "isinstance"
                                                        }
                                                    ],
                                                    "content": ")\nelif isinstance("
                                                }
                                            ],
                                            "content": "value)\nelif isinstance("
                                        }
                                    ],
                                    "content": "value)\nelif isinstance("
                                },
                                {
                                    "type": "Block",
                                    "name": "",
                                    "range": [
                                        442,
                                        452
                                    ],
                                    "children": [
                                        {
                                            "type": "ReturnStatement",
                                            "name": "",
                                            "range": [
                                                443,
                                                452
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "set",
                                                    "range": [
                                                        444,
                                                        451
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Arguments",
                                                            "name": "",
                                                            "range": [
                                                                445,
                                                                451
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "CallExpression",
                                                                    "name": "items",
                                                                    "range": [
                                                                        447,
                                                                        450
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "value",
                                                                            "range": [
                                                                                446,
                                                                                446
                                                                            ],
                                                                            "children": [],
                                                                            "content": "\n"
                                                                        }
                                                                    ],
                                                                    "content": "return set(value"
                                                                }
                                                            ],
                                                            "content": ":\nreturn set(value."
                                                        }
                                                    ],
                                                    "content": "):\nreturn set(value."
                                                }
                                            ],
                                            "content": "dict):\nreturn set(value.items"
                                        }
                                    ],
                                    "content": ",dict):\nreturn set(value.items"
                                }
                            ],
                            "content": "(value)\nelif isinstance(value,dict):\nreturn set(value.items"
                        },
                        {
                            "type": "ElifStatement",
                            "name": "",
                            "range": [
                                453,
                                464
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "isinstance",
                                    "range": [
                                        454,
                                        459
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "isinstance",
                                            "range": [
                                                454,
                                                459
                                            ],
                                            "children": [
                                                {
                                                    "type": "Arguments",
                                                    "name": "",
                                                    "range": [
                                                        455,
                                                        459
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "value",
                                                            "range": [
                                                                456,
                                                                456
                                                            ],
                                                            "children": [],
                                                            "content": "\n"
                                                        },
                                                        {
                                                            "type": "Type",
                                                            "name": "set",
                                                            "range": [
                                                                458,
                                                                458
                                                            ],
                                                            "children": [],
                                                            "content": "isinstance"
                                                        }
                                                    ],
                                                    "content": ")\nelif isinstance("
                                                }
                                            ],
                                            "content": "))\nelif isinstance("
                                        }
                                    ],
                                    "content": "))\nelif isinstance("
                                },
                                {
                                    "type": "Block",
                                    "name": "",
                                    "range": [
                                        461,
                                        464
                                    ],
                                    "children": [
                                        {
                                            "type": "ReturnStatement",
                                            "name": "",
                                            "range": [
                                                462,
                                                464
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "value",
                                                    "range": [
                                                        463,
                                                        463
                                                    ],
                                                    "children": [],
                                                    "content": ")"
                                                }
                                            ],
                                            "content": "set):"
                                        }
                                    ],
                                    "content": ",set):"
                                }
                            ],
                            "content": "())\nelif isinstance(value,set):"
                        },
                        {
                            "type": "ElseStatement",
                            "name": "",
                            "range": [
                                465,
                                472
                            ],
                            "children": [
                                {
                                    "type": "Block",
                                    "name": "",
                                    "range": [
                                        467,
                                        472
                                    ],
                                    "children": [
                                        {
                                            "type": "ReturnStatement",
                                            "name": "",
                                            "range": [
                                                468,
                                                472
                                            ],
                                            "children": [
                                                {
                                                    "type": "Set",
                                                    "name": "",
                                                    "range": [
                                                        469,
                                                        471
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "value",
                                                            "range": [
                                                                470,
                                                                470
                                                            ],
                                                            "children": [],
                                                            "content": ":"
                                                        }
                                                    ],
                                                    "content": "else:\n"
                                                }
                                            ],
                                            "content": "\nelse:\nreturn"
                                        }
                                    ],
                                    "content": "value\nelse:\nreturn"
                                }
                            ],
                            "content": "\nreturn value\nelse:\nreturn"
                        }
                    ],
                    "content": "->set:\nif isinstance(value,(str,list,tuple)):\nreturn set(value)\nelif isinstance(value,dict):\nreturn set(value.items())\nelif isinstance(value,set):\nreturn value\nelse:\nreturn{"
                }
            ],
            "content": ")\n\n\ndef __convert_set(value:Any)->set:\nif isinstance(value,(str,list,tuple)):\nreturn set(value)\nelif isinstance(value,dict):\nreturn set(value.items())\nelif isinstance(value,set):\nreturn value\nelse:\nreturn{"
        },
        {
            "type": "FunctionDecl",
            "name": "__convert_str",
            "range": [
                474,
                509
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "value",
                    "range": [
                        477,
                        479
                    ],
                    "children": [],
                    "content": "\n\ndef"
                },
                {
                    "type": "ReturnType",
                    "name": "str",
                    "range": [
                        483,
                        483
                    ],
                    "children": [],
                    "content": ":"
                },
                {
                    "type": "Block",
                    "name": "",
                    "range": [
                        485,
                        509
                    ],
                    "children": [
                        {
                            "type": "IfStatement",
                            "name": "",
                            "range": [
                                486,
                                497
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "",
                                    "range": [
                                        487,
                                        492
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "isinstance",
                                            "range": [
                                                487,
                                                492
                                            ],
                                            "children": [
                                                {
                                                    "type": "Argument",
                                                    "name": "value",
                                                    "range": [
                                                        489,
                                                        489
                                                    ],
                                                    "children": [],
                                                    "content": ":"
                                                },
                                                {
                                                    "type": "Argument",
                                                    "name": "str",
                                                    "range": [
                                                        491,
                                                        491
                                                    ],
                                                    "children": [],
                                                    "content": "if"
                                                }
                                            ],
                                            "content": ">str:\nif isinstance"
                                        }
                                    ],
                                    "content": ">str:\nif isinstance"
                                },
                                {
                                    "type": "Block",
                                    "name": "",
                                    "range": [
                                        494,
                                        497
                                    ],
                                    "children": [
                                        {
                                            "type": "ReturnStatement",
                                            "name": "",
                                            "range": [
                                                495,
                                                496
                                            ],
                                            "children": [
                                                {
                                                    "type": "ReturnValue",
                                                    "name": "value",
                                                    "range": [
                                                        496,
                                                        496
                                                    ],
                                                    "children": [],
                                                    "content": "str"
                                                }
                                            ],
                                            "content": ",str"
                                        }
                                    ],
                                    "content": "value,str)"
                                }
                            ],
                            "content": "->str:\nif isinstance(value,str)"
                        },
                        {
                            "type": "ElseStatement",
                            "name": "",
                            "range": [
                                498,
                                508
                            ],
                            "children": [
                                {
                                    "type": "Block",
                                    "name": "",
                                    "range": [
                                        500,
                                        508
                                    ],
                                    "children": [
                                        {
                                            "type": "ReturnStatement",
                                            "name": "",
                                            "range": [
                                                501,
                                                507
                                            ],
                                            "children": [
                                                {
                                                    "type": "ReturnValue",
                                                    "name": "json.dumps(value)",
                                                    "range": [
                                                        502,
                                                        507
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "dumps",
                                                            "range": [
                                                                504,
                                                                507
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Argument",
                                                                    "name": "value",
                                                                    "range": [
                                                                        506,
                                                                        506
                                                                    ],
                                                                    "children": [],
                                                                    "content": "return"
                                                                }
                                                            ],
                                                            "content": ":\nreturn json"
                                                        }
                                                    ],
                                                    "content": "\nelse:\nreturn json"
                                                }
                                            ],
                                            "content": "value\nelse:\nreturn json"
                                        }
                                    ],
                                    "content": "return value\nelse:\nreturn json."
                                }
                            ],
                            "content": ":\nreturn value\nelse:\nreturn json."
                        }
                    ],
                    "content": ")->str:\nif isinstance(value,str):\nreturn value\nelse:\nreturn json.dumps"
                }
            ],
            "content": "value}\n\n\ndef __convert_str(value:Any)->str:\nif isinstance(value,str):\nreturn value\nelse:\nreturn json.dumps"
        },
        {
            "type": "VariableDeclaration",
            "name": "NUM",
            "range": [
                510,
                519
            ],
            "children": [
                {
                    "type": "AssignmentExpression",
                    "name": "=",
                    "range": [
                        511,
                        519
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "TypeVar",
                            "range": [
                                512,
                                519
                            ],
                            "children": [
                                {
                                    "type": "Literal",
                                    "name": "\"NUM\"",
                                    "range": [
                                        514,
                                        514
                                    ],
                                    "children": [],
                                    "content": "\n"
                                },
                                {
                                    "type": "Literal",
                                    "name": "int",
                                    "range": [
                                        516,
                                        516
                                    ],
                                    "children": [],
                                    "content": "NUM"
                                },
                                {
                                    "type": "Literal",
                                    "name": "float",
                                    "range": [
                                        518,
                                        518
                                    ],
                                    "children": [],
                                    "content": "TypeVar"
                                }
                            ],
                            "content": ")\n\n\nNUM=TypeVar("
                        }
                    ],
                    "content": "value)\n\n\nNUM=TypeVar("
                }
            ],
            "content": "(value)\n\n\nNUM=TypeVar("
        },
        {
            "type": "FunctionDecl",
            "name": "__convert_num",
            "range": [
                523,
                612
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "parameters",
                    "range": [
                        525,
                        536
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "value",
                            "range": [
                                526,
                                528
                            ],
                            "children": [],
                            "content": "\n\n\n"
                        },
                        {
                            "type": "Parameter",
                            "name": "num_type",
                            "range": [
                                530,
                                535
                            ],
                            "children": [],
                            "content": "__convert_num(value:Any,"
                        }
                    ],
                    "content": ")\n\n\ndef __convert_num(value:Any,num_type"
                },
                {
                    "type": "ReturnType",
                    "name": "NUM",
                    "range": [
                        539,
                        539
                    ],
                    "children": [],
                    "content": "["
                },
                {
                    "type": "Block",
                    "name": "function_body",
                    "range": [
                        541,
                        612
                    ],
                    "children": [
                        {
                            "type": "IfStatement",
                            "name": "if_statement",
                            "range": [
                                542,
                                567
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "isinstance",
                                    "range": [
                                        543,
                                        556
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "value",
                                            "range": [
                                                545,
                                                545
                                            ],
                                            "children": [],
                                            "content": "NUM"
                                        },
                                        {
                                            "type": "TypeCheck",
                                            "name": "list, dict, tuple, set",
                                            "range": [
                                                547,
                                                555
                                            ],
                                            "children": [],
                                            "content": "\nif isinstance(value,(list,"
                                        }
                                    ],
                                    "content": "->NUM:\nif isinstance(value,(list,dict"
                                },
                                {
                                    "type": "ReturnStatement",
                                    "name": "return",
                                    "range": [
                                        559,
                                        566
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "num_type",
                                            "range": [
                                                560,
                                                566
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "len",
                                                    "range": [
                                                        562,
                                                        565
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "value",
                                                            "range": [
                                                                564,
                                                                564
                                                            ],
                                                            "children": [],
                                                            "content": "\n"
                                                        }
                                                    ],
                                                    "content": "):\nreturn"
                                                }
                                            ],
                                            "content": "set)):\nreturn num_type"
                                        }
                                    ],
                                    "content": ",set)):\nreturn num_type"
                                }
                            ],
                            "content": ")->NUM:\nif isinstance(value,(list,dict,tuple,set)):\nreturn num_type("
                        },
                        {
                            "type": "ElifStatement",
                            "name": "elif_statement",
                            "range": [
                                568,
                                579
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "isinstance",
                                    "range": [
                                        569,
                                        574
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "value",
                                            "range": [
                                                571,
                                                571
                                            ],
                                            "children": [],
                                            "content": ")"
                                        },
                                        {
                                            "type": "TypeCheck",
                                            "name": "num_type",
                                            "range": [
                                                573,
                                                573
                                            ],
                                            "children": [],
                                            "content": "\n"
                                        }
                                    ],
                                    "content": "(value))\nelif"
                                },
                                {
                                    "type": "ReturnStatement",
                                    "name": "return",
                                    "range": [
                                        577,
                                        578
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "value",
                                            "range": [
                                                578,
                                                578
                                            ],
                                            "children": [],
                                            "content": ","
                                        }
                                    ],
                                    "content": "value,"
                                }
                            ],
                            "content": "len(value))\nelif isinstance(value,num_type"
                        },
                        {
                            "type": "ElseStatement",
                            "name": "else_statement",
                            "range": [
                                580,
                                611
                            ],
                            "children": [
                                {
                                    "type": "TryStatement",
                                    "name": "try_statement",
                                    "range": [
                                        583,
                                        607
                                    ],
                                    "children": [
                                        {
                                            "type": "ReturnStatement",
                                            "name": "return",
                                            "range": [
                                                586,
                                                593
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "num_type",
                                                    "range": [
                                                        587,
                                                        593
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "float",
                                                            "range": [
                                                                589,
                                                                592
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "value",
                                                                    "range": [
                                                                        591,
                                                                        591
                                                                    ],
                                                                    "children": [],
                                                                    "content": "\n"
                                                                }
                                                            ],
                                                            "content": "try:\nreturn"
                                                        }
                                                    ],
                                                    "content": ":\ntry:\nreturn num_type"
                                                }
                                            ],
                                            "content": "else:\ntry:\nreturn num_type"
                                        },
                                        {
                                            "type": "ExceptStatement",
                                            "name": "except_statement",
                                            "range": [
                                                595,
                                                607
                                            ],
                                            "children": [
                                                {
                                                    "type": "ExceptionTypes",
                                                    "name": "ValueError, TypeError",
                                                    "range": [
                                                        597,
                                                        600
                                                    ],
                                                    "children": [],
                                                    "content": "value))\n"
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "name": "return",
                                                    "range": [
                                                        603,
                                                        607
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "num_type",
                                                            "range": [
                                                                604,
                                                                607
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Literal",
                                                                    "name": "0",
                                                                    "range": [
                                                                        606,
                                                                        606
                                                                    ],
                                                                    "children": [],
                                                                    "content": ")"
                                                                }
                                                            ],
                                                            "content": ",TypeError):"
                                                        }
                                                    ],
                                                    "content": "ValueError,TypeError):"
                                                }
                                            ],
                                            "content": "float(value))\nexcept(ValueError,TypeError):"
                                        }
                                    ],
                                    "content": "return value\nelse:\ntry:\nreturn num_type(float(value))\nexcept(ValueError,TypeError):"
                                },
                                {
                                    "type": "Comment",
                                    "name": "Fallback conversion",
                                    "range": [
                                        608,
                                        610
                                    ],
                                    "children": [],
                                    "content": "\nreturn num_type"
                                }
                            ],
                            "content": "):\nreturn value\nelse:\ntry:\nreturn num_type(float(value))\nexcept(ValueError,TypeError):\nreturn num_type("
                        }
                    ],
                    "content": "])->NUM:\nif isinstance(value,(list,dict,tuple,set)):\nreturn num_type(len(value))\nelif isinstance(value,num_type):\nreturn value\nelse:\ntry:\nreturn num_type(float(value))\nexcept(ValueError,TypeError):\nreturn num_type(0"
                }
            ],
            "content": ",float)\n\n\ndef __convert_num(value:Any,num_type:Type[NUM])->NUM:\nif isinstance(value,(list,dict,tuple,set)):\nreturn num_type(len(value))\nelif isinstance(value,num_type):\nreturn value\nelse:\ntry:\nreturn num_type(float(value))\nexcept(ValueError,TypeError):\nreturn num_type(0"
        },
        {
            "type": "FunctionDecl",
            "name": "__convert_bool",
            "range": [
                613,
                677
            ],
            "children": [
                {
                    "type": "Parameters",
                    "name": "value",
                    "range": [
                        615,
                        619
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "value",
                            "range": [
                                616,
                                618
                            ],
                            "children": [],
                            "content": "conversion\n\n"
                        }
                    ],
                    "content": "Fallback conversion\n\n\n"
                },
                {
                    "type": "ReturnType",
                    "name": "bool",
                    "range": [
                        620,
                        622
                    ],
                    "children": [],
                    "content": "def __convert_bool("
                },
                {
                    "type": "Block",
                    "name": "",
                    "range": [
                        623,
                        677
                    ],
                    "children": [
                        {
                            "type": "IfStatement",
                            "name": "",
                            "range": [
                                625,
                                636
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "",
                                    "range": [
                                        626,
                                        631
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "isinstance",
                                            "range": [
                                                626,
                                                631
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "value",
                                                    "range": [
                                                        628,
                                                        628
                                                    ],
                                                    "children": [],
                                                    "content": ">"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "bool",
                                                    "range": [
                                                        630,
                                                        630
                                                    ],
                                                    "children": [],
                                                    "content": ":"
                                                }
                                            ],
                                            "content": ")->bool:\n"
                                        }
                                    ],
                                    "content": ")->bool:\n"
                                },
                                {
                                    "type": "Block",
                                    "name": "",
                                    "range": [
                                        632,
                                        636
                                    ],
                                    "children": [
                                        {
                                            "type": "ReturnStatement",
                                            "name": "",
                                            "range": [
                                                634,
                                                635
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "value",
                                                    "range": [
                                                        635,
                                                        635
                                                    ],
                                                    "children": [],
                                                    "content": "value"
                                                }
                                            ],
                                            "content": "(value"
                                        }
                                    ],
                                    "content": "if isinstance(value,"
                                }
                            ],
                            "content": "Any)->bool:\nif isinstance(value,"
                        },
                        {
                            "type": "ElifStatement",
                            "name": "",
                            "range": [
                                637,
                                668
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "",
                                    "range": [
                                        638,
                                        643
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "isinstance",
                                            "range": [
                                                638,
                                                643
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "value",
                                                    "range": [
                                                        640,
                                                        640
                                                    ],
                                                    "children": [],
                                                    "content": "\n"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "str",
                                                    "range": [
                                                        642,
                                                        642
                                                    ],
                                                    "children": [],
                                                    "content": "value"
                                                }
                                            ],
                                            "content": "):\nreturn value\n"
                                        }
                                    ],
                                    "content": "):\nreturn value\n"
                                },
                                {
                                    "type": "Block",
                                    "name": "",
                                    "range": [
                                        644,
                                        668
                                    ],
                                    "children": [
                                        {
                                            "type": "IfStatement",
                                            "name": "",
                                            "range": [
                                                646,
                                                662
                                            ],
                                            "children": [
                                                {
                                                    "type": "Condition",
                                                    "name": "",
                                                    "range": [
                                                        647,
                                                        657
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "BinaryExpression",
                                                            "name": "",
                                                            "range": [
                                                                647,
                                                                657
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "CallExpression",
                                                                    "name": "lower",
                                                                    "range": [
                                                                        649,
                                                                        651
                                                                    ],
                                                                    "children": [],
                                                                    "content": "str):"
                                                                },
                                                                {
                                                                    "type": "In",
                                                                    "name": "",
                                                                    "range": [
                                                                        652,
                                                                        657
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "List",
                                                                            "name": "",
                                                                            "range": [
                                                                                653,
                                                                                657
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "name": "\"true\"",
                                                                                    "range": [
                                                                                        654,
                                                                                        654
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "value"
                                                                                },
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "name": "\"1\"",
                                                                                    "range": [
                                                                                        656,
                                                                                        656
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "lower"
                                                                                }
                                                                            ],
                                                                            "content": "if value.lower("
                                                                        }
                                                                    ],
                                                                    "content": "\nif value.lower("
                                                                }
                                                            ],
                                                            "content": "value,str):\nif value.lower("
                                                        }
                                                    ],
                                                    "content": "value,str):\nif value.lower("
                                                },
                                                {
                                                    "type": "Block",
                                                    "name": "",
                                                    "range": [
                                                        658,
                                                        662
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "ReturnStatement",
                                                            "name": "",
                                                            "range": [
                                                                660,
                                                                661
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Literal",
                                                                    "name": "True",
                                                                    "range": [
                                                                        661,
                                                                        661
                                                                    ],
                                                                    "children": [],
                                                                    "content": "\"true\""
                                                                }
                                                            ],
                                                            "content": "[\"true\""
                                                        }
                                                    ],
                                                    "content": ")in[\"true\","
                                                }
                                            ],
                                            "content": "(value,str):\nif value.lower()in[\"true\","
                                        },
                                        {
                                            "type": "ElseStatement",
                                            "name": "",
                                            "range": [
                                                663,
                                                668
                                            ],
                                            "children": [
                                                {
                                                    "type": "Block",
                                                    "name": "",
                                                    "range": [
                                                        664,
                                                        668
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "ReturnStatement",
                                                            "name": "",
                                                            "range": [
                                                                666,
                                                                667
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Literal",
                                                                    "name": "False",
                                                                    "range": [
                                                                        667,
                                                                        667
                                                                    ],
                                                                    "children": [],
                                                                    "content": "return"
                                                                }
                                                            ],
                                                            "content": "\nreturn"
                                                        }
                                                    ],
                                                    "content": "]:\nreturn True"
                                                }
                                            ],
                                            "content": "\"1\"]:\nreturn True"
                                        }
                                    ],
                                    "content": "elif isinstance(value,str):\nif value.lower()in[\"true\",\"1\"]:\nreturn True"
                                }
                            ],
                            "content": "bool):\nreturn value\nelif isinstance(value,str):\nif value.lower()in[\"true\",\"1\"]:\nreturn True"
                        },
                        {
                            "type": "ElseStatement",
                            "name": "",
                            "range": [
                                669,
                                677
                            ],
                            "children": [
                                {
                                    "type": "Block",
                                    "name": "",
                                    "range": [
                                        670,
                                        677
                                    ],
                                    "children": [
                                        {
                                            "type": "ReturnStatement",
                                            "name": "",
                                            "range": [
                                                672,
                                                676
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "bool",
                                                    "range": [
                                                        673,
                                                        676
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "value",
                                                            "range": [
                                                                675,
                                                                675
                                                            ],
                                                            "children": [],
                                                            "content": "\n"
                                                        }
                                                    ],
                                                    "content": "return False\nelse"
                                                }
                                            ],
                                            "content": "\nreturn False\nelse"
                                        }
                                    ],
                                    "content": "else:\nreturn False\nelse:"
                                }
                            ],
                            "content": "\nelse:\nreturn False\nelse:"
                        }
                    ],
                    "content": "value:Any)->bool:\nif isinstance(value,bool):\nreturn value\nelif isinstance(value,str):\nif value.lower()in[\"true\",\"1\"]:\nreturn True\nelse:\nreturn False\nelse:"
                }
            ],
            "content": ")#Fallback conversion\n\n\ndef __convert_bool(value:Any)->bool:\nif isinstance(value,bool):\nreturn value\nelif isinstance(value,str):\nif value.lower()in[\"true\",\"1\"]:\nreturn True\nelse:\nreturn False\nelse:"
        },
        {
            "type": "TypeVarDeclaration",
            "name": "T",
            "range": [
                1245,
                1250
            ],
            "children": [
                {
                    "type": "TypeVar",
                    "name": "TypeVar",
                    "range": [
                        1247,
                        1247
                    ],
                    "children": [],
                    "content": ":"
                },
                {
                    "type": "Literal",
                    "name": "\"T\"",
                    "range": [
                        1249,
                        1249
                    ],
                    "children": [],
                    "content": "return"
                }
            ],
            "content": "\nelse:\nreturn value"
        },
        {
            "type": "FunctionDecl",
            "name": "type_match",
            "range": [
                1254,
                1290
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "",
                    "range": [
                        1256,
                        1267
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "value",
                            "range": [
                                1257,
                                1259
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "Any",
                                    "range": [
                                        1258,
                                        1259
                                    ],
                                    "content": "\"T\")"
                                }
                            ],
                            "content": "(\"T\")"
                        },
                        {
                            "type": "Parameter",
                            "name": "target_type",
                            "range": [
                                1261,
                                1263
                            ],
                            "children": [
                                {
                                    "type": "TypeAnnotation",
                                    "name": "Type[T]",
                                    "range": [
                                        1262,
                                        1266
                                    ],
                                    "content": "\ndef type_match(value"
                                }
                            ],
                            "content": "\n\ndef"
                        }
                    ],
                    "content": "TypeVar(\"T\")\n\n\ndef type_match(value:"
                },
                {
                    "type": "ReturnType",
                    "name": "T",
                    "range": [
                        1268,
                        1270
                    ],
                    "content": "Any,target_type"
                },
                {
                    "type": "FunctionBody",
                    "name": "",
                    "range": [
                        1272,
                        1289
                    ],
                    "children": [
                        {
                            "type": "ReturnStatement",
                            "name": "",
                            "range": [
                                1273,
                                1288
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "cast",
                                    "range": [
                                        1274,
                                        1288
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "T",
                                            "range": [
                                                1276,
                                                1276
                                            ],
                                            "content": ")"
                                        },
                                        {
                                            "type": "CallExpression",
                                            "name": "_try_convert",
                                            "range": [
                                                1278,
                                                1287
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "value",
                                                    "range": [
                                                        1280,
                                                        1280
                                                    ],
                                                    "content": ":"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "target_type",
                                                    "range": [
                                                        1282,
                                                        1282
                                                    ],
                                                    "content": "return"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "raise_on_mismatch",
                                                    "range": [
                                                        1284,
                                                        1286
                                                    ],
                                                    "content": "(T,"
                                                }
                                            ],
                                            "content": ">T:\nreturn cast(T,_try_convert"
                                        }
                                    ],
                                    "content": "T])->T:\nreturn cast(T,_try_convert("
                                }
                            ],
                            "content": "[T])->T:\nreturn cast(T,_try_convert("
                        }
                    ],
                    "content": "Type[T])->T:\nreturn cast(T,_try_convert(value"
                }
            ],
            "content": "T=TypeVar(\"T\")\n\n\ndef type_match(value:Any,target_type:Type[T])->T:\nreturn cast(T,_try_convert(value,"
        },
        {
            "type": "FunctionDecl",
            "name": "convert",
            "range": [
                1291,
                1345
            ],
            "children": [
                {
                    "type": "Parameters",
                    "name": "parameters",
                    "range": [
                        1293,
                        1304
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "value",
                            "range": [
                                1294,
                                1296
                            ],
                            "children": [],
                            "content": "=True)"
                        },
                        {
                            "type": "Parameter",
                            "name": "target_type",
                            "range": [
                                1298,
                                1300
                            ],
                            "children": [],
                            "content": "\n\n\n"
                        }
                    ],
                    "content": "raise_on_mismatch=True))\n\n\ndef convert(value"
                },
                {
                    "type": "ReturnType",
                    "name": "return_type",
                    "range": [
                        1305,
                        1307
                    ],
                    "children": [],
                    "content": ":Any,"
                },
                {
                    "type": "Block",
                    "name": "body",
                    "range": [
                        1309,
                        1345
                    ],
                    "children": [
                        {
                            "type": "TryStatement",
                            "name": "try_statement",
                            "range": [
                                1310,
                                1344
                            ],
                            "children": [
                                {
                                    "type": "Block",
                                    "name": "try_block",
                                    "range": [
                                        1312,
                                        1329
                                    ],
                                    "children": [
                                        {
                                            "type": "ReturnStatement",
                                            "name": "return_statement",
                                            "range": [
                                                1313,
                                                1328
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "cast",
                                                    "range": [
                                                        1314,
                                                        1328
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "T",
                                                            "range": [
                                                                1316,
                                                                1317
                                                            ],
                                                            "children": [],
                                                            "content": ">T"
                                                        },
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "_try_convert",
                                                            "range": [
                                                                1318,
                                                                1327
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "value",
                                                                    "range": [
                                                                        1320,
                                                                        1321
                                                                    ],
                                                                    "children": [],
                                                                    "content": "try:"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "target_type",
                                                                    "range": [
                                                                        1322,
                                                                        1323
                                                                    ],
                                                                    "children": [],
                                                                    "content": "\nreturn"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "raise_on_mismatch",
                                                                    "range": [
                                                                        1324,
                                                                        1326
                                                                    ],
                                                                    "children": [],
                                                                    "content": "cast(T"
                                                                }
                                                            ],
                                                            "content": ":\ntry:\nreturn cast(T,"
                                                        }
                                                    ],
                                                    "content": ")->T:\ntry:\nreturn cast(T,_try_convert"
                                                }
                                            ],
                                            "content": "])->T:\ntry:\nreturn cast(T,_try_convert"
                                        }
                                    ],
                                    "content": "T])->T:\ntry:\nreturn cast(T,_try_convert("
                                },
                                {
                                    "type": "CatchClause",
                                    "name": "catch_clause",
                                    "range": [
                                        1330,
                                        1344
                                    ],
                                    "children": [
                                        {
                                            "type": "Parameter",
                                            "name": "e",
                                            "range": [
                                                1333,
                                                1334
                                            ],
                                            "children": [],
                                            "content": ",raise_on_mismatch"
                                        },
                                        {
                                            "type": "Block",
                                            "name": "catch_block",
                                            "range": [
                                                1335,
                                                1344
                                            ],
                                            "children": [
                                                {
                                                    "type": "RaiseStatement",
                                                    "name": "raise_statement",
                                                    "range": [
                                                        1336,
                                                        1343
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "ConversionError",
                                                            "range": [
                                                                1337,
                                                                1341
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "error_message",
                                                                    "range": [
                                                                        1339,
                                                                        1340
                                                                    ],
                                                                    "children": [],
                                                                    "content": "\nexcept"
                                                                }
                                                            ],
                                                            "content": "))\nexcept Exception"
                                                        }
                                                    ],
                                                    "content": "False))\nexcept Exception as e"
                                                }
                                            ],
                                            "content": "=False))\nexcept Exception as e:"
                                        }
                                    ],
                                    "content": "value,target_type,raise_on_mismatch=False))\nexcept Exception as e:"
                                }
                            ],
                            "content": "Type[T])->T:\ntry:\nreturn cast(T,_try_convert(value,target_type,raise_on_mismatch=False))\nexcept Exception as e:"
                        }
                    ],
                    "content": ":Type[T])->T:\ntry:\nreturn cast(T,_try_convert(value,target_type,raise_on_mismatch=False))\nexcept Exception as e:\n"
                }
            ],
            "content": "target_type,raise_on_mismatch=True))\n\n\ndef convert(value:Any,target_type:Type[T])->T:\ntry:\nreturn cast(T,_try_convert(value,target_type,raise_on_mismatch=False))\nexcept Exception as e:\n"
        }
    ],
    "content": "import json\nfrom typing import Any,Type,TypeVar,cast,get_args,get_origin\n\n\nclass ConversionError(ValueError):\npass\n\n\ndef __convert_list(value:Any)->list:\nif isinstance(value,(list,tuple,set)):\nreturn list(value)\nelif isinstance(value,dict):\nreturn list(value.items())\nelif isinstance(value,str):\nvalue=value.strip()\nif value.startswith(\"[\")and value.endswith(\"]\"):\ntry:\nreturn json.loads(value)\nexcept json.JSONDecodeError:\nreturn[value]\nelse:\nreturn[value]\nelse:\nreturn[value]\n\n\ndef __convert_dict(value:Any)->dict:\nif isinstance(value,str):\ntry:\nresult=json.loads(value)\nif isinstance(result,dict):\nreturn result\nelse:\nreturn{\"value\":result}\nexcept json.JSONDecodeError:\nreturn{\"value\":value}#Fallback conversion\nelif isinstance(value,list):\nreturn{i:value[i]for i in range(len(value))}\nelif isinstance(value,tuple):\nreturn{i:value[i]for i in range(len(value))}\nelif isinstance(value,dict):\nreturn value\nelse:\nreturn{\"value\":value}\n\n\ndef __convert_tuple(value:Any)->tuple:\nif isinstance(value,(str,list,set)):\nreturn tuple(value)\nelif isinstance(value,dict):\nreturn tuple(value.items())\nelif isinstance(value,(int,float,bool)):\nreturn(value,)\nelif isinstance(value,tuple):\nreturn value\nelse:\nreturn(value,)\n\n\ndef __convert_set(value:Any)->set:\nif isinstance(value,(str,list,tuple)):\nreturn set(value)\nelif isinstance(value,dict):\nreturn set(value.items())\nelif isinstance(value,set):\nreturn value\nelse:\nreturn{value}\n\n\ndef __convert_str(value:Any)->str:\nif isinstance(value,str):\nreturn value\nelse:\nreturn json.dumps(value)\n\n\nNUM=TypeVar(\"NUM\",int,float)\n\n\ndef __convert_num(value:Any,num_type:Type[NUM])->NUM:\nif isinstance(value,(list,dict,tuple,set)):\nreturn num_type(len(value))\nelif isinstance(value,num_type):\nreturn value\nelse:\ntry:\nreturn num_type(float(value))\nexcept(ValueError,TypeError):\nreturn num_type(0)#Fallback conversion\n\n\ndef __convert_bool(value:Any)->bool:\nif isinstance(value,bool):\nreturn value\nelif isinstance(value,str):\nif value.lower()in[\"true\",\"1\"]:\nreturn True\nelse:\nreturn False\nelse:\nreturn bool(value)\n\n\ndef _try_convert(value:Any,target_type:Type,raise_on_mismatch:bool)->Any:\norigin=get_origin(target_type)\nargs=get_args(target_type)\nif origin is None:\norigin=target_type\nif origin not in[list,dict,tuple,str,set,int,float,bool]:\nreturn value\n\n#Handle the case when value is already of the target type\nif isinstance(value,origin):\nif not args:\nreturn value\nelse:\n#Need to convert elements\nif origin is list:\nreturn[convert(v,args[0])for v in value]\nelif origin is tuple:\n#Tuples can have multiple types\nif len(args)==1:\nreturn tuple(convert(v,args[0])for v in value)\nelse:\nreturn tuple(convert(v,t)for v,t in zip(value,args))\nelif origin is dict:\nkey_type,val_type=args\nreturn{\nconvert(k,key_type):convert(v,val_type)for k,v in value.items()\n}\nelif origin is set:\nreturn{convert(v,args[0])for v in value}\nelse:\nreturn value\nelif raise_on_mismatch:\nraise TypeError(f \"Value {value} is not of expected type {target_type}\")\nelse:\n#Need to convert value to the origin type\nif origin is list:\nvalue=__convert_list(value)\nif args:\nreturn[convert(v,args[0])for v in value]\nelse:\nreturn value\nelif origin is dict:\nvalue=__convert_dict(value)\nif args:\nkey_type,val_type=args\nreturn{\nconvert(k,key_type):convert(v,val_type)for k,v in value.items()\n}\nelse:\nreturn value\nelif origin is tuple:\nvalue=__convert_tuple(value)\nif args:\nif len(args)==1:\nreturn tuple(convert(v,args[0])for v in value)\nelse:\nreturn tuple(convert(v,t)for v,t in zip(value,args))\nelse:\nreturn value\nelif origin is str:\nreturn __convert_str(value)\nelif origin is set:\nvalue=__convert_set(value)\nif args:\nreturn{convert(v,args[0])for v in value}\nelse:\nreturn value\nelif origin is int:\nreturn __convert_num(value,int)\nelif origin is float:\nreturn __convert_num(value,float)\nelif origin is bool:\nreturn __convert_bool(value)\nelse:\nreturn value\n\n\nT=TypeVar(\"T\")\n\n\ndef type_match(value:Any,target_type:Type[T])->T:\nreturn cast(T,_try_convert(value,target_type,raise_on_mismatch=True))\n\n\ndef convert(value:Any,target_type:Type[T])->T:\ntry:\nreturn cast(T,_try_convert(value,target_type,raise_on_mismatch=False))\nexcept Exception as e:\n"
}