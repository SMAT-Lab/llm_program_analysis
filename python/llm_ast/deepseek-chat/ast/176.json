{
    "type": "Program",
    "name": "Global",
    "range": [
        0,
        1065
    ],
    "children": [
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                0,
                2
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "asyncio",
                    "range": [
                        1,
                        1
                    ],
                    "children": [],
                    "content": "asyncio"
                }
            ],
            "content": "import asyncio\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                3,
                5
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "logging",
                    "range": [
                        4,
                        4
                    ],
                    "children": [],
                    "content": "logging"
                }
            ],
            "content": "import logging\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                6,
                10
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "asynccontextmanager",
                    "range": [
                        9,
                        9
                    ],
                    "children": [],
                    "content": "asynccontextmanager"
                }
            ],
            "content": "from contextlib import asynccontextmanager\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                12,
                14
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "uvicorn",
                    "range": [
                        13,
                        13
                    ],
                    "children": [],
                    "content": "uvicorn"
                }
            ],
            "content": "import uvicorn\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                15,
                21
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "parse_jwt_token",
                    "range": [
                        20,
                        20
                    ],
                    "children": [],
                    "content": "parse_jwt_token"
                }
            ],
            "content": "from autogpt_libs.auth import parse_jwt_token\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                22,
                32
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "Depends",
                    "range": [
                        25,
                        25
                    ],
                    "children": [],
                    "content": "Depends"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "FastAPI",
                    "range": [
                        27,
                        27
                    ],
                    "children": [],
                    "content": "FastAPI"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "WebSocket",
                    "range": [
                        29,
                        29
                    ],
                    "children": [],
                    "content": "WebSocket"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "WebSocketDisconnect",
                    "range": [
                        31,
                        31
                    ],
                    "children": [],
                    "content": "WebSocketDisconnect"
                }
            ],
            "content": "from fastapi import Depends,FastAPI,WebSocket,WebSocketDisconnect\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                33,
                41
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "CORSMiddleware",
                    "range": [
                        40,
                        40
                    ],
                    "children": [],
                    "content": "CORSMiddleware"
                }
            ],
            "content": "from starlette.middleware.cors import CORSMiddleware\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                43,
                49
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "redis",
                    "range": [
                        48,
                        48
                    ],
                    "children": [],
                    "content": "redis"
                }
            ],
            "content": "from backend.data import redis\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                50,
                58
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "AsyncRedisExecutionEventBus",
                    "range": [
                        57,
                        57
                    ],
                    "children": [],
                    "content": "AsyncRedisExecutionEventBus"
                }
            ],
            "content": "from backend.data.execution import AsyncRedisExecutionEventBus\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                59,
                67
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "DEFAULT_USER_ID",
                    "range": [
                        66,
                        66
                    ],
                    "children": [],
                    "content": "DEFAULT_USER_ID"
                }
            ],
            "content": "from backend.data.user import DEFAULT_USER_ID\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                68,
                76
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "ConnectionManager",
                    "range": [
                        75,
                        75
                    ],
                    "children": [],
                    "content": "ConnectionManager"
                }
            ],
            "content": "from backend.server.conn_manager import ConnectionManager\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                77,
                89
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "ExecutionSubscription",
                    "range": [
                        84,
                        84
                    ],
                    "children": [],
                    "content": "ExecutionSubscription"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "Methods",
                    "range": [
                        86,
                        86
                    ],
                    "children": [],
                    "content": "Methods"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "WsMessage",
                    "range": [
                        88,
                        88
                    ],
                    "children": [],
                    "content": "WsMessage"
                }
            ],
            "content": "from backend.server.model import ExecutionSubscription,Methods,WsMessage\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                90,
                98
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "AppProcess",
                    "range": [
                        97,
                        97
                    ],
                    "children": [],
                    "content": "AppProcess"
                }
            ],
            "content": "from backend.util.service import AppProcess\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                99,
                111
            ],
            "children": [
                {
                    "type": "ImportSpecifier",
                    "name": "AppEnvironment",
                    "range": [
                        106,
                        106
                    ],
                    "children": [],
                    "content": "AppEnvironment"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "Config",
                    "range": [
                        108,
                        108
                    ],
                    "children": [],
                    "content": "Config"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "Settings",
                    "range": [
                        110,
                        110
                    ],
                    "children": [],
                    "content": "Settings"
                }
            ],
            "content": "from backend.util.settings import AppEnvironment,Config,Settings\n"
        },
        {
            "type": "VariableDeclaration",
            "name": "logger",
            "range": [
                113,
                121
            ],
            "children": [
                {
                    "type": "AssignmentExpression",
                    "name": "=",
                    "range": [
                        114,
                        120
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "getLogger",
                            "range": [
                                117,
                                120
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "__name__",
                                    "range": [
                                        119,
                                        119
                                    ],
                                    "children": [],
                                    "content": "__name__"
                                }
                            ],
                            "content": "getLogger(__name__)"
                        }
                    ],
                    "content": "=logging.getLogger(__name__)"
                }
            ],
            "content": "logger=logging.getLogger(__name__)\n"
        },
        {
            "type": "VariableDeclaration",
            "name": "settings",
            "range": [
                122,
                127
            ],
            "children": [
                {
                    "type": "AssignmentExpression",
                    "name": "=",
                    "range": [
                        123,
                        126
                    ],
                    "children": [
                        {
                            "type": "NewExpression",
                            "name": "Settings",
                            "range": [
                                124,
                                126
                            ],
                            "children": [],
                            "content": "Settings()"
                        }
                    ],
                    "content": "=Settings()"
                }
            ],
            "content": "settings=Settings()\n"
        },
        {
            "type": "FunctionDecl",
            "name": "lifespan",
            "range": [
                130,
                178
            ],
            "children": [
                {
                    "type": "Decorator",
                    "name": "@asynccontextmanager",
                    "range": [
                        130,
                        131
                    ],
                    "content": "@asynccontextmanager"
                },
                {
                    "type": "Keyword",
                    "name": "async",
                    "range": [
                        133,
                        133
                    ],
                    "content": "async"
                },
                {
                    "type": "Keyword",
                    "name": "def",
                    "range": [
                        134,
                        134
                    ],
                    "content": "def"
                },
                {
                    "type": "Identifier",
                    "name": "lifespan",
                    "range": [
                        135,
                        135
                    ],
                    "content": "lifespan"
                },
                {
                    "type": "Identifier",
                    "name": "app",
                    "range": [
                        137,
                        137
                    ],
                    "content": "app"
                },
                {
                    "type": "Identifier",
                    "name": "FastAPI",
                    "range": [
                        139,
                        139
                    ],
                    "content": "FastAPI"
                },
                {
                    "type": "BlockStatement",
                    "range": [
                        142,
                        178
                    ],
                    "children": [
                        {
                            "type": "VariableDecl",
                            "range": [
                                143,
                                147
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "manager",
                                    "range": [
                                        143,
                                        143
                                    ],
                                    "content": "manager"
                                },
                                {
                                    "type": "CallExpression",
                                    "range": [
                                        145,
                                        147
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "get_connection_manager",
                                            "range": [
                                                145,
                                                145
                                            ],
                                            "content": "get_connection_manager"
                                        }
                                    ],
                                    "content": "get_connection_manager()"
                                }
                            ],
                            "content": "manager=get_connection_manager()"
                        },
                        {
                            "type": "VariableDecl",
                            "range": [
                                149,
                                159
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "fut",
                                    "range": [
                                        149,
                                        149
                                    ],
                                    "content": "fut"
                                },
                                {
                                    "type": "CallExpression",
                                    "range": [
                                        151,
                                        159
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "range": [
                                                151,
                                                153
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "asyncio",
                                                    "range": [
                                                        151,
                                                        151
                                                    ],
                                                    "content": "asyncio"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "create_task",
                                                    "range": [
                                                        153,
                                                        153
                                                    ],
                                                    "content": "create_task"
                                                }
                                            ],
                                            "content": "asyncio.create_task"
                                        },
                                        {
                                            "type": "CallExpression",
                                            "range": [
                                                155,
                                                158
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "event_broadcaster",
                                                    "range": [
                                                        155,
                                                        155
                                                    ],
                                                    "content": "event_broadcaster"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "manager",
                                                    "range": [
                                                        157,
                                                        157
                                                    ],
                                                    "content": "manager"
                                                }
                                            ],
                                            "content": "event_broadcaster(manager)"
                                        }
                                    ],
                                    "content": "asyncio.create_task(event_broadcaster(manager))"
                                }
                            ],
                            "content": "fut=asyncio.create_task(event_broadcaster(manager))"
                        },
                        {
                            "type": "ExpressionStatement",
                            "range": [
                                161,
                                174
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "range": [
                                        161,
                                        174
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "range": [
                                                161,
                                                163
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "fut",
                                                    "range": [
                                                        161,
                                                        161
                                                    ],
                                                    "content": "fut"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "add_done_callback",
                                                    "range": [
                                                        163,
                                                        163
                                                    ],
                                                    "content": "add_done_callback"
                                                }
                                            ],
                                            "content": "fut.add_done_callback"
                                        },
                                        {
                                            "type": "LambdaExpression",
                                            "range": [
                                                165,
                                                173
                                            ],
                                            "children": [
                                                {
                                                    "type": "Keyword",
                                                    "name": "lambda",
                                                    "range": [
                                                        165,
                                                        165
                                                    ],
                                                    "content": "lambda"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "_",
                                                    "range": [
                                                        166,
                                                        166
                                                    ],
                                                    "content": "_"
                                                },
                                                {
                                                    "type": "CallExpression",
                                                    "range": [
                                                        168,
                                                        173
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "range": [
                                                                168,
                                                                170
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "logger",
                                                                    "range": [
                                                                        168,
                                                                        168
                                                                    ],
                                                                    "content": "logger"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "info",
                                                                    "range": [
                                                                        170,
                                                                        170
                                                                    ],
                                                                    "content": "info"
                                                                }
                                                            ],
                                                            "content": "logger.info"
                                                        },
                                                        {
                                                            "type": "Literal",
                                                            "value": "\"Event broadcaster stopped\"",
                                                            "range": [
                                                                172,
                                                                172
                                                            ],
                                                            "content": "\"Event broadcaster stopped\""
                                                        }
                                                    ],
                                                    "content": "logger.info(\"Event broadcaster stopped\")"
                                                }
                                            ],
                                            "content": "lambda _:logger.info(\"Event broadcaster stopped\")"
                                        }
                                    ],
                                    "content": "fut.add_done_callback(lambda _:logger.info(\"Event broadcaster stopped\"))"
                                }
                            ],
                            "content": "fut.add_done_callback(lambda _:logger.info(\"Event broadcaster stopped\"))"
                        },
                        {
                            "type": "Keyword",
                            "name": "yield",
                            "range": [
                                176,
                                176
                            ],
                            "content": "yield"
                        }
                    ],
                    "content": "\nmanager=get_connection_manager()\nfut=asyncio.create_task(event_broadcaster(manager))\nfut.add_done_callback(lambda _:logger.info(\"Event broadcaster stopped\"))\nyield\n\n"
                }
            ],
            "content": "@asynccontextmanager\nasync def lifespan(app:FastAPI):\nmanager=get_connection_manager()\nfut=asyncio.create_task(event_broadcaster(manager))\nfut.add_done_callback(lambda _:logger.info(\"Event broadcaster stopped\"))\nyield\n\n"
        },
        {
            "type": "FunctionDecl",
            "name": "get_connection_manager",
            "range": [
                216,
                239
            ],
            "children": [
                {
                    "type": "FunctionSignature",
                    "name": "get_connection_manager",
                    "range": [
                        216,
                        220
                    ],
                    "children": [
                        {
                            "type": "Keyword",
                            "name": "def",
                            "range": [
                                216,
                                216
                            ],
                            "children": [],
                            "content": "def"
                        },
                        {
                            "type": "Identifier",
                            "name": "get_connection_manager",
                            "range": [
                                217,
                                217
                            ],
                            "children": [],
                            "content": "get_connection_manager"
                        }
                    ],
                    "content": "def get_connection_manager():"
                },
                {
                    "type": "FunctionBody",
                    "name": "get_connection_manager",
                    "range": [
                        221,
                        239
                    ],
                    "children": [
                        {
                            "type": "GlobalStatement",
                            "name": "global",
                            "range": [
                                222,
                                224
                            ],
                            "children": [
                                {
                                    "type": "Keyword",
                                    "name": "global",
                                    "range": [
                                        222,
                                        222
                                    ],
                                    "children": [],
                                    "content": "global"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "_connection_manager",
                                    "range": [
                                        223,
                                        223
                                    ],
                                    "children": [],
                                    "content": "_connection_manager"
                                }
                            ],
                            "content": "global _connection_manager\n"
                        },
                        {
                            "type": "IfStatement",
                            "name": "if",
                            "range": [
                                225,
                                236
                            ],
                            "children": [
                                {
                                    "type": "Keyword",
                                    "name": "if",
                                    "range": [
                                        225,
                                        225
                                    ],
                                    "children": [],
                                    "content": "if"
                                },
                                {
                                    "type": "BinaryExpression",
                                    "name": "_connection_manager is None",
                                    "range": [
                                        226,
                                        229
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "_connection_manager",
                                            "range": [
                                                226,
                                                226
                                            ],
                                            "children": [],
                                            "content": "_connection_manager"
                                        },
                                        {
                                            "type": "Keyword",
                                            "name": "is",
                                            "range": [
                                                227,
                                                227
                                            ],
                                            "children": [],
                                            "content": "is"
                                        },
                                        {
                                            "type": "Literal",
                                            "name": "None",
                                            "range": [
                                                228,
                                                228
                                            ],
                                            "children": [],
                                            "content": "None"
                                        }
                                    ],
                                    "content": "_connection_manager is None:"
                                },
                                {
                                    "type": "Assignment",
                                    "name": "_connection_manager = ConnectionManager()",
                                    "range": [
                                        231,
                                        235
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "_connection_manager",
                                            "range": [
                                                231,
                                                231
                                            ],
                                            "children": [],
                                            "content": "_connection_manager"
                                        },
                                        {
                                            "type": "Operator",
                                            "name": "=",
                                            "range": [
                                                232,
                                                232
                                            ],
                                            "children": [],
                                            "content": "="
                                        },
                                        {
                                            "type": "NewExpression",
                                            "name": "ConnectionManager()",
                                            "range": [
                                                233,
                                                235
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "ConnectionManager",
                                                    "range": [
                                                        233,
                                                        233
                                                    ],
                                                    "children": [],
                                                    "content": "ConnectionManager"
                                                }
                                            ],
                                            "content": "ConnectionManager()"
                                        }
                                    ],
                                    "content": "_connection_manager=ConnectionManager()"
                                }
                            ],
                            "content": "if _connection_manager is None:\n_connection_manager=ConnectionManager()\n"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "return",
                            "range": [
                                237,
                                239
                            ],
                            "children": [
                                {
                                    "type": "Keyword",
                                    "name": "return",
                                    "range": [
                                        237,
                                        237
                                    ],
                                    "children": [],
                                    "content": "return"
                                },
                                {
                                    "type": "Identifier",
                                    "name": "_connection_manager",
                                    "range": [
                                        238,
                                        238
                                    ],
                                    "children": [],
                                    "content": "_connection_manager"
                                }
                            ],
                            "content": "return _connection_manager\n"
                        }
                    ],
                    "content": "\nglobal _connection_manager\nif _connection_manager is None:\n_connection_manager=ConnectionManager()\nreturn _connection_manager\n"
                }
            ],
            "content": "def get_connection_manager():\nglobal _connection_manager\nif _connection_manager is None:\n_connection_manager=ConnectionManager()\nreturn _connection_manager\n"
        },
        {
            "type": "FunctionDecl",
            "name": "event_broadcaster",
            "range": [
                241,
                310
            ],
            "children": [
                {
                    "type": "BlockStatement",
                    "range": [
                        249,
                        310
                    ],
                    "children": [
                        {
                            "type": "TryStatement",
                            "range": [
                                251,
                                310
                            ],
                            "children": [
                                {
                                    "type": "BlockStatement",
                                    "range": [
                                        252,
                                        284
                                    ],
                                    "children": [
                                        {
                                            "type": "ExpressionStatement",
                                            "range": [
                                                254,
                                                258
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "range": [
                                                        254,
                                                        258
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "range": [
                                                                254,
                                                                256
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "redis",
                                                                    "range": [
                                                                        254,
                                                                        254
                                                                    ],
                                                                    "content": "\n"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "connect",
                                                                    "range": [
                                                                        256,
                                                                        256
                                                                    ],
                                                                    "content": "."
                                                                }
                                                            ],
                                                            "content": "\nredis."
                                                        }
                                                    ],
                                                    "content": "\nredis.connect("
                                                }
                                            ],
                                            "content": "\nredis.connect("
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "range": [
                                                260,
                                                264
                                            ],
                                            "children": [
                                                {
                                                    "type": "AssignmentExpression",
                                                    "range": [
                                                        260,
                                                        264
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "event_queue",
                                                            "range": [
                                                                260,
                                                                260
                                                            ],
                                                            "content": "\n"
                                                        },
                                                        {
                                                            "type": "NewExpression",
                                                            "range": [
                                                                262,
                                                                264
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "AsyncRedisExecutionEventBus",
                                                                    "range": [
                                                                        262,
                                                                        262
                                                                    ],
                                                                    "content": "="
                                                                }
                                                            ],
                                                            "content": "=AsyncRedisExecutionEventBus("
                                                        }
                                                    ],
                                                    "content": "\nevent_queue=AsyncRedisExecutionEventBus("
                                                }
                                            ],
                                            "content": "\nevent_queue=AsyncRedisExecutionEventBus("
                                        },
                                        {
                                            "type": "ForStatement",
                                            "range": [
                                                266,
                                                284
                                            ],
                                            "children": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "range": [
                                                        268,
                                                        268
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "VariableDeclarator",
                                                            "range": [
                                                                268,
                                                                268
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "event",
                                                                    "range": [
                                                                        268,
                                                                        268
                                                                    ],
                                                                    "content": "for"
                                                                }
                                                            ],
                                                            "content": "for"
                                                        }
                                                    ],
                                                    "content": "for"
                                                },
                                                {
                                                    "type": "CallExpression",
                                                    "range": [
                                                        270,
                                                        274
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "range": [
                                                                270,
                                                                272
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "event_queue",
                                                                    "range": [
                                                                        270,
                                                                        270
                                                                    ],
                                                                    "content": "in"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "listen",
                                                                    "range": [
                                                                        272,
                                                                        272
                                                                    ],
                                                                    "content": "."
                                                                }
                                                            ],
                                                            "content": "in event_queue."
                                                        }
                                                    ],
                                                    "content": "in event_queue.listen("
                                                },
                                                {
                                                    "type": "BlockStatement",
                                                    "range": [
                                                        275,
                                                        284
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "range": [
                                                                277,
                                                                283
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "AwaitExpression",
                                                                    "range": [
                                                                        277,
                                                                        283
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "CallExpression",
                                                                            "range": [
                                                                                278,
                                                                                283
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "MemberExpression",
                                                                                    "range": [
                                                                                        278,
                                                                                        280
                                                                                    ],
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "manager",
                                                                                            "range": [
                                                                                                278,
                                                                                                278
                                                                                            ],
                                                                                            "content": "await"
                                                                                        },
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "send_execution_result",
                                                                                            "range": [
                                                                                                280,
                                                                                                280
                                                                                            ],
                                                                                            "content": "."
                                                                                        }
                                                                                    ],
                                                                                    "content": "await manager."
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "event",
                                                                                    "range": [
                                                                                        282,
                                                                                        282
                                                                                    ],
                                                                                    "content": "("
                                                                                }
                                                                            ],
                                                                            "content": "await manager.send_execution_result(event"
                                                                        }
                                                                    ],
                                                                    "content": "\nawait manager.send_execution_result(event"
                                                                }
                                                            ],
                                                            "content": "\nawait manager.send_execution_result(event"
                                                        }
                                                    ],
                                                    "content": "):\nawait manager.send_execution_result(event)"
                                                }
                                            ],
                                            "content": "\nasync for event in event_queue.listen():\nawait manager.send_execution_result(event)"
                                        }
                                    ],
                                    "content": "try:\nredis.connect()\nevent_queue=AsyncRedisExecutionEventBus()\nasync for event in event_queue.listen():\nawait manager.send_execution_result(event)"
                                },
                                {
                                    "type": "CatchClause",
                                    "range": [
                                        285,
                                        300
                                    ],
                                    "children": [
                                        {
                                            "type": "BlockStatement",
                                            "range": [
                                                289,
                                                300
                                            ],
                                            "children": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "range": [
                                                        291,
                                                        297
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "CallExpression",
                                                            "range": [
                                                                291,
                                                                297
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "range": [
                                                                        291,
                                                                        293
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "logger",
                                                                            "range": [
                                                                                291,
                                                                                291
                                                                            ],
                                                                            "content": "\n"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "exception",
                                                                            "range": [
                                                                                293,
                                                                                293
                                                                            ],
                                                                            "content": "."
                                                                        }
                                                                    ],
                                                                    "content": "\nlogger."
                                                                },
                                                                {
                                                                    "type": "TemplateLiteral",
                                                                    "range": [
                                                                        295,
                                                                        296
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "TemplateElement",
                                                                            "value": "Event broadcaster error: ",
                                                                            "range": [
                                                                                295,
                                                                                295
                                                                            ],
                                                                            "content": "("
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "e",
                                                                            "range": [
                                                                                296,
                                                                                296
                                                                            ],
                                                                            "content": "f"
                                                                        }
                                                                    ],
                                                                    "content": "(f"
                                                                }
                                                            ],
                                                            "content": "\nlogger.exception(f \"Event broadcaster error: {e}\""
                                                        }
                                                    ],
                                                    "content": "\nlogger.exception(f \"Event broadcaster error: {e}\""
                                                },
                                                {
                                                    "type": "ThrowStatement",
                                                    "range": [
                                                        299,
                                                        300
                                                    ],
                                                    "children": [],
                                                    "content": "\nraise"
                                                }
                                            ],
                                            "content": "e:\nlogger.exception(f \"Event broadcaster error: {e}\")\nraise"
                                        }
                                    ],
                                    "content": "\nexcept Exception as e:\nlogger.exception(f \"Event broadcaster error: {e}\")\nraise"
                                },
                                {
                                    "type": "FinallyClause",
                                    "range": [
                                        301,
                                        310
                                    ],
                                    "children": [
                                        {
                                            "type": "BlockStatement",
                                            "range": [
                                                302,
                                                310
                                            ],
                                            "children": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "range": [
                                                        304,
                                                        308
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "CallExpression",
                                                            "range": [
                                                                304,
                                                                308
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "range": [
                                                                        304,
                                                                        306
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "redis",
                                                                            "range": [
                                                                                304,
                                                                                304
                                                                            ],
                                                                            "content": "\n"
                                                                        },
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "disconnect",
                                                                            "range": [
                                                                                306,
                                                                                306
                                                                            ],
                                                                            "content": "."
                                                                        }
                                                                    ],
                                                                    "content": "\nredis."
                                                                }
                                                            ],
                                                            "content": "\nredis.disconnect("
                                                        }
                                                    ],
                                                    "content": "\nredis.disconnect("
                                                }
                                            ],
                                            "content": "finally:\nredis.disconnect()\n"
                                        }
                                    ],
                                    "content": "\nfinally:\nredis.disconnect()\n"
                                }
                            ],
                            "content": "\ntry:\nredis.connect()\nevent_queue=AsyncRedisExecutionEventBus()\nasync for event in event_queue.listen():\nawait manager.send_execution_result(event)\nexcept Exception as e:\nlogger.exception(f \"Event broadcaster error: {e}\")\nraise\nfinally:\nredis.disconnect()\n"
                        }
                    ],
                    "content": "):\ntry:\nredis.connect()\nevent_queue=AsyncRedisExecutionEventBus()\nasync for event in event_queue.listen():\nawait manager.send_execution_result(event)\nexcept Exception as e:\nlogger.exception(f \"Event broadcaster error: {e}\")\nraise\nfinally:\nredis.disconnect()\n"
                }
            ],
            "content": "\nasync def event_broadcaster(manager:ConnectionManager):\ntry:\nredis.connect()\nevent_queue=AsyncRedisExecutionEventBus()\nasync for event in event_queue.listen():\nawait manager.send_execution_result(event)\nexcept Exception as e:\nlogger.exception(f \"Event broadcaster error: {e}\")\nraise\nfinally:\nredis.disconnect()\n"
        },
        {
            "type": "FunctionDecl",
            "name": "authenticate_websocket",
            "range": [
                311,
                436
            ],
            "children": [
                {
                    "type": "FunctionSignature",
                    "name": "authenticate_websocket",
                    "range": [
                        311,
                        322
                    ],
                    "children": [
                        {
                            "type": "Keyword",
                            "name": "async",
                            "range": [
                                311,
                                315
                            ],
                            "children": [],
                            "content": "\n\nasync def authenticate_websocket"
                        },
                        {
                            "type": "Keyword",
                            "name": "def",
                            "range": [
                                312,
                                315
                            ],
                            "children": [],
                            "content": "\nasync def authenticate_websocket"
                        },
                        {
                            "type": "Identifier",
                            "name": "authenticate_websocket",
                            "range": [
                                313,
                                333
                            ],
                            "children": [],
                            "content": "async def authenticate_websocket(websocket:WebSocket)->str:\nif not settings.config.enable_auth:"
                        },
                        {
                            "type": "ParameterList",
                            "name": "",
                            "range": [
                                314,
                                318
                            ],
                            "children": [
                                {
                                    "type": "Parameter",
                                    "name": "websocket",
                                    "range": [
                                        315,
                                        318
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "websocket",
                                            "range": [
                                                315,
                                                323
                                            ],
                                            "children": [],
                                            "content": "authenticate_websocket(websocket:WebSocket)->str"
                                        },
                                        {
                                            "type": "TypeAnnotation",
                                            "name": "",
                                            "range": [
                                                316,
                                                318
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "WebSocket",
                                                    "range": [
                                                        317,
                                                        325
                                                    ],
                                                    "children": [],
                                                    "content": "websocket:WebSocket)->str:\n"
                                                }
                                            ],
                                            "content": "(websocket:"
                                        }
                                    ],
                                    "content": "authenticate_websocket(websocket:"
                                }
                            ],
                            "content": "def authenticate_websocket(websocket:"
                        },
                        {
                            "type": "ReturnType",
                            "name": "",
                            "range": [
                                319,
                                322
                            ],
                            "children": [
                                {
                                    "type": "Identifier",
                                    "name": "str",
                                    "range": [
                                        321,
                                        324
                                    ],
                                    "children": [],
                                    "content": "->str:"
                                }
                            ],
                            "content": "WebSocket)->"
                        }
                    ],
                    "content": "\n\nasync def authenticate_websocket(websocket:WebSocket)->"
                },
                {
                    "type": "Block",
                    "name": "",
                    "range": [
                        323,
                        436
                    ],
                    "children": [
                        {
                            "type": "IfStatement",
                            "name": "",
                            "range": [
                                324,
                                335
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "",
                                    "range": [
                                        324,
                                        331
                                    ],
                                    "children": [
                                        {
                                            "type": "UnaryExpression",
                                            "name": "not",
                                            "range": [
                                                325,
                                                331
                                            ],
                                            "children": [
                                                {
                                                    "type": "MemberExpression",
                                                    "name": "",
                                                    "range": [
                                                        326,
                                                        330
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "settings",
                                                            "range": [
                                                                326,
                                                                333
                                                            ],
                                                            "children": [],
                                                            "content": "if not settings.config.enable_auth:"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "config",
                                                            "range": [
                                                                328,
                                                                334
                                                            ],
                                                            "children": [],
                                                            "content": "settings.config.enable_auth:\n"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "enable_auth",
                                                            "range": [
                                                                330,
                                                                341
                                                            ],
                                                            "children": [],
                                                            "content": "config.enable_auth:\nreturn DEFAULT_USER_ID\n\ntoken=websocket"
                                                        }
                                                    ],
                                                    "content": "if not settings.config"
                                                }
                                            ],
                                            "content": "\nif not settings.config."
                                        }
                                    ],
                                    "content": ":\nif not settings.config."
                                },
                                {
                                    "type": "Block",
                                    "name": "",
                                    "range": [
                                        332,
                                        335
                                    ],
                                    "children": [
                                        {
                                            "type": "ReturnStatement",
                                            "name": "",
                                            "range": [
                                                333,
                                                335
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "DEFAULT_USER_ID",
                                                    "range": [
                                                        334,
                                                        348
                                                    ],
                                                    "children": [],
                                                    "content": "\nreturn DEFAULT_USER_ID\n\ntoken=websocket.query_params.get(\"token\")"
                                                }
                                            ],
                                            "content": ":\nreturn"
                                        }
                                    ],
                                    "content": "enable_auth:\nreturn"
                                }
                            ],
                            "content": ":\nif not settings.config.enable_auth:\nreturn"
                        },
                        {
                            "type": "VariableDeclaration",
                            "name": "token",
                            "range": [
                                337,
                                347
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "=",
                                    "range": [
                                        338,
                                        347
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "",
                                            "range": [
                                                339,
                                                343
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "websocket",
                                                    "range": [
                                                        339,
                                                        347
                                                    ],
                                                    "children": [],
                                                    "content": "token=websocket.query_params.get(\"token\""
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "query_params",
                                                    "range": [
                                                        341,
                                                        353
                                                    ],
                                                    "children": [],
                                                    "content": "websocket.query_params.get(\"token\")\nif not token:"
                                                },
                                                {
                                                    "type": "CallExpression",
                                                    "name": "get",
                                                    "range": [
                                                        343,
                                                        347
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "StringLiteral",
                                                            "name": "\"token\"",
                                                            "range": [
                                                                345,
                                                                351
                                                            ],
                                                            "children": [],
                                                            "content": "get(\"token\")\nif not"
                                                        }
                                                    ],
                                                    "content": "query_params.get(\"token\""
                                                }
                                            ],
                                            "content": "token=websocket.query_params"
                                        }
                                    ],
                                    "content": "\ntoken=websocket.query_params.get(\"token\""
                                }
                            ],
                            "content": "\n\ntoken=websocket.query_params.get(\"token\""
                        },
                        {
                            "type": "IfStatement",
                            "name": "",
                            "range": [
                                348,
                                369
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "",
                                    "range": [
                                        348,
                                        351
                                    ],
                                    "children": [
                                        {
                                            "type": "UnaryExpression",
                                            "name": "not",
                                            "range": [
                                                349,
                                                351
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "token",
                                                    "range": [
                                                        350,
                                                        354
                                                    ],
                                                    "children": [],
                                                    "content": "if not token:\n"
                                                }
                                            ],
                                            "content": "\nif not"
                                        }
                                    ],
                                    "content": ")\nif not"
                                },
                                {
                                    "type": "Block",
                                    "name": "",
                                    "range": [
                                        352,
                                        369
                                    ],
                                    "children": [
                                        {
                                            "type": "ExpressionStatement",
                                            "name": "",
                                            "range": [
                                                353,
                                                366
                                            ],
                                            "children": [
                                                {
                                                    "type": "AwaitExpression",
                                                    "name": "",
                                                    "range": [
                                                        353,
                                                        366
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "close",
                                                            "range": [
                                                                356,
                                                                366
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "name": "",
                                                                    "range": [
                                                                        354,
                                                                        356
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "websocket",
                                                                            "range": [
                                                                                354,
                                                                                362
                                                                            ],
                                                                            "children": [],
                                                                            "content": "\nawait websocket.close(code=4001"
                                                                        }
                                                                    ],
                                                                    "content": "\nawait websocket"
                                                                },
                                                                {
                                                                    "type": "ArgumentList",
                                                                    "name": "",
                                                                    "range": [
                                                                        357,
                                                                        365
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "AssignmentExpression",
                                                                            "name": "=",
                                                                            "range": [
                                                                                358,
                                                                                360
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "code",
                                                                                    "range": [
                                                                                        358,
                                                                                        362
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "close(code=4001"
                                                                                },
                                                                                {
                                                                                    "type": "NumericLiteral",
                                                                                    "name": "4001",
                                                                                    "range": [
                                                                                        360,
                                                                                        364
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "code=4001,reason"
                                                                                }
                                                                            ],
                                                                            "content": "close(code"
                                                                        },
                                                                        {
                                                                            "type": "AssignmentExpression",
                                                                            "name": "=",
                                                                            "range": [
                                                                                362,
                                                                                364
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "reason",
                                                                                    "range": [
                                                                                        362,
                                                                                        368
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "4001,reason=\"Missing authentication token\")\n"
                                                                                },
                                                                                {
                                                                                    "type": "StringLiteral",
                                                                                    "name": "\"Missing authentication token\"",
                                                                                    "range": [
                                                                                        364,
                                                                                        394
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "reason=\"Missing authentication token\")\nreturn\"\"\n\ntry:\npayload=parse_jwt_token(token)\nuser_id=payload.get(\"sub\")\nif not user_id"
                                                                                }
                                                                            ],
                                                                            "content": "4001,reason"
                                                                        }
                                                                    ],
                                                                    "content": ".close(code=4001,reason="
                                                                }
                                                            ],
                                                            "content": "websocket.close(code=4001,reason=\"Missing authentication token\""
                                                        }
                                                    ],
                                                    "content": ":\nawait websocket.close(code=4001,reason=\"Missing authentication token\""
                                                }
                                            ],
                                            "content": ":\nawait websocket.close(code=4001,reason=\"Missing authentication token\""
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "name": "",
                                            "range": [
                                                367,
                                                369
                                            ],
                                            "children": [
                                                {
                                                    "type": "StringLiteral",
                                                    "name": "\"\"",
                                                    "range": [
                                                        368,
                                                        370
                                                    ],
                                                    "children": [],
                                                    "content": "\nreturn\"\""
                                                }
                                            ],
                                            "content": ")\nreturn"
                                        }
                                    ],
                                    "content": "token:\nawait websocket.close(code=4001,reason=\"Missing authentication token\")\nreturn"
                                }
                            ],
                            "content": ")\nif not token:\nawait websocket.close(code=4001,reason=\"Missing authentication token\")\nreturn"
                        },
                        {
                            "type": "TryStatement",
                            "name": "",
                            "range": [
                                371,
                                435
                            ],
                            "children": [
                                {
                                    "type": "Block",
                                    "name": "",
                                    "range": [
                                        373,
                                        414
                                    ],
                                    "children": [
                                        {
                                            "type": "VariableDeclaration",
                                            "name": "payload",
                                            "range": [
                                                374,
                                                380
                                            ],
                                            "children": [
                                                {
                                                    "type": "AssignmentExpression",
                                                    "name": "=",
                                                    "range": [
                                                        375,
                                                        380
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "parse_jwt_token",
                                                            "range": [
                                                                376,
                                                                380
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "ArgumentList",
                                                                    "name": "",
                                                                    "range": [
                                                                        377,
                                                                        379
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "token",
                                                                            "range": [
                                                                                378,
                                                                                382
                                                                            ],
                                                                            "children": [],
                                                                            "content": "parse_jwt_token(token)\n"
                                                                        }
                                                                    ],
                                                                    "content": "=parse_jwt_token("
                                                                }
                                                            ],
                                                            "content": "payload=parse_jwt_token(token"
                                                        }
                                                    ],
                                                    "content": "\npayload=parse_jwt_token(token"
                                                }
                                            ],
                                            "content": ":\npayload=parse_jwt_token(token"
                                        },
                                        {
                                            "type": "VariableDeclaration",
                                            "name": "user_id",
                                            "range": [
                                                381,
                                                389
                                            ],
                                            "children": [
                                                {
                                                    "type": "AssignmentExpression",
                                                    "name": "=",
                                                    "range": [
                                                        382,
                                                        389
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "get",
                                                            "range": [
                                                                385,
                                                                389
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "name": "",
                                                                    "range": [
                                                                        383,
                                                                        385
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "payload",
                                                                            "range": [
                                                                                383,
                                                                                389
                                                                            ],
                                                                            "children": [],
                                                                            "content": "user_id=payload.get(\"sub\""
                                                                        }
                                                                    ],
                                                                    "content": "user_id=payload"
                                                                },
                                                                {
                                                                    "type": "ArgumentList",
                                                                    "name": "",
                                                                    "range": [
                                                                        386,
                                                                        388
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "StringLiteral",
                                                                            "name": "\"sub\"",
                                                                            "range": [
                                                                                387,
                                                                                391
                                                                            ],
                                                                            "children": [],
                                                                            "content": "get(\"sub\")\n"
                                                                        }
                                                                    ],
                                                                    "content": ".get("
                                                                }
                                                            ],
                                                            "content": "payload.get(\"sub\""
                                                        }
                                                    ],
                                                    "content": "\nuser_id=payload.get(\"sub\""
                                                }
                                            ],
                                            "content": ")\nuser_id=payload.get(\"sub\""
                                        },
                                        {
                                            "type": "IfStatement",
                                            "name": "",
                                            "range": [
                                                390,
                                                411
                                            ],
                                            "children": [
                                                {
                                                    "type": "Condition",
                                                    "name": "",
                                                    "range": [
                                                        390,
                                                        393
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "UnaryExpression",
                                                            "name": "not",
                                                            "range": [
                                                                391,
                                                                393
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "user_id",
                                                                    "range": [
                                                                        392,
                                                                        398
                                                                    ],
                                                                    "children": [],
                                                                    "content": "if not user_id:\nawait websocket"
                                                                }
                                                            ],
                                                            "content": "\nif not"
                                                        }
                                                    ],
                                                    "content": ")\nif not"
                                                },
                                                {
                                                    "type": "Block",
                                                    "name": "",
                                                    "range": [
                                                        394,
                                                        411
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "name": "",
                                                            "range": [
                                                                395,
                                                                408
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "AwaitExpression",
                                                                    "name": "",
                                                                    "range": [
                                                                        395,
                                                                        408
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "CallExpression",
                                                                            "name": "close",
                                                                            "range": [
                                                                                398,
                                                                                408
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "MemberExpression",
                                                                                    "name": "",
                                                                                    "range": [
                                                                                        396,
                                                                                        398
                                                                                    ],
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "websocket",
                                                                                            "range": [
                                                                                                396,
                                                                                                404
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "\nawait websocket.close(code=4002"
                                                                                        }
                                                                                    ],
                                                                                    "content": "\nawait websocket"
                                                                                },
                                                                                {
                                                                                    "type": "ArgumentList",
                                                                                    "name": "",
                                                                                    "range": [
                                                                                        399,
                                                                                        407
                                                                                    ],
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "AssignmentExpression",
                                                                                            "name": "=",
                                                                                            "range": [
                                                                                                400,
                                                                                                402
                                                                                            ],
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "code",
                                                                                                    "range": [
                                                                                                        400,
                                                                                                        404
                                                                                                    ],
                                                                                                    "children": [],
                                                                                                    "content": "close(code=4002"
                                                                                                },
                                                                                                {
                                                                                                    "type": "NumericLiteral",
                                                                                                    "name": "4002",
                                                                                                    "range": [
                                                                                                        402,
                                                                                                        406
                                                                                                    ],
                                                                                                    "children": [],
                                                                                                    "content": "code=4002,reason"
                                                                                                }
                                                                                            ],
                                                                                            "content": "close(code"
                                                                                        },
                                                                                        {
                                                                                            "type": "AssignmentExpression",
                                                                                            "name": "=",
                                                                                            "range": [
                                                                                                404,
                                                                                                406
                                                                                            ],
                                                                                            "children": [
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "reason",
                                                                                                    "range": [
                                                                                                        404,
                                                                                                        410
                                                                                                    ],
                                                                                                    "children": [],
                                                                                                    "content": "4002,reason=\"Invalid token\")\n"
                                                                                                },
                                                                                                {
                                                                                                    "type": "StringLiteral",
                                                                                                    "name": "\"Invalid token\"",
                                                                                                    "range": [
                                                                                                        406,
                                                                                                        420
                                                                                                    ],
                                                                                                    "children": [],
                                                                                                    "content": "reason=\"Invalid token\")\nreturn\"\"\nreturn user_id\nexcept ValueError:\n"
                                                                                                }
                                                                                            ],
                                                                                            "content": "4002,reason"
                                                                                        }
                                                                                    ],
                                                                                    "content": ".close(code=4002,reason="
                                                                                }
                                                                            ],
                                                                            "content": "websocket.close(code=4002,reason=\"Invalid token\""
                                                                        }
                                                                    ],
                                                                    "content": ":\nawait websocket.close(code=4002,reason=\"Invalid token\""
                                                                }
                                                            ],
                                                            "content": ":\nawait websocket.close(code=4002,reason=\"Invalid token\""
                                                        },
                                                        {
                                                            "type": "ReturnStatement",
                                                            "name": "",
                                                            "range": [
                                                                409,
                                                                411
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "StringLiteral",
                                                                    "name": "\"\"",
                                                                    "range": [
                                                                        410,
                                                                        412
                                                                    ],
                                                                    "children": [],
                                                                    "content": "\nreturn\"\""
                                                                }
                                                            ],
                                                            "content": ")\nreturn"
                                                        }
                                                    ],
                                                    "content": "user_id:\nawait websocket.close(code=4002,reason=\"Invalid token\")\nreturn"
                                                }
                                            ],
                                            "content": ")\nif not user_id:\nawait websocket.close(code=4002,reason=\"Invalid token\")\nreturn"
                                        },
                                        {
                                            "type": "ReturnStatement",
                                            "name": "",
                                            "range": [
                                                412,
                                                414
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "user_id",
                                                    "range": [
                                                        413,
                                                        419
                                                    ],
                                                    "children": [],
                                                    "content": "\nreturn user_id\nexcept ValueError:"
                                                }
                                            ],
                                            "content": "\"\"\nreturn"
                                        }
                                    ],
                                    "content": "try:\npayload=parse_jwt_token(token)\nuser_id=payload.get(\"sub\")\nif not user_id:\nawait websocket.close(code=4002,reason=\"Invalid token\")\nreturn\"\"\nreturn"
                                },
                                {
                                    "type": "CatchClause",
                                    "name": "",
                                    "range": [
                                        415,
                                        435
                                    ],
                                    "children": [
                                        {
                                            "type": "Block",
                                            "name": "",
                                            "range": [
                                                418,
                                                435
                                            ],
                                            "children": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "name": "",
                                                    "range": [
                                                        419,
                                                        432
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "AwaitExpression",
                                                            "name": "",
                                                            "range": [
                                                                419,
                                                                432
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "CallExpression",
                                                                    "name": "close",
                                                                    "range": [
                                                                        422,
                                                                        432
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "MemberExpression",
                                                                            "name": "",
                                                                            "range": [
                                                                                420,
                                                                                422
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "websocket",
                                                                                    "range": [
                                                                                        420,
                                                                                        428
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "\nawait websocket.close(code=4003"
                                                                                }
                                                                            ],
                                                                            "content": "\nawait websocket"
                                                                        },
                                                                        {
                                                                            "type": "ArgumentList",
                                                                            "name": "",
                                                                            "range": [
                                                                                423,
                                                                                431
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "AssignmentExpression",
                                                                                    "name": "=",
                                                                                    "range": [
                                                                                        424,
                                                                                        426
                                                                                    ],
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "code",
                                                                                            "range": [
                                                                                                424,
                                                                                                428
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "close(code=4003"
                                                                                        },
                                                                                        {
                                                                                            "type": "NumericLiteral",
                                                                                            "name": "4003",
                                                                                            "range": [
                                                                                                426,
                                                                                                430
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "code=4003,reason"
                                                                                        }
                                                                                    ],
                                                                                    "content": "close(code"
                                                                                },
                                                                                {
                                                                                    "type": "AssignmentExpression",
                                                                                    "name": "=",
                                                                                    "range": [
                                                                                        428,
                                                                                        430
                                                                                    ],
                                                                                    "children": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "reason",
                                                                                            "range": [
                                                                                                428,
                                                                                                434
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "4003,reason=\"Invalid token\")\n"
                                                                                        },
                                                                                        {
                                                                                            "type": "StringLiteral",
                                                                                            "name": "\"Invalid token\"",
                                                                                            "range": [
                                                                                                430,
                                                                                                444
                                                                                            ],
                                                                                            "children": [],
                                                                                            "content": "reason=\"Invalid token\")\nreturn\"\"\n\n\nasync def handle_subscribe(\n"
                                                                                        }
                                                                                    ],
                                                                                    "content": "4003,reason"
                                                                                }
                                                                            ],
                                                                            "content": ".close(code=4003,reason="
                                                                        }
                                                                    ],
                                                                    "content": "websocket.close(code=4003,reason=\"Invalid token\""
                                                                }
                                                            ],
                                                            "content": ":\nawait websocket.close(code=4003,reason=\"Invalid token\""
                                                        }
                                                    ],
                                                    "content": ":\nawait websocket.close(code=4003,reason=\"Invalid token\""
                                                },
                                                {
                                                    "type": "ReturnStatement",
                                                    "name": "",
                                                    "range": [
                                                        433,
                                                        435
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "StringLiteral",
                                                            "name": "\"\"",
                                                            "range": [
                                                                434,
                                                                436
                                                            ],
                                                            "children": [],
                                                            "content": "\nreturn\"\""
                                                        }
                                                    ],
                                                    "content": ")\nreturn"
                                                }
                                            ],
                                            "content": "ValueError:\nawait websocket.close(code=4003,reason=\"Invalid token\")\nreturn"
                                        }
                                    ],
                                    "content": "user_id\nexcept ValueError:\nawait websocket.close(code=4003,reason=\"Invalid token\")\nreturn"
                                }
                            ],
                            "content": "\n\ntry:\npayload=parse_jwt_token(token)\nuser_id=payload.get(\"sub\")\nif not user_id:\nawait websocket.close(code=4002,reason=\"Invalid token\")\nreturn\"\"\nreturn user_id\nexcept ValueError:\nawait websocket.close(code=4003,reason=\"Invalid token\")\nreturn"
                        }
                    ],
                    "content": "str:\nif not settings.config.enable_auth:\nreturn DEFAULT_USER_ID\n\ntoken=websocket.query_params.get(\"token\")\nif not token:\nawait websocket.close(code=4001,reason=\"Missing authentication token\")\nreturn\"\"\n\ntry:\npayload=parse_jwt_token(token)\nuser_id=payload.get(\"sub\")\nif not user_id:\nawait websocket.close(code=4002,reason=\"Invalid token\")\nreturn\"\"\nreturn user_id\nexcept ValueError:\nawait websocket.close(code=4003,reason=\"Invalid token\")\nreturn\"\""
                }
            ],
            "content": "\n\nasync def authenticate_websocket(websocket:WebSocket)->str:\nif not settings.config.enable_auth:\nreturn DEFAULT_USER_ID\n\ntoken=websocket.query_params.get(\"token\")\nif not token:\nawait websocket.close(code=4001,reason=\"Missing authentication token\")\nreturn\"\"\n\ntry:\npayload=parse_jwt_token(token)\nuser_id=payload.get(\"sub\")\nif not user_id:\nawait websocket.close(code=4002,reason=\"Invalid token\")\nreturn\"\"\nreturn user_id\nexcept ValueError:\nawait websocket.close(code=4003,reason=\"Invalid token\")\nreturn\"\""
        },
        {
            "type": "FunctionDecl",
            "name": "handle_subscribe",
            "range": [
                437,
                568
            ],
            "children": [
                {
                    "type": "ParameterList",
                    "name": "parameters",
                    "range": [
                        440,
                        454
                    ],
                    "children": [
                        {
                            "type": "Parameter",
                            "name": "websocket",
                            "range": [
                                442,
                                444
                            ],
                            "children": [],
                            "content": "handle_subscribe(\n"
                        },
                        {
                            "type": "Parameter",
                            "name": "manager",
                            "range": [
                                446,
                                448
                            ],
                            "children": [],
                            "content": ":WebSocket,"
                        },
                        {
                            "type": "Parameter",
                            "name": "message",
                            "range": [
                                450,
                                452
                            ],
                            "children": [],
                            "content": ":ConnectionManager,"
                        }
                    ],
                    "content": "async def handle_subscribe(\nwebsocket:WebSocket,manager:ConnectionManager,message:"
                },
                {
                    "type": "BlockStatement",
                    "name": "body",
                    "range": [
                        456,
                        568
                    ],
                    "children": [
                        {
                            "type": "IfStatement",
                            "name": "if",
                            "range": [
                                457,
                                497
                            ],
                            "children": [
                                {
                                    "type": "UnaryExpression",
                                    "name": "not",
                                    "range": [
                                        458,
                                        462
                                    ],
                                    "children": [
                                        {
                                            "type": "MemberExpression",
                                            "name": "message.data",
                                            "range": [
                                                459,
                                                461
                                            ],
                                            "children": [],
                                            "content": "\nif not"
                                        }
                                    ],
                                    "content": ":\nif not message"
                                },
                                {
                                    "type": "BlockStatement",
                                    "name": "consequent",
                                    "range": [
                                        463,
                                        497
                                    ],
                                    "children": [
                                        {
                                            "type": "ExpressionStatement",
                                            "name": "await",
                                            "range": [
                                                464,
                                                496
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "websocket.send_text",
                                                    "range": [
                                                        465,
                                                        496
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "NewExpression",
                                                            "name": "WsMessage",
                                                            "range": [
                                                                470,
                                                                490
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "AssignmentExpression",
                                                                    "name": "method",
                                                                    "range": [
                                                                        473,
                                                                        477
                                                                    ],
                                                                    "children": [],
                                                                    "content": "WsMessage(\nmethod="
                                                                },
                                                                {
                                                                    "type": "AssignmentExpression",
                                                                    "name": "success",
                                                                    "range": [
                                                                        480,
                                                                        482
                                                                    ],
                                                                    "children": [],
                                                                    "content": "ERROR,\n"
                                                                },
                                                                {
                                                                    "type": "AssignmentExpression",
                                                                    "name": "error",
                                                                    "range": [
                                                                        485,
                                                                        487
                                                                    ],
                                                                    "children": [],
                                                                    "content": "False,\n"
                                                                }
                                                            ],
                                                            "content": "send_text(\nWsMessage(\nmethod=Methods.ERROR,\nsuccess=False,\nerror=\"Subscription data missing\""
                                                        },
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "model_dump_json",
                                                            "range": [
                                                                492,
                                                                494
                                                            ],
                                                            "children": [],
                                                            "content": "\n)."
                                                        }
                                                    ],
                                                    "content": ":\nawait websocket.send_text(\nWsMessage(\nmethod=Methods.ERROR,\nsuccess=False,\nerror=\"Subscription data missing\",\n).model_dump_json("
                                                }
                                            ],
                                            "content": "data:\nawait websocket.send_text(\nWsMessage(\nmethod=Methods.ERROR,\nsuccess=False,\nerror=\"Subscription data missing\",\n).model_dump_json("
                                        }
                                    ],
                                    "content": ".data:\nawait websocket.send_text(\nWsMessage(\nmethod=Methods.ERROR,\nsuccess=False,\nerror=\"Subscription data missing\",\n).model_dump_json()"
                                }
                            ],
                            "content": "):\nif not message.data:\nawait websocket.send_text(\nWsMessage(\nmethod=Methods.ERROR,\nsuccess=False,\nerror=\"Subscription data missing\",\n).model_dump_json()"
                        },
                        {
                            "type": "ElseStatement",
                            "name": "else",
                            "range": [
                                498,
                                568
                            ],
                            "children": [
                                {
                                    "type": "BlockStatement",
                                    "name": "alternate",
                                    "range": [
                                        500,
                                        568
                                    ],
                                    "children": [
                                        {
                                            "type": "VariableDeclaration",
                                            "name": "ex_sub",
                                            "range": [
                                                501,
                                                511
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "ExecutionSubscription.model_validate",
                                                    "range": [
                                                        503,
                                                        510
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "name": "message.data",
                                                            "range": [
                                                                507,
                                                                509
                                                            ],
                                                            "children": [],
                                                            "content": ".model_validate("
                                                        }
                                                    ],
                                                    "content": "\nex_sub=ExecutionSubscription.model_validate(message"
                                                }
                                            ],
                                            "content": "else:\nex_sub=ExecutionSubscription.model_validate(message."
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "name": "await",
                                            "range": [
                                                512,
                                                523
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "manager.subscribe",
                                                    "range": [
                                                        513,
                                                        522
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "name": "ex_sub.graph_id",
                                                            "range": [
                                                                517,
                                                                519
                                                            ],
                                                            "children": [],
                                                            "content": ".subscribe("
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "websocket",
                                                            "range": [
                                                                521,
                                                                521
                                                            ],
                                                            "children": [],
                                                            "content": "."
                                                        }
                                                    ],
                                                    "content": ")\nawait manager.subscribe(ex_sub.graph_id"
                                                }
                                            ],
                                            "content": "data)\nawait manager.subscribe(ex_sub.graph_id,"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "name": "logger.debug",
                                            "range": [
                                                524,
                                                531
                                            ],
                                            "children": [
                                                {
                                                    "type": "TemplateLiteral",
                                                    "name": "f",
                                                    "range": [
                                                        528,
                                                        529
                                                    ],
                                                    "children": [],
                                                    "content": ".debug"
                                                }
                                            ],
                                            "content": "websocket)\nlogger.debug(f"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "name": "await",
                                            "range": [
                                                532,
                                                567
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "websocket.send_text",
                                                    "range": [
                                                        533,
                                                        567
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "NewExpression",
                                                            "name": "WsMessage",
                                                            "range": [
                                                                538,
                                                                560
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "AssignmentExpression",
                                                                    "name": "method",
                                                                    "range": [
                                                                        541,
                                                                        545
                                                                    ],
                                                                    "children": [],
                                                                    "content": "WsMessage(\nmethod="
                                                                },
                                                                {
                                                                    "type": "AssignmentExpression",
                                                                    "name": "success",
                                                                    "range": [
                                                                        548,
                                                                        550
                                                                    ],
                                                                    "children": [],
                                                                    "content": "SUBSCRIBE,\n"
                                                                },
                                                                {
                                                                    "type": "AssignmentExpression",
                                                                    "name": "channel",
                                                                    "range": [
                                                                        553,
                                                                        558
                                                                    ],
                                                                    "children": [],
                                                                    "content": "True,\nchannel=ex_sub"
                                                                }
                                                            ],
                                                            "content": "send_text(\nWsMessage(\nmethod=Methods.SUBSCRIBE,\nsuccess=True,\nchannel=ex_sub.graph_id"
                                                        },
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "model_dump_json",
                                                            "range": [
                                                                562,
                                                                564
                                                            ],
                                                            "children": [],
                                                            "content": "\n)."
                                                        }
                                                    ],
                                                    "content": ")\nawait websocket.send_text(\nWsMessage(\nmethod=Methods.SUBSCRIBE,\nsuccess=True,\nchannel=ex_sub.graph_id,\n).model_dump_json()"
                                                }
                                            ],
                                            "content": "\"New execution subscription for graph {ex_sub.graph_id}\")\nawait websocket.send_text(\nWsMessage(\nmethod=Methods.SUBSCRIBE,\nsuccess=True,\nchannel=ex_sub.graph_id,\n).model_dump_json()"
                                        }
                                    ],
                                    "content": "\nelse:\nex_sub=ExecutionSubscription.model_validate(message.data)\nawait manager.subscribe(ex_sub.graph_id,websocket)\nlogger.debug(f \"New execution subscription for graph {ex_sub.graph_id}\")\nawait websocket.send_text(\nWsMessage(\nmethod=Methods.SUBSCRIBE,\nsuccess=True,\nchannel=ex_sub.graph_id,\n).model_dump_json()\n"
                                }
                            ],
                            "content": "\n)\nelse:\nex_sub=ExecutionSubscription.model_validate(message.data)\nawait manager.subscribe(ex_sub.graph_id,websocket)\nlogger.debug(f \"New execution subscription for graph {ex_sub.graph_id}\")\nawait websocket.send_text(\nWsMessage(\nmethod=Methods.SUBSCRIBE,\nsuccess=True,\nchannel=ex_sub.graph_id,\n).model_dump_json()\n"
                        }
                    ],
                    "content": "\n):\nif not message.data:\nawait websocket.send_text(\nWsMessage(\nmethod=Methods.ERROR,\nsuccess=False,\nerror=\"Subscription data missing\",\n).model_dump_json()\n)\nelse:\nex_sub=ExecutionSubscription.model_validate(message.data)\nawait manager.subscribe(ex_sub.graph_id,websocket)\nlogger.debug(f \"New execution subscription for graph {ex_sub.graph_id}\")\nawait websocket.send_text(\nWsMessage(\nmethod=Methods.SUBSCRIBE,\nsuccess=True,\nchannel=ex_sub.graph_id,\n).model_dump_json()\n"
                }
            ],
            "content": "\n\n\nasync def handle_subscribe(\nwebsocket:WebSocket,manager:ConnectionManager,message:WsMessage\n):\nif not message.data:\nawait websocket.send_text(\nWsMessage(\nmethod=Methods.ERROR,\nsuccess=False,\nerror=\"Subscription data missing\",\n).model_dump_json()\n)\nelse:\nex_sub=ExecutionSubscription.model_validate(message.data)\nawait manager.subscribe(ex_sub.graph_id,websocket)\nlogger.debug(f \"New execution subscription for graph {ex_sub.graph_id}\")\nawait websocket.send_text(\nWsMessage(\nmethod=Methods.SUBSCRIBE,\nsuccess=True,\nchannel=ex_sub.graph_id,\n).model_dump_json()\n"
        },
        {
            "type": "FunctionDecl",
            "name": "handle_unsubscribe",
            "range": [
                569,
                700
            ],
            "children": [
                {
                    "type": "FunctionSignature",
                    "name": "handle_unsubscribe",
                    "range": [
                        569,
                        587
                    ],
                    "children": [
                        {
                            "type": "Keyword",
                            "name": "async",
                            "range": [
                                569,
                                573
                            ],
                            "children": [],
                            "content": ")\n\n\nasync"
                        },
                        {
                            "type": "Keyword",
                            "name": "def",
                            "range": [
                                570,
                                573
                            ],
                            "children": [],
                            "content": "\n\n\nasync"
                        },
                        {
                            "type": "Identifier",
                            "name": "handle_unsubscribe",
                            "range": [
                                571,
                                587
                            ],
                            "children": [],
                            "content": "\n\nasync def handle_unsubscribe(\nwebsocket:WebSocket,manager:ConnectionManager,message:"
                        },
                        {
                            "type": "ParameterList",
                            "name": "parameters",
                            "range": [
                                572,
                                586
                            ],
                            "children": [
                                {
                                    "type": "Parameter",
                                    "name": "websocket",
                                    "range": [
                                        574,
                                        576
                                    ],
                                    "children": [],
                                    "content": "def handle_unsubscribe("
                                },
                                {
                                    "type": "Parameter",
                                    "name": "manager",
                                    "range": [
                                        578,
                                        580
                                    ],
                                    "children": [],
                                    "content": "websocket:WebSocket"
                                },
                                {
                                    "type": "Parameter",
                                    "name": "message",
                                    "range": [
                                        582,
                                        584
                                    ],
                                    "children": [],
                                    "content": "manager:ConnectionManager"
                                }
                            ],
                            "content": "\nasync def handle_unsubscribe(\nwebsocket:WebSocket,manager:ConnectionManager,message"
                        }
                    ],
                    "content": ")\n\n\nasync def handle_unsubscribe(\nwebsocket:WebSocket,manager:ConnectionManager,message:"
                },
                {
                    "type": "FunctionBody",
                    "name": "body",
                    "range": [
                        588,
                        700
                    ],
                    "children": [
                        {
                            "type": "IfStatement",
                            "name": "if",
                            "range": [
                                589,
                                629
                            ],
                            "children": [
                                {
                                    "type": "Condition",
                                    "name": "condition",
                                    "range": [
                                        589,
                                        594
                                    ],
                                    "children": [
                                        {
                                            "type": "UnaryExpression",
                                            "name": "not",
                                            "range": [
                                                590,
                                                591
                                            ],
                                            "children": [],
                                            "content": "):"
                                        },
                                        {
                                            "type": "MemberExpression",
                                            "name": "message.data",
                                            "range": [
                                                591,
                                                593
                                            ],
                                            "children": [],
                                            "content": ":\nif"
                                        }
                                    ],
                                    "content": "\n):\nif not"
                                },
                                {
                                    "type": "Block",
                                    "name": "consequent",
                                    "range": [
                                        595,
                                        629
                                    ],
                                    "children": [
                                        {
                                            "type": "ExpressionStatement",
                                            "name": "await websocket.send_text",
                                            "range": [
                                                596,
                                                628
                                            ],
                                            "children": [
                                                {
                                                    "type": "AwaitExpression",
                                                    "name": "await",
                                                    "range": [
                                                        596,
                                                        597
                                                    ],
                                                    "children": [],
                                                    "content": ".data"
                                                },
                                                {
                                                    "type": "CallExpression",
                                                    "name": "websocket.send_text",
                                                    "range": [
                                                        597,
                                                        628
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "name": "websocket.send_text",
                                                            "range": [
                                                                597,
                                                                599
                                                            ],
                                                            "children": [],
                                                            "content": "data:\n"
                                                        },
                                                        {
                                                            "type": "Arguments",
                                                            "name": "arguments",
                                                            "range": [
                                                                600,
                                                                627
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "NewExpression",
                                                                    "name": "WsMessage",
                                                                    "range": [
                                                                        602,
                                                                        622
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Arguments",
                                                                            "name": "arguments",
                                                                            "range": [
                                                                                603,
                                                                                621
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "AssignmentExpression",
                                                                                    "name": "method=Methods.ERROR",
                                                                                    "range": [
                                                                                        605,
                                                                                        609
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "\nWsMessage(\nmethod"
                                                                                },
                                                                                {
                                                                                    "type": "AssignmentExpression",
                                                                                    "name": "success=False",
                                                                                    "range": [
                                                                                        612,
                                                                                        614
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": ".ERROR,"
                                                                                },
                                                                                {
                                                                                    "type": "AssignmentExpression",
                                                                                    "name": "error=\"Subscription data missing\"",
                                                                                    "range": [
                                                                                        617,
                                                                                        619
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "=False,"
                                                                                }
                                                                            ],
                                                                            "content": "send_text(\nWsMessage(\nmethod=Methods.ERROR,\nsuccess=False,\nerror"
                                                                        }
                                                                    ],
                                                                    "content": ".send_text(\nWsMessage(\nmethod=Methods.ERROR,\nsuccess=False,\nerror="
                                                                },
                                                                {
                                                                    "type": "CallExpression",
                                                                    "name": "model_dump_json",
                                                                    "range": [
                                                                        623,
                                                                        626
                                                                    ],
                                                                    "children": [],
                                                                    "content": "\"Subscription data missing\",\n)"
                                                                }
                                                            ],
                                                            "content": "await websocket.send_text(\nWsMessage(\nmethod=Methods.ERROR,\nsuccess=False,\nerror=\"Subscription data missing\",\n)."
                                                        }
                                                    ],
                                                    "content": "data:\nawait websocket.send_text(\nWsMessage(\nmethod=Methods.ERROR,\nsuccess=False,\nerror=\"Subscription data missing\",\n).model_dump_json"
                                                }
                                            ],
                                            "content": ".data:\nawait websocket.send_text(\nWsMessage(\nmethod=Methods.ERROR,\nsuccess=False,\nerror=\"Subscription data missing\",\n).model_dump_json"
                                        }
                                    ],
                                    "content": "message.data:\nawait websocket.send_text(\nWsMessage(\nmethod=Methods.ERROR,\nsuccess=False,\nerror=\"Subscription data missing\",\n).model_dump_json("
                                }
                            ],
                            "content": "\n):\nif not message.data:\nawait websocket.send_text(\nWsMessage(\nmethod=Methods.ERROR,\nsuccess=False,\nerror=\"Subscription data missing\",\n).model_dump_json("
                        },
                        {
                            "type": "ElseStatement",
                            "name": "else",
                            "range": [
                                630,
                                700
                            ],
                            "children": [
                                {
                                    "type": "Block",
                                    "name": "alternate",
                                    "range": [
                                        632,
                                        700
                                    ],
                                    "children": [
                                        {
                                            "type": "VariableDeclaration",
                                            "name": "ex_sub",
                                            "range": [
                                                633,
                                                643
                                            ],
                                            "children": [
                                                {
                                                    "type": "AssignmentExpression",
                                                    "name": "ex_sub=ExecutionSubscription.model_validate",
                                                    "range": [
                                                        634,
                                                        642
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "CallExpression",
                                                            "name": "ExecutionSubscription.model_validate",
                                                            "range": [
                                                                635,
                                                                642
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "name": "message.data",
                                                                    "range": [
                                                                        639,
                                                                        641
                                                                    ],
                                                                    "children": [],
                                                                    "content": "ExecutionSubscription.model_validate"
                                                                }
                                                            ],
                                                            "content": ":\nex_sub=ExecutionSubscription.model_validate("
                                                        }
                                                    ],
                                                    "content": "else:\nex_sub=ExecutionSubscription.model_validate("
                                                }
                                            ],
                                            "content": "\nelse:\nex_sub=ExecutionSubscription.model_validate(message"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "name": "await manager.unsubscribe",
                                            "range": [
                                                644,
                                                655
                                            ],
                                            "children": [
                                                {
                                                    "type": "AwaitExpression",
                                                    "name": "await",
                                                    "range": [
                                                        644,
                                                        645
                                                    ],
                                                    "children": [],
                                                    "content": ".data"
                                                },
                                                {
                                                    "type": "CallExpression",
                                                    "name": "manager.unsubscribe",
                                                    "range": [
                                                        645,
                                                        655
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "name": "manager.unsubscribe",
                                                            "range": [
                                                                645,
                                                                647
                                                            ],
                                                            "children": [],
                                                            "content": "data)\n"
                                                        },
                                                        {
                                                            "type": "Arguments",
                                                            "name": "arguments",
                                                            "range": [
                                                                648,
                                                                654
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "name": "ex_sub.graph_id",
                                                                    "range": [
                                                                        649,
                                                                        651
                                                                    ],
                                                                    "children": [],
                                                                    "content": "manager.unsubscribe"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "websocket",
                                                                    "range": [
                                                                        653,
                                                                        654
                                                                    ],
                                                                    "children": [],
                                                                    "content": "ex_sub."
                                                                }
                                                            ],
                                                            "content": "await manager.unsubscribe(ex_sub."
                                                        }
                                                    ],
                                                    "content": "data)\nawait manager.unsubscribe(ex_sub.graph_id"
                                                }
                                            ],
                                            "content": ".data)\nawait manager.unsubscribe(ex_sub.graph_id"
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "name": "logger.debug",
                                            "range": [
                                                656,
                                                663
                                            ],
                                            "children": [
                                                {
                                                    "type": "CallExpression",
                                                    "name": "logger.debug",
                                                    "range": [
                                                        656,
                                                        663
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "name": "logger.debug",
                                                            "range": [
                                                                656,
                                                                658
                                                            ],
                                                            "children": [],
                                                            "content": ",websocket)"
                                                        },
                                                        {
                                                            "type": "Arguments",
                                                            "name": "arguments",
                                                            "range": [
                                                                659,
                                                                662
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "TemplateLiteral",
                                                                    "name": "f\"Removed execution subscription for graph {ex_sub.graph_id}\"",
                                                                    "range": [
                                                                        660,
                                                                        661
                                                                    ],
                                                                    "children": [],
                                                                    "content": "logger."
                                                                }
                                                            ],
                                                            "content": "\nlogger.debug"
                                                        }
                                                    ],
                                                    "content": ",websocket)\nlogger.debug("
                                                }
                                            ],
                                            "content": ",websocket)\nlogger.debug("
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "name": "await websocket.send_text",
                                            "range": [
                                                664,
                                                699
                                            ],
                                            "children": [
                                                {
                                                    "type": "AwaitExpression",
                                                    "name": "await",
                                                    "range": [
                                                        664,
                                                        665
                                                    ],
                                                    "children": [],
                                                    "content": "f \"Removed execution subscription for graph {ex_sub.graph_id}\""
                                                },
                                                {
                                                    "type": "CallExpression",
                                                    "name": "websocket.send_text",
                                                    "range": [
                                                        665,
                                                        699
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "MemberExpression",
                                                            "name": "websocket.send_text",
                                                            "range": [
                                                                665,
                                                                667
                                                            ],
                                                            "children": [],
                                                            "content": "\"Removed execution subscription for graph {ex_sub.graph_id}\")\n"
                                                        },
                                                        {
                                                            "type": "Arguments",
                                                            "name": "arguments",
                                                            "range": [
                                                                668,
                                                                698
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "NewExpression",
                                                                    "name": "WsMessage",
                                                                    "range": [
                                                                        670,
                                                                        692
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Arguments",
                                                                            "name": "arguments",
                                                                            "range": [
                                                                                671,
                                                                                691
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "AssignmentExpression",
                                                                                    "name": "method=Methods.UNSUBSCRIBE",
                                                                                    "range": [
                                                                                        673,
                                                                                        677
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "\nWsMessage(\nmethod"
                                                                                },
                                                                                {
                                                                                    "type": "AssignmentExpression",
                                                                                    "name": "success=True",
                                                                                    "range": [
                                                                                        680,
                                                                                        682
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": ".UNSUBSCRIBE,"
                                                                                },
                                                                                {
                                                                                    "type": "AssignmentExpression",
                                                                                    "name": "channel=ex_sub.graph_id",
                                                                                    "range": [
                                                                                        685,
                                                                                        689
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "=True,\nchannel"
                                                                                }
                                                                            ],
                                                                            "content": "send_text(\nWsMessage(\nmethod=Methods.UNSUBSCRIBE,\nsuccess=True,\nchannel=ex_sub"
                                                                        }
                                                                    ],
                                                                    "content": ".send_text(\nWsMessage(\nmethod=Methods.UNSUBSCRIBE,\nsuccess=True,\nchannel=ex_sub."
                                                                },
                                                                {
                                                                    "type": "CallExpression",
                                                                    "name": "model_dump_json",
                                                                    "range": [
                                                                        693,
                                                                        696
                                                                    ],
                                                                    "children": [],
                                                                    "content": "graph_id,\n)"
                                                                }
                                                            ],
                                                            "content": "await websocket.send_text(\nWsMessage(\nmethod=Methods.UNSUBSCRIBE,\nsuccess=True,\nchannel=ex_sub.graph_id,\n).model_dump_json"
                                                        }
                                                    ],
                                                    "content": "\"Removed execution subscription for graph {ex_sub.graph_id}\")\nawait websocket.send_text(\nWsMessage(\nmethod=Methods.UNSUBSCRIBE,\nsuccess=True,\nchannel=ex_sub.graph_id,\n).model_dump_json("
                                                }
                                            ],
                                            "content": "f \"Removed execution subscription for graph {ex_sub.graph_id}\")\nawait websocket.send_text(\nWsMessage(\nmethod=Methods.UNSUBSCRIBE,\nsuccess=True,\nchannel=ex_sub.graph_id,\n).model_dump_json("
                                        }
                                    ],
                                    "content": ")\nelse:\nex_sub=ExecutionSubscription.model_validate(message.data)\nawait manager.unsubscribe(ex_sub.graph_id,websocket)\nlogger.debug(f \"Removed execution subscription for graph {ex_sub.graph_id}\")\nawait websocket.send_text(\nWsMessage(\nmethod=Methods.UNSUBSCRIBE,\nsuccess=True,\nchannel=ex_sub.graph_id,\n).model_dump_json()"
                                }
                            ],
                            "content": ")\n)\nelse:\nex_sub=ExecutionSubscription.model_validate(message.data)\nawait manager.unsubscribe(ex_sub.graph_id,websocket)\nlogger.debug(f \"Removed execution subscription for graph {ex_sub.graph_id}\")\nawait websocket.send_text(\nWsMessage(\nmethod=Methods.UNSUBSCRIBE,\nsuccess=True,\nchannel=ex_sub.graph_id,\n).model_dump_json()"
                        }
                    ],
                    "content": "WsMessage\n):\nif not message.data:\nawait websocket.send_text(\nWsMessage(\nmethod=Methods.ERROR,\nsuccess=False,\nerror=\"Subscription data missing\",\n).model_dump_json()\n)\nelse:\nex_sub=ExecutionSubscription.model_validate(message.data)\nawait manager.unsubscribe(ex_sub.graph_id,websocket)\nlogger.debug(f \"Removed execution subscription for graph {ex_sub.graph_id}\")\nawait websocket.send_text(\nWsMessage(\nmethod=Methods.UNSUBSCRIBE,\nsuccess=True,\nchannel=ex_sub.graph_id,\n).model_dump_json()"
                }
            ],
            "content": ")\n\n\nasync def handle_unsubscribe(\nwebsocket:WebSocket,manager:ConnectionManager,message:WsMessage\n):\nif not message.data:\nawait websocket.send_text(\nWsMessage(\nmethod=Methods.ERROR,\nsuccess=False,\nerror=\"Subscription data missing\",\n).model_dump_json()\n)\nelse:\nex_sub=ExecutionSubscription.model_validate(message.data)\nawait manager.unsubscribe(ex_sub.graph_id,websocket)\nlogger.debug(f \"Removed execution subscription for graph {ex_sub.graph_id}\")\nawait websocket.send_text(\nWsMessage(\nmethod=Methods.UNSUBSCRIBE,\nsuccess=True,\nchannel=ex_sub.graph_id,\n).model_dump_json()"
        },
        {
            "type": "FunctionDecl",
            "name": "health",
            "range": [
                709,
                721
            ],
            "children": [
                {
                    "type": "BlockStatement",
                    "range": [
                        717,
                        721
                    ],
                    "children": [
                        {
                            "type": "ReturnStatement",
                            "range": [
                                716,
                                720
                            ],
                            "children": [
                                {
                                    "type": "ObjectExpression",
                                    "range": [
                                        717,
                                        721
                                    ],
                                    "children": [
                                        {
                                            "type": "Property",
                                            "range": [
                                                718,
                                                720
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "value": "status",
                                                    "range": [
                                                        718,
                                                        718
                                                    ],
                                                    "content": ")"
                                                },
                                                {
                                                    "type": "Literal",
                                                    "value": "healthy",
                                                    "range": [
                                                        720,
                                                        720
                                                    ],
                                                    "content": "\n"
                                                }
                                            ],
                                            "content": "):\n"
                                        }
                                    ],
                                    "content": "():\nreturn"
                                }
                            ],
                            "content": "health():\n"
                        }
                    ],
                    "content": "():\nreturn"
                }
            ],
            "content": "get(\"/\")\nasync def health():\nreturn"
        },
        {
            "type": "FunctionDecl",
            "name": "websocket_router",
            "range": [
                731,
                974
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "websocket",
                    "range": [
                        736,
                        738
                    ],
                    "children": [],
                    "content": ")\nasync"
                },
                {
                    "type": "Parameter",
                    "name": "manager",
                    "range": [
                        740,
                        742
                    ],
                    "children": [],
                    "content": "websocket_router(\n"
                },
                {
                    "type": "AssignmentExpression",
                    "name": "user_id",
                    "range": [
                        752,
                        758
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "authenticate_websocket",
                            "range": [
                                755,
                                758
                            ],
                            "children": [
                                {
                                    "type": "Argument",
                                    "name": "websocket",
                                    "range": [
                                        757,
                                        757
                                    ],
                                    "children": [],
                                    "content": ":"
                                }
                            ],
                            "content": "\n):\n"
                        }
                    ],
                    "content": "(get_connection_manager)\n):\n"
                },
                {
                    "type": "IfStatement",
                    "name": "if",
                    "range": [
                        760,
                        766
                    ],
                    "children": [
                        {
                            "type": "Condition",
                            "name": "not user_id",
                            "range": [
                                761,
                                762
                            ],
                            "children": [],
                            "content": "await authenticate_websocket"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "return",
                            "range": [
                                765,
                                765
                            ],
                            "children": [],
                            "content": ")"
                        }
                    ],
                    "content": "=await authenticate_websocket(websocket)\n"
                },
                {
                    "type": "CallExpression",
                    "name": "manager.connect",
                    "range": [
                        768,
                        773
                    ],
                    "children": [
                        {
                            "type": "Argument",
                            "name": "websocket",
                            "range": [
                                772,
                                772
                            ],
                            "children": [],
                            "content": "return"
                        }
                    ],
                    "content": "not user_id:\nreturn\n"
                },
                {
                    "type": "TryStatement",
                    "name": "try",
                    "range": [
                        775,
                        973
                    ],
                    "children": [
                        {
                            "type": "WhileStatement",
                            "name": "while",
                            "range": [
                                778,
                                955
                            ],
                            "children": [
                                {
                                    "type": "AssignmentExpression",
                                    "name": "data",
                                    "range": [
                                        782,
                                        789
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "websocket.receive_text",
                                            "range": [
                                                785,
                                                789
                                            ],
                                            "children": [],
                                            "content": "while True:\ndata"
                                        }
                                    ],
                                    "content": "try:\nwhile True:\ndata"
                                },
                                {
                                    "type": "AssignmentExpression",
                                    "name": "message",
                                    "range": [
                                        791,
                                        798
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "WsMessage.model_validate_json",
                                            "range": [
                                                793,
                                                798
                                            ],
                                            "children": [
                                                {
                                                    "type": "Argument",
                                                    "name": "data",
                                                    "range": [
                                                        797,
                                                        797
                                                    ],
                                                    "children": [],
                                                    "content": "\n"
                                                }
                                            ],
                                            "content": ".receive_text()\nmessage"
                                        }
                                    ],
                                    "content": "await websocket.receive_text()\nmessage"
                                },
                                {
                                    "type": "IfStatement",
                                    "name": "if",
                                    "range": [
                                        801,
                                        839
                                    ],
                                    "children": [
                                        {
                                            "type": "Condition",
                                            "name": "message.method == Methods.HEARTBEAT",
                                            "range": [
                                                802,
                                                809
                                            ],
                                            "children": [],
                                            "content": "model_validate_json(data)\n\nif message"
                                        },
                                        {
                                            "type": "CallExpression",
                                            "name": "websocket.send_json",
                                            "range": [
                                                813,
                                                836
                                            ],
                                            "children": [
                                                {
                                                    "type": "Argument",
                                                    "name": "{\"method\": Methods.HEARTBEAT.value, \"data\": \"pong\", \"success\": True}",
                                                    "range": [
                                                        817,
                                                        834
                                                    ],
                                                    "children": [],
                                                    "content": ":\nawait websocket.send_json(\n{\"method\":Methods.HEARTBEAT.value,\"data\""
                                                }
                                            ],
                                            "content": "=Methods.HEARTBEAT:\nawait websocket.send_json(\n{\"method\":Methods.HEARTBEAT.value,\"data\":\"pong\""
                                        },
                                        {
                                            "type": "ContinueStatement",
                                            "name": "continue",
                                            "range": [
                                                838,
                                                838
                                            ],
                                            "children": [],
                                            "content": "\"success\""
                                        }
                                    ],
                                    "content": ".model_validate_json(data)\n\nif message.method==Methods.HEARTBEAT:\nawait websocket.send_json(\n{\"method\":Methods.HEARTBEAT.value,\"data\":\"pong\",\"success\":"
                                },
                                {
                                    "type": "IfStatement",
                                    "name": "if",
                                    "range": [
                                        841,
                                        861
                                    ],
                                    "children": [
                                        {
                                            "type": "Condition",
                                            "name": "message.method == Methods.SUBSCRIBE",
                                            "range": [
                                                842,
                                                849
                                            ],
                                            "children": [],
                                            "content": "\n)\ncontinue\n\nif message"
                                        },
                                        {
                                            "type": "CallExpression",
                                            "name": "handle_subscribe",
                                            "range": [
                                                853,
                                                860
                                            ],
                                            "children": [
                                                {
                                                    "type": "Argument",
                                                    "name": "websocket",
                                                    "range": [
                                                        855,
                                                        855
                                                    ],
                                                    "children": [],
                                                    "content": "."
                                                },
                                                {
                                                    "type": "Argument",
                                                    "name": "manager",
                                                    "range": [
                                                        857,
                                                        857
                                                    ],
                                                    "children": [],
                                                    "content": ":"
                                                },
                                                {
                                                    "type": "Argument",
                                                    "name": "message",
                                                    "range": [
                                                        859,
                                                        859
                                                    ],
                                                    "children": [],
                                                    "content": "await"
                                                }
                                            ],
                                            "content": "=Methods.SUBSCRIBE:\nawait handle_subscribe"
                                        }
                                    ],
                                    "content": "}\n)\ncontinue\n\nif message.method==Methods.SUBSCRIBE:\nawait handle_subscribe("
                                },
                                {
                                    "type": "IfStatement",
                                    "name": "elif",
                                    "range": [
                                        863,
                                        883
                                    ],
                                    "children": [
                                        {
                                            "type": "Condition",
                                            "name": "message.method == Methods.UNSUBSCRIBE",
                                            "range": [
                                                864,
                                                871
                                            ],
                                            "children": [],
                                            "content": "manager,message)\n\nelif message"
                                        },
                                        {
                                            "type": "CallExpression",
                                            "name": "handle_unsubscribe",
                                            "range": [
                                                875,
                                                882
                                            ],
                                            "children": [
                                                {
                                                    "type": "Argument",
                                                    "name": "websocket",
                                                    "range": [
                                                        877,
                                                        877
                                                    ],
                                                    "children": [],
                                                    "content": "."
                                                },
                                                {
                                                    "type": "Argument",
                                                    "name": "manager",
                                                    "range": [
                                                        879,
                                                        879
                                                    ],
                                                    "children": [],
                                                    "content": ":"
                                                },
                                                {
                                                    "type": "Argument",
                                                    "name": "message",
                                                    "range": [
                                                        881,
                                                        881
                                                    ],
                                                    "children": [],
                                                    "content": "await"
                                                }
                                            ],
                                            "content": "=Methods.UNSUBSCRIBE:\nawait handle_unsubscribe"
                                        }
                                    ],
                                    "content": ",manager,message)\n\nelif message.method==Methods.UNSUBSCRIBE:\nawait handle_unsubscribe("
                                },
                                {
                                    "type": "IfStatement",
                                    "name": "elif",
                                    "range": [
                                        885,
                                        904
                                    ],
                                    "children": [
                                        {
                                            "type": "Condition",
                                            "name": "message.method == Methods.ERROR",
                                            "range": [
                                                886,
                                                893
                                            ],
                                            "children": [],
                                            "content": "manager,message)\n\nelif message"
                                        },
                                        {
                                            "type": "CallExpression",
                                            "name": "logger.error",
                                            "range": [
                                                896,
                                                902
                                            ],
                                            "children": [
                                                {
                                                    "type": "Argument",
                                                    "name": "f\"WebSocket Error message received: {message.data}\"",
                                                    "range": [
                                                        900,
                                                        901
                                                    ],
                                                    "children": [],
                                                    "content": "ERROR:"
                                                }
                                            ],
                                            "content": "==Methods.ERROR:\n"
                                        }
                                    ],
                                    "content": ",manager,message)\n\nelif message.method==Methods.ERROR:\nlogger."
                                },
                                {
                                    "type": "ElseStatement",
                                    "name": "else",
                                    "range": [
                                        905,
                                        954
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "logger.warning",
                                            "range": [
                                                908,
                                                919
                                            ],
                                            "children": [
                                                {
                                                    "type": "Argument",
                                                    "name": "f\"Unknown WebSocket message type {message.method} received: \"",
                                                    "range": [
                                                        913,
                                                        914
                                                    ],
                                                    "children": [],
                                                    "content": ":\n"
                                                },
                                                {
                                                    "type": "Argument",
                                                    "name": "f\"{message.data}\"",
                                                    "range": [
                                                        916,
                                                        917
                                                    ],
                                                    "children": [],
                                                    "content": ".warning"
                                                }
                                            ],
                                            "content": "\"WebSocket Error message received: {message.data}\")\n\nelse:\nlogger.warning(\n"
                                        },
                                        {
                                            "type": "CallExpression",
                                            "name": "websocket.send_text",
                                            "range": [
                                                921,
                                                953
                                            ],
                                            "children": [
                                                {
                                                    "type": "Argument",
                                                    "name": "WsMessage(method=Methods.ERROR, success=False, error=\"Message type is not processed by the server\").model_dump_json()",
                                                    "range": [
                                                        927,
                                                        951
                                                    ],
                                                    "children": [],
                                                    "content": "\nawait websocket.send_text(\nWsMessage(\nmethod=Methods.ERROR,\nsuccess=False,\nerror=\"Message type is not processed by the server\""
                                                }
                                            ],
                                            "content": "\"Unknown WebSocket message type {message.method} received: \"\nf \"{message.data}\"\n)\nawait websocket.send_text(\nWsMessage(\nmethod=Methods.ERROR,\nsuccess=False,\nerror=\"Message type is not processed by the server\",\n"
                                        }
                                    ],
                                    "content": "error(f \"WebSocket Error message received: {message.data}\")\n\nelse:\nlogger.warning(\nf \"Unknown WebSocket message type {message.method} received: \"\nf \"{message.data}\"\n)\nawait websocket.send_text(\nWsMessage(\nmethod=Methods.ERROR,\nsuccess=False,\nerror=\"Message type is not processed by the server\",\n)"
                                }
                            ],
                            "content": "(websocket)\ntry:\nwhile True:\ndata=await websocket.receive_text()\nmessage=WsMessage.model_validate_json(data)\n\nif message.method==Methods.HEARTBEAT:\nawait websocket.send_json(\n{\"method\":Methods.HEARTBEAT.value,\"data\":\"pong\",\"success\":True}\n)\ncontinue\n\nif message.method==Methods.SUBSCRIBE:\nawait handle_subscribe(websocket,manager,message)\n\nelif message.method==Methods.UNSUBSCRIBE:\nawait handle_unsubscribe(websocket,manager,message)\n\nelif message.method==Methods.ERROR:\nlogger.error(f \"WebSocket Error message received: {message.data}\")\n\nelse:\nlogger.warning(\nf \"Unknown WebSocket message type {message.method} received: \"\nf \"{message.data}\"\n)\nawait websocket.send_text(\nWsMessage(\nmethod=Methods.ERROR,\nsuccess=False,\nerror=\"Message type is not processed by the server\",\n)."
                        },
                        {
                            "type": "ExceptStatement",
                            "name": "except",
                            "range": [
                                956,
                                973
                            ],
                            "children": [
                                {
                                    "type": "Exception",
                                    "name": "WebSocketDisconnect",
                                    "range": [
                                        957,
                                        957
                                    ],
                                    "children": [],
                                    "content": "("
                                },
                                {
                                    "type": "CallExpression",
                                    "name": "manager.disconnect",
                                    "range": [
                                        960,
                                        965
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "websocket",
                                            "range": [
                                                964,
                                                964
                                            ],
                                            "children": [],
                                            "content": "WebSocketDisconnect"
                                        }
                                    ],
                                    "content": ")\n\nexcept WebSocketDisconnect:"
                                },
                                {
                                    "type": "CallExpression",
                                    "name": "logger.debug",
                                    "range": [
                                        967,
                                        972
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "\"WebSocket client disconnected\"",
                                            "range": [
                                                971,
                                                971
                                            ],
                                            "children": [],
                                            "content": "websocket"
                                        }
                                    ],
                                    "content": "manager.disconnect(websocket)"
                                }
                            ],
                            "content": "model_dump_json()\n)\n\nexcept WebSocketDisconnect:\nmanager.disconnect(websocket)\n"
                        }
                    ],
                    "content": "manager.connect(websocket)\ntry:\nwhile True:\ndata=await websocket.receive_text()\nmessage=WsMessage.model_validate_json(data)\n\nif message.method==Methods.HEARTBEAT:\nawait websocket.send_json(\n{\"method\":Methods.HEARTBEAT.value,\"data\":\"pong\",\"success\":True}\n)\ncontinue\n\nif message.method==Methods.SUBSCRIBE:\nawait handle_subscribe(websocket,manager,message)\n\nelif message.method==Methods.UNSUBSCRIBE:\nawait handle_unsubscribe(websocket,manager,message)\n\nelif message.method==Methods.ERROR:\nlogger.error(f \"WebSocket Error message received: {message.data}\")\n\nelse:\nlogger.warning(\nf \"Unknown WebSocket message type {message.method} received: \"\nf \"{message.data}\"\n)\nawait websocket.send_text(\nWsMessage(\nmethod=Methods.ERROR,\nsuccess=False,\nerror=\"Message type is not processed by the server\",\n).model_dump_json()\n)\n\nexcept WebSocketDisconnect:\nmanager.disconnect(websocket)\n"
                }
            ],
            "content": "app.websocket(\"/ws\")\nasync def websocket_router(\nwebsocket:WebSocket,manager:ConnectionManager=Depends(get_connection_manager)\n):\nuser_id=await authenticate_websocket(websocket)\nif not user_id:\nreturn\nawait manager.connect(websocket)\ntry:\nwhile True:\ndata=await websocket.receive_text()\nmessage=WsMessage.model_validate_json(data)\n\nif message.method==Methods.HEARTBEAT:\nawait websocket.send_json(\n{\"method\":Methods.HEARTBEAT.value,\"data\":\"pong\",\"success\":True}\n)\ncontinue\n\nif message.method==Methods.SUBSCRIBE:\nawait handle_subscribe(websocket,manager,message)\n\nelif message.method==Methods.UNSUBSCRIBE:\nawait handle_unsubscribe(websocket,manager,message)\n\nelif message.method==Methods.ERROR:\nlogger.error(f \"WebSocket Error message received: {message.data}\")\n\nelse:\nlogger.warning(\nf \"Unknown WebSocket message type {message.method} received: \"\nf \"{message.data}\"\n)\nawait websocket.send_text(\nWsMessage(\nmethod=Methods.ERROR,\nsuccess=False,\nerror=\"Message type is not processed by the server\",\n).model_dump_json()\n)\n\nexcept WebSocketDisconnect:\nmanager.disconnect(websocket)\nlogger"
        },
        {
            "type": "ClassDecl",
            "name": "WebsocketServer",
            "range": [
                975,
                979
            ],
            "children": [
                {
                    "type": "FunctionDecl",
                    "name": "run",
                    "range": [
                        982,
                        1064
                    ],
                    "children": [
                        {
                            "type": "BlockStatement",
                            "name": "",
                            "range": [
                                988,
                                1064
                            ],
                            "children": [
                                {
                                    "type": "ExpressionStatement",
                                    "name": "",
                                    "range": [
                                        989,
                                        996
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "logger.info",
                                            "range": [
                                                989,
                                                995
                                            ],
                                            "children": [
                                                {
                                                    "type": "Literal",
                                                    "name": "\"CORS allow origins: {settings.config.backend_cors_allow_origins}\"",
                                                    "range": [
                                                        993,
                                                        994
                                                    ],
                                                    "children": [],
                                                    "content": "self)"
                                                }
                                            ],
                                            "content": "\ndef run(self):"
                                        }
                                    ],
                                    "content": "\ndef run(self):\n"
                                },
                                {
                                    "type": "VariableDeclaration",
                                    "name": "server_app",
                                    "range": [
                                        997,
                                        1035
                                    ],
                                    "children": [
                                        {
                                            "type": "AssignmentExpression",
                                            "name": "=",
                                            "range": [
                                                997,
                                                1035
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "server_app",
                                                    "range": [
                                                        997,
                                                        1006
                                                    ],
                                                    "children": [],
                                                    "content": "logger.info(f \"CORS allow origins: {settings.config.backend_cors_allow_origins}\")\nserver_app="
                                                },
                                                {
                                                    "type": "NewExpression",
                                                    "name": "CORSMiddleware",
                                                    "range": [
                                                        999,
                                                        1035
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "ObjectExpression",
                                                            "name": "",
                                                            "range": [
                                                                1000,
                                                                1035
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "Property",
                                                                    "name": "app",
                                                                    "range": [
                                                                        1002,
                                                                        1005
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "app",
                                                                            "range": [
                                                                                1004,
                                                                                1004
                                                                            ],
                                                                            "children": [],
                                                                            "content": "\n"
                                                                        }
                                                                    ],
                                                                    "content": "\"CORS allow origins: {settings.config.backend_cors_allow_origins}\")\nserver_app"
                                                                },
                                                                {
                                                                    "type": "Property",
                                                                    "name": "allow_origins",
                                                                    "range": [
                                                                        1007,
                                                                        1014
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "MemberExpression",
                                                                            "name": "settings.config.backend_cors_allow_origins",
                                                                            "range": [
                                                                                1009,
                                                                                1013
                                                                            ],
                                                                            "children": [],
                                                                            "content": "\napp=app,"
                                                                        }
                                                                    ],
                                                                    "content": "CORSMiddleware(\napp=app,\n"
                                                                },
                                                                {
                                                                    "type": "Property",
                                                                    "name": "allow_credentials",
                                                                    "range": [
                                                                        1016,
                                                                        1019
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "Literal",
                                                                            "name": "True",
                                                                            "range": [
                                                                                1018,
                                                                                1018
                                                                            ],
                                                                            "children": [],
                                                                            "content": "."
                                                                        }
                                                                    ],
                                                                    "content": "=settings.config"
                                                                },
                                                                {
                                                                    "type": "Property",
                                                                    "name": "allow_methods",
                                                                    "range": [
                                                                        1021,
                                                                        1026
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "ArrayExpression",
                                                                            "name": "",
                                                                            "range": [
                                                                                1023,
                                                                                1025
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "name": "\"*\"",
                                                                                    "range": [
                                                                                        1024,
                                                                                        1024
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "allow_credentials"
                                                                                }
                                                                            ],
                                                                            "content": "\nallow_credentials="
                                                                        }
                                                                    ],
                                                                    "content": "backend_cors_allow_origins,\nallow_credentials=True"
                                                                },
                                                                {
                                                                    "type": "Property",
                                                                    "name": "allow_headers",
                                                                    "range": [
                                                                        1028,
                                                                        1033
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                            "type": "ArrayExpression",
                                                                            "name": "",
                                                                            "range": [
                                                                                1030,
                                                                                1032
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                    "type": "Literal",
                                                                                    "name": "\"*\"",
                                                                                    "range": [
                                                                                        1031,
                                                                                        1031
                                                                                    ],
                                                                                    "children": [],
                                                                                    "content": "["
                                                                                }
                                                                            ],
                                                                            "content": "=[\"*\""
                                                                        }
                                                                    ],
                                                                    "content": "\nallow_methods=[\"*\"]"
                                                                }
                                                            ],
                                                            "content": "(f \"CORS allow origins: {settings.config.backend_cors_allow_origins}\")\nserver_app=CORSMiddleware(\napp=app,\nallow_origins=settings.config.backend_cors_allow_origins,\nallow_credentials=True,\nallow_methods=[\"*\"],\n"
                                                        }
                                                    ],
                                                    "content": "info(f \"CORS allow origins: {settings.config.backend_cors_allow_origins}\")\nserver_app=CORSMiddleware(\napp=app,\nallow_origins=settings.config.backend_cors_allow_origins,\nallow_credentials=True,\nallow_methods=[\"*\"],\n"
                                                }
                                            ],
                                            "content": "logger.info(f \"CORS allow origins: {settings.config.backend_cors_allow_origins}\")\nserver_app=CORSMiddleware(\napp=app,\nallow_origins=settings.config.backend_cors_allow_origins,\nallow_credentials=True,\nallow_methods=[\"*\"],\n"
                                        }
                                    ],
                                    "content": "logger.info(f \"CORS allow origins: {settings.config.backend_cors_allow_origins}\")\nserver_app=CORSMiddleware(\napp=app,\nallow_origins=settings.config.backend_cors_allow_origins,\nallow_credentials=True,\nallow_methods=[\"*\"],\n"
                                },
                                {
                                    "type": "ExpressionStatement",
                                    "name": "",
                                    "range": [
                                        1037,
                                        1063
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "uvicorn.run",
                                            "range": [
                                                1037,
                                                1063
                                            ],
                                            "children": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "server_app",
                                                    "range": [
                                                        1042,
                                                        1043
                                                    ],
                                                    "children": [],
                                                    "content": "\n)"
                                                },
                                                {
                                                    "type": "ObjectExpression",
                                                    "name": "",
                                                    "range": [
                                                        1045,
                                                        1061
                                                    ],
                                                    "children": [
                                                        {
                                                            "type": "Property",
                                                            "name": "host",
                                                            "range": [
                                                                1045,
                                                                1052
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "name": "Config().websocket_server_host",
                                                                    "range": [
                                                                        1047,
                                                                        1051
                                                                    ],
                                                                    "children": [],
                                                                    "content": "run(\nserver_app,"
                                                                }
                                                            ],
                                                            "content": "uvicorn.run(\nserver_app,\n"
                                                        },
                                                        {
                                                            "type": "Property",
                                                            "name": "port",
                                                            "range": [
                                                                1054,
                                                                1061
                                                            ],
                                                            "children": [
                                                                {
                                                                    "type": "MemberExpression",
                                                                    "name": "Config().websocket_server_port",
                                                                    "range": [
                                                                        1056,
                                                                        1060
                                                                    ],
                                                                    "children": [],
                                                                    "content": "().websocket_server_host,"
                                                                }
                                                            ],
                                                            "content": "=Config().websocket_server_host,\n"
                                                        }
                                                    ],
                                                    "content": "uvicorn.run(\nserver_app,\nhost=Config().websocket_server_host,\n"
                                                }
                                            ],
                                            "content": "=[\"*\"],\n)\nuvicorn.run(\nserver_app,\nhost=Config().websocket_server_host,\nport="
                                        }
                                    ],
                                    "content": "=[\"*\"],\n)\nuvicorn.run(\nserver_app,\nhost=Config().websocket_server_host,\nport="
                                }
                            ],
                            "content": ":\ndef run(self):\nlogger.info(f \"CORS allow origins: {settings.config.backend_cors_allow_origins}\")\nserver_app=CORSMiddleware(\napp=app,\nallow_origins=settings.config.backend_cors_allow_origins,\nallow_credentials=True,\nallow_methods=[\"*\"],\nallow_headers=[\"*\"],\n)\nuvicorn.run(\nserver_app,\nhost=Config().websocket_server_host,\nport=Config"
                        }
                    ],
                    "content": "\nclass WebsocketServer(AppProcess):\ndef run(self):\nlogger.info(f \"CORS allow origins: {settings.config.backend_cors_allow_origins}\")\nserver_app=CORSMiddleware(\napp=app,\nallow_origins=settings.config.backend_cors_allow_origins,\nallow_credentials=True,\nallow_methods=[\"*\"],\nallow_headers=[\"*\"],\n)\nuvicorn.run(\nserver_app,\nhost=Config().websocket_server_host,\nport=Config"
                }
            ],
            "content": ".debug(\"WebSocket client disconnected\")"
        }
    ],
    "content": "import asyncio\nimport logging\nfrom contextlib import asynccontextmanager\n\nimport uvicorn\nfrom autogpt_libs.auth import parse_jwt_token\nfrom fastapi import Depends,FastAPI,WebSocket,WebSocketDisconnect\nfrom starlette.middleware.cors import CORSMiddleware\n\nfrom backend.data import redis\nfrom backend.data.execution import AsyncRedisExecutionEventBus\nfrom backend.data.user import DEFAULT_USER_ID\nfrom backend.server.conn_manager import ConnectionManager\nfrom backend.server.model import ExecutionSubscription,Methods,WsMessage\nfrom backend.util.service import AppProcess\nfrom backend.util.settings import AppEnvironment,Config,Settings\n\nlogger=logging.getLogger(__name__)\nsettings=Settings()\n\n\n@asynccontextmanager\nasync def lifespan(app:FastAPI):\nmanager=get_connection_manager()\nfut=asyncio.create_task(event_broadcaster(manager))\nfut.add_done_callback(lambda _:logger.info(\"Event broadcaster stopped\"))\nyield\n\n\ndocs_url=\"/docs\" if settings.config.app_env==AppEnvironment.LOCAL else None\napp=FastAPI(lifespan=lifespan,docs_url=docs_url)\n_connection_manager=None\n\n\ndef get_connection_manager():\nglobal _connection_manager\nif _connection_manager is None:\n_connection_manager=ConnectionManager()\nreturn _connection_manager\n\n\nasync def event_broadcaster(manager:ConnectionManager):\ntry:\nredis.connect()\nevent_queue=AsyncRedisExecutionEventBus()\nasync for event in event_queue.listen():\nawait manager.send_execution_result(event)\nexcept Exception as e:\nlogger.exception(f \"Event broadcaster error: {e}\")\nraise\nfinally:\nredis.disconnect()\n\n\nasync def authenticate_websocket(websocket:WebSocket)->str:\nif not settings.config.enable_auth:\nreturn DEFAULT_USER_ID\n\ntoken=websocket.query_params.get(\"token\")\nif not token:\nawait websocket.close(code=4001,reason=\"Missing authentication token\")\nreturn\"\"\n\ntry:\npayload=parse_jwt_token(token)\nuser_id=payload.get(\"sub\")\nif not user_id:\nawait websocket.close(code=4002,reason=\"Invalid token\")\nreturn\"\"\nreturn user_id\nexcept ValueError:\nawait websocket.close(code=4003,reason=\"Invalid token\")\nreturn\"\"\n\n\nasync def handle_subscribe(\nwebsocket:WebSocket,manager:ConnectionManager,message:WsMessage\n):\nif not message.data:\nawait websocket.send_text(\nWsMessage(\nmethod=Methods.ERROR,\nsuccess=False,\nerror=\"Subscription data missing\",\n).model_dump_json()\n)\nelse:\nex_sub=ExecutionSubscription.model_validate(message.data)\nawait manager.subscribe(ex_sub.graph_id,websocket)\nlogger.debug(f \"New execution subscription for graph {ex_sub.graph_id}\")\nawait websocket.send_text(\nWsMessage(\nmethod=Methods.SUBSCRIBE,\nsuccess=True,\nchannel=ex_sub.graph_id,\n).model_dump_json()\n)\n\n\nasync def handle_unsubscribe(\nwebsocket:WebSocket,manager:ConnectionManager,message:WsMessage\n):\nif not message.data:\nawait websocket.send_text(\nWsMessage(\nmethod=Methods.ERROR,\nsuccess=False,\nerror=\"Subscription data missing\",\n).model_dump_json()\n)\nelse:\nex_sub=ExecutionSubscription.model_validate(message.data)\nawait manager.unsubscribe(ex_sub.graph_id,websocket)\nlogger.debug(f \"Removed execution subscription for graph {ex_sub.graph_id}\")\nawait websocket.send_text(\nWsMessage(\nmethod=Methods.UNSUBSCRIBE,\nsuccess=True,\nchannel=ex_sub.graph_id,\n).model_dump_json()\n)\n\n\n@app.get(\"/\")\nasync def health():\nreturn{\"status\":\"healthy\"}\n\n\n@app.websocket(\"/ws\")\nasync def websocket_router(\nwebsocket:WebSocket,manager:ConnectionManager=Depends(get_connection_manager)\n):\nuser_id=await authenticate_websocket(websocket)\nif not user_id:\nreturn\nawait manager.connect(websocket)\ntry:\nwhile True:\ndata=await websocket.receive_text()\nmessage=WsMessage.model_validate_json(data)\n\nif message.method==Methods.HEARTBEAT:\nawait websocket.send_json(\n{\"method\":Methods.HEARTBEAT.value,\"data\":\"pong\",\"success\":True}\n)\ncontinue\n\nif message.method==Methods.SUBSCRIBE:\nawait handle_subscribe(websocket,manager,message)\n\nelif message.method==Methods.UNSUBSCRIBE:\nawait handle_unsubscribe(websocket,manager,message)\n\nelif message.method==Methods.ERROR:\nlogger.error(f \"WebSocket Error message received: {message.data}\")\n\nelse:\nlogger.warning(\nf \"Unknown WebSocket message type {message.method} received: \"\nf \"{message.data}\"\n)\nawait websocket.send_text(\nWsMessage(\nmethod=Methods.ERROR,\nsuccess=False,\nerror=\"Message type is not processed by the server\",\n).model_dump_json()\n)\n\nexcept WebSocketDisconnect:\nmanager.disconnect(websocket)\nlogger.debug(\"WebSocket client disconnected\")\n\n\nclass WebsocketServer(AppProcess):\ndef run(self):\nlogger.info(f \"CORS allow origins: {settings.config.backend_cors_allow_origins}\")\nserver_app=CORSMiddleware(\napp=app,\nallow_origins=settings.config.backend_cors_allow_origins,\nallow_credentials=True,\nallow_methods=[\"*\"],\nallow_headers=[\"*\"],\n)\nuvicorn.run(\nserver_app,\nhost=Config().websocket_server_host,\nport=Config("
}