{
    "type": "Program",
    "name": "Global",
    "range": [
        30,
        206
    ],
    "children": [
        {
            "type": "ClassDecl",
            "name": "TextDecoderBlock",
            "range": [
                30,
                36
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "Block",
                    "range": [
                        32,
                        34
                    ],
                    "children": [],
                    "content": "(Block)"
                }
            ],
            "content": "class TextDecoderBlock(Block):\n"
        },
        {
            "type": "ClassDecl",
            "name": "Input",
            "range": [
                37,
                43
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "BlockSchema",
                    "range": [
                        39,
                        41
                    ],
                    "children": [],
                    "content": "(BlockSchema)"
                },
                {
                    "type": "VariableDecl",
                    "name": "text",
                    "range": [
                        44,
                        62
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                46,
                                48
                            ],
                            "children": [],
                            "content": "str=SchemaField"
                        },
                        {
                            "type": "Assignment",
                            "name": "=",
                            "range": [
                                47,
                                61
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "SchemaField",
                                    "range": [
                                        48,
                                        61
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "description",
                                            "range": [
                                                51,
                                                53
                                            ],
                                            "children": [],
                                            "content": "description=\"A string containing escaped characters to be decoded\""
                                        },
                                        {
                                            "type": "Argument",
                                            "name": "placeholder",
                                            "range": [
                                                56,
                                                58
                                            ],
                                            "children": [],
                                            "content": "placeholder='Your entire text block with \\\\n and \\\\\" escaped characters'"
                                        }
                                    ],
                                    "content": "SchemaField(\ndescription=\"A string containing escaped characters to be decoded\",\nplaceholder='Your entire text block with \\\\n and \\\\\" escaped characters',\n)"
                                }
                            ],
                            "content": "=SchemaField(\ndescription=\"A string containing escaped characters to be decoded\",\nplaceholder='Your entire text block with \\\\n and \\\\\" escaped characters',\n)"
                        }
                    ],
                    "content": "text:str=SchemaField(\ndescription=\"A string containing escaped characters to be decoded\",\nplaceholder='Your entire text block with \\\\n and \\\\\" escaped characters',\n)\n"
                }
            ],
            "content": "class Input(BlockSchema):\n"
        },
        {
            "type": "ClassDecl",
            "name": "Output",
            "range": [
                64,
                70
            ],
            "children": [
                {
                    "type": "Inheritance",
                    "name": "BlockSchema",
                    "range": [
                        66,
                        68
                    ],
                    "children": [],
                    "content": "(BlockSchema)"
                },
                {
                    "type": "VariableDecl",
                    "name": "decoded_text",
                    "range": [
                        71,
                        83
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "str",
                            "range": [
                                73,
                                75
                            ],
                            "children": [],
                            "content": "str=SchemaField"
                        },
                        {
                            "type": "Assignment",
                            "name": "=",
                            "range": [
                                74,
                                82
                            ],
                            "children": [
                                {
                                    "type": "CallExpression",
                                    "name": "SchemaField",
                                    "range": [
                                        75,
                                        82
                                    ],
                                    "children": [
                                        {
                                            "type": "Argument",
                                            "name": "description",
                                            "range": [
                                                78,
                                                80
                                            ],
                                            "children": [],
                                            "content": "description=\"The decoded text with escape sequences processed\""
                                        }
                                    ],
                                    "content": "SchemaField(\ndescription=\"The decoded text with escape sequences processed\"\n)"
                                }
                            ],
                            "content": "=SchemaField(\ndescription=\"The decoded text with escape sequences processed\"\n)"
                        }
                    ],
                    "content": "decoded_text:str=SchemaField(\ndescription=\"The decoded text with escape sequences processed\"\n)\n"
                }
            ],
            "content": "class Output(BlockSchema):\n"
        },
        {
            "type": "FunctionDecl",
            "name": "__init__",
            "range": [
                85,
                168
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "self",
                    "range": [
                        88,
                        89
                    ],
                    "children": [],
                    "content": "self)"
                },
                {
                    "type": "CallExpression",
                    "name": "super",
                    "range": [
                        92,
                        167
                    ],
                    "children": [
                        {
                            "type": "Argument",
                            "name": "id",
                            "range": [
                                99,
                                101
                            ],
                            "children": [],
                            "content": "id=\"2570e8fe-8447-43ed-84c7-70d657923231\""
                        },
                        {
                            "type": "Argument",
                            "name": "description",
                            "range": [
                                104,
                                106
                            ],
                            "children": [],
                            "content": "description=\"Decodes a string containing escape sequences into actual text\""
                        },
                        {
                            "type": "Argument",
                            "name": "categories",
                            "range": [
                                109,
                                115
                            ],
                            "children": [],
                            "content": "categories={BlockCategory.TEXT}"
                        },
                        {
                            "type": "Argument",
                            "name": "input_schema",
                            "range": [
                                118,
                                123
                            ],
                            "children": [],
                            "content": "input_schema=TextDecoderBlock.Input,"
                        },
                        {
                            "type": "Argument",
                            "name": "output_schema",
                            "range": [
                                125,
                                129
                            ],
                            "children": [],
                            "content": "output_schema=TextDecoderBlock.Output"
                        },
                        {
                            "type": "Argument",
                            "name": "test_input",
                            "range": [
                                132,
                                143
                            ],
                            "children": [],
                            "content": "test_input={\"text\":\"\"\"Hello\\nWorld!\\nThis is a \\\" quoted\\\" string.\"\"\"}"
                        },
                        {
                            "type": "Argument",
                            "name": "test_output",
                            "range": [
                                146,
                                164
                            ],
                            "children": [],
                            "content": "test_output=[\n(\n\"decoded_text\",\n\"\"\"Hello \\n World! \\n This is a \" quoted \" string.\"\"\",\n)\n]"
                        }
                    ],
                    "content": "super().__init__(\nid=\"2570e8fe-8447-43ed-84c7-70d657923231\",\ndescription=\"Decodes a string containing escape sequences into actual text\",\ncategories={BlockCategory.TEXT},\ninput_schema=TextDecoderBlock.Input,\noutput_schema=TextDecoderBlock.Output,\ntest_input={\"text\":\"\"\"Hello\\nWorld!\\nThis is a \\\" quoted\\\" string.\"\"\"},\ntest_output=[\n(\n\"decoded_text\",\n\"\"\"Hello \\n World! \\n This is a \" quoted \" string.\"\"\",\n)\n],\n)"
                }
            ],
            "content": "def __init__(self):\nsuper().__init__(\nid=\"2570e8fe-8447-43ed-84c7-70d657923231\",\ndescription=\"Decodes a string containing escape sequences into actual text\",\ncategories={BlockCategory.TEXT},\ninput_schema=TextDecoderBlock.Input,\noutput_schema=TextDecoderBlock.Output,\ntest_input={\"text\":\"\"\"Hello\\nWorld!\\nThis is a \\\" quoted\\\" string.\"\"\"},\ntest_output=[\n(\n\"decoded_text\",\n\"\"\"Hello \\n World! \\n This is a \" quoted \" string.\"\"\",\n)\n],\n)\n"
        },
        {
            "type": "FunctionDecl",
            "name": "run",
            "range": [
                170,
                206
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "self",
                    "range": [
                        173,
                        174
                    ],
                    "children": [],
                    "content": "self,"
                },
                {
                    "type": "Parameter",
                    "name": "input_data",
                    "range": [
                        175,
                        177
                    ],
                    "children": [],
                    "content": "input_data:Input"
                },
                {
                    "type": "Parameter",
                    "name": "kwargs",
                    "range": [
                        181,
                        182
                    ],
                    "children": [],
                    "content": "kwargs)"
                },
                {
                    "type": "ReturnType",
                    "name": "BlockOutput",
                    "range": [
                        185,
                        186
                    ],
                    "children": [],
                    "content": "BlockOutput:"
                },
                {
                    "type": "CallExpression",
                    "name": "codecs.decode",
                    "range": [
                        190,
                        199
                    ],
                    "children": [
                        {
                            "type": "Argument",
                            "name": "input_data.text",
                            "range": [
                                194,
                                196
                            ],
                            "children": [],
                            "content": "input_data.text"
                        },
                        {
                            "type": "Argument",
                            "name": "unicode_escape",
                            "range": [
                                198,
                                199
                            ],
                            "children": [],
                            "content": "\"unicode_escape\")"
                        }
                    ],
                    "content": "codecs.decode(input_data.text,\"unicode_escape\")"
                },
                {
                    "type": "Yield",
                    "name": "yield",
                    "range": [
                        201,
                        205
                    ],
                    "children": [
                        {
                            "type": "Argument",
                            "name": "decoded_text",
                            "range": [
                                202,
                                204
                            ],
                            "children": [],
                            "content": "\"decoded_text\",decoded_text"
                        }
                    ],
                    "content": "yield \"decoded_text\",decoded_text\n"
                }
            ],
            "content": "def run(self,input_data:Input,**kwargs)->BlockOutput:\ndecoded_text=codecs.decode(input_data.text,\"unicode_escape\")\nyield \"decoded_text\",decoded_text\n"
        }
    ],
    "content": "class TextDecoderBlock(Block):\nclass Input(BlockSchema):\ntext:str=SchemaField(\ndescription=\"A string containing escaped characters to be decoded\",\nplaceholder='Your entire text block with \\\\n and \\\\\" escaped characters',\n)\n\nclass Output(BlockSchema):\ndecoded_text:str=SchemaField(\ndescription=\"The decoded text with escape sequences processed\"\n)\n\ndef __init__(self):\nsuper().__init__(\nid=\"2570e8fe-8447-43ed-84c7-70d657923231\",\ndescription=\"Decodes a string containing escape sequences into actual text\",\ncategories={BlockCategory.TEXT},\ninput_schema=TextDecoderBlock.Input,\noutput_schema=TextDecoderBlock.Output,\ntest_input={\"text\":\"\"\"Hello\\nWorld!\\nThis is a \\\" quoted\\\" string.\"\"\"},\ntest_output=[\n(\n\"decoded_text\",\n\"\"\"Hello \\n World! \\n This is a \" quoted \" string.\"\"\",\n)\n],\n)\n\ndef run(self,input_data:Input,**kwargs)->BlockOutput:\ndecoded_text=codecs.decode(input_data.text,\"unicode_escape\")\nyield \"decoded_text\",decoded_text\n"
}