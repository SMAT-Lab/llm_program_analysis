{
    "type": "Program",
    "name": "Global",
    "range": [
        5,
        318
    ],
    "children": [
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                5,
                9
            ],
            "children": [
                {
                    "type": "FromImport",
                    "name": "typing",
                    "range": [
                        5,
                        9
                    ],
                    "children": [
                        {
                            "type": "Import",
                            "name": "Annotated",
                            "range": [
                                7,
                                8
                            ],
                            "children": [],
                            "content": "import Annotated"
                        }
                    ],
                    "content": "from typing import Annotated\n"
                }
            ],
            "content": "from typing import Annotated\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                11,
                13
            ],
            "children": [
                {
                    "type": "Import",
                    "name": "fastapi",
                    "range": [
                        11,
                        12
                    ],
                    "children": [],
                    "content": "import fastapi"
                }
            ],
            "content": "import fastapi\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                15,
                21
            ],
            "children": [
                {
                    "type": "FromImport",
                    "name": "backend.data.analytics",
                    "range": [
                        15,
                        21
                    ],
                    "children": [],
                    "content": "import backend.data.analytics\n"
                }
            ],
            "content": "import backend.data.analytics\n"
        },
        {
            "type": "ImportDeclaration",
            "name": "",
            "range": [
                22,
                30
            ],
            "children": [
                {
                    "type": "FromImport",
                    "name": "backend.server.utils",
                    "range": [
                        22,
                        30
                    ],
                    "children": [
                        {
                            "type": "Import",
                            "name": "get_user_id",
                            "range": [
                                28,
                                29
                            ],
                            "children": [],
                            "content": "import get_user_id"
                        }
                    ],
                    "content": "from backend.server.utils import get_user_id\n"
                }
            ],
            "content": "from backend.server.utils import get_user_id\n"
        },
        {
            "type": "VariableDeclaration",
            "name": "router",
            "range": [
                32,
                39
            ],
            "children": [
                {
                    "type": "AssignmentExpression",
                    "name": "=",
                    "range": [
                        33,
                        34
                    ],
                    "children": [
                        {
                            "type": "CallExpression",
                            "name": "APIRouter",
                            "range": [
                                34,
                                38
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": ".",
                                    "range": [
                                        35,
                                        36
                                    ],
                                    "children": [
                                        {
                                            "type": "Identifier",
                                            "name": "fastapi",
                                            "range": [
                                                34,
                                                35
                                            ],
                                            "children": [],
                                            "content": "fastapi."
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "APIRouter",
                                            "range": [
                                                36,
                                                37
                                            ],
                                            "children": [],
                                            "content": "APIRouter("
                                        }
                                    ],
                                    "content": ".APIRouter"
                                }
                            ],
                            "content": "fastapi.APIRouter()"
                        }
                    ],
                    "content": "=fastapi"
                }
            ],
            "content": "router=fastapi.APIRouter()\n"
        },
        {
            "type": "RouterDeclaration",
            "name": "router.post",
            "range": [
                42,
                50
            ],
            "children": [
                {
                    "type": "Path",
                    "name": "path",
                    "range": [
                        47,
                        49
                    ],
                    "children": [],
                    "content": "path=\"/log_raw_metric\""
                }
            ],
            "content": "@router.post(path=\"/log_raw_metric\")"
        },
        {
            "type": "FunctionDecl",
            "name": "log_raw_metric",
            "range": [
                52,
                176
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "user_id",
                    "range": [
                        57,
                        69
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "Annotated",
                            "range": [
                                59,
                                69
                            ],
                            "children": [
                                {
                                    "type": "Type",
                                    "name": "str",
                                    "range": [
                                        61,
                                        61
                                    ],
                                    "children": [],
                                    "content": "str"
                                },
                                {
                                    "type": "Dependency",
                                    "name": "fastapi.Depends",
                                    "range": [
                                        63,
                                        68
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "get_user_id",
                                            "range": [
                                                67,
                                                67
                                            ],
                                            "children": [],
                                            "content": "get_user_id"
                                        }
                                    ],
                                    "content": "fastapi.Depends(get_user_id)"
                                }
                            ],
                            "content": "Annotated[str,fastapi.Depends(get_user_id)]"
                        }
                    ],
                    "content": "user_id:Annotated[str,fastapi.Depends(get_user_id)]"
                },
                {
                    "type": "Parameter",
                    "name": "metric_name",
                    "range": [
                        72,
                        90
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "Annotated",
                            "range": [
                                74,
                                90
                            ],
                            "children": [
                                {
                                    "type": "Type",
                                    "name": "str",
                                    "range": [
                                        76,
                                        76
                                    ],
                                    "children": [],
                                    "content": "str"
                                },
                                {
                                    "type": "Body",
                                    "name": "fastapi.Body",
                                    "range": [
                                        78,
                                        89
                                    ],
                                    "children": [
                                        {
                                            "type": "Embed",
                                            "name": "embed",
                                            "range": [
                                                86,
                                                88
                                            ],
                                            "children": [],
                                            "content": "embed=True"
                                        }
                                    ],
                                    "content": "fastapi.Body(...,embed=True)"
                                }
                            ],
                            "content": "Annotated[str,fastapi.Body(...,embed=True)]"
                        }
                    ],
                    "content": "metric_name:Annotated[str,fastapi.Body(...,embed=True)]"
                },
                {
                    "type": "Parameter",
                    "name": "metric_value",
                    "range": [
                        93,
                        111
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "Annotated",
                            "range": [
                                95,
                                111
                            ],
                            "children": [
                                {
                                    "type": "Type",
                                    "name": "float",
                                    "range": [
                                        97,
                                        97
                                    ],
                                    "children": [],
                                    "content": "float"
                                },
                                {
                                    "type": "Body",
                                    "name": "fastapi.Body",
                                    "range": [
                                        99,
                                        110
                                    ],
                                    "children": [
                                        {
                                            "type": "Embed",
                                            "name": "embed",
                                            "range": [
                                                107,
                                                109
                                            ],
                                            "children": [],
                                            "content": "embed=True"
                                        }
                                    ],
                                    "content": "fastapi.Body(...,embed=True)"
                                }
                            ],
                            "content": "Annotated[float,fastapi.Body(...,embed=True)]"
                        }
                    ],
                    "content": "metric_value:Annotated[float,fastapi.Body(...,embed=True)]"
                },
                {
                    "type": "Parameter",
                    "name": "data_string",
                    "range": [
                        114,
                        132
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "Annotated",
                            "range": [
                                116,
                                132
                            ],
                            "children": [
                                {
                                    "type": "Type",
                                    "name": "str",
                                    "range": [
                                        118,
                                        118
                                    ],
                                    "children": [],
                                    "content": "str"
                                },
                                {
                                    "type": "Body",
                                    "name": "fastapi.Body",
                                    "range": [
                                        120,
                                        131
                                    ],
                                    "children": [
                                        {
                                            "type": "Embed",
                                            "name": "embed",
                                            "range": [
                                                128,
                                                130
                                            ],
                                            "children": [],
                                            "content": "embed=True"
                                        }
                                    ],
                                    "content": "fastapi.Body(...,embed=True)"
                                }
                            ],
                            "content": "Annotated[str,fastapi.Body(...,embed=True)]"
                        }
                    ],
                    "content": "data_string:Annotated[str,fastapi.Body(...,embed=True)]"
                },
                {
                    "type": "FunctionBody",
                    "name": "log_raw_metric",
                    "range": [
                        135,
                        176
                    ],
                    "children": [
                        {
                            "type": "Assignment",
                            "name": "result",
                            "range": [
                                138,
                                170
                            ],
                            "children": [
                                {
                                    "type": "AwaitExpression",
                                    "name": "await",
                                    "range": [
                                        140,
                                        140
                                    ],
                                    "children": [
                                        {
                                            "type": "CallExpression",
                                            "name": "backend.data.analytics.log_raw_metric",
                                            "range": [
                                                141,
                                                170
                                            ],
                                            "children": [
                                                {
                                                    "type": "Argument",
                                                    "name": "user_id",
                                                    "range": [
                                                        150,
                                                        152
                                                    ],
                                                    "children": [],
                                                    "content": "user_id=user_id"
                                                },
                                                {
                                                    "type": "Argument",
                                                    "name": "metric_name",
                                                    "range": [
                                                        155,
                                                        157
                                                    ],
                                                    "children": [],
                                                    "content": "metric_name=metric_name"
                                                },
                                                {
                                                    "type": "Argument",
                                                    "name": "metric_value",
                                                    "range": [
                                                        160,
                                                        162
                                                    ],
                                                    "children": [],
                                                    "content": "metric_value=metric_value"
                                                },
                                                {
                                                    "type": "Argument",
                                                    "name": "data_string",
                                                    "range": [
                                                        165,
                                                        167
                                                    ],
                                                    "children": [],
                                                    "content": "data_string=data_string"
                                                }
                                            ],
                                            "content": "backend.data.analytics.log_raw_metric(\nuser_id=user_id,\nmetric_name=metric_name,\nmetric_value=metric_value,\ndata_string=data_string,\n)"
                                        }
                                    ],
                                    "content": "await"
                                }
                            ],
                            "content": "result=await backend.data.analytics.log_raw_metric(\nuser_id=user_id,\nmetric_name=metric_name,\nmetric_value=metric_value,\ndata_string=data_string,\n)"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "return",
                            "range": [
                                172,
                                176
                            ],
                            "children": [
                                {
                                    "type": "MemberExpression",
                                    "name": "result.id",
                                    "range": [
                                        173,
                                        175
                                    ],
                                    "children": [],
                                    "content": "result.id"
                                }
                            ],
                            "content": "return result.id\n"
                        }
                    ],
                    "content": "):\nresult=await backend.data.analytics.log_raw_metric(\nuser_id=user_id,\nmetric_name=metric_name,\nmetric_value=metric_value,\ndata_string=data_string,\n)\nreturn result.id\n"
                }
            ],
            "content": "async def log_raw_metric(\nuser_id:Annotated[str,fastapi.Depends(get_user_id)],\nmetric_name:Annotated[str,fastapi.Body(...,embed=True)],\nmetric_value:Annotated[float,fastapi.Body(...,embed=True)],\ndata_string:Annotated[str,fastapi.Body(...,embed=True)],\n):\nresult=await backend.data.analytics.log_raw_metric(\nuser_id=user_id,\nmetric_name=metric_name,\nmetric_value=metric_value,\ndata_string=data_string,\n)\nreturn result.id\n"
        },
        {
            "type": "Decorator",
            "name": "@router.post",
            "range": [
                177,
                183
            ],
            "children": [
                {
                    "type": "Argument",
                    "name": "\"/log_raw_analytics\"",
                    "range": [
                        182,
                        182
                    ],
                    "children": [],
                    "content": "post"
                }
            ],
            "content": "\n\n@router.post("
        },
        {
            "type": "FunctionDecl",
            "name": "log_raw_analytics",
            "range": [
                185,
                318
            ],
            "children": [
                {
                    "type": "Parameter",
                    "name": "user_id",
                    "range": [
                        190,
                        202
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "Annotated[str, fastapi.Depends(get_user_id)]",
                            "range": [
                                192,
                                202
                            ],
                            "children": [],
                            "content": "user_id:Annotated[str,fastapi.Depends(get_user_id"
                        }
                    ],
                    "content": "(\nuser_id:Annotated[str,fastapi.Depends(get_user_id"
                },
                {
                    "type": "Parameter",
                    "name": "type",
                    "range": [
                        205,
                        223
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "Annotated[str, fastapi.Body(..., embed=True)]",
                            "range": [
                                207,
                                223
                            ],
                            "children": [],
                            "content": "type:Annotated[str,fastapi.Body(...,embed=True"
                        }
                    ],
                    "content": ",\ntype:Annotated[str,fastapi.Body(...,embed=True"
                },
                {
                    "type": "Parameter",
                    "name": "data",
                    "range": [
                        226,
                        252
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "Annotated[dict, fastapi.Body(..., embed=True, description=\"The data to log\")]",
                            "range": [
                                228,
                                252
                            ],
                            "children": [],
                            "content": "data:Annotated[\ndict,\nfastapi.Body(...,embed=True,description=\"The data to log\"),"
                        }
                    ],
                    "content": ",\ndata:Annotated[\ndict,\nfastapi.Body(...,embed=True,description=\"The data to log\"),"
                },
                {
                    "type": "Parameter",
                    "name": "data_index",
                    "range": [
                        255,
                        286
                    ],
                    "children": [
                        {
                            "type": "TypeAnnotation",
                            "name": "Annotated[str, fastapi.Body(..., embed=True, description=\"Indexable field for any count based analytical measures like page order clicking, tutorial step completion, etc.\")]",
                            "range": [
                                257,
                                286
                            ],
                            "children": [],
                            "content": "data_index:Annotated[\nstr,\nfastapi.Body(\n...,\nembed=True,\ndescription=\"Indexable field for any count based analytical measures like page order clicking, tutorial step completion, etc.\",\n),"
                        }
                    ],
                    "content": ",\ndata_index:Annotated[\nstr,\nfastapi.Body(\n...,\nembed=True,\ndescription=\"Indexable field for any count based analytical measures like page order clicking, tutorial step completion, etc.\",\n),"
                },
                {
                    "type": "BlockStatement",
                    "name": "",
                    "range": [
                        289,
                        318
                    ],
                    "children": [
                        {
                            "type": "AssignmentExpression",
                            "name": "result = await backend.data.analytics.log_raw_analytics(user_id, type, data, data_index)",
                            "range": [
                                292,
                                312
                            ],
                            "children": [],
                            "content": ":\nresult=await backend.data.analytics.log_raw_analytics(\nuser_id,type,data,data_index"
                        },
                        {
                            "type": "ReturnStatement",
                            "name": "return result.id",
                            "range": [
                                314,
                                318
                            ],
                            "children": [],
                            "content": ")\nreturn result."
                        }
                    ],
                    "content": ",\n):\nresult=await backend.data.analytics.log_raw_analytics(\nuser_id,type,data,data_index\n)\nreturn result."
                }
            ],
            "content": ")\nasync def log_raw_analytics(\nuser_id:Annotated[str,fastapi.Depends(get_user_id)],\ntype:Annotated[str,fastapi.Body(...,embed=True)],\ndata:Annotated[\ndict,\nfastapi.Body(...,embed=True,description=\"The data to log\"),\n],\ndata_index:Annotated[\nstr,\nfastapi.Body(\n...,\nembed=True,\ndescription=\"Indexable field for any count based analytical measures like page order clicking, tutorial step completion, etc.\",\n),\n],\n):\nresult=await backend.data.analytics.log_raw_analytics(\nuser_id,type,data,data_index\n)\nreturn result."
        }
    ],
    "content": "from typing import Annotated\n\nimport fastapi\n\nimport backend.data.analytics\nfrom backend.server.utils import get_user_id\n\nrouter=fastapi.APIRouter()\n\n\n@router.post(path=\"/log_raw_metric\")\nasync def log_raw_metric(\nuser_id:Annotated[str,fastapi.Depends(get_user_id)],\nmetric_name:Annotated[str,fastapi.Body(...,embed=True)],\nmetric_value:Annotated[float,fastapi.Body(...,embed=True)],\ndata_string:Annotated[str,fastapi.Body(...,embed=True)],\n):\nresult=await backend.data.analytics.log_raw_metric(\nuser_id=user_id,\nmetric_name=metric_name,\nmetric_value=metric_value,\ndata_string=data_string,\n)\nreturn result.id\n\n\n@router.post(\"/log_raw_analytics\")\nasync def log_raw_analytics(\nuser_id:Annotated[str,fastapi.Depends(get_user_id)],\ntype:Annotated[str,fastapi.Body(...,embed=True)],\ndata:Annotated[\ndict,\nfastapi.Body(...,embed=True,description=\"The data to log\"),\n],\ndata_index:Annotated[\nstr,\nfastapi.Body(\n...,\nembed=True,\ndescription=\"Indexable field for any count based analytical measures like page order clicking, tutorial step completion, etc.\",\n),\n],\n):\nresult=await backend.data.analytics.log_raw_analytics(\nuser_id,type,data,data_index\n)\nreturn result."
}